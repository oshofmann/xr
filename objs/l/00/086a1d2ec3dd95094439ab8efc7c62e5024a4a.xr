var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kernel/power/suspend.c - Suspend to RAM and standby functionality.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2003 Patrick Mochel</span>", 
"<span class=\"comment\"> * Copyright (c) 2003 Open Source Development Lab</span>", 
"<span class=\"comment\"> * Copyright (c) 2009 Rafael J. Wysocki &lt;rjw@sisk.pl&gt;, Novell Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPLv2.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#suspend\">suspend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"power.h\"", 
"", 
"const char *const <a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#PM_SUSPEND_MAX\">PM_SUSPEND_MAX</a>] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#PM_SUSPEND_STANDBY\">PM_SUSPEND_STANDBY</a>]<span class=\"ts\"/>= \"standby\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#PM_SUSPEND_MEM\">PM_SUSPEND_MEM</a>]<span class=\"ts\"/>= \"mem\",", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#platform_suspend_ops\">platform_suspend_ops</a> *<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>suspend_set_ops - Set the global suspend method table.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ops:<span class=\"ts\"/>Pointer to ops structure.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#suspend_set_ops\">suspend_set_ops</a>(struct <a class=\"id\" href=\"#platform_suspend_ops\">platform_suspend_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#pm_mutex\">pm_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_ops\">suspend_ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#pm_mutex\">pm_mutex</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#valid_state\">valid_state</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All states need lowlevel support and need to be valid to the lowlevel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * implementation, no valid callback implies that none are valid.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#suspend_ops\">suspend_ops</a> && <a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#valid\">valid</a> && <a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#valid\">valid</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * suspend_valid_only_mem - generic memory-only valid callback</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Platform drivers that implement mem suspend only and only need</span>", 
"<span class=\"comment\"> * to check for that in their .valid callback can use this instead</span>", 
"<span class=\"comment\"> * of rolling their own .valid callback.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#suspend_valid_only_mem\">suspend_valid_only_mem</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#PM_SUSPEND_MEM\">PM_SUSPEND_MEM</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#suspend_test\">suspend_test</a>(int <a class=\"id\" href=\"#level\">level</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_DEBUG\">CONFIG_PM_DEBUG</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm_test_level\">pm_test_level</a> == <a class=\"id\" href=\"#level\">level</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"suspend debug: Waiting for 5 seconds.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mdelay\">mdelay</a>(5000);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_PM_DEBUG */</span>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>suspend_prepare - Do prep work before entering low-power state.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is common code that is called for each state that we're entering.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Run suspend notifiers, allocate a console and stop all processes.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#suspend_prepare\">suspend_prepare</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a> || !<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#enter\">enter</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_prepare_console\">pm_prepare_console</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm_notifier_call_chain\">pm_notifier_call_chain</a>(<a class=\"id\" href=\"#PM_SUSPEND_PREPARE\">PM_SUSPEND_PREPARE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Finish\">Finish</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#usermodehelper_disable\">usermodehelper_disable</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Finish\">Finish</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#suspend_freeze_processes\">suspend_freeze_processes</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_thaw_processes\">suspend_thaw_processes</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usermodehelper_enable\">usermodehelper_enable</a>();", 
" <a class=\"id\" href=\"#Finish\">Finish</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_notifier_call_chain\">pm_notifier_call_chain</a>(<a class=\"id\" href=\"#PM_POST_SUSPEND\">PM_POST_SUSPEND</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_restore_console\">pm_restore_console</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/* default implementation */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#weak\">weak</a>)) <a class=\"id\" href=\"#arch_suspend_disable_irqs\">arch_suspend_disable_irqs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"}", 
"", 
"<span class=\"comment\">/* default implementation */</span>", 
"void <a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#weak\">weak</a>)) <a class=\"id\" href=\"#arch_suspend_enable_irqs\">arch_suspend_enable_irqs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>suspend_enter - enter the desired system sleep state.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state:<span class=\"ts\"/><span class=\"ts\"/>state to enter</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function should be called after devices have been suspended.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#suspend_enter\">suspend_enter</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#prepare\">prepare</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#prepare\">prepare</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Platform_finish\">Platform_finish</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dpm_suspend_noirq\">dpm_suspend_noirq</a>(<a class=\"id\" href=\"#PMSG_SUSPEND\">PMSG_SUSPEND</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: Some devices failed to power down\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Platform_finish\">Platform_finish</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#prepare_late\">prepare_late</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#prepare_late\">prepare_late</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Platform_wake\">Platform_wake</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_test\">suspend_test</a>(<a class=\"id\" href=\"#TEST_PLATFORM\">TEST_PLATFORM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Platform_wake\">Platform_wake</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#disable_nonboot_cpus\">disable_nonboot_cpus</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> || <a class=\"id\" href=\"#suspend_test\">suspend_test</a>(<a class=\"id\" href=\"#TEST_CPUS\">TEST_CPUS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Enable_cpus\">Enable_cpus</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_suspend_disable_irqs\">arch_suspend_disable_irqs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_suspend\">sysdev_suspend</a>(<a class=\"id\" href=\"#PMSG_SUSPEND\">PMSG_SUSPEND</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#suspend_test\">suspend_test</a>(<a class=\"id\" href=\"#TEST_CORE\">TEST_CORE</a>) && <a class=\"id\" href=\"#pm_check_wakeup_events\">pm_check_wakeup_events</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#enter\">enter</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#events_check_enabled\">events_check_enabled</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysdev_resume\">sysdev_resume</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_suspend_enable_irqs\">arch_suspend_enable_irqs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
" <a class=\"id\" href=\"#Enable_cpus\">Enable_cpus</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_nonboot_cpus\">enable_nonboot_cpus</a>();", 
"", 
" <a class=\"id\" href=\"#Platform_wake\">Platform_wake</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#wake\">wake</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#wake\">wake</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpm_resume_noirq\">dpm_resume_noirq</a>(<a class=\"id\" href=\"#PMSG_RESUME\">PMSG_RESUME</a>);", 
"", 
" <a class=\"id\" href=\"#Platform_finish\">Platform_finish</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#finish\">finish</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#finish\">finish</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>suspend_devices_and_enter - suspend devices and enter the desired system</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sleep state.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state:<span class=\"ts\"/><span class=\"ts\"/>  state to enter</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#suspend_devices_and_enter\">suspend_devices_and_enter</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#saved_mask\">saved_mask</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#begin\">begin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#begin\">begin</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Close\">Close</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_console\">suspend_console</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#saved_mask\">saved_mask</a> = <a class=\"id\" href=\"#clear_gfp_allowed_mask\">clear_gfp_allowed_mask</a>(<a class=\"id\" href=\"#GFP_IOFS\">GFP_IOFS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_test_start\">suspend_test_start</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dpm_suspend_start\">dpm_suspend_start</a>(<a class=\"id\" href=\"#PMSG_SUSPEND\">PMSG_SUSPEND</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PM: Some devices failed to suspend\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Recover_platform\">Recover_platform</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_test_finish\">suspend_test_finish</a>(\"suspend devices\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_test\">suspend_test</a>(<a class=\"id\" href=\"#TEST_DEVICES\">TEST_DEVICES</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Recover_platform\">Recover_platform</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_enter\">suspend_enter</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"", 
" <a class=\"id\" href=\"#Resume_devices\">Resume_devices</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_test_start\">suspend_test_start</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dpm_resume_end\">dpm_resume_end</a>(<a class=\"id\" href=\"#PMSG_RESUME\">PMSG_RESUME</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_test_finish\">suspend_test_finish</a>(\"resume devices\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_gfp_allowed_mask\">set_gfp_allowed_mask</a>(<a class=\"id\" href=\"#saved_mask\">saved_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resume_console\">resume_console</a>();", 
" <a class=\"id\" href=\"#Close\">Close</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#end\">end</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
" <a class=\"id\" href=\"#Recover_platform\">Recover_platform</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#recover\">recover</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_ops\">suspend_ops</a>-><a class=\"id\" href=\"#recover\">recover</a>();", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#Resume_devices\">Resume_devices</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>suspend_finish - Do final work before exiting suspend sequence.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Call platform code to clean up, restart processes, and free the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>console that we've allocated. This is not called for suspend-to-disk.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#suspend_finish\">suspend_finish</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_thaw_processes\">suspend_thaw_processes</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#usermodehelper_enable\">usermodehelper_enable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_notifier_call_chain\">pm_notifier_call_chain</a>(<a class=\"id\" href=\"#PM_POST_SUSPEND\">PM_POST_SUSPEND</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_restore_console\">pm_restore_console</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>enter_state - Do common work of entering low-power state.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state:<span class=\"ts\"/><span class=\"ts\"/>pm_state structure for state we're entering.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Make sure we're the only ones trying to enter a sleep state. Fail</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if someone has beat us to it, since we don't want anything weird to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>happen when we wake up.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Then, do the setup for suspend, enter the state, and cleaup (after</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>we've woken up).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#enter_state\">enter_state</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#valid_state\">valid_state</a>(<a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mutex_trylock\">mutex_trylock</a>(&amp;<a class=\"id\" href=\"#pm_mutex\">pm_mutex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"PM: Syncing filesystems ... \");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_sync\">sys_sync</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"done.\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Preparing system for %s sleep\\n\", <a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#state\">state</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#suspend_prepare\">suspend_prepare</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Unlock\">Unlock</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#suspend_test\">suspend_test</a>(<a class=\"id\" href=\"#TEST_FREEZER\">TEST_FREEZER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Finish\">Finish</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Entering %s sleep\\n\", <a class=\"id\" href=\"#pm_states\">pm_states</a>[<a class=\"id\" href=\"#state\">state</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#suspend_devices_and_enter\">suspend_devices_and_enter</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"", 
" <a class=\"id\" href=\"#Finish\">Finish</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"PM: Finishing wakeup.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_finish\">suspend_finish</a>();", 
" <a class=\"id\" href=\"#Unlock\">Unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#pm_mutex\">pm_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pm_suspend - Externally visible function for suspending system.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state:<span class=\"ts\"/><span class=\"ts\"/>Enumerated value of state to enter.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Determine whether or not value is within range, get state</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>structure, and enter (above).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pm_suspend\">pm_suspend</a>(<a class=\"id\" href=\"#suspend_state_t\">suspend_state_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &gt; <a class=\"id\" href=\"#PM_SUSPEND_ON\">PM_SUSPEND_ON</a> && <a class=\"id\" href=\"#state\">state</a> <= <a class=\"id\" href=\"#PM_SUSPEND_MAX\">PM_SUSPEND_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#enter_state\">enter_state</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pm_suspend\">pm_suspend</a>);", 
];
xr_frag_insert('l/00/086a1d2ec3dd95094439ab8efc7c62e5024a4a.xr', __xr_tmp);
