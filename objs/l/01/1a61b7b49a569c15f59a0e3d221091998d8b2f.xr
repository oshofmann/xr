var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_USER32_H\">_ASM_X86_USER32_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_USER32_H\">_ASM_X86_USER32_H</a>", 
"", 
"<span class=\"comment\">/* IA32 compatible user structures for ptrace.</span>", 
"<span class=\"comment\"> * These should be used for 32bit coredumps too. */</span>", 
"", 
"struct <a class=\"id\" href=\"#user_i387_ia32_struct\">user_i387_ia32_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#cwd\">cwd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#swd\">swd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#twd\">twd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#fip\">fip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#fcs\">fcs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#foo\">foo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#fos\">fos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><a class=\"id\" href=\"#st_space\">st_space</a>[20];   <span class=\"comment\">/* 8*10 bytes for each FP-reg = 80 bytes */</span>", 
"};", 
"", 
"<span class=\"comment\">/* FSAVE frame with extensions */</span>", 
"struct <a class=\"id\" href=\"#user32_fxsr_struct\">user32_fxsr_struct</a> {", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#cwd\">cwd</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#swd\">swd</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#twd\">twd</a>;<span class=\"ts\"/><span class=\"comment\">/* not compatible to 64bit twd */</span>", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#fop\">fop</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#fip\">fip</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#fcs\">fcs</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#foo\">foo</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#fos\">fos</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#mxcsr\">mxcsr</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#reserved\">reserved</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#st_space\">st_space</a>[32];<span class=\"ts\"/><span class=\"comment\">/* 8*16 bytes for each FP-reg = 128 bytes */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#xmm_space\">xmm_space</a>[32];<span class=\"ts\"/><span class=\"comment\">/* 8*16 bytes for each XMM-reg = 128 bytes */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#padding\">padding</a>[56];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#user_regs_struct32\">user_regs_struct32</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>, <a class=\"id\" href=\"#esi\">esi</a>, <a class=\"id\" href=\"#edi\">edi</a>, <a class=\"id\" href=\"#ebp\">ebp</a>, <a class=\"id\" href=\"#eax\">eax</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#__ds\">__ds</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#__es\">__es</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#fs\">fs</a>, <a class=\"id\" href=\"#__fs\">__fs</a>, <a class=\"id\" href=\"#gs\">gs</a>, <a class=\"id\" href=\"#__gs\">__gs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#orig_eax\">orig_eax</a>, <a class=\"id\" href=\"#eip\">eip</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#__cs\">__cs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#eflags\">eflags</a>, <a class=\"id\" href=\"#esp\">esp</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#ss\">ss</a>, <a class=\"id\" href=\"#__ss\">__ss</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#user32\">user32</a> {", 
"  struct <a class=\"id\" href=\"#user_regs_struct32\">user_regs_struct32</a> <a class=\"id\" href=\"#regs\">regs</a>; <span class=\"comment\">/* Where the registers are actually stored */</span>", 
"  int <a class=\"id\" href=\"#u_fpvalid\">u_fpvalid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* True if math co-processor being used. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for this mess. Not yet used. */</span>", 
"  struct <a class=\"id\" href=\"#user_i387_ia32_struct\">user_i387_ia32_struct</a> <a class=\"id\" href=\"#i387\">i387</a>;<span class=\"ts\"/><span class=\"comment\">/* Math Co-processor registers. */</span>", 
"<span class=\"comment\">/* The rest of this junk is to help gdb figure out what goes where */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#u_tsize\">u_tsize</a>;<span class=\"ts\"/><span class=\"comment\">/* Text segment size (pages). */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#u_dsize\">u_dsize</a>;<span class=\"ts\"/><span class=\"comment\">/* Data segment size (pages). */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#u_ssize\">u_ssize</a>;<span class=\"ts\"/><span class=\"comment\">/* Stack segment size (pages). */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#start_code\">start_code</a>;     <span class=\"comment\">/* Starting virtual address of text. */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#start_stack\">start_stack</a>;<span class=\"ts\"/><span class=\"comment\">/* Starting virtual address of stack area.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   This is actually the bottom of the stack,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the top of the stack is always found in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   esp register.  */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#signal\">signal</a>;     <span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Signal that caused the core dump. */</span>", 
"  int <a class=\"id\" href=\"#reserved\">reserved</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No __u32er used */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#u_ar0\">u_ar0</a>;<span class=\"ts\"/><span class=\"comment\">/* Used by gdb to help find the values for */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the registers. */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#u_fpstate\">u_fpstate</a>;<span class=\"ts\"/><span class=\"comment\">/* Math Co-processor pointer. */</span>", 
"  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#magic\">magic</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* To uniquely identify a core file */</span>", 
"  char <a class=\"id\" href=\"#u_comm\">u_comm</a>[32];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* User command that was responsible */</span>", 
"  int <a class=\"id\" href=\"#u_debugreg\">u_debugreg</a>[8];", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_USER32_H */</span>", 
];
xr_frag_insert('l/01/1a61b7b49a569c15f59a0e3d221091998d8b2f.xr', __xr_tmp);
