var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Internal header file for device mapper</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2001, 2002 Sistina Software</span>", 
"<span class=\"comment\"> * Copyright (C) 2004-2006 Red Hat, Inc. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the LGPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#DM_INTERNAL_H\">DM_INTERNAL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_INTERNAL_H\">DM_INTERNAL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>-<a class=\"id\" href=\"#mapper\">mapper</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hdreg\">hdreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Suspend feature flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_SUSPEND_LOCKFS_FLAG\">DM_SUSPEND_LOCKFS_FLAG</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_SUSPEND_NOFLUSH_FLAG\">DM_SUSPEND_NOFLUSH_FLAG</a><span class=\"ts\"/><span class=\"ts\"/>(1 << 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Type of table and mapped_device's mempool</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TYPE_NONE\">DM_TYPE_NONE</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TYPE_BIO_BASED\">DM_TYPE_BIO_BASED</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_TYPE_REQUEST_BASED\">DM_TYPE_REQUEST_BASED</a><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * List of devices that a metadevice uses and should open/close.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_dev_internal\">dm_dev_internal</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_dev\">dm_dev</a> <a class=\"id\" href=\"#dm_dev\">dm_dev</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#dm_table\">dm_table</a>;", 
"struct <a class=\"id\" href=\"#dm_md_mempools\">dm_md_mempools</a>;", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * Internal table functions.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"void <a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"void <a class=\"id\" href=\"#dm_table_event_callback\">dm_table_event_callback</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void (*<a class=\"id\" href=\"#fn\">fn</a>)(void *), void *<a class=\"id\" href=\"#context\">context</a>);", 
"struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#dm_table_get_target\">dm_table_get_target</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>, unsigned int <a class=\"id\" href=\"#index\">index</a>);", 
"struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#dm_table_find_target\">dm_table_find_target</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>);", 
"int <a class=\"id\" href=\"#dm_calculate_queue_limits\">dm_calculate_queue_limits</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#limits\">limits</a>);", 
"void <a class=\"id\" href=\"#dm_table_set_restrictions\">dm_table_set_restrictions</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#queue_limits\">queue_limits</a> *<a class=\"id\" href=\"#limits\">limits</a>);", 
"struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#dm_table_get_devices\">dm_table_get_devices</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"void <a class=\"id\" href=\"#dm_table_presuspend_targets\">dm_table_presuspend_targets</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"void <a class=\"id\" href=\"#dm_table_postsuspend_targets\">dm_table_postsuspend_targets</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"int <a class=\"id\" href=\"#dm_table_resume_targets\">dm_table_resume_targets</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"int <a class=\"id\" href=\"#dm_table_any_congested\">dm_table_any_congested</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>, int <a class=\"id\" href=\"#bdi_bits\">bdi_bits</a>);", 
"int <a class=\"id\" href=\"#dm_table_any_busy_target\">dm_table_any_busy_target</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"unsigned <a class=\"id\" href=\"#dm_table_get_type\">dm_table_get_type</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dm_table_request_based\">dm_table_request_based</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dm_table_supports_discards\">dm_table_supports_discards</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"int <a class=\"id\" href=\"#dm_table_alloc_md_mempools\">dm_table_alloc_md_mempools</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"void <a class=\"id\" href=\"#dm_table_free_md_mempools\">dm_table_free_md_mempools</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"struct <a class=\"id\" href=\"#dm_md_mempools\">dm_md_mempools</a> *<a class=\"id\" href=\"#dm_table_get_md_mempools\">dm_table_get_md_mempools</a>(struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"", 
"void <a class=\"id\" href=\"#dm_lock_md_type\">dm_lock_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"void <a class=\"id\" href=\"#dm_unlock_md_type\">dm_unlock_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"void <a class=\"id\" href=\"#dm_set_md_type\">dm_set_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, unsigned <a class=\"id\" href=\"#type\">type</a>);", 
"unsigned <a class=\"id\" href=\"#dm_get_md_type\">dm_get_md_type</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"int <a class=\"id\" href=\"#dm_setup_md_queue\">dm_setup_md_queue</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * To check the return value from dm_table_find_target().</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dm_target_is_valid\">dm_target_is_valid</a>(<a class=\"id\" href=\"#t\">t</a>) ((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#table\">table</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * To check whether the target type is request-based or not (bio-based).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dm_target_request_based\">dm_target_request_based</a>(<a class=\"id\" href=\"#t\">t</a>) ((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#map_rq\">map_rq</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * A registry of target types.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"int <a class=\"id\" href=\"#dm_target_init\">dm_target_init</a>(void);", 
"void <a class=\"id\" href=\"#dm_target_exit\">dm_target_exit</a>(void);", 
"struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#dm_get_target_type\">dm_get_target_type</a>(const char *<a class=\"id\" href=\"#name\">name</a>);", 
"void <a class=\"id\" href=\"#dm_put_target_type\">dm_put_target_type</a>(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>);", 
"int <a class=\"id\" href=\"#dm_target_iterate\">dm_target_iterate</a>(void (*<a class=\"id\" href=\"#iter_func\">iter_func</a>)(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#param\">param</a>), void *<a class=\"id\" href=\"#param\">param</a>);", 
"", 
"int <a class=\"id\" href=\"#dm_split_args\">dm_split_args</a>(int *<a class=\"id\" href=\"#argc\">argc</a>, char ***<a class=\"id\" href=\"#argvp\">argvp</a>, char *<a class=\"id\" href=\"#input\">input</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Is this mapped_device being deleted?</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_deleting_md\">dm_deleting_md</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Is this mapped_device suspended?</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_suspended_md\">dm_suspended_md</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The device-mapper can be driven through one of two interfaces;</span>", 
"<span class=\"comment\"> * ioctl or filesystem, depending which patch you have applied.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_interface_init\">dm_interface_init</a>(void);", 
"void <a class=\"id\" href=\"#dm_interface_exit\">dm_interface_exit</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sysfs interface</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_sysfs_init\">dm_sysfs_init</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"void <a class=\"id\" href=\"#dm_sysfs_exit\">dm_sysfs_exit</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#dm_kobject\">dm_kobject</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#dm_get_from_kobject\">dm_get_from_kobject</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Targets for linear and striped mappings</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dm_linear_init\">dm_linear_init</a>(void);", 
"void <a class=\"id\" href=\"#dm_linear_exit\">dm_linear_exit</a>(void);", 
"", 
"int <a class=\"id\" href=\"#dm_stripe_init\">dm_stripe_init</a>(void);", 
"void <a class=\"id\" href=\"#dm_stripe_exit\">dm_stripe_exit</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mapped_device operations</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#dm_destroy\">dm_destroy</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"void <a class=\"id\" href=\"#dm_destroy_immediate\">dm_destroy_immediate</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"int <a class=\"id\" href=\"#dm_open_count\">dm_open_count</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"int <a class=\"id\" href=\"#dm_lock_for_deletion\">dm_lock_for_deletion</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"int <a class=\"id\" href=\"#dm_kobject_uevent\">dm_kobject_uevent</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, enum <a class=\"id\" href=\"#kobject_action\">kobject_action</a> <a class=\"id\" href=\"#action\">action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"", 
"int <a class=\"id\" href=\"#dm_io_init\">dm_io_init</a>(void);", 
"void <a class=\"id\" href=\"#dm_io_exit\">dm_io_exit</a>(void);", 
"", 
"int <a class=\"id\" href=\"#dm_kcopyd_init\">dm_kcopyd_init</a>(void);", 
"void <a class=\"id\" href=\"#dm_kcopyd_exit\">dm_kcopyd_exit</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mempool operations</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_md_mempools\">dm_md_mempools</a> *<a class=\"id\" href=\"#dm_alloc_md_mempools\">dm_alloc_md_mempools</a>(unsigned <a class=\"id\" href=\"#type\">type</a>);", 
"void <a class=\"id\" href=\"#dm_free_md_mempools\">dm_free_md_mempools</a>(struct <a class=\"id\" href=\"#dm_md_mempools\">dm_md_mempools</a> *<a class=\"id\" href=\"#pools\">pools</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/01/5570f5b3c661b2f7efbbe9e9d1ef33e1025a27.xr', __xr_tmp);
