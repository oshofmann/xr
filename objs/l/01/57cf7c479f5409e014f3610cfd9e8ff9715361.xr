var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definitions for diskquota-operations. When diskquota is configured these</span>", 
"<span class=\"comment\"> * macros expand to the right source-code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author:  Marco van Wieringen &lt;mvw@planets.elm.net&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_QUOTAOPS_\">_LINUX_QUOTAOPS_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_QUOTAOPS_\">_LINUX_QUOTAOPS_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DQUOT_SPACE_WARN\">DQUOT_SPACE_WARN</a><span class=\"ts\"/>0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DQUOT_SPACE_RESERVE\">DQUOT_SPACE_RESERVE</a><span class=\"ts\"/>0x2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DQUOT_SPACE_NOFAIL\">DQUOT_SPACE_NOFAIL</a><span class=\"ts\"/>0x4", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#quota_info\">quota_info</a> *<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dquot\">s_dquot</a>;", 
"}", 
"", 
"<span class=\"comment\">/* i_mutex must being held */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_quota_modification\">is_quota_modification</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#ia\">ia</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#ia\">ia</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_SIZE\">ATTR_SIZE</a> && <a class=\"id\" href=\"#ia\">ia</a>-><a class=\"id\" href=\"#ia_size\">ia_size</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ia\">ia</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_UID\">ATTR_UID</a> && <a class=\"id\" href=\"#ia\">ia</a>-><a class=\"id\" href=\"#ia_uid\">ia_uid</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ia\">ia</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_GID\">ATTR_GID</a> && <a class=\"id\" href=\"#ia\">ia</a>-><a class=\"id\" href=\"#ia_gid\">ia_gid</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#quota_error\">quota_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__quota_error\">__quota_error</a>((<a class=\"id\" href=\"#sb\">sb</a>), <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#fmt\">fmt</a> , ## <a class=\"id\" href=\"#args\">args</a>)", 
"", 
"extern void <a class=\"id\" href=\"#__quota_error\">__quota_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * declaration of quota_function calls in kernel.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#inode_add_rsv_space\">inode_add_rsv_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>);", 
"void <a class=\"id\" href=\"#inode_claim_rsv_space\">inode_claim_rsv_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>);", 
"void <a class=\"id\" href=\"#inode_sub_rsv_space\">inode_sub_rsv_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>);", 
"", 
"void <a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"void <a class=\"id\" href=\"#dquot_drop\">dquot_drop</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dqget\">dqget</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, unsigned int <a class=\"id\" href=\"#id\">id</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"void <a class=\"id\" href=\"#dqput\">dqput</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#dquot_scan_active\">dquot_scan_active</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      int (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>, unsigned long <a class=\"id\" href=\"#priv\">priv</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#priv\">priv</a>);", 
"struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot_alloc\">dquot_alloc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"void <a class=\"id\" href=\"#dquot_destroy\">dquot_destroy</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"", 
"int <a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"void <a class=\"id\" href=\"#__dquot_free_space\">__dquot_free_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"int <a class=\"id\" href=\"#dquot_alloc_inode\">dquot_alloc_inode</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"int <a class=\"id\" href=\"#dquot_claim_space_nodirty\">dquot_claim_space_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>);", 
"void <a class=\"id\" href=\"#dquot_free_inode\">dquot_free_inode</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"int <a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"comment\">/* Suspend quotas on remount RO */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_suspend\">dquot_suspend</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a>);", 
"}", 
"int <a class=\"id\" href=\"#dquot_resume\">dquot_resume</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"", 
"int <a class=\"id\" href=\"#dquot_commit\">dquot_commit</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#dquot_acquire\">dquot_acquire</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#dquot_release\">dquot_release</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"int <a class=\"id\" href=\"#dquot_commit_info\">dquot_commit_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"int <a class=\"id\" href=\"#dquot_mark_dquot_dirty\">dquot_mark_dquot_dirty</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"", 
"int <a class=\"id\" href=\"#dquot_file_open\">dquot_file_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"", 
"int <a class=\"id\" href=\"#dquot_quota_on\">dquot_quota_on</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#path\">path</a>);", 
"int <a class=\"id\" href=\"#dquot_enable\">dquot_enable</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>);", 
"int <a class=\"id\" href=\"#dquot_quota_on_path\">dquot_quota_on_path</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>);", 
"int <a class=\"id\" href=\"#dquot_quota_on_mount\">dquot_quota_on_mount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, char *<a class=\"id\" href=\"#qf_name\">qf_name</a>,", 
" <span class=\"ts\"/>int <a class=\"id\" href=\"#format_id\">format_id</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"int <a class=\"id\" href=\"#dquot_quota_off\">dquot_quota_off</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"int <a class=\"id\" href=\"#dquot_quota_sync\">dquot_quota_sync</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#wait\">wait</a>);", 
"int <a class=\"id\" href=\"#dquot_get_dqinfo\">dquot_get_dqinfo</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, struct <a class=\"id\" href=\"#if_dqinfo\">if_dqinfo</a> *<a class=\"id\" href=\"#ii\">ii</a>);", 
"int <a class=\"id\" href=\"#dquot_set_dqinfo\">dquot_set_dqinfo</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, struct <a class=\"id\" href=\"#if_dqinfo\">if_dqinfo</a> *<a class=\"id\" href=\"#ii\">ii</a>);", 
"int <a class=\"id\" href=\"#dquot_get_dqblk\">dquot_get_dqblk</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#qid_t\">qid_t</a> <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fs_disk_quota\">fs_disk_quota</a> *<a class=\"id\" href=\"#di\">di</a>);", 
"int <a class=\"id\" href=\"#dquot_set_dqblk\">dquot_set_dqblk</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#qid_t\">qid_t</a> <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fs_disk_quota\">fs_disk_quota</a> *<a class=\"id\" href=\"#di\">di</a>);", 
"", 
"int <a class=\"id\" href=\"#__dquot_transfer\">__dquot_transfer</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> **<a class=\"id\" href=\"#transfer_to\">transfer_to</a>);", 
"int <a class=\"id\" href=\"#dquot_transfer\">dquot_transfer</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#iattr\">iattr</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#mem_dqinfo\">mem_dqinfo</a> *<a class=\"id\" href=\"#sb_dqinfo\">sb_dqinfo</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#info\">info</a> + <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions for checking status of quota</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sb_has_quota_usage_enabled\">sb_has_quota_usage_enabled</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_state_flag\">dquot_state_flag</a>(<a class=\"id\" href=\"#DQUOT_USAGE_ENABLED\">DQUOT_USAGE_ENABLED</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sb_has_quota_limits_enabled\">sb_has_quota_limits_enabled</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_state_flag\">dquot_state_flag</a>(<a class=\"id\" href=\"#DQUOT_LIMITS_ENABLED\">DQUOT_LIMITS_ENABLED</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sb_has_quota_suspended\">sb_has_quota_suspended</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_state_flag\">dquot_state_flag</a>(<a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#sb_any_quota_suspended\">sb_any_quota_suspended</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#tmsk\">tmsk</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#type\">type</a> = 0; <a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#type\">type</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmsk\">tmsk</a> |= <a class=\"id\" href=\"#sb_has_quota_suspended\">sb_has_quota_suspended</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>) << <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tmsk\">tmsk</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Does kernel know about any quota information for given sb + type? */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Currently if anything is on, then quota usage is on as well */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_has_quota_usage_enabled\">sb_has_quota_usage_enabled</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#tmsk\">tmsk</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#type\">type</a> = 0; <a class=\"id\" href=\"#type\">type</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#type\">type</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmsk\">tmsk</a> |= <a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>) << <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>return<span class=\"ts\"/><a class=\"id\" href=\"#tmsk\">tmsk</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sb_has_quota_active\">sb_has_quota_active</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>) &&", 
"<span class=\"ts\"/>       !<a class=\"id\" href=\"#sb_has_quota_suspended\">sb_has_quota_suspended</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Operations supported for diskquotas.</span>", 
"<span class=\"comment\"> */</span>", 
"extern const struct <a class=\"id\" href=\"#dquot_operations\">dquot_operations</a> <a class=\"id\" href=\"#dquot_operations\">dquot_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#quotactl_ops\">quotactl_ops</a> <a class=\"id\" href=\"#dquot_quotactl_ops\">dquot_quotactl_ops</a>;", 
"", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_has_quota_usage_enabled\">sb_has_quota_usage_enabled</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_has_quota_limits_enabled\">sb_has_quota_limits_enabled</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_has_quota_suspended\">sb_has_quota_suspended</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_any_quota_suspended\">sb_any_quota_suspended</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Does kernel know about any quota information for given sb + type? */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sb_has_quota_active\">sb_has_quota_active</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_drop\">dquot_drop</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_alloc_inode\">dquot_alloc_inode</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_free_inode\">dquot_free_inode</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_transfer\">dquot_transfer</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#iattr\">iattr</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SPACE_RESERVE\">DQUOT_SPACE_RESERVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_add_bytes\">inode_add_bytes</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__dquot_free_space\">__dquot_free_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SPACE_RESERVE\">DQUOT_SPACE_RESERVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_sub_bytes\">inode_sub_bytes</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_claim_space_nodirty\">dquot_claim_space_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_add_bytes\">inode_add_bytes</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_suspend\">dquot_suspend</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_resume\">dquot_resume</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dquot_file_open\">dquot_file_open</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#generic_file_open\">generic_file_open</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_QUOTA */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_alloc_space_nodirty\">dquot_alloc_space_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#DQUOT_SPACE_WARN\">DQUOT_SPACE_WARN</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_alloc_space_nofail\">dquot_alloc_space_nofail</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#DQUOT_SPACE_WARN\">DQUOT_SPACE_WARN</a>|<a class=\"id\" href=\"#DQUOT_SPACE_NOFAIL\">DQUOT_SPACE_NOFAIL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty_sync\">mark_inode_dirty_sync</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_alloc_space\">dquot_alloc_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_alloc_space_nodirty\">dquot_alloc_space_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mark inode fully dirty. Since we are allocating blocks, inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * would become fully dirty soon anyway and it reportedly</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * reduces inode_lock contention.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_alloc_block_nodirty\">dquot_alloc_block_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_alloc_space_nodirty\">dquot_alloc_space_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_alloc_block_nofail\">dquot_alloc_block_nofail</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_alloc_space_nofail\">dquot_alloc_space_nofail</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_alloc_block\">dquot_alloc_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_alloc_space\">dquot_alloc_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_prealloc_block_nodirty\">dquot_prealloc_block_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>, 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_prealloc_block\">dquot_prealloc_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_prealloc_block_nodirty\">dquot_prealloc_block_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty_sync\">mark_inode_dirty_sync</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_reserve_block\">dquot_reserve_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DQUOT_SPACE_WARN\">DQUOT_SPACE_WARN</a>|<a class=\"id\" href=\"#DQUOT_SPACE_RESERVE\">DQUOT_SPACE_RESERVE</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#dquot_claim_block\">dquot_claim_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_claim_space_nodirty\">dquot_claim_space_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty_sync\">mark_inode_dirty_sync</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_free_space_nodirty\">dquot_free_space_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dquot_free_space\">__dquot_free_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a>, 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_free_space\">dquot_free_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_space_nodirty\">dquot_free_space_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty_sync\">mark_inode_dirty_sync</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_free_block_nodirty\">dquot_free_block_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_space_nodirty\">dquot_free_space_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_free_block\">dquot_free_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_space\">dquot_free_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dquot_release_reservation_block\">dquot_release_reservation_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dquot_free_space\">__dquot_free_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#nr\">nr</a> << <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>, <a class=\"id\" href=\"#DQUOT_SPACE_RESERVE\">DQUOT_SPACE_RESERVE</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_QUOTAOPS_ */</span>", 
];
xr_frag_insert('l/01/57cf7c479f5409e014f3610cfd9e8ff9715361.xr', __xr_tmp);
