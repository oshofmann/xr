var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright IBM Corporation, 2007</span>", 
"<span class=\"comment\"> * Author Aneesh Kumar K.V &lt;aneesh.kumar@linux.vnet.ibm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of version 2.1 of the GNU Lesser General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it would be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_jbd2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_extents.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The contiguous blocks details which can be</span>", 
"<span class=\"comment\"> * represented by a single extent</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#list_blocks_struct\">list_blocks_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#first_block\">first_block</a>, <a class=\"id\" href=\"#last_block\">last_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#first_pblock\">first_pblock</a>, <a class=\"id\" href=\"#last_pblock\">last_pblock</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#finish_range\">finish_range</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_blocks_struct\">list_blocks_struct</a> *<a class=\"id\" href=\"#lb\">lb</a>)", 
"", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0, <a class=\"id\" href=\"#needed\">needed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> <a class=\"id\" href=\"#newext\">newext</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_pblock\">first_pblock</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the extent to temp inode*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newext\">newext</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_block\">first_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newext\">newext</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_block\">last_block</a> - <a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_block\">first_block</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(&amp;<a class=\"id\" href=\"#newext\">newext</a>, <a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_pblock\">first_pblock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_block\">first_block</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Calculate the credit needed to inserting this extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since we are doing this in loop we may accumalate extra</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * credit. But below we try to not accumalate too much</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of them by restarting the journal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> = <a class=\"id\" href=\"#ext4_ext_calc_credits_for_single_extent\">ext4_ext_calc_credits_for_single_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_block\">last_block</a> - <a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_block\">first_block</a> + 1, <a class=\"id\" href=\"#path\">path</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure the credit we accumalated is not really high</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#needed\">needed</a> && <a class=\"id\" href=\"#ext4_handle_has_enough_credits\">ext4_handle_has_enough_credits</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_RESERVE_TRANS_BLOCKS\">EXT4_RESERVE_TRANS_BLOCKS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#needed\">needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#needed\">needed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_journal_extend\">ext4_journal_extend</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#needed\">needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * IF not able to extend the journal restart the journal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#needed\">needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#newext\">newext</a>, 0);", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_pblock\">first_pblock</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#update_extent_range\">update_extent_range</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#pblock\">pblock</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#blk_num\">blk_num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_blocks_struct\">list_blocks_struct</a> *<a class=\"id\" href=\"#lb\">lb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See if we can add on to the existing range (if it exists)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_pblock\">first_pblock</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_pblock\">last_pblock</a>+1 == <a class=\"id\" href=\"#pblock\">pblock</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_block\">last_block</a>+1 == <a class=\"id\" href=\"#blk_num\">blk_num</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_pblock\">last_pblock</a> = <a class=\"id\" href=\"#pblock\">pblock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#blk_num\">blk_num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Start a new range.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#finish_range\">finish_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_pblock\">first_pblock</a> = <a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_pblock\">last_pblock</a> = <a class=\"id\" href=\"#pblock\">pblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#first_block\">first_block</a> = <a class=\"id\" href=\"#lb\">lb</a>-><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#blk_num\">blk_num</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#update_ind_extent_range\">update_ind_extent_range</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#pblock\">pblock</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> *<a class=\"id\" href=\"#blk_nump\">blk_nump</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#list_blocks_struct\">list_blocks_struct</a> *<a class=\"id\" href=\"#lb\">lb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#i_data\">i_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#blk_count\">blk_count</a> = *<a class=\"id\" href=\"#blk_nump\">blk_nump</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_entries\">max_entries</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 2;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pblock\">pblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only update the file block number */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#blk_nump\">blk_nump</a> += <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#pblock\">pblock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#max_entries\">max_entries</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#blk_count\">blk_count</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#update_extent_range\">update_extent_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_count\">blk_count</a>, <a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the file block number */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#blk_nump\">blk_nump</a> = <a class=\"id\" href=\"#blk_count\">blk_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#update_dind_extent_range\">update_dind_extent_range</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#pblock\">pblock</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> *<a class=\"id\" href=\"#blk_nump\">blk_nump</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#list_blocks_struct\">list_blocks_struct</a> *<a class=\"id\" href=\"#lb\">lb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#i_data\">i_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#blk_count\">blk_count</a> = *<a class=\"id\" href=\"#blk_nump\">blk_nump</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_entries\">max_entries</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 2;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pblock\">pblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only update the file block number */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#blk_nump\">blk_nump</a> += <a class=\"id\" href=\"#max_entries\">max_entries</a> * <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#pblock\">pblock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#max_entries\">max_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#update_ind_extent_range\">update_ind_extent_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#blk_count\">blk_count</a>, <a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only update the file block number */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_count\">blk_count</a> += <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the file block number */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#blk_nump\">blk_nump</a> = <a class=\"id\" href=\"#blk_count\">blk_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#update_tind_extent_range\">update_tind_extent_range</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#pblock\">pblock</a>, <a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> *<a class=\"id\" href=\"#blk_nump\">blk_nump</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#list_blocks_struct\">list_blocks_struct</a> *<a class=\"id\" href=\"#lb\">lb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#i_data\">i_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#blk_count\">blk_count</a> = *<a class=\"id\" href=\"#blk_nump\">blk_nump</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_entries\">max_entries</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 2;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pblock\">pblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only update the file block number */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#blk_nump\">blk_nump</a> += <a class=\"id\" href=\"#max_entries\">max_entries</a> * <a class=\"id\" href=\"#max_entries\">max_entries</a> * <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#pblock\">pblock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#max_entries\">max_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#update_dind_extent_range\">update_dind_extent_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#blk_count\">blk_count</a>, <a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only update the file block number */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_count\">blk_count</a> += <a class=\"id\" href=\"#max_entries\">max_entries</a> * <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the file block number */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#blk_nump\">blk_nump</a> = <a class=\"id\" href=\"#blk_count\">blk_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#extend_credit_for_blkdel\">extend_credit_for_blkdel</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0, <a class=\"id\" href=\"#needed\">needed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_has_enough_credits\">ext4_handle_has_enough_credits</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EXT4_RESERVE_TRANS_BLOCKS\">EXT4_RESERVE_TRANS_BLOCKS</a>+1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We are freeing a blocks. During this we touch</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock, group descriptor and block bitmap.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * So allocate a credit of 3. We may update</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * quota (user and group).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> = 3 + <a class=\"id\" href=\"#EXT4_MAXQUOTAS_TRANS_BLOCKS\">EXT4_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_journal_extend\">ext4_journal_extend</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#needed\">needed</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#needed\">needed</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#free_dind_blocks\">free_dind_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#i_data\">i_data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#tmp_idata\">tmp_idata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_entries\">max_entries</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 2;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_idata\">tmp_idata</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#max_entries\">max_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_idata\">tmp_idata</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extend_credit_for_blkdel\">extend_credit_for_blkdel</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#tmp_idata\">tmp_idata</a>[<a class=\"id\" href=\"#i\">i</a>]), 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#extend_credit_for_blkdel\">extend_credit_for_blkdel</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>), 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#free_tind_blocks\">free_tind_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#i_data\">i_data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#tmp_idata\">tmp_idata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_entries\">max_entries</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 2;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_idata\">tmp_idata</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#max_entries\">max_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_idata\">tmp_idata</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#free_dind_blocks\">free_dind_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#tmp_idata\">tmp_idata</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#extend_credit_for_blkdel\">extend_credit_for_blkdel</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>), 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#free_ind_block\">free_ind_block</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#i_data\">i_data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ei-&gt;i_data[EXT4_IND_BLOCK] */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extend_credit_for_blkdel\">extend_credit_for_blkdel</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[0]), 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ei-&gt;i_data[EXT4_DIND_BLOCK] */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[1]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#free_dind_blocks\">free_dind_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#i_data\">i_data</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ei-&gt;i_data[EXT4_TIND_BLOCK] */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[2]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#free_tind_blocks\">free_tind_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#i_data\">i_data</a>[2]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_ext_swap_inode_data\">ext4_ext_swap_inode_data</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a>[3];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#tmp_ei\">tmp_ei</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * One credit accounted for writing the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i_data field of the original inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_journal_extend\">ext4_journal_extend</a>(<a class=\"id\" href=\"#handle\">handle</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a>[0] = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_IND_BLOCK\">EXT4_IND_BLOCK</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a>[1] = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_DIND_BLOCK\">EXT4_DIND_BLOCK</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a>[2] = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_TIND_BLOCK\">EXT4_TIND_BLOCK</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if EXT4_STATE_EXT_MIGRATE is cleared a block allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * happened after we started the migrate. We need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fail the migrate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_test_inode_state\">ext4_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_EXT_MIGRATE\">EXT4_STATE_EXT_MIGRATE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_state\">ext4_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_EXT_MIGRATE\">EXT4_STATE_EXT_MIGRATE</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We have the extent map build with the tmp inode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now copy the i_data across</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>, <a class=\"id\" href=\"#tmp_ei\">tmp_ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>, sizeof(<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Update i_blocks with the new blocks that got</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocated while adding extents for extent index</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * While converting to extents we need not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * update the orignal inode i_blocks for extent blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * via quota APIs. The quota update happened via tmp_inode already.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> += <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We mark the inode dirty after, because we decrement the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i_blocks when freeing the indirect meta-data blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#free_ind_block\">free_ind_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#i_data\">i_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#free_ext_idx\">free_ext_idx</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#ix\">ix</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#idx_pblock\">idx_pblock</a>(<a class=\"id\" href=\"#ix\">ix</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = (struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>); <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#ix\">ix</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#free_ext_idx\">free_ext_idx</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ix\">ix</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#extend_credit_for_blkdel\">extend_credit_for_blkdel</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#block\">block</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a> | <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Free the extent meta data blocks only</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#free_ext_block\">free_ext_block</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a> = (struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *)<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_idx\">ext4_extent_idx</a> *<a class=\"id\" href=\"#ix\">ix</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_depth\">eh_depth</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * No extra blocks allocated for extent meta data</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ix\">ix</a> = <a class=\"id\" href=\"#EXT_FIRST_INDEX\">EXT_FIRST_INDEX</a>(<a class=\"id\" href=\"#eh\">eh</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#eh\">eh</a>-><a class=\"id\" href=\"#eh_entries\">eh_entries</a>); <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#ix\">ix</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#free_ext_idx\">free_ext_idx</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ix\">ix</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"}", 
"", 
"int <a class=\"id\" href=\"#ext4_ext_migrate\">ext4_ext_migrate</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#i_data\">i_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#blk_count\">blk_count</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_blocks_struct\">list_blocks_struct</a> <a class=\"id\" href=\"#lb\">lb</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#goal\">goal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the filesystem does not support extents, or the inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * already is extent-based, error out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_EXTENTS\">EXT4_FEATURE_INCOMPAT_EXTENTS</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISLNK\">S_ISLNK</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) && <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * don't migrate fast symlink</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_DATA_TRANS_BLOCKS\">EXT4_DATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INDEX_EXTRA_TRANS_BLOCKS\">EXT4_INDEX_EXTRA_TRANS_BLOCKS</a> + 3 +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_MAXQUOTAS_INIT_BLOCKS\">EXT4_MAXQUOTAS_INIT_BLOCKS</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>+ 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#goal\">goal</a> = (((<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a> - 1) / <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)) *", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_inode\">tmp_inode</a> = <a class=\"id\" href=\"#ext4_new_inode\">ext4_new_inode</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>, 0, <a class=\"id\" href=\"#goal\">goal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>, <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set the i_nlink to zero so it will be deleted later</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when we drop inode reference.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_tree_init\">ext4_ext_tree_init</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_orphan_add\">ext4_orphan_add</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * start with one credit accounted for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock modification.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For the tmp_inode we already have commited the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * trascation that created the inode. Later as and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when we add extents we extent the journal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Even though we take i_mutex we can still cause block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocation via mmap write to holes. If we have allocated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new blocks we fail migrate.  New block allocation will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clear EXT4_STATE_EXT_MIGRATE flag.  The flag is updated</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with i_data_sem held to prevent racing with block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>((&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_inode_state\">ext4_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_EXT_MIGRATE\">EXT4_STATE_EXT_MIGRATE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>((&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * It is impossible to update on-disk structures without</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a handle, so just rollback in-core changes and live other</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * work to orphan_list_cleanup()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_orphan_del\">ext4_orphan_del</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a> = <a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_data\">i_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#lb\">lb</a>, 0, sizeof(<a class=\"id\" href=\"#lb\">lb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 32 bit block address 4 bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_entries\">max_entries</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> >> 2;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#EXT4_NDIR_BLOCKS\">EXT4_NDIR_BLOCKS</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#blk_count\">blk_count</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#update_extent_range\">update_extent_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#i\">i</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_count\">blk_count</a>, &amp;<a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_IND_BLOCK\">EXT4_IND_BLOCK</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#update_ind_extent_range\">update_ind_extent_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_IND_BLOCK\">EXT4_IND_BLOCK</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#blk_count\">blk_count</a>, &amp;<a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_count\">blk_count</a> +=  <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_DIND_BLOCK\">EXT4_DIND_BLOCK</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#update_dind_extent_range\">update_dind_extent_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_DIND_BLOCK\">EXT4_DIND_BLOCK</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#blk_count\">blk_count</a>, &amp;<a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_count\">blk_count</a> += <a class=\"id\" href=\"#max_entries\">max_entries</a> * <a class=\"id\" href=\"#max_entries\">max_entries</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_TIND_BLOCK\">EXT4_TIND_BLOCK</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#update_tind_extent_range\">update_tind_extent_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#i_data\">i_data</a>[<a class=\"id\" href=\"#EXT4_TIND_BLOCK\">EXT4_TIND_BLOCK</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#blk_count\">blk_count</a>, &amp;<a class=\"id\" href=\"#lb\">lb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Build the last extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#finish_range\">finish_range</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>, &amp;<a class=\"id\" href=\"#lb\">lb</a>);", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Failure case delete the extent information with the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * tmp_inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_ext_block\">free_ext_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ext4_ext_swap_inode_data\">ext4_ext_swap_inode_data</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * if we fail to swap inode data free the extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * details of the tmp inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_ext_block\">free_ext_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We mark the tmp_inode dirty via ext4_ext_tree_init. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_journal_extend\">ext4_journal_extend</a>(<a class=\"id\" href=\"#handle\">handle</a>, 1) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Mark the tmp_inode as of size zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set the  i_blocks count to zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so that the ext4_delete_inode does the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * right job</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We don't need to take the i_lock because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the inode is not visible to user space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset the extent details */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_tree_init\">ext4_ext_tree_init</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_new_inode\">unlock_new_inode</a>(<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#tmp_inode\">tmp_inode</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
];
xr_frag_insert('l/02/1b1b49d6cbb1a986205fbfc689bda2dddec0d7.xr', __xr_tmp);
