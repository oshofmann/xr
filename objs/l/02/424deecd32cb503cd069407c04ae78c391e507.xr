var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * support.c - standard functions for the use of pnp protocol drivers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2003 Adam Belay &lt;ambx1@neo.rr.com&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bjorn Helgaas &lt;bjorn.helgaas@hp.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pnp\">pnp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"base.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pnp_is_active - Determines if a device is active based on its current</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>resources</span>", 
"<span class=\"comment\"> * @dev: pointer to the desired PnP device</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pnp_is_active\">pnp_is_active</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I don't think this is very reliable because pnp_disable_dev()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only clears out auto-assigned resources.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pnp_port_start\">pnp_port_start</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0) && <a class=\"id\" href=\"#pnp_port_len\">pnp_port_len</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0) <= 1 &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#pnp_mem_start\">pnp_mem_start</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0) && <a class=\"id\" href=\"#pnp_mem_len\">pnp_mem_len</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0) <= 1 &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pnp_irq\">pnp_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0) == -1 && <a class=\"id\" href=\"#pnp_dma\">pnp_dma</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0) == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pnp_is_active\">pnp_is_active</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functionally similar to acpi_ex_eisa_id_to_string(), but that's</span>", 
"<span class=\"comment\"> * buried in the ACPI CA, and we can't depend on it being present.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pnp_eisa_id_to_string\">pnp_eisa_id_to_string</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>, char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * According to the specs, the first three characters are five-bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * compressed ASCII, and the left-over high order bit should be zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * However, the Linux ISAPNP code historically used six bits for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first character, and there seem to be IDs that depend on that,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * e.g., \"nEC8241\" in the Linux 8250_pnp serial driver and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FreeBSD sys/pc98/cbus/sio_cbus.c driver.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[0] = 'A' + ((<a class=\"id\" href=\"#id\">id</a> >> 26) &amp; 0x3f) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[1] = 'A' + ((<a class=\"id\" href=\"#id\">id</a> >> 21) &amp; 0x1f) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[2] = 'A' + ((<a class=\"id\" href=\"#id\">id</a> >> 16) &amp; 0x1f) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[3] = <a class=\"id\" href=\"#hex_asc_hi\">hex_asc_hi</a>(<a class=\"id\" href=\"#id\">id</a> >> 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[4] = <a class=\"id\" href=\"#hex_asc_lo\">hex_asc_lo</a>(<a class=\"id\" href=\"#id\">id</a> >> 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[5] = <a class=\"id\" href=\"#hex_asc_hi\">hex_asc_hi</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[6] = <a class=\"id\" href=\"#hex_asc_lo\">hex_asc_lo</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>[7] = '\\0';", 
"}", 
"", 
"char *<a class=\"id\" href=\"#pnp_resource_type_name\">pnp_resource_type_name</a>(struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pnp_resource_type\">pnp_resource_type</a>(<a class=\"id\" href=\"#res\">res</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"io\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"mem\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_IRQ\">IORESOURCE_IRQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"irq\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_DMA\">IORESOURCE_DMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"dma\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_BUS\">IORESOURCE_BUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"bus\";", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return \"unknown\";", 
"}", 
"", 
"void <a class=\"id\" href=\"#dbg_pnp_show_resources\">dbg_pnp_show_resources</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, char *<a class=\"id\" href=\"#desc\">desc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_resource\">pnp_resource</a> *<a class=\"id\" href=\"#pnp_res\">pnp_res</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resources\">resources</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_dbg\">pnp_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s: no current resources\\n\", <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_dbg\">pnp_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s: current resources:\\n\", <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pnp_res\">pnp_res</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resources\">resources</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pnp_dbg\">pnp_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%pr\\n\", &amp;<a class=\"id\" href=\"#pnp_res\">pnp_res</a>-><a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"char *<a class=\"id\" href=\"#pnp_option_priority_name\">pnp_option_priority_name</a>(struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#option\">option</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pnp_option_priority\">pnp_option_priority</a>(<a class=\"id\" href=\"#option\">option</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PNP_RES_PRIORITY_PREFERRED\">PNP_RES_PRIORITY_PREFERRED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"preferred\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PNP_RES_PRIORITY_ACCEPTABLE\">PNP_RES_PRIORITY_ACCEPTABLE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"acceptable\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PNP_RES_PRIORITY_FUNCTIONAL\">PNP_RES_PRIORITY_FUNCTIONAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"functional\";", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return \"invalid\";", 
"}", 
"", 
"void <a class=\"id\" href=\"#dbg_pnp_show_option\">dbg_pnp_show_option</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#pnp_option\">pnp_option</a> *<a class=\"id\" href=\"#option\">option</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[128];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_port\">pnp_port</a> *<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_mem\">pnp_mem</a> *<a class=\"id\" href=\"#mem\">mem</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_irq\">pnp_irq</a> *<a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pnp_dma\">pnp_dma</a> *<a class=\"id\" href=\"#dma\">dma</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pnp_option_is_dependent\">pnp_option_is_dependent</a>(<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"  dependent set %d (%s) \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pnp_option_set\">pnp_option_set</a>(<a class=\"id\" href=\"#option\">option</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#pnp_option_priority_name\">pnp_option_priority_name</a>(<a class=\"id\" href=\"#option\">option</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"  independent \");", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port\">port</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>, \"io  min %#llx \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"max %#llx align %lld size %lld flags %#x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#max\">max</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#port\">port</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mem\">mem</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#mem\">mem</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>, \"mem min %#llx \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"max %#llx align %lld size %lld flags %#x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#mem\">mem</a>-><a class=\"id\" href=\"#min\">min</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#mem\">mem</a>-><a class=\"id\" href=\"#max\">max</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#mem\">mem</a>-><a class=\"id\" href=\"#align\">align</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long) <a class=\"id\" href=\"#mem\">mem</a>-><a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#mem\">mem</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_IRQ\">IORESOURCE_IRQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>, \"irq\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bitmap_empty\">bitmap_empty</a>(<a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#PNP_IRQ_NR\">PNP_IRQ_NR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" <none>\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PNP_IRQ_NR\">PNP_IRQ_NR</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#bits\">bits</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" %d\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>, \" flags %#x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_IRQ_OPTIONAL\">IORESOURCE_IRQ_OPTIONAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" (optional)\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IORESOURCE_DMA\">IORESOURCE_DMA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma\">dma</a> = &amp;<a class=\"id\" href=\"#option\">option</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#dma\">dma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>, \"dma\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#map\">map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" <none>\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 8; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#map\">map</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" %d\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#len\">len</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>) - <a class=\"id\" href=\"#len\">len</a>, \" (bitmask %#x) \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"flags %#x\", <a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#dma\">dma</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pnp_dbg\">pnp_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s\\n\", <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
];
xr_frag_insert('l/02/424deecd32cb503cd069407c04ae78c391e507.xr', __xr_tmp);
