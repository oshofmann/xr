var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NETLINK      Generic Netlink Family</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>Authors:<span class=\"ts\"/>Jamal Hadi Salim</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Thomas Graf &lt;tgraf@suug.ch&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Johannes Berg &lt;johannes@sipsolutions.net&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitmap\">bitmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#genetlink\">genetlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#genl_mutex\">genl_mutex</a>); <span class=\"comment\">/* serialization of message processing */</span>", 
"", 
"void <a class=\"id\" href=\"#genl_lock\">genl_lock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#genl_mutex\">genl_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_lock\">genl_lock</a>);", 
"", 
"void <a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#genl_mutex\">genl_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENL_FAM_TAB_SIZE\">GENL_FAM_TAB_SIZE</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENL_FAM_TAB_MASK\">GENL_FAM_TAB_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#GENL_FAM_TAB_SIZE\">GENL_FAM_TAB_SIZE</a> - 1)", 
"", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#family_ht\">family_ht</a>[<a class=\"id\" href=\"#GENL_FAM_TAB_SIZE\">GENL_FAM_TAB_SIZE</a>];", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Bitmap of multicast groups that are currently in use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To avoid an allocation at boot of just one unsigned long,</span>", 
"<span class=\"comment\"> * declare it global instead.</span>", 
"<span class=\"comment\"> * Bit 0 is marked as already used since group 0 is invalid.</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned long <a class=\"id\" href=\"#mc_group_start\">mc_group_start</a> = 0x1;", 
"static unsigned long *<a class=\"id\" href=\"#mc_groups\">mc_groups</a> = &amp;<a class=\"id\" href=\"#mc_group_start\">mc_group_start</a>;", 
"static unsigned long <a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a> = 1;", 
"", 
"static int <a class=\"id\" href=\"#genl_ctrl_event\">genl_ctrl_event</a>(int <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#genl_family_hash\">genl_family_hash</a>(unsigned int <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#id\">id</a> &amp; <a class=\"id\" href=\"#GENL_FAM_TAB_MASK\">GENL_FAM_TAB_MASK</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#genl_family_chain\">genl_family_chain</a>(unsigned int <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#family_ht\">family_ht</a>[<a class=\"id\" href=\"#genl_family_hash\">genl_family_hash</a>(<a class=\"id\" href=\"#id\">id</a>)];", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#genl_family_find_byid\">genl_family_find_byid</a>(unsigned int <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#genl_family_chain\">genl_family_chain</a>(<a class=\"id\" href=\"#id\">id</a>), <a class=\"id\" href=\"#family_list\">family_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#id\">id</a> == <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#genl_family_find_byname\">genl_family_find_byname</a>(char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#GENL_FAM_TAB_SIZE\">GENL_FAM_TAB_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#genl_family_chain\">genl_family_chain</a>(<a class=\"id\" href=\"#i\">i</a>), <a class=\"id\" href=\"#family_list\">family_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name\">name</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> *<a class=\"id\" href=\"#genl_get_cmd\">genl_get_cmd</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cmd\">cmd</a>, struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ops\">ops</a>, &amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#ops_list\">ops_list</a>, <a class=\"id\" href=\"#ops_list\">ops_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#cmd\">cmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Of course we are going to have problems once we hit</span>", 
"<span class=\"comment\"> * 2^16 alive types, but that can only happen by year 2K</span>", 
"<span class=\"comment\">*/</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#genl_generate_id\">genl_generate_id</a>(void)", 
"{", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#id_gen_idx\">id_gen_idx</a> = <a class=\"id\" href=\"#GENL_MIN_ID\">GENL_MIN_ID</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#GENL_MAX_ID\">GENL_MAX_ID</a> - <a class=\"id\" href=\"#GENL_MIN_ID\">GENL_MIN_ID</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#genl_family_find_byid\">genl_family_find_byid</a>(<a class=\"id\" href=\"#id_gen_idx\">id_gen_idx</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#id_gen_idx\">id_gen_idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#id_gen_idx\">id_gen_idx</a> &gt; <a class=\"id\" href=\"#GENL_MAX_ID\">GENL_MAX_ID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id_gen_idx\">id_gen_idx</a> = <a class=\"id\" href=\"#GENL_MIN_ID\">GENL_MIN_ID</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#genl_multicast_group\">genl_multicast_group</a> <a class=\"id\" href=\"#notify_grp\">notify_grp</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * genl_register_mc_group - register a multicast group</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Registers the specified multicast group and notifies userspace</span>", 
"<span class=\"comment\"> * about the new group.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @family: The generic netlink family the group shall be registered for.</span>", 
"<span class=\"comment\"> * @grp: The group to register, must have a name.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#genl_register_mc_group\">genl_register_mc_group</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#genl_multicast_group\">genl_multicast_group</a> *<a class=\"id\" href=\"#grp\">grp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#new_groups\">new_groups</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#name\">name</a>[0] == '\\0');", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_lock\">genl_lock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* special-case our own group */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#grp\">grp</a> == &amp;<a class=\"id\" href=\"#notify_grp\">notify_grp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#GENL_ID_CTRL\">GENL_ID_CTRL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#find_first_zero_bit\">find_first_zero_bit</a>(<a class=\"id\" href=\"#mc_groups\">mc_groups</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a> * <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>);", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> >= <a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a> * <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#nlen\">nlen</a> = (<a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a> + 1) * sizeof(unsigned long);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mc_groups\">mc_groups</a> == &amp;<a class=\"id\" href=\"#mc_group_start\">mc_group_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_groups\">new_groups</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#nlen\">nlen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_groups\">new_groups</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc_groups\">mc_groups</a> = <a class=\"id\" href=\"#new_groups\">new_groups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#mc_groups\">mc_groups</a> = <a class=\"id\" href=\"#mc_group_start\">mc_group_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_groups\">new_groups</a> = <a class=\"id\" href=\"#krealloc\">krealloc</a>(<a class=\"id\" href=\"#mc_groups\">mc_groups</a>, <a class=\"id\" href=\"#nlen\">nlen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_groups\">new_groups</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc_groups\">mc_groups</a> = <a class=\"id\" href=\"#new_groups\">new_groups</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc_groups\">mc_groups</a>[<a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a>] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#netnsok\">netnsok</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_net_rcu\">for_each_net_rcu</a>(<a class=\"id\" href=\"#net\">net</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__netlink_change_ngroups\">__netlink_change_ngroups</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#genl_sock\">genl_sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a> * <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * No need to roll back, can only fail if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * memory allocation fails and then the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * number of _possible_ groups has been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * increased on some sockets which is ok.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_change_ngroups\">netlink_change_ngroups</a>(<a class=\"id\" href=\"#init_net\">init_net</a>.<a class=\"id\" href=\"#genl_sock\">genl_sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mc_groups_longs\">mc_groups_longs</a> * <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#mc_groups\">mc_groups</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#mcast_groups\">mcast_groups</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#family\">family</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_ctrl_event\">genl_ctrl_event</a>(<a class=\"id\" href=\"#CTRL_CMD_NEWMCAST_GRP\">CTRL_CMD_NEWMCAST_GRP</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_register_mc_group\">genl_register_mc_group</a>);", 
"", 
"static void <a class=\"id\" href=\"#__genl_unregister_mc_group\">__genl_unregister_mc_group</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#genl_multicast_group\">genl_multicast_group</a> *<a class=\"id\" href=\"#grp\">grp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#family\">family</a> != <a class=\"id\" href=\"#family\">family</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_grab\">netlink_table_grab</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_net_rcu\">for_each_net_rcu</a>(<a class=\"id\" href=\"#net\">net</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__netlink_clear_multicast_users\">__netlink_clear_multicast_users</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#genl_sock\">genl_sock</a>, <a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netlink_table_ungrab\">netlink_table_ungrab</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#mc_groups\">mc_groups</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_ctrl_event\">genl_ctrl_event</a>(<a class=\"id\" href=\"#CTRL_CMD_DELMCAST_GRP\">CTRL_CMD_DELMCAST_GRP</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#id\">id</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * genl_unregister_mc_group - unregister a multicast group</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unregisters the specified multicast group and notifies userspace</span>", 
"<span class=\"comment\"> * about it. All current listeners on the group are removed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: It is not necessary to unregister all multicast groups before</span>", 
"<span class=\"comment\"> *       unregistering the family, unregistering the family will cause</span>", 
"<span class=\"comment\"> *       all assigned multicast groups to be unregistered automatically.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @family: Generic netlink family the group belongs to.</span>", 
"<span class=\"comment\"> * @grp: The group to unregister, must have been registered successfully</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> previously.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#genl_unregister_mc_group\">genl_unregister_mc_group</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#genl_multicast_group\">genl_multicast_group</a> *<a class=\"id\" href=\"#grp\">grp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_lock\">genl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__genl_unregister_mc_group\">__genl_unregister_mc_group</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_unregister_mc_group\">genl_unregister_mc_group</a>);", 
"", 
"static void <a class=\"id\" href=\"#genl_unregister_mc_groups\">genl_unregister_mc_groups</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_multicast_group\">genl_multicast_group</a> *<a class=\"id\" href=\"#grp\">grp</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#grp\">grp</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#mcast_groups\">mcast_groups</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__genl_unregister_mc_group\">__genl_unregister_mc_group</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#grp\">grp</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * genl_register_ops - register generic netlink operations</span>", 
"<span class=\"comment\"> * @family: generic netlink family</span>", 
"<span class=\"comment\"> * @ops: operations to be registered</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Registers the specified operations and assigns them to the specified</span>", 
"<span class=\"comment\"> * family. Either a doit or dumpit callback must be specified or the</span>", 
"<span class=\"comment\"> * operation will fail. Only one operation structure per command</span>", 
"<span class=\"comment\"> * identifier may be registered.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See include/net/genetlink.h for more documenation on the operations</span>", 
"<span class=\"comment\"> * structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#genl_register_ops\">genl_register_ops</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>, struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dumpit\">dumpit</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#doit\">doit</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#genl_get_cmd\">genl_get_cmd</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#family\">family</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dumpit\">dumpit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#GENL_CMD_CAP_DUMP\">GENL_CMD_CAP_DUMP</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#doit\">doit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#GENL_CMD_CAP_DO\">GENL_CMD_CAP_DO</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#policy\">policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#GENL_CMD_CAP_HASPOL\">GENL_CMD_CAP_HASPOL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_lock\">genl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ops_list\">ops_list</a>, &amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#ops_list\">ops_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_ctrl_event\">genl_ctrl_event</a>(<a class=\"id\" href=\"#CTRL_CMD_NEWOPS\">CTRL_CMD_NEWOPS</a>, <a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_register_ops\">genl_register_ops</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * genl_unregister_ops - unregister generic netlink operations</span>", 
"<span class=\"comment\"> * @family: generic netlink family</span>", 
"<span class=\"comment\"> * @ops: operations to be unregistered</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unregisters the specified operations and unassigns them from the</span>", 
"<span class=\"comment\"> * specified family. The operation blocks until the current message</span>", 
"<span class=\"comment\"> * processing has finished and doesn't start again until the</span>", 
"<span class=\"comment\"> * unregister process has finished.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: It is not necessary to unregister all operations before</span>", 
"<span class=\"comment\"> *       unregistering the family, unregistering the family will cause</span>", 
"<span class=\"comment\"> *       all assigned operations to be unregistered automatically.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#genl_unregister_ops\">genl_unregister_ops</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>, struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> *<a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_lock\">genl_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#rc\">rc</a>, &amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#ops_list\">ops_list</a>, <a class=\"id\" href=\"#ops_list\">ops_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == <a class=\"id\" href=\"#ops\">ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ops_list\">ops_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genl_ctrl_event\">genl_ctrl_event</a>(<a class=\"id\" href=\"#CTRL_CMD_DELOPS\">CTRL_CMD_DELOPS</a>, <a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_unregister_ops\">genl_unregister_ops</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * genl_register_family - register a generic netlink family</span>", 
"<span class=\"comment\"> * @family: generic netlink family</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Registers the specified family after validating it first. Only one</span>", 
"<span class=\"comment\"> * family may be registered with the same family name or identifier.</span>", 
"<span class=\"comment\"> * The family id may equal GENL_ID_GENERATE causing an unique id to</span>", 
"<span class=\"comment\"> * be automatically generated and assigned.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#genl_register_family\">genl_register_family</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a> && <a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a> &lt; <a class=\"id\" href=\"#GENL_MIN_ID\">GENL_MIN_ID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a> &gt; <a class=\"id\" href=\"#GENL_MAX_ID\">GENL_MAX_ID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#ops_list\">ops_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#mcast_groups\">mcast_groups</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_lock\">genl_lock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#genl_family_find_byname\">genl_family_find_byname</a>(<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout_locked\">errout_locked</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a> == <a class=\"id\" href=\"#GENL_ID_GENERATE\">GENL_ID_GENERATE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#newid\">newid</a> = <a class=\"id\" href=\"#genl_generate_id\">genl_generate_id</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newid\">newid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout_locked\">errout_locked</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#newid\">newid</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#genl_family_find_byid\">genl_family_find_byid</a>(<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout_locked\">errout_locked</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#maxattr\">maxattr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#attrbuf\">attrbuf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>((<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#maxattr\">maxattr</a>+1) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#attrbuf\">attrbuf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout_locked\">errout_locked</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#attrbuf\">attrbuf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#family_list\">family_list</a>, <a class=\"id\" href=\"#genl_family_chain\">genl_family_chain</a>(<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_ctrl_event\">genl_ctrl_event</a>(<a class=\"id\" href=\"#CTRL_CMD_NEWFAMILY\">CTRL_CMD_NEWFAMILY</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#errout_locked\">errout_locked</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_register_family\">genl_register_family</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * genl_register_family_with_ops - register a generic netlink family</span>", 
"<span class=\"comment\"> * @family: generic netlink family</span>", 
"<span class=\"comment\"> * @ops: operations to be registered</span>", 
"<span class=\"comment\"> * @n_ops: number of elements to register</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Registers the specified family and operations from the specified table.</span>", 
"<span class=\"comment\"> * Only one family may be registered with the same family name or identifier.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The family id may equal GENL_ID_GENERATE causing an unique id to</span>", 
"<span class=\"comment\"> * be automatically generated and assigned.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Either a doit or dumpit callback must be specified for every registered</span>", 
"<span class=\"comment\"> * operation or the function will fail. Only one operation structure per</span>", 
"<span class=\"comment\"> * command identifier may be registered.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See include/net/genetlink.h for more documenation on the operations</span>", 
"<span class=\"comment\"> * structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is equivalent to calling genl_register_family() followed by</span>", 
"<span class=\"comment\"> * genl_register_ops() for every operation entry in the table taking</span>", 
"<span class=\"comment\"> * care to unregister the family on error path.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#genl_register_family_with_ops\">genl_register_family_with_ops</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n_ops\">n_ops</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#genl_register_family\">genl_register_family</a>(<a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#n_ops\">n_ops</a>; ++<a class=\"id\" href=\"#i\">i</a>, ++<a class=\"id\" href=\"#ops\">ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#genl_register_ops\">genl_register_ops</a>(<a class=\"id\" href=\"#family\">family</a>, <a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unregister_family\">genl_unregister_family</a>(<a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_register_family_with_ops\">genl_register_family_with_ops</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * genl_unregister_family - unregister generic netlink family</span>", 
"<span class=\"comment\"> * @family: generic netlink family</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unregisters the specified family.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success or a negative error code.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#genl_unregister_family\">genl_unregister_family</a>(struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_lock\">genl_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unregister_mc_groups\">genl_unregister_mc_groups</a>(<a class=\"id\" href=\"#family\">family</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#genl_family_chain\">genl_family_chain</a>(<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a>), <a class=\"id\" href=\"#family_list\">family_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#id\">id</a> != <a class=\"id\" href=\"#rc\">rc</a>-><a class=\"id\" href=\"#id\">id</a> || <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#rc\">rc</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#rc\">rc</a>-><a class=\"id\" href=\"#family_list\">family_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#ops_list\">ops_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#attrbuf\">attrbuf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genl_ctrl_event\">genl_ctrl_event</a>(<a class=\"id\" href=\"#CTRL_CMD_DELFAMILY\">CTRL_CMD_DELFAMILY</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#genl_unregister_family\">genl_unregister_family</a>);", 
"", 
"static int <a class=\"id\" href=\"#genl_rcv_msg\">genl_rcv_msg</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_family\">genl_family</a> *<a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genl_info\">genl_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#genlmsghdr\">genlmsghdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hdrlen\">hdrlen</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#genl_family_find_byid\">genl_family_find_byid</a>(<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_type\">nlmsg_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#family\">family</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this family doesn't exist in this netns */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#netnsok\">netnsok</a> && !<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#init_net\">init_net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdrlen\">hdrlen</a> = <a class=\"id\" href=\"#GENL_HDRLEN\">GENL_HDRLEN</a> + <a class=\"id\" href=\"#family\">family</a>-><a class=\"id\" href=\"#hdrsize\">hdrsize</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> &lt; <a class=\"id\" href=\"#nlmsg_msg_size\">nlmsg_msg_size</a>(<a class=\"id\" href=\"#hdrlen\">hdrlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#genl_get_cmd\">genl_get_cmd</a>(<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#GENL_ADMIN_PERM\">GENL_ADMIN_PERM</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#security_netlink_recv\">security_netlink_recv</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_flags\">nlmsg_flags</a> &amp; <a class=\"id\" href=\"#NLM_F_DUMP\">NLM_F_DUMP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dumpit\">dumpit</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genl_unlock\">genl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_dump_start\">netlink_dump_start</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#genl_sock\">genl_sock</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#dumpit\">dumpit</a>, <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#genl_lock\">genl_lock</a>();", 
];
xr_frag_insert('l/02/b59170e71bf9e5747ae351d4e282b84fb7b160.xr', __xr_tmp);
