var __xr_tmp = [
"", 
"<span class=\"ts\"/><span class=\"comment\">/* May we inspect the given task?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This check is used both for attaching with ptrace</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and for allowing access to sensitive information in /proc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ptrace_attach denies several cases that /proc allows</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because setting up the necessary parent/child relationship</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or halting the specified task is impossible.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dumpable\">dumpable</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't let security modules deny introspection */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a> == <a class=\"id\" href=\"#current\">current</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcred\">tcred</a> = <a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#tcred\">tcred</a>-><a class=\"id\" href=\"#euid\">euid</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#tcred\">tcred</a>-><a class=\"id\" href=\"#suid\">suid</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#tcred\">tcred</a>-><a class=\"id\" href=\"#uid\">uid</a>  ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#gid\">gid</a> != <a class=\"id\" href=\"#tcred\">tcred</a>-><a class=\"id\" href=\"#egid\">egid</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#gid\">gid</a> != <a class=\"id\" href=\"#tcred\">tcred</a>-><a class=\"id\" href=\"#sgid\">sgid</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#gid\">gid</a> != <a class=\"id\" href=\"#tcred\">tcred</a>-><a class=\"id\" href=\"#gid\">gid</a>) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_PTRACE\">CAP_SYS_PTRACE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_rmb\">smp_rmb</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dumpable\">dumpable</a> = <a class=\"id\" href=\"#get_dumpable\">get_dumpable</a>(<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dumpable\">dumpable</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_PTRACE\">CAP_SYS_PTRACE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ptrace_access_check\">security_ptrace_access_check</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ptrace_may_access\">ptrace_may_access</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, unsigned int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__ptrace_may_access\">__ptrace_may_access</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ptrace_attach\">ptrace_attach</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_ptrace\">audit_ptrace</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_KTHREAD\">PF_KTHREAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#same_thread_group\">same_thread_group</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Protect exec's credential calculations against our interference;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interference; SUID, SGID and LSM creds get determined differently</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * under ptrace.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ERESTARTNOINTR\">ERESTARTNOINTR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#cred_guard_mutex\">cred_guard_mutex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#__ptrace_may_access\">__ptrace_may_access</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PTRACE_MODE_ATTACH\">PTRACE_MODE_ATTACH</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock_creds\">unlock_creds</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock_tasklist\">unlock_tasklist</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock_tasklist\">unlock_tasklist</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> = <a class=\"id\" href=\"#PT_PTRACED\">PT_PTRACED</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_PTRACE\">CAP_SYS_PTRACE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_PTRACE_CAP\">PT_PTRACE_CAP</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ptrace_link\">__ptrace_link</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#send_sig_info\">send_sig_info</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>, <a class=\"id\" href=\"#SEND_SIG_FORCED\">SEND_SIG_FORCED</a>, <a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<a class=\"id\" href=\"#unlock_tasklist\">unlock_tasklist</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<a class=\"id\" href=\"#unlock_creds\">unlock_creds</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#cred_guard_mutex\">cred_guard_mutex</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ptrace_traceme  --  helper for PTRACE_TRACEME</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Performs checks and sets PT_PTRACED.</span>", 
"<span class=\"comment\"> * Should be used by all ptrace implementations for PTRACE_TRACEME.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ptrace_traceme\">ptrace_traceme</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Are we already being traced? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#security_ptrace_traceme\">security_ptrace_traceme</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Check PF_EXITING to ensure -&gt;real_parent has not passed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * exit_ptrace(). Otherwise we don't report the error but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pretend -&gt;real_parent untraces us right after return.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && !(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#real_parent\">real_parent</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_EXITING\">PF_EXITING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> = <a class=\"id\" href=\"#PT_PTRACED\">PT_PTRACED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ptrace_link\">__ptrace_link</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#real_parent\">real_parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called with irqs disabled, returns true if childs should reap themselves.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ignoring_children\">ignoring_children</a>(struct <a class=\"id\" href=\"#sighand_struct\">sighand_struct</a> *<a class=\"id\" href=\"#sigh\">sigh</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#sigh\">sigh</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (<a class=\"id\" href=\"#sigh\">sigh</a>-><a class=\"id\" href=\"#action\">action</a>[<a class=\"id\" href=\"#SIGCHLD\">SIGCHLD</a>-1].<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a> == <a class=\"id\" href=\"#SIG_IGN\">SIG_IGN</a>) ||", 
"<span class=\"ts\"/>      (<a class=\"id\" href=\"#sigh\">sigh</a>-><a class=\"id\" href=\"#action\">action</a>[<a class=\"id\" href=\"#SIGCHLD\">SIGCHLD</a>-1].<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a> &amp; <a class=\"id\" href=\"#SA_NOCLDWAIT\">SA_NOCLDWAIT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#sigh\">sigh</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called with tasklist_lock held for writing.</span>", 
"<span class=\"comment\"> * Unlink a traced task, and clean it up if it was a traced zombie.</span>", 
"<span class=\"comment\"> * Return true if it needs to be reaped with release_task().</span>", 
"<span class=\"comment\"> * (We can't call release_task() here because we already hold tasklist_lock.)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If it's a zombie, our attachedness prevented normal parent notification</span>", 
"<span class=\"comment\"> * or self-reaping.  Do notification now if it would have happened earlier.</span>", 
"<span class=\"comment\"> * If it should reap itself, return true.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If it's our own child, there is no notification to do. But if our normal</span>", 
"<span class=\"comment\"> * children self-reap, then this child was prevented by ptrace and we must</span>", 
"<span class=\"comment\"> * reap it now, in that case we must also wake up sub-threads sleeping in</span>", 
"<span class=\"comment\"> * do_wait().</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#__ptrace_detach\">__ptrace_detach</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tracer\">tracer</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ptrace_unlink\">__ptrace_unlink</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a> == <a class=\"id\" href=\"#EXIT_ZOMBIE\">EXIT_ZOMBIE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#task_detached\">task_detached</a>(<a class=\"id\" href=\"#p\">p</a>) && <a class=\"id\" href=\"#thread_group_empty\">thread_group_empty</a>(<a class=\"id\" href=\"#p\">p</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#same_thread_group\">same_thread_group</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#real_parent\">real_parent</a>, <a class=\"id\" href=\"#tracer\">tracer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_notify_parent\">do_notify_parent</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exit_signal\">exit_signal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#ignoring_children\">ignoring_children</a>(<a class=\"id\" href=\"#tracer\">tracer</a>-><a class=\"id\" href=\"#sighand\">sighand</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wake_up_parent\">__wake_up_parent</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tracer\">tracer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exit_signal\">exit_signal</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#task_detached\">task_detached</a>(<a class=\"id\" href=\"#p\">p</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Mark it as in the process of being reaped. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a> = <a class=\"id\" href=\"#EXIT_DEAD\">EXIT_DEAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ptrace_detach\">ptrace_detach</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, unsigned int <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#dead\">dead</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#valid_signal\">valid_signal</a>(<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Architecture-specific hardware disable .. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptrace_disable\">ptrace_disable</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_tsk_thread_flag\">clear_tsk_thread_flag</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#TIF_SYSCALL_TRACE\">TIF_SYSCALL_TRACE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This child can be already killed. Make sure de_thread() or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * our sub-thread doing do_wait() didn't do release_task() yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#exit_code\">exit_code</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dead\">dead</a> = <a class=\"id\" href=\"#__ptrace_detach\">__ptrace_detach</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#dead\">dead</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_task\">release_task</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Detach all tasks we were using ptrace on. Called with tasklist held</span>", 
"<span class=\"comment\"> * for writing, and returns with it held too. But note it can release</span>", 
"<span class=\"comment\"> * and reacquire the lock.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#exit_ptrace\">exit_ptrace</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tracer\">tracer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#ptrace_dead\">ptrace_dead</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#tracer\">tracer</a>-><a class=\"id\" href=\"#ptraced\">ptraced</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#tracer\">tracer</a>-><a class=\"id\" href=\"#ptraced\">ptraced</a>, <a class=\"id\" href=\"#ptrace_entry\">ptrace_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__ptrace_detach\">__ptrace_detach</a>(<a class=\"id\" href=\"#tracer\">tracer</a>, <a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ptrace_entry\">ptrace_entry</a>, &amp;<a class=\"id\" href=\"#ptrace_dead\">ptrace_dead</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_irq\">write_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#tracer\">tracer</a>-><a class=\"id\" href=\"#ptraced\">ptraced</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#ptrace_dead\">ptrace_dead</a>, <a class=\"id\" href=\"#ptrace_entry\">ptrace_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ptrace_entry\">ptrace_entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_task\">release_task</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_irq\">write_lock_irq</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ptrace_readdata\">ptrace_readdata</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, unsigned long <a class=\"id\" href=\"#src\">src</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#dst\">dst</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[128];", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#this_len\">this_len</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = (<a class=\"id\" href=\"#len\">len</a> &gt; sizeof(<a class=\"id\" href=\"#buf\">buf</a>)) ? sizeof(<a class=\"id\" href=\"#buf\">buf</a>) : <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#this_len\">this_len</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#retval\">retval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copied\">copied</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ptrace_writedata\">ptrace_writedata</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#src\">src</a>, unsigned long <a class=\"id\" href=\"#dst\">dst</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[128];", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#this_len\">this_len</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = (<a class=\"id\" href=\"#len\">len</a> &gt; sizeof(<a class=\"id\" href=\"#buf\">buf</a>)) ? sizeof(<a class=\"id\" href=\"#buf\">buf</a>) : <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#this_len\">this_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#this_len\">this_len</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copied\">copied</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ptrace_setoptions\">ptrace_setoptions</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> &= ~<a class=\"id\" href=\"#PT_TRACE_MASK\">PT_TRACE_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#PTRACE_O_TRACESYSGOOD\">PTRACE_O_TRACESYSGOOD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_TRACESYSGOOD\">PT_TRACESYSGOOD</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#PTRACE_O_TRACEFORK\">PTRACE_O_TRACEFORK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_TRACE_FORK\">PT_TRACE_FORK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#PTRACE_O_TRACEVFORK\">PTRACE_O_TRACEVFORK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_TRACE_VFORK\">PT_TRACE_VFORK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#PTRACE_O_TRACECLONE\">PTRACE_O_TRACECLONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_TRACE_CLONE\">PT_TRACE_CLONE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#PTRACE_O_TRACEEXEC\">PTRACE_O_TRACEEXEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_TRACE_EXEC\">PT_TRACE_EXEC</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#PTRACE_O_TRACEVFORKDONE\">PTRACE_O_TRACEVFORKDONE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_TRACE_VFORK_DONE\">PT_TRACE_VFORK_DONE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a> &amp; <a class=\"id\" href=\"#PTRACE_O_TRACEEXIT\">PTRACE_O_TRACEEXIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace\">ptrace</a> |= <a class=\"id\" href=\"#PT_TRACE_EXIT\">PT_TRACE_EXIT</a>;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#data\">data</a> &amp; ~<a class=\"id\" href=\"#PTRACE_O_MASK\">PTRACE_O_MASK</a>) ? -<a class=\"id\" href=\"#EINVAL\">EINVAL</a> : 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ptrace_getsiginfo\">ptrace_getsiginfo</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#last_siginfo\">last_siginfo</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#info\">info</a> = *<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#last_siginfo\">last_siginfo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ptrace_setsiginfo\">ptrace_setsiginfo</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, const <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#last_siginfo\">last_siginfo</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#last_siginfo\">last_siginfo</a> = *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PTRACE_SINGLESTEP\">PTRACE_SINGLESTEP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_singlestep\">is_singlestep</a>(<a class=\"id\" href=\"#request\">request</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#request\">request</a>) == <a class=\"id\" href=\"#PTRACE_SINGLESTEP\">PTRACE_SINGLESTEP</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_singlestep\">is_singlestep</a>(<a class=\"id\" href=\"#request\">request</a>)<span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PTRACE_SINGLEBLOCK\">PTRACE_SINGLEBLOCK</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_singleblock\">is_singleblock</a>(<a class=\"id\" href=\"#request\">request</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#request\">request</a>) == <a class=\"id\" href=\"#PTRACE_SINGLEBLOCK\">PTRACE_SINGLEBLOCK</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_singleblock\">is_singleblock</a>(<a class=\"id\" href=\"#request\">request</a>)<span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PTRACE_SYSEMU\">PTRACE_SYSEMU</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_sysemu_singlestep\">is_sysemu_singlestep</a>(<a class=\"id\" href=\"#request\">request</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#request\">request</a>) == <a class=\"id\" href=\"#PTRACE_SYSEMU_SINGLESTEP\">PTRACE_SYSEMU_SINGLESTEP</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_sysemu_singlestep\">is_sysemu_singlestep</a>(<a class=\"id\" href=\"#request\">request</a>)<span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ptrace_resume\">ptrace_resume</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, long <a class=\"id\" href=\"#request\">request</a>, long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#valid_signal\">valid_signal</a>(<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#request\">request</a> == <a class=\"id\" href=\"#PTRACE_SYSCALL\">PTRACE_SYSCALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_tsk_thread_flag\">set_tsk_thread_flag</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#TIF_SYSCALL_TRACE\">TIF_SYSCALL_TRACE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_tsk_thread_flag\">clear_tsk_thread_flag</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#TIF_SYSCALL_TRACE\">TIF_SYSCALL_TRACE</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TIF_SYSCALL_EMU\">TIF_SYSCALL_EMU</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#request\">request</a> == <a class=\"id\" href=\"#PTRACE_SYSEMU\">PTRACE_SYSEMU</a> || <a class=\"id\" href=\"#request\">request</a> == <a class=\"id\" href=\"#PTRACE_SYSEMU_SINGLESTEP\">PTRACE_SYSEMU_SINGLESTEP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_tsk_thread_flag\">set_tsk_thread_flag</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#TIF_SYSCALL_EMU\">TIF_SYSCALL_EMU</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_tsk_thread_flag\">clear_tsk_thread_flag</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#TIF_SYSCALL_EMU\">TIF_SYSCALL_EMU</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_singleblock\">is_singleblock</a>(<a class=\"id\" href=\"#request\">request</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#arch_has_block_step\">arch_has_block_step</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_enable_block_step\">user_enable_block_step</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#is_singlestep\">is_singlestep</a>(<a class=\"id\" href=\"#request\">request</a>) || <a class=\"id\" href=\"#is_sysemu_singlestep\">is_sysemu_singlestep</a>(<a class=\"id\" href=\"#request\">request</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#arch_has_single_step\">arch_has_single_step</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_enable_single_step\">user_enable_single_step</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_disable_single_step\">user_disable_single_step</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#exit_code\">exit_code</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_ARCH_TRACEHOOK\">CONFIG_HAVE_ARCH_TRACEHOOK</a>", 
"", 
"static const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *", 
"<a class=\"id\" href=\"#find_regset\">find_regset</a>(const struct <a class=\"id\" href=\"#user_regset_view\">user_regset_view</a> *<a class=\"id\" href=\"#view\">view</a>, unsigned int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#view\">view</a>-><a class=\"id\" href=\"#n\">n</a>; ++<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regset\">regset</a> = <a class=\"id\" href=\"#view\">view</a>-><a class=\"id\" href=\"#regsets\">regsets</a> + <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#regset\">regset</a>-><a class=\"id\" href=\"#core_note_type\">core_note_type</a> == <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#regset\">regset</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ptrace_regset\">ptrace_regset</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, int <a class=\"id\" href=\"#req\">req</a>, unsigned int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#kiov\">kiov</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#user_regset_view\">user_regset_view</a> *<a class=\"id\" href=\"#view\">view</a> = <a class=\"id\" href=\"#task_user_regset_view\">task_user_regset_view</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#user_regset\">user_regset</a> *<a class=\"id\" href=\"#regset\">regset</a> = <a class=\"id\" href=\"#find_regset\">find_regset</a>(<a class=\"id\" href=\"#view\">view</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#regset_no\">regset_no</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#regset\">regset</a> || (<a class=\"id\" href=\"#kiov\">kiov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a> % <a class=\"id\" href=\"#regset\">regset</a>-><a class=\"id\" href=\"#size\">size</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regset_no\">regset_no</a> = <a class=\"id\" href=\"#regset\">regset</a> - <a class=\"id\" href=\"#view\">view</a>-><a class=\"id\" href=\"#regsets\">regsets</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiov\">kiov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#kiov\">kiov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#__kernel_size_t\">__kernel_size_t</a>) (<a class=\"id\" href=\"#regset\">regset</a>-><a class=\"id\" href=\"#n\">n</a> * <a class=\"id\" href=\"#regset\">regset</a>-><a class=\"id\" href=\"#size\">size</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a> == <a class=\"id\" href=\"#PTRACE_GETREGSET\">PTRACE_GETREGSET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#copy_regset_to_user\">copy_regset_to_user</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#view\">view</a>, <a class=\"id\" href=\"#regset_no\">regset_no</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#kiov\">kiov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>, <a class=\"id\" href=\"#kiov\">kiov</a>-><a class=\"id\" href=\"#iov_base\">iov_base</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#copy_regset_from_user\">copy_regset_from_user</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#view\">view</a>, <a class=\"id\" href=\"#regset_no\">regset_no</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#kiov\">kiov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>, <a class=\"id\" href=\"#kiov\">kiov</a>-><a class=\"id\" href=\"#iov_base\">iov_base</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#ptrace_request\">ptrace_request</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, long <a class=\"id\" href=\"#request\">request</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   long <a class=\"id\" href=\"#addr\">addr</a>, long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#siginfo\">siginfo</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#request\">request</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_PEEKTEXT\">PTRACE_PEEKTEXT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_PEEKDATA\">PTRACE_PEEKDATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#generic_ptrace_peekdata\">generic_ptrace_peekdata</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_POKETEXT\">PTRACE_POKETEXT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_POKEDATA\">PTRACE_POKEDATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#generic_ptrace_pokedata\">generic_ptrace_pokedata</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PTRACE_OLDSETOPTIONS\">PTRACE_OLDSETOPTIONS</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_OLDSETOPTIONS\">PTRACE_OLDSETOPTIONS</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SETOPTIONS\">PTRACE_SETOPTIONS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_setoptions\">ptrace_setoptions</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETEVENTMSG\">PTRACE_GETEVENTMSG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace_message\">ptrace_message</a>, (unsigned long <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETSIGINFO\">PTRACE_GETSIGINFO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_getsiginfo\">ptrace_getsiginfo</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_siginfo_to_user\">copy_siginfo_to_user</a>((<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SETSIGINFO\">PTRACE_SETSIGINFO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>, (<a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof <a class=\"id\" href=\"#siginfo\">siginfo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_setsiginfo\">ptrace_setsiginfo</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_DETACH\">PTRACE_DETACH</a>:<span class=\"ts\"/> <span class=\"comment\">/* detach a process that was attached. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_detach\">ptrace_detach</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BINFMT_ELF_FDPIC\">CONFIG_BINFMT_ELF_FDPIC</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETFDPIC\">PTRACE_GETFDPIC</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#tmp\">tmp</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETFDPIC_EXEC\">PTRACE_GETFDPIC_EXEC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#exec_fdpic_loadmap\">exec_fdpic_loadmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETFDPIC_INTERP\">PTRACE_GETFDPIC_INTERP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#interp_fdpic_loadmap\">interp_fdpic_loadmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, (unsigned long <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PTRACE_SINGLESTEP\">PTRACE_SINGLESTEP</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SINGLESTEP\">PTRACE_SINGLESTEP</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PTRACE_SINGLEBLOCK\">PTRACE_SINGLEBLOCK</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SINGLEBLOCK\">PTRACE_SINGLEBLOCK</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PTRACE_SYSEMU\">PTRACE_SYSEMU</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SYSEMU\">PTRACE_SYSEMU</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SYSEMU_SINGLESTEP\">PTRACE_SYSEMU_SINGLESTEP</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SYSCALL\">PTRACE_SYSCALL</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_CONT\">PTRACE_CONT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ptrace_resume\">ptrace_resume</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_KILL\">PTRACE_KILL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a>)<span class=\"ts\"/><span class=\"comment\">/* already dead */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ptrace_resume\">ptrace_resume</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_ARCH_TRACEHOOK\">CONFIG_HAVE_ARCH_TRACEHOOK</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETREGSET\">PTRACE_GETREGSET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SETREGSET\">PTRACE_SETREGSET</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#kiov\">kiov</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uiov\">uiov</a> = (struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#uiov\">uiov</a>, sizeof(*<a class=\"id\" href=\"#uiov\">uiov</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#kiov\">kiov</a>.<a class=\"id\" href=\"#iov_base\">iov_base</a>, &amp;<a class=\"id\" href=\"#uiov\">uiov</a>-><a class=\"id\" href=\"#iov_base\">iov_base</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#kiov\">kiov</a>.<a class=\"id\" href=\"#iov_len\">iov_len</a>, &amp;<a class=\"id\" href=\"#uiov\">uiov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_regset\">ptrace_regset</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#kiov\">kiov</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kiov\">kiov</a>.<a class=\"id\" href=\"#iov_len\">iov_len</a>, &amp;<a class=\"id\" href=\"#uiov\">uiov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#ptrace_get_task_struct\">ptrace_get_task_struct</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#find_task_by_vpid\">find_task_by_vpid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESRCH\">ESRCH</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#child\">child</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#arch_ptrace_attach\">arch_ptrace_attach</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#arch_ptrace_attach\">arch_ptrace_attach</a>(<a class=\"id\" href=\"#child\">child</a>)<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#ptrace\">ptrace</a>, long, <a class=\"id\" href=\"#request\">request</a>, long, <a class=\"id\" href=\"#pid\">pid</a>, long, <a class=\"id\" href=\"#addr\">addr</a>, long, <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#request\">request</a> == <a class=\"id\" href=\"#PTRACE_TRACEME\">PTRACE_TRACEME</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_traceme\">ptrace_traceme</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_ptrace_attach\">arch_ptrace_attach</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#ptrace_get_task_struct\">ptrace_get_task_struct</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#child\">child</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#request\">request</a> == <a class=\"id\" href=\"#PTRACE_ATTACH\">PTRACE_ATTACH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_attach\">ptrace_attach</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Some architectures need to do book-keeping after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a ptrace attach.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arch_ptrace_attach\">arch_ptrace_attach</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_task_struct\">out_put_task_struct</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_check_attach\">ptrace_check_attach</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#request\">request</a> == <a class=\"id\" href=\"#PTRACE_KILL\">PTRACE_KILL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_task_struct\">out_put_task_struct</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#arch_ptrace\">arch_ptrace</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#request\">request</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"", 
" <a class=\"id\" href=\"#out_put_task_struct\">out_put_task_struct</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#child\">child</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#generic_ptrace_peekdata\">generic_ptrace_peekdata</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, long <a class=\"id\" href=\"#addr\">addr</a>, long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>, sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>), 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a> != sizeof(<a class=\"id\" href=\"#tmp\">tmp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, (unsigned long <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#generic_ptrace_pokedata\">generic_ptrace_pokedata</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, long <a class=\"id\" href=\"#addr\">addr</a>, long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#data\">data</a>, sizeof(<a class=\"id\" href=\"#data\">data</a>), 1);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#copied\">copied</a> == sizeof(<a class=\"id\" href=\"#data\">data</a>)) ? 0 : -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compat\">compat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#compat_ptrace_request\">compat_ptrace_request</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#compat_long_t\">compat_long_t</a> <a class=\"id\" href=\"#request\">request</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#datap\">datap</a> = <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#word\">word</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#siginfo\">siginfo</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#request\">request</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_PEEKTEXT\">PTRACE_PEEKTEXT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_PEEKDATA\">PTRACE_PEEKDATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#word\">word</a>, sizeof(<a class=\"id\" href=\"#word\">word</a>), 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != sizeof(<a class=\"id\" href=\"#word\">word</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#word\">word</a>, <a class=\"id\" href=\"#datap\">datap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_POKETEXT\">PTRACE_POKETEXT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_POKEDATA\">PTRACE_POKEDATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#data\">data</a>, sizeof(<a class=\"id\" href=\"#data\">data</a>), 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (<a class=\"id\" href=\"#ret\">ret</a> != sizeof(<a class=\"id\" href=\"#data\">data</a>) ? -<a class=\"id\" href=\"#EIO\">EIO</a> : 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETEVENTMSG\">PTRACE_GETEVENTMSG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#put_user\">put_user</a>((<a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a>) <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ptrace_message\">ptrace_message</a>, <a class=\"id\" href=\"#datap\">datap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETSIGINFO\">PTRACE_GETSIGINFO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_getsiginfo\">ptrace_getsiginfo</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_siginfo_to_user32\">copy_siginfo_to_user32</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#compat_siginfo\">compat_siginfo</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#datap\">datap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SETSIGINFO\">PTRACE_SETSIGINFO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>, 0, sizeof <a class=\"id\" href=\"#siginfo\">siginfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_siginfo_from_user32\">copy_siginfo_from_user32</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>, (struct <a class=\"id\" href=\"#compat_siginfo\">compat_siginfo</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#datap\">datap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ptrace_setsiginfo\">ptrace_setsiginfo</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#siginfo\">siginfo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_ARCH_TRACEHOOK\">CONFIG_HAVE_ARCH_TRACEHOOK</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_GETREGSET\">PTRACE_GETREGSET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PTRACE_SETREGSET\">PTRACE_SETREGSET</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#kiov\">kiov</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uiov\">uiov</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#datap\">datap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
];
xr_frag_insert('l/03/fd5857decb62cf581bac1dd7c270574adf9bb0.xr', __xr_tmp);
