var __xr_tmp = [
"<span class=\"ts\"/>                 const struct <a class=\"id\" href=\"#tcf_ext_map\">tcf_ext_map</a> *<a class=\"id\" href=\"#map\">map</a>);", 
"extern int <a class=\"id\" href=\"#tcf_exts_dump_stats\">tcf_exts_dump_stats</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#tcf_exts\">tcf_exts</a> *<a class=\"id\" href=\"#exts\">exts</a>,", 
"<span class=\"ts\"/>                       const struct <a class=\"id\" href=\"#tcf_ext_map\">tcf_ext_map</a> *<a class=\"id\" href=\"#map\">map</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct tcf_pkt_info - packet information</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tcf_pkt_info\">tcf_pkt_info</a> {", 
"<span class=\"ts\"/>unsigned char *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_EMATCH\">CONFIG_NET_EMATCH</a>", 
"", 
"struct <a class=\"id\" href=\"#tcf_ematch_ops\">tcf_ematch_ops</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct tcf_ematch - extended match (ematch)</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * @matchid: identifier to allow userspace to reidentify a match</span>", 
"<span class=\"comment\"> * @flags: flags specifying attributes and the relation to other matches</span>", 
"<span class=\"comment\"> * @ops: the operations lookup table of the corresponding ematch module</span>", 
"<span class=\"comment\"> * @datalen: length of the ematch specific configuration data</span>", 
"<span class=\"comment\"> * @data: ematch specific data</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcf_ematch_ops\">tcf_ematch_ops</a> * <a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datalen\">datalen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#matchid\">matchid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcf_em_is_container\">tcf_em_is_container</a>(struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *<a class=\"id\" href=\"#em\">em</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#em\">em</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcf_em_is_simple\">tcf_em_is_simple</a>(struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *<a class=\"id\" href=\"#em\">em</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#em\">em</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCF_EM_SIMPLE\">TCF_EM_SIMPLE</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcf_em_is_inverted\">tcf_em_is_inverted</a>(struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *<a class=\"id\" href=\"#em\">em</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#em\">em</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCF_EM_INVERT\">TCF_EM_INVERT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcf_em_last_match\">tcf_em_last_match</a>(struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *<a class=\"id\" href=\"#em\">em</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#em\">em</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCF_EM_REL_MASK\">TCF_EM_REL_MASK</a>) == <a class=\"id\" href=\"#TCF_EM_REL_END\">TCF_EM_REL_END</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcf_em_early_end\">tcf_em_early_end</a>(struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *<a class=\"id\" href=\"#em\">em</a>, int <a class=\"id\" href=\"#result\">result</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcf_em_last_match\">tcf_em_last_match</a>(<a class=\"id\" href=\"#em\">em</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> == 0 && <a class=\"id\" href=\"#em\">em</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCF_EM_REL_AND\">TCF_EM_REL_AND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> != 0 && <a class=\"id\" href=\"#em\">em</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TCF_EM_REL_OR\">TCF_EM_REL_OR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<span class=\"ts\"/>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct tcf_ematch_tree - ematch tree handle</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @hdr: ematch tree header supplied by userspace</span>", 
"<span class=\"comment\"> * @matches: array of ematches</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcf_ematch_tree_hdr\">tcf_ematch_tree_hdr</a> <a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *<span class=\"ts\"/><a class=\"id\" href=\"#matches\">matches</a>;", 
"<span class=\"ts\"/>", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct tcf_ematch_ops - ematch module operations</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * @kind: identifier (kind) of this ematch module</span>", 
"<span class=\"comment\"> * @datalen: length of expected configuration data (optional)</span>", 
"<span class=\"comment\"> * @change: called during validation (optional)</span>", 
"<span class=\"comment\"> * @match: called during ematch tree evaluation, must return 1/0</span>", 
"<span class=\"comment\"> * @destroy: called during destroyage (optional)</span>", 
"<span class=\"comment\"> * @dump: called during dumping process (optional)</span>", 
"<span class=\"comment\"> * @owner: owner, must be set to THIS_MODULE</span>", 
"<span class=\"comment\"> * @link: link to previous/next ematch module (internal use)</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#tcf_ematch_ops\">tcf_ematch_ops</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kind\">kind</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datalen\">datalen</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#change\">change</a>)(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *, void *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int, struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#match\">match</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#tcf_pkt_info\">tcf_pkt_info</a> *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#destroy\">destroy</a>)(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#dump\">dump</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, struct <a class=\"id\" href=\"#tcf_ematch\">tcf_ematch</a> *);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#tcf_em_register\">tcf_em_register</a>(struct <a class=\"id\" href=\"#tcf_ematch_ops\">tcf_ematch_ops</a> *);", 
"extern void <a class=\"id\" href=\"#tcf_em_unregister\">tcf_em_unregister</a>(struct <a class=\"id\" href=\"#tcf_ematch_ops\">tcf_ematch_ops</a> *);", 
"extern int <a class=\"id\" href=\"#tcf_em_tree_validate\">tcf_em_tree_validate</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> *);", 
"extern void <a class=\"id\" href=\"#tcf_em_tree_destroy\">tcf_em_tree_destroy</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *, struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> *);", 
"extern int <a class=\"id\" href=\"#tcf_em_tree_dump\">tcf_em_tree_dump</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> *, int);", 
"extern int <a class=\"id\" href=\"#__tcf_em_tree_match\">__tcf_em_tree_match</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#tcf_pkt_info\">tcf_pkt_info</a> *);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tcf_em_tree_change - replace ematch tree of a running classifier</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @tp: classifier kind handle</span>", 
"<span class=\"comment\"> * @dst: destination ematch tree variable</span>", 
"<span class=\"comment\"> * @src: source ematch tree (temporary tree from tcf_em_tree_validate)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This functions replaces the ematch tree in @dst with the ematch</span>", 
"<span class=\"comment\"> * tree in @src. The classifier in charge of the ematch tree may be</span>", 
"<span class=\"comment\"> * running.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcf_em_tree_change\">tcf_em_tree_change</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> *<a class=\"id\" href=\"#src\">src</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcf_tree_lock\">tcf_tree_lock</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, sizeof(*<a class=\"id\" href=\"#dst\">dst</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcf_tree_unlock\">tcf_tree_unlock</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tcf_em_tree_match - evaulate an ematch tree</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @skb: socket buffer of the packet in question</span>", 
"<span class=\"comment\"> * @tree: ematch tree to be used for evaluation</span>", 
"<span class=\"comment\"> * @info: packet information examined by classifier</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function matches @skb against the ematch tree in @tree by going</span>", 
"<span class=\"comment\"> * through all ematches respecting their logic relations returning</span>", 
"<span class=\"comment\"> * as soon as the result is obvious.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 1 if the ematch tree as-one matches, no ematches are configured</span>", 
"<span class=\"comment\"> * or ematch is not enabled in the kernel, otherwise 0 is returned.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcf_em_tree_match\">tcf_em_tree_match</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> *<a class=\"id\" href=\"#tree\">tree</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#tcf_pkt_info\">tcf_pkt_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tree\">tree</a>-><a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#nmatches\">nmatches</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__tcf_em_tree_match\">__tcf_em_tree_match</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tree\">tree</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MODULE_ALIAS_TCF_EMATCH\">MODULE_ALIAS_TCF_EMATCH</a>(<a class=\"id\" href=\"#kind\">kind</a>)<span class=\"ts\"/><a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"ematch-kind-\" <a class=\"id\" href=\"#__stringify\">__stringify</a>(<a class=\"id\" href=\"#kind\">kind</a>))", 
"", 
"#else <span class=\"comment\">/* CONFIG_NET_EMATCH */</span>", 
"", 
"struct <a class=\"id\" href=\"#tcf_ematch_tree\">tcf_ematch_tree</a> {", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcf_em_tree_validate\">tcf_em_tree_validate</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#t\">t</a>) ((void)(<a class=\"id\" href=\"#t\">t</a>), 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcf_em_tree_destroy\">tcf_em_tree_destroy</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#t\">t</a>) do { (void)(<a class=\"id\" href=\"#t\">t</a>); } while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcf_em_tree_dump\">tcf_em_tree_dump</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#tlv\">tlv</a>) (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcf_em_tree_change\">tcf_em_tree_change</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>) do { } while(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#tcf_em_tree_match\">tcf_em_tree_match</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#info\">info</a>) ((void)(<a class=\"id\" href=\"#info\">info</a>), 1)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NET_EMATCH */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned char * <a class=\"id\" href=\"#tcf_get_base_ptr\">tcf_get_base_ptr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#layer\">layer</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#layer\">layer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCF_LAYER_LINK\">TCF_LAYER_LINK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCF_LAYER_NETWORK\">TCF_LAYER_NETWORK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#TCF_LAYER_TRANSPORT\">TCF_LAYER_TRANSPORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcf_valid_offset\">tcf_valid_offset</a>(const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const unsigned char *<a class=\"id\" href=\"#ptr\">ptr</a>, const int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#ptr\">ptr</a> + <a class=\"id\" href=\"#len\">len</a>) &lt; <a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>) && <a class=\"id\" href=\"#ptr\">ptr</a> &gt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_IND\">CONFIG_NET_CLS_IND</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#tcf_change_indev\">tcf_change_indev</a>(struct <a class=\"id\" href=\"#tcf_proto\">tcf_proto</a> *<a class=\"id\" href=\"#tp\">tp</a>, char *<a class=\"id\" href=\"#indev\">indev</a>, struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#indev_tlv\">indev_tlv</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nla_strlcpy\">nla_strlcpy</a>(<a class=\"id\" href=\"#indev\">indev</a>, <a class=\"id\" href=\"#indev_tlv\">indev_tlv</a>, <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>) >= <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#tcf_match_indev\">tcf_match_indev</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, char *<a class=\"id\" href=\"#indev\">indev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#indev\">indev</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if  (!<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#skb_iif\">skb_iif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_index\">__dev_get_by_index</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#skb_iif\">skb_iif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a> || <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#indev\">indev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NET_CLS_IND */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/03/feb1694d682ff43d3a243039ed4832ab8542d4.xr', __xr_tmp);
