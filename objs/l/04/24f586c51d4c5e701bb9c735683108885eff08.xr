var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 Sistina Software</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 Red Hat GmbH</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"dm.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>-<a class=\"id\" href=\"#mapper\">mapper</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempool\">mempool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dm\">dm</a>-<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_MSG_PREFIX\">DM_MSG_PREFIX</a> \"io\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_IO_MAX_REGIONS\">DM_IO_MAX_REGIONS</a><span class=\"ts\"/><a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>", 
"", 
"struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_t\">mempool_t</a> *<a class=\"id\" href=\"#pool\">pool</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_set\">bio_set</a> *<a class=\"id\" href=\"#bios\">bios</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Aligning 'struct io' reduces the number of bits required to store</span>", 
"<span class=\"comment\"> * its address.  Refer to store_io_and_region_in_bio() below.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#io\">io</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#error_bits\">error_bits</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#eopnotsupp_bits\">eopnotsupp_bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#sleeper\">sleeper</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_notify_fn\">io_notify_fn</a> <a class=\"id\" href=\"#callback\">callback</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(<a class=\"id\" href=\"#DM_IO_MAX_REGIONS\">DM_IO_MAX_REGIONS</a>)));", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#_dm_io_cache\">_dm_io_cache</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * io contexts are only dynamically allocated for asynchronous</span>", 
"<span class=\"comment\"> * io.  Since async io is likely to be the majority of io we'll</span>", 
"<span class=\"comment\"> * have the same number of io contexts as bios! (FIXME: must reduce this).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static unsigned int <a class=\"id\" href=\"#pages_to_ios\">pages_to_ios</a>(unsigned int <a class=\"id\" href=\"#pages\">pages</a>)", 
"{", 
"<span class=\"ts\"/>return 4 * <a class=\"id\" href=\"#pages\">pages</a>;<span class=\"ts\"/><span class=\"comment\">/* too many ? */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create a client with mempool and bioset.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#dm_io_client_create\">dm_io_client_create</a>(unsigned <a class=\"id\" href=\"#num_pages\">num_pages</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ios\">ios</a> = <a class=\"id\" href=\"#pages_to_ios\">pages_to_ios</a>(<a class=\"id\" href=\"#num_pages\">num_pages</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#client\">client</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#client\">client</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a> = <a class=\"id\" href=\"#mempool_create_slab_pool\">mempool_create_slab_pool</a>(<a class=\"id\" href=\"#ios\">ios</a>, <a class=\"id\" href=\"#_dm_io_cache\">_dm_io_cache</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#bios\">bios</a> = <a class=\"id\" href=\"#bioset_create\">bioset_create</a>(16, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#bios\">bios</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#client\">client</a>;", 
"", 
"   <a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#client\">client</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_io_client_create\">dm_io_client_create</a>);", 
"", 
"int <a class=\"id\" href=\"#dm_io_client_resize\">dm_io_client_resize</a>(unsigned <a class=\"id\" href=\"#num_pages\">num_pages</a>, struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mempool_resize\">mempool_resize</a>(<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a>, <a class=\"id\" href=\"#pages_to_ios\">pages_to_ios</a>(<a class=\"id\" href=\"#num_pages\">num_pages</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_io_client_resize\">dm_io_client_resize</a>);", 
"", 
"void <a class=\"id\" href=\"#dm_io_client_destroy\">dm_io_client_destroy</a>(struct <a class=\"id\" href=\"#dm_io_client\">dm_io_client</a> *<a class=\"id\" href=\"#client\">client</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mempool_destroy\">mempool_destroy</a>(<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bioset_free\">bioset_free</a>(<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#bios\">bios</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#client\">client</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dm_io_client_destroy\">dm_io_client_destroy</a>);", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * We need to keep track of which region a bio is doing io for.</span>", 
"<span class=\"comment\"> * To avoid a memory allocation to store just 5 or 6 bits, we</span>", 
"<span class=\"comment\"> * ensure the 'struct io' pointer is aligned so enough low bits are</span>", 
"<span class=\"comment\"> * always zero and then combine it with the region number directly in</span>", 
"<span class=\"comment\"> * bi_private.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"static void <a class=\"id\" href=\"#store_io_and_region_in_bio\">store_io_and_region_in_bio</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#io\">io</a> *<a class=\"id\" href=\"#io\">io</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned <a class=\"id\" href=\"#region\">region</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#IS_ALIGNED\">IS_ALIGNED</a>((unsigned long)<a class=\"id\" href=\"#io\">io</a>, <a class=\"id\" href=\"#DM_IO_MAX_REGIONS\">DM_IO_MAX_REGIONS</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMCRIT\">DMCRIT</a>(\"Unaligned struct io pointer %p\", <a class=\"id\" href=\"#io\">io</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = (void *)((unsigned long)<a class=\"id\" href=\"#io\">io</a> | <a class=\"id\" href=\"#region\">region</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#retrieve_io_and_region_from_bio\">retrieve_io_and_region_from_bio</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#io\">io</a> **<a class=\"id\" href=\"#io\">io</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned *<a class=\"id\" href=\"#region\">region</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a> = (unsigned long)<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#io\">io</a> = (void *)(<a class=\"id\" href=\"#val\">val</a> &amp; -(unsigned long)<a class=\"id\" href=\"#DM_IO_MAX_REGIONS\">DM_IO_MAX_REGIONS</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#region\">region</a> = <a class=\"id\" href=\"#val\">val</a> &amp; (<a class=\"id\" href=\"#DM_IO_MAX_REGIONS\">DM_IO_MAX_REGIONS</a> - 1);", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * We need an io object to keep track of the number of bios that</span>", 
"<span class=\"comment\"> * have been dispatched for a particular io.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"static void <a class=\"id\" href=\"#dec_count\">dec_count</a>(struct <a class=\"id\" href=\"#io\">io</a> *<a class=\"id\" href=\"#io\">io</a>, unsigned int <a class=\"id\" href=\"#region\">region</a>, int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#region\">region</a>, &amp;<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#error_bits\">error_bits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#region\">region</a>, &amp;<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#eopnotsupp_bits\">eopnotsupp_bits</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#count\">count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#sleeper\">sleeper</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#sleeper\">sleeper</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#error_bits\">error_bits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_notify_fn\">io_notify_fn</a> <a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#callback\">callback</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mempool_free\">mempool_free</a>(<a class=\"id\" href=\"#io\">io</a>, <a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#pool\">pool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#endio\">endio</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#error\">error</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io\">io</a> *<a class=\"id\" href=\"#io\">io</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#region\">region</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zero_fill_bio\">zero_fill_bio</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The bio destructor in bio_put() may use the io object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retrieve_io_and_region_from_bio\">retrieve_io_and_region_from_bio</a>(<a class=\"id\" href=\"#bio\">bio</a>, &amp;<a class=\"id\" href=\"#io\">io</a>, &amp;<a class=\"id\" href=\"#region\">region</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dec_count\">dec_count</a>(<a class=\"id\" href=\"#io\">io</a>, <a class=\"id\" href=\"#region\">region</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * These little objects provide an abstraction for getting a new</span>", 
"<span class=\"comment\"> * destination page for io.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"struct <a class=\"id\" href=\"#dpages\">dpages</a> {", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#get_page\">get_page</a>)(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#p\">p</a>, unsigned long *<a class=\"id\" href=\"#len\">len</a>, unsigned *<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#next_page\">next_page</a>)(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>);", 
"", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#context_u\">context_u</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#context_ptr\">context_ptr</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions for getting the pages from a list.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#list_get_page\">list_get_page</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#p\">p</a>, unsigned long *<a class=\"id\" href=\"#len\">len</a>, unsigned *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#o\">o</a> = <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_list\">page_list</a> *<a class=\"id\" href=\"#pl\">pl</a> = (struct <a class=\"id\" href=\"#page_list\">page_list</a> *) <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#pl\">pl</a>-><a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#o\">o</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#o\">o</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#list_next_page\">list_next_page</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_list\">page_list</a> *<a class=\"id\" href=\"#pl\">pl</a> = (struct <a class=\"id\" href=\"#page_list\">page_list</a> *) <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a> = <a class=\"id\" href=\"#pl\">pl</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a> = 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#list_dp_init\">list_dp_init</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>, struct <a class=\"id\" href=\"#page_list\">page_list</a> *<a class=\"id\" href=\"#pl\">pl</a>, unsigned <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#get_page\">get_page</a> = <a class=\"id\" href=\"#list_get_page\">list_get_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#next_page\">next_page</a> = <a class=\"id\" href=\"#list_next_page\">list_next_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a> = <a class=\"id\" href=\"#pl\">pl</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions for getting the pages from a bvec.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#bvec_get_page\">bvec_get_page</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#p\">p</a>, unsigned long *<a class=\"id\" href=\"#len\">len</a>, unsigned *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a> = (struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *) <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bvec_next_page\">bvec_next_page</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a> = (struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *) <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a> = <a class=\"id\" href=\"#bvec\">bvec</a> + 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bvec_dp_init\">bvec_dp_init</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>, struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#get_page\">get_page</a> = <a class=\"id\" href=\"#bvec_get_page\">bvec_get_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#next_page\">next_page</a> = <a class=\"id\" href=\"#bvec_next_page\">bvec_next_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a> = <a class=\"id\" href=\"#bvec\">bvec</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions for getting the pages from a VMA.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#vm_get_page\">vm_get_page</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#p\">p</a>, unsigned long *<a class=\"id\" href=\"#len\">len</a>, unsigned *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#vmalloc_to_page\">vmalloc_to_page</a>(<a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vm_next_page\">vm_next_page</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a> = 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vm_dp_init\">vm_dp_init</a>(struct <a class=\"id\" href=\"#dpages\">dpages</a> *<a class=\"id\" href=\"#dp\">dp</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#get_page\">get_page</a> = <a class=\"id\" href=\"#vm_get_page\">vm_get_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#next_page\">next_page</a> = <a class=\"id\" href=\"#vm_next_page\">vm_next_page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_u\">context_u</a> = ((unsigned long) <a class=\"id\" href=\"#data\">data</a>) &amp; (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dp\">dp</a>-><a class=\"id\" href=\"#context_ptr\">context_ptr</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_bio_destructor\">dm_bio_destructor</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
];
xr_frag_insert('l/04/24f586c51d4c5e701bb9c735683108885eff08.xr', __xr_tmp);
