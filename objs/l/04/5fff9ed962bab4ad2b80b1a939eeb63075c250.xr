var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/ext4/file.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/fs/minix/file.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  ext4 fs regular file handling primitives</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  64-bit file support on 64-bit platforms by Jakub Jelinek</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(jj@sunsite.ms.mff.cuni.cz)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_jbd2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xattr.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acl.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called when an inode is released. Note that this is different</span>", 
"<span class=\"comment\"> * from ext4_file_open: open gets called at every open, but release</span>", 
"<span class=\"comment\"> * gets called only when /all/ the files are closed.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_release_file\">ext4_release_file</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_test_inode_state\">ext4_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_DA_ALLOC_CLOSE\">EXT4_STATE_DA_ALLOC_CLOSE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_alloc_da_blocks\">ext4_alloc_da_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_state\">ext4_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_DA_ALLOC_CLOSE\">EXT4_STATE_DA_ALLOC_CLOSE</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* if we are the last writer on the inode, drop the block reservation */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_writecount\">i_writecount</a>) == 1) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>        !<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_reserved_data_blocks\">i_reserved_data_blocks</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_discard_preallocations\">ext4_discard_preallocations</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_data_sem\">i_data_sem</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_dx\">is_dx</a>(<a class=\"id\" href=\"#inode\">inode</a>) && <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_htree_free_dir_info\">ext4_htree_free_dir_info</a>(<a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#ext4_file_write\">ext4_file_write</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#iocb\">iocb</a>-><a class=\"id\" href=\"#ki_filp\">ki_filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we have encountered a bitmap-format file, the size limit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is smaller than s_maxbytes, which is for extent-mapped files.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#iov_length\">iov_length</a>(<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pos\">pos</a> &gt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_bitmap_maxbytes\">s_bitmap_maxbytes</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#pos\">pos</a> == <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_bitmap_maxbytes\">s_bitmap_maxbytes</a> && <a class=\"id\" href=\"#length\">length</a> &gt; 0)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_bitmap_maxbytes\">s_bitmap_maxbytes</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_segs\">nr_segs</a> = <a class=\"id\" href=\"#iov_shorten\">iov_shorten</a>((struct <a class=\"id\" href=\"#iovec\">iovec</a> *)<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_bitmap_maxbytes\">s_bitmap_maxbytes</a> - <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_file_aio_write\">generic_file_aio_write</a>(<a class=\"id\" href=\"#iocb\">iocb</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#vm_operations_struct\">vm_operations_struct</a> <a class=\"id\" href=\"#ext4_file_vm_ops\">ext4_file_vm_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fault\">fault</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#filemap_fault\">filemap_fault</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#page_mkwrite\">page_mkwrite</a>   = <a class=\"id\" href=\"#ext4_page_mkwrite\">ext4_page_mkwrite</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ext4_file_mmap\">ext4_file_mmap</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a>-><a class=\"id\" href=\"#readpage\">readpage</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOEXEC\">ENOEXEC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file_accessed\">file_accessed</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_ops\">vm_ops</a> = &amp;<a class=\"id\" href=\"#ext4_file_vm_ops\">ext4_file_vm_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> |= <a class=\"id\" href=\"#VM_CAN_NONLINEAR\">VM_CAN_NONLINEAR</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_file_open\">ext4_file_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64], *<a class=\"id\" href=\"#cp\">cp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MF_MNTDIR_SAMPLED\">EXT4_MF_MNTDIR_SAMPLED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     !(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> |= <a class=\"id\" href=\"#EXT4_MF_MNTDIR_SAMPLED\">EXT4_MF_MNTDIR_SAMPLED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Sample where the filesystem has been mounted and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * store it in the superblock for sysadmin convenience</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * when trying to sort through large numbers of block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * devices or filesystem images.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buf\">buf</a>, 0, sizeof(<a class=\"id\" href=\"#buf\">buf</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#mnt\">mnt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_root\">mnt_root</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#d_path\">d_path</a>(&amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#cp\">cp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_last_mounted\">s_last_mounted</a>, <a class=\"id\" href=\"#cp\">cp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_last_mounted\">s_last_mounted</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_super_dirty\">ext4_mark_super_dirty</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_file_open\">dquot_file_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ext4_file_operations\">ext4_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#do_sync_read\">do_sync_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#do_sync_write\">do_sync_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#aio_read\">aio_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_aio_read\">generic_file_aio_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#aio_write\">aio_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_file_write\">ext4_file_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a> = <a class=\"id\" href=\"#ext4_ioctl\">ext4_ioctl</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_compat_ioctl\">ext4_compat_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_file_mmap\">ext4_file_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_file_open\">ext4_file_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_release_file\">ext4_release_file</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fsync\">fsync</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_sync_file\">ext4_sync_file</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_read\">splice_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_splice_read\">generic_file_splice_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_write\">splice_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_splice_write\">generic_file_splice_write</a>,", 
"};", 
"", 
"const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext4_file_inode_operations\">ext4_file_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#truncate\">truncate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_truncate\">ext4_truncate</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_setattr\">ext4_setattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getattr\">getattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_getattr\">ext4_getattr</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_XATTR\">CONFIG_EXT4_FS_XATTR</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setxattr\">setxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_setxattr\">generic_setxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getxattr\">getxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_getxattr\">generic_getxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listxattr\">listxattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_listxattr\">ext4_listxattr</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#removexattr\">removexattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_removexattr\">generic_removexattr</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#check_acl\">check_acl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_check_acl\">ext4_check_acl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fallocate\">fallocate</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_fallocate\">ext4_fallocate</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fiemap\">fiemap</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_fiemap\">ext4_fiemap</a>,", 
"};", 
"", 
];
xr_frag_insert('l/04/5fff9ed962bab4ad2b80b1a939eeb63075c250.xr', __xr_tmp);
