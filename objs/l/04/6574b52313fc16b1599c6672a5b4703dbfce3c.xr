var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_INIT_H\">_LINUX_INIT_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_INIT_H\">_LINUX_INIT_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* These macros are used to mark some functions or </span>", 
"<span class=\"comment\"> * initialized data (doesn't apply to uninitialized data)</span>", 
"<span class=\"comment\"> * as `initialization' functions. The kernel can take this</span>", 
"<span class=\"comment\"> * as hint that the function is used only during the initialization</span>", 
"<span class=\"comment\"> * phase and free up used memory resources after</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Usage:</span>", 
"<span class=\"comment\"> * For functions:</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * You should add __init immediately before the function name, like:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * static void __init initme(int x, int y)</span>", 
"<span class=\"comment\"> * {</span>", 
"<span class=\"comment\"> *    extern int z; z = x * y;</span>", 
"<span class=\"comment\"> * }</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the function has a prototype somewhere, you can also add</span>", 
"<span class=\"comment\"> * __init between closing brace of the prototype and semicolon:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * extern int initialize_foobar_device(int, int, int) __init;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For initialized data:</span>", 
"<span class=\"comment\"> * You should insert __initdata between the variable name and equal</span>", 
"<span class=\"comment\"> * sign followed by value, e.g.:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * static int init_variable __initdata = 0;</span>", 
"<span class=\"comment\"> * static const char linux_logo[] __initconst = { 0x32, 0x36, ... };</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Don't forget to initialize data not at file scope, i.e. within a function,</span>", 
"<span class=\"comment\"> * as gcc otherwise puts the data into the bss section and not into the init</span>", 
"<span class=\"comment\"> * section.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * Also note, that this data cannot be \"const\".</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* These are for everybody (although not all archs will actually</span>", 
"<span class=\"comment\">   discard it in modules) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__init\">__init</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__cold\">__cold</a> <a class=\"id\" href=\"#notrace\">notrace</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initdata\">__initdata</a><span class=\"ts\"/><a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initconst\">__initconst</a><span class=\"ts\"/><a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exitdata\">__exitdata</a><span class=\"ts\"/><a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#exit\">exit</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exit_call\">__exit_call</a><span class=\"ts\"/><a class=\"id\" href=\"#__used\">__used</a> <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#exitcall\">exitcall</a>.<a class=\"id\" href=\"#exit\">exit</a>)", 
"", 
"<span class=\"comment\">/* modpost check for section mismatches during the kernel build.</span>", 
"<span class=\"comment\"> * A section mismatch happens when there are references from a</span>", 
"<span class=\"comment\"> * code or data section to an init section (both code or data).</span>", 
"<span class=\"comment\"> * The init sections are (for most archs) discarded by the kernel</span>", 
"<span class=\"comment\"> * when early init has completed so all such references are potential bugs.</span>", 
"<span class=\"comment\"> * For exit sections the same issue exists.</span>", 
"<span class=\"comment\"> * The following markers are used for the cases where the reference to</span>", 
"<span class=\"comment\"> * the *init / *exit section (code or data) is valid and will teach</span>", 
"<span class=\"comment\"> * modpost not to issue a warning.</span>", 
"<span class=\"comment\"> * The markers follow same syntax rules as __init / __initdata. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ref\">__ref</a>            <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#ref\">ref</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#noinline\">noinline</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__refdata\">__refdata</a>        <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#ref\">ref</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__refconst\">__refconst</a>       <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#ref\">ref</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"", 
"<span class=\"comment\">/* compatibility defines */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__init_refok\">__init_refok</a>     <a class=\"id\" href=\"#__ref\">__ref</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initdata_refok\">__initdata_refok</a> <a class=\"id\" href=\"#__refdata\">__refdata</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exit_refok\">__exit_refok</a>     <a class=\"id\" href=\"#__ref\">__ref</a>", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#MODULE\">MODULE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exitused\">__exitused</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exitused\">__exitused</a>  <a class=\"id\" href=\"#__used\">__used</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exit\">__exit</a>          <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#exit\">exit</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__exitused\">__exitused</a> <a class=\"id\" href=\"#__cold\">__cold</a>", 
"", 
"<span class=\"comment\">/* Used for HOTPLUG */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devinit\">__devinit</a>        <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#devinit\">devinit</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__cold\">__cold</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devinitdata\">__devinitdata</a>    <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#devinit\">devinit</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devinitconst\">__devinitconst</a>   <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#devinit\">devinit</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devexit\">__devexit</a>        <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#devexit\">devexit</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__exitused\">__exitused</a> <a class=\"id\" href=\"#__cold\">__cold</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devexitdata\">__devexitdata</a>    <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#devexit\">devexit</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devexitconst\">__devexitconst</a>   <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#devexit\">devexit</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"", 
"<span class=\"comment\">/* Used for HOTPLUG_CPU */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a>        <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#cpuinit\">cpuinit</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__cold\">__cold</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a>    <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#cpuinit\">cpuinit</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpuinitconst\">__cpuinitconst</a>   <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#cpuinit\">cpuinit</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpuexit\">__cpuexit</a>        <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#cpuexit\">cpuexit</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__exitused\">__exitused</a> <a class=\"id\" href=\"#__cold\">__cold</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpuexitdata\">__cpuexitdata</a>    <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#cpuexit\">cpuexit</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpuexitconst\">__cpuexitconst</a>   <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#cpuexit\">cpuexit</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"", 
"<span class=\"comment\">/* Used for MEMORY_HOTPLUG */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__meminit\">__meminit</a>        <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#meminit\">meminit</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__cold\">__cold</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__meminitdata\">__meminitdata</a>    <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#meminit\">meminit</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__meminitconst\">__meminitconst</a>   <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#meminit\">meminit</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__memexit\">__memexit</a>        <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#memexit\">memexit</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__exitused\">__exitused</a> <a class=\"id\" href=\"#__cold\">__cold</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__memexitdata\">__memexitdata</a>    <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#memexit\">memexit</a>.<a class=\"id\" href=\"#data\">data</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__memexitconst\">__memexitconst</a>   <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#memexit\">memexit</a>.<a class=\"id\" href=\"#rodata\">rodata</a>)", 
"", 
"<span class=\"comment\">/* For assembly routines */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__HEAD\">__HEAD</a><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".head.text\",\"ax\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INIT\">__INIT</a><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".init.text\",\"ax\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__FINIT\">__FINIT</a><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#previous\">previous</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INITDATA\">__INITDATA</a><span class=\"ts\"/>.<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".init.data\",\"aw\",%<a class=\"id\" href=\"#progbits\">progbits</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INITRODATA\">__INITRODATA</a><span class=\"ts\"/>.<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".init.rodata\",\"a\",%<a class=\"id\" href=\"#progbits\">progbits</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__FINITDATA\">__FINITDATA</a><span class=\"ts\"/>.<a class=\"id\" href=\"#previous\">previous</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__DEVINIT\">__DEVINIT</a>        .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".devinit.text\", \"ax\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__DEVINITDATA\">__DEVINITDATA</a>    .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".devinit.data\", \"aw\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__DEVINITRODATA\">__DEVINITRODATA</a>  .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".devinit.rodata\", \"a\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__CPUINIT\">__CPUINIT</a>        .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".cpuinit.text\", \"ax\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__CPUINITDATA\">__CPUINITDATA</a>    .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".cpuinit.data\", \"aw\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__CPUINITRODATA\">__CPUINITRODATA</a>  .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".cpuinit.rodata\", \"a\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__MEMINIT\">__MEMINIT</a>        .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".meminit.text\", \"ax\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__MEMINITDATA\">__MEMINITDATA</a>    .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".meminit.data\", \"aw\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__MEMINITRODATA\">__MEMINITRODATA</a>  .<a class=\"id\" href=\"#section\">section</a><span class=\"ts\"/>\".meminit.rodata\", \"a\"", 
"", 
"<span class=\"comment\">/* silence warnings when references are OK */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__REF\">__REF</a>            .<a class=\"id\" href=\"#section\">section</a>       \".ref.text\", \"ax\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__REFDATA\">__REFDATA</a>        .<a class=\"id\" href=\"#section\">section</a>       \".ref.data\", \"aw\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__REFCONST\">__REFCONST</a>       .<a class=\"id\" href=\"#section\">section</a>       \".ref.rodata\", \"a\"", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Used for initialization calls..</span>", 
"<span class=\"comment\"> */</span>", 
"typedef int (*<a class=\"id\" href=\"#initcall_t\">initcall_t</a>)(void);", 
"typedef void (*<a class=\"id\" href=\"#exitcall_t\">exitcall_t</a>)(void);", 
"", 
"extern <a class=\"id\" href=\"#initcall_t\">initcall_t</a> <a class=\"id\" href=\"#__con_initcall_start\">__con_initcall_start</a>[], <a class=\"id\" href=\"#__con_initcall_end\">__con_initcall_end</a>[];", 
"extern <a class=\"id\" href=\"#initcall_t\">initcall_t</a> <a class=\"id\" href=\"#__security_initcall_start\">__security_initcall_start</a>[], <a class=\"id\" href=\"#__security_initcall_end\">__security_initcall_end</a>[];", 
"", 
"<span class=\"comment\">/* Used for contructor calls. */</span>", 
"typedef void (*<a class=\"id\" href=\"#ctor_fn_t\">ctor_fn_t</a>)(void);", 
"", 
"<span class=\"comment\">/* Defined in init/main.c */</span>", 
"extern int <a class=\"id\" href=\"#do_one_initcall\">do_one_initcall</a>(<a class=\"id\" href=\"#initcall_t\">initcall_t</a> <a class=\"id\" href=\"#fn\">fn</a>);", 
"extern char <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>[];", 
"extern char *<a class=\"id\" href=\"#saved_command_line\">saved_command_line</a>;", 
"extern unsigned int <a class=\"id\" href=\"#reset_devices\">reset_devices</a>;", 
"", 
"<span class=\"comment\">/* used by init/main.c */</span>", 
"void <a class=\"id\" href=\"#setup_arch\">setup_arch</a>(char **);", 
"void <a class=\"id\" href=\"#prepare_namespace\">prepare_namespace</a>(void);", 
"", 
"extern void (*<a class=\"id\" href=\"#late_time_init\">late_time_init</a>)(void);", 
"", 
"extern int <a class=\"id\" href=\"#initcall_debug\">initcall_debug</a>;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"  ", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#MODULE\">MODULE</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"", 
"<span class=\"comment\">/* initcalls are now grouped by functionality into separate </span>", 
"<span class=\"comment\"> * subsections. Ordering inside the subsections is determined</span>", 
"<span class=\"comment\"> * by link order. </span>", 
"<span class=\"comment\"> * For backwards compatibility, initcall() puts the call in </span>", 
"<span class=\"comment\"> * the device init subsection.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The `id' arg to __define_initcall() is needed so that multiple initcalls</span>", 
"<span class=\"comment\"> * can point at the same handler without causing duplicate-symbol build errors.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(<a class=\"id\" href=\"#level\">level</a>,<a class=\"id\" href=\"#fn\">fn</a>,<a class=\"id\" href=\"#id\">id</a>) \\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#initcall_t\">initcall_t</a> <a class=\"id\" href=\"#__initcall_\">__initcall_</a>##<a class=\"id\" href=\"#fn\">fn</a>##<a class=\"id\" href=\"#id\">id</a> <a class=\"id\" href=\"#__used\">__used</a> \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#__section__\">__section__</a>(\".initcall\" <a class=\"id\" href=\"#level\">level</a> \".init\"))) = <a class=\"id\" href=\"#fn\">fn</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Early initcalls run before initializing SMP.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Only for built-in code, not modules.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#early_initcall\">early_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"early\",<a class=\"id\" href=\"#fn\">fn</a>,<a class=\"id\" href=\"#early\">early</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A \"pure\" initcall has no dependencies on anything else, and purely</span>", 
"<span class=\"comment\"> * initializes variables that couldn't be statically initialized.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This only exists for built-in code, not for modules.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pure_initcall\">pure_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"0\",<a class=\"id\" href=\"#fn\">fn</a>,0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"1\",<a class=\"id\" href=\"#fn\">fn</a>,1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#core_initcall_sync\">core_initcall_sync</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"1s\",<a class=\"id\" href=\"#fn\">fn</a>,1<a class=\"id\" href=\"#s\">s</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#postcore_initcall\">postcore_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"2\",<a class=\"id\" href=\"#fn\">fn</a>,2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#postcore_initcall_sync\">postcore_initcall_sync</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"2s\",<a class=\"id\" href=\"#fn\">fn</a>,2<a class=\"id\" href=\"#s\">s</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#arch_initcall\">arch_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"3\",<a class=\"id\" href=\"#fn\">fn</a>,3)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#arch_initcall_sync\">arch_initcall_sync</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"3s\",<a class=\"id\" href=\"#fn\">fn</a>,3<a class=\"id\" href=\"#s\">s</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"4\",<a class=\"id\" href=\"#fn\">fn</a>,4)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#subsys_initcall_sync\">subsys_initcall_sync</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"4s\",<a class=\"id\" href=\"#fn\">fn</a>,4<a class=\"id\" href=\"#s\">s</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"5\",<a class=\"id\" href=\"#fn\">fn</a>,5)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fs_initcall_sync\">fs_initcall_sync</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"5s\",<a class=\"id\" href=\"#fn\">fn</a>,5<a class=\"id\" href=\"#s\">s</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rootfs_initcall\">rootfs_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"rootfs\",<a class=\"id\" href=\"#fn\">fn</a>,<a class=\"id\" href=\"#rootfs\">rootfs</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"6\",<a class=\"id\" href=\"#fn\">fn</a>,6)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#device_initcall_sync\">device_initcall_sync</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"6s\",<a class=\"id\" href=\"#fn\">fn</a>,6<a class=\"id\" href=\"#s\">s</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"7\",<a class=\"id\" href=\"#fn\">fn</a>,7)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#late_initcall_sync\">late_initcall_sync</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__define_initcall\">__define_initcall</a>(\"7s\",<a class=\"id\" href=\"#fn\">fn</a>,7<a class=\"id\" href=\"#s\">s</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initcall\">__initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>) <a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exitcall\">__exitcall</a>(<a class=\"id\" href=\"#fn\">fn</a>) \\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#exitcall_t\">exitcall_t</a> <a class=\"id\" href=\"#__exitcall_\">__exitcall_</a>##<a class=\"id\" href=\"#fn\">fn</a> <a class=\"id\" href=\"#__exit_call\">__exit_call</a> = <a class=\"id\" href=\"#fn\">fn</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#console_initcall\">console_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>) \\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#initcall_t\">initcall_t</a> <a class=\"id\" href=\"#__initcall_\">__initcall_</a>##<a class=\"id\" href=\"#fn\">fn</a> \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__used\">__used</a> <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#con_initcall\">con_initcall</a>.<a class=\"id\" href=\"#init\">init</a>) = <a class=\"id\" href=\"#fn\">fn</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#security_initcall\">security_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>) \\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#initcall_t\">initcall_t</a> <a class=\"id\" href=\"#__initcall_\">__initcall_</a>##<a class=\"id\" href=\"#fn\">fn</a> \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__used\">__used</a> <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#security_initcall\">security_initcall</a>.<a class=\"id\" href=\"#init\">init</a>) = <a class=\"id\" href=\"#fn\">fn</a>", 
"", 
"struct <a class=\"id\" href=\"#obs_kernel_param\">obs_kernel_param</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#setup_func\">setup_func</a>)(char *);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#early\">early</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Only for really core code.  See moduleparam.h for the normal way.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Force the alignment so the compiler doesn't space elements of the</span>", 
"<span class=\"comment\"> * obs_kernel_param \"array\" too far apart in .init.setup.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__setup_param\">__setup_param</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#unique_id\">unique_id</a>, <a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#early\">early</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>static const char <a class=\"id\" href=\"#__setup_str_\">__setup_str_</a>##<a class=\"id\" href=\"#unique_id\">unique_id</a>[] <a class=\"id\" href=\"#__initconst\">__initconst</a><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__aligned\">__aligned</a>(1) = <a class=\"id\" href=\"#str\">str</a>; \\", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#obs_kernel_param\">obs_kernel_param</a> <a class=\"id\" href=\"#__setup_\">__setup_</a>##<a class=\"id\" href=\"#unique_id\">unique_id</a><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__used\">__used</a> <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#setup\">setup</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>((sizeof(long)))))<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>= { <a class=\"id\" href=\"#__setup_str_\">__setup_str_</a>##<a class=\"id\" href=\"#unique_id\">unique_id</a>, <a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#early\">early</a> }", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__setup\">__setup</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__setup_param\">__setup_param</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#fn\">fn</a>, 0)", 
"", 
"<span class=\"comment\">/* NOTE: fn is as per module_param, not __setup!  Emits warning if fn</span>", 
"<span class=\"comment\"> * returns non-zero. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#early_param\">early_param</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__setup_param\">__setup_param</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#fn\">fn</a>, 1)", 
"", 
"<span class=\"comment\">/* Relies on boot_command_line being set */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_early_param\">parse_early_param</a>(void);", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_early_options\">parse_early_options</a>(char *<a class=\"id\" href=\"#cmdline\">cmdline</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * module_init() - driver initialization entry point</span>", 
"<span class=\"comment\"> * @x: function to be run at kernel boot time or module insertion</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * module_init() will either be called during do_initcalls() (if</span>", 
"<span class=\"comment\"> * builtin) or at module insertion time (if a module).  There can only</span>", 
"<span class=\"comment\"> * be one per module.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__initcall\">__initcall</a>(<a class=\"id\" href=\"#x\">x</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * module_exit() - driver exit entry point</span>", 
"<span class=\"comment\"> * @x: function to be run when driver is removed</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * module_exit() will wrap the driver clean-up code</span>", 
"<span class=\"comment\"> * with cleanup_module() when used with rmmod when</span>", 
"<span class=\"comment\"> * the driver is a module.  If the driver is statically</span>", 
"<span class=\"comment\"> * compiled into the kernel, module_exit() has no effect.</span>", 
"<span class=\"comment\"> * There can only be one per module.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><a class=\"id\" href=\"#__exitcall\">__exitcall</a>(<a class=\"id\" href=\"#x\">x</a>);", 
"", 
"#else <span class=\"comment\">/* MODULE */</span>", 
"", 
"<span class=\"comment\">/* Don't use these in modules, but some people do... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#early_initcall\">early_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#postcore_initcall\">postcore_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#arch_initcall\">arch_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#security_initcall\">security_initcall</a>(<a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#fn\">fn</a>)", 
"", 
"<span class=\"comment\">/* Each module must use one module_init(). */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#initfn\">initfn</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#initcall_t\">initcall_t</a> <a class=\"id\" href=\"#__inittest\">__inittest</a>(void)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>{ return <a class=\"id\" href=\"#initfn\">initfn</a>; }<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#init_module\">init_module</a>(void) <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#alias\">alias</a>(#<a class=\"id\" href=\"#initfn\">initfn</a>)));", 
"", 
"<span class=\"comment\">/* This is only required if you want to be unloadable. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#exitfn\">exitfn</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#exitcall_t\">exitcall_t</a> <a class=\"id\" href=\"#__exittest\">__exittest</a>(void)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>{ return <a class=\"id\" href=\"#exitfn\">exitfn</a>; }<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#cleanup_module\">cleanup_module</a>(void) <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#alias\">alias</a>(#<a class=\"id\" href=\"#exitfn\">exitfn</a>)));", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__setup_param\">__setup_param</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#unique_id\">unique_id</a>, <a class=\"id\" href=\"#fn\">fn</a>)<span class=\"ts\"/><span class=\"comment\">/* nothing */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__setup\">__setup</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#func\">func</a>) <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nothing */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Data marked not to be saved by software suspend */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__nosavedata\">__nosavedata</a> <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#data\">data</a>..<a class=\"id\" href=\"#nosave\">nosave</a>)", 
"", 
"<span class=\"comment\">/* This means \"can be init if no module support, otherwise module load</span>", 
"<span class=\"comment\">   may call it.\" */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MODULES\">CONFIG_MODULES</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__init_or_module\">__init_or_module</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initdata_or_module\">__initdata_or_module</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initconst_or_module\">__initconst_or_module</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INIT_OR_MODULE\">__INIT_OR_MODULE</a><span class=\"ts\"/>.<a class=\"id\" href=\"#text\">text</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INITDATA_OR_MODULE\">__INITDATA_OR_MODULE</a><span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INITRODATA_OR_MODULE\">__INITRODATA_OR_MODULE</a><span class=\"ts\"/>.<a class=\"id\" href=\"#section\">section</a> \".rodata\",\"a\",%<a class=\"id\" href=\"#progbits\">progbits</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__init_or_module\">__init_or_module</a> <a class=\"id\" href=\"#__init\">__init</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initdata_or_module\">__initdata_or_module</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__initconst_or_module\">__initconst_or_module</a> <a class=\"id\" href=\"#__initconst\">__initconst</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INIT_OR_MODULE\">__INIT_OR_MODULE</a> <a class=\"id\" href=\"#__INIT\">__INIT</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INITDATA_OR_MODULE\">__INITDATA_OR_MODULE</a> <a class=\"id\" href=\"#__INITDATA\">__INITDATA</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__INITRODATA_OR_MODULE\">__INITRODATA_OR_MODULE</a> <a class=\"id\" href=\"#__INITRODATA\">__INITRODATA</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/*CONFIG_MODULES*/</span>", 
"", 
"<span class=\"comment\">/* Functions marked as __devexit may be discarded at kernel link time, depending</span>", 
"<span class=\"comment\">   on config options.  Newer versions of binutils detect references from</span>", 
"<span class=\"comment\">   retained sections to discarded sections and flag an error.  Pointers to</span>", 
"<span class=\"comment\">   __devexit functions must use __devexit_p(function_name), the wrapper will</span>", 
"<span class=\"comment\">   insert either the function_name or NULL, depending on the config options.</span>", 
"<span class=\"comment\"> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#MODULE\">MODULE</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HOTPLUG\">CONFIG_HOTPLUG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devexit_p\">__devexit_p</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#x\">x</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__devexit_p\">__devexit_p</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#MODULE\">MODULE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exit_p\">__exit_p</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#x\">x</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__exit_p\">__exit_p</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_INIT_H */</span>", 
];
xr_frag_insert('l/04/6574b52313fc16b1599c6672a5b4703dbfce3c.xr', __xr_tmp);
