var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> &= ~(<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a> | <a class=\"id\" href=\"#CRYPTO_ALG_GENIV\">CRYPTO_ALG_GENIV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_AEAD\">CRYPTO_ALG_TYPE_AEAD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= ~(<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a> | <a class=\"id\" href=\"#CRYPTO_ALG_GENIV\">CRYPTO_ALG_GENIV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#crypto_lookup_aead\">crypto_lookup_aead</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_init_spawn\">crypto_init_spawn</a>(&amp;<a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#spawn\">spawn</a>-><a class=\"id\" href=\"#base\">base</a>.<a class=\"id\" href=\"#inst\">inst</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_mod_put\">crypto_mod_put</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_grab_aead\">crypto_grab_aead</a>);", 
"", 
"struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#crypto_alloc_aead\">crypto_alloc_aead</a>(const char *<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> &= ~(<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a> | <a class=\"id\" href=\"#CRYPTO_ALG_GENIV\">CRYPTO_ALG_GENIV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> |= <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_AEAD\">CRYPTO_ALG_TYPE_AEAD</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= ~(<a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a> | <a class=\"id\" href=\"#CRYPTO_ALG_GENIV\">CRYPTO_ALG_GENIV</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#crypto_lookup_aead\">crypto_lookup_aead</a>(<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#__crypto_alloc_tfm\">__crypto_alloc_tfm</a>(<a class=\"id\" href=\"#alg\">alg</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__crypto_aead_cast\">__crypto_aead_cast</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_mod_put\">crypto_mod_put</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#crypto_alloc_aead\">crypto_alloc_aead</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Authenticated Encryption with Associated Data (AEAD)\");", 
];
xr_frag_insert('l/04/8b9937c5515a303b0f8222e765607dfac2bc4e.xr', __xr_tmp);
