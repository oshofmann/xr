var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 Sistina Software (UK) Limited.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004-2008 Red Hat, Inc. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"dm.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_MSG_PREFIX\">DM_MSG_PREFIX</a> \"table\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_DEPTH\">MAX_DEPTH</a> 16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NODE_SIZE\">NODE_SIZE</a> <a class=\"id\" href=\"#L1_CACHE_BYTES\">L1_CACHE_BYTES</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KEYS_PER_NODE\">KEYS_PER_NODE</a> (<a class=\"id\" href=\"#NODE_SIZE\">NODE_SIZE</a> / sizeof(<a class=\"id\" href=\"#sector_t\">sector_t</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CHILDREN_PER_NODE\">CHILDREN_PER_NODE</a> (<a class=\"id\" href=\"#KEYS_PER_NODE\">KEYS_PER_NODE</a> + 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The table has always exactly one reference from either mapped_device-&gt;map</span>", 
"<span class=\"comment\"> * or hash_cell-&gt;new_map. This reference is not counted in table-&gt;holders.</span>", 
"<span class=\"comment\"> * A pair of dm_create_table/dm_destroy_table functions is used for table</span>", 
"<span class=\"comment\"> * creation/destruction.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Temporary references from the other code increase table-&gt;holders. A pair</span>", 
"<span class=\"comment\"> * of dm_table_get/dm_table_put functions is used to manipulate it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * When the table is about to be destroyed, we wait for table-&gt;holders to</span>", 
"<span class=\"comment\"> * drop to zero.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#dm_table\">dm_table</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#holders\">holders</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* btree table */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#counts\">counts</a>[<a class=\"id\" href=\"#MAX_DEPTH\">MAX_DEPTH</a>];<span class=\"ts\"/><span class=\"comment\">/* in nodes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> *<a class=\"id\" href=\"#index\">index</a>[<a class=\"id\" href=\"#MAX_DEPTH\">MAX_DEPTH</a>];", 
"", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_targets\">num_targets</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#num_allocated\">num_allocated</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> *<a class=\"id\" href=\"#highs\">highs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target\">dm_target</a> *<a class=\"id\" href=\"#targets\">targets</a>;", 
"", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#discards_supported\">discards_supported</a>:1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Indicates the rw permissions for the new logical</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * device.  This should be a combination of FMODE_READ</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and FMODE_WRITE.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* a list of devices used by this table */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#devices\">devices</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* events get handed up using this callback */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#event_fn\">event_fn</a>)(void *);", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#event_context\">event_context</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_md_mempools\">dm_md_mempools</a> *<a class=\"id\" href=\"#mempools\">mempools</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Similar to ceiling(log_size(n))</span>", 
"<span class=\"comment\"> */</span>", 
"static unsigned int <a class=\"id\" href=\"#int_log\">int_log</a>(unsigned int <a class=\"id\" href=\"#n\">n</a>, unsigned int <a class=\"id\" href=\"#base\">base</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#dm_div_up\">dm_div_up</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Calculate the index of the child node of the n'th node k'th key.</span>", 
];
xr_frag_insert('l/04/c249d4b8db05e7d48b73a57c7df42df0ff5263.xr', __xr_tmp);
