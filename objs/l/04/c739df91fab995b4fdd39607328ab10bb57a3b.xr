var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/kernel/acct.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  BSD Process Accounting for Linux</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Author: Marco van Wieringen &lt;mvw@planets.elm.net&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Some code based on ideas and code from:</span>", 
"<span class=\"comment\"> *  Thomas K. Dyas &lt;tdyas@eden.rutgers.edu&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This file implements BSD-style process accounting. Whenever any</span>", 
"<span class=\"comment\"> *  process exits, an accounting record of type \"struct acct\" is</span>", 
"<span class=\"comment\"> *  written to the file specified with the acct() system call. It is</span>", 
"<span class=\"comment\"> *  up to user-level programs to do useful things with the accounting</span>", 
"<span class=\"comment\"> *  log. The kernel just provides the raw accounting information.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) Copyright 1995 - 1997 Marco van Wieringen - ELM Consultancy B.V.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Plugged two leaks. 1) It didn't return acct_file into the free_filps if</span>", 
"<span class=\"comment\"> *  the file happened to be read-only. 2) If the accounting was suspended</span>", 
"<span class=\"comment\"> *  due to the lack of space it happily allowed to reopen it and completely</span>", 
"<span class=\"comment\"> *  lost the old acct_file. 3/10/98, Al Viro.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Now we silently close acct_file on attempt to reopen. Cleaned sys_acct().</span>", 
"<span class=\"comment\"> *  XTerms and EMACS are manifestations of pure evil. 21/10/98, AV.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Fixed a nasty interaction with with sys_umount(). If the accointing</span>", 
"<span class=\"comment\"> *  was suspeneded we failed to stop it on umount(). Messy.</span>", 
"<span class=\"comment\"> *  Another one: remount to readonly didn't stop accounting.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Question: what should we do if we have CAP_SYS_ADMIN but not</span>", 
"<span class=\"comment\"> *  CAP_SYS_PACCT? Current code does the following: umount returns -EBUSY</span>", 
"<span class=\"comment\"> *  unless we are messing with the root. In that case we are getting a</span>", 
"<span class=\"comment\"> *  real mess with do_remount_sb(). 9/11/98, AV.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Fixed a bunch of races (and pair of leaks). Probably not the best way,</span>", 
"<span class=\"comment\"> *  but this one obviously doesn't introduce deadlocks. Later. BTW, found</span>", 
"<span class=\"comment\"> *  one race (and leak) in BSD implementation.</span>", 
"<span class=\"comment\"> *  OK, that's better. ANOTHER race and leak in BSD variant. There always</span>", 
"<span class=\"comment\"> *  is one more bug... 10/11/98, AV.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Oh, fsck... Oopsable SMP race in do_process_acct() - we must hold</span>", 
"<span class=\"comment\"> * -&gt;mmap_sem to walk the vma list of current-&gt;mm. Nasty, since it leaks</span>", 
"<span class=\"comment\"> * a struct file opened for write. Fixed. 2/6/2000, AV.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acct\">acct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vfs\">vfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#div64\">div64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt; <span class=\"comment\">/* sector_div */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pid_namespace\">pid_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These constants control the amount of freespace that suspend and</span>", 
"<span class=\"comment\"> * resume the process accounting system, and the time delay between</span>", 
"<span class=\"comment\"> * each check.</span>", 
"<span class=\"comment\"> * Turned into sysctl-controllable parameters. AV, 12/11/98</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#acct_parm\">acct_parm</a>[3] = {4, 2, 30};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESUME\">RESUME</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#acct_parm\">acct_parm</a>[0])<span class=\"ts\"/><span class=\"comment\">/* &gt;foo% free space - resume */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SUSPEND\">SUSPEND</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#acct_parm\">acct_parm</a>[1])<span class=\"ts\"/><span class=\"comment\">/* &lt;foo% free space - suspend */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACCT_TIMEOUT\">ACCT_TIMEOUT</a><span class=\"ts\"/>(<a class=\"id\" href=\"#acct_parm\">acct_parm</a>[2])<span class=\"ts\"/><span class=\"comment\">/* foo second timeout between checks */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * External references and all of the globals.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#do_acct_process\">do_acct_process</a>(struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure is used so that all the data protected by lock</span>", 
"<span class=\"comment\"> * can be placed in the same cache line as the lock.  This primes</span>", 
"<span class=\"comment\"> * the cache line to have the data after getting the lock.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> {", 
"<span class=\"ts\"/>volatile int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#active\">active</a>;", 
"<span class=\"ts\"/>volatile int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needcheck\">needcheck</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#acct_list\">acct_list</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called whenever the timer says to check the free space.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#acct_timeout\">acct_timeout</a>(unsigned long <a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a> = (struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *)<a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#needcheck\">needcheck</a> = 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check the amount of free space and suspend/resume accordingly.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#check_free_space\">check_free_space</a>(struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kstatfs\">kstatfs</a> <a class=\"id\" href=\"#sbuf\">sbuf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#act\">act</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#resume\">resume</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#suspend\">suspend</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#active\">active</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a> || !<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#needcheck\">needcheck</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* May block */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vfs_statfs\">vfs_statfs</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>, &amp;<a class=\"id\" href=\"#sbuf\">sbuf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend\">suspend</a> = <a class=\"id\" href=\"#sbuf\">sbuf</a>.<a class=\"id\" href=\"#f_blocks\">f_blocks</a> * <a class=\"id\" href=\"#SUSPEND\">SUSPEND</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resume\">resume</a> = <a class=\"id\" href=\"#sbuf\">sbuf</a>.<a class=\"id\" href=\"#f_blocks\">f_blocks</a> * <a class=\"id\" href=\"#RESUME\">RESUME</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_div\">sector_div</a>(<a class=\"id\" href=\"#suspend\">suspend</a>, 100);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_div\">sector_div</a>(<a class=\"id\" href=\"#resume\">resume</a>, 100);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbuf\">sbuf</a>.<a class=\"id\" href=\"#f_bavail\">f_bavail</a> <= <a class=\"id\" href=\"#suspend\">suspend</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#act\">act</a> = -1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#sbuf\">sbuf</a>.<a class=\"id\" href=\"#f_bavail\">f_bavail</a> >= <a class=\"id\" href=\"#resume\">resume</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#act\">act</a> = 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#act\">act</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If some joker switched acct-&gt;file under us we'ld better be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * silent and _not_ touch anything.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a> != <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#act\">act</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#act\">act</a>&gt;0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#active\">active</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#act\">act</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#active\">active</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Process accounting paused\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#act\">act</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#active\">active</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Process accounting resumed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#needcheck\">needcheck</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#ACCT_TIMEOUT\">ACCT_TIMEOUT</a>*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#active\">active</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Close the old accounting file (if currently open) and then replace</span>", 
"<span class=\"comment\"> * it with file (if non-NULL).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: acct_lock MUST be held on entry and exit.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#acct_file_reopen\">acct_file_reopen</a>(struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#old_acct\">old_acct</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#old_ns\">old_ns</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_acct\">old_acct</a> = <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_ns\">old_ns</a> = <a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#active\">active</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#needcheck\">needcheck</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#needcheck\">needcheck</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#active\">active</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#acct_list\">acct_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It's been deleted if it was used before so this is safe */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#acct_timeout\">acct_timeout</a>, (unsigned long)<a class=\"id\" href=\"#acct\">acct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#ACCT_TIMEOUT\">ACCT_TIMEOUT</a>*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#acct\">acct</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_acct\">old_acct</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt_unpin\">mnt_unpin</a>(<a class=\"id\" href=\"#old_acct\">old_acct</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_acct_process\">do_acct_process</a>(<a class=\"id\" href=\"#acct\">acct</a>, <a class=\"id\" href=\"#old_ns\">old_ns</a>, <a class=\"id\" href=\"#old_acct\">old_acct</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp_close\">filp_close</a>(<a class=\"id\" href=\"#old_acct\">old_acct</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acct_on\">acct_on</a>(char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pid_namespace\">pid_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Difference from BSD - they don't do O_APPEND */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#filp_open\">filp_open</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#O_WRONLY\">O_WRONLY</a>|<a class=\"id\" href=\"#O_APPEND\">O_APPEND</a>|<a class=\"id\" href=\"#O_LARGEFILE\">O_LARGEFILE</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp_close\">filp_close</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp_close\">filp_close</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a> = <a class=\"id\" href=\"#task_active_pid_ns\">task_active_pid_ns</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#bacct\">bacct</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp_close\">filp_close</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#bacct\">bacct</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#bacct\">bacct</a> = <a class=\"id\" href=\"#acct\">acct</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_pin\">mnt_pin</a>(<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acct_file_reopen\">acct_file_reopen</a>(<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#bacct\">bacct</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mntput\">mntput</a>(<a class=\"id\" href=\"#mnt\">mnt</a>); <span class=\"comment\">/* it's pinned, now give up active reference */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#acct\">acct</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sys_acct - enable/disable process accounting</span>", 
"<span class=\"comment\"> * @name: file name for accounting records or NULL to shutdown accounting</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 for success or negative errno values for failure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * sys_acct() is the only system call needed to implement process</span>", 
"<span class=\"comment\"> * accounting. It takes the name of the file where accounting records</span>", 
"<span class=\"comment\"> * should be written. If the filename is NULL, accounting will be</span>", 
"<span class=\"comment\"> * shutdown.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#acct\">acct</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_PACCT\">CAP_SYS_PACCT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tmp\">tmp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tmp\">tmp</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#acct_on\">acct_on</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bsd_acct_struct\">bsd_acct_struct</a> *<a class=\"id\" href=\"#acct\">acct</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct\">acct</a> = <a class=\"id\" href=\"#task_active_pid_ns\">task_active_pid_ns</a>(<a class=\"id\" href=\"#current\">current</a>)-><a class=\"id\" href=\"#bacct\">bacct</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acct\">acct</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acct_file_reopen\">acct_file_reopen</a>(<a class=\"id\" href=\"#acct\">acct</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acct_lock\">acct_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
];
xr_frag_insert('l/04/c739df91fab995b4fdd39607328ab10bb57a3b.xr', __xr_tmp);
