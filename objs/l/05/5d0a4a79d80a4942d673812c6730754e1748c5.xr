var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bit_spinlock\">bit_spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#memory\">memory</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cgroup\">cgroup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swapops\">swapops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmemleak\">kmemleak</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#__init_page_cgroup\">__init_page_cgroup</a>(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#pc\">pc</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#mem_cgroup\">mem_cgroup</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#pc\">pc</a>-><a class=\"id\" href=\"#lru\">lru</a>);", 
"}", 
"static unsigned long <a class=\"id\" href=\"#total_usage\">total_usage</a>;", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SPARSEMEM\">CONFIG_SPARSEMEM</a>)", 
"", 
"", 
"void <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#pgdat_page_cgroup_init\">pgdat_page_cgroup_init</a>(struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_page_cgroup\">node_page_cgroup</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#lookup_page_cgroup\">lookup_page_cgroup</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#page_to_nid\">page_to_nid</a>(<a class=\"id\" href=\"#page\">page</a>))-><a class=\"id\" href=\"#node_page_cgroup\">node_page_cgroup</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#base\">base</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#pfn\">pfn</a> - <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#page_to_nid\">page_to_nid</a>(<a class=\"id\" href=\"#page\">page</a>))-><a class=\"id\" href=\"#node_start_pfn\">node_start_pfn</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#offset\">offset</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#alloc_node_page_cgroup\">alloc_node_page_cgroup</a>(int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#base\">base</a>, *<a class=\"id\" href=\"#pc\">pc</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#table_size\">table_size</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>)-><a class=\"id\" href=\"#node_start_pfn\">node_start_pfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>)-><a class=\"id\" href=\"#node_spanned_pages\">node_spanned_pages</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_size\">table_size</a> = sizeof(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>) * <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#__alloc_bootmem_node_nopanic\">__alloc_bootmem_node_nopanic</a>(<a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_size\">table_size</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#MAX_DMA_ADDRESS\">MAX_DMA_ADDRESS</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#base\">base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#index\">index</a> = 0; <a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#index\">index</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc\">pc</a> = <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__init_page_cgroup\">__init_page_cgroup</a>(<a class=\"id\" href=\"#pc\">pc</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a> + <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>)-><a class=\"id\" href=\"#node_page_cgroup\">node_page_cgroup</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_usage\">total_usage</a> += <a class=\"id\" href=\"#table_size\">table_size</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#page_cgroup_init_flatmem\">page_cgroup_init_flatmem</a>(void)", 
"{", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mem_cgroup_disabled\">mem_cgroup_disabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_node\">for_each_online_node</a>(<a class=\"id\" href=\"#nid\">nid</a>)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fail\">fail</a> = <a class=\"id\" href=\"#alloc_node_page_cgroup\">alloc_node_page_cgroup</a>(<a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fail\">fail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"allocated %ld bytes of page_cgroup\\n\", <a class=\"id\" href=\"#total_usage\">total_usage</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"please try 'cgroup_disable=memory' option if you\"", 
"<span class=\"ts\"/>\" don't want memory cgroups\\n\");", 
"<span class=\"ts\"/>return;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"allocation of page_cgroup failed.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"please try 'cgroup_disable=memory' boot option\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Out of memory\");", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_FLAT_NODE_MEM_MAP */</span>", 
"", 
"struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#lookup_page_cgroup\">lookup_page_cgroup</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_section\">mem_section</a> *<a class=\"id\" href=\"#section\">section</a> = <a class=\"id\" href=\"#__pfn_to_section\">__pfn_to_section</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#section\">section</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#section\">section</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> + <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"}", 
"", 
"<span class=\"comment\">/* __alloc_bootmem...() is protected by !slab_available() */</span>", 
"static int <a class=\"id\" href=\"#__init_refok\">__init_refok</a> <a class=\"id\" href=\"#init_section_page_cgroup\">init_section_page_cgroup</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_section\">mem_section</a> *<a class=\"id\" href=\"#section\">section</a> = <a class=\"id\" href=\"#__pfn_to_section\">__pfn_to_section</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#base\">base</a>, *<a class=\"id\" href=\"#pc\">pc</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#table_size\">table_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#section\">section</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nid\">nid</a> = <a class=\"id\" href=\"#page_to_nid\">page_to_nid</a>(<a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_size\">table_size</a> = sizeof(struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>) * <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#slab_is_available\">slab_is_available</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node_state\">node_state</a>(<a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#N_HIGH_MEMORY\">N_HIGH_MEMORY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#kmalloc_node\">kmalloc_node</a>(<a class=\"id\" href=\"#table_size\">table_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_NOWARN\">__GFP_NOWARN</a>, <a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#base\">base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#vmalloc_node\">vmalloc_node</a>(<a class=\"id\" href=\"#table_size\">table_size</a>, <a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#table_size\">table_size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_NOWARN\">__GFP_NOWARN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#base\">base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#vmalloc\">vmalloc</a>(<a class=\"id\" href=\"#table_size\">table_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The value stored in section-&gt;page_cgroup is (base - pfn)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and it does not point to the memory block allocated above,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * causing kmemleak false positives.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmemleak_not_leak\">kmemleak_not_leak</a>(<a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"> <span class=\"ts\"/><span class=\"ts\"/> * We don't have to allocate page_cgroup again, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * address of memmap may be changed. So, we have to initialize</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#section\">section</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> + <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_size\">table_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check address of memmap is changed or not. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#page\">page</a> == <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#base\">base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"page cgroup allocation failure\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#index\">index</a> = 0; <a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#PAGES_PER_SECTION\">PAGES_PER_SECTION</a>; <a class=\"id\" href=\"#index\">index</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pc\">pc</a> = <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__init_page_cgroup\">__init_page_cgroup</a>(<a class=\"id\" href=\"#pc\">pc</a>, <a class=\"id\" href=\"#pfn\">pfn</a> + <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#section\">section</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> = <a class=\"id\" href=\"#base\">base</a> - <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_usage\">total_usage</a> += <a class=\"id\" href=\"#table_size\">table_size</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMORY_HOTPLUG\">CONFIG_MEMORY_HOTPLUG</a>", 
"void <a class=\"id\" href=\"#__free_page_cgroup\">__free_page_cgroup</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_section\">mem_section</a> *<a class=\"id\" href=\"#ms\">ms</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> *<a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ms\">ms</a> = <a class=\"id\" href=\"#__pfn_to_section\">__pfn_to_section</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ms\">ms</a> || !<a class=\"id\" href=\"#ms\">ms</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#ms\">ms</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> + <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vmalloc_addr\">is_vmalloc_addr</a>(<a class=\"id\" href=\"#base\">base</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ms\">ms</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageReserved\">PageReserved</a>(<a class=\"id\" href=\"#page\">page</a>)) { <span class=\"comment\">/* Is bootmem ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ms\">ms</a>-><a class=\"id\" href=\"#page_cgroup\">page_cgroup</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#online_page_cgroup\">online_page_cgroup</a>(unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_pages\">nr_pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>)", 
"{", 
];
xr_frag_insert('l/05/5d0a4a79d80a4942d673812c6730754e1748c5.xr', __xr_tmp);
