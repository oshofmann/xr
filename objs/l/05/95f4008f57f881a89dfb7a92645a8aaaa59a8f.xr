var __xr_tmp = [
"};", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#softnet_seq_ops\">softnet_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#softnet_seq_start\">softnet_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>  = <a class=\"id\" href=\"#softnet_seq_next\">softnet_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>  = <a class=\"id\" href=\"#softnet_seq_stop\">softnet_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>  = <a class=\"id\" href=\"#softnet_seq_show\">softnet_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#softnet_seq_open\">softnet_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#softnet_seq_ops\">softnet_seq_ops</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#softnet_seq_fops\">softnet_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>    = <a class=\"id\" href=\"#softnet_seq_open\">softnet_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>    = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>  = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static void *<a class=\"id\" href=\"#ptype_get_idx\">ptype_get_idx</a>(<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#pt\">pt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#pt\">pt</a>, &amp;<a class=\"id\" href=\"#ptype_all\">ptype_all</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pt\">pt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#t\">t</a> = 0; <a class=\"id\" href=\"#t\">t</a> &lt; <a class=\"id\" href=\"#PTYPE_HASH_SIZE\">PTYPE_HASH_SIZE</a>; <a class=\"id\" href=\"#t\">t</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#pt\">pt</a>, &amp;<a class=\"id\" href=\"#ptype_base\">ptype_base</a>[<a class=\"id\" href=\"#t\">t</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pt\">pt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#ptype_seq_start\">ptype_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#ptype_get_idx\">ptype_get_idx</a>(*<a class=\"id\" href=\"#pos\">pos</a> - 1) : <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#ptype_seq_next\">ptype_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#pt\">pt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#nxt\">nxt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hash\">hash</a>;", 
"", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ptype_get_idx\">ptype_get_idx</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pt\">pt</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nxt\">nxt</a> = <a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_ALL\">ETH_P_ALL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nxt\">nxt</a> != &amp;<a class=\"id\" href=\"#ptype_all\">ptype_all</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nxt\">nxt</a> = <a class=\"id\" href=\"#ptype_base\">ptype_base</a>[0].<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#type\">type</a>) &amp; <a class=\"id\" href=\"#PTYPE_HASH_MASK\">PTYPE_HASH_MASK</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#nxt\">nxt</a> == &amp;<a class=\"id\" href=\"#ptype_base\">ptype_base</a>[<a class=\"id\" href=\"#hash\">hash</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#hash\">hash</a> >= <a class=\"id\" href=\"#PTYPE_HASH_SIZE\">PTYPE_HASH_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nxt\">nxt</a> = <a class=\"id\" href=\"#ptype_base\">ptype_base</a>[<a class=\"id\" href=\"#hash\">hash</a>].<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#nxt\">nxt</a>, struct <a class=\"id\" href=\"#packet_type\">packet_type</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ptype_seq_stop\">ptype_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#RCU\">RCU</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ptype_seq_show\">ptype_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#pt\">pt</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"Type Device      Function\\n\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#dev\">dev</a>) == <a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_ALL\">ETH_P_ALL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"ALL \");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%04x\", <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#type\">type</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \" %-8s %pF\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"\", <a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#func\">func</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#ptype_seq_ops\">ptype_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#ptype_seq_start\">ptype_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>  = <a class=\"id\" href=\"#ptype_seq_next\">ptype_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>  = <a class=\"id\" href=\"#ptype_seq_stop\">ptype_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>  = <a class=\"id\" href=\"#ptype_seq_show\">ptype_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ptype_seq_open\">ptype_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#ptype_seq_ops\">ptype_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ptype_seq_fops\">ptype_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>    = <a class=\"id\" href=\"#ptype_seq_open\">ptype_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>    = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>  = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#dev_proc_net_init\">dev_proc_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"dev\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#dev_seq_fops\">dev_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"softnet_stat\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#softnet_seq_fops\">softnet_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dev\">out_dev</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"ptype\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#ptype_seq_fops\">ptype_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_softnet\">out_softnet</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wext_proc_init\">wext_proc_init</a>(<a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_ptype\">out_ptype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#out_ptype\">out_ptype</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"ptype\");", 
"<a class=\"id\" href=\"#out_softnet\">out_softnet</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"softnet_stat\");", 
"<a class=\"id\" href=\"#out_dev\">out_dev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"dev\");", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#dev_proc_net_exit\">dev_proc_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wext_proc_exit\">wext_proc_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"ptype\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"softnet_stat\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"dev\");", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#__net_initdata\">__net_initdata</a> <a class=\"id\" href=\"#dev_proc_ops\">dev_proc_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#dev_proc_net_init\">dev_proc_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#dev_proc_net_exit\">dev_proc_net_exit</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dev_proc_init\">dev_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#dev_proc_ops\">dev_proc_ops</a>);", 
"}", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dev_proc_init\">dev_proc_init</a>() 0", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netdev_set_master<span class=\"ts\"/>-<span class=\"ts\"/>set up master/slave pair</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@slave: slave device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@master: new master device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Changes the master device of the slave. Pass %NULL to break the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bonding. The caller must hold the RTNL semaphore. On a failure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a negative errno code is returned. On success the reference counts</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>are adjusted, %RTM_NEWLINK is sent to the routing socket and the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>function returns zero.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#netdev_set_master\">netdev_set_master</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#slave\">slave</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#master\">master</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#slave\">slave</a>-><a class=\"id\" href=\"#master\">master</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#master\">master</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#master\">master</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slave\">slave</a>-><a class=\"id\" href=\"#master\">master</a> = <a class=\"id\" href=\"#master\">master</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old\">old</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#synchronize_net\">synchronize_net</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#master\">master</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slave\">slave</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_SLAVE\">IFF_SLAVE</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slave\">slave</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IFF_SLAVE\">IFF_SLAVE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_ifinfo\">rtmsg_ifinfo</a>(<a class=\"id\" href=\"#RTM_NEWLINK\">RTM_NEWLINK</a>, <a class=\"id\" href=\"#slave\">slave</a>, <a class=\"id\" href=\"#IFF_SLAVE\">IFF_SLAVE</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#netdev_set_master\">netdev_set_master</a>);", 
"", 
"static void <a class=\"id\" href=\"#dev_change_rx_flags\">dev_change_rx_flags</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>) && <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_change_rx_flags\">ndo_change_rx_flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_change_rx_flags\">ndo_change_rx_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__dev_set_promiscuity\">__dev_set_promiscuity</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#inc\">inc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#old_flags\">old_flags</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#gid\">gid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#promiscuity\">promiscuity</a> += <a class=\"id\" href=\"#inc\">inc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#promiscuity\">promiscuity</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Avoid overflow.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If inc causes overflow, untouch promisc and return error.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inc\">inc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#promiscuity\">promiscuity</a> -= <a class=\"id\" href=\"#inc\">inc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: promiscuity touches roof, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"set promiscuity failed, promiscuity feature \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"of device might be broken.\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOVERFLOW\">EOVERFLOW</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> != <a class=\"id\" href=\"#old_flags\">old_flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"device %s %s promiscuous mode\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>) ? \"entered\" :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"left\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_enabled\">audit_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current_uid_gid\">current_uid_gid</a>(&amp;<a class=\"id\" href=\"#uid\">uid</a>, &amp;<a class=\"id\" href=\"#gid\">gid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log\">audit_log</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AUDIT_ANOM_PROMISCUOUS\">AUDIT_ANOM_PROMISCUOUS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"dev=%s prom=%d old_prom=%d auid=%u uid=%u gid=%u ses=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#old_flags\">old_flags</a> &amp; <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_loginuid\">audit_get_loginuid</a>(<a class=\"id\" href=\"#current\">current</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#gid\">gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_sessionid\">audit_get_sessionid</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_change_rx_flags\">dev_change_rx_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dev_set_promiscuity<span class=\"ts\"/>- update promiscuity count on a device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inc: modifier</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add or remove promiscuity from a device. While the count in the device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>remains above zero the interface remains promiscuous. Once it hits zero</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the device reverts back to normal filtering operation. A negative inc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>value is used to drop promiscuity on the device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return 0 if successful or a negative errno code on error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dev_set_promiscuity\">dev_set_promiscuity</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#inc\">inc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#old_flags\">old_flags</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__dev_set_promiscuity\">__dev_set_promiscuity</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#inc\">inc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> != <a class=\"id\" href=\"#old_flags\">old_flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_set_rx_mode\">dev_set_rx_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_set_promiscuity\">dev_set_promiscuity</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dev_set_allmulti<span class=\"ts\"/>- update allmulti count on a device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@inc: modifier</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add or remove reception of all multicast frames to a device. While the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>count in the device remains above zero the interface remains listening</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to all interfaces. Once it hits zero the device reverts back to normal</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>filtering operation. A negative @inc value is used to drop the counter</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>when releasing a resource needing all multicasts.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return 0 if successful or a negative errno code on error.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#dev_set_allmulti\">dev_set_allmulti</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#inc\">inc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#old_flags\">old_flags</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#allmulti\">allmulti</a> += <a class=\"id\" href=\"#inc\">inc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#allmulti\">allmulti</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Avoid overflow.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If inc causes overflow, untouch allmulti and return error.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inc\">inc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#allmulti\">allmulti</a> -= <a class=\"id\" href=\"#inc\">inc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: allmulti touches roof, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"set allmulti failed, allmulti feature of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"device might be broken.\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOVERFLOW\">EOVERFLOW</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> ^ <a class=\"id\" href=\"#old_flags\">old_flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_change_rx_flags\">dev_change_rx_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_set_rx_mode\">dev_set_rx_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_set_allmulti\">dev_set_allmulti</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Upload unicast and multicast address lists to device and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>configure RX filtering. When the device doesn't support unicast</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>filtering it is put in promiscuous mode while unicast addresses</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>are present.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__dev_set_rx_mode\">__dev_set_rx_mode</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* dev_open will call this function so the list will stay sane. */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_rx_mode\">ndo_set_rx_mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_rx_mode\">ndo_set_rx_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unicast addresses changes may only happen under the rtnl,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * therefore calling __dev_set_promiscuity here is safe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#netdev_uc_empty\">netdev_uc_empty</a>(<a class=\"id\" href=\"#dev\">dev</a>) && !<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#uc_promisc\">uc_promisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__dev_set_promiscuity\">__dev_set_promiscuity</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#uc_promisc\">uc_promisc</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#netdev_uc_empty\">netdev_uc_empty</a>(<a class=\"id\" href=\"#dev\">dev</a>) && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#uc_promisc\">uc_promisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__dev_set_promiscuity\">__dev_set_promiscuity</a>(<a class=\"id\" href=\"#dev\">dev</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#uc_promisc\">uc_promisc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_multicast_list\">ndo_set_multicast_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_multicast_list\">ndo_set_multicast_list</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#dev_set_rx_mode\">dev_set_rx_mode</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_addr_lock_bh\">netif_addr_lock_bh</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_set_rx_mode\">__dev_set_rx_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_addr_unlock_bh\">netif_addr_unlock_bh</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dev_get_flags - get flags reported to userspace</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Get the combination of flag bits exported through APIs to userspace.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned <a class=\"id\" href=\"#dev_get_flags\">dev_get_flags</a>(const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IFF_RUNNING\">IFF_RUNNING</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IFF_LOWER_UP\">IFF_LOWER_UP</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IFF_DORMANT\">IFF_DORMANT</a>)) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#gflags\">gflags</a> &amp; (<a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_running\">netif_running</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_oper_up\">netif_oper_up</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_RUNNING\">IFF_RUNNING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_carrier_ok\">netif_carrier_ok</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_LOWER_UP\">IFF_LOWER_UP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_dormant\">netif_dormant</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFF_DORMANT\">IFF_DORMANT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_get_flags\">dev_get_flags</a>);", 
"", 
"int <a class=\"id\" href=\"#__dev_change_flags\">__dev_change_flags</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#old_flags\">old_flags</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Set the flags on our device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IFF_DEBUG\">IFF_DEBUG</a> | <a class=\"id\" href=\"#IFF_NOTRAILERS\">IFF_NOTRAILERS</a> | <a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#IFF_DYNAMIC\">IFF_DYNAMIC</a> | <a class=\"id\" href=\"#IFF_MULTICAST\">IFF_MULTICAST</a> | <a class=\"id\" href=\"#IFF_PORTSEL\">IFF_PORTSEL</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#IFF_AUTOMEDIA\">IFF_AUTOMEDIA</a>)) |", 
"<span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a> | <a class=\"id\" href=\"#IFF_VOLATILE\">IFF_VOLATILE</a> | <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Load in the correct multicast list now the flags have changed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#old_flags\">old_flags</a> ^ <a class=\"id\" href=\"#flags\">flags</a>) &amp; <a class=\"id\" href=\"#IFF_MULTICAST\">IFF_MULTICAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_change_rx_flags\">dev_change_rx_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#IFF_MULTICAST\">IFF_MULTICAST</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_rx_mode\">dev_set_rx_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Have we downed the interface. We handle IFF_UP ourselves</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>according to user attempts to set it, rather than blindly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>setting it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#old_flags\">old_flags</a> ^ <a class=\"id\" href=\"#flags\">flags</a>) &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>) {<span class=\"ts\"/><span class=\"comment\">/* Bit is different  ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = ((<a class=\"id\" href=\"#old_flags\">old_flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>) ? <a class=\"id\" href=\"#__dev_close\">__dev_close</a> : <a class=\"id\" href=\"#__dev_open\">__dev_open</a>)(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_set_rx_mode\">dev_set_rx_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> ^ <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#gflags\">gflags</a>) &amp; <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#inc\">inc</a> = (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>) ? 1 : -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#gflags\">gflags</a> ^= <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_set_promiscuity\">dev_set_promiscuity</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#inc\">inc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE: order of synchronization of IFF_PROMISC and IFF_ALLMULTI</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   is important. Some (broken) drivers set IFF_PROMISC, when</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   IFF_ALLMULTI is requested not asking us and not reporting.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> ^ <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#gflags\">gflags</a>) &amp; <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#inc\">inc</a> = (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>) ? 1 : -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#gflags\">gflags</a> ^= <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_set_allmulti\">dev_set_allmulti</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#inc\">inc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__dev_notify_flags\">__dev_notify_flags</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#old_flags\">old_flags</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#changes\">changes</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> ^ <a class=\"id\" href=\"#old_flags\">old_flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#changes\">changes</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_netdevice_notifiers\">call_netdevice_notifiers</a>(<a class=\"id\" href=\"#NETDEV_UP\">NETDEV_UP</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_netdevice_notifiers\">call_netdevice_notifiers</a>(<a class=\"id\" href=\"#NETDEV_DOWN\">NETDEV_DOWN</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#changes\">changes</a> &amp; ~(<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a> | <a class=\"id\" href=\"#IFF_PROMISC\">IFF_PROMISC</a> | <a class=\"id\" href=\"#IFF_ALLMULTI\">IFF_ALLMULTI</a> | <a class=\"id\" href=\"#IFF_VOLATILE\">IFF_VOLATILE</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_netdevice_notifiers\">call_netdevice_notifiers</a>(<a class=\"id\" href=\"#NETDEV_CHANGE\">NETDEV_CHANGE</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dev_change_flags - change device settings</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@flags: device state flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Change settings on device based state flags. The flags are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in the userspace exported format.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dev_change_flags\">dev_change_flags</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#changes\">changes</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#old_flags\">old_flags</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__dev_change_flags\">__dev_change_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#changes\">changes</a> = <a class=\"id\" href=\"#old_flags\">old_flags</a> ^ <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#changes\">changes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_ifinfo\">rtmsg_ifinfo</a>(<a class=\"id\" href=\"#RTM_NEWLINK\">RTM_NEWLINK</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#changes\">changes</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_notify_flags\">__dev_notify_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#old_flags\">old_flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_change_flags\">dev_change_flags</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dev_set_mtu - Change maximum transfer unit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_mtu: new transfer unit</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Change the maximum transfer size of the network device.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dev_set_mtu\">dev_set_mtu</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#new_mtu\">new_mtu</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_mtu\">new_mtu</a> == <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*<span class=\"ts\"/>MTU must be positive.<span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_mtu\">new_mtu</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_change_mtu\">ndo_change_mtu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_change_mtu\">ndo_change_mtu</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#new_mtu\">new_mtu</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a> = <a class=\"id\" href=\"#new_mtu\">new_mtu</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_netdevice_notifiers\">call_netdevice_notifiers</a>(<a class=\"id\" href=\"#NETDEV_CHANGEMTU\">NETDEV_CHANGEMTU</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_set_mtu\">dev_set_mtu</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dev_set_mac_address - Change Media Access Control Address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sa: new address</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Change the hardware (MAC) address of the device</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dev_set_mac_address\">dev_set_mac_address</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#sa\">sa</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_mac_address\">ndo_set_mac_address</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sa\">sa</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_mac_address\">ndo_set_mac_address</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#sa\">sa</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_netdevice_notifiers\">call_netdevice_notifiers</a>(<a class=\"id\" href=\"#NETDEV_CHANGEADDR\">NETDEV_CHANGEADDR</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dev_set_mac_address\">dev_set_mac_address</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform the SIOCxIFxxx calls, inside rcu_read_lock()</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dev_ifsioc_locked\">dev_ifsioc_locked</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#ifreq\">ifreq</a> *<a class=\"id\" href=\"#ifr\">ifr</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_name_rcu\">dev_get_by_name_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFFLAGS\">SIOCGIFFLAGS</a>:<span class=\"ts\"/><span class=\"comment\">/* Get interface flags */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_flags\">ifr_flags</a> = (short) <a class=\"id\" href=\"#dev_get_flags\">dev_get_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFMETRIC\">SIOCGIFMETRIC</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the metric on the interface</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (currently unused) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_metric\">ifr_metric</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFMTU\">SIOCGIFMTU</a>:<span class=\"ts\"/><span class=\"comment\">/* Get the MTU of a device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_mtu\">ifr_mtu</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mtu\">mtu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFHWADDR\">SIOCGIFHWADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>, 0, sizeof <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#min\">min</a>(sizeof <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>, (<a class=\"id\" href=\"#size_t\">size_t</a>) <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFSLAVE\">SIOCGIFSLAVE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFMAP\">SIOCGIFMAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_map\">ifr_map</a>.<a class=\"id\" href=\"#mem_start\">mem_start</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mem_start\">mem_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_map\">ifr_map</a>.<a class=\"id\" href=\"#mem_end\">mem_end</a>   = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mem_end\">mem_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_map\">ifr_map</a>.<a class=\"id\" href=\"#base_addr\">base_addr</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#base_addr\">base_addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_map\">ifr_map</a>.<a class=\"id\" href=\"#irq\">irq</a>       = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_map\">ifr_map</a>.<a class=\"id\" href=\"#dma\">dma</a>       = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma\">dma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_map\">ifr_map</a>.<a class=\"id\" href=\"#port\">port</a>      = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#if_port\">if_port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFINDEX\">SIOCGIFINDEX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_ifindex\">ifr_ifindex</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFTXQLEN\">SIOCGIFTXQLEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_qlen\">ifr_qlen</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* dev_ioctl() should ensure this case</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is never reached</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform the SIOCxIFxxx calls, inside rtnl_lock()</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dev_ifsioc\">dev_ifsioc</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#ifreq\">ifreq</a> *<a class=\"id\" href=\"#ifr\">ifr</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFFLAGS\">SIOCSIFFLAGS</a>:<span class=\"ts\"/><span class=\"comment\">/* Set interface flags */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_change_flags\">dev_change_flags</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_flags\">ifr_flags</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFMETRIC\">SIOCSIFMETRIC</a>:<span class=\"ts\"/><span class=\"comment\">/* Set the metric on the interface</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (currently unused) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFMTU\">SIOCSIFMTU</a>:<span class=\"ts\"/><span class=\"comment\">/* Set the MTU of a device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_set_mtu\">dev_set_mtu</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_mtu\">ifr_mtu</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFHWADDR\">SIOCSIFHWADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_set_mac_address\">dev_set_mac_address</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFHWBROADCAST\">SIOCSIFHWBROADCAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#min\">min</a>(sizeof <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>, (<a class=\"id\" href=\"#size_t\">size_t</a>) <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_netdevice_notifiers\">call_netdevice_notifiers</a>(<a class=\"id\" href=\"#NETDEV_CHANGEADDR\">NETDEV_CHANGEADDR</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFMAP\">SIOCSIFMAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_config\">ndo_set_config</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_config\">ndo_set_config</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_map\">ifr_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCADDMULTI\">SIOCADDMULTI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_multicast_list\">ndo_set_multicast_list</a> && !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_rx_mode\">ndo_set_rx_mode</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_mc_add_global\">dev_mc_add_global</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCDELMULTI\">SIOCDELMULTI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_multicast_list\">ndo_set_multicast_list</a> && !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_set_rx_mode\">ndo_set_rx_mode</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_mc_del_global\">dev_mc_del_global</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_hwaddr\">ifr_hwaddr</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFTXQLEN\">SIOCSIFTXQLEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_qlen\">ifr_qlen</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_queue_len\">tx_queue_len</a> = <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_qlen\">ifr_qlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFNAME\">SIOCSIFNAME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_newname\">ifr_newname</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>-1] = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_change_name\">dev_change_name</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>-><a class=\"id\" href=\"#ifr_newname\">ifr_newname</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Unknown or private ioctl</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#cmd\">cmd</a> >= <a class=\"id\" href=\"#SIOCDEVPRIVATE\">SIOCDEVPRIVATE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> <= <a class=\"id\" href=\"#SIOCDEVPRIVATE\">SIOCDEVPRIVATE</a> + 15) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBONDENSLAVE\">SIOCBONDENSLAVE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBONDRELEASE\">SIOCBONDRELEASE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBONDSETHWADDR\">SIOCBONDSETHWADDR</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBONDSLAVEINFOQUERY\">SIOCBONDSLAVEINFOQUERY</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBONDINFOQUERY\">SIOCBONDINFOQUERY</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBONDCHANGEACTIVE\">SIOCBONDCHANGEACTIVE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGMIIPHY\">SIOCGMIIPHY</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGMIIREG\">SIOCGMIIREG</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCSMIIREG\">SIOCSMIIREG</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBRADDIF\">SIOCBRADDIF</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCBRDELIF\">SIOCBRDELIF</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCSHWTSTAMP\">SIOCSHWTSTAMP</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCWANDEV\">SIOCWANDEV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#netif_device_present\">netif_device_present</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function handles all \"interface\"-type I/O control requests. The actual</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>'doing' part of this is dev_ifsioc above.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>dev_ioctl<span class=\"ts\"/>-<span class=\"ts\"/>network device ioctl</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@net: the applicable net namespace</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: command to issue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@arg: pointer to a struct ifreq in user space</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Issue ioctl functions to devices. This is normally called by the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>user space syscall interfaces but can sometimes be useful for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>other purposes. The return value is the return from the syscall if</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>positive or a negative errno code on error.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#dev_ioctl\">dev_ioctl</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#ifr\">ifr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#colon\">colon</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* One special case: SIOCGIFCONF takes ifconf argument</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   and requires shared lock, because it sleeps writing</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   to user space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGIFCONF\">SIOCGIFCONF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_ifconf\">dev_ifconf</a>(<a class=\"id\" href=\"#net\">net</a>, (char <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGIFNAME\">SIOCGIFNAME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_ifname\">dev_ifname</a>(<a class=\"id\" href=\"#net\">net</a>, (struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>-1] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#colon\">colon</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>, ':');", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#colon\">colon</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>See which interface the caller is talking about.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>These ioctl calls:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>- can be done by all.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>- atomic and do not require locking.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>- return a value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFFLAGS\">SIOCGIFFLAGS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFMETRIC\">SIOCGIFMETRIC</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFMTU\">SIOCGIFMTU</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFHWADDR\">SIOCGIFHWADDR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFSLAVE\">SIOCGIFSLAVE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFMAP\">SIOCGIFMAP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFINDEX\">SIOCGIFINDEX</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGIFTXQLEN\">SIOCGIFTXQLEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_load\">dev_load</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_ifsioc_locked\">dev_ifsioc_locked</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#colon\">colon</a> = ':';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCETHTOOL\">SIOCETHTOOL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_load\">dev_load</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_ethtool\">dev_ethtool</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#colon\">colon</a> = ':';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>These ioctl calls:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>- require superuser power.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>- require strict serialization.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>- return a value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGMIIPHY\">SIOCGMIIPHY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGMIIREG\">SIOCGMIIREG</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFNAME\">SIOCSIFNAME</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_load\">dev_load</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_name\">ifr_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dev_ifsioc\">dev_ifsioc</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#colon\">colon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#colon\">colon</a> = ':';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#ifreq\">ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
];
xr_frag_insert('l/05/95f4008f57f881a89dfb7a92645a8aaaa59a8f.xr', __xr_tmp);
