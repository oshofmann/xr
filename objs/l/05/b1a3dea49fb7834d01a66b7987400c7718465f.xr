var __xr_tmp = [
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ecn_flags\">ecn_flags</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#ecn_ok\">ecn_ok</a> ? <a class=\"id\" href=\"#TCP_ECN_OK\">TCP_ECN_OK</a> : 0;", 
"}", 
"", 
"<span class=\"comment\">/* This is not only more efficient than what we used to do, it eliminates</span>", 
"<span class=\"comment\"> * a lot of code duplication between IPv4/IPv6 SYN recv processing. -DaveM</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Actually, we could lots of memory writes here. tp of listening</span>", 
"<span class=\"comment\"> * socket contains all necessary default parameters.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#tcp_create_openreq_child\">tcp_create_openreq_child</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#newsk\">newsk</a> = <a class=\"id\" href=\"#inet_csk_clone\">inet_csk_clone</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newsk\">newsk</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_request_sock\">inet_request_sock</a> *<a class=\"id\" href=\"#ireq\">ireq</a> = <a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_request_sock\">tcp_request_sock</a> *<a class=\"id\" href=\"#treq\">treq</a> = <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#newicsk\">newicsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#newtp\">newtp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#oldtp\">oldtp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_cookie_values\">tcp_cookie_values</a> *<a class=\"id\" href=\"#oldcvp\">oldcvp</a> = <a class=\"id\" href=\"#oldtp\">oldtp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* TCP Cookie Transactions require space for the cookie pair,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * as it differs for each connection.  There is no need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * copy any s_data_payload stored at the original socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Failure will prevent resuming the connection.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Presumed copied, in order of appearance:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>cookie_in_always, cookie_out_never</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldcvp\">oldcvp</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_cookie_values\">tcp_cookie_values</a> *<a class=\"id\" href=\"#newcvp\">newcvp</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newcvp\">newcvp</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#newcvp\">newcvp</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newcvp\">newcvp</a>-><a class=\"id\" href=\"#cookie_desired\">cookie_desired</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldcvp\">oldcvp</a>-><a class=\"id\" href=\"#cookie_desired\">cookie_desired</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a> = <a class=\"id\" href=\"#newcvp\">newcvp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not Yet Implemented */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#cookie_values\">cookie_values</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now setup tcp_sock */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a> = <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> = <a class=\"id\" href=\"#treq\">treq</a>-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> + 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_sml\">snd_sml</a> = <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_una\">snd_una</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_nxt\">snd_nxt</a> = <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_up\">snd_up</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#treq\">treq</a>-><a class=\"id\" href=\"#snt_isn\">snt_isn</a> + 1 + <a class=\"id\" href=\"#tcp_s_data_size\">tcp_s_data_size</a>(<a class=\"id\" href=\"#oldtp\">oldtp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_prequeue_init\">tcp_prequeue_init</a>(<a class=\"id\" href=\"#newtp\">newtp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_init_wl\">tcp_init_wl</a>(<a class=\"id\" href=\"#newtp\">newtp</a>, <a class=\"id\" href=\"#treq\">treq</a>-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#srtt\">srtt</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#mdev\">mdev</a> = <a class=\"id\" href=\"#TCP_TIMEOUT_INIT\">TCP_TIMEOUT_INIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_rto\">icsk_rto</a> = <a class=\"id\" href=\"#TCP_TIMEOUT_INIT\">TCP_TIMEOUT_INIT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#retrans_out\">retrans_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#sacked_out\">sacked_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#fackets_out\">fackets_out</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#TCP_INFINITE_SSTHRESH\">TCP_INFINITE_SSTHRESH</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* So many TCP implementations out there (incorrectly) count the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * initial SYN frame in their delayed-ACK and congestion control</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * algorithms that we must have the following bandaid to talk</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * efficiently to them.  -DaveM</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_cwnd_cnt\">snd_cwnd_cnt</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#bytes_acked\">bytes_acked</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#frto_counter\">frto_counter</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#frto_highmark\">frto_highmark</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_ca_ops\">icsk_ca_ops</a> = &amp;<a class=\"id\" href=\"#tcp_init_congestion_ops\">tcp_init_congestion_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_ca_state\">tcp_set_ca_state</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_init_xmit_timers\">tcp_init_xmit_timers</a>(<a class=\"id\" href=\"#newsk\">newsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_head_init\">skb_queue_head_init</a>(&amp;<a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#write_seq\">write_seq</a> = <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#pushed_seq\">pushed_seq</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#treq\">treq</a>-><a class=\"id\" href=\"#snt_isn\">snt_isn</a> + 1 + <a class=\"id\" href=\"#tcp_s_data_size\">tcp_s_data_size</a>(<a class=\"id\" href=\"#oldtp\">oldtp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#dsack\">dsack</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#num_sacks\">num_sacks</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#newsk\">newsk</a>, <a class=\"id\" href=\"#SOCK_KEEPOPEN\">SOCK_KEEPOPEN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reset_keepalive_timer\">inet_csk_reset_keepalive_timer</a>(<a class=\"id\" href=\"#newsk\">newsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#keepalive_time_when\">keepalive_time_when</a>(<a class=\"id\" href=\"#newtp\">newtp</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#sack_ok\">sack_ok</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#sack_ok\">sack_ok</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sysctl_tcp_fack\">sysctl_tcp_fack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_enable_fack\">tcp_enable_fack</a>(<a class=\"id\" href=\"#newtp\">newtp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#window_clamp\">window_clamp</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#window_clamp\">window_clamp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rcv_ssthresh\">rcv_ssthresh</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#wscale_ok\">wscale_ok</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#wscale_ok\">wscale_ok</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#wscale_ok\">wscale_ok</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#snd_wscale\">snd_wscale</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a> = <a class=\"id\" href=\"#ireq\">ireq</a>-><a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#snd_wscale\">snd_wscale</a> = <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#rcv_wscale\">rcv_wscale</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#window_clamp\">window_clamp</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#window_clamp\">window_clamp</a>, 65535U);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a> = (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#window\">window</a>) <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#snd_wscale\">snd_wscale</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#max_window\">max_window</a> = <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#snd_wnd\">snd_wnd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#tstamp_ok\">tstamp_ok</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> = sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>) + <a class=\"id\" href=\"#TCPOLEN_TSTAMP_ALIGNED\">TCPOLEN_TSTAMP_ALIGNED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> = sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TCP_MD5SIG\">CONFIG_TCP_MD5SIG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#md5sig_info\">md5sig_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"comment\">/*XXX*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#af_specific\">af_specific</a>-><a class=\"id\" href=\"#md5_lookup\">md5_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#newsk\">newsk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a> += <a class=\"id\" href=\"#TCPOLEN_MD5SIG_ALIGNED\">TCPOLEN_MD5SIG_ALIGNED</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> >= <a class=\"id\" href=\"#TCP_MSS_DEFAULT\">TCP_MSS_DEFAULT</a> + <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newicsk\">newicsk</a>-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#last_seg_size\">last_seg_size</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#tcp_header_len\">tcp_header_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newtp\">newtp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_openreq_child\">TCP_ECN_openreq_child</a>(<a class=\"id\" href=\"#newtp\">newtp</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_PASSIVEOPENS\">TCP_MIB_PASSIVEOPENS</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newsk\">newsk</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_create_openreq_child\">tcp_create_openreq_child</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Process an incoming packet for SYN_RECV sockets represented</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>as a request_sock.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#tcp_check_req\">tcp_check_req</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request_sock\">request_sock</a> **<a class=\"id\" href=\"#prev\">prev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_options_received\">tcp_options_received</a> <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#hash_location\">hash_location</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#flg\">flg</a> = <a class=\"id\" href=\"#tcp_flag_word\">tcp_flag_word</a>(<a class=\"id\" href=\"#th\">th</a>) &amp; (<a class=\"id\" href=\"#TCP_FLAG_RST\">TCP_FLAG_RST</a>|<a class=\"id\" href=\"#TCP_FLAG_SYN\">TCP_FLAG_SYN</a>|<a class=\"id\" href=\"#TCP_FLAG_ACK\">TCP_FLAG_ACK</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#paws_reject\">paws_reject</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> &gt; (sizeof(struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a>)>>2)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_parse_options\">tcp_parse_options</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>, &amp;<a class=\"id\" href=\"#hash_location\">hash_location</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#ts_recent\">ts_recent</a> = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We do not store true stamp, but it is not required,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * it can be estimated (approximately)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * from another data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#ts_recent_stamp\">ts_recent_stamp</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() - ((<a class=\"id\" href=\"#TCP_TIMEOUT_INIT\">TCP_TIMEOUT_INIT</a>/<a class=\"id\" href=\"#HZ\">HZ</a>)<<<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#paws_reject\">paws_reject</a> = <a class=\"id\" href=\"#tcp_paws_reject\">tcp_paws_reject</a>(&amp;<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for pure retransmitted SYN. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#flg\">flg</a> == <a class=\"id\" href=\"#TCP_FLAG_SYN\">TCP_FLAG_SYN</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#paws_reject\">paws_reject</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * RFC793 draws (Incorrectly! It was fixed in RFC1122)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this case on figure 6 and figure 8, but formal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * protocol description says NOTHING.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * To be more exact, it says that we should send ACK,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * because this segment (at least, if it has no data)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is out of window.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  CONCLUSION: RFC793 (even with RFC1122) DOES NOT</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  describe SYN-RECV state. All the description</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  is wrong, we cannot believe to it and should</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  rely only on common sense and implementation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  experience.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Enforce \"SYN-ACK\" according to figure 8, figure 6</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of RFC793, fixed by RFC1122.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#rtx_syn_ack\">rtx_syn_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Further reproduces section \"SEGMENT ARRIVES\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   for state SYN-RECEIVED of RFC793.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   It is broken, however, it does not work only</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   when SYNs are crossed.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   You would think that SYN crossing is impossible here, since</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   we should have a SYN_SENT socket (from connect()) on our end,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   but this is not true if the crossed SYNs were sent to both</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   ends by a malicious third party.  We must defend against this,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   and to do that we first verify the ACK (as per RFC793, page</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   36) and reset if it is invalid.  Is this a true full defense?</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   To convince ourselves, let us consider a way in which the ACK</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   test can still pass in this 'malicious crossed SYNs' case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Malicious sender sends identical SYNs (and thus identical sequence</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   numbers) to both A and B:</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>A: gets SYN, seq=7</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>B: gets SYN, seq=7</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   By our good fortune, both A and B select the same initial</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   send sequence number of seven :-)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>A: sends SYN|ACK, seq=7, ack_seq=8</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>B: sends SYN|ACK, seq=7, ack_seq=8</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   So we are now A eating this SYN|ACK, ACK test passes.  So</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   does sequence test, SYN is truncated, and thus we consider</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   it a bare ACK.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   If icsk-&gt;icsk_accept_queue.rskq_defer_accept, we silently drop this</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   bare ACK.  Otherwise, we create an established connection.  Both</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   ends (listening sockets) accept the new incoming connection and try</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   to talk to each other. 8-)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Note: This case is both harmless, and rare.  Possibility is about the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   same as us discovering intelligent life on another plant tomorrow.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   But generally, we should (RFC lies!) to accept ACK</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   from SYNACK both here and in tcp_rcv_state_process().</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   tcp_rcv_state_process() does not, hence, we do not too.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Note that the case is absolutely generic:</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   we cannot optimize anything here without</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   violating protocol. All the checks must be made</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   before attempt to create socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RFC793 page 36: \"If the connection is in any non-synchronized state ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *                  and the incoming segment acknowledges something not yet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *                  sent (the segment carries an unacceptable ACK) ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *                  a reset is sent.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Invalid ACK: reset will be sent by listening socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flg\">flg</a> &amp; <a class=\"id\" href=\"#TCP_FLAG_ACK\">TCP_FLAG_ACK</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#ack_seq\">ack_seq</a> !=", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#snt_isn\">snt_isn</a> + 1 + <a class=\"id\" href=\"#tcp_s_data_size\">tcp_s_data_size</a>(<a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Also, it would be not so bad idea to check rcv_tsecr, which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is essentially ACK extension and too early or too late values</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * should cause reset in unsynchronized states.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RFC793: \"first check sequence number\". */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#paws_reject\">paws_reject</a> || !<a class=\"id\" href=\"#tcp_in_window\">tcp_in_window</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> + 1, <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> + 1 + <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Out of window: send ACK and drop. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flg\">flg</a> &amp; <a class=\"id\" href=\"#TCP_FLAG_RST\">TCP_FLAG_RST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#send_ack\">send_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#paws_reject\">paws_reject</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_PAWSESTABREJECTED\">LINUX_MIB_PAWSESTABREJECTED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* In sequence, PAWS is OK. */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> && !<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#ts_recent\">ts_recent</a> = <a class=\"id\" href=\"#tmp_opt\">tmp_opt</a>.<a class=\"id\" href=\"#rcv_tsval\">rcv_tsval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Truncate SYN, it is out of window starting</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   at tcp_rsk(req)-&gt;rcv_isn + 1. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flg\">flg</a> &= ~<a class=\"id\" href=\"#TCP_FLAG_SYN\">TCP_FLAG_SYN</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RFC793: \"second check the RST bit\" and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>   \"fourth, check the SYN bit\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flg\">flg</a> &amp; (<a class=\"id\" href=\"#TCP_FLAG_RST\">TCP_FLAG_RST</a>|<a class=\"id\" href=\"#TCP_FLAG_SYN\">TCP_FLAG_SYN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_INC_STATS_BH\">TCP_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#TCP_MIB_ATTEMPTFAILS\">TCP_MIB_ATTEMPTFAILS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#embryonic_reset\">embryonic_reset</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ACK sequence verified above, just make sure ACK is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set.  If ACK not set, just silently drop the packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flg\">flg</a> &amp; <a class=\"id\" href=\"#TCP_FLAG_ACK\">TCP_FLAG_ACK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* While TCP_DEFER_ACCEPT is active, drop bare ACK. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#retrans\">retrans</a> &lt; <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_accept_queue\">icsk_accept_queue</a>.<a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> == <a class=\"id\" href=\"#tcp_rsk\">tcp_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#rcv_isn\">rcv_isn</a> + 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#acked\">acked</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPDEFERACCEPTDROP\">LINUX_MIB_TCPDEFERACCEPTDROP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, ACK is valid, create big socket and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * feed this segment to it. It will repeat all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the tests. THIS SEGMENT MUST MOVE SOCKET TO</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ESTABLISHED STATE. If it will be dropped after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * socket is created, wait for troubles.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_af_ops\">icsk_af_ops</a>-><a class=\"id\" href=\"#syn_recv_sock\">syn_recv_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#listen_overflow\">listen_overflow</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_unlink\">inet_csk_reqsk_queue_unlink</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#prev\">prev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_removed\">inet_csk_reqsk_queue_removed</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_add\">inet_csk_reqsk_queue_add</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<a class=\"id\" href=\"#listen_overflow\">listen_overflow</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysctl_tcp_abort_on_overflow\">sysctl_tcp_abort_on_overflow</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_rsk\">inet_rsk</a>(<a class=\"id\" href=\"#req\">req</a>)-><a class=\"id\" href=\"#acked\">acked</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#embryonic_reset\">embryonic_reset</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_EMBRYONICRSTS\">LINUX_MIB_EMBRYONICRSTS</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flg\">flg</a> &amp; <a class=\"id\" href=\"#TCP_FLAG_RST\">TCP_FLAG_RST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#send_reset\">send_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_reqsk_queue_drop\">inet_csk_reqsk_queue_drop</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#prev\">prev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_check_req\">tcp_check_req</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Queue segment on the new socket if the new socket is active,</span>", 
"<span class=\"comment\"> * otherwise we just shortcircuit this and continue with</span>", 
"<span class=\"comment\"> * the new socket.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tcp_child_process\">tcp_child_process</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#child\">child</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#child\">child</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tcp_rcv_state_process\">tcp_rcv_state_process</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Wakeup parent, send SIGIO */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#TCP_SYN_RECV\">TCP_SYN_RECV</a> && <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#parent\">parent</a>, 0);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Alas, it is possible again, because we do lookup</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in main socket hash table and lock on listening</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * socket does not protect us more.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__sk_add_backlog\">__sk_add_backlog</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tcp_child_process\">tcp_child_process</a>);", 
];
xr_frag_insert('l/05/b1a3dea49fb7834d01a66b7987400c7718465f.xr', __xr_tmp);
