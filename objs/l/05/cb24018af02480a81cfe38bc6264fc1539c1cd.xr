var __xr_tmp = [
"<span class=\"comment\">/* timr-&gt;it_lock is taken. */</span>", 
"static int", 
"<a class=\"id\" href=\"#common_timer_set\">common_timer_set</a>(struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#timr\">timr</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> *<a class=\"id\" href=\"#new_setting\">new_setting</a>, struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> *<a class=\"id\" href=\"#old_setting\">old_setting</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a> = &amp;<a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it\">it</a>.<a class=\"id\" href=\"#real\">real</a>.<a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_setting\">old_setting</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#common_timer_get\">common_timer_get</a>(<a class=\"id\" href=\"#timr\">timr</a>, <a class=\"id\" href=\"#old_setting\">old_setting</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* disable the timer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it\">it</a>.<a class=\"id\" href=\"#real\">real</a>.<a class=\"id\" href=\"#interval\">interval</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * careful here.  If smp we could be in the \"fire\" routine which will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be spinning as we hold the lock.  But this is ONLY an SMP issue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_try_to_cancel\">hrtimer_try_to_cancel</a>(<a class=\"id\" href=\"#timer\">timer</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TIMER_RETRY\">TIMER_RETRY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it_requeue_pending\">it_requeue_pending</a> = (<a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it_requeue_pending\">it_requeue_pending</a> + 2) &amp; ", 
"<span class=\"ts\"/><span class=\"ts\"/>~<a class=\"id\" href=\"#REQUEUE_PENDING\">REQUEUE_PENDING</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it_overrun_last\">it_overrun_last</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* switch off the timer when it_value is zero */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_setting\">new_setting</a>-><a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> && !<a class=\"id\" href=\"#new_setting\">new_setting</a>-><a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TIMER_ABSTIME\">TIMER_ABSTIME</a> ? <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a> : <a class=\"id\" href=\"#HRTIMER_MODE_REL\">HRTIMER_MODE_REL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init\">hrtimer_init</a>(&amp;<a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it\">it</a>.<a class=\"id\" href=\"#real\">real</a>.<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it_clock\">it_clock</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it\">it</a>.<a class=\"id\" href=\"#real\">real</a>.<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#posix_timer_fn\">posix_timer_fn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_set_expires\">hrtimer_set_expires</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#timespec_to_ktime\">timespec_to_ktime</a>(<a class=\"id\" href=\"#new_setting\">new_setting</a>-><a class=\"id\" href=\"#it_value\">it_value</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert interval */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it\">it</a>.<a class=\"id\" href=\"#real\">real</a>.<a class=\"id\" href=\"#interval\">interval</a> = <a class=\"id\" href=\"#timespec_to_ktime\">timespec_to_ktime</a>(<a class=\"id\" href=\"#new_setting\">new_setting</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SIGEV_NONE timers are not queued ! See common_timer_get */</span>", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it_sigev_notify\">it_sigev_notify</a> &amp; ~<a class=\"id\" href=\"#SIGEV_THREAD_ID\">SIGEV_THREAD_ID</a>) == <a class=\"id\" href=\"#SIGEV_NONE\">SIGEV_NONE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Setup correct expiry time for relative timers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#HRTIMER_MODE_REL\">HRTIMER_MODE_REL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_add_expires\">hrtimer_add_expires</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#get_time\">get_time</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_start_expires\">hrtimer_start_expires</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Set a POSIX.1b interval timer */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#timer_settime\">timer_settime</a>, <a class=\"id\" href=\"#timer_t\">timer_t</a>, <a class=\"id\" href=\"#timer_id\">timer_id</a>, int, <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#new_setting\">new_setting</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#old_setting\">old_setting</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#timr\">timr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> <a class=\"id\" href=\"#new_spec\">new_spec</a>, <a class=\"id\" href=\"#old_spec\">old_spec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flag\">flag</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> *<a class=\"id\" href=\"#rtn\">rtn</a> = <a class=\"id\" href=\"#old_setting\">old_setting</a> ? &amp;<a class=\"id\" href=\"#old_spec\">old_spec</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_setting\">new_setting</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#new_spec\">new_spec</a>, <a class=\"id\" href=\"#new_setting\">new_setting</a>, sizeof (<a class=\"id\" href=\"#new_spec\">new_spec</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timespec_valid\">timespec_valid</a>(&amp;<a class=\"id\" href=\"#new_spec\">new_spec</a>.<a class=\"id\" href=\"#it_interval\">it_interval</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#timespec_valid\">timespec_valid</a>(&amp;<a class=\"id\" href=\"#new_spec\">new_spec</a>.<a class=\"id\" href=\"#it_value\">it_value</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timr\">timr</a> = <a class=\"id\" href=\"#lock_timer\">lock_timer</a>(<a class=\"id\" href=\"#timer_id\">timer_id</a>, &amp;<a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timr\">timr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#CLOCK_DISPATCH\">CLOCK_DISPATCH</a>(<a class=\"id\" href=\"#timr\">timr</a>-><a class=\"id\" href=\"#it_clock\">it_clock</a>, <a class=\"id\" href=\"#timer_set\">timer_set</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#timr\">timr</a>, <a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#new_spec\">new_spec</a>, <a class=\"id\" href=\"#rtn\">rtn</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_timer\">unlock_timer</a>(<a class=\"id\" href=\"#timr\">timr</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == <a class=\"id\" href=\"#TIMER_RETRY\">TIMER_RETRY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtn\">rtn</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"comment\">// We already got the old time...</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_setting\">old_setting</a> && !<a class=\"id\" href=\"#error\">error</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#old_setting\">old_setting</a>, &amp;<a class=\"id\" href=\"#old_spec\">old_spec</a>, sizeof (<a class=\"id\" href=\"#old_spec\">old_spec</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#common_timer_del\">common_timer_del</a>(struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#it\">it</a>.<a class=\"id\" href=\"#real\">real</a>.<a class=\"id\" href=\"#interval\">interval</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_try_to_cancel\">hrtimer_try_to_cancel</a>(&amp;<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#it\">it</a>.<a class=\"id\" href=\"#real\">real</a>.<a class=\"id\" href=\"#timer\">timer</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#TIMER_RETRY\">TIMER_RETRY</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#timer_delete_hook\">timer_delete_hook</a>(struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#CLOCK_DISPATCH\">CLOCK_DISPATCH</a>(<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#it_clock\">it_clock</a>, <a class=\"id\" href=\"#timer_del\">timer_del</a>, (<a class=\"id\" href=\"#timer\">timer</a>));", 
"}", 
"", 
"<span class=\"comment\">/* Delete a POSIX.1b interval timer. */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#timer_delete\">timer_delete</a>, <a class=\"id\" href=\"#timer_t\">timer_t</a>, <a class=\"id\" href=\"#timer_id\">timer_id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<a class=\"id\" href=\"#retry_delete\">retry_delete</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a> = <a class=\"id\" href=\"#lock_timer\">lock_timer</a>(<a class=\"id\" href=\"#timer_id\">timer_id</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timer\">timer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_delete_hook\">timer_delete_hook</a>(<a class=\"id\" href=\"#timer\">timer</a>) == <a class=\"id\" href=\"#TIMER_RETRY\">TIMER_RETRY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_timer\">unlock_timer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry_delete\">retry_delete</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This keeps any tasks waiting on the spin lock from thinking</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * they got something (see the lock code above).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#it_signal\">it_signal</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_timer\">unlock_timer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_posix_timer\">release_posix_timer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#IT_ID_SET\">IT_ID_SET</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * return timer owned by the process, used by exit_itimers</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#itimer_delete\">itimer_delete</a>(struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<a class=\"id\" href=\"#retry_delete\">retry_delete</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#it_lock\">it_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timer_delete_hook\">timer_delete_hook</a>(<a class=\"id\" href=\"#timer\">timer</a>) == <a class=\"id\" href=\"#TIMER_RETRY\">TIMER_RETRY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_timer\">unlock_timer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry_delete\">retry_delete</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This keeps any tasks waiting on the spin lock from thinking</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * they got something (see the lock code above).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#it_signal\">it_signal</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_timer\">unlock_timer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_posix_timer\">release_posix_timer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#IT_ID_SET\">IT_ID_SET</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is called by do_exit or de_thread, only when there are no more</span>", 
"<span class=\"comment\"> * references to the shared signal_struct.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#exit_itimers\">exit_itimers</a>(struct <a class=\"id\" href=\"#signal_struct\">signal_struct</a> *<a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a> *<a class=\"id\" href=\"#tmr\">tmr</a>;", 
"", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#posix_timers\">posix_timers</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmr\">tmr</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#posix_timers\">posix_timers</a>.<a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#k_itimer\">k_itimer</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#itimer_delete\">itimer_delete</a>(<a class=\"id\" href=\"#tmr\">tmr</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Not available / possible... functions */</span>", 
"int <a class=\"id\" href=\"#do_posix_clock_nosettime\">do_posix_clock_nosettime</a>(const <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#clockid\">clockid</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#do_posix_clock_nosettime\">do_posix_clock_nosettime</a>);", 
"", 
"int <a class=\"id\" href=\"#do_posix_clock_nonanosleep\">do_posix_clock_nonanosleep</a>(const <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#clock\">clock</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#r\">r</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#ENOTSUP\">ENOTSUP</a>", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;<span class=\"ts\"/><span class=\"comment\">/* aka ENOTSUP in userland for POSIX */</span>", 
"#else  <span class=\"comment\">/*  parisc does define it separately.  */</span>", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTSUP\">ENOTSUP</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#do_posix_clock_nonanosleep\">do_posix_clock_nonanosleep</a>);", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#clock_settime\">clock_settime</a>, const <a class=\"id\" href=\"#clockid_t\">clockid_t</a>, <a class=\"id\" href=\"#which_clock\">which_clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#new_tp\">new_tp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#invalid_clockid\">invalid_clockid</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#new_tp\">new_tp</a>, <a class=\"id\" href=\"#tp\">tp</a>, sizeof (*<a class=\"id\" href=\"#tp\">tp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#CLOCK_DISPATCH\">CLOCK_DISPATCH</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#clock_set\">clock_set</a>, (<a class=\"id\" href=\"#which_clock\">which_clock</a>, &amp;<a class=\"id\" href=\"#new_tp\">new_tp</a>));", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#clock_gettime\">clock_gettime</a>, const <a class=\"id\" href=\"#clockid_t\">clockid_t</a>, <a class=\"id\" href=\"#which_clock\">which_clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *,<a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#kernel_tp\">kernel_tp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#invalid_clockid\">invalid_clockid</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#CLOCK_DISPATCH\">CLOCK_DISPATCH</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#clock_get\">clock_get</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#which_clock\">which_clock</a>, &amp;<a class=\"id\" href=\"#kernel_tp\">kernel_tp</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#tp\">tp</a>, &amp;<a class=\"id\" href=\"#kernel_tp\">kernel_tp</a>, sizeof (<a class=\"id\" href=\"#kernel_tp\">kernel_tp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#clock_getres\">clock_getres</a>, const <a class=\"id\" href=\"#clockid_t\">clockid_t</a>, <a class=\"id\" href=\"#which_clock\">which_clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#tp\">tp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#rtn_tp\">rtn_tp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#invalid_clockid\">invalid_clockid</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#CLOCK_DISPATCH\">CLOCK_DISPATCH</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#clock_getres\">clock_getres</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#which_clock\">which_clock</a>, &amp;<a class=\"id\" href=\"#rtn_tp\">rtn_tp</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#tp\">tp</a> && <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#tp\">tp</a>, &amp;<a class=\"id\" href=\"#rtn_tp\">rtn_tp</a>, sizeof (<a class=\"id\" href=\"#rtn_tp\">rtn_tp</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * nanosleep for monotonic and realtime clocks</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#common_nsleep\">common_nsleep</a>(const <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#which_clock\">which_clock</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#tsave\">tsave</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#rmtp\">rmtp</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hrtimer_nanosleep\">hrtimer_nanosleep</a>(<a class=\"id\" href=\"#tsave\">tsave</a>, <a class=\"id\" href=\"#rmtp\">rmtp</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TIMER_ABSTIME\">TIMER_ABSTIME</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a> : <a class=\"id\" href=\"#HRTIMER_MODE_REL\">HRTIMER_MODE_REL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#which_clock\">which_clock</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#clock_nanosleep\">clock_nanosleep</a>, const <a class=\"id\" href=\"#clockid_t\">clockid_t</a>, <a class=\"id\" href=\"#which_clock\">which_clock</a>, int, <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#rqtp\">rqtp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#rmtp\">rmtp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#invalid_clockid\">invalid_clockid</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#rqtp\">rqtp</a>, sizeof (struct <a class=\"id\" href=\"#timespec\">timespec</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timespec_valid\">timespec_valid</a>(&amp;<a class=\"id\" href=\"#t\">t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#CLOCK_DISPATCH\">CLOCK_DISPATCH</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#nsleep\">nsleep</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#rmtp\">rmtp</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * nanosleep_restart for monotonic and realtime clocks</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#common_nsleep_restart\">common_nsleep_restart</a>(struct <a class=\"id\" href=\"#restart_block\">restart_block</a> *<a class=\"id\" href=\"#restart_block\">restart_block</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hrtimer_nanosleep_restart\">hrtimer_nanosleep_restart</a>(<a class=\"id\" href=\"#restart_block\">restart_block</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This will restart clock_nanosleep. This is required only by</span>", 
"<span class=\"comment\"> * compat_clock_nanosleep_restart for now.</span>", 
"<span class=\"comment\"> */</span>", 
"long", 
"<a class=\"id\" href=\"#clock_nanosleep_restart\">clock_nanosleep_restart</a>(struct <a class=\"id\" href=\"#restart_block\">restart_block</a> *<a class=\"id\" href=\"#restart_block\">restart_block</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#which_clock\">which_clock</a> = <a class=\"id\" href=\"#restart_block\">restart_block</a>-><a class=\"id\" href=\"#arg0\">arg0</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#CLOCK_DISPATCH\">CLOCK_DISPATCH</a>(<a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#nsleep_restart\">nsleep_restart</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#restart_block\">restart_block</a>));", 
"}", 
];
xr_frag_insert('l/05/cb24018af02480a81cfe38bc6264fc1539c1cd.xr', __xr_tmp);
