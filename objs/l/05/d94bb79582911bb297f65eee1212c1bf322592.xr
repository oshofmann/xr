var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Implementation of the hash table type.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author : Stephen Smalley, &lt;sds@epoch.ncsc.mil&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"hashtab.h\"", 
"", 
"struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#hashtab_create\">hashtab_create</a>(<a class=\"id\" href=\"#u32\">u32</a> (*<a class=\"id\" href=\"#hash_value\">hash_value</a>)(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, const void *<a class=\"id\" href=\"#key\">key</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int (*<a class=\"id\" href=\"#keycmp\">keycmp</a>)(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, const void *<a class=\"id\" href=\"#key1\">key1</a>, const void *<a class=\"id\" href=\"#key2\">key2</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#nel\">nel</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#hash_value\">hash_value</a> = <a class=\"id\" href=\"#hash_value\">hash_value</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#keycmp\">keycmp</a> = <a class=\"id\" href=\"#keycmp\">keycmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#htable\">htable</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#htable\">htable</a>)) * <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#htable\">htable</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#hashtab_insert\">hashtab_insert</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, void *<a class=\"id\" href=\"#key\">key</a>, void *<a class=\"id\" href=\"#datum\">datum</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hvalue\">hvalue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab_node\">hashtab_node</a> *<a class=\"id\" href=\"#prev\">prev</a>, *<a class=\"id\" href=\"#cur\">cur</a>, *<a class=\"id\" href=\"#newnode\">newnode</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a> || <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a> == <a class=\"id\" href=\"#HASHTAB_MAX_NODES\">HASHTAB_MAX_NODES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hvalue\">hvalue</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#hash_value\">hash_value</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>];", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a> && <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#keycmp\">keycmp</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cur\">cur</a> && (<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#keycmp\">keycmp</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>) == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#newnode\">newnode</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newnode\">newnode</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#datum\">datum</a> = <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#newnode\">newnode</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newnode\">newnode</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>] = <a class=\"id\" href=\"#newnode\">newnode</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#nel\">nel</a>++;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void *<a class=\"id\" href=\"#hashtab_search\">hashtab_search</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, const void *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#hvalue\">hvalue</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab_node\">hashtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hvalue\">hvalue</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#hash_value\">hash_value</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#hvalue\">hvalue</a>];", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a> && <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#keycmp\">keycmp</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cur\">cur</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || (<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#keycmp\">keycmp</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>) != 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#datum\">datum</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#hashtab_destroy\">hashtab_destroy</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab_node\">hashtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>, *<a class=\"id\" href=\"#temp\">temp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> = <a class=\"id\" href=\"#cur\">cur</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#temp\">temp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#h\">h</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#hashtab_map\">hashtab_map</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#apply\">apply</a>)(void *<a class=\"id\" href=\"#k\">k</a>, void *<a class=\"id\" href=\"#d\">d</a>, void *<a class=\"id\" href=\"#args\">args</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab_node\">hashtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#h\">h</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#apply\">apply</a>(<a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#datum\">datum</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"void <a class=\"id\" href=\"#hashtab_stat\">hashtab_stat</a>(struct <a class=\"id\" href=\"#hashtab\">hashtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#hashtab_info\">hashtab_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#chain_len\">chain_len</a>, <a class=\"id\" href=\"#slots_used\">slots_used</a>, <a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hashtab_node\">hashtab_node</a> *<a class=\"id\" href=\"#cur\">cur</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slots_used\">slots_used</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_chain_len\">max_chain_len</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#slots_used\">slots_used</a> = <a class=\"id\" href=\"#max_chain_len\">max_chain_len</a> = <a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#htable\">htable</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slots_used\">slots_used</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chain_len\">chain_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#cur\">cur</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chain_len\">chain_len</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur\">cur</a> = <a class=\"id\" href=\"#cur\">cur</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chain_len\">chain_len</a> &gt; <a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_chain_len\">max_chain_len</a> = <a class=\"id\" href=\"#chain_len\">chain_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#slots_used\">slots_used</a> = <a class=\"id\" href=\"#slots_used\">slots_used</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#max_chain_len\">max_chain_len</a> = <a class=\"id\" href=\"#max_chain_len\">max_chain_len</a>;", 
"}", 
];
xr_frag_insert('l/05/d94bb79582911bb297f65eee1212c1bf322592.xr', __xr_tmp);
