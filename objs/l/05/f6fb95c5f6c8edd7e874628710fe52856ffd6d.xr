var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#utime\">utime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_UTIME\">__ARCH_WANT_SYS_UTIME</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sys_utime() can be implemented in user-level using sys_utimes().</span>", 
"<span class=\"comment\"> * Is this for backwards compatibility?  If so, why not move it</span>", 
"<span class=\"comment\"> * into the appropriate arch directory (for those architectures that</span>", 
"<span class=\"comment\"> * need it).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* If times==NULL, set access and modification to current time,</span>", 
"<span class=\"comment\"> * must be owner or have write permission.</span>", 
"<span class=\"comment\"> * Else, update from *times, must be owner or super user.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#utime\">utime</a>, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#filename\">filename</a>, struct <a class=\"id\" href=\"#utimbuf\">utimbuf</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#times\">times</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#tv\">tv</a>[2];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#times\">times</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#tv\">tv</a>[0].<a class=\"id\" href=\"#tv_sec\">tv_sec</a>, &amp;<a class=\"id\" href=\"#times\">times</a>-><a class=\"id\" href=\"#actime\">actime</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#tv\">tv</a>[1].<a class=\"id\" href=\"#tv_sec\">tv_sec</a>, &amp;<a class=\"id\" href=\"#times\">times</a>-><a class=\"id\" href=\"#modtime\">modtime</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tv\">tv</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tv\">tv</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_utimes\">do_utimes</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#times\">times</a> ? <a class=\"id\" href=\"#tv\">tv</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#nsec_valid\">nsec_valid</a>(long <a class=\"id\" href=\"#nsec\">nsec</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nsec\">nsec</a> == <a class=\"id\" href=\"#UTIME_OMIT\">UTIME_OMIT</a> || <a class=\"id\" href=\"#nsec\">nsec</a> == <a class=\"id\" href=\"#UTIME_NOW\">UTIME_NOW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nsec\">nsec</a> >= 0 && <a class=\"id\" href=\"#nsec\">nsec</a> <= 999999999;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#utimes_common\">utimes_common</a>(struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#times\">times</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iattr\">iattr</a> <a class=\"id\" href=\"#newattrs\">newattrs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#times\">times</a> && <a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == <a class=\"id\" href=\"#UTIME_NOW\">UTIME_NOW</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == <a class=\"id\" href=\"#UTIME_NOW\">UTIME_NOW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#times\">times</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_valid\">ia_valid</a> = <a class=\"id\" href=\"#ATTR_CTIME\">ATTR_CTIME</a> | <a class=\"id\" href=\"#ATTR_MTIME\">ATTR_MTIME</a> | <a class=\"id\" href=\"#ATTR_ATIME\">ATTR_ATIME</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#times\">times</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == <a class=\"id\" href=\"#UTIME_OMIT\">UTIME_OMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &= ~<a class=\"id\" href=\"#ATTR_ATIME\">ATTR_ATIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> != <a class=\"id\" href=\"#UTIME_NOW\">UTIME_NOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_atime\">ia_atime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_atime\">ia_atime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_valid\">ia_valid</a> |= <a class=\"id\" href=\"#ATTR_ATIME_SET\">ATTR_ATIME_SET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == <a class=\"id\" href=\"#UTIME_OMIT\">UTIME_OMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &= ~<a class=\"id\" href=\"#ATTR_MTIME\">ATTR_MTIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> != <a class=\"id\" href=\"#UTIME_NOW\">UTIME_NOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_mtime\">ia_mtime</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_mtime\">ia_mtime</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_valid\">ia_valid</a> |= <a class=\"id\" href=\"#ATTR_MTIME_SET\">ATTR_MTIME_SET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Tell inode_change_ok(), that this is an explicit time</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * update, even if neither ATTR_ATIME_SET nor ATTR_MTIME_SET</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * were used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newattrs\">newattrs</a>.<a class=\"id\" href=\"#ia_valid\">ia_valid</a> |= <a class=\"id\" href=\"#ATTR_TIMES_SET\">ATTR_TIMES_SET</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If times is NULL (or both times are UTIME_NOW),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * then we need to check permissions, because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * inode_change_ok() won't do it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"                if (<a class=\"id\" href=\"#IS_IMMUTABLE\">IS_IMMUTABLE</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mnt_drop_write_and_out\">mnt_drop_write_and_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_owner_or_cap\">is_owner_or_cap</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_permission\">inode_permission</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#mnt_drop_write_and_out\">mnt_drop_write_and_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#notify_change\">notify_change</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#newattrs\">newattrs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"", 
"<a class=\"id\" href=\"#mnt_drop_write_and_out\">mnt_drop_write_and_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * do_utimes - change times on filename or file descriptor</span>", 
"<span class=\"comment\"> * @dfd: open file descriptor, -1 or AT_FDCWD</span>", 
"<span class=\"comment\"> * @filename: path name or NULL</span>", 
"<span class=\"comment\"> * @times: new times or NULL</span>", 
"<span class=\"comment\"> * @flags: zero or more flags (only AT_SYMLINK_NOFOLLOW for the moment)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If filename is NULL and dfd refers to an open file, then operate on</span>", 
"<span class=\"comment\"> * the file.  Otherwise look up filename, possibly using dfd as a</span>", 
"<span class=\"comment\"> * starting point.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If times==NULL, set access and modification to current time,</span>", 
"<span class=\"comment\"> * must be owner or have write permission.</span>", 
"<span class=\"comment\"> * Else, update from *times, must be owner or super user.</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#do_utimes\">do_utimes</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#filename\">filename</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#times\">times</a>,", 
"<span class=\"ts\"/>       int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#times\">times</a> && (!<a class=\"id\" href=\"#nsec_valid\">nsec_valid</a>(<a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>      !<a class=\"id\" href=\"#nsec_valid\">nsec_valid</a>(<a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#AT_SYMLINK_NOFOLLOW\">AT_SYMLINK_NOFOLLOW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filename\">filename</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#dfd\">dfd</a> != <a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AT_SYMLINK_NOFOLLOW\">AT_SYMLINK_NOFOLLOW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget\">fget</a>(<a class=\"id\" href=\"#dfd\">dfd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#utimes_common\">utimes_common</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>, <a class=\"id\" href=\"#times\">times</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#lookup_flags\">lookup_flags</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AT_SYMLINK_NOFOLLOW\">AT_SYMLINK_NOFOLLOW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lookup_flags\">lookup_flags</a> |= <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_at\">user_path_at</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#lookup_flags\">lookup_flags</a>, &amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#utimes_common\">utimes_common</a>(&amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#times\">times</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#utimensat\">utimensat</a>, int, <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#utimes\">utimes</a>, int, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#tstimes\">tstimes</a>[2];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#utimes\">utimes</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tstimes\">tstimes</a>, <a class=\"id\" href=\"#utimes\">utimes</a>, sizeof(<a class=\"id\" href=\"#tstimes\">tstimes</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Nothing to do, we must not even check the path.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tstimes\">tstimes</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == <a class=\"id\" href=\"#UTIME_OMIT\">UTIME_OMIT</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tstimes\">tstimes</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == <a class=\"id\" href=\"#UTIME_OMIT\">UTIME_OMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_utimes\">do_utimes</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#utimes\">utimes</a> ? <a class=\"id\" href=\"#tstimes\">tstimes</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#futimesat\">futimesat</a>, int, <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#utimes\">utimes</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#times\">times</a>[2];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#tstimes\">tstimes</a>[2];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#utimes\">utimes</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#times\">times</a>, <a class=\"id\" href=\"#utimes\">utimes</a>, sizeof(<a class=\"id\" href=\"#times\">times</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This test is needed to catch all invalid values.  If we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   would test only in do_utimes we would miss those invalid</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   values truncated by the multiplication with 1000.  Note</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   that we also catch UTIME_{NOW,OMIT} here which are only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   valid for utimensat.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_usec\">tv_usec</a> >= 1000000 || <a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_usec\">tv_usec</a> &lt; 0 ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_usec\">tv_usec</a> >= 1000000 || <a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_usec\">tv_usec</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tstimes\">tstimes</a>[0].<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tstimes\">tstimes</a>[0].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 1000 * <a class=\"id\" href=\"#times\">times</a>[0].<a class=\"id\" href=\"#tv_usec\">tv_usec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tstimes\">tstimes</a>[1].<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tstimes\">tstimes</a>[1].<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 1000 * <a class=\"id\" href=\"#times\">times</a>[1].<a class=\"id\" href=\"#tv_usec\">tv_usec</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_utimes\">do_utimes</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#utimes\">utimes</a> ? <a class=\"id\" href=\"#tstimes\">tstimes</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#utimes\">utimes</a>, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#utimes\">utimes</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_futimesat\">sys_futimesat</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#utimes\">utimes</a>);", 
"}", 
];
xr_frag_insert('l/05/f6fb95c5f6c8edd7e874628710fe52856ffd6d.xr', __xr_tmp);
