var __xr_tmp = [
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ide\">ide</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#ide_ata_error\">ide_ata_error</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) ||", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>) && (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_NOWERR\">IDE_DFLAG_NOWERR</a>) == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* other bits are useless when BUSY */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> |= <a class=\"id\" href=\"#ERROR_RESET\">ERROR_RESET</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* err has different meaning on cdrom and tape */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == <a class=\"id\" href=\"#ATA_ABORTED\">ATA_ABORTED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_LBA\">IDE_DFLAG_LBA</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* some newer drives don't support ATA_CMD_INIT_DEV_PARAMS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>) == <a class=\"id\" href=\"#ATA_CMD_INIT_DEV_PARAMS\">ATA_CMD_INIT_DEV_PARAMS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#err\">err</a> &amp; <a class=\"id\" href=\"#BAD_CRC\">BAD_CRC</a>) == <a class=\"id\" href=\"#BAD_CRC\">BAD_CRC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* UDMA crc error, just retry the operation */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#crc_count\">crc_count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#err\">err</a> &amp; (<a class=\"id\" href=\"#ATA_BBK\">ATA_BBK</a> | <a class=\"id\" href=\"#ATA_UNC\">ATA_UNC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* retries won't help these */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> = <a class=\"id\" href=\"#ERROR_MAX\">ERROR_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#err\">err</a> &amp; <a class=\"id\" href=\"#ATA_TRK0NF\">ATA_TRK0NF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* help it find track zero */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> |= <a class=\"id\" href=\"#ERROR_RECAL\">ERROR_RECAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>) && <a class=\"id\" href=\"#rq_data_dir\">rq_data_dir</a>(<a class=\"id\" href=\"#rq\">rq</a>) == <a class=\"id\" href=\"#READ\">READ</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host_flags\">host_flags</a> &amp; <a class=\"id\" href=\"#IDE_HFLAG_ERROR_STOPS_FIFO\">IDE_HFLAG_ERROR_STOPS_FIFO</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nsect\">nsect</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#mult_count\">mult_count</a> ? <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#mult_count\">mult_count</a> : 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_pad_transfer\">ide_pad_transfer</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#nsect\">nsect</a> * <a class=\"id\" href=\"#SECTOR_SIZE\">SECTOR_SIZE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> >= <a class=\"id\" href=\"#ERROR_MAX\">ERROR_MAX</a> || <a class=\"id\" href=\"#blk_noretry_request\">blk_noretry_request</a>(<a class=\"id\" href=\"#rq\">rq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_kill_rq\">ide_kill_rq</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>) &amp; (<a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a> | <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> |= <a class=\"id\" href=\"#ERROR_RESET\">ERROR_RESET</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> &amp; <a class=\"id\" href=\"#ERROR_RESET\">ERROR_RESET</a>) == <a class=\"id\" href=\"#ERROR_RESET\">ERROR_RESET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_do_reset\">ide_do_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> &amp; <a class=\"id\" href=\"#ERROR_RECAL\">ERROR_RECAL</a>) == <a class=\"id\" href=\"#ERROR_RECAL\">ERROR_RECAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#special_flags\">special_flags</a> |= <a class=\"id\" href=\"#IDE_SFLAG_RECALIBRATE\">IDE_SFLAG_RECALIBRATE</a>;", 
"", 
"<span class=\"ts\"/>++<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#ide_atapi_error\">ide_atapi_error</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>) ||", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>) && (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_NOWERR\">IDE_DFLAG_NOWERR</a>) == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* other bits are useless when BUSY */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> |= <a class=\"id\" href=\"#ERROR_RESET\">ERROR_RESET</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* add decoding error stuff */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>) &amp; (<a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a> | <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* force an abort */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#exec_command\">exec_command</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#ATA_CMD_IDLEIMMEDIATE\">ATA_CMD_IDLEIMMEDIATE</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> >= <a class=\"id\" href=\"#ERROR_MAX\">ERROR_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_kill_rq\">ide_kill_rq</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> &amp; <a class=\"id\" href=\"#ERROR_RESET\">ERROR_RESET</a>) == <a class=\"id\" href=\"#ERROR_RESET\">ERROR_RESET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_do_reset\">ide_do_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#__ide_error\">__ide_error</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#media\">media</a> == <a class=\"id\" href=\"#ide_disk\">ide_disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_ata_error\">ide_ata_error</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ide_atapi_error\">ide_atapi_error</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ide_error<span class=\"ts\"/>-<span class=\"ts\"/>handle an error on the IDE</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@drive: drive the error occurred on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@msg: message to report</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@stat: status bits</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ide_error() takes action based on the error returned by the drive.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For normal I/O that may well include retries. We deal with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>both new-style (taskfile) and old style command handling here.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>In the case of taskfile command handling there is work left to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>do</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#ide_error\">ide_error</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, const char *<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ide_dump_status\">ide_dump_status</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#stat\">stat</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* retry only \"normal\" I/O: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> != <a class=\"id\" href=\"#REQ_TYPE_FS\">REQ_TYPE_FS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_ATA_TASKFILE\">REQ_TYPE_ATA_TASKFILE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_cmd\">ide_cmd</a> *<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#special\">special</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_complete_cmd\">ide_complete_cmd</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#blk_pm_request\">blk_pm_request</a>(<a class=\"id\" href=\"#rq\">rq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_complete_pm_rq\">ide_complete_pm_rq</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_complete_rq\">ide_complete_rq</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#err\">err</a> ? -<a class=\"id\" href=\"#EIO\">EIO</a> : 0, <a class=\"id\" href=\"#blk_rq_bytes\">blk_rq_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ide_error\">__ide_error</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#stat\">stat</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ide_error\">ide_error</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ide_complete_drive_reset\">ide_complete_drive_reset</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#rq\">rq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a> && <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_type\">cmd_type</a> == <a class=\"id\" href=\"#REQ_TYPE_SPECIAL\">REQ_TYPE_SPECIAL</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] == <a class=\"id\" href=\"#REQ_DRIVE_RESET\">REQ_DRIVE_RESET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> <= 0 && <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#errors\">errors</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_complete_rq\">ide_complete_rq</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#err\">err</a> ? <a class=\"id\" href=\"#err\">err</a> : 0, <a class=\"id\" href=\"#blk_rq_bytes\">blk_rq_bytes</a>(<a class=\"id\" href=\"#rq\">rq</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* needed below */</span>", 
"static <a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#do_reset1\">do_reset1</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *, int);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * atapi_reset_pollfunc() gets invoked to poll the interface for completion</span>", 
"<span class=\"comment\"> * every 50ms during an atapi drive reset operation.  If the drive has not yet</span>", 
"<span class=\"comment\"> * responded, and we have not yet hit our maximum waiting time, then the timer</span>", 
"<span class=\"comment\"> * is restarted for another 50ms.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#atapi_reset_pollfunc\">atapi_reset_pollfunc</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_tp_ops\">ide_tp_ops</a> *<a class=\"id\" href=\"#tp_ops\">tp_ops</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#dev_select\">dev_select</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#OK_STAT\">OK_STAT</a>(<a class=\"id\" href=\"#stat\">stat</a>, 0, <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: ATAPI reset complete\\n\", <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#poll_timeout\">poll_timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_set_handler\">ide_set_handler</a>(<a class=\"id\" href=\"#drive\">drive</a>, &amp;<a class=\"id\" href=\"#atapi_reset_pollfunc\">atapi_reset_pollfunc</a>, <a class=\"id\" href=\"#HZ\">HZ</a>/20);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* continue polling */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_started\">ide_started</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* end of polling */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#polling\">polling</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: ATAPI reset timed-out, status=0x%02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#stat\">stat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* do it the old fashioned way */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#do_reset1\">do_reset1</a>(<a class=\"id\" href=\"#drive\">drive</a>, 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* done polling */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#polling\">polling</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_complete_drive_reset\">ide_complete_drive_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ide_reset_report_error\">ide_reset_report_error</a>(<a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>static const char *<a class=\"id\" href=\"#err_master_vals\">err_master_vals</a>[] =", 
"<span class=\"ts\"/><span class=\"ts\"/>{ <a class=\"id\" href=\"#NULL\">NULL</a>, \"passed\", \"formatter device error\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"sector buffer error\", \"ECC circuitry error\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"controlling MPU error\" };", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#err_master\">err_master</a> = <a class=\"id\" href=\"#err\">err</a> &amp; 0x7f;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: reset: master: \", <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err_master\">err_master</a> && <a class=\"id\" href=\"#err_master\">err_master</a> &lt; 6)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"%s\", <a class=\"id\" href=\"#err_master_vals\">err_master_vals</a>[<a class=\"id\" href=\"#err_master\">err_master</a>]);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"error (0x%02x?)\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &amp; 0x80)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"; slave: failed\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\n\");", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * reset_pollfunc() gets invoked to poll the interface for completion every 50ms</span>", 
"<span class=\"comment\"> * during an ide reset operation. If the drives have not yet responded,</span>", 
"<span class=\"comment\"> * and we have not yet hit our maximum waiting time, then the timer is restarted</span>", 
"<span class=\"comment\"> * for another 50ms.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#reset_pollfunc\">reset_pollfunc</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_port_ops\">ide_port_ops</a> *<a class=\"id\" href=\"#port_ops\">port_ops</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#port_ops\">port_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port_ops\">port_ops</a> && <a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#reset_poll\">reset_poll</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#reset_poll\">reset_poll</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: host reset_poll failure for %s.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#OK_STAT\">OK_STAT</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, 0, <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#poll_timeout\">poll_timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_set_handler\">ide_set_handler</a>(<a class=\"id\" href=\"#drive\">drive</a>, &amp;<a class=\"id\" href=\"#reset_pollfunc\">reset_pollfunc</a>, <a class=\"id\" href=\"#HZ\">HZ</a>/20);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* continue polling */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_started\">ide_started</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: reset timed-out, status=0x%02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#failures\">failures</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>} else  {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ide_read_error\">ide_read_error</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: reset: success\\n\", <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#failures\">failures</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_reset_report_error\">ide_reset_report_error</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#failures\">failures</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#polling\">polling</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* done polling */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_complete_drive_reset\">ide_complete_drive_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ide_disk_pre_reset\">ide_disk_pre_reset</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#legacy\">legacy</a> = (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#id\">id</a>[<a class=\"id\" href=\"#ATA_ID_CFS_ENABLE_2\">ATA_ID_CFS_ENABLE_2</a>] &amp; 0x0400) ? 0 : 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#special_flags\">special_flags</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#legacy\">legacy</a> ? (<a class=\"id\" href=\"#IDE_SFLAG_SET_GEOMETRY\">IDE_SFLAG_SET_GEOMETRY</a> | <a class=\"id\" href=\"#IDE_SFLAG_RECALIBRATE\">IDE_SFLAG_RECALIBRATE</a>) : 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#mult_count\">mult_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &= ~<a class=\"id\" href=\"#IDE_DFLAG_PARKED\">IDE_DFLAG_PARKED</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_KEEP_SETTINGS\">IDE_DFLAG_KEEP_SETTINGS</a>) == 0 &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_USING_DMA\">IDE_DFLAG_USING_DMA</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#mult_req\">mult_req</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#mult_req\">mult_req</a> != <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#mult_count\">mult_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#special_flags\">special_flags</a> |= <a class=\"id\" href=\"#IDE_SFLAG_SET_MULTMODE\">IDE_SFLAG_SET_MULTMODE</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pre_reset\">pre_reset</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_port_ops\">ide_port_ops</a> *<a class=\"id\" href=\"#port_ops\">port_ops</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#port_ops\">port_ops</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#media\">media</a> == <a class=\"id\" href=\"#ide_disk\">ide_disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_disk_pre_reset\">ide_disk_pre_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_POST_RESET\">IDE_DFLAG_POST_RESET</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_USING_DMA\">IDE_DFLAG_USING_DMA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#crc_count\">crc_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_check_dma_crc\">ide_check_dma_crc</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_dma_off\">ide_dma_off</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_KEEP_SETTINGS\">IDE_DFLAG_KEEP_SETTINGS</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_USING_DMA\">IDE_DFLAG_USING_DMA</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &= ~<a class=\"id\" href=\"#IDE_DFLAG_UNMASK\">IDE_DFLAG_UNMASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#io_32bit\">io_32bit</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port_ops\">port_ops</a> && <a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#pre_reset\">pre_reset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#pre_reset\">pre_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#current_speed\">current_speed</a> != 0xff)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#desired_speed\">desired_speed</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#current_speed\">current_speed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#current_speed\">current_speed</a> = 0xff;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * do_reset1() attempts to recover a confused drive by resetting it.</span>", 
"<span class=\"comment\"> * Unfortunately, resetting a disk drive actually resets all devices on</span>", 
"<span class=\"comment\"> * the same interface, so it can really be thought of as resetting the</span>", 
"<span class=\"comment\"> * interface rather than resetting the drive.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ATAPI devices have their own reset mechanism which allows them to be</span>", 
"<span class=\"comment\"> * individually reset without clobbering other devices on the same interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unfortunately, the IDE interface does not generate an interrupt to let</span>", 
"<span class=\"comment\"> * us know when the reset operation has finished, so we must poll for this.</span>", 
"<span class=\"comment\"> * Equally poor, though, is the fact that this may a very long time to complete,</span>", 
"<span class=\"comment\"> * (up to 30 seconds worstcase).  So, instead of busy-waiting here for it,</span>", 
"<span class=\"comment\"> * we set a timer to poll at 50ms intervals.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#do_reset1\">do_reset1</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, int <a class=\"id\" href=\"#do_not_try_atapi\">do_not_try_atapi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_io_ports\">ide_io_ports</a> *<a class=\"id\" href=\"#io_ports\">io_ports</a> = &amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#io_ports\">io_ports</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_tp_ops\">ide_tp_ops</a> *<a class=\"id\" href=\"#tp_ops\">tp_ops</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ide_port_ops\">ide_port_ops</a> *<a class=\"id\" href=\"#port_ops\">port_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#tdrive\">tdrive</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We must not reset with running handlers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#handler\">handler</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* For an ATAPI device, first try an ATAPI SRST. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#media\">media</a> != <a class=\"id\" href=\"#ide_disk\">ide_disk</a> && !<a class=\"id\" href=\"#do_not_try_atapi\">do_not_try_atapi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pre_reset\">pre_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#dev_select\">dev_select</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(20);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#exec_command\">exec_command</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#ATA_CMD_DEV_RESET\">ATA_CMD_DEV_RESET</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndelay\">ndelay</a>(400);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#poll_timeout\">poll_timeout</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#WAIT_WORSTCASE\">WAIT_WORSTCASE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#polling\">polling</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ide_set_handler\">__ide_set_handler</a>(<a class=\"id\" href=\"#drive\">drive</a>, &amp;<a class=\"id\" href=\"#atapi_reset_pollfunc\">atapi_reset_pollfunc</a>, <a class=\"id\" href=\"#HZ\">HZ</a>/20);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_started\">ide_started</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We must not disturb devices in the IDE_DFLAG_PARKED state. */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(&amp;<a class=\"id\" href=\"#ide_park_wq\">ide_park_wq</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_port_for_each_present_dev\">ide_port_for_each_present_dev</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#tdrive\">tdrive</a>, <a class=\"id\" href=\"#hwif\">hwif</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tdrive\">tdrive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_PARKED\">IDE_DFLAG_PARKED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#tdrive\">tdrive</a>-><a class=\"id\" href=\"#sleep\">sleep</a>, <a class=\"id\" href=\"#timeout\">timeout</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#tdrive\">tdrive</a>-><a class=\"id\" href=\"#sleep\">sleep</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before_eq\">time_before_eq</a>(<a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#now\">now</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#schedule_timeout_uninterruptible\">schedule_timeout_uninterruptible</a>(<a class=\"id\" href=\"#timeout\">timeout</a> - <a class=\"id\" href=\"#now\">now</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(&amp;<a class=\"id\" href=\"#ide_park_wq\">ide_park_wq</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First, reset any device state data we were maintaining</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for any of the drives on this interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_port_for_each_dev\">ide_port_for_each_dev</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#tdrive\">tdrive</a>, <a class=\"id\" href=\"#hwif\">hwif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pre_reset\">pre_reset</a>(<a class=\"id\" href=\"#tdrive\">tdrive</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#io_ports\">io_ports</a>-><a class=\"id\" href=\"#ctl_addr\">ctl_addr</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_complete_drive_reset\">ide_complete_drive_reset</a>(<a class=\"id\" href=\"#drive\">drive</a>, -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that we also set nIEN while resetting the device,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to mask unwanted interrupts from the interface during the reset.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * However, due to the design of PC hardware, this will cause an</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * immediate interrupt due to the edge transition it produces.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This single interrupt gives us a \"fast poll\" for drives that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * recover from reset very quickly, saving us the first 50ms wait time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* set SRST and nIEN */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#write_devctl\">write_devctl</a>(<a class=\"id\" href=\"#hwif\">hwif</a>, <a class=\"id\" href=\"#ATA_SRST\">ATA_SRST</a> | <a class=\"id\" href=\"#ATA_NIEN\">ATA_NIEN</a> | <a class=\"id\" href=\"#ATA_DEVCTL_OBS\">ATA_DEVCTL_OBS</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* more than enough time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(10);", 
"<span class=\"ts\"/><span class=\"comment\">/* clear SRST, leave nIEN (unless device is on the quirk list) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#write_devctl\">write_devctl</a>(<a class=\"id\" href=\"#hwif\">hwif</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_NIEN_QUIRK\">IDE_DFLAG_NIEN_QUIRK</a>) ? 0 : <a class=\"id\" href=\"#ATA_NIEN\">ATA_NIEN</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ATA_DEVCTL_OBS\">ATA_DEVCTL_OBS</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* more than enough time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#poll_timeout\">poll_timeout</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#WAIT_WORSTCASE\">WAIT_WORSTCASE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#polling\">polling</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ide_set_handler\">__ide_set_handler</a>(<a class=\"id\" href=\"#drive\">drive</a>, &amp;<a class=\"id\" href=\"#reset_pollfunc\">reset_pollfunc</a>, <a class=\"id\" href=\"#HZ\">HZ</a>/20);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some weird controller like resetting themselves to a strange</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * state when the disks are reset this way. At least, the Winbond</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 553 documentation says that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#port_ops\">port_ops</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#port_ops\">port_ops</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port_ops\">port_ops</a> && <a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#resetproc\">resetproc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port_ops\">port_ops</a>-><a class=\"id\" href=\"#resetproc\">resetproc</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ide_started\">ide_started</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ide_do_reset() is the entry point to the drive/interface reset code.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a> <a class=\"id\" href=\"#ide_do_reset\">ide_do_reset</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_reset1\">do_reset1</a>(<a class=\"id\" href=\"#drive\">drive</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ide_do_reset\">ide_do_reset</a>);", 
];
xr_frag_insert('l/06/2504bc04c37682dce626eba207c3dc5b9bf06d.xr', __xr_tmp);
