var __xr_tmp = [
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_acpi_stm\">ata_acpi_stm</a>(const struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ata_acpi_gtm\">ata_acpi_gtm</a> *<a class=\"id\" href=\"#stm\">stm</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_acpi_gtm\">ata_acpi_gtm</a>(const struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ata_acpi_gtm\">ata_acpi_gtm</a> *<a class=\"id\" href=\"#stm\">stm</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_acpi_gtm_xfermask\">ata_acpi_gtm_xfermask</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_acpi_gtm\">ata_acpi_gtm</a> *<a class=\"id\" href=\"#gtm\">gtm</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_acpi_cbl_80wire\">ata_acpi_cbl_80wire</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#ata_acpi_gtm\">ata_acpi_gtm</a> *<a class=\"id\" href=\"#gtm\">gtm</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EH - drivers/ata/libata-eh.c</span>", 
"<span class=\"comment\"> */</span>", 
"extern void <a class=\"id\" href=\"#ata_port_schedule_eh\">ata_port_schedule_eh</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#ata_link_abort\">ata_link_abort</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>);", 
"extern int <a class=\"id\" href=\"#ata_port_abort\">ata_port_abort</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#ata_port_freeze\">ata_port_freeze</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#sata_async_notification\">sata_async_notification</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"extern void <a class=\"id\" href=\"#ata_eh_freeze_port\">ata_eh_freeze_port</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_eh_thaw_port\">ata_eh_thaw_port</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"extern void <a class=\"id\" href=\"#ata_eh_qc_complete\">ata_eh_qc_complete</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#ata_eh_qc_retry\">ata_eh_qc_retry</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#ata_eh_analyze_ncq_error\">ata_eh_analyze_ncq_error</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>);", 
"", 
"extern void <a class=\"id\" href=\"#ata_do_eh\">ata_do_eh</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ata_prereset_fn_t\">ata_prereset_fn_t</a> <a class=\"id\" href=\"#prereset\">prereset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ata_reset_fn_t\">ata_reset_fn_t</a> <a class=\"id\" href=\"#softreset\">softreset</a>, <a class=\"id\" href=\"#ata_reset_fn_t\">ata_reset_fn_t</a> <a class=\"id\" href=\"#hardreset\">hardreset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ata_postreset_fn_t\">ata_postreset_fn_t</a> <a class=\"id\" href=\"#postreset\">postreset</a>);", 
"extern void <a class=\"id\" href=\"#ata_std_error_handler\">ata_std_error_handler</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Base operations to inherit from and initializers for sht</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Operations</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * base  : Common to all libata drivers.</span>", 
"<span class=\"comment\"> * sata  : SATA controllers w/ native interface.</span>", 
"<span class=\"comment\"> * pmp   : SATA controllers w/ PMP support.</span>", 
"<span class=\"comment\"> * sff   : SFF ATA controllers w/o BMDMA support.</span>", 
"<span class=\"comment\"> * bmdma : SFF ATA controllers w/ BMDMA support.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * sht initializers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * BASE  : Common to all libata drivers.  The user must set</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   sg_tablesize and dma_boundary.</span>", 
"<span class=\"comment\"> * PIO   : SFF ATA controllers w/ only PIO support.</span>", 
"<span class=\"comment\"> * BMDMA : SFF ATA controllers w/ BMDMA support.  sg_tablesize and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   dma_boundary are set to BMDMA limits.</span>", 
"<span class=\"comment\"> * NCQ   : SATA controllers supporting NCQ.  The user must set</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   sg_tablesize, dma_boundary and can_queue.</span>", 
"<span class=\"comment\"> */</span>", 
"extern const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ata_base_port_ops\">ata_base_port_ops</a>;", 
"extern const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#sata_port_ops\">sata_port_ops</a>;", 
"extern struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#ata_common_sdev_attrs\">ata_common_sdev_attrs</a>[];", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATA_BASE_SHT\">ATA_BASE_SHT</a>(<a class=\"id\" href=\"#drv_name\">drv_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#drv_name\">drv_name</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_scsi_ioctl\">ata_scsi_ioctl</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queuecommand\">queuecommand</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_scsi_queuecmd\">ata_scsi_queuecmd</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#can_queue\">can_queue</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_DEF_QUEUE\">ATA_DEF_QUEUE</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#this_id\">this_id</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_SHT_THIS_ID\">ATA_SHT_THIS_ID</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cmd_per_lun\">cmd_per_lun</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_SHT_CMD_PER_LUN\">ATA_SHT_CMD_PER_LUN</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#emulated\">emulated</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_SHT_EMULATED\">ATA_SHT_EMULATED</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#use_clustering\">use_clustering</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_SHT_USE_CLUSTERING\">ATA_SHT_USE_CLUSTERING</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#proc_name\">proc_name</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#drv_name\">drv_name</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#slave_configure\">slave_configure</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_scsi_slave_config\">ata_scsi_slave_config</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#slave_destroy\">slave_destroy</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_scsi_slave_destroy\">ata_scsi_slave_destroy</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bios_param\">bios_param</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_std_bios_param\">ata_std_bios_param</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlock_native_capacity\">unlock_native_capacity</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_scsi_unlock_native_capacity\">ata_scsi_unlock_native_capacity</a>, \\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sdev_attrs\">sdev_attrs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_common_sdev_attrs\">ata_common_sdev_attrs</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATA_NCQ_SHT\">ATA_NCQ_SHT</a>(<a class=\"id\" href=\"#drv_name\">drv_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_BASE_SHT\">ATA_BASE_SHT</a>(<a class=\"id\" href=\"#drv_name\">drv_name</a>),<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#change_queue_depth\">change_queue_depth</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_scsi_change_queue_depth\">ata_scsi_change_queue_depth</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * PMP helpers</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SATA_PMP\">CONFIG_SATA_PMP</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sata_pmp_supported\">sata_pmp_supported</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_PMP\">ATA_FLAG_PMP</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sata_pmp_attached\">sata_pmp_attached</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#nr_pmp_links\">nr_pmp_links</a> != 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(const struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#link\">link</a> == &amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a> || <a class=\"id\" href=\"#link\">link</a> == <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>;", 
"}", 
"#else <span class=\"comment\">/* CONFIG_SATA_PMP */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sata_pmp_supported\">sata_pmp_supported</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sata_pmp_attached\">sata_pmp_attached</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(const struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SATA_PMP */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#sata_srst_pmp\">sata_srst_pmp</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_pmp_supported\">sata_pmp_supported</a>(<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>) && <a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#SATA_PMP_CTRL_PORT\">SATA_PMP_CTRL_PORT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pmp\">pmp</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * printk helpers</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#lv\">lv</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%sata%u: \"<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#lv\">lv</a>, (<a class=\"id\" href=\"#ap\">ap</a>)-><a class=\"id\" href=\"#print_id\">print_id</a> , ##<a class=\"id\" href=\"#args\">args</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#lv\">lv</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...) do { \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sata_pmp_attached\">sata_pmp_attached</a>((<a class=\"id\" href=\"#link\">link</a>)-><a class=\"id\" href=\"#ap\">ap</a>) || (<a class=\"id\" href=\"#link\">link</a>)-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#slave_link\">slave_link</a>)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%sata%u.%02u: \"<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#lv\">lv</a>, (<a class=\"id\" href=\"#link\">link</a>)-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#link\">link</a>)-><a class=\"id\" href=\"#pmp\">pmp</a> , ##<a class=\"id\" href=\"#args\">args</a>); \\", 
"<span class=\"ts\"/>else \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%sata%u: \"<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#lv\">lv</a>, (<a class=\"id\" href=\"#link\">link</a>)-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a> , ##<a class=\"id\" href=\"#args\">args</a>); \\", 
"<span class=\"ts\"/>} while(0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#lv\">lv</a>, <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>...) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%sata%u.%02u: \"<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#lv\">lv</a>, (<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>       (<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pmp\">pmp</a> + (<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#devno\">devno</a> , ##<a class=\"id\" href=\"#args\">args</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ata_eh_info helpers</span>", 
"<span class=\"comment\"> */</span>", 
"extern void <a class=\"id\" href=\"#__ata_ehi_push_desc\">__ata_ehi_push_desc</a>(struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 2, 3)));", 
"extern void <a class=\"id\" href=\"#ata_ehi_push_desc\">ata_ehi_push_desc</a>(struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 2, 3)));", 
"extern void <a class=\"id\" href=\"#ata_ehi_clear_desc\">ata_ehi_clear_desc</a>(struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ata_ehi_hotplugged\">ata_ehi_hotplugged</a>(struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#probe_mask\">probe_mask</a> |= (1 << <a class=\"id\" href=\"#ATA_MAX_DEVICES\">ATA_MAX_DEVICES</a>) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_EHI_HOTPLUGGED\">ATA_EHI_HOTPLUGGED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#action\">action</a> |= <a class=\"id\" href=\"#ATA_EH_RESET\">ATA_EH_RESET</a> | <a class=\"id\" href=\"#ATA_EH_ENABLE_LINK\">ATA_EH_ENABLE_LINK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> |= <a class=\"id\" href=\"#AC_ERR_ATA_BUS\">AC_ERR_ATA_BUS</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * port description helpers</span>", 
"<span class=\"comment\"> */</span>", 
"extern void <a class=\"id\" href=\"#ata_port_desc\">ata_port_desc</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 2, 3)));", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"extern void <a class=\"id\" href=\"#ata_port_pbar_desc\">ata_port_pbar_desc</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, int <a class=\"id\" href=\"#bar\">bar</a>, <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#name\">name</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_tag_valid\">ata_tag_valid</a>(unsigned int <a class=\"id\" href=\"#tag\">tag</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#tag\">tag</a> &lt; <a class=\"id\" href=\"#ATA_MAX_QUEUE\">ATA_MAX_QUEUE</a>) ? 1 : 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_tag_internal\">ata_tag_internal</a>(unsigned int <a class=\"id\" href=\"#tag\">tag</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tag\">tag</a> == <a class=\"id\" href=\"#ATA_TAG_INTERNAL\">ATA_TAG_INTERNAL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * device helpers</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_class_enabled\">ata_class_enabled</a>(unsigned int <a class=\"id\" href=\"#class\">class</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATA\">ATA_DEV_ATA</a> || <a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATAPI\">ATA_DEV_ATAPI</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_PMP\">ATA_DEV_PMP</a> || <a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_SEMB\">ATA_DEV_SEMB</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_class_disabled\">ata_class_disabled</a>(unsigned int <a class=\"id\" href=\"#class\">class</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATA_UNSUP\">ATA_DEV_ATA_UNSUP</a> || <a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATAPI_UNSUP\">ATA_DEV_ATAPI_UNSUP</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_PMP_UNSUP\">ATA_DEV_PMP_UNSUP</a> || <a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_SEMB_UNSUP\">ATA_DEV_SEMB_UNSUP</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_class_absent\">ata_class_absent</a>(unsigned int <a class=\"id\" href=\"#class\">class</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#ata_class_enabled\">ata_class_enabled</a>(<a class=\"id\" href=\"#class\">class</a>) && !<a class=\"id\" href=\"#ata_class_disabled\">ata_class_disabled</a>(<a class=\"id\" href=\"#class\">class</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_dev_enabled\">ata_dev_enabled</a>(const struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_class_enabled\">ata_class_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_dev_disabled\">ata_dev_disabled</a>(const struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_class_disabled\">ata_class_disabled</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_dev_absent\">ata_dev_absent</a>(const struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_class_absent\">ata_class_absent</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * link helpers</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_link_max_devices\">ata_link_max_devices</a>(const struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#link\">link</a>) && <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_SLAVE_POSS\">ATA_FLAG_SLAVE_POSS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 2;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_link_active\">ata_link_active</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_tag_valid\">ata_tag_valid</a>(<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#active_tag\">active_tag</a>) || <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sactive\">sactive</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Iterators</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ATA_LITER_* constants are used to select link iteration mode and</span>", 
"<span class=\"comment\"> * ATA_DITER_* device iteration mode.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For a custom iteration directly using ata_{link|dev}_next(), if</span>", 
"<span class=\"comment\"> * @link or @dev, respectively, is NULL, the first element is</span>", 
"<span class=\"comment\"> * returned.  @dev and @link can be any valid device or link and the</span>", 
"<span class=\"comment\"> * next element according to the iteration mode will be returned.</span>", 
"<span class=\"comment\"> * After the last element, NULL is returned.</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#ata_link_iter_mode\">ata_link_iter_mode</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_LITER_EDGE\">ATA_LITER_EDGE</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if present, PMP links only; otherwise,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * host link.  no slave link */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_LITER_HOST_FIRST\">ATA_LITER_HOST_FIRST</a>,<span class=\"ts\"/><span class=\"comment\">/* host link followed by PMP or slave links */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_LITER_PMP_FIRST\">ATA_LITER_PMP_FIRST</a>,<span class=\"ts\"/><span class=\"comment\">/* PMP links followed by host link,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * slave link still comes after host link */</span>", 
"};", 
"", 
"enum <a class=\"id\" href=\"#ata_dev_iter_mode\">ata_dev_iter_mode</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_DITER_ENABLED\">ATA_DITER_ENABLED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_DITER_ENABLED_REVERSE\">ATA_DITER_ENABLED_REVERSE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_DITER_ALL\">ATA_DITER_ALL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_DITER_ALL_REVERSE\">ATA_DITER_ALL_REVERSE</a>,", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#ata_link_next\">ata_link_next</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      enum <a class=\"id\" href=\"#ata_link_iter_mode\">ata_link_iter_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#ata_dev_next\">ata_dev_next</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       enum <a class=\"id\" href=\"#ata_dev_iter_mode\">ata_dev_iter_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Shortcut notation for iterations</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ata_for_each_link() iterates over each link of @ap according to</span>", 
"<span class=\"comment\"> * @mode.  @link points to the current link in the loop.  @link is</span>", 
"<span class=\"comment\"> * NULL after loop termination.  ata_for_each_dev() works the same way</span>", 
"<span class=\"comment\"> * except that it iterates over each device of @link.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that the mode prefixes ATA_{L|D}ITER_ shouldn't need to be</span>", 
"<span class=\"comment\"> * specified when using the following shorthand notations.  Only the</span>", 
"<span class=\"comment\"> * mode itself (EDGE, HOST_FIRST, ENABLED, etc...) should be</span>", 
"<span class=\"comment\"> * specified.  This not only increases brevity but also makes it</span>", 
"<span class=\"comment\"> * impossible to use ATA_LITER_* for device iteration or vice-versa.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ata_for_each_link\">ata_for_each_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#mode\">mode</a>) \\", 
"<span class=\"ts\"/>for ((<a class=\"id\" href=\"#link\">link</a>) = <a class=\"id\" href=\"#ata_link_next\">ata_link_next</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, (<a class=\"id\" href=\"#ap\">ap</a>), <a class=\"id\" href=\"#ATA_LITER_\">ATA_LITER_</a>##<a class=\"id\" href=\"#mode\">mode</a>); (<a class=\"id\" href=\"#link\">link</a>); \\", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#link\">link</a>) = <a class=\"id\" href=\"#ata_link_next\">ata_link_next</a>((<a class=\"id\" href=\"#link\">link</a>), (<a class=\"id\" href=\"#ap\">ap</a>), <a class=\"id\" href=\"#ATA_LITER_\">ATA_LITER_</a>##<a class=\"id\" href=\"#mode\">mode</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#mode\">mode</a>) \\", 
"<span class=\"ts\"/>for ((<a class=\"id\" href=\"#dev\">dev</a>) = <a class=\"id\" href=\"#ata_dev_next\">ata_dev_next</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, (<a class=\"id\" href=\"#link\">link</a>), <a class=\"id\" href=\"#ATA_DITER_\">ATA_DITER_</a>##<a class=\"id\" href=\"#mode\">mode</a>); (<a class=\"id\" href=\"#dev\">dev</a>); \\", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#dev\">dev</a>) = <a class=\"id\" href=\"#ata_dev_next\">ata_dev_next</a>((<a class=\"id\" href=\"#dev\">dev</a>), (<a class=\"id\" href=\"#link\">link</a>), <a class=\"id\" href=\"#ATA_DITER_\">ATA_DITER_</a>##<a class=\"id\" href=\"#mode\">mode</a>))", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_ncq_enabled - Test whether NCQ is enabled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: ATA device to test for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 if NCQ is enabled for @dev, 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_ncq_enabled\">ata_ncq_enabled</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#ATA_DFLAG_PIO\">ATA_DFLAG_PIO</a> | <a class=\"id\" href=\"#ATA_DFLAG_NCQ_OFF\">ATA_DFLAG_NCQ_OFF</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ATA_DFLAG_NCQ\">ATA_DFLAG_NCQ</a>)) == <a class=\"id\" href=\"#ATA_DFLAG_NCQ\">ATA_DFLAG_NCQ</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ata_qc_set_polling\">ata_qc_set_polling</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#ctl\">ctl</a> |= <a class=\"id\" href=\"#ATA_NIEN\">ATA_NIEN</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#__ata_qc_from_tag\">__ata_qc_from_tag</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#tag\">tag</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ata_tag_valid\">ata_tag_valid</a>(<a class=\"id\" href=\"#tag\">tag</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#qcmd\">qcmd</a>[<a class=\"id\" href=\"#tag\">tag</a>];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#ata_qc_from_tag\">ata_qc_from_tag</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#tag\">tag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a> = <a class=\"id\" href=\"#__ata_qc_from_tag\">__ata_qc_from_tag</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#tag\">tag</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#qc\">qc</a>) || !<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#error_handler\">error_handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#qc\">qc</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#ATA_QCFLAG_ACTIVE\">ATA_QCFLAG_ACTIVE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ATA_QCFLAG_FAILED\">ATA_QCFLAG_FAILED</a>)) == <a class=\"id\" href=\"#ATA_QCFLAG_ACTIVE\">ATA_QCFLAG_ACTIVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#qc\">qc</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ata_qc_raw_nbytes\">ata_qc_raw_nbytes</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a> - <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#extrabytes\">extrabytes</a>, <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ata_tf_init\">ata_tf_init</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#tf\">tf</a>, 0, sizeof(*<a class=\"id\" href=\"#tf\">tf</a>));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ATA_SFF\">CONFIG_ATA_SFF</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ctl\">ctl</a>;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#ctl\">ctl</a> = <a class=\"id\" href=\"#ATA_DEVCTL_OBS\">ATA_DEVCTL_OBS</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#ATA_DEVICE_OBS\">ATA_DEVICE_OBS</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>-><a class=\"id\" href=\"#device\">device</a> = <a class=\"id\" href=\"#ATA_DEVICE_OBS\">ATA_DEVICE_OBS</a> | <a class=\"id\" href=\"#ATA_DEV1\">ATA_DEV1</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ata_qc_reinit\">ata_qc_reinit</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dma_dir\">dma_dir</a> = <a class=\"id\" href=\"#DMA_NONE\">DMA_NONE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg\">cursg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#cursg_ofs\">cursg_ofs</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#extrabytes\">extrabytes</a> = <a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#curbytes\">curbytes</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#n_elem\">n_elem</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#err_mask\">err_mask</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#sect_size\">sect_size</a> = <a class=\"id\" href=\"#ATA_SECT_SIZE\">ATA_SECT_SIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_tf_init\">ata_tf_init</a>(<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#tf\">tf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* init result_tf such that it indicates normal completion */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#result_tf\">result_tf</a>.<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#ATA_DRDY\">ATA_DRDY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qc\">qc</a>-><a class=\"id\" href=\"#result_tf\">result_tf</a>.<a class=\"id\" href=\"#feature\">feature</a> = 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_try_flush_cache\">ata_try_flush_cache</a>(const struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_id_wcache_enabled\">ata_id_wcache_enabled</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>) ||", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#ata_id_has_flush\">ata_id_has_flush</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>) ||", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#ata_id_has_flush_ext\">ata_id_has_flush_ext</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#ac_err_mask\">ac_err_mask</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a> | <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AC_ERR_HSM\">AC_ERR_HSM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_ERR\">ATA_ERR</a> | <a class=\"id\" href=\"#ATA_DF\">ATA_DF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AC_ERR_DEV\">AC_ERR_DEV</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#__ac_err_mask\">__ac_err_mask</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#ac_err_mask\">ac_err_mask</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AC_ERR_OTHER\">AC_ERR_OTHER</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ata_shost_to_port\">ata_shost_to_port</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>return *(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> **)&amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#hostdata\">hostdata</a>[0];", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_check_ready\">ata_check_ready</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 0xff indicates either no device or device not ready */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == 0xff)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#ata_deadline\">ata_deadline</a>(unsigned long <a class=\"id\" href=\"#from_jiffies\">from_jiffies</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#timeout_msecs\">timeout_msecs</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#from_jiffies\">from_jiffies</a> + <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#timeout_msecs\">timeout_msecs</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Don't open code these in drivers as there are traps. Firstly the range may</span>", 
"<span class=\"comment\">   change in future hardware and specs, secondly 0xFF means 'no DMA' but is</span>", 
"<span class=\"comment\">   &gt; UDMA_0. Dyma ddreigiau */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_using_mwdma\">ata_using_mwdma</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> >= <a class=\"id\" href=\"#XFER_MW_DMA_0\">XFER_MW_DMA_0</a> && <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> <= <a class=\"id\" href=\"#XFER_MW_DMA_4\">XFER_MW_DMA_4</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_using_udma\">ata_using_udma</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> >= <a class=\"id\" href=\"#XFER_UDMA_0\">XFER_UDMA_0</a> && <a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> <= <a class=\"id\" href=\"#XFER_UDMA_7\">XFER_UDMA_7</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ata_dma_enabled\">ata_dma_enabled</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#adev\">adev</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#adev\">adev</a>-><a class=\"id\" href=\"#dma_mode\">dma_mode</a> == 0xFF ? 0 : 1);", 
"}", 
"", 
"<span class=\"comment\">/**************************************************************************</span>", 
"<span class=\"comment\"> * PMP - drivers/ata/libata-pmp.c</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SATA_PMP\">CONFIG_SATA_PMP</a>", 
"", 
"extern const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#sata_pmp_port_ops\">sata_pmp_port_ops</a>;", 
"", 
"extern int <a class=\"id\" href=\"#sata_pmp_qc_defer_cmd_switch\">sata_pmp_qc_defer_cmd_switch</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#sata_pmp_error_handler\">sata_pmp_error_handler</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"#else <span class=\"comment\">/* CONFIG_SATA_PMP */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sata_pmp_port_ops\">sata_pmp_port_ops</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sata_port_ops\">sata_port_ops</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sata_pmp_qc_defer_cmd_switch\">sata_pmp_qc_defer_cmd_switch</a><span class=\"ts\"/><a class=\"id\" href=\"#ata_std_qc_defer\">ata_std_qc_defer</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sata_pmp_error_handler\">sata_pmp_error_handler</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_std_error_handler\">ata_std_error_handler</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SATA_PMP */</span>", 
"", 
"", 
"<span class=\"comment\">/**************************************************************************</span>", 
"<span class=\"comment\"> * SFF - drivers/ata/libata-sff.c</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ATA_SFF\">CONFIG_ATA_SFF</a>", 
"", 
"extern const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ata_sff_port_ops\">ata_sff_port_ops</a>;", 
"extern const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ata_bmdma32_port_ops\">ata_bmdma32_port_ops</a>;", 
"", 
"<span class=\"comment\">/* PIO only, sg_tablesize and dma_boundary limits can be removed */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATA_PIO_SHT\">ATA_PIO_SHT</a>(<a class=\"id\" href=\"#drv_name\">drv_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_BASE_SHT\">ATA_BASE_SHT</a>(<a class=\"id\" href=\"#drv_name\">drv_name</a>),<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#LIBATA_MAX_PRD\">LIBATA_MAX_PRD</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dma_boundary\">dma_boundary</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_DMA_BOUNDARY\">ATA_DMA_BOUNDARY</a>", 
"", 
"extern void <a class=\"id\" href=\"#ata_sff_dev_select\">ata_sff_dev_select</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, unsigned int <a class=\"id\" href=\"#device\">device</a>);", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_sff_check_status\">ata_sff_check_status</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_pause\">ata_sff_pause</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_dma_pause\">ata_sff_dma_pause</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#ata_sff_busy_sleep\">ata_sff_busy_sleep</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#timeout_pat\">timeout_pat</a>, unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"extern int <a class=\"id\" href=\"#ata_sff_wait_ready\">ata_sff_wait_ready</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_tf_load\">ata_sff_tf_load</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, const struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_tf_read\">ata_sff_tf_read</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_exec_command\">ata_sff_exec_command</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> *<a class=\"id\" href=\"#tf\">tf</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_sff_data_xfer\">ata_sff_data_xfer</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#buflen\">buflen</a>, int <a class=\"id\" href=\"#rw\">rw</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_sff_data_xfer32\">ata_sff_data_xfer32</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#buflen\">buflen</a>, int <a class=\"id\" href=\"#rw\">rw</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_sff_data_xfer_noirq\">ata_sff_data_xfer_noirq</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, unsigned int <a class=\"id\" href=\"#buflen\">buflen</a>, int <a class=\"id\" href=\"#rw\">rw</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_irq_on\">ata_sff_irq_on</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_irq_clear\">ata_sff_irq_clear</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#ata_sff_hsm_move\">ata_sff_hsm_move</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>, int <a class=\"id\" href=\"#in_wq\">in_wq</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_queue_pio_task\">ata_sff_queue_pio_task</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#delay\">delay</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_sff_qc_issue\">ata_sff_qc_issue</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ata_sff_qc_fill_rtf\">ata_sff_qc_fill_rtf</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_sff_port_intr\">ata_sff_port_intr</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#ata_sff_interrupt\">ata_sff_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_instance\">dev_instance</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_lost_interrupt\">ata_sff_lost_interrupt</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_freeze\">ata_sff_freeze</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_thaw\">ata_sff_thaw</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#ata_sff_prereset\">ata_sff_prereset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_sff_dev_classify\">ata_sff_dev_classify</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#present\">present</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#r_err\">r_err</a>);", 
"extern int <a class=\"id\" href=\"#ata_sff_wait_after_reset\">ata_sff_wait_after_reset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int <a class=\"id\" href=\"#devmask\">devmask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"extern int <a class=\"id\" href=\"#ata_sff_softreset\">ata_sff_softreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#classes\">classes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"extern int <a class=\"id\" href=\"#sata_sff_hardreset\">sata_sff_hardreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_postreset\">ata_sff_postreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#classes\">classes</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_drain_fifo\">ata_sff_drain_fifo</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_error_handler\">ata_sff_error_handler</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_sff_std_ports\">ata_sff_std_ports</a>(struct <a class=\"id\" href=\"#ata_ioports\">ata_ioports</a> *<a class=\"id\" href=\"#ioaddr\">ioaddr</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"extern int <a class=\"id\" href=\"#ata_pci_sff_init_host\">ata_pci_sff_init_host</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>);", 
"extern int <a class=\"id\" href=\"#ata_pci_sff_prepare_host\">ata_pci_sff_prepare_host</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> * const * <a class=\"id\" href=\"#ppi\">ppi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ata_host\">ata_host</a> **<a class=\"id\" href=\"#r_host\">r_host</a>);", 
"extern int <a class=\"id\" href=\"#ata_pci_sff_activate_host\">ata_pci_sff_activate_host</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#irq_handler\">irq_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> *<a class=\"id\" href=\"#sht\">sht</a>);", 
"extern int <a class=\"id\" href=\"#ata_pci_sff_init_one\">ata_pci_sff_init_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> * const * <a class=\"id\" href=\"#ppi\">ppi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> *<a class=\"id\" href=\"#sht\">sht</a>, void *<a class=\"id\" href=\"#host_priv\">host_priv</a>, int <a class=\"id\" href=\"#hflags\">hflags</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PCI */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ATA_BMDMA\">CONFIG_ATA_BMDMA</a>", 
"", 
"extern const struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ata_bmdma_port_ops\">ata_bmdma_port_ops</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ATA_BMDMA_SHT\">ATA_BMDMA_SHT</a>(<a class=\"id\" href=\"#drv_name\">drv_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ATA_BASE_SHT\">ATA_BASE_SHT</a>(<a class=\"id\" href=\"#drv_name\">drv_name</a>),<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sg_tablesize\">sg_tablesize</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#LIBATA_MAX_PRD\">LIBATA_MAX_PRD</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dma_boundary\">dma_boundary</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_DMA_BOUNDARY\">ATA_DMA_BOUNDARY</a>", 
"", 
"extern void <a class=\"id\" href=\"#ata_bmdma_qc_prep\">ata_bmdma_qc_prep</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_bmdma_qc_issue\">ata_bmdma_qc_issue</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#ata_bmdma_dumb_qc_prep\">ata_bmdma_dumb_qc_prep</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern unsigned int <a class=\"id\" href=\"#ata_bmdma_port_intr\">ata_bmdma_port_intr</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#ata_bmdma_interrupt\">ata_bmdma_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_instance\">dev_instance</a>);", 
"extern void <a class=\"id\" href=\"#ata_bmdma_error_handler\">ata_bmdma_error_handler</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_bmdma_post_internal_cmd\">ata_bmdma_post_internal_cmd</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#ata_bmdma_irq_clear\">ata_bmdma_irq_clear</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern void <a class=\"id\" href=\"#ata_bmdma_setup\">ata_bmdma_setup</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#ata_bmdma_start\">ata_bmdma_start</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern void <a class=\"id\" href=\"#ata_bmdma_stop\">ata_bmdma_stop</a>(struct <a class=\"id\" href=\"#ata_queued_cmd\">ata_queued_cmd</a> *<a class=\"id\" href=\"#qc\">qc</a>);", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_bmdma_status\">ata_bmdma_status</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#ata_bmdma_port_start\">ata_bmdma_port_start</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"extern int <a class=\"id\" href=\"#ata_bmdma_port_start32\">ata_bmdma_port_start32</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"extern int <a class=\"id\" href=\"#ata_pci_bmdma_clear_simplex\">ata_pci_bmdma_clear_simplex</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"extern void <a class=\"id\" href=\"#ata_pci_bmdma_init\">ata_pci_bmdma_init</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>);", 
"extern int <a class=\"id\" href=\"#ata_pci_bmdma_prepare_host\">ata_pci_bmdma_prepare_host</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> * const * <a class=\"id\" href=\"#ppi\">ppi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ata_host\">ata_host</a> **<a class=\"id\" href=\"#r_host\">r_host</a>);", 
"extern int <a class=\"id\" href=\"#ata_pci_bmdma_init_one\">ata_pci_bmdma_init_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> * const * <a class=\"id\" href=\"#ppi\">ppi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> *<a class=\"id\" href=\"#sht\">sht</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#host_priv\">host_priv</a>, int <a class=\"id\" href=\"#hflags\">hflags</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PCI */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_ATA_BMDMA */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sff_busy_wait - Wait for a port status register</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to wait for.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bits: bits that must be clear</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@max: number of 10uS waits to perform</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Waits up to max*10 microseconds for the selected bits in the port's</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>status register to be cleared.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns final value of status register.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_sff_busy_wait\">ata_sff_busy_wait</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, unsigned int <a class=\"id\" href=\"#bits\">bits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#max\">max</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#sff_check_status\">sff_check_status</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>--;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#status\">status</a> != 0xff && (<a class=\"id\" href=\"#status\">status</a> &amp; <a class=\"id\" href=\"#bits\">bits</a>) && (<a class=\"id\" href=\"#max\">max</a> &gt; 0));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_wait_idle - Wait for a port to be idle.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to wait for.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Waits up to 10ms for port's BUSY and DRQ signals to clear.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns final value of status register.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ata_wait_idle\">ata_wait_idle</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#ata_sff_busy_wait\">ata_sff_busy_wait</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a> | <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>, 1000);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ATA_DEBUG\">ATA_DEBUG</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != 0xff && (<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a> | <a class=\"id\" href=\"#ATA_DRQ\">ATA_DRQ</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, \"abnormal Status 0x%X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_ATA_SFF */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_LIBATA_H__ */</span>", 
];
xr_frag_insert('l/07/5fcdb243807e09a02ea8837e31bba1fd58f905.xr', __xr_tmp);
