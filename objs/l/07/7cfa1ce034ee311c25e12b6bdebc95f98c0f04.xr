var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty\">tty</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty_driver\">tty_driver</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tty_flip\">tty_flip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#devpts_fs\">devpts_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kd\">kd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kbd_kern\">kbd_kern</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vt_kern\">vt_kern</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#selection\">selection</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* For the moment */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nsproxy\">nsproxy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This guards the refcounted line discipline lists. The lock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>must be taken with irqs off because there are hangup path</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>callers who will do ldisc lookups and cannot sleep.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>);", 
"static <a class=\"id\" href=\"#DECLARE_WAIT_QUEUE_HEAD\">DECLARE_WAIT_QUEUE_HEAD</a>(<a class=\"id\" href=\"#tty_ldisc_wait\">tty_ldisc_wait</a>);", 
"<span class=\"comment\">/* Line disc dispatch table */</span>", 
"static struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#tty_ldiscs\">tty_ldiscs</a>[<a class=\"id\" href=\"#NR_LDISCS\">NR_LDISCS</a>];", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#get_ldisc\">get_ldisc</a>(struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#users\">users</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ld\">ld</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#put_ldisc\">put_ldisc</a>(struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#ld\">ld</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this is the last user, free the ldisc, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * release the ldisc ops.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We really want an \"atomic_dec_and_lock_irqsave()\",</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but we don't have it, so this does it by hand.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_lock\">atomic_dec_and_lock</a>(&amp;<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#users\">users</a>, &amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#ldo\">ldo</a> = <a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ldo\">ldo</a>-><a class=\"id\" href=\"#refcount\">refcount</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#ldo\">ldo</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_register_ldisc<span class=\"ts\"/>-<span class=\"ts\"/>install a line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@disc: ldisc number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_ldisc: pointer to the ldisc object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Installs a new line discipline into the kernel. The discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is set up as unreferenced and then made available to the kernel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>from this point onwards.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>takes tty_ldisc_lock to guard against ldisc races</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_register_ldisc\">tty_register_ldisc</a>(int <a class=\"id\" href=\"#disc\">disc</a>, struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disc\">disc</a> &lt; <a class=\"id\" href=\"#N_TTY\">N_TTY</a> || <a class=\"id\" href=\"#disc\">disc</a> >= <a class=\"id\" href=\"#NR_LDISCS\">NR_LDISCS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldiscs\">tty_ldiscs</a>[<a class=\"id\" href=\"#disc\">disc</a>] = <a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>-><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#disc\">disc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>-><a class=\"id\" href=\"#refcount\">refcount</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_register_ldisc\">tty_register_ldisc</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_unregister_ldisc<span class=\"ts\"/>-<span class=\"ts\"/>unload a line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@disc: ldisc number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@new_ldisc: pointer to the ldisc object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Remove a line discipline from the kernel providing it is not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>currently in use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>takes tty_ldisc_lock to guard against ldisc races</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_unregister_ldisc\">tty_unregister_ldisc</a>(int <a class=\"id\" href=\"#disc\">disc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disc\">disc</a> &lt; <a class=\"id\" href=\"#N_TTY\">N_TTY</a> || <a class=\"id\" href=\"#disc\">disc</a> >= <a class=\"id\" href=\"#NR_LDISCS\">NR_LDISCS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_ldiscs\">tty_ldiscs</a>[<a class=\"id\" href=\"#disc\">disc</a>]-><a class=\"id\" href=\"#refcount\">refcount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldiscs\">tty_ldiscs</a>[<a class=\"id\" href=\"#disc\">disc</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#tty_unregister_ldisc\">tty_unregister_ldisc</a>);", 
"", 
"static struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#get_ldops\">get_ldops</a>(int <a class=\"id\" href=\"#disc\">disc</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#ldops\">ldops</a>, *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldops\">ldops</a> = <a class=\"id\" href=\"#tty_ldiscs\">tty_ldiscs</a>[<a class=\"id\" href=\"#disc\">disc</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ldops\">ldops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#ldops\">ldops</a>-><a class=\"id\" href=\"#owner\">owner</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ldops\">ldops</a>-><a class=\"id\" href=\"#refcount\">refcount</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ldops\">ldops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#put_ldops\">put_ldops</a>(struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#ldops\">ldops</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldops\">ldops</a>-><a class=\"id\" href=\"#refcount\">refcount</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#ldops\">ldops</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_get<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>take a reference to an ldisc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@disc: ldisc number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Takes a reference to a line discipline. Deals with refcounts and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>module locking counts. Returns NULL if the discipline is not available.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns a pointer to the discipline and bumps the ref count if it is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>available</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>takes tty_ldisc_lock to guard against ldisc races</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#tty_ldisc_get\">tty_ldisc_get</a>(int <a class=\"id\" href=\"#disc\">disc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#ldops\">ldops</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disc\">disc</a> &lt; <a class=\"id\" href=\"#N_TTY\">N_TTY</a> || <a class=\"id\" href=\"#disc\">disc</a> >= <a class=\"id\" href=\"#NR_LDISCS\">NR_LDISCS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get the ldisc ops - we may need to request them to be loaded</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dynamically and try again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldops\">ldops</a> = <a class=\"id\" href=\"#get_ldops\">get_ldops</a>(<a class=\"id\" href=\"#disc\">disc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ldops\">ldops</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"tty-ldisc-%d\", <a class=\"id\" href=\"#disc\">disc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ldops\">ldops</a> = <a class=\"id\" href=\"#get_ldops\">get_ldops</a>(<a class=\"id\" href=\"#disc\">disc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ldops\">ldops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#ldops\">ldops</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_ldops\">put_ldops</a>(<a class=\"id\" href=\"#ldops\">ldops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ldops\">ldops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#users\">users</a>, 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ld\">ld</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#tty_ldiscs_seq_start\">tty_ldiscs_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>return (*<a class=\"id\" href=\"#pos\">pos</a> &lt; <a class=\"id\" href=\"#NR_LDISCS\">NR_LDISCS</a>) ? <a class=\"id\" href=\"#pos\">pos</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#tty_ldiscs_seq_next\">tty_ldiscs_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"<span class=\"ts\"/>return (*<a class=\"id\" href=\"#pos\">pos</a> &lt; <a class=\"id\" href=\"#NR_LDISCS\">NR_LDISCS</a>) ? <a class=\"id\" href=\"#pos\">pos</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tty_ldiscs_seq_stop\">tty_ldiscs_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tty_ldiscs_seq_show\">tty_ldiscs_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = *(<a class=\"id\" href=\"#loff_t\">loff_t</a> *)<a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc_ops\">tty_ldisc_ops</a> *<a class=\"id\" href=\"#ldops\">ldops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ldops\">ldops</a> = <a class=\"id\" href=\"#get_ldops\">get_ldops</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ldops\">ldops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%-10s %2d\\n\", <a class=\"id\" href=\"#ldops\">ldops</a>-><a class=\"id\" href=\"#name\">name</a> ? <a class=\"id\" href=\"#ldops\">ldops</a>-><a class=\"id\" href=\"#name\">name</a> : \"???\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_ldops\">put_ldops</a>(<a class=\"id\" href=\"#ldops\">ldops</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#tty_ldiscs_seq_ops\">tty_ldiscs_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_ldiscs_seq_start\">tty_ldiscs_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_ldiscs_seq_next\">tty_ldiscs_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_ldiscs_seq_stop\">tty_ldiscs_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#tty_ldiscs_seq_show\">tty_ldiscs_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#proc_tty_ldiscs_open\">proc_tty_ldiscs_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#tty_ldiscs_seq_ops\">tty_ldiscs_seq_ops</a>);", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#tty_ldiscs_proc_fops\">tty_ldiscs_proc_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_tty_ldiscs_open\">proc_tty_ldiscs_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_assign<span class=\"ts\"/>-<span class=\"ts\"/>set ldisc on a tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to assign</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ld: line discipline</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Install an instance of a line discipline into a tty structure. The</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ldisc must have a reference count above zero to ensure it remains.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The tty instance refcount starts at zero.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Caller must hold references</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tty_ldisc_assign\">tty_ldisc_assign</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a> = <a class=\"id\" href=\"#ld\">ld</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_try<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>internal helper</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: the tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Make a single attempt to grab and bump the refcount on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the tty ldisc. Return 0 on failure or 1 on success. This is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>used to implement both the waiting and non waiting versions</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of tty_ldisc_ref</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: takes tty_ldisc_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#tty_ldisc_try\">tty_ldisc_try</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_LDISC\">TTY_LDISC</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#get_ldisc\">get_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_lock\">tty_ldisc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ld\">ld</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_ref_wait<span class=\"ts\"/>-<span class=\"ts\"/>wait for the tty ldisc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Dereference the line discipline for the terminal and take a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reference to it. If the line discipline is in flux then</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>wait patiently until it changes.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: Must not be called from an IRQ/timer context. The caller</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>must also be careful not to hold other locks that will deadlock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>against a discipline change, such as an existing ldisc reference</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(which we check for)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: call functions take tty_ldisc_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* wait_event is a macro */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#tty_ldisc_wait\">tty_ldisc_wait</a>, (<a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_try\">tty_ldisc_try</a>(<a class=\"id\" href=\"#tty\">tty</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ld\">ld</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_ldisc_ref_wait\">tty_ldisc_ref_wait</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_ref<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>get the tty ldisc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Dereference the line discipline for the terminal and take a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>reference to it. If the line discipline is in flux then</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>return NULL. Can be called from IRQ and timer functions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: called functions take tty_ldisc_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#tty_ldisc_ref\">tty_ldisc_ref</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tty_ldisc_try\">tty_ldisc_try</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_ldisc_ref\">tty_ldisc_ref</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_deref<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>free a tty ldisc reference</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ld: reference to free up</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Undoes the effect of tty_ldisc_ref or tty_ldisc_ref_wait. May</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be called in IRQ context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: takes tty_ldisc_lock</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_ldisc\">put_ldisc</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_ldisc\">put_ldisc</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_enable<span class=\"ts\"/>-<span class=\"ts\"/>allow ldisc use</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: terminal to activate ldisc on</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set the TTY_LDISC flag when the line discipline can be called</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>again. Do necessary wakeups for existing sleepers. Clear the LDISC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>changing flag to indicate any ldisc change is now over.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: nobody should set the TTY_LDISC bit except via this function.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Clearing directly is allowed.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_ldisc_enable\">tty_ldisc_enable</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_LDISC\">TTY_LDISC</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_CHANGING\">TTY_LDISC_CHANGING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#tty_ldisc_wait\">tty_ldisc_wait</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_flush<span class=\"ts\"/>-<span class=\"ts\"/>flush line discipline queue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Flush the line discipline queue (if any) for this tty. If there</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is no line discipline active this is a no-op.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_ldisc_flush\">tty_ldisc_flush</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref\">tty_ldisc_ref</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_buffer_flush\">tty_buffer_flush</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#tty_ldisc_flush\">tty_ldisc_flush</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_set_termios_ldisc<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>set ldisc field</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@num: line discipline number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is probably overkill for real world processors but</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>they are not on hot paths so a little discipline won't do</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>any harm.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: takes termios_mutex</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tty_set_termios_ldisc\">tty_set_termios_ldisc</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_line\">c_line</a> = <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_open<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>open a line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty we are opening the ldisc on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ld: discipline to open</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A helper opening method. Also a convenient debugging and check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>point.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: always called with BTM already held.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_OPEN\">TTY_LDISC_OPEN</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#open\">open</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"                <span class=\"comment\">/* BTM here locks versus a hangup event */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#tty_locked\">tty_locked</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#open\">open</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_close<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>close a line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty we are opening the ldisc on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ld: discipline to close</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A helper close method. Also a convenient debugging and check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>point.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tty_ldisc_close\">tty_ldisc_close</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_OPEN\">TTY_LDISC_OPEN</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_OPEN\">TTY_LDISC_OPEN</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#close\">close</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#close\">close</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_restore<span class=\"ts\"/>-<span class=\"ts\"/>helper for tty ldisc change</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to recover</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@old: previous ldisc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Restore the previous line discipline or N_TTY when a line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>change fails due to an open error</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tty_ldisc_restore\">tty_ldisc_restore</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#old\">old</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* There is an outstanding reference here so this is safe */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old\">old</a> = <a class=\"id\" href=\"#tty_ldisc_get\">tty_ldisc_get</a>(<a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old\">old</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_assign\">tty_ldisc_assign</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_set_termios_ldisc\">tty_set_termios_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#old\">old</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#num\">num</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#old\">old</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(<a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This driver is always present */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_ldisc\">new_ldisc</a> = <a class=\"id\" href=\"#tty_ldisc_get\">tty_ldisc_get</a>(<a class=\"id\" href=\"#N_TTY\">N_TTY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"n_tty: get\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_assign\">tty_ldisc_assign</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_set_termios_ldisc\">tty_set_termios_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#N_TTY\">N_TTY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Couldn't open N_TTY ldisc for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"%s --- error %d.\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#tty_name\">tty_name</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#r\">r</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_halt<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>shut down the line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Shut down the line discipline and work queue for this tty device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The TTY_LDISC flag being cleared ensures no further references can</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be obtained while the delayed work queue halt ensures that no more</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>data is fed to the ldisc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>You need to do a 'flush_scheduled_work()' (outside the ldisc_mutex)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in order to make sure any currently executing ldisc work is also</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>flushed.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#tty_ldisc_halt\">tty_ldisc_halt</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_LDISC\">TTY_LDISC</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_set_ldisc<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>set line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: the terminal to set</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ldisc: the line discipline</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set the discipline of a tty line. Must be called from a process</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>context. The ldisc change logic has to protect itself against any</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>overlapping ldisc change (including on the other end of pty pairs),</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the close of one side of a tty/pty pair, and eventually hangup.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: takes tty_ldisc_lock, termios_mutex</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_set_ldisc\">tty_set_ldisc</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#ldisc\">ldisc</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#o_ldisc\">o_ldisc</a>, *<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#work\">work</a>, <a class=\"id\" href=\"#o_work\">o_work</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#o_tty\">o_tty</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_ldisc\">new_ldisc</a> = <a class=\"id\" href=\"#tty_ldisc_get\">tty_ldisc_get</a>(<a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We need to look at the tty locking here for pty/tty pairs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>when both sides try to change in parallel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#o_tty\">o_tty</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#link\">link</a>;<span class=\"ts\"/><span class=\"comment\">/* o_tty is the pty side or NULL */</span>", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Check the no-op case</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#num\">num</a> == <a class=\"id\" href=\"#ldisc\">ldisc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Problem: What do we do if this blocks ?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We could deadlock here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_wait_until_sent\">tty_wait_until_sent</a>(<a class=\"id\" href=\"#tty\">tty</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We could be midstream of another ldisc change which has</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>dropped the lock during processing. If so we need to wait.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_CHANGING\">TTY_LDISC_CHANGING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_event\">wait_event</a>(<a class=\"id\" href=\"#tty_ldisc_wait\">tty_ldisc_wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_CHANGING\">TTY_LDISC_CHANGING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>) == 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_CHANGING\">TTY_LDISC_CHANGING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>No more input please, we are switching. The new ldisc</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>will update this value in the ldisc open function</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#receive_room\">receive_room</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#o_ldisc\">o_ldisc</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Make sure we don't change while someone holds a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>reference to the line discipline. The TTY_LDISC bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>prevents anyone taking a reference once it is clear.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We need the lock to avoid racing reference takers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We must clear the TTY_LDISC bit here to avoid a livelock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>with a userspace app continually trying to use the tty in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>parallel to the change and re-referencing the tty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#work\">work</a> = <a class=\"id\" href=\"#tty_ldisc_halt\">tty_ldisc_halt</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#o_work\">o_work</a> = <a class=\"id\" href=\"#tty_ldisc_halt\">tty_ldisc_halt</a>(<a class=\"id\" href=\"#o_tty\">o_tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for -&gt;hangup_work and -&gt;buf.work handlers to terminate.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We must drop the mutex here in case a hangup is also in process.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_scheduled_work\">flush_scheduled_work</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_HUPPED\">TTY_HUPPED</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We were raced by the hangup method. It will have stomped</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   the ldisc data and closed the ldisc down */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_LDISC_CHANGING\">TTY_LDISC_CHANGING</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Shutdown the current discipline. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_close\">tty_ldisc_close</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#o_ldisc\">o_ldisc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now set up the new line discipline. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_assign\">tty_ldisc_assign</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_set_termios_ldisc\">tty_set_termios_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Back to the old one or N_TTY if we can't */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(<a class=\"id\" href=\"#new_ldisc\">new_ldisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_restore\">tty_ldisc_restore</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#o_ldisc\">o_ldisc</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* At this point we hold a reference to the new ldisc and a</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   a reference to the old ldisc. If we ended up flipping back</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   to the existing ldisc we have two references to it */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#num\">num</a> != <a class=\"id\" href=\"#o_ldisc\">o_ldisc</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#num\">num</a> && <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_ldisc\">set_ldisc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#set_ldisc\">set_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(<a class=\"id\" href=\"#o_ldisc\">o_ldisc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Allow ldisc referencing to occur again</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_enable\">tty_ldisc_enable</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_enable\">tty_ldisc_enable</a>(<a class=\"id\" href=\"#o_tty\">o_tty</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Restart the work queue in case no characters kick it off. Safe if</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   already running */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#work\">work</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#work\">work</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_work\">o_work</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#work\">work</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_reset_termios<span class=\"ts\"/>-<span class=\"ts\"/>reset terminal state</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to reset</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Restore a terminal to the driver default state.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tty_reset_termios\">tty_reset_termios</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#init_termios\">init_termios</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_ispeed\">c_ispeed</a> = <a class=\"id\" href=\"#tty_termios_input_baud_rate\">tty_termios_input_baud_rate</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_ospeed\">c_ospeed</a> = <a class=\"id\" href=\"#tty_termios_baud_rate\">tty_termios_baud_rate</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios_mutex\">termios_mutex</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_reinit<span class=\"ts\"/>-<span class=\"ts\"/>reinitialise the tty ldisc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty to reinit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ldisc: line discipline to reinitialize</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Switch the tty to a line discipline and leave the ldisc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>state closed</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tty_ldisc_reinit\">tty_ldisc_reinit</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#ldisc\">ldisc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_close\">tty_ldisc_close</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Switch the line discipline back</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_get\">tty_ldisc_get</a>(<a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ld\">ld</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_assign\">tty_ldisc_assign</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_set_termios_ldisc\">tty_set_termios_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_hangup<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>hangup ldisc reset</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty being hung up</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Some tty devices reset their termios when they receive a hangup</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event. In that situation we must also switch back to N_TTY properly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>before we reset the termios data.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Locking: We can take the ldisc mutex as the rest of the code is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>careful to allow for this.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>In the pty pair case this occurs in the close() path of the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty itself so we must be careful about locking rules.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_ldisc_hangup\">tty_ldisc_hangup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reset\">reset</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TTY_DRIVER_RESET_TERMIOS\">TTY_DRIVER_RESET_TERMIOS</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME! What are the locking issues here? This may me overdoing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * things... This question is especially important now that we've</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * removed the irqlock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_ref\">tty_ldisc_ref</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We may have no line discipline at this point */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_driver_flush_buffer\">tty_driver_flush_buffer</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#TTY_DO_WRITE_WAKEUP\">TTY_DO_WRITE_WAKEUP</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write_wakeup\">write_wakeup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#write_wakeup\">write_wakeup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#hangup\">hangup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ld\">ld</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#hangup\">hangup</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_deref\">tty_ldisc_deref</a>(<a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME: Once we trust the LDISC code better we can wait here for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ldisc completion and fix the driver call race</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#write_wait\">write_wait</a>, <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible_poll\">wake_up_interruptible_poll</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>, <a class=\"id\" href=\"#POLLIN\">POLLIN</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Shutdown the current line discipline, and reset it to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * N_TTY if need be.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Avoid racing set_ldisc or tty_ldisc_release</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this is like tty_ldisc_halt, but we need to give up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the BTM before calling cancel_delayed_work_sync,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which may need to wait for another function taking the BTM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#TTY_LDISC\">TTY_LDISC</a>, &amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* At this point we have a closed ldisc and we want to</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   reopen it. We could defer this to the next open but</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   it means auditing a lot of other paths so this is</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   a FIXME */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>) {<span class=\"ts\"/><span class=\"comment\">/* Not yet closed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reset\">reset</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_reinit\">tty_ldisc_reinit</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#termios\">termios</a>-><a class=\"id\" href=\"#c_line\">c_line</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the re-open fails or we reset then go to N_TTY. The</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   N_TTY open cannot fail */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reset\">reset</a> || <a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_reinit\">tty_ldisc_reinit</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#N_TTY\">N_TTY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_enable\">tty_ldisc_enable</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reset\">reset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_reset_termios\">tty_reset_termios</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_setup<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>open line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty being shut down</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@o_tty: pair tty for pty/tty pairs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called during the initial open of a tty/pty pair in order to set up the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>line disciplines and bind them to the tty. This has no locking issues</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>as the device isn't yet active.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#tty_ldisc_setup\">tty_ldisc_setup</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#o_tty\">o_tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#tty_ldisc_open\">tty_ldisc_open</a>(<a class=\"id\" href=\"#o_tty\">o_tty</a>, <a class=\"id\" href=\"#o_tty\">o_tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_close\">tty_ldisc_close</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ld\">ld</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_enable\">tty_ldisc_enable</a>(<a class=\"id\" href=\"#o_tty\">o_tty</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_enable\">tty_ldisc_enable</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_release<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>release line discipline</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty being shut down</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@o_tty: pair tty for pty/tty pairs</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called during the final close of a tty/pty pair in order to shut down</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the line discpline layer. On exit the ldisc assigned is N_TTY and the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ldisc has not been opened.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_ldisc_release\">tty_ldisc_release</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#o_tty\">o_tty</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Prevent flush_to_ldisc() from rescheduling the work for later.  Then</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kill any delayed work. As this is the final close it does not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * race with the set_ldisc code path.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_unlock\">tty_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_halt\">tty_ldisc_halt</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_scheduled_work\">flush_scheduled_work</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_lock\">tty_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now kill off the ldisc</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_close\">tty_ldisc_close</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_put\">tty_ldisc_put</a>(<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Force an oops if we mess this up */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc\">ldisc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ensure the next open requests the N_TTY ldisc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_set_termios_ldisc\">tty_set_termios_ldisc</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#N_TTY\">N_TTY</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#ldisc_mutex\">ldisc_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This will need doing differently if we need to lock */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_tty\">o_tty</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_release\">tty_ldisc_release</a>(<a class=\"id\" href=\"#o_tty\">o_tty</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And the memory resources remaining (buffers, termios) will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   disposed of when the kref hits zero */</span>", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_ldisc_init<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>ldisc setup for new tty</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tty: tty being allocated</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set up the line discipline objects for a newly allocated tty. Note that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the tty structure is not completely set up when this call is made.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#tty_ldisc_init\">tty_ldisc_init</a>(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_ldisc\">tty_ldisc</a> *<a class=\"id\" href=\"#ld\">ld</a> = <a class=\"id\" href=\"#tty_ldisc_get\">tty_ldisc_get</a>(<a class=\"id\" href=\"#N_TTY\">N_TTY</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ld\">ld</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"n_tty: init_tty\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_ldisc_assign\">tty_ldisc_assign</a>(<a class=\"id\" href=\"#tty\">tty</a>, <a class=\"id\" href=\"#ld\">ld</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#tty_ldisc_begin\">tty_ldisc_begin</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup the default TTY line discipline. */</span>", 
"<span class=\"ts\"/>(void) <a class=\"id\" href=\"#tty_register_ldisc\">tty_register_ldisc</a>(<a class=\"id\" href=\"#N_TTY\">N_TTY</a>, &amp;<a class=\"id\" href=\"#tty_ldisc_N_TTY\">tty_ldisc_N_TTY</a>);", 
"}", 
];
xr_frag_insert('l/07/7cfa1ce034ee311c25e12b6bdebc95f98c0f04.xr', __xr_tmp);
