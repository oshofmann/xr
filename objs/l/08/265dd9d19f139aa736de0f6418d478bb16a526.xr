var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seq_before\">seq_before</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sequence\">sequence</a>, <a class=\"id\" href=\"#seq\">seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this can't happen, anyway ignore the skb */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"ppp_mp_reconstruct bad seq %u < %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sequence\">sequence</a>, <a class=\"id\" href=\"#seq\">seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sequence\">sequence</a> != <a class=\"id\" href=\"#seq\">seq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fragment `seq' is missing.  If it is after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   minseq, it might arrive later, so stop here. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seq_after\">seq_after</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#minseq\">minseq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fragment `seq' is lost, keep going. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lost\">lost</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#seq_before\">seq_before</a>(<a class=\"id\" href=\"#minseq\">minseq</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sequence\">sequence</a>)?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minseq\">minseq</a> + 1: <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sequence\">sequence</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * At this point we know that all the fragments from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ppp-&gt;nextseq to seq are either present or lost.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Also, there are no complete packets in the queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that have no missing fragments and end before this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * fragment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* B bit set indicates this fragment starts a packet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#BEbits\">BEbits</a> &amp; <a class=\"id\" href=\"#B\">B</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lost\">lost</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Got a complete packet yet? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lost\">lost</a> == 0 && (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#BEbits\">BEbits</a> &amp; <a class=\"id\" href=\"#E\">E</a>) && (<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#BEbits\">BEbits</a> &amp; <a class=\"id\" href=\"#B\">B</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#mrru\">mrru</a> + 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_length_errors\">rx_length_errors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"PPP: reconstructed packet\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" is too long (%d)\\n\", <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#p\">p</a> == <a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fragment is complete packet - reuse skb */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_get\">skb_get</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#dev_alloc_skb\">dev_alloc_skb</a>(<a class=\"id\" href=\"#len\">len</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_missed_errors\">rx_missed_errors</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"PPP: no memory for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"reconstructed packet\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tail\">tail</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#nextseq\">nextseq</a> = <a class=\"id\" href=\"#seq\">seq</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If this is the ending fragment of a packet,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and we haven't found a complete valid packet yet,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we can discard up to and including this fragment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#BEbits\">BEbits</a> &amp; <a class=\"id\" href=\"#E\">E</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we have a complete packet, copy it all into one skb. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tail\">tail</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we have discarded any fragments,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   signal a receive error. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#sequence\">sequence</a> != <a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#nextseq\">nextseq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#debug\">debug</a> &amp; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"  missed pkts %u..%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#nextseq\">nextseq</a>, <a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#sequence\">sequence</a>-1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#rx_dropped\">rx_dropped</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppp_receive_error\">ppp_receive_error</a>(<a class=\"id\" href=\"#ppp\">ppp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* copy to a single skb */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#head\">head</a>; <a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#tail\">tail</a>-><a class=\"id\" href=\"#next\">next</a>; <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_copy_bits\">skb_copy_bits</a>(<a class=\"id\" href=\"#p\">p</a>, 0, <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>), <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppp\">ppp</a>-><a class=\"id\" href=\"#nextseq\">nextseq</a> = <a class=\"id\" href=\"#tail\">tail</a>-><a class=\"id\" href=\"#sequence\">sequence</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#tail\">tail</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Discard all the skbuffs that we have copied the data out of</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   or that we can't use. */</span>", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#list\">list</a>-><a class=\"id\" href=\"#next\">next</a>) != <a class=\"id\" href=\"#head\">head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_unlink\">__skb_unlink</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PPP_MULTILINK */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Channel interface.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Create a new, unattached ppp channel. */</span>", 
"int <a class=\"id\" href=\"#ppp_register_channel\">ppp_register_channel</a>(struct <a class=\"id\" href=\"#ppp_channel\">ppp_channel</a> *<a class=\"id\" href=\"#chan\">chan</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ppp_register_net_channel\">ppp_register_net_channel</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#net_ns\">net_ns</a>, <a class=\"id\" href=\"#chan\">chan</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Create a new, unattached ppp channel for specified net. */</span>", 
"int <a class=\"id\" href=\"#ppp_register_net_channel\">ppp_register_net_channel</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#ppp_channel\">ppp_channel</a> *<a class=\"id\" href=\"#chan\">chan</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#channel\">channel</a> *<a class=\"id\" href=\"#pch\">pch</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ppp_net\">ppp_net</a> *<a class=\"id\" href=\"#pn\">pn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pch\">pch</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#channel\">channel</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pch\">pch</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pn\">pn</a> = <a class=\"id\" href=\"#ppp_pernet\">ppp_pernet</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#ppp\">ppp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#chan\">chan</a> = <a class=\"id\" href=\"#chan\">chan</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#chan_net\">chan_net</a> = <a class=\"id\" href=\"#net\">net</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#ppp\">ppp</a> = <a class=\"id\" href=\"#pch\">pch</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_ppp_file\">init_ppp_file</a>(&amp;<a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#CHANNEL\">CHANNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#hdrlen\">hdrlen</a> = <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#hdrlen\">hdrlen</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PPP_MULTILINK\">CONFIG_PPP_MULTILINK</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#lastseq\">lastseq</a> = -1;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PPP_MULTILINK */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;<a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#chan_sem\">chan_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#downl\">downl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#upl\">upl</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#all_channels_lock\">all_channels_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#index\">index</a> = ++<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#last_channel_index\">last_channel_index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#pch\">pch</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#new_channels\">new_channels</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#channel_count\">channel_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#pn\">pn</a>-><a class=\"id\" href=\"#all_channels_lock\">all_channels_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
];
xr_frag_insert('l/08/265dd9d19f139aa736de0f6418d478bb16a526.xr', __xr_tmp);
