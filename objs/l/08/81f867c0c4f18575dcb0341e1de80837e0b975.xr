var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASM_GENERIC_SHMBUF_H\">__ASM_GENERIC_SHMBUF_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ASM_GENERIC_SHMBUF_H\">__ASM_GENERIC_SHMBUF_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bitsperlong\">bitsperlong</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The shmid64_ds structure for x86 architecture.</span>", 
"<span class=\"comment\"> * Note extra padding because this structure is passed back and forth</span>", 
"<span class=\"comment\"> * between kernel and user space.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * shmid64_ds was originally meant to be architecture specific, but</span>", 
"<span class=\"comment\"> * everyone just ended up making identical copies without specific</span>", 
"<span class=\"comment\"> * optimizations, so we may just as well all use the same one.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 64 bit architectures typically define a 64 bit __kernel_time_t,</span>", 
"<span class=\"comment\"> * so they do not need the first two padding words.</span>", 
"<span class=\"comment\"> * On big-endian systems, the padding is in the wrong place.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Pad space is left for:</span>", 
"<span class=\"comment\"> * - 64-bit time_t to solve y2038 problem</span>", 
"<span class=\"comment\"> * - 2 miscellaneous 32-bit values</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#shmid64_ds\">shmid64_ds</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipc64_perm\">ipc64_perm</a><span class=\"ts\"/><a class=\"id\" href=\"#shm_perm\">shm_perm</a>;<span class=\"ts\"/><span class=\"comment\">/* operation perms */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_segsz\">shm_segsz</a>;<span class=\"ts\"/><span class=\"comment\">/* size of segment (bytes) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_atime\">shm_atime</a>;<span class=\"ts\"/><span class=\"comment\">/* last attach time */</span>", 
"#if <a class=\"id\" href=\"#__BITS_PER_LONG\">__BITS_PER_LONG</a> != 64", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__unused1\">__unused1</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_dtime\">shm_dtime</a>;<span class=\"ts\"/><span class=\"comment\">/* last detach time */</span>", 
"#if <a class=\"id\" href=\"#__BITS_PER_LONG\">__BITS_PER_LONG</a> != 64", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__unused2\">__unused2</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_ctime\">shm_ctime</a>;<span class=\"ts\"/><span class=\"comment\">/* last change time */</span>", 
"#if <a class=\"id\" href=\"#__BITS_PER_LONG\">__BITS_PER_LONG</a> != 64", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__unused3\">__unused3</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_pid_t\">__kernel_pid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_cpid\">shm_cpid</a>;<span class=\"ts\"/><span class=\"comment\">/* pid of creator */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_pid_t\">__kernel_pid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_lpid\">shm_lpid</a>;<span class=\"ts\"/><span class=\"comment\">/* pid of last operator */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shm_nattch\">shm_nattch</a>;<span class=\"ts\"/><span class=\"comment\">/* no. of current attaches */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__unused4\">__unused4</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__unused5\">__unused5</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#shminfo64\">shminfo64</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#shmmax\">shmmax</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#shmmin\">shmmin</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#shmmni\">shmmni</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#shmseg\">shmseg</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#shmall\">shmall</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#__unused1\">__unused1</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#__unused2\">__unused2</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#__unused3\">__unused3</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#__unused4\">__unused4</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASM_GENERIC_SHMBUF_H */</span>", 
];
xr_frag_insert('l/08/81f867c0c4f18575dcb0341e1de80837e0b975.xr', __xr_tmp);
