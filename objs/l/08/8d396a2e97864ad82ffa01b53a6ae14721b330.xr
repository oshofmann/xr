var __xr_tmp = [
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_TYPE_MAX\">NLA_TYPE_MAX</a> (<a class=\"id\" href=\"#__NLA_TYPE_MAX\">__NLA_TYPE_MAX</a> - 1)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct nla_policy - attribute validation policy</span>", 
"<span class=\"comment\"> * @type: Type of attribute or NLA_UNSPEC</span>", 
"<span class=\"comment\"> * @len: Type specific length of payload</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Policies are defined as arrays of this struct, the array must be</span>", 
"<span class=\"comment\"> * accessible by attribute type up to the highest identifier to be expected.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Meaning of `len' field:</span>", 
"<span class=\"comment\"> *    NLA_STRING           Maximum length of string</span>", 
"<span class=\"comment\"> *    NLA_NUL_STRING       Maximum length of string (excluding NUL)</span>", 
"<span class=\"comment\"> *    NLA_FLAG             Unused</span>", 
"<span class=\"comment\"> *    NLA_BINARY           Maximum length of attribute payload</span>", 
"<span class=\"comment\"> *    NLA_NESTED_COMPAT    Exact length of structure payload</span>", 
"<span class=\"comment\"> *    All other            Exact length of attribute payload</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Example:</span>", 
"<span class=\"comment\"> * static const struct nla_policy my_policy[ATTR_MAX+1] = {</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>[ATTR_FOO] = { .type = NLA_U16 },</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>[ATTR_BAR] = { .type = NLA_STRING, .len = BARSIZ },</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>[ATTR_BAZ] = { .len = sizeof(struct mystruct) },</span>", 
"<span class=\"comment\"> * };</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct nl_info - netlink source information</span>", 
"<span class=\"comment\"> * @nlh: Netlink message header of original request</span>", 
"<span class=\"comment\"> * @pid: Netlink PID of requesting application</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#nl_info\">nl_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#nl_net\">nl_net</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;", 
"};", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netlink_rcv_skb\">netlink_rcv_skb</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#cb\">cb</a>)(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *));", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_notify\">nlmsg_notify</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, unsigned int <a class=\"id\" href=\"#group\">group</a>, int <a class=\"id\" href=\"#report\">report</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_validate\">nla_validate</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#head\">head</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#maxtype\">maxtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_parse\">nla_parse</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[], int <a class=\"id\" href=\"#maxtype\">maxtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#head\">head</a>, int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_policy_len\">nla_policy_len</a>(const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> *, int);", 
"extern struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<span class=\"ts\"/><a class=\"id\" href=\"#nla_find\">nla_find</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#head\">head</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>);", 
"extern <a class=\"id\" href=\"#size_t\">size_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_strlcpy\">nla_strlcpy</a>(char *<a class=\"id\" href=\"#dst\">dst</a>, const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#dstsize\">dstsize</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_memcpy\">nla_memcpy</a>(void *<a class=\"id\" href=\"#dest\">dest</a>, const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#src\">src</a>, int <a class=\"id\" href=\"#count\">count</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_memcmp\">nla_memcmp</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>, const void *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_strcmp\">nla_strcmp</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>, const char *<a class=\"id\" href=\"#str\">str</a>);", 
"extern struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<span class=\"ts\"/><a class=\"id\" href=\"#__nla_reserve\">__nla_reserve</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#attrlen\">attrlen</a>);", 
"extern void *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__nla_reserve_nohdr\">__nla_reserve_nohdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrlen\">attrlen</a>);", 
"extern struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<span class=\"ts\"/><a class=\"id\" href=\"#nla_reserve\">nla_reserve</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#attrlen\">attrlen</a>);", 
"extern void *<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_reserve_nohdr\">nla_reserve_nohdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrlen\">attrlen</a>);", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__nla_put\">__nla_put</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#attrlen\">attrlen</a>, const void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__nla_put_nohdr\">__nla_put_nohdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrlen\">attrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_put\">nla_put</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#attrlen\">attrlen</a>, const void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_put_nohdr\">nla_put_nohdr</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrlen\">attrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_append\">nla_append</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrlen\">attrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const void *<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"comment\">/**************************************************************************</span>", 
"<span class=\"comment\"> * Netlink Messages</span>", 
"<span class=\"comment\"> **************************************************************************/</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_msg_size - length of netlink message not including padding</span>", 
"<span class=\"comment\"> * @payload: length of message payload</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_msg_size\">nlmsg_msg_size</a>(int <a class=\"id\" href=\"#payload\">payload</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NLMSG_HDRLEN\">NLMSG_HDRLEN</a> + <a class=\"id\" href=\"#payload\">payload</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_total_size - length of netlink message including padding</span>", 
"<span class=\"comment\"> * @payload: length of message payload</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(int <a class=\"id\" href=\"#payload\">payload</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NLMSG_ALIGN\">NLMSG_ALIGN</a>(<a class=\"id\" href=\"#nlmsg_msg_size\">nlmsg_msg_size</a>(<a class=\"id\" href=\"#payload\">payload</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_padlen - length of padding at the message's tail</span>", 
"<span class=\"comment\"> * @payload: length of message payload</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_padlen\">nlmsg_padlen</a>(int <a class=\"id\" href=\"#payload\">payload</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(<a class=\"id\" href=\"#payload\">payload</a>) - <a class=\"id\" href=\"#nlmsg_msg_size\">nlmsg_msg_size</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_data - head of message payload</span>", 
"<span class=\"comment\"> * @nlh: netlink messsage header</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/>return (unsigned char *) <a class=\"id\" href=\"#nlh\">nlh</a> + <a class=\"id\" href=\"#NLMSG_HDRLEN\">NLMSG_HDRLEN</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_len - length of message payload</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> - <a class=\"id\" href=\"#NLMSG_HDRLEN\">NLMSG_HDRLEN</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_attrdata - head of attributes data</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> * @hdrlen: length of family specific header</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nlmsg_attrdata\">nlmsg_attrdata</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#hdrlen\">hdrlen</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *) (<a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#NLMSG_ALIGN\">NLMSG_ALIGN</a>(<a class=\"id\" href=\"#hdrlen\">hdrlen</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_attrlen - length of attributes data</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> * @hdrlen: length of family specific header</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_attrlen\">nlmsg_attrlen</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, int <a class=\"id\" href=\"#hdrlen\">hdrlen</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a>(<a class=\"id\" href=\"#nlh\">nlh</a>) - <a class=\"id\" href=\"#NLMSG_ALIGN\">NLMSG_ALIGN</a>(<a class=\"id\" href=\"#hdrlen\">hdrlen</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_ok - check if the netlink message fits into the remaining bytes</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> * @remaining: number of bytes remaining in message stream</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_ok\">nlmsg_ok</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, int <a class=\"id\" href=\"#remaining\">remaining</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#remaining\">remaining</a> >= (int) sizeof(struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> >= sizeof(struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> <= <a class=\"id\" href=\"#remaining\">remaining</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_next - next netlink message in message stream</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> * @remaining: number of bytes remaining in message stream</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the next netlink message in the message stream and</span>", 
"<span class=\"comment\"> * decrements remaining by the size of the current message.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlmsg_next\">nlmsg_next</a>(struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, int *<a class=\"id\" href=\"#remaining\">remaining</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#totlen\">totlen</a> = <a class=\"id\" href=\"#NLMSG_ALIGN\">NLMSG_ALIGN</a>(<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#totlen\">totlen</a>;", 
"", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *) ((unsigned char *) <a class=\"id\" href=\"#nlh\">nlh</a> + <a class=\"id\" href=\"#totlen\">totlen</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_parse - parse attributes of a netlink message</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> * @hdrlen: length of family specific header</span>", 
"<span class=\"comment\"> * @tb: destination array with maxtype+1 elements</span>", 
"<span class=\"comment\"> * @maxtype: maximum attribute type to be expected</span>", 
"<span class=\"comment\"> * @policy: validation policy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See nla_parse()</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_parse\">nlmsg_parse</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, int <a class=\"id\" href=\"#hdrlen\">hdrlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[], int <a class=\"id\" href=\"#maxtype\">maxtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> &lt; <a class=\"id\" href=\"#nlmsg_msg_size\">nlmsg_msg_size</a>(<a class=\"id\" href=\"#hdrlen\">hdrlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_parse\">nla_parse</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#maxtype\">maxtype</a>, <a class=\"id\" href=\"#nlmsg_attrdata\">nlmsg_attrdata</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#nlmsg_attrlen\">nlmsg_attrlen</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>), <a class=\"id\" href=\"#policy\">policy</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_find_attr - find a specific attribute in a netlink message</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> * @hdrlen: length of familiy specific header</span>", 
"<span class=\"comment\"> * @attrtype: type of attribute to look for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the first attribute which matches the specified type.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nlmsg_find_attr\">nlmsg_find_attr</a>(struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#hdrlen\">hdrlen</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_find\">nla_find</a>(<a class=\"id\" href=\"#nlmsg_attrdata\">nlmsg_attrdata</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_attrlen\">nlmsg_attrlen</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>), <a class=\"id\" href=\"#attrtype\">attrtype</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_validate - validate a netlink message including attributes</span>", 
"<span class=\"comment\"> * @nlh: netlinket message header</span>", 
"<span class=\"comment\"> * @hdrlen: length of familiy specific header</span>", 
"<span class=\"comment\"> * @maxtype: maximum attribute type to be expected</span>", 
"<span class=\"comment\"> * @policy: validation policy</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_validate\">nlmsg_validate</a>(struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>, int <a class=\"id\" href=\"#hdrlen\">hdrlen</a>, int <a class=\"id\" href=\"#maxtype\">maxtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> &lt; <a class=\"id\" href=\"#nlmsg_msg_size\">nlmsg_msg_size</a>(<a class=\"id\" href=\"#hdrlen\">hdrlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_validate\">nla_validate</a>(<a class=\"id\" href=\"#nlmsg_attrdata\">nlmsg_attrdata</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nlmsg_attrlen\">nlmsg_attrlen</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>), <a class=\"id\" href=\"#maxtype\">maxtype</a>, <a class=\"id\" href=\"#policy\">policy</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_report - need to report back to application?</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 1 if a report back to the application is requested.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_report\">nlmsg_report</a>(const struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/>return !!(<a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_flags\">nlmsg_flags</a> &amp; <a class=\"id\" href=\"#NLM_F_ECHO\">NLM_F_ECHO</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_for_each_attr - iterate over a stream of attributes</span>", 
"<span class=\"comment\"> * @pos: loop counter, set to current attribute</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> * @hdrlen: length of familiy specific header</span>", 
"<span class=\"comment\"> * @rem: initialized to len, holds bytes currently remaining in stream</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nlmsg_for_each_attr\">nlmsg_for_each_attr</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>, <a class=\"id\" href=\"#rem\">rem</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_for_each_attr\">nla_for_each_attr</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#nlmsg_attrdata\">nlmsg_attrdata</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#nlmsg_attrlen\">nlmsg_attrlen</a>(<a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#hdrlen\">hdrlen</a>), <a class=\"id\" href=\"#rem\">rem</a>)", 
"", 
"#if 0", 
"<span class=\"comment\">/* FIXME: Enable once all users have been converted */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __nlmsg_put - Add a new netlink message to an skb</span>", 
"<span class=\"comment\"> * @skb: socket buffer to store message in</span>", 
"<span class=\"comment\"> * @pid: netlink process id</span>", 
"<span class=\"comment\"> * @seq: sequence number of message</span>", 
"<span class=\"comment\"> * @type: message type</span>", 
"<span class=\"comment\"> * @payload: length of message payload</span>", 
"<span class=\"comment\"> * @flags: message flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The caller is responsible to ensure that the skb provides enough</span>", 
"<span class=\"comment\"> * tailroom for both the netlink header and payload.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#__nlmsg_put\">__nlmsg_put</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#payload\">payload</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = (struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *) <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(<a class=\"id\" href=\"#payload\">payload</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_type\">nlmsg_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> = <a class=\"id\" href=\"#nlmsg_msg_size\">nlmsg_msg_size</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_flags\">nlmsg_flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_pid\">nlmsg_pid</a> = <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_seq\">nlmsg_seq</a> = <a class=\"id\" href=\"#seq\">seq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((unsigned char *) <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>) + <a class=\"id\" href=\"#payload\">payload</a>, 0,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#nlmsg_padlen\">nlmsg_padlen</a>(<a class=\"id\" href=\"#payload\">payload</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlh\">nlh</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_put - Add a new netlink message to an skb</span>", 
"<span class=\"comment\"> * @skb: socket buffer to store message in</span>", 
"<span class=\"comment\"> * @pid: netlink process id</span>", 
"<span class=\"comment\"> * @seq: sequence number of message</span>", 
"<span class=\"comment\"> * @type: message type</span>", 
"<span class=\"comment\"> * @payload: length of message payload</span>", 
"<span class=\"comment\"> * @flags: message flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns NULL if the tailroom of the skb is insufficient to store</span>", 
"<span class=\"comment\"> * the message header and payload.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlmsg_put\">nlmsg_put</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#payload\">payload</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb_tailroom\">skb_tailroom</a>(<a class=\"id\" href=\"#skb\">skb</a>) &lt; <a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(<a class=\"id\" href=\"#payload\">payload</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__nlmsg_put\">__nlmsg_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_put_answer - Add a new callback based netlink message to an skb</span>", 
"<span class=\"comment\"> * @skb: socket buffer to store message in</span>", 
"<span class=\"comment\"> * @cb: netlink callback</span>", 
"<span class=\"comment\"> * @type: message type</span>", 
"<span class=\"comment\"> * @payload: length of message payload</span>", 
"<span class=\"comment\"> * @flags: message flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns NULL if the tailroom of the skb is insufficient to store</span>", 
"<span class=\"comment\"> * the message header and payload.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlmsg_put_answer\">nlmsg_put_answer</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#payload\">payload</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlmsg_put\">nlmsg_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_seq\">nlmsg_seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_new - Allocate a new netlink message</span>", 
"<span class=\"comment\"> * @payload: size of the message payload</span>", 
"<span class=\"comment\"> * @flags: the type of memory to allocate.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Use NLMSG_DEFAULT_SIZE if the size of the payload isn't known</span>", 
"<span class=\"comment\"> * and a good default is needed.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#nlmsg_new\">nlmsg_new</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(<a class=\"id\" href=\"#nlmsg_total_size\">nlmsg_total_size</a>(<a class=\"id\" href=\"#payload\">payload</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_end - Finalize a netlink message</span>", 
"<span class=\"comment\"> * @skb: socket buffer the message is stored in</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Corrects the netlink message header to include the appeneded</span>", 
"<span class=\"comment\"> * attributes. Only necessary if attributes have been added to</span>", 
"<span class=\"comment\"> * the message.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the total data length of the skb.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_end\">nlmsg_end</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_len\">nlmsg_len</a> = <a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>) - (unsigned char *)<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_get_pos - return current position in netlink message</span>", 
"<span class=\"comment\"> * @skb: socket buffer the message is stored in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a pointer to the current tail of the message.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#nlmsg_get_pos\">nlmsg_get_pos</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb_tail_pointer\">skb_tail_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_trim - Trim message to a mark</span>", 
"<span class=\"comment\"> * @skb: socket buffer the message is stored in</span>", 
"<span class=\"comment\"> * @mark: mark to trim to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Trims the message to the provided mark.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nlmsg_trim\">nlmsg_trim</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, const void *<a class=\"id\" href=\"#mark\">mark</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mark\">mark</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_trim\">skb_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, (unsigned char *) <a class=\"id\" href=\"#mark\">mark</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_cancel - Cancel construction of a netlink message</span>", 
"<span class=\"comment\"> * @skb: socket buffer the message is stored in</span>", 
"<span class=\"comment\"> * @nlh: netlink message header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Removes the complete netlink message including all</span>", 
"<span class=\"comment\"> * attributes from the socket buffer again.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nlmsg_cancel\">nlmsg_cancel</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_trim\">nlmsg_trim</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_free - free a netlink message</span>", 
"<span class=\"comment\"> * @skb: socket buffer of netlink message</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#nlmsg_free\">nlmsg_free</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_multicast - multicast a netlink message</span>", 
"<span class=\"comment\"> * @sk: netlink socket to spread messages to</span>", 
"<span class=\"comment\"> * @skb: netlink message as socket buffer</span>", 
"<span class=\"comment\"> * @pid: own netlink pid to avoid sending to yourself</span>", 
"<span class=\"comment\"> * @group: multicast group id</span>", 
"<span class=\"comment\"> * @flags: allocation flags</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_multicast\">nlmsg_multicast</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, unsigned int <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#dst_group\">dst_group</a> = <a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_broadcast\">netlink_broadcast</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_unicast - unicast a netlink message</span>", 
"<span class=\"comment\"> * @sk: netlink socket to spread message to</span>", 
"<span class=\"comment\"> * @skb: netlink message as socket buffer</span>", 
"<span class=\"comment\"> * @pid: netlink pid of the destination socket</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nlmsg_unicast\">nlmsg_unicast</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#netlink_unicast\">netlink_unicast</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nlmsg_for_each_msg - iterate over a stream of messages</span>", 
"<span class=\"comment\"> * @pos: loop counter, set to current message</span>", 
"<span class=\"comment\"> * @head: head of message stream</span>", 
"<span class=\"comment\"> * @len: length of message stream</span>", 
"<span class=\"comment\"> * @rem: initialized to len, holds bytes currently remaining in stream</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#nlmsg_for_each_msg\">nlmsg_for_each_msg</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#rem\">rem</a>) \\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#rem\">rem</a> = <a class=\"id\" href=\"#len\">len</a>; \\", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#nlmsg_ok\">nlmsg_ok</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#rem\">rem</a>); \\", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#nlmsg_next\">nlmsg_next</a>(<a class=\"id\" href=\"#pos\">pos</a>, &amp;(<a class=\"id\" href=\"#rem\">rem</a>)))", 
"", 
"<span class=\"comment\">/**************************************************************************</span>", 
"<span class=\"comment\"> * Netlink Attributes</span>", 
"<span class=\"comment\"> **************************************************************************/</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_attr_size - length of attribute not including padding</span>", 
"<span class=\"comment\"> * @payload: length of payload</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_attr_size\">nla_attr_size</a>(int <a class=\"id\" href=\"#payload\">payload</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NLA_HDRLEN\">NLA_HDRLEN</a> + <a class=\"id\" href=\"#payload\">payload</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_total_size - total length of attribute including padding</span>", 
"<span class=\"comment\"> * @payload: length of payload</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(int <a class=\"id\" href=\"#payload\">payload</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NLA_ALIGN\">NLA_ALIGN</a>(<a class=\"id\" href=\"#nla_attr_size\">nla_attr_size</a>(<a class=\"id\" href=\"#payload\">payload</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_padlen - length of padding at the tail of attribute</span>", 
"<span class=\"comment\"> * @payload: length of payload</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_padlen\">nla_padlen</a>(int <a class=\"id\" href=\"#payload\">payload</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#payload\">payload</a>) - <a class=\"id\" href=\"#nla_attr_size\">nla_attr_size</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_type - attribute type</span>", 
"<span class=\"comment\"> * @nla: netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_type\">nla_type</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla\">nla</a>-><a class=\"id\" href=\"#nla_type\">nla_type</a> &amp; <a class=\"id\" href=\"#NLA_TYPE_MASK\">NLA_TYPE_MASK</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_data - head of payload</span>", 
"<span class=\"comment\"> * @nla: netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#nla_data\">nla_data</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return (char *) <a class=\"id\" href=\"#nla\">nla</a> + <a class=\"id\" href=\"#NLA_HDRLEN\">NLA_HDRLEN</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_len - length of payload</span>", 
"<span class=\"comment\"> * @nla: netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_len\">nla_len</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla\">nla</a>-><a class=\"id\" href=\"#nla_len\">nla_len</a> - <a class=\"id\" href=\"#NLA_HDRLEN\">NLA_HDRLEN</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_ok - check if the netlink attribute fits into the remaining bytes</span>", 
"<span class=\"comment\"> * @nla: netlink attribute</span>", 
"<span class=\"comment\"> * @remaining: number of bytes remaining in attribute stream</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_ok\">nla_ok</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>, int <a class=\"id\" href=\"#remaining\">remaining</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#remaining\">remaining</a> >= (int) sizeof(*<a class=\"id\" href=\"#nla\">nla</a>) &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#nla\">nla</a>-><a class=\"id\" href=\"#nla_len\">nla_len</a> >= sizeof(*<a class=\"id\" href=\"#nla\">nla</a>) &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#nla\">nla</a>-><a class=\"id\" href=\"#nla_len\">nla_len</a> <= <a class=\"id\" href=\"#remaining\">remaining</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_next - next netlink attribute in attribute stream</span>", 
"<span class=\"comment\"> * @nla: netlink attribute</span>", 
"<span class=\"comment\"> * @remaining: number of bytes remaining in attribute stream</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the next netlink attribute in the attribute stream and</span>", 
"<span class=\"comment\"> * decrements remaining by the size of the current attribute.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla_next\">nla_next</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>, int *<a class=\"id\" href=\"#remaining\">remaining</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#totlen\">totlen</a> = <a class=\"id\" href=\"#NLA_ALIGN\">NLA_ALIGN</a>(<a class=\"id\" href=\"#nla\">nla</a>-><a class=\"id\" href=\"#nla_len\">nla_len</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#remaining\">remaining</a> -= <a class=\"id\" href=\"#totlen\">totlen</a>;", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *) ((char *) <a class=\"id\" href=\"#nla\">nla</a> + <a class=\"id\" href=\"#totlen\">totlen</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_find_nested - find attribute in a set of nested attributes</span>", 
"<span class=\"comment\"> * @nla: attribute containing the nested attributes</span>", 
"<span class=\"comment\"> * @attrtype: type of attribute to look for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the first attribute which matches the specified type.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla_find_nested\">nla_find_nested</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_find\">nla_find</a>(<a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>), <a class=\"id\" href=\"#nla_len\">nla_len</a>(<a class=\"id\" href=\"#nla\">nla</a>), <a class=\"id\" href=\"#attrtype\">attrtype</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_parse_nested - parse nested attributes</span>", 
"<span class=\"comment\"> * @tb: destination array with maxtype+1 elements</span>", 
"<span class=\"comment\"> * @maxtype: maximum attribute type to be expected</span>", 
"<span class=\"comment\"> * @nla: attribute containing the nested attributes</span>", 
"<span class=\"comment\"> * @policy: validation policy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See nla_parse()</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_parse_nested\">nla_parse_nested</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#tb\">tb</a>[], int <a class=\"id\" href=\"#maxtype\">maxtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#nla_policy\">nla_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_parse\">nla_parse</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#maxtype\">maxtype</a>, <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>), <a class=\"id\" href=\"#nla_len\">nla_len</a>(<a class=\"id\" href=\"#nla\">nla</a>), <a class=\"id\" href=\"#policy\">policy</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_put_u8 - Add a u8 netlink attribute to a socket buffer</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attribute to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type</span>", 
"<span class=\"comment\"> * @value: numeric value</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_put_u8\">nla_put_u8</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, sizeof(<a class=\"id\" href=\"#u8\">u8</a>), &amp;<a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_put_u16 - Add a u16 netlink attribute to a socket buffer</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attribute to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type</span>", 
"<span class=\"comment\"> * @value: numeric value</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_put_u16\">nla_put_u16</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, sizeof(<a class=\"id\" href=\"#u16\">u16</a>), &amp;<a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_put_u32 - Add a u32 netlink attribute to a socket buffer</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attribute to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type</span>", 
"<span class=\"comment\"> * @value: numeric value</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_put_u32\">nla_put_u32</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>), &amp;<a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_put_64 - Add a u64 netlink attribute to a socket buffer</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attribute to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type</span>", 
"<span class=\"comment\"> * @value: numeric value</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_put_u64\">nla_put_u64</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, sizeof(<a class=\"id\" href=\"#u64\">u64</a>), &amp;<a class=\"id\" href=\"#value\">value</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_put_string - Add a string netlink attribute to a socket buffer</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attribute to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type</span>", 
"<span class=\"comment\"> * @str: NUL terminated string</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_put_string\">nla_put_string</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#str\">str</a>) + 1, <a class=\"id\" href=\"#str\">str</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_put_flag - Add a flag netlink attribute to a socket buffer</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attribute to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_put_flag\">nla_put_flag</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_put_msecs - Add a msecs netlink attribute to a socket buffer</span>", 
"<span class=\"comment\"> * @skb: socket buffer to add attribute to</span>", 
"<span class=\"comment\"> * @attrtype: attribute type</span>", 
"<span class=\"comment\"> * @jiffies: number of msecs in jiffies</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#nla_put_msecs\">nla_put_msecs</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#attrtype\">attrtype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#jiffies\">jiffies</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, sizeof(<a class=\"id\" href=\"#u64\">u64</a>), &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT\">NLA_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#attrlen\">attrlen</a>, <a class=\"id\" href=\"#data\">data</a>) \\", 
"<span class=\"ts\"/>do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#attrlen\">attrlen</a>, <a class=\"id\" href=\"#data\">data</a>) &lt; 0)) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>; \\", 
"<span class=\"ts\"/>} while(0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/>do { \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> <a class=\"id\" href=\"#__tmp\">__tmp</a> = <a class=\"id\" href=\"#value\">value</a>; \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT\">NLA_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, sizeof(<a class=\"id\" href=\"#type\">type</a>), &amp;<a class=\"id\" href=\"#__tmp\">__tmp</a>); \\", 
"<span class=\"ts\"/>} while(0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_U8\">NLA_PUT_U8</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_U16\">NLA_PUT_U16</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u16\">u16</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_LE16\">NLA_PUT_LE16</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#__le16\">__le16</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_BE16\">NLA_PUT_BE16</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#__be16\">__be16</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#__be32\">__be32</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_U64\">NLA_PUT_U64</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u64\">u64</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_BE64\">NLA_PUT_BE64</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_TYPE\">NLA_PUT_TYPE</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#__be64\">__be64</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_STRING\">NLA_PUT_STRING</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#value\">value</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT\">NLA_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#value\">value</a>) + 1, <a class=\"id\" href=\"#value\">value</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_FLAG\">NLA_PUT_FLAG</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT\">NLA_PUT</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NLA_PUT_MSECS\">NLA_PUT_MSECS</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U64\">NLA_PUT_U64</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#attrtype\">attrtype</a>, <a class=\"id\" href=\"#jiffies_to_msecs\">jiffies_to_msecs</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>))", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_u32 - return payload of u32 attribute</span>", 
"<span class=\"comment\"> * @nla: u32 netlink attribute</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nla_get_u32\">nla_get_u32</a>(const struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>)", 
"{", 
"<span class=\"ts\"/>return *(<a class=\"id\" href=\"#u32\">u32</a> *) <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * nla_get_be32 - return payload of __be32 attribute</span>", 
"<span class=\"comment\"> * @nla: __be32 netlink attribute</span>", 
];
xr_frag_insert('l/08/8d396a2e97864ad82ffa01b53a6ae14721b330.xr', __xr_tmp);
