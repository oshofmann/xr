var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up registers for signal handler */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a> = (unsigned long)<a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a> = (unsigned long)<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = (unsigned long)<a class=\"id\" href=\"#sig\">sig</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#dx\">dx</a> = (unsigned long)&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cx\">cx</a> = (unsigned long)&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ds\">ds</a> = <a class=\"id\" href=\"#__USER_DS\">__USER_DS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#__USER_DS\">__USER_DS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ss\">ss</a> = <a class=\"id\" href=\"#__USER_DS\">__USER_DS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cs\">cs</a> = <a class=\"id\" href=\"#__USER_CS\">__USER_CS</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#else <span class=\"comment\">/* !CONFIG_X86_32 */</span>", 
"static int <a class=\"id\" href=\"#__setup_rt_frame\">__setup_rt_frame</a>(int <a class=\"id\" href=\"#sig\">sig</a>, struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> *<a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_sigframe\">rt_sigframe</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#fp\">fp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#me\">me</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frame\">frame</a> = <a class=\"id\" href=\"#get_sigframe\">get_sigframe</a>(<a class=\"id\" href=\"#ka\">ka</a>, <a class=\"id\" href=\"#regs\">regs</a>, sizeof(struct <a class=\"id\" href=\"#rt_sigframe\">rt_sigframe</a>), &amp;<a class=\"id\" href=\"#fp\">fp</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#frame\">frame</a>, sizeof(*<a class=\"id\" href=\"#frame\">frame</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a> &amp; <a class=\"id\" href=\"#SA_SIGINFO\">SA_SIGINFO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_siginfo_to_user\">copy_siginfo_to_user</a>(&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#info\">info</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_user_try\">put_user_try</a> {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Create the ucontext.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_xsave\">cpu_has_xsave</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#UC_FP_XSTATE\">UC_FP_XSTATE</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_flags\">uc_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(0, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_flags\">uc_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(0, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_link\">uc_link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#sas_ss_sp\">sas_ss_sp</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_stack\">uc_stack</a>.<a class=\"id\" href=\"#ss_sp\">ss_sp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#sas_ss_flags\">sas_ss_flags</a>(<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_stack\">uc_stack</a>.<a class=\"id\" href=\"#ss_flags\">ss_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#me\">me</a>-><a class=\"id\" href=\"#sas_ss_size\">sas_ss_size</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_stack\">uc_stack</a>.<a class=\"id\" href=\"#ss_size\">ss_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#setup_sigcontext\">setup_sigcontext</a>(&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_mcontext\">uc_mcontext</a>, <a class=\"id\" href=\"#fp\">fp</a>, <a class=\"id\" href=\"#regs\">regs</a>, <a class=\"id\" href=\"#set\">set</a>-><a class=\"id\" href=\"#sig\">sig</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__copy_to_user\">__copy_to_user</a>(&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>.<a class=\"id\" href=\"#uc_sigmask\">uc_sigmask</a>, <a class=\"id\" href=\"#set\">set</a>, sizeof(*<a class=\"id\" href=\"#set\">set</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set up to return from userspace.  If provided, use a stub</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   already in userspace.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* x86-64 should always use SA_RESTORER. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a> &amp; <a class=\"id\" href=\"#SA_RESTORER\">SA_RESTORER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_restorer\">sa_restorer</a>, &amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#pretcode\">pretcode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* could use a vstub here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#put_user_catch\">put_user_catch</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up registers for signal handler */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#di\">di</a> = <a class=\"id\" href=\"#sig\">sig</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* In case the signal handler was declared without prototypes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This also works for non SA_SIGINFO handlers because they expect the</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   next argument after the signal number on the stack. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#si\">si</a> = (unsigned long)&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#dx\">dx</a> = (unsigned long)&amp;<a class=\"id\" href=\"#frame\">frame</a>-><a class=\"id\" href=\"#uc\">uc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a> = (unsigned long) <a class=\"id\" href=\"#ka\">ka</a>-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a> = (unsigned long)<a class=\"id\" href=\"#frame\">frame</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up the CS register to run signal handlers in 64-bit mode,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   even if the handler happens to be interrupting 32-bit code. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cs\">cs</a> = <a class=\"id\" href=\"#__USER_CS\">__USER_CS</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Atomically swap in the new signal mask, and wait for a signal.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> int", 
"<a class=\"id\" href=\"#sys_sigsuspend\">sys_sigsuspend</a>(int <a class=\"id\" href=\"#history0\">history0</a>, int <a class=\"id\" href=\"#history1\">history1</a>, <a class=\"id\" href=\"#old_sigset_t\">old_sigset_t</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= <a class=\"id\" href=\"#_BLOCKABLE\">_BLOCKABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#saved_sigmask\">saved_sigmask</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginitset\">siginitset</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#blocked\">blocked</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#recalc_sigpending\">recalc_sigpending</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_restore_sigmask\">set_restore_sigmask</a>();", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> int", 
"<a class=\"id\" href=\"#sys_sigaction\">sys_sigaction</a>(int <a class=\"id\" href=\"#sig\">sig</a>, const struct <a class=\"id\" href=\"#old_sigaction\">old_sigaction</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#act\">act</a>,", 
"<span class=\"ts\"/>      struct <a class=\"id\" href=\"#old_sigaction\">old_sigaction</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#oact\">oact</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#k_sigaction\">k_sigaction</a> <a class=\"id\" href=\"#new_ka\">new_ka</a>, <a class=\"id\" href=\"#old_ka\">old_ka</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#act\">act</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_sigset_t\">old_sigset_t</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#act\">act</a>, sizeof(*<a class=\"id\" href=\"#act\">act</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user_try\">get_user_try</a> {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user_ex\">get_user_ex</a>(<a class=\"id\" href=\"#new_ka\">new_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a>, &amp;<a class=\"id\" href=\"#act\">act</a>-><a class=\"id\" href=\"#sa_handler\">sa_handler</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user_ex\">get_user_ex</a>(<a class=\"id\" href=\"#new_ka\">new_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a>, &amp;<a class=\"id\" href=\"#act\">act</a>-><a class=\"id\" href=\"#sa_flags\">sa_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user_ex\">get_user_ex</a>(<a class=\"id\" href=\"#mask\">mask</a>, &amp;<a class=\"id\" href=\"#act\">act</a>-><a class=\"id\" href=\"#sa_mask\">sa_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user_ex\">get_user_ex</a>(<a class=\"id\" href=\"#new_ka\">new_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_restorer\">sa_restorer</a>, &amp;<a class=\"id\" href=\"#act\">act</a>-><a class=\"id\" href=\"#sa_restorer\">sa_restorer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#get_user_catch\">get_user_catch</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#siginitset\">siginitset</a>(&amp;<a class=\"id\" href=\"#new_ka\">new_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_mask\">sa_mask</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sigaction\">do_sigaction</a>(<a class=\"id\" href=\"#sig\">sig</a>, <a class=\"id\" href=\"#act\">act</a> ? &amp;<a class=\"id\" href=\"#new_ka\">new_ka</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#oact\">oact</a> ? &amp;<a class=\"id\" href=\"#old_ka\">old_ka</a> : <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && <a class=\"id\" href=\"#oact\">oact</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#oact\">oact</a>, sizeof(*<a class=\"id\" href=\"#oact\">oact</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_try\">put_user_try</a> {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#old_ka\">old_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_handler\">sa_handler</a>, &amp;<a class=\"id\" href=\"#oact\">oact</a>-><a class=\"id\" href=\"#sa_handler\">sa_handler</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#old_ka\">old_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_flags\">sa_flags</a>, &amp;<a class=\"id\" href=\"#oact\">oact</a>-><a class=\"id\" href=\"#sa_flags\">sa_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#old_ka\">old_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_mask\">sa_mask</a>.<a class=\"id\" href=\"#sig\">sig</a>[0], &amp;<a class=\"id\" href=\"#oact\">oact</a>-><a class=\"id\" href=\"#sa_mask\">sa_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_user_ex\">put_user_ex</a>(<a class=\"id\" href=\"#old_ka\">old_ka</a>.<a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#sa_restorer\">sa_restorer</a>, &amp;<a class=\"id\" href=\"#oact\">oact</a>-><a class=\"id\" href=\"#sa_restorer\">sa_restorer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#put_user_catch\">put_user_catch</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"long", 
"<a class=\"id\" href=\"#sys_sigaltstack\">sys_sigaltstack</a>(const <a class=\"id\" href=\"#stack_t\">stack_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uss\">uss</a>, <a class=\"id\" href=\"#stack_t\">stack_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uoss\">uoss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
];
xr_frag_insert('l/09/998990e3e01985b3422bffc546ca8ae36acd5e.xr', __xr_tmp);
