var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * lib/plist.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Descending-priority-sorted double-linked list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) 2002-2003 Intel Corp</span>", 
"<span class=\"comment\"> * Inaky Perez-Gonzalez &lt;inaky.perez-gonzalez@intel.com&gt;.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 2001-2005 (c) MontaVista Software, Inc.</span>", 
"<span class=\"comment\"> * Daniel Walker &lt;dwalker@mvista.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) 2005 Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Simplifications of the original code by</span>", 
"<span class=\"comment\"> * Oleg Nesterov &lt;oleg@tv-sign.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Licensed under the FSF's GNU Public License v2 or later.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Based on simple lists (include/linux/list.h).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains the add / del functions which are considered to</span>", 
"<span class=\"comment\"> * be too large to inline. See include/linux/plist.h for further</span>", 
"<span class=\"comment\"> * information.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_PI_LIST\">CONFIG_DEBUG_PI_LIST</a>", 
"", 
"static void <a class=\"id\" href=\"#plist_check_prev_next\">plist_check_prev_next</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#prev\">prev</a> != <a class=\"id\" href=\"#p\">p</a> || <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"top: %p, n: %p, p: %p\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"prev: %p, n: %p, p: %p\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"next: %p, n: %p, p: %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#prev\">prev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#plist_check_list\">plist_check_list</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#top\">top</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#top\">top</a>, *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#top\">top</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_check_prev_next\">plist_check_prev_next</a>(<a class=\"id\" href=\"#top\">top</a>, <a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#top\">top</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#plist_check_prev_next\">plist_check_prev_next</a>(<a class=\"id\" href=\"#top\">top</a>, <a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#plist_check_head\">plist_check_head</a>(struct <a class=\"id\" href=\"#plist_head\">plist_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#rawlock\">rawlock</a> && !<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#spinlock\">spinlock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#rawlock\">rawlock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_SMP\">WARN_ON_SMP</a>(!<a class=\"id\" href=\"#raw_spin_is_locked\">raw_spin_is_locked</a>(<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#rawlock\">rawlock</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#spinlock\">spinlock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_SMP\">WARN_ON_SMP</a>(!<a class=\"id\" href=\"#spin_is_locked\">spin_is_locked</a>(<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#spinlock\">spinlock</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_check_list\">plist_check_list</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#prio_list\">prio_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_check_list\">plist_check_list</a>(&amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#node_list\">node_list</a>);", 
"}", 
"", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#plist_check_head\">plist_check_head</a>(<a class=\"id\" href=\"#h\">h</a>)<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * plist_add - add @node to @head</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @node:<span class=\"ts\"/>&amp;struct plist_node pointer</span>", 
"<span class=\"comment\"> * @head:<span class=\"ts\"/>&amp;struct plist_head pointer</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#plist_add\">plist_add</a>(struct <a class=\"id\" href=\"#plist_node\">plist_node</a> *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#plist_head\">plist_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#plist_node\">plist_node</a> *<a class=\"id\" href=\"#iter\">iter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_check_head\">plist_check_head</a>(<a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#plist_node_empty\">plist_node_empty</a>(<a class=\"id\" href=\"#node\">node</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#iter\">iter</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#prio_list\">prio_list</a>, <a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#prio\">prio</a> &lt; <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#prio\">prio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lt_prio\">lt_prio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#prio\">prio</a> == <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#prio\">prio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>.<a class=\"id\" href=\"#next\">next</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#plist_node\">plist_node</a>, <a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#eq_prio\">eq_prio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#lt_prio\">lt_prio</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>, &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>);", 
"<a class=\"id\" href=\"#eq_prio\">eq_prio</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#node_list\">node_list</a>, &amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#node_list\">node_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_check_head\">plist_check_head</a>(<a class=\"id\" href=\"#head\">head</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * plist_del - Remove a @node from plist.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @node:<span class=\"ts\"/>&amp;struct plist_node pointer - entry to be removed</span>", 
"<span class=\"comment\"> * @head:<span class=\"ts\"/>&amp;struct plist_head pointer - list head</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#plist_del\">plist_del</a>(struct <a class=\"id\" href=\"#plist_node\">plist_node</a> *<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#plist_head\">plist_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_check_head\">plist_check_head</a>(<a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#plist_node\">plist_node</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#plist_first\">plist_first</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#plist\">plist</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_move_tail\">list_move_tail</a>(&amp;<a class=\"id\" href=\"#next\">next</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>, &amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#prio_list\">prio_list</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#node_list\">node_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_check_head\">plist_check_head</a>(<a class=\"id\" href=\"#head\">head</a>);", 
"}", 
];
xr_frag_insert('l/09/9a8a741fa3752fc45101f09b27afcdd0f8b1d0.xr', __xr_tmp);
