var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>fs/proc/vmcore.c Interface for accessing the crash</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> dump from the system's previous life.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Heavily borrowed from fs/proc/kcore.c</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Created by: Hariprasad Nellitheertha (hari@in.ibm.com)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Copyright (C) IBM Corporation, 2004. All rights reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elf\">elf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elfcore\">elfcore</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crash_dump\">crash_dump</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* List representing chunks of contiguous memory areas and their offsets in</span>", 
"<span class=\"comment\"> * vmcore file.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#vmcore_list\">vmcore_list</a>);", 
"", 
"<span class=\"comment\">/* Stores the pointer to the buffer containing kernel elf core headers. */</span>", 
"static char *<a class=\"id\" href=\"#elfcorebuf\">elfcorebuf</a>;", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#elfcorebuf_sz\">elfcorebuf_sz</a>;", 
"", 
"<span class=\"comment\">/* Total size of vmcore file. */</span>", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#vmcore_size\">vmcore_size</a>;", 
"", 
"static struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#proc_vmcore\">proc_vmcore</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"comment\">/* Reads a page from the oldmem device from given offset. */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#read_from_oldmem\">read_from_oldmem</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#ppos\">ppos</a>, int <a class=\"id\" href=\"#userbuf\">userbuf</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#read\">read</a> = 0, <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (unsigned long)(*<a class=\"id\" href=\"#ppos\">ppos</a> % <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = (unsigned long)(*<a class=\"id\" href=\"#ppos\">ppos</a> / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_bytes\">nr_bytes</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_bytes\">nr_bytes</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#copy_oldmem_page\">copy_oldmem_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#userbuf\">userbuf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read\">read</a> += <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#pfn\">pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#read\">read</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Maps vmcore file offset to respective physical address in memroy. */</span>", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#map_offset_to_paddr\">map_offset_to_paddr</a>(<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#vc_list\">vc_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vmcore\">vmcore</a> **<a class=\"id\" href=\"#m_ptr\">m_ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vmcore\">vmcore</a> *<a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#paddr\">paddr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#vc_list\">vc_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= <a class=\"id\" href=\"#start\">start</a> && <a class=\"id\" href=\"#offset\">offset</a> <= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#paddr\">paddr</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#paddr\">paddr</a> + <a class=\"id\" href=\"#offset\">offset</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#m_ptr\">m_ptr</a> = <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#paddr\">paddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#m_ptr\">m_ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Read from the ELF header and then the crash dump. On error, negative value is</span>", 
"<span class=\"comment\"> * returned otherwise number of bytes read are returned.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#read_vmcore\">read_vmcore</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#fpos\">fpos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#acc\">acc</a> = 0, <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#tsz\">tsz</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#nr_bytes\">nr_bytes</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vmcore\">vmcore</a> *<a class=\"id\" href=\"#curr_m\">curr_m</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buflen\">buflen</a> == 0 || *<a class=\"id\" href=\"#fpos\">fpos</a> >= <a class=\"id\" href=\"#vmcore_size\">vmcore_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* trim buflen to not go beyond EOF */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buflen\">buflen</a> &gt; <a class=\"id\" href=\"#vmcore_size\">vmcore_size</a> - *<a class=\"id\" href=\"#fpos\">fpos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#vmcore_size\">vmcore_size</a> - *<a class=\"id\" href=\"#fpos\">fpos</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Read ELF core header */</span>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#fpos\">fpos</a> &lt; <a class=\"id\" href=\"#elfcorebuf_sz\">elfcorebuf_sz</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsz\">tsz</a> = <a class=\"id\" href=\"#elfcorebuf_sz\">elfcorebuf_sz</a> - *<a class=\"id\" href=\"#fpos\">fpos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buflen\">buflen</a> &lt; <a class=\"id\" href=\"#tsz\">tsz</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsz\">tsz</a> = <a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#elfcorebuf\">elfcorebuf</a> + *<a class=\"id\" href=\"#fpos\">fpos</a>, <a class=\"id\" href=\"#tsz\">tsz</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buflen\">buflen</a> -= <a class=\"id\" href=\"#tsz\">tsz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#fpos\">fpos</a> += <a class=\"id\" href=\"#tsz\">tsz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> += <a class=\"id\" href=\"#tsz\">tsz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acc\">acc</a> += <a class=\"id\" href=\"#tsz\">tsz</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* leave now if filled buffer already */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buflen\">buflen</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#acc\">acc</a>;", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/09/a92a9cedd0c670f2e889d9aea87259308cab62.xr', __xr_tmp);
