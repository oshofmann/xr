var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_jbd2.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Stephen C. Tweedie &lt;sct@redhat.com&gt;, 1999</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 1998--1999 Red Hat corp --- All Rights Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is part of the Linux kernel and is made available under</span>", 
"<span class=\"comment\"> * the terms of the GNU General Public License, version 2, or at your</span>", 
"<span class=\"comment\"> * option, any later version, incorporated herein by reference.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Ext4-specific journaling extensions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_EXT4_JBD2_H\">_EXT4_JBD2_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_EXT4_JBD2_H\">_EXT4_JBD2_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_JOURNAL\">EXT4_JOURNAL</a>(<a class=\"id\" href=\"#inode\">inode</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>((<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"", 
"<span class=\"comment\">/* Define the number of blocks we need to account to a transaction to</span>", 
"<span class=\"comment\"> * modify one block of data.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We may have to touch one inode, one bitmap buffer, up to three</span>", 
"<span class=\"comment\"> * indirection blocks, the group and superblock summaries, and the data</span>", 
"<span class=\"comment\"> * block to complete the transaction.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For extents-enabled fs we may have to allocate and modify up to</span>", 
"<span class=\"comment\"> * 5 levels of tree + root which are stored in the inode. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_SINGLEDATA_TRANS_BLOCKS\">EXT4_SINGLEDATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_EXTENTS\">EXT4_FEATURE_INCOMPAT_EXTENTS</a>)   \\", 
"<span class=\"ts\"/> ? 27U : 8U)", 
"", 
"<span class=\"comment\">/* Extended attribute operations touch at most two data buffers,</span>", 
"<span class=\"comment\"> * two bitmap buffers, and two group summaries, in addition to the inode</span>", 
"<span class=\"comment\"> * and the superblock, which are already accounted for. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_XATTR_TRANS_BLOCKS\">EXT4_XATTR_TRANS_BLOCKS</a><span class=\"ts\"/><span class=\"ts\"/>6U", 
"", 
"<span class=\"comment\">/* Define the minimum size for a transaction which modifies data.  This</span>", 
"<span class=\"comment\"> * needs to take into account the fact that we may end up modifying two</span>", 
"<span class=\"comment\"> * quota files too (one for the group, one for the user quota).  The</span>", 
"<span class=\"comment\"> * superblock only gets updated once, of course, so don't bother</span>", 
"<span class=\"comment\"> * counting that again for the quota updates. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DATA_TRANS_BLOCKS\">EXT4_DATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SINGLEDATA_TRANS_BLOCKS\">EXT4_SINGLEDATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) + \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_XATTR_TRANS_BLOCKS\">EXT4_XATTR_TRANS_BLOCKS</a> - 2 + \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_MAXQUOTAS_TRANS_BLOCKS\">EXT4_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define the number of metadata blocks we need to account to modify data.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This include super block, inode block, quota blocks and xattr blocks</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_META_TRANS_BLOCKS\">EXT4_META_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_XATTR_TRANS_BLOCKS\">EXT4_XATTR_TRANS_BLOCKS</a> + \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_MAXQUOTAS_TRANS_BLOCKS\">EXT4_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"", 
"<span class=\"comment\">/* Delete operations potentially hit one directory's namespace plus an</span>", 
"<span class=\"comment\"> * entire inode, plus arbitrary amounts of bitmap/indirection data.  Be</span>", 
"<span class=\"comment\"> * generous.  We can grow the delete transaction later if necessary. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_DELETE_TRANS_BLOCKS\">EXT4_DELETE_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)<span class=\"ts\"/>(2 * <a class=\"id\" href=\"#EXT4_DATA_TRANS_BLOCKS\">EXT4_DATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) + 64)", 
"", 
"<span class=\"comment\">/* Define an arbitrary limit for the amount of data we will anticipate</span>", 
"<span class=\"comment\"> * writing to any given transaction.  For unbounded transactions such as</span>", 
"<span class=\"comment\"> * write(2) and truncate(2) we can write more than this, but we always</span>", 
"<span class=\"comment\"> * start off at the maximum transaction size and grow the transaction</span>", 
"<span class=\"comment\"> * optimistically as we go. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAX_TRANS_DATA\">EXT4_MAX_TRANS_DATA</a><span class=\"ts\"/><span class=\"ts\"/>64U", 
"", 
"<span class=\"comment\">/* We break up a large truncate or write transaction once the handle's</span>", 
"<span class=\"comment\"> * buffer credits gets this low, we need either to extend the</span>", 
"<span class=\"comment\"> * transaction or to start a new one.  Reserve enough space here for</span>", 
"<span class=\"comment\"> * inode, bitmap, superblock, group and indirection updates for at least</span>", 
"<span class=\"comment\"> * one block, plus two quota updates.  Quota allocations are not</span>", 
"<span class=\"comment\"> * needed. */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_RESERVE_TRANS_BLOCKS\">EXT4_RESERVE_TRANS_BLOCKS</a><span class=\"ts\"/>12U", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_INDEX_EXTRA_TRANS_BLOCKS\">EXT4_INDEX_EXTRA_TRANS_BLOCKS</a><span class=\"ts\"/>8", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"comment\">/* Amount of blocks needed for quota update - we know that the structure was</span>", 
"<span class=\"comment\"> * allocated so we need to update only inode+data */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_QUOTA_TRANS_BLOCKS\">EXT4_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>) ? 2 : 0)", 
"<span class=\"comment\">/* Amount of blocks needed for quota insert/delete - we do some block writes</span>", 
"<span class=\"comment\"> * but inode, sb and group updates are done only once */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_QUOTA_INIT_BLOCKS\">EXT4_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>) ? (<a class=\"id\" href=\"#DQUOT_INIT_ALLOC\">DQUOT_INIT_ALLOC</a>*\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SINGLEDATA_TRANS_BLOCKS\">EXT4_SINGLEDATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)-3)+3+<a class=\"id\" href=\"#DQUOT_INIT_REWRITE\">DQUOT_INIT_REWRITE</a>) : 0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_QUOTA_DEL_BLOCKS\">EXT4_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>) ? (<a class=\"id\" href=\"#DQUOT_DEL_ALLOC\">DQUOT_DEL_ALLOC</a>*\\", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_SINGLEDATA_TRANS_BLOCKS\">EXT4_SINGLEDATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>)-3)+3+<a class=\"id\" href=\"#DQUOT_DEL_REWRITE\">DQUOT_DEL_REWRITE</a>) : 0)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_QUOTA_TRANS_BLOCKS\">EXT4_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_QUOTA_INIT_BLOCKS\">EXT4_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_QUOTA_DEL_BLOCKS\">EXT4_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAXQUOTAS_TRANS_BLOCKS\">EXT4_MAXQUOTAS_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>*<a class=\"id\" href=\"#EXT4_QUOTA_TRANS_BLOCKS\">EXT4_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAXQUOTAS_INIT_BLOCKS\">EXT4_MAXQUOTAS_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>*<a class=\"id\" href=\"#EXT4_QUOTA_INIT_BLOCKS\">EXT4_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_MAXQUOTAS_DEL_BLOCKS\">EXT4_MAXQUOTAS_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>) (<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>*<a class=\"id\" href=\"#EXT4_QUOTA_DEL_BLOCKS\">EXT4_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#sb\">sb</a>))", 
"", 
"int", 
"<a class=\"id\" href=\"#ext4_mark_iloc_dirty\">ext4_mark_iloc_dirty</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> *<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On success, We end up with an outstanding reference count against</span>", 
"<span class=\"comment\"> * iloc-&gt;bh.  This _must_ be cleaned up later.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ext4_reserve_inode_write\">ext4_reserve_inode_write</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> *<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"", 
"int <a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wrapper functions with which ext4 calls into JBD.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ext4_journal_abort_handle\">ext4_journal_abort_handle</a>(const char *<a class=\"id\" href=\"#caller\">caller</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#err_fn\">err_fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext4_journal_get_undo_access\">__ext4_journal_get_undo_access</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext4_journal_get_write_access\">__ext4_journal_get_write_access</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext4_forget\">__ext4_forget</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#is_metadata\">is_metadata</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext4_journal_get_create_access\">__ext4_journal_get_create_access</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext4_handle_dirty_metadata\">__ext4_handle_dirty_metadata</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"int <a class=\"id\" href=\"#__ext4_handle_dirty_super\">__ext4_handle_dirty_super</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_journal_get_undo_access\">ext4_journal_get_undo_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_journal_get_undo_access\">__ext4_journal_get_undo_access</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#bh\">bh</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_journal_get_write_access\">__ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#bh\">bh</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_forget\">ext4_forget</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#is_metadata\">is_metadata</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#block_nr\">block_nr</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_forget\">__ext4_forget</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#is_metadata\">is_metadata</a>), (<a class=\"id\" href=\"#inode\">inode</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#bh\">bh</a>), (<a class=\"id\" href=\"#block_nr\">block_nr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_journal_get_create_access\">ext4_journal_get_create_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_journal_get_create_access\">__ext4_journal_get_create_access</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#bh\">bh</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_handle_dirty_metadata\">__ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#inode\">inode</a>), \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#bh\">bh</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_handle_dirty_super\">ext4_handle_dirty_super</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_handle_dirty_super\">__ext4_handle_dirty_super</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#handle\">handle</a>), (<a class=\"id\" href=\"#sb\">sb</a>))", 
"", 
"<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#ext4_journal_start_sb\">ext4_journal_start_sb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"int <a class=\"id\" href=\"#__ext4_journal_stop\">__ext4_journal_stop</a>(const char *<a class=\"id\" href=\"#where\">where</a>, unsigned int <a class=\"id\" href=\"#line\">line</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_NOJOURNAL_MAX_REF_COUNT\">EXT4_NOJOURNAL_MAX_REF_COUNT</a> ((unsigned long) 4096)", 
"", 
"<span class=\"comment\">/* Note:  Do not use this for NULL handles.  This is only to determine if</span>", 
"<span class=\"comment\"> * a properly allocated handle is using a journal or not. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#handle\">handle</a> &lt; <a class=\"id\" href=\"#EXT4_NOJOURNAL_MAX_REF_COUNT\">EXT4_NOJOURNAL_MAX_REF_COUNT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_handle_sync\">ext4_handle_sync</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_sync\">h_sync</a> = 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_handle_release_buffer\">ext4_handle_release_buffer</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_release_buffer\">jbd2_journal_release_buffer</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_handle_is_aborted\">ext4_handle_is_aborted</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#is_handle_aborted\">is_handle_aborted</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_handle_has_enough_credits\">ext4_handle_has_enough_credits</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#needed\">needed</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>) && <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_buffer_credits\">h_buffer_credits</a> &lt; <a class=\"id\" href=\"#needed\">needed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_journal_release_buffer\">ext4_journal_release_buffer</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_release_buffer\">jbd2_journal_release_buffer</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_journal_start_sb\">ext4_journal_start_sb</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ext4_journal_stop\">__ext4_journal_stop</a>(<a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, (<a class=\"id\" href=\"#handle\">handle</a>))", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#ext4_journal_current_handle\">ext4_journal_current_handle</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal_current_handle\">journal_current_handle</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_journal_extend\">ext4_journal_extend</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_extend\">jbd2_journal_extend</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_journal_restart\">ext4_journal_restart</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_restart\">jbd2_journal_restart</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_journal_blocks_per_page\">ext4_journal_blocks_per_page</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_JOURNAL\">EXT4_JOURNAL</a>(<a class=\"id\" href=\"#inode\">inode</a>) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_blocks_per_page\">jbd2_journal_blocks_per_page</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_journal_force_commit\">ext4_journal_force_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_force_commit\">jbd2_journal_force_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_jbd2_file_inode\">ext4_jbd2_file_inode</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_file_inode\">jbd2_journal_file_inode</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#jinode\">jinode</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_update_inode_fsync_trans\">ext4_update_inode_fsync_trans</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#datasync\">datasync</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode_info\">ext4_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_handle_valid\">ext4_handle_valid</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_sync_tid\">i_sync_tid</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#datasync\">datasync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_datasync_tid\">i_datasync_tid</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* super.c */</span>", 
"int <a class=\"id\" href=\"#ext4_force_commit\">ext4_force_commit</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ext4_should_journal_data\">ext4_should_journal_data</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_JOURNAL\">EXT4_JOURNAL</a>(<a class=\"id\" href=\"#inode\">inode</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_DATA\">EXT4_MOUNT_JOURNAL_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_JOURNAL_DATA\">EXT4_INODE_JOURNAL_DATA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
];
xr_frag_insert('l/0b/94cc72873b9f63b776ec36c3c7469c51c82fcb.xr', __xr_tmp);
