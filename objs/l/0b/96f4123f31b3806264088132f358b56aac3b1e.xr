var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PF_INET6 socket protocol family</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Adapted from linux/net/ipv4/af_inet.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>piggy, Karl Knutson<span class=\"ts\"/>:<span class=\"ts\"/>Socket protocol table</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Hideaki YOSHIFUJI<span class=\"ts\"/>:<span class=\"ts\"/>sin6_scope_id support</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Arnaldo Melo<span class=\"ts\"/><span class=\"ts\"/>: <span class=\"ts\"/>check proc_net_create return, cleanups</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmpv6\">icmpv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv6\">netfilter_ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udplite\">udplite</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipip\">ipip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#transp_v6\">transp_v6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_TUNNEL\">CONFIG_IPV6_TUNNEL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_tunnel\">ip6_tunnel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute6\">mroute6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Cast of dozens\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"IPv6 protocol stack for Linux\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"", 
"<span class=\"comment\">/* The inetsw6 table contains everything that inet6_create needs to</span>", 
"<span class=\"comment\"> * build a new socket.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#inetsw6\">inetsw6</a>[<a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a>];", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#inetsw6_lock\">inetsw6_lock</a>);", 
"", 
"struct <a class=\"id\" href=\"#ipv6_params\">ipv6_params</a> <a class=\"id\" href=\"#ipv6_defaults\">ipv6_defaults</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#autoconf\">autoconf</a> = 1,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#disable_ipv6_mod\">disable_ipv6_mod</a> = 0;", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#disable\">disable</a>, <a class=\"id\" href=\"#disable_ipv6_mod\">disable_ipv6_mod</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#disable\">disable</a>, \"Disable IPv6 module such that it is non-functional\");", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a>, <a class=\"id\" href=\"#ipv6_defaults\">ipv6_defaults</a>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a>, \"Disable IPv6 on all interfaces\");", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#autoconf\">autoconf</a>, <a class=\"id\" href=\"#ipv6_defaults\">ipv6_defaults</a>.<a class=\"id\" href=\"#autoconf\">autoconf</a>, int, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#autoconf\">autoconf</a>, \"Enable IPv6 address autoconfiguration on all interfaces\");", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#inet6_sk_generic\">inet6_sk_generic</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#obj_size\">obj_size</a> - sizeof(struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a>);", 
"", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *)(((<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#sk\">sk</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet6_create\">inet6_create</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#kern\">kern</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#answer\">answer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proto\">proto</a> *<a class=\"id\" href=\"#answer_prot\">answer_prot</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#answer_flags\">answer_flags</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#answer_no_check\">answer_no_check</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#try_loading_module\">try_loading_module</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_DGRAM\">SOCK_DGRAM</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#inet_ehash_secret\">inet_ehash_secret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#build_ehash_secret\">build_ehash_secret</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Look for the requested type/protocol pair. */</span>", 
"<a class=\"id\" href=\"#lookup_protocol\">lookup_protocol</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ESOCKTNOSUPPORT\">ESOCKTNOSUPPORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#answer\">answer</a>, &amp;<a class=\"id\" href=\"#inetsw6\">inetsw6</a>[<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check the non-wild match. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> != <a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for the two wild cases. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a> == <a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a> == <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#try_loading_module\">try_loading_module</a> &lt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Be more specific, e.g. net-pf-10-proto-132-type-1</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (net-pf-PF_INET6-proto-IPPROTO_SCTP-type-SOCK_STREAM)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#try_loading_module\">try_loading_module</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"net-pf-%d-proto-%d-type-%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Fall back to generic, e.g. net-pf-10-proto-132</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (net-pf-PF_INET6-proto-IPPROTO_SCTP)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"net-pf-%d-proto-%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lookup_protocol\">lookup_protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> && !<a class=\"id\" href=\"#kern\">kern</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_RAW\">CAP_NET_RAW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer_prot\">answer_prot</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#prot\">prot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer_no_check\">answer_no_check</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#no_check\">no_check</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer_flags\">answer_flags</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#answer_prot\">answer_prot</a>-><a class=\"id\" href=\"#slab\">slab</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_alloc\">sk_alloc</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#answer_prot\">answer_prot</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_init_data\">sock_init_data</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_no_check\">sk_no_check</a> = <a class=\"id\" href=\"#answer_no_check\">answer_no_check</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_PROTOSW_REUSE\">INET_PROTOSW_REUSE</a> &amp; <a class=\"id\" href=\"#answer_flags\">answer_flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#is_icsk\">is_icsk</a> = (<a class=\"id\" href=\"#INET_PROTOSW_ICSK\">INET_PROTOSW_ICSK</a> &amp; <a class=\"id\" href=\"#answer_flags\">answer_flags</a>) != 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> == <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a> = <a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IPPROTO_RAW\">IPPROTO_RAW</a> == <a class=\"id\" href=\"#protocol\">protocol</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#hdrincl\">hdrincl</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_destruct\">sk_destruct</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#inet_sock_destruct\">inet_sock_destruct</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#protocol\">protocol</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a><span class=\"ts\"/>= <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#prot\">prot</a>-><a class=\"id\" href=\"#backlog_rcv\">backlog_rcv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#pinet6\">pinet6</a> = <a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk_generic\">inet6_sk_generic</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a><span class=\"ts\"/>= -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#mcast_hops\">mcast_hops</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_DEFAULT_MCASTHOPS\">IPV6_DEFAULT_MCASTHOPS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#mc_loop\">mc_loop</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IPV6_PMTUDISC_WANT\">IPV6_PMTUDISC_WANT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6only\">ipv6only</a><span class=\"ts\"/>= <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#bindv6only\">bindv6only</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Init the ipv4 part of the socket since we can have sockets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * using v6 API for ipv4.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#uc_ttl\">uc_ttl</a><span class=\"ts\"/>= -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_loop\">mc_loop</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_ttl\">mc_ttl</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_index\">mc_index</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv4_config\">ipv4_config</a>.<a class=\"id\" href=\"#no_pmtu_disc\">no_pmtu_disc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> = <a class=\"id\" href=\"#IP_PMTUDISC_DONT\">IP_PMTUDISC_DONT</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> = <a class=\"id\" href=\"#IP_PMTUDISC_WANT\">IP_PMTUDISC_WANT</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Increment only the relevant sk_prot-&gt;socks debug field, this changes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the previous behaviour of incrementing both the equivalent to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * answer-&gt;prot-&gt;socks (inet6_sock_nr) and inet_sock_nr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This allows better debug granularity as we'll know exactly how many</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * UDPv6, TCPv6, etc socks were allocated, not the sum of all IPv6</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transport protocol socks. -acme</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_refcnt_debug_inc\">sk_refcnt_debug_inc</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It assumes that any protocol which allows</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the user to assign a number at socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * creation time automatically shares.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#hash\">hash</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#init\">init</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#init\">init</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_common_release\">sk_common_release</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* bind for INET6 API */</span>", 
"int <a class=\"id\" href=\"#inet6_bind\">inet6_bind</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#addr\">addr</a>=(struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)<a class=\"id\" href=\"#uaddr\">uaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#v4addr\">v4addr</a> = 0;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#snum\">snum</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the socket has its own bind function then use it. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#bind\">bind</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#bind\">bind</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> &lt; <a class=\"id\" href=\"#SIN6_LEN_RFC2133\">SIN6_LEN_RFC2133</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>) && <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#SOCK_STREAM\">SOCK_STREAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_port\">sin6_port</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snum\">snum</a> && <a class=\"id\" href=\"#snum\">snum</a> &lt; <a class=\"id\" href=\"#PROT_SOCK\">PROT_SOCK</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_BIND_SERVICE\">CAP_NET_BIND_SERVICE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check these errors (active socket, double bind). */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a> || <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if the address belongs to the host. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Binding to v4-mapped address on a v6-only socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * makes no sense</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6only\">ipv6only</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reproduce AF_INET checks to make the bindings consitant */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v4addr\">v4addr</a> = <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> = <a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#v4addr\">v4addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysctl_ip_nonlocal_bind\">sysctl_ip_nonlocal_bind</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#freebind\">freebind</a> || <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#transparent\">transparent</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#v4addr\">v4addr</a> != <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#INADDR_ANY\">INADDR_ANY</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> != <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> != <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> != <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> != <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> >= sizeof(struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Override any existing binding, if another one</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * is supplied by user.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> = <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Binding to link-local address requires an interface */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ipv4 addr of the socket is invalid.  Only the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * unspecified and mapped address have a v4 equivalent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v4addr\">v4addr</a> = <a class=\"id\" href=\"#LOOPBACK4_IPV6\">LOOPBACK4_IPV6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>))<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_chk_addr\">ipv6_chk_addr</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dev\">dev</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a> = <a class=\"id\" href=\"#v4addr\">v4addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a> = <a class=\"id\" href=\"#v4addr\">v4addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure we are allowed to bind here. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#get_port\">get_port</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#snum\">snum</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_reset_saddr\">inet_reset_saddr</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> != <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> |= <a class=\"id\" href=\"#SOCK_BINDADDR_LOCK\">SOCK_BINDADDR_LOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> != <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#ipv6only\">ipv6only</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snum\">snum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> |= <a class=\"id\" href=\"#SOCK_BINDPORT_LOCK\">SOCK_BINDPORT_LOCK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet6_bind\">inet6_bind</a>);", 
"", 
"int <a class=\"id\" href=\"#inet6_release\">inet6_release</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free mc lists */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_sock_mc_close\">ipv6_sock_mc_close</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free ac lists */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_sock_ac_close\">ipv6_sock_ac_close</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inet_release\">inet_release</a>(<a class=\"id\" href=\"#sock\">sock</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet6_release\">inet6_release</a>);", 
"", 
"void <a class=\"id\" href=\"#inet6_destroy_sock\">inet6_destroy_sock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_txoptions\">ipv6_txoptions</a> *<a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Release rx options */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#xchg\">xchg</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#pktoptions\">pktoptions</a>, <a class=\"id\" href=\"#NULL\">NULL</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#xchg\">xchg</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxpmtu\">rxpmtu</a>, <a class=\"id\" href=\"#NULL\">NULL</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free flowlabels */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl6_free_socklist\">fl6_free_socklist</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free tx options */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#xchg\">xchg</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#NULL\">NULL</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_kfree_s\">sock_kfree_s</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#opt\">opt</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#tot_len\">tot_len</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet6_destroy_sock\">inet6_destroy_sock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This does both peername and sockname.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#inet6_getname\">inet6_getname</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> int *<a class=\"id\" href=\"#uaddr_len\">uaddr_len</a>, int <a class=\"id\" href=\"#peer\">peer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#sin\">sin</a>=(struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)<a class=\"id\" href=\"#uaddr\">uaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_family\">sin6_family</a> = <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_flowinfo\">sin6_flowinfo</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer\">peer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTCONN\">ENOTCONN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp; (<a class=\"id\" href=\"#TCPF_CLOSE\">TCPF_CLOSE</a> | <a class=\"id\" href=\"#TCPF_SYN_SENT\">TCPF_SYN_SENT</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#peer\">peer</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTCONN\">ENOTCONN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_port\">sin6_port</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>, &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#sndflow\">sndflow</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_flowinfo\">sin6_flowinfo</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#flow_label\">flow_label</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>, &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>, &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_port\">sin6_port</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#uaddr_len\">uaddr_len</a> = sizeof(*<a class=\"id\" href=\"#sin\">sin</a>);", 
"<span class=\"ts\"/>return(0);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet6_getname\">inet6_getname</a>);", 
"", 
"int <a class=\"id\" href=\"#inet6_ioctl\">inet6_ioctl</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#cmd\">cmd</a>)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGSTAMP\">SIOCGSTAMP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sock_get_timestamp\">sock_get_timestamp</a>(<a class=\"id\" href=\"#sk\">sk</a>, (struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGSTAMPNS\">SIOCGSTAMPNS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sock_get_timestampns\">sock_get_timestampns</a>(<a class=\"id\" href=\"#sk\">sk</a>, (struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCADDRT\">SIOCADDRT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCDELRT\">SIOCDELRT</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return(<a class=\"id\" href=\"#ipv6_route_ioctl\">ipv6_route_ioctl</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>));", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFADDR\">SIOCSIFADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addrconf_add_ifaddr\">addrconf_add_ifaddr</a>(<a class=\"id\" href=\"#net\">net</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCDIFADDR\">SIOCDIFADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addrconf_del_ifaddr\">addrconf_del_ifaddr</a>(<a class=\"id\" href=\"#net\">net</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSIFDSTADDR\">SIOCSIFDSTADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addrconf_set_dstaddr\">addrconf_set_dstaddr</a>(<a class=\"id\" href=\"#net\">net</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*NOTREACHED*/</span>", 
"<span class=\"ts\"/>return(0);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet6_ioctl\">inet6_ioctl</a>);", 
"", 
"const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#inet6_stream_ops\">inet6_stream_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_release\">inet6_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_bind\">inet6_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_stream_connect\">inet_stream_connect</a>,<span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_socketpair\">sock_no_socketpair</a>,<span class=\"ts\"/><span class=\"comment\">/* a do nothing<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_accept\">inet_accept</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_getname\">inet6_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_poll\">tcp_poll</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_ioctl\">inet6_ioctl</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* must change  */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_listen\">inet_listen</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_shutdown\">inet_shutdown</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_setsockopt\">sock_common_setsockopt</a>,<span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_getsockopt\">sock_common_getsockopt</a>,<span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendmsg\">inet_sendmsg</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_recvmsg\">inet_recvmsg</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_mmap\">sock_no_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendpage\">inet_sendpage</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_read\">splice_read</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#tcp_splice_read\">tcp_splice_read</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_setsockopt\">compat_sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_getsockopt\">compat_sock_common_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#inet6_dgram_ops\">inet6_dgram_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_release\">inet6_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bind\">bind</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_bind\">inet6_bind</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_dgram_connect\">inet_dgram_connect</a>,<span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#socketpair\">socketpair</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_socketpair\">sock_no_socketpair</a>,<span class=\"ts\"/><span class=\"comment\">/* a do nothing<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#accept\">accept</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_accept\">sock_no_accept</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* a do nothing<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getname\">getname</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_getname\">inet6_getname</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#udp_poll\">udp_poll</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet6_ioctl\">inet6_ioctl</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* must change  */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#listen\">listen</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_listen\">sock_no_listen</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#shutdown\">shutdown</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_shutdown\">inet_shutdown</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setsockopt\">setsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_setsockopt\">sock_common_setsockopt</a>,<span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#getsockopt\">getsockopt</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_common_getsockopt\">sock_common_getsockopt</a>,<span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendmsg\">sendmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sendmsg\">inet_sendmsg</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#recvmsg\">recvmsg</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_recvmsg\">inet_recvmsg</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ok<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_mmap\">sock_no_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sendpage\">sendpage</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#sock_no_sendpage\">sock_no_sendpage</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_setsockopt\">compat_setsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_setsockopt\">compat_sock_common_setsockopt</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_getsockopt\">compat_getsockopt</a> = <a class=\"id\" href=\"#compat_sock_common_getsockopt\">compat_sock_common_getsockopt</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#net_proto_family\">net_proto_family</a> <a class=\"id\" href=\"#inet6_family_ops\">inet6_family_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> = <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#create\">create</a> = <a class=\"id\" href=\"#inet6_create\">inet6_create</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#inet6_register_protosw\">inet6_register_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#lh\">lh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#answer\">answer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#last_perm\">last_perm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw6_lock\">inetsw6_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_illegal\">out_illegal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are trying to override a permanent protocol, bail. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer\">answer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_perm\">last_perm</a> = &amp;<a class=\"id\" href=\"#inetsw6\">inetsw6</a>[<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#lh\">lh</a>, &amp;<a class=\"id\" href=\"#inetsw6\">inetsw6</a>[<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#answer\">answer</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#lh\">lh</a>, struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check only the non-wild match. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a> &amp; <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_perm\">last_perm</a> = <a class=\"id\" href=\"#lh\">lh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#answer\">answer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#answer\">answer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_permanent\">out_permanent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the new entry after the last permanent entry if any, so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the new entry does not override a permanent entry when matched with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a wild-card protocol. But it is allowed to override any existing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * non-permanent entry.  This means that when we remove this entry, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * system automatically returns to the old behavior.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_rcu\">list_add_rcu</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#last_perm\">last_perm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw6_lock\">inetsw6_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#out_permanent\">out_permanent</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Attempt to override permanent protocol %d.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<a class=\"id\" href=\"#out_illegal\">out_illegal</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/>       \"Ignoring attempt to register invalid socket type %d.\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet6_register_protosw\">inet6_register_protosw</a>);", 
"", 
"void", 
"<a class=\"id\" href=\"#inet6_unregister_protosw\">inet6_unregister_protosw</a>(struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_PROTOSW_PERMANENT\">INET_PROTOSW_PERMANENT</a> &amp; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Attempt to unregister permanent protocol %d.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw6_lock\">inetsw6_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_rcu\">list_del_rcu</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw6_lock\">inetsw6_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#synchronize_net\">synchronize_net</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet6_unregister_protosw\">inet6_unregister_protosw</a>);", 
"", 
"int <a class=\"id\" href=\"#inet6_sk_rebuild_header\">inet6_sk_rebuild_header</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#__sk_dst_check\">__sk_dst_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#dst_cookie\">dst_cookie</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#final_p\">final_p</a>, <a class=\"id\" href=\"#final\">final</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>, 0, sizeof(<a class=\"id\" href=\"#fl\">fl</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_src\">fl6_src</a>, &amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_flowlabel\">fl6_flowlabel</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#flow_label\">flow_label</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#mark\">mark</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl_ip_dport\">fl_ip_dport</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl_ip_sport\">fl_ip_sport</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_sk_classify_flow\">security_sk_classify_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#final_p\">final_p</a> = <a class=\"id\" href=\"#fl6_update_dst\">fl6_update_dst</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#opt\">opt</a>, &amp;<a class=\"id\" href=\"#final\">final</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_dst_lookup\">ip6_dst_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_route_caps\">sk_route_caps</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#final_p\">final_p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, <a class=\"id\" href=\"#final_p\">final_p</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#sk\">sk</a>, 0)) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a> = -<a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ip6_dst_store\">__ip6_dst_store</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet6_sk_rebuild_header\">inet6_sk_rebuild_header</a>);", 
"", 
"int <a class=\"id\" href=\"#ipv6_opt_accepted\">ipv6_opt_accepted</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#all\">all</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#hop\">hop</a> && (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#hopopts\">hopopts</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#ohopopts\">ohopopts</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#IPV6_FLOWINFO_MASK\">IPV6_FLOWINFO_MASK</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>      *(<a class=\"id\" href=\"#__be32\">__be32</a> *)<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#rxflow\">rxflow</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#srcrt\">srcrt</a> && (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#srcrt\">srcrt</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#osrcrt\">osrcrt</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst1\">dst1</a> || <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dst0\">dst0</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#dstopts\">dstopts</a> || <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#odstopts\">odstopts</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ipv6_opt_accepted\">ipv6_opt_accepted</a>);", 
"", 
"static int <a class=\"id\" href=\"#ipv6_gso_pull_exthdrs\">ipv6_gso_pull_exthdrs</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#proto\">proto</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_opt_hdr\">ipv6_opt_hdr</a> *<a class=\"id\" href=\"#opth\">opth</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a> != <a class=\"id\" href=\"#NEXTHDR_HOP\">NEXTHDR_HOP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet6_protos\">inet6_protos</a>[<a class=\"id\" href=\"#proto\">proto</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ops\">ops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#INET6_PROTO_GSO_EXTHDR\">INET6_PROTO_GSO_EXTHDR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, 8)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opth\">opth</a> = (void *)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ipv6_optlen\">ipv6_optlen</a>(<a class=\"id\" href=\"#opth\">opth</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#opth\">opth</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#proto\">proto</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipv6_gso_send_check\">ipv6_gso_send_check</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#ipv6h\">ipv6h</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#ipv6h\">ipv6h</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6h\">ipv6h</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#ipv6h\">ipv6h</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet6_protos\">inet6_protos</a>[", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_gso_pull_exthdrs\">ipv6_gso_pull_exthdrs</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>)]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ops\">ops</a> && <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_send_check\">gso_send_check</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_send_check\">gso_send_check</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#ipv6_gso_segment\">ipv6_gso_segment</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#features\">features</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#ipv6h\">ipv6h</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *<a class=\"id\" href=\"#fptr\">fptr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#unfrag_ip6hlen\">unfrag_ip6hlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#prevhdr\">prevhdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#NETIF_F_V6_CSUM\">NETIF_F_V6_CSUM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#features\">features</a> &= ~<a class=\"id\" href=\"#NETIF_F_SG\">NETIF_F_SG</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#skb_shinfo\">skb_shinfo</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#gso_type\">gso_type</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>     ~(<a class=\"id\" href=\"#SKB_GSO_UDP\">SKB_GSO_UDP</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SKB_GSO_DODGY\">SKB_GSO_DODGY</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SKB_GSO_TCP_ECN\">SKB_GSO_TCP_ECN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SKB_GSO_TCPV6\">SKB_GSO_TCPV6</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/>       0)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#ipv6h\">ipv6h</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6h\">ipv6h</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#ipv6h\">ipv6h</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#ipv6_gso_pull_exthdrs\">ipv6_gso_pull_exthdrs</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet6_protos\">inet6_protos</a>[<a class=\"id\" href=\"#proto\">proto</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ops\">ops</a> && <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_segment\">gso_segment</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gso_segment\">gso_segment</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#features\">features</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#segs\">segs</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#segs\">segs</a>; <a class=\"id\" href=\"#skb\">skb</a>; <a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6h\">ipv6h</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#mac_len\">mac_len</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(*<a class=\"id\" href=\"#ipv6h\">ipv6h</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#proto\">proto</a> == <a class=\"id\" href=\"#IPPROTO_UDP\">IPPROTO_UDP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unfrag_ip6hlen\">unfrag_ip6hlen</a> = <a class=\"id\" href=\"#ip6_find_1stfragopt\">ip6_find_1stfragopt</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#prevhdr\">prevhdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fptr\">fptr</a> = (struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a> *)(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unfrag_ip6hlen\">unfrag_ip6hlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fptr\">fptr</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fptr\">fptr</a>-><a class=\"id\" href=\"#frag_off\">frag_off</a> |= <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#IP6_MF\">IP6_MF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += (<a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#ipv6h\">ipv6h</a>-><a class=\"id\" href=\"#payload_len\">payload_len</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(struct <a class=\"id\" href=\"#frag_hdr\">frag_hdr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#segs\">segs</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ipv6_gro_cb\">ipv6_gro_cb</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#napi_gro_cb\">napi_gro_cb</a> <a class=\"id\" href=\"#napi\">napi</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IPV6_GRO_CB\">IPV6_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>) ((struct <a class=\"id\" href=\"#ipv6_gro_cb\">ipv6_gro_cb</a> *)(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#cb\">cb</a>)", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#ipv6_gro_receive\">ipv6_gro_receive</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> **<a class=\"id\" href=\"#pp\">pp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph\">iph</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nlen\">nlen</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hlen\">hlen</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flush\">flush</a> = 1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#proto\">proto</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#skb_gro_offset\">skb_gro_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlen\">hlen</a> = <a class=\"id\" href=\"#off\">off</a> + sizeof(*<a class=\"id\" href=\"#iph\">iph</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#skb_gro_header_fast\">skb_gro_header_fast</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_gro_header_hard\">skb_gro_header_hard</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#skb_gro_header_slow\">skb_gro_header_slow</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#iph\">iph</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_gro_pull\">skb_gro_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#iph\">iph</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_set_transport_header\">skb_set_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_gro_offset\">skb_gro_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush\">flush</a> += <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#payload_len\">payload_len</a>) != <a class=\"id\" href=\"#skb_gro_len\">skb_gro_len</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet6_protos\">inet6_protos</a>[<a class=\"id\" href=\"#proto\">proto</a>]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a> || !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_receive\">gro_receive</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pskb_pull\">__pskb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_gro_offset\">skb_gro_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#ipv6_gso_pull_exthdrs\">ipv6_gso_pull_exthdrs</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#proto\">proto</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_gro_pull\">skb_gro_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, -<a class=\"id\" href=\"#skb_transport_offset\">skb_transport_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_transport_header\">skb_reset_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_push\">__skb_push</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_gro_offset\">skb_gro_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a> || !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_receive\">gro_receive</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_GRO_CB\">IPV6_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#proto\">proto</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush\">flush</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlen\">nlen</a> = <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = *<a class=\"id\" href=\"#head\">head</a>; <a class=\"id\" href=\"#p\">p</a>; <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph2\">iph2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#same_flow\">same_flow</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iph2\">iph2</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All fields must match except length. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nlen\">nlen</a> != <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#p\">p</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#iph2\">iph2</a>, <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>, <a class=\"id\" href=\"#payload_len\">payload_len</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#memcmp\">memcmp</a>(&amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>, &amp;<a class=\"id\" href=\"#iph2\">iph2</a>-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#nlen\">nlen</a> - <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#same_flow\">same_flow</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#flush\">flush</a> |= <a class=\"id\" href=\"#flush\">flush</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flush\">flush</a> |= <a class=\"id\" href=\"#flush\">flush</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_postpull_rcsum\">skb_postpull_rcsum</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#iph\">iph</a>, <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pp\">pp</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_receive\">gro_receive</a>(<a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum\">csum</a>;", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NAPI_GRO_CB\">NAPI_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flush\">flush</a> |= <a class=\"id\" href=\"#flush\">flush</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pp\">pp</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipv6_gro_complete\">ipv6_gro_complete</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#payload_len\">payload_len</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(*<a class=\"id\" href=\"#iph\">iph</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet6_protos\">inet6_protos</a>[<a class=\"id\" href=\"#IPV6_GRO_CB\">IPV6_GRO_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#proto\">proto</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#ops\">ops</a> || !<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_complete\">gro_complete</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#gro_complete\">gro_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#packet_type\">packet_type</a> <a class=\"id\" href=\"#ipv6_packet_type\">ipv6_packet_type</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#ETH_P_IPV6\">ETH_P_IPV6</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#func\">func</a> = <a class=\"id\" href=\"#ipv6_rcv\">ipv6_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_send_check\">gso_send_check</a> = <a class=\"id\" href=\"#ipv6_gso_send_check\">ipv6_gso_send_check</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gso_segment\">gso_segment</a> = <a class=\"id\" href=\"#ipv6_gso_segment\">ipv6_gso_segment</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gro_receive\">gro_receive</a> = <a class=\"id\" href=\"#ipv6_gro_receive\">ipv6_gro_receive</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gro_complete\">gro_complete</a> = <a class=\"id\" href=\"#ipv6_gro_complete\">ipv6_gro_complete</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ipv6_packet_init\">ipv6_packet_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_add_pack\">dev_add_pack</a>(&amp;<a class=\"id\" href=\"#ipv6_packet_type\">ipv6_packet_type</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ipv6_packet_cleanup\">ipv6_packet_cleanup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_remove_pack\">dev_remove_pack</a>(&amp;<a class=\"id\" href=\"#ipv6_packet_type\">ipv6_packet_type</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#ipv6_init_mibs\">ipv6_init_mibs</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_stats_in6\">udp_stats_in6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_stats_in6\">udplite_stats_in6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#udp_mib\">udp_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_udplite_mib\">err_udplite_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#ipv6_statistics\">ipv6_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#ipstats_mib\">ipstats_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_ip_mib\">err_ip_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpv6_statistics\">icmpv6_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#icmpv6_mib\">icmpv6_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#icmpv6_mib\">icmpv6_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_icmp_mib\">err_icmp_mib</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snmp_mib_init\">snmp_mib_init</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpv6msg_statistics\">icmpv6msg_statistics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(struct <a class=\"id\" href=\"#icmpv6msg_mib\">icmpv6msg_mib</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(struct <a class=\"id\" href=\"#icmpv6msg_mib\">icmpv6msg_mib</a>)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_icmpmsg_mib\">err_icmpmsg_mib</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_icmpmsg_mib\">err_icmpmsg_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpv6_statistics\">icmpv6_statistics</a>);", 
"<a class=\"id\" href=\"#err_icmp_mib\">err_icmp_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#ipv6_statistics\">ipv6_statistics</a>);", 
"<a class=\"id\" href=\"#err_ip_mib\">err_ip_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_stats_in6\">udplite_stats_in6</a>);", 
"<a class=\"id\" href=\"#err_udplite_mib\">err_udplite_mib</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_stats_in6\">udp_stats_in6</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ipv6_cleanup_mibs\">ipv6_cleanup_mibs</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udp_stats_in6\">udp_stats_in6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#udplite_stats_in6\">udplite_stats_in6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#ipv6_statistics\">ipv6_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpv6_statistics\">icmpv6_statistics</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snmp_mib_free\">snmp_mib_free</a>((void <a class=\"id\" href=\"#__percpu\">__percpu</a> **)<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#mib\">mib</a>.<a class=\"id\" href=\"#icmpv6msg_statistics\">icmpv6msg_statistics</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#inet6_net_init\">inet6_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#bindv6only\">bindv6only</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#icmpv6_time\">icmpv6_time</a> = 1*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_init_mibs\">ipv6_init_mibs</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#udp6_proc_init\">udp6_proc_init</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#tcp6_proc_init\">tcp6_proc_init</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_tcp6_fail\">proc_tcp6_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ac6_proc_init\">ac6_proc_init</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_ac6_fail\">proc_ac6_fail</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<a class=\"id\" href=\"#proc_ac6_fail\">proc_ac6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp6_proc_exit\">tcp6_proc_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<a class=\"id\" href=\"#proc_tcp6_fail\">proc_tcp6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp6_proc_exit\">udp6_proc_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_cleanup_mibs\">ipv6_cleanup_mibs</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#inet6_net_exit\">inet6_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udp6_proc_exit\">udp6_proc_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp6_proc_exit\">tcp6_proc_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ac6_proc_exit\">ac6_proc_exit</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_cleanup_mibs\">ipv6_cleanup_mibs</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#inet6_net_ops\">inet6_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#inet6_net_init\">inet6_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#inet6_net_exit\">inet6_net_exit</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#inet6_init\">inet6_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#dummy_skb\">dummy_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(sizeof(struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a>) &gt; sizeof(<a class=\"id\" href=\"#dummy_skb\">dummy_skb</a>-><a class=\"id\" href=\"#cb\">cb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Register the socket-side information for inet6_create.  */</span>", 
"<span class=\"ts\"/>for(<a class=\"id\" href=\"#r\">r</a> = &amp;<a class=\"id\" href=\"#inetsw6\">inetsw6</a>[0]; <a class=\"id\" href=\"#r\">r</a> &lt; &amp;<a class=\"id\" href=\"#inetsw6\">inetsw6</a>[<a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a>]; ++<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(<a class=\"id\" href=\"#r\">r</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disable_ipv6_mod\">disable_ipv6_mod</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"IPv6: Loaded, but administratively disabled, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"reboot required to enable\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#tcpv6_prot\">tcpv6_prot</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#udpv6_prot\">udpv6_prot</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister_tcp_proto\">out_unregister_tcp_proto</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#udplitev6_prot\">udplitev6_prot</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister_udp_proto\">out_unregister_udp_proto</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#proto_register\">proto_register</a>(&amp;<a class=\"id\" href=\"#rawv6_prot\">rawv6_prot</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister_udplite_proto\">out_unregister_udplite_proto</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We MUST register RAW sockets before we create the ICMP6,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * IGMP6, or NDISC control sockets.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rawv6_init\">rawv6_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unregister_raw_proto\">out_unregister_raw_proto</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Register the family here so that the init calls below will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be able to create sockets. (?? is this dangerous ??)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_register\">sock_register</a>(&amp;<a class=\"id\" href=\"#inet6_family_ops\">inet6_family_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_sock_register_fail\">out_sock_register_fail</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_static_sysctl_register\">ipv6_static_sysctl_register</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#static_sysctl_fail\">static_sysctl_fail</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>ipngwg API draft makes clear that the correct semantics</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>for TCP and UDP is to consider one TCP and UDP instance</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>in a host availiable by both INET and INET6 APIs and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>able to communicate via both network protocols.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#inet6_net_ops\">inet6_net_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#register_pernet_fail\">register_pernet_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#icmpv6_init\">icmpv6_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#icmp_fail\">icmp_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_mr_init\">ip6_mr_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ipmr_fail\">ipmr_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ndisc_init\">ndisc_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ndisc_fail\">ndisc_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#igmp6_init\">igmp6_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#igmp_fail\">igmp_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_netfilter_init\">ipv6_netfilter_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#netfilter_fail\">netfilter_fail</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Create /proc/foo6 entries. */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#raw6_proc_init\">raw6_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_raw6_fail\">proc_raw6_fail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#udplite6_proc_init\">udplite6_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_udplite6_fail\">proc_udplite6_fail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_misc_proc_init\">ipv6_misc_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_misc6_fail\">proc_misc6_fail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#if6_proc_init\">if6_proc_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#proc_if6_fail\">proc_if6_fail</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_route_init\">ip6_route_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ip6_route_fail\">ip6_route_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_flowlabel_init\">ip6_flowlabel_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ip6_flowlabel_fail\">ip6_flowlabel_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#addrconf_init\">addrconf_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#addrconf_fail\">addrconf_fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Init v6 extension headers. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_exthdrs_init\">ipv6_exthdrs_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ipv6_exthdrs_fail\">ipv6_exthdrs_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_frag_init\">ipv6_frag_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ipv6_frag_fail\">ipv6_frag_fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Init v6 transport protocols. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#udpv6_init\">udpv6_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#udpv6_fail\">udpv6_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#udplitev6_init\">udplitev6_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#udplitev6_fail\">udplitev6_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#tcpv6_init\">tcpv6_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#tcpv6_fail\">tcpv6_fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_packet_init\">ipv6_packet_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ipv6_packet_fail\">ipv6_packet_fail</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ipv6_sysctl_register\">ipv6_sysctl_register</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#sysctl_fail\">sysctl_fail</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<a class=\"id\" href=\"#sysctl_fail\">sysctl_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_packet_cleanup\">ipv6_packet_cleanup</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#ipv6_packet_fail\">ipv6_packet_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcpv6_exit\">tcpv6_exit</a>();", 
"<a class=\"id\" href=\"#tcpv6_fail\">tcpv6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udplitev6_exit\">udplitev6_exit</a>();", 
"<a class=\"id\" href=\"#udplitev6_fail\">udplitev6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udpv6_exit\">udpv6_exit</a>();", 
"<a class=\"id\" href=\"#udpv6_fail\">udpv6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_frag_exit\">ipv6_frag_exit</a>();", 
"<a class=\"id\" href=\"#ipv6_frag_fail\">ipv6_frag_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_exthdrs_exit\">ipv6_exthdrs_exit</a>();", 
"<a class=\"id\" href=\"#ipv6_exthdrs_fail\">ipv6_exthdrs_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_cleanup\">addrconf_cleanup</a>();", 
"<a class=\"id\" href=\"#addrconf_fail\">addrconf_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_flowlabel_cleanup\">ip6_flowlabel_cleanup</a>();", 
"<a class=\"id\" href=\"#ip6_flowlabel_fail\">ip6_flowlabel_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_route_cleanup\">ip6_route_cleanup</a>();", 
"<a class=\"id\" href=\"#ip6_route_fail\">ip6_route_fail</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#if6_proc_exit\">if6_proc_exit</a>();", 
"<a class=\"id\" href=\"#proc_if6_fail\">proc_if6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_misc_proc_exit\">ipv6_misc_proc_exit</a>();", 
"<a class=\"id\" href=\"#proc_misc6_fail\">proc_misc6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udplite6_proc_exit\">udplite6_proc_exit</a>();", 
"<a class=\"id\" href=\"#proc_udplite6_fail\">proc_udplite6_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw6_proc_exit\">raw6_proc_exit</a>();", 
"<a class=\"id\" href=\"#proc_raw6_fail\">proc_raw6_fail</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_netfilter_fini\">ipv6_netfilter_fini</a>();", 
"<a class=\"id\" href=\"#netfilter_fail\">netfilter_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_cleanup\">igmp6_cleanup</a>();", 
"<a class=\"id\" href=\"#igmp_fail\">igmp_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndisc_cleanup\">ndisc_cleanup</a>();", 
"<a class=\"id\" href=\"#ndisc_fail\">ndisc_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_mr_cleanup\">ip6_mr_cleanup</a>();", 
"<a class=\"id\" href=\"#ipmr_fail\">ipmr_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_cleanup\">icmpv6_cleanup</a>();", 
"<a class=\"id\" href=\"#icmp_fail\">icmp_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#inet6_net_ops\">inet6_net_ops</a>);", 
"<a class=\"id\" href=\"#register_pernet_fail\">register_pernet_fail</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_static_sysctl_unregister\">ipv6_static_sysctl_unregister</a>();", 
"<a class=\"id\" href=\"#static_sysctl_fail\">static_sysctl_fail</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_unregister\">sock_unregister</a>(<a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unregister_all\">rtnl_unregister_all</a>(<a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>);", 
"<a class=\"id\" href=\"#out_sock_register_fail\">out_sock_register_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rawv6_exit\">rawv6_exit</a>();", 
"<a class=\"id\" href=\"#out_unregister_raw_proto\">out_unregister_raw_proto</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#rawv6_prot\">rawv6_prot</a>);", 
"<a class=\"id\" href=\"#out_unregister_udplite_proto\">out_unregister_udplite_proto</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#udplitev6_prot\">udplitev6_prot</a>);", 
"<a class=\"id\" href=\"#out_unregister_udp_proto\">out_unregister_udp_proto</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#udpv6_prot\">udpv6_prot</a>);", 
"<a class=\"id\" href=\"#out_unregister_tcp_proto\">out_unregister_tcp_proto</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#tcpv6_prot\">tcpv6_prot</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#inet6_init\">inet6_init</a>);", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#inet6_exit\">inet6_exit</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disable_ipv6_mod\">disable_ipv6_mod</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First of all disallow new sockets creation. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_unregister\">sock_unregister</a>(<a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Disallow any further netlink messages */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unregister_all\">rtnl_unregister_all</a>(<a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_sysctl_unregister\">ipv6_sysctl_unregister</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udpv6_exit\">udpv6_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udplitev6_exit\">udplitev6_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcpv6_exit\">tcpv6_exit</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleanup code parts. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_packet_cleanup\">ipv6_packet_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_frag_exit\">ipv6_frag_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_exthdrs_exit\">ipv6_exthdrs_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_cleanup\">addrconf_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_flowlabel_cleanup\">ip6_flowlabel_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_route_cleanup\">ip6_route_cleanup</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleanup code parts. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#if6_proc_exit\">if6_proc_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_misc_proc_exit\">ipv6_misc_proc_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udplite6_proc_exit\">udplite6_proc_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw6_proc_exit\">raw6_proc_exit</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_netfilter_fini\">ipv6_netfilter_fini</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#igmp6_cleanup\">igmp6_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ndisc_cleanup\">ndisc_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_mr_cleanup\">ip6_mr_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_cleanup\">icmpv6_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rawv6_exit\">rawv6_exit</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#inet6_net_ops\">inet6_net_ops</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_static_sysctl_unregister\">ipv6_static_sysctl_unregister</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#rawv6_prot\">rawv6_prot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#udplitev6_prot\">udplitev6_prot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#udpv6_prot\">udpv6_prot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proto_unregister\">proto_unregister</a>(&amp;<a class=\"id\" href=\"#tcpv6_prot\">tcpv6_prot</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_barrier\">rcu_barrier</a>(); <span class=\"comment\">/* Wait for completion of call_rcu()'s */</span>", 
"}", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#inet6_exit\">inet6_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_ALIAS_NETPROTO\">MODULE_ALIAS_NETPROTO</a>(<a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>);", 
];
xr_frag_insert('l/0b/96f4123f31b3806264088132f358b56aac3b1e.xr', __xr_tmp);
