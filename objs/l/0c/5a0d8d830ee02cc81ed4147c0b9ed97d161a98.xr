var __xr_tmp = [
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#gpio_is_valid\">gpio_is_valid</a>(<a class=\"id\" href=\"#gpio\">gpio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#owner\">owner</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE:  gpio_request() can be called in early boot,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before IRQs are enabled, for non-sleeping (SOC) GPIOs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(<a class=\"id\" href=\"#FLAG_REQUESTED\">FLAG_REQUESTED</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_set_label\">desc_set_label</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#label\">label</a> ? : \"?\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#request\">request</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* chip-&gt;request may sleep */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#request\">request</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a> - <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_set_label\">desc_set_label</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#FLAG_REQUESTED\">FLAG_REQUESTED</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"gpio_request: gpio-%d (%s) status %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#label\">label</a> ? : \"?\", <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_request\">gpio_request</a>);", 
"", 
"void <a class=\"id\" href=\"#gpio_free\">gpio_free</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep\">might_sleep</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#gpio_is_valid\">gpio_is_valid</a>(<a class=\"id\" href=\"#gpio\">gpio</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#extra_checks\">extra_checks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gpio_unexport\">gpio_unexport</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a> && <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FLAG_REQUESTED\">FLAG_REQUESTED</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#free\">free</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#might_sleep_if\">might_sleep_if</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#free\">free</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a> - <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_set_label\">desc_set_label</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#FLAG_ACTIVE_LOW\">FLAG_ACTIVE_LOW</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#FLAG_REQUESTED\">FLAG_REQUESTED</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#extra_checks\">extra_checks</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_free\">gpio_free</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * gpio_request_one - request a single GPIO with initial configuration</span>", 
"<span class=\"comment\"> * @gpio:<span class=\"ts\"/>the GPIO number</span>", 
"<span class=\"comment\"> * @flags:<span class=\"ts\"/>GPIO configuration as specified by GPIOF_*</span>", 
"<span class=\"comment\"> * @label:<span class=\"ts\"/>a literal description string of this GPIO</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#gpio_request_one\">gpio_request_one</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>, const char *<a class=\"id\" href=\"#label\">label</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#gpio_request\">gpio_request</a>(<a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#label\">label</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#GPIOF_DIR_IN\">GPIOF_DIR_IN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#gpio_direction_input\">gpio_direction_input</a>(<a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#gpio_direction_output\">gpio_direction_output</a>(<a class=\"id\" href=\"#gpio\">gpio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#GPIOF_INIT_HIGH\">GPIOF_INIT_HIGH</a>) ? 1 : 0);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_request_one\">gpio_request_one</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * gpio_request_array - request multiple GPIOs in a single call</span>", 
"<span class=\"comment\"> * @array:<span class=\"ts\"/>array of the 'struct gpio'</span>", 
"<span class=\"comment\"> * @num:<span class=\"ts\"/>how many GPIOs in the array</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#gpio_request_array\">gpio_request_array</a>(struct <a class=\"id\" href=\"#gpio\">gpio</a> *<a class=\"id\" href=\"#array\">array</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num\">num</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#array\">array</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#gpio_request_one\">gpio_request_one</a>(<a class=\"id\" href=\"#array\">array</a>-><a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#array\">array</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#array\">array</a>-><a class=\"id\" href=\"#label\">label</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free\">err_free</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err_free\">err_free</a>:", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#i\">i</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gpio_free\">gpio_free</a>((--<a class=\"id\" href=\"#array\">array</a>)-><a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_request_array\">gpio_request_array</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * gpio_free_array - release multiple GPIOs in a single call</span>", 
"<span class=\"comment\"> * @array:<span class=\"ts\"/>array of the 'struct gpio'</span>", 
"<span class=\"comment\"> * @num:<span class=\"ts\"/>how many GPIOs in the array</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#gpio_free_array\">gpio_free_array</a>(struct <a class=\"id\" href=\"#gpio\">gpio</a> *<a class=\"id\" href=\"#array\">array</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#num\">num</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gpio_free\">gpio_free</a>((<a class=\"id\" href=\"#array\">array</a>++)-><a class=\"id\" href=\"#gpio\">gpio</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_free_array\">gpio_free_array</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * gpiochip_is_requested - return string iff signal was requested</span>", 
"<span class=\"comment\"> * @chip: controller managing the signal</span>", 
"<span class=\"comment\"> * @offset: of signal within controller's 0..(ngpio - 1) range</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns NULL if the GPIO is not currently requested, else a string.</span>", 
"<span class=\"comment\"> * If debugfs support is enabled, the string returned is the label passed</span>", 
"<span class=\"comment\"> * to gpio_request(); otherwise it is a meaningless constant.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is for use by GPIO controller drivers.  The label can</span>", 
"<span class=\"comment\"> * help with diagnostics, and knowing that the signal is used as a GPIO</span>", 
"<span class=\"comment\"> * can help avoid accidentally multiplexing it to another controller.</span>", 
"<span class=\"comment\"> */</span>", 
"const char *<a class=\"id\" href=\"#gpiochip_is_requested\">gpiochip_is_requested</a>(struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a> *<a class=\"id\" href=\"#chip\">chip</a>, unsigned <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#gpio\">gpio</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#gpio_is_valid\">gpio_is_valid</a>(<a class=\"id\" href=\"#gpio\">gpio</a>) || <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>].<a class=\"id\" href=\"#chip\">chip</a> != <a class=\"id\" href=\"#chip\">chip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#FLAG_REQUESTED\">FLAG_REQUESTED</a>, &amp;<a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>].<a class=\"id\" href=\"#flags\">flags</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_FS\">CONFIG_DEBUG_FS</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>].<a class=\"id\" href=\"#label\">label</a>;", 
"#else", 
"<span class=\"ts\"/>return \"?\";", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpiochip_is_requested\">gpiochip_is_requested</a>);", 
"", 
"", 
"<span class=\"comment\">/* Drivers MUST set GPIO direction before making get/set calls.  In</span>", 
"<span class=\"comment\"> * some cases this is done in early boot, before IRQs are enabled.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * As a rule these aren't called more than once (except for drivers</span>", 
"<span class=\"comment\"> * using the open-drain emulation idiom) so these are natural places</span>", 
"<span class=\"comment\"> * to accumulate extra debugging checks.  Note that we can't (yet)</span>", 
"<span class=\"comment\"> * rely on gpio_request() having been called beforehand.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#gpio_direction_input\">gpio_direction_input</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>];", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#gpio_is_valid\">gpio_is_valid</a>(<a class=\"id\" href=\"#gpio\">gpio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chip\">chip</a> || !<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#get\">get</a> || !<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#direction_input\">direction_input</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a> -= <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gpio\">gpio</a> >= <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ngpio\">ngpio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#gpio_ensure_requested\">gpio_ensure_requested</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* now we know the gpio is valid and chip won't vanish */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep_if\">might_sleep_if</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#request\">request</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"GPIO-%d: chip request fail, %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* and it's not available to anyone else ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * gpio_request() is the fully clean solution.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lose\">lose</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#direction_input\">direction_input</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#FLAG_IS_OUT\">FLAG_IS_OUT</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<a class=\"id\" href=\"#lose\">lose</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: gpio-%d status %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_direction_input\">gpio_direction_input</a>);", 
"", 
"int <a class=\"id\" href=\"#gpio_direction_output\">gpio_direction_output</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>, int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>];", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#gpio_is_valid\">gpio_is_valid</a>(<a class=\"id\" href=\"#gpio\">gpio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chip\">chip</a> || !<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#set\">set</a> || !<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#direction_output\">direction_output</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gpio\">gpio</a> -= <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gpio\">gpio</a> >= <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#ngpio\">ngpio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#gpio_ensure_requested\">gpio_ensure_requested</a>(<a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* now we know the gpio is valid and chip won't vanish */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep_if\">might_sleep_if</a>(<a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#can_sleep\">can_sleep</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#request\">request</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"GPIO-%d: chip request fail, %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* and it's not available to anyone else ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * gpio_request() is the fully clean solution.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lose\">lose</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#chip\">chip</a>-><a class=\"id\" href=\"#direction_output\">direction_output</a>(<a class=\"id\" href=\"#chip\">chip</a>, <a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#FLAG_IS_OUT\">FLAG_IS_OUT</a>, &amp;<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<a class=\"id\" href=\"#lose\">lose</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#gpio_lock\">gpio_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s: gpio-%d status %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#gpio\">gpio</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#gpio_direction_output\">gpio_direction_output</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * gpio_set_debounce - sets @debounce time for a @gpio</span>", 
"<span class=\"comment\"> * @gpio: the gpio to set debounce time</span>", 
"<span class=\"comment\"> * @debounce: debounce time is microseconds</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#gpio_set_debounce\">gpio_set_debounce</a>(unsigned <a class=\"id\" href=\"#gpio\">gpio</a>, unsigned <a class=\"id\" href=\"#debounce\">debounce</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_chip\">gpio_chip</a><span class=\"ts\"/>*<a class=\"id\" href=\"#chip\">chip</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gpio_desc\">gpio_desc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#desc\">desc</a> = &amp;<a class=\"id\" href=\"#gpio_desc\">gpio_desc</a>[<a class=\"id\" href=\"#gpio\">gpio</a>];", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
];
xr_frag_insert('l/0c/5a0d8d830ee02cc81ed4147c0b9ed97d161a98.xr', __xr_tmp);
