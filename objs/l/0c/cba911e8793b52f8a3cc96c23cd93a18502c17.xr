var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  kernel/sched.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Kernel scheduler and related syscalls</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991-2002  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  1996-12-23  Modified by Dave Grothe to fix bugs in semaphores and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>make semaphores SMP safe</span>", 
"<span class=\"comment\"> *  1998-11-19<span class=\"ts\"/>Implemented schedule_timeout() and related stuff</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>by Andrea Arcangeli</span>", 
"<span class=\"comment\"> *  2002-01-04<span class=\"ts\"/>New ultra-scalable O(1) scheduler by Ingo Molnar:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>hybrid priority-list and round-robin design with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>an array-switch method of distributing timeslices</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>and per-CPU runqueues.  Cleanups and useful suggestions</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>by Davide Libenzi, preemptible kernel bits by Robert Love.</span>", 
"<span class=\"comment\"> *  2003-09-03<span class=\"ts\"/>Interactivity tuning by Con Kolivas.</span>", 
"<span class=\"comment\"> *  2004-04-02<span class=\"ts\"/>Scheduler domains code by Nick Piggin</span>", 
"<span class=\"comment\"> *  2007-04-15  Work begun on replacing all interactivity tuning with a</span>", 
"<span class=\"comment\"> *              fair scheduling design by Con Kolivas.</span>", 
"<span class=\"comment\"> *  2007-05-05  Load balancing (smp-nice) and other improvements</span>", 
"<span class=\"comment\"> *              by Peter Williams</span>", 
"<span class=\"comment\"> *  2007-05-06  Interactivity improvements to CFS by Mike Galbraith</span>", 
"<span class=\"comment\"> *  2007-07-01  Group scheduling enhancements by Srivatsa Vaddagiri</span>", 
"<span class=\"comment\"> *  2007-11-29  RT balancing improvements by Steven Rostedt, Gregory Haskins,</span>", 
"<span class=\"comment\"> *              Thomas Gleixner, Mike Kravetz</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#completion\">completion</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel_stat\">kernel_stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debug_locks\">debug_locks</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#perf_event\">perf_event</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#profile\">profile</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#freezer\">freezer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pid_namespace\">pid_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#threads\">threads</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpuset\">cpuset</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stop_machine\">stop_machine</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#times\">times</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tsacct_kern\">tsacct_kern</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kprobes\">kprobes</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delayacct\">delayacct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hrtimer\">hrtimer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tick\">tick</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ftrace\">ftrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlb\">tlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq_regs\">irq_regs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"sched_cpupri.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"workqueue_sched.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CREATE_TRACE_POINTS\">CREATE_TRACE_POINTS</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Convert user-nice values [ -20 ... 0 ... 19 ]</span>", 
"<span class=\"comment\"> * to static priority [ MAX_RT_PRIO..MAX_PRIO-1 ],</span>", 
"<span class=\"comment\"> * and back.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NICE_TO_PRIO\">NICE_TO_PRIO</a>(<a class=\"id\" href=\"#nice\">nice</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a> + (<a class=\"id\" href=\"#nice\">nice</a>) + 20)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PRIO_TO_NICE\">PRIO_TO_NICE</a>(<a class=\"id\" href=\"#prio\">prio</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#prio\">prio</a>) - <a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a> - 20)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASK_NICE\">TASK_NICE</a>(<a class=\"id\" href=\"#p\">p</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PRIO_TO_NICE\">PRIO_TO_NICE</a>((<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#static_prio\">static_prio</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 'User priority' is the nice value converted to something we</span>", 
"<span class=\"comment\"> * can work with better when scaling various scheduler parameters,</span>", 
"<span class=\"comment\"> * it's a [ 0 ... 39 ] range.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#USER_PRIO\">USER_PRIO</a>(<a class=\"id\" href=\"#p\">p</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#p\">p</a>)-<a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TASK_USER_PRIO\">TASK_USER_PRIO</a>(<a class=\"id\" href=\"#p\">p</a>)<span class=\"ts\"/><a class=\"id\" href=\"#USER_PRIO\">USER_PRIO</a>((<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#static_prio\">static_prio</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_USER_PRIO\">MAX_USER_PRIO</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#USER_PRIO\">USER_PRIO</a>(<a class=\"id\" href=\"#MAX_PRIO\">MAX_PRIO</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helpers for converting nanosecond timing to jiffy resolution</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NS_TO_JIFFIES\">NS_TO_JIFFIES</a>(<a class=\"id\" href=\"#TIME\">TIME</a>)<span class=\"ts\"/>((unsigned long)(<a class=\"id\" href=\"#TIME\">TIME</a>) / (<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> / <a class=\"id\" href=\"#HZ\">HZ</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NICE_0_LOAD\">NICE_0_LOAD</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCHED_LOAD_SCALE\">SCHED_LOAD_SCALE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NICE_0_SHIFT\">NICE_0_SHIFT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SCHED_LOAD_SHIFT\">SCHED_LOAD_SHIFT</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These are the 'tuning knobs' of the scheduler:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * default timeslice is 100 msecs (used only for SCHED_RR tasks).</span>", 
"<span class=\"comment\"> * Timeslices get refilled after they expire.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEF_TIMESLICE\">DEF_TIMESLICE</a><span class=\"ts\"/><span class=\"ts\"/>(100 * <a class=\"id\" href=\"#HZ\">HZ</a> / 1000)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * single value that denotes runtime == period, ie unlimited time.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a><span class=\"ts\"/>((<a class=\"id\" href=\"#u64\">u64</a>)~0ULL)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_policy\">rt_policy</a>(int <a class=\"id\" href=\"#policy\">policy</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#policy\">policy</a> == <a class=\"id\" href=\"#SCHED_FIFO\">SCHED_FIFO</a> || <a class=\"id\" href=\"#policy\">policy</a> == <a class=\"id\" href=\"#SCHED_RR\">SCHED_RR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#task_has_rt_policy\">task_has_rt_policy</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_policy\">rt_policy</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policy\">policy</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the priority-queue data structure of the RT scheduling class:</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rt_prio_array\">rt_prio_array</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#bitmap\">bitmap</a>, <a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a>+1); <span class=\"comment\">/* include 1 bit for delimiter */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#queue\">queue</a>[<a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a>];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* nests inside the rq lock: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_period\">rt_period</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> <a class=\"id\" href=\"#def_rt_bandwidth\">def_rt_bandwidth</a>;", 
"", 
"static int <a class=\"id\" href=\"#do_sched_rt_period_timer\">do_sched_rt_period_timer</a>(struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a>, int <a class=\"id\" href=\"#overrun\">overrun</a>);", 
"", 
"static enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#sched_rt_period_timer\">sched_rt_period_timer</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#timer\">timer</a>, struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a>, <a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#overrun\">overrun</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#idle\">idle</a> = 0;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#hrtimer_cb_get_time\">hrtimer_cb_get_time</a>(<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overrun\">overrun</a> = <a class=\"id\" href=\"#hrtimer_forward\">hrtimer_forward</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period\">rt_period</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#overrun\">overrun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle\">idle</a> = <a class=\"id\" href=\"#do_sched_rt_period_timer\">do_sched_rt_period_timer</a>(<a class=\"id\" href=\"#rt_b\">rt_b</a>, <a class=\"id\" href=\"#overrun\">overrun</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idle\">idle</a> ? <a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a> : <a class=\"id\" href=\"#HRTIMER_RESTART\">HRTIMER_RESTART</a>;", 
"}", 
"", 
"static", 
"void <a class=\"id\" href=\"#init_rt_bandwidth\">init_rt_bandwidth</a>(struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#period\">period</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#runtime\">runtime</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period\">rt_period</a> = <a class=\"id\" href=\"#ns_to_ktime\">ns_to_ktime</a>(<a class=\"id\" href=\"#period\">period</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> = <a class=\"id\" href=\"#runtime\">runtime</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_init\">raw_spin_lock_init</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init\">hrtimer_init</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CLOCK_MONOTONIC\">CLOCK_MONOTONIC</a>, <a class=\"id\" href=\"#HRTIMER_MODE_REL\">HRTIMER_MODE_REL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#sched_rt_period_timer\">sched_rt_period_timer</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_bandwidth_enabled\">rt_bandwidth_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sysctl_sched_rt_runtime\">sysctl_sched_rt_runtime</a> >= 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#start_rt_bandwidth\">start_rt_bandwidth</a>(struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_bandwidth_enabled\">rt_bandwidth_enabled</a>() || <a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_active\">hrtimer_active</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#soft\">soft</a>, <a class=\"id\" href=\"#hard\">hard</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_active\">hrtimer_active</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#hrtimer_cb_get_time\">hrtimer_cb_get_time</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_forward\">hrtimer_forward</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>, <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period\">rt_period</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#soft\">soft</a> = <a class=\"id\" href=\"#hrtimer_get_softexpires\">hrtimer_get_softexpires</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hard\">hard</a> = <a class=\"id\" href=\"#hrtimer_get_expires\">hrtimer_get_expires</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#hard\">hard</a>, <a class=\"id\" href=\"#soft\">soft</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__hrtimer_start_range_ns\">__hrtimer_start_range_ns</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>, <a class=\"id\" href=\"#soft\">soft</a>, <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_MODE_ABS_PINNED\">HRTIMER_MODE_ABS_PINNED</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RT_GROUP_SCHED\">CONFIG_RT_GROUP_SCHED</a>", 
"static void <a class=\"id\" href=\"#destroy_rt_bandwidth\">destroy_rt_bandwidth</a>(struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_cancel\">hrtimer_cancel</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period_timer\">rt_period_timer</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sched_domains_mutex serializes calls to arch_init_sched_domains,</span>", 
"<span class=\"comment\"> * detach_destroy_domains and partition_sched_domains.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#sched_domains_mutex\">sched_domains_mutex</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CGROUP_SCHED\">CONFIG_CGROUP_SCHED</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cgroup\">cgroup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#cfs_rq\">cfs_rq</a>;", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#task_groups\">task_groups</a>);", 
"", 
"<span class=\"comment\">/* task group related information */</span>", 
"struct <a class=\"id\" href=\"#task_group\">task_group</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cgroup_subsys_state\">cgroup_subsys_state</a> <a class=\"id\" href=\"#css\">css</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FAIR_GROUP_SCHED\">CONFIG_FAIR_GROUP_SCHED</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* schedulable entities of this group on each cpu */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_entity\">sched_entity</a> **<a class=\"id\" href=\"#se\">se</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* runqueue \"owned\" by this group on each cpu */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cfs_rq\">cfs_rq</a> **<a class=\"id\" href=\"#cfs_rq\">cfs_rq</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#shares\">shares</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RT_GROUP_SCHED\">CONFIG_RT_GROUP_SCHED</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> **<a class=\"id\" href=\"#rt_se\">rt_se</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> **<a class=\"id\" href=\"#rt_rq\">rt_rq</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> <a class=\"id\" href=\"#rcu\">rcu</a>;", 
];
xr_frag_insert('l/0c/cba911e8793b52f8a3cc96c23cd93a18502c17.xr', __xr_tmp);
