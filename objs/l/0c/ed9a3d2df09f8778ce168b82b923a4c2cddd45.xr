var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>IPv4 Forwarding Information Base: semantics.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip_fib\">ip_fib</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#nexthop\">nexthop</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"fib_lookup.h\"", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#fib_info_hash\">fib_info_hash</a>;", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#fib_info_laddrhash\">fib_info_laddrhash</a>;", 
"static unsigned int <a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a>;", 
"static unsigned int <a class=\"id\" href=\"#fib_info_cnt\">fib_info_cnt</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINDEX_HASHBITS\">DEVINDEX_HASHBITS</a> 8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEVINDEX_HASHSIZE\">DEVINDEX_HASHSIZE</a> (1U << <a class=\"id\" href=\"#DEVINDEX_HASHBITS\">DEVINDEX_HASHBITS</a>)", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#fib_info_devhash\">fib_info_devhash</a>[<a class=\"id\" href=\"#DEVINDEX_HASHSIZE\">DEVINDEX_HASHSIZE</a>];", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_nexthops\">for_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) { int <a class=\"id\" href=\"#nhsel\">nhsel</a>; const struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> * <a class=\"id\" href=\"#nh\">nh</a>; \\", 
"for (<a class=\"id\" href=\"#nhsel\">nhsel</a>=0, <a class=\"id\" href=\"#nh\">nh</a> = (<a class=\"id\" href=\"#fi\">fi</a>)-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>; <a class=\"id\" href=\"#nhsel\">nhsel</a> &lt; (<a class=\"id\" href=\"#fi\">fi</a>)-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>; <a class=\"id\" href=\"#nh\">nh</a>++, <a class=\"id\" href=\"#nhsel\">nhsel</a>++)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) { int <a class=\"id\" href=\"#nhsel\">nhsel</a>; struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>; \\", 
"for (<a class=\"id\" href=\"#nhsel\">nhsel</a>=0, <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a> = (struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *)((<a class=\"id\" href=\"#fi\">fi</a>)-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>); <a class=\"id\" href=\"#nhsel\">nhsel</a> &lt; (<a class=\"id\" href=\"#fi\">fi</a>)-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>; <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>++, <a class=\"id\" href=\"#nhsel\">nhsel</a>++)", 
"", 
"#else <span class=\"comment\">/* CONFIG_IP_ROUTE_MULTIPATH */</span>", 
"", 
"<span class=\"comment\">/* Hope, that gcc will optimize it to get rid of dummy loop */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_nexthops\">for_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) { int <a class=\"id\" href=\"#nhsel\">nhsel</a> = 0; const struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> * <a class=\"id\" href=\"#nh\">nh</a> = (<a class=\"id\" href=\"#fi\">fi</a>)-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>; \\", 
"for (<a class=\"id\" href=\"#nhsel\">nhsel</a>=0; <a class=\"id\" href=\"#nhsel\">nhsel</a> &lt; 1; <a class=\"id\" href=\"#nhsel\">nhsel</a>++)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) { int <a class=\"id\" href=\"#nhsel\">nhsel</a> = 0; struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a> = (struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *)((<a class=\"id\" href=\"#fi\">fi</a>)-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>); \\", 
"for (<a class=\"id\" href=\"#nhsel\">nhsel</a>=0; <a class=\"id\" href=\"#nhsel\">nhsel</a> &lt; 1; <a class=\"id\" href=\"#nhsel\">nhsel</a>++)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_IP_ROUTE_MULTIPATH */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) }", 
"", 
"", 
"static const struct", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a>;", 
"} <a class=\"id\" href=\"#fib_props\">fib_props</a>[<a class=\"id\" href=\"#RTN_MAX\">RTN_MAX</a> + 1] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_NOWHERE\">RT_SCOPE_NOWHERE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_UNSPEC */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_UNIVERSE\">RT_SCOPE_UNIVERSE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_UNICAST */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_LOCAL */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_BROADCAST */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_ANYCAST */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_UNIVERSE\">RT_SCOPE_UNIVERSE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_MULTICAST */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_UNIVERSE\">RT_SCOPE_UNIVERSE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_BLACKHOLE */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= -<a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_UNIVERSE\">RT_SCOPE_UNIVERSE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_UNREACHABLE */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= -<a class=\"id\" href=\"#EACCES\">EACCES</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_UNIVERSE\">RT_SCOPE_UNIVERSE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_PROHIBIT */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_UNIVERSE\">RT_SCOPE_UNIVERSE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_THROW */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_NOWHERE\">RT_SCOPE_NOWHERE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_NAT */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#error\">error</a><span class=\"ts\"/>= -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a><span class=\"ts\"/>= <a class=\"id\" href=\"#RT_SCOPE_NOWHERE\">RT_SCOPE_NOWHERE</a>,", 
"<span class=\"ts\"/>},<span class=\"ts\"/><span class=\"comment\">/* RTN_XRESOLVE */</span>", 
"};", 
"", 
"", 
"<span class=\"comment\">/* Release a nexthop info record */</span>", 
"", 
"void <a class=\"id\" href=\"#free_fib_info\">free_fib_info</a>(struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_dead\">fib_dead</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"Freeing alive fib_info %p\\n\", <a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_put\">dev_put</a>(<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_info_cnt\">fib_info_cnt</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_net\">release_net</a>(<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_net\">fib_net</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#fib_release_info\">fib_release_info</a>(struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a> && --<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_treeref\">fib_treeref</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_hash\">fib_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_lhash\">fib_lhash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_hash\">nh_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_dead\">fib_dead</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_info_put\">fib_info_put</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#nh_comp\">nh_comp</a>(const struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>, const struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#ofi\">ofi</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#onh\">onh</a> = <a class=\"id\" href=\"#ofi\">ofi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_nexthops\">for_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a> != <a class=\"id\" href=\"#onh\">onh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>  != <a class=\"id\" href=\"#onh\">onh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_scope\">nh_scope</a> != <a class=\"id\" href=\"#onh\">onh</a>-><a class=\"id\" href=\"#nh_scope\">nh_scope</a> ||", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_weight\">nh_weight</a> != <a class=\"id\" href=\"#onh\">onh</a>-><a class=\"id\" href=\"#nh_weight\">nh_weight</a> ||", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a> != <a class=\"id\" href=\"#onh\">onh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a> ||", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>^<a class=\"id\" href=\"#onh\">onh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>)&amp;~<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#onh\">onh</a>++;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#fib_devindex_hashfn\">fib_devindex_hashfn</a>(unsigned int <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#DEVINDEX_HASHSIZE\">DEVINDEX_HASHSIZE</a> - 1;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#val\">val</a> ^", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#val\">val</a> >> <a class=\"id\" href=\"#DEVINDEX_HASHBITS\">DEVINDEX_HASHBITS</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#val\">val</a> >> (<a class=\"id\" href=\"#DEVINDEX_HASHBITS\">DEVINDEX_HASHBITS</a> * 2))) &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#fib_info_hashfn\">fib_info_hashfn</a>(const struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a> - 1);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> ^= <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_protocol\">fib_protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> ^= (<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> ^= <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_nexthops\">for_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> ^= <a class=\"id\" href=\"#fib_devindex_hashfn\">fib_devindex_hashfn</a>(<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>);", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>)", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#val\">val</a> ^ (<a class=\"id\" href=\"#val\">val</a> >> 7) ^ (<a class=\"id\" href=\"#val\">val</a> >> 12)) &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fib_find_info\">fib_find_info</a>(const struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#nfi\">nfi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#fib_info_hashfn\">fib_info_hashfn</a>(<a class=\"id\" href=\"#nfi\">nfi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_hash\">fib_info_hash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fib_hash\">fib_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_net\">fib_net</a>, <a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_net\">fib_net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a> != <a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_protocol\">fib_protocol</a> == <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_protocol\">fib_protocol</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a> == <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a> == <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_metrics\">fib_metrics</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_metrics\">fib_metrics</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_metrics\">fib_metrics</a>)) == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a>^<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a>)&amp;~<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>) == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#nfi\">nfi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a> == 0 || <a class=\"id\" href=\"#nh_comp\">nh_comp</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#nfi\">nfi</a>) == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Check, that the gateway is already configured.</span>", 
"<span class=\"comment\">   Used only by redirect accept routine.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ip_fib_check_default\">ip_fib_check_default</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#gw\">gw</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nh\">nh</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#fib_devindex_hashfn\">fib_devindex_hashfn</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_devhash\">fib_info_devhash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#nh\">nh</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#nh_hash\">nh_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> == <a class=\"id\" href=\"#dev\">dev</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a> == <a class=\"id\" href=\"#gw\">gw</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#fib_nlmsg_size\">fib_nlmsg_size</a>(struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#NLMSG_ALIGN\">NLMSG_ALIGN</a>(sizeof(struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* RTA_TABLE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* RTA_DST */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4) <span class=\"comment\">/* RTA_PRIORITY */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4); <span class=\"comment\">/* RTA_PREFSRC */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* space for nested metrics */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> += <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>((<a class=\"id\" href=\"#RTAX_MAX\">RTAX_MAX</a> * <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4)));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Also handles the special case fib_nhs == 1 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* each nexthop is packed in an attribute */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#nhsize\">nhsize</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#rtnexthop\">rtnexthop</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* may contain flow and gateway attribute */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhsize\">nhsize</a> += 2 * <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(4);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* all nexthops are packed in a nested attribute */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> += <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a> * <a class=\"id\" href=\"#nhsize\">nhsize</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#payload\">payload</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#rtmsg_fib\">rtmsg_fib</a>(int <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>,", 
"<span class=\"ts\"/>       int <a class=\"id\" href=\"#dst_len\">dst_len</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tb_id\">tb_id</a>, struct <a class=\"id\" href=\"#nl_info\">nl_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#nlm_flags\">nlm_flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nlh\">nlh</a> ? <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_seq\">nlmsg_seq</a> : 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#nlmsg_new\">nlmsg_new</a>(<a class=\"id\" href=\"#fib_nlmsg_size\">fib_nlmsg_size</a>(<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_dump_info\">fib_dump_info</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#tb_id\">tb_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a>, <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#dst_len\">dst_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a>, <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>, <a class=\"id\" href=\"#nlm_flags\">nlm_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* -EMSGSIZE implies BUG in fib_nlmsg_size() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#errout\">errout</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_notify\">rtnl_notify</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#RTNLGRP_IPV4_ROUTE\">RTNLGRP_IPV4_ROUTE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nlh\">nlh</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>return;", 
"<a class=\"id\" href=\"#errout\">errout</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnl_set_sk_err\">rtnl_set_sk_err</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nl_net\">nl_net</a>, <a class=\"id\" href=\"#RTNLGRP_IPV4_ROUTE\">RTNLGRP_IPV4_ROUTE</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Return the first fib alias matching TOS with</span>", 
"<span class=\"comment\"> * priority less than or equal to PRIO.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fib_find_alias\">fib_find_alias</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#fah\">fah</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tos\">tos</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prio\">prio</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fah\">fah</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#fah\">fah</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> &gt; <a class=\"id\" href=\"#tos\">tos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a> >= <a class=\"id\" href=\"#prio\">prio</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> &lt; <a class=\"id\" href=\"#tos\">tos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_detect_death\">fib_detect_death</a>(struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>, int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#fib_info\">fib_info</a> **<a class=\"id\" href=\"#last_resort\">last_resort</a>, int *<a class=\"id\" href=\"#last_idx\">last_idx</a>, int <a class=\"id\" href=\"#dflt\">dflt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#NUD_NONE\">NUD_NONE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#neigh_lookup\">neigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>[0].<a class=\"id\" href=\"#nh_gw\">nh_gw</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_dev\">fib_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#NUD_REACHABLE\">NUD_REACHABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#state\">state</a>&amp;<a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>) && <a class=\"id\" href=\"#order\">order</a> != <a class=\"id\" href=\"#dflt\">dflt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#state\">state</a>&amp;<a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>) ||", 
"<span class=\"ts\"/>    (*<a class=\"id\" href=\"#last_idx\">last_idx</a>&lt;0 && <a class=\"id\" href=\"#order\">order</a> &gt; <a class=\"id\" href=\"#dflt\">dflt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#last_resort\">last_resort</a> = <a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#last_idx\">last_idx</a> = <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"", 
"static int <a class=\"id\" href=\"#fib_count_nexthops\">fib_count_nexthops</a>(struct <a class=\"id\" href=\"#rtnexthop\">rtnexthop</a> *<a class=\"id\" href=\"#rtnh\">rtnh</a>, int <a class=\"id\" href=\"#remaining\">remaining</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nhs\">nhs</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#rtnh_ok\">rtnh_ok</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>, <a class=\"id\" href=\"#remaining\">remaining</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhs\">nhs</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a> = <a class=\"id\" href=\"#rtnh_next\">rtnh_next</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>, &amp;<a class=\"id\" href=\"#remaining\">remaining</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* leftover implies invalid nexthop configuration, discard it */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#remaining\">remaining</a> &gt; 0 ? 0 : <a class=\"id\" href=\"#nhs\">nhs</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fib_get_nhs\">fib_get_nhs</a>(struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>, struct <a class=\"id\" href=\"#rtnexthop\">rtnexthop</a> *<a class=\"id\" href=\"#rtnh\">rtnh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#remaining\">remaining</a>, struct <a class=\"id\" href=\"#fib_config\">fib_config</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#attrlen\">attrlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtnh_ok\">rtnh_ok</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>, <a class=\"id\" href=\"#remaining\">remaining</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_flags\">fc_flags</a> &amp; ~0xFF) | <a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_flags\">rtnh_flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a> = <a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_ifindex\">rtnh_ifindex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_weight\">nh_weight</a> = <a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_hops\">rtnh_hops</a> + 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attrlen\">attrlen</a> = <a class=\"id\" href=\"#rtnh_attrlen\">rtnh_attrlen</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#attrlen\">attrlen</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>, *<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#rtnh_attrs\">rtnh_attrs</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla\">nla</a> = <a class=\"id\" href=\"#nla_find\">nla_find</a>(<a class=\"id\" href=\"#attrs\">attrs</a>, <a class=\"id\" href=\"#attrlen\">attrlen</a>, <a class=\"id\" href=\"#RTA_GATEWAY\">RTA_GATEWAY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a> = <a class=\"id\" href=\"#nla\">nla</a> ? <a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(<a class=\"id\" href=\"#nla\">nla</a>) : 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla\">nla</a> = <a class=\"id\" href=\"#nla_find\">nla_find</a>(<a class=\"id\" href=\"#attrs\">attrs</a>, <a class=\"id\" href=\"#attrlen\">attrlen</a>, <a class=\"id\" href=\"#RTA_FLOW\">RTA_FLOW</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a> = <a class=\"id\" href=\"#nla\">nla</a> ? <a class=\"id\" href=\"#nla_get_u32\">nla_get_u32</a>(<a class=\"id\" href=\"#nla\">nla</a>) : 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a> = <a class=\"id\" href=\"#rtnh_next\">rtnh_next</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>, &amp;<a class=\"id\" href=\"#remaining\">remaining</a>);", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#fib_nh_match\">fib_nh_match</a>(struct <a class=\"id\" href=\"#fib_config\">fib_config</a> *<a class=\"id\" href=\"#cfg\">cfg</a>, struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtnexthop\">rtnexthop</a> *<a class=\"id\" href=\"#rtnh\">rtnh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#remaining\">remaining</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_priority\">fc_priority</a> && <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_priority\">fc_priority</a> != <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_oif\">fc_oif</a> || <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_gw\">fc_gw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_oif\">fc_oif</a> || <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_oif\">fc_oif</a> == <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_gw\">fc_gw</a>  || <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_gw\">fc_gw</a> == <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp\">fc_mp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp\">fc_mp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remaining\">remaining</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp_len\">fc_mp_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_nexthops\">for_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#attrlen\">attrlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rtnh_ok\">rtnh_ok</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>, <a class=\"id\" href=\"#remaining\">remaining</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_ifindex\">rtnh_ifindex</a> && <a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_ifindex\">rtnh_ifindex</a> != <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attrlen\">attrlen</a> = <a class=\"id\" href=\"#rtnh_attrlen\">rtnh_attrlen</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#attrlen\">attrlen</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>, *<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#rtnh_attrs\">rtnh_attrs</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla\">nla</a> = <a class=\"id\" href=\"#nla_find\">nla_find</a>(<a class=\"id\" href=\"#attrs\">attrs</a>, <a class=\"id\" href=\"#attrlen\">attrlen</a>, <a class=\"id\" href=\"#RTA_GATEWAY\">RTA_GATEWAY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nla\">nla</a> && <a class=\"id\" href=\"#nla_get_be32\">nla_get_be32</a>(<a class=\"id\" href=\"#nla\">nla</a>) != <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla\">nla</a> = <a class=\"id\" href=\"#nla_find\">nla_find</a>(<a class=\"id\" href=\"#attrs\">attrs</a>, <a class=\"id\" href=\"#attrlen\">attrlen</a>, <a class=\"id\" href=\"#RTA_FLOW\">RTA_FLOW</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nla\">nla</a> && <a class=\"id\" href=\"#nla_get_u32\">nla_get_u32</a>(<a class=\"id\" href=\"#nla\">nla</a>) != <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a> = <a class=\"id\" href=\"#rtnh_next\">rtnh_next</a>(<a class=\"id\" href=\"#rtnh\">rtnh</a>, &amp;<a class=\"id\" href=\"#remaining\">remaining</a>);", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">   Picture</span>", 
"<span class=\"comment\">   -------</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Semantics of nexthop is very messy by historical reasons.</span>", 
"<span class=\"comment\">   We have to take into account, that:</span>", 
"<span class=\"comment\">   a) gateway can be actually local interface address,</span>", 
"<span class=\"comment\">      so that gatewayed route is direct.</span>", 
"<span class=\"comment\">   b) gateway must be on-link address, possibly</span>", 
"<span class=\"comment\">      described not by an ifaddr, but also by a direct route.</span>", 
"<span class=\"comment\">   c) If both gateway and interface are specified, they should not</span>", 
"<span class=\"comment\">      contradict.</span>", 
"<span class=\"comment\">   d) If we use tunnel routes, gateway could be not on-link.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Attempt to reconcile all of these (alas, self-contradictory) conditions</span>", 
"<span class=\"comment\">   results in pretty ugly and hairy code with obscure logic.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   I chose to generalized it instead, so that the size</span>", 
"<span class=\"comment\">   of code does not increase practically, but it becomes</span>", 
"<span class=\"comment\">   much more general.</span>", 
"<span class=\"comment\">   Every prefix is assigned a \"scope\" value: \"host\" is local address,</span>", 
"<span class=\"comment\">   \"link\" is direct route,</span>", 
"<span class=\"comment\">   [ ... \"site\" ... \"interior\" ... ]</span>", 
"<span class=\"comment\">   and \"universe\" is true gateway route with global meaning.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Every prefix refers to a set of \"nexthop\"s (gw, oif),</span>", 
"<span class=\"comment\">   where gw must have narrower scope. This recursion stops</span>", 
"<span class=\"comment\">   when gw has LOCAL scope or if \"nexthop\" is declared ONLINK,</span>", 
"<span class=\"comment\">   which means that gw is forced to be on link.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Code is still hairy, but now it is apparently logically</span>", 
"<span class=\"comment\">   consistent and very flexible. F.e. as by-product it allows</span>", 
"<span class=\"comment\">   to co-exists in peace independent exterior and interior</span>", 
"<span class=\"comment\">   routing processes.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   Normally it looks as following.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   {universe prefix}  -&gt; (gw, oif) [scope link]</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  |-&gt; {link prefix} -&gt; (gw, oif) [scope local]</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>|-&gt; {local prefix} (terminal node)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#fib_check_nh\">fib_check_nh</a>(struct <a class=\"id\" href=\"#fib_config\">fib_config</a> *<a class=\"id\" href=\"#cfg\">cfg</a>, struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nh\">nh</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_result\">fib_result</a> <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_ONLINK\">RTNH_F_ONLINK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a> >= <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>) != <a class=\"id\" href=\"#RTN_UNICAST\">RTN_UNICAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_index\">__dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENETDOWN\">ENETDOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_scope\">nh_scope</a> = <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#nl_u\">nl_u</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ip4_u\">ip4_u</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It is not necessary, but requires a bit of thinking */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl4_scope\">fl4_scope</a> &lt; <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl4_scope\">fl4_scope</a> = <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_lookup\">fib_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, &amp;<a class=\"id\" href=\"#res\">res</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#RTN_UNICAST\">RTN_UNICAST</a> && <a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_scope\">nh_scope</a> = <a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#scope\">scope</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a> = <a class=\"id\" href=\"#FIB_RES_OIF\">FIB_RES_OIF</a>(<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> = <a class=\"id\" href=\"#FIB_RES_DEV\">FIB_RES_DEV</a>(<a class=\"id\" href=\"#res\">res</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENETDOWN\">ENETDOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_res_put\">fib_res_put</a>(&amp;<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;(<a class=\"id\" href=\"#RTNH_F_PERVASIVE\">RTNH_F_PERVASIVE</a>|<a class=\"id\" href=\"#RTNH_F_ONLINK\">RTNH_F_ONLINK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#inetdev_by_index\">inetdev_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev_put\">in_dev_put</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENETDOWN\">ENETDOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_hold\">dev_hold</a>(<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_scope\">nh_scope</a> = <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_dev_put\">in_dev_put</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#fib_laddr_hashfn\">fib_laddr_hashfn</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a> - 1);", 
"", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#val\">val</a> ^ ((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#val\">val</a> >> 7) ^ ((<a class=\"id\" href=\"#__force\">__force</a> <a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#val\">val</a> >> 14)) &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#fib_hash_alloc\">fib_hash_alloc</a>(int <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bytes\">bytes</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#bytes\">bytes</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#bytes\">bytes</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib_hash_free\">fib_hash_free</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#hash\">hash</a>, int <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hash\">hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bytes\">bytes</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_pages\">free_pages</a>((unsigned long) <a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#bytes\">bytes</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib_hash_move\">fib_hash_move</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#new_info_hash\">new_info_hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#new_size\">new_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#old_info_hash\">old_info_hash</a>, *<a class=\"id\" href=\"#old_laddrhash\">old_laddrhash</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#old_size\">old_size</a> = <a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_info_hash\">old_info_hash</a> = <a class=\"id\" href=\"#fib_info_hash\">fib_info_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_laddrhash\">old_laddrhash</a> = <a class=\"id\" href=\"#fib_info_laddrhash\">fib_info_laddrhash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a> = <a class=\"id\" href=\"#new_size\">new_size</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#old_size\">old_size</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_hash\">fib_info_hash</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fib_hash\">fib_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new_hash\">new_hash</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_hash\">fib_hash</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_hash\">new_hash</a> = <a class=\"id\" href=\"#fib_info_hashfn\">fib_info_hashfn</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a> = &amp;<a class=\"id\" href=\"#new_info_hash\">new_info_hash</a>[<a class=\"id\" href=\"#new_hash\">new_hash</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_hash\">fib_hash</a>, <a class=\"id\" href=\"#dest\">dest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_info_hash\">fib_info_hash</a> = <a class=\"id\" href=\"#new_info_hash\">new_info_hash</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#old_size\">old_size</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#lhead\">lhead</a> = &amp;<a class=\"id\" href=\"#fib_info_laddrhash\">fib_info_laddrhash</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#lhead\">lhead</a>, <a class=\"id\" href=\"#fib_lhash\">fib_lhash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#ldest\">ldest</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new_hash\">new_hash</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_lhash\">fib_lhash</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_hash\">new_hash</a> = <a class=\"id\" href=\"#fib_laddr_hashfn\">fib_laddr_hashfn</a>(<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ldest\">ldest</a> = &amp;<a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a>[<a class=\"id\" href=\"#new_hash\">new_hash</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_lhash\">fib_lhash</a>, <a class=\"id\" href=\"#ldest\">ldest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_info_laddrhash\">fib_info_laddrhash</a> = <a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#old_size\">old_size</a> * sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_free\">fib_hash_free</a>(<a class=\"id\" href=\"#old_info_hash\">old_info_hash</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_free\">fib_hash_free</a>(<a class=\"id\" href=\"#old_laddrhash\">old_laddrhash</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fib_create_info\">fib_create_info</a>(struct <a class=\"id\" href=\"#fib_config\">fib_config</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#ofi\">ofi</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nhs\">nhs</a> = 1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fast check to catch the most weird cases */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fib_props\">fib_props</a>[<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a>].<a class=\"id\" href=\"#scope\">scope</a> &gt; <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp\">fc_mp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nhs\">nhs</a> = <a class=\"id\" href=\"#fib_count_nexthops\">fib_count_nexthops</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp\">fc_mp</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp_len\">fc_mp_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nhs\">nhs</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fib_info_cnt\">fib_info_cnt</a> >= <a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#new_size\">new_size</a> = <a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a> << 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#new_info_hash\">new_info_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_size\">new_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_size\">new_size</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#new_size\">new_size</a> * sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_info_hash\">new_info_hash</a> = <a class=\"id\" href=\"#fib_hash_alloc\">fib_hash_alloc</a>(<a class=\"id\" href=\"#bytes\">bytes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a> = <a class=\"id\" href=\"#fib_hash_alloc\">fib_hash_alloc</a>(<a class=\"id\" href=\"#bytes\">bytes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_info_hash\">new_info_hash</a> || !<a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_free\">fib_hash_free</a>(<a class=\"id\" href=\"#new_info_hash\">new_info_hash</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_free\">fib_hash_free</a>(<a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a>, <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_move\">fib_hash_move</a>(<a class=\"id\" href=\"#new_info_hash\">new_info_hash</a>, <a class=\"id\" href=\"#new_laddrhash\">new_laddrhash</a>, <a class=\"id\" href=\"#new_size\">new_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fib_hash_size\">fib_hash_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#fi\">fi</a>)+<a class=\"id\" href=\"#nhs\">nhs</a>*sizeof(struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_info_cnt\">fib_info_cnt</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_net\">fib_net</a> = <a class=\"id\" href=\"#hold_net\">hold_net</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_protocol\">fib_protocol</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_protocol\">fc_protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_flags\">fc_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_priority\">fc_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_prefsrc\">fc_prefsrc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a> = <a class=\"id\" href=\"#nhs\">nhs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_parent\">nh_parent</a> = <a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>)", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mx\">fc_mx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#nla\">nla</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#remaining\">remaining</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_for_each_attr\">nla_for_each_attr</a>(<a class=\"id\" href=\"#nla\">nla</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mx\">fc_mx</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mx_len\">fc_mx_len</a>, <a class=\"id\" href=\"#remaining\">remaining</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#nla_type\">nla_type</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &gt; <a class=\"id\" href=\"#RTAX_MAX\">RTAX_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_metrics\">fib_metrics</a>[<a class=\"id\" href=\"#type\">type</a> - 1] = <a class=\"id\" href=\"#nla_get_u32\">nla_get_u32</a>(<a class=\"id\" href=\"#nla\">nla</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp\">fc_mp</a>) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_get_nhs\">fib_get_nhs</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp\">fc_mp</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp_len\">fc_mp_len</a>, <a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_oif\">fc_oif</a> && <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a> != <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_oif\">fc_oif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_gw\">fc_gw</a> && <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a> != <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_gw\">fc_gw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_flow\">fc_flow</a> && <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a> != <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_flow\">fc_flow</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nh\">nh</a> = <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_oif\">fc_oif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_gw\">fc_gw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_flags\">fc_flags</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_flow\">fc_flow</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_weight\">nh_weight</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fib_props\">fib_props</a>[<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a>].<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_gw\">fc_gw</a> || <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_oif\">fc_oif</a> || <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_mp\">fc_mp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#link_it\">link_it</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a> &gt; <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a> == <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nh\">nh</a> = <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Local address is added. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nhs\">nhs</a> != 1 || <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_scope\">nh_scope</a> = <a class=\"id\" href=\"#RT_SCOPE_NOWHERE\">RT_SCOPE_NOWHERE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> = <a class=\"id\" href=\"#dev_get_by_index\">dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_check_nh\">fib_check_nh</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failure\">failure</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>)", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a> != <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a> || !<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a> != <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>) != <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_inval\">err_inval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#link_it\">link_it</a>:", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ofi\">ofi</a> = <a class=\"id\" href=\"#fib_find_info\">fib_find_info</a>(<a class=\"id\" href=\"#fi\">fi</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_dead\">fib_dead</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_fib_info\">free_fib_info</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ofi\">ofi</a>-><a class=\"id\" href=\"#fib_treeref\">fib_treeref</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ofi\">ofi</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_treeref\">fib_treeref</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_clntref\">fib_clntref</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_hash\">fib_hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#fib_info_hash\">fib_info_hash</a>[<a class=\"id\" href=\"#fib_info_hashfn\">fib_info_hashfn</a>(<a class=\"id\" href=\"#fi\">fi</a>)]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_laddrhash\">fib_info_laddrhash</a>[<a class=\"id\" href=\"#fib_laddr_hashfn\">fib_laddr_hashfn</a>(<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_lhash\">fib_lhash</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#fib_devindex_hashfn\">fib_devindex_hashfn</a>(<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_devhash\">fib_info_devhash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_hash\">nh_hash</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_info_lock\">fib_info_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fi\">fi</a>;", 
"", 
"<a class=\"id\" href=\"#err_inval\">err_inval</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<a class=\"id\" href=\"#failure\">failure</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_dead\">fib_dead</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_fib_info\">free_fib_info</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Note! fib_semantic_match intentionally uses  RCU list functions. */</span>", 
"int <a class=\"id\" href=\"#fib_semantic_match\">fib_semantic_match</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>, const struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#flp\">flp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#fib_result\">fib_result</a> *<a class=\"id\" href=\"#res\">res</a>, int <a class=\"id\" href=\"#prefixlen\">prefixlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nh_sel\">nh_sel</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> != <a class=\"id\" href=\"#flp\">flp</a>-><a class=\"id\" href=\"#fl4_tos\">fl4_tos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a> &lt; <a class=\"id\" href=\"#flp\">flp</a>-><a class=\"id\" href=\"#fl4_scope\">fl4_scope</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_state\">fa_state</a> |= <a class=\"id\" href=\"#FA_S_ACCESSED\">FA_S_ACCESSED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_props\">fib_props</a>[<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a>].<a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a> &amp; <a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_UNICAST\">RTN_UNICAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_ANYCAST\">RTN_ANYCAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_nexthops\">for_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#flp\">flp</a>-><a class=\"id\" href=\"#oif\">oif</a> || <a class=\"id\" href=\"#flp\">flp</a>-><a class=\"id\" href=\"#oif\">oif</a> == <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nhsel\">nhsel</a> &lt; <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh_sel\">nh_sel</a> = <a class=\"id\" href=\"#nhsel\">nhsel</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fill_res\">out_fill_res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nhsel\">nhsel</a> &lt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fill_res\">out_fill_res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"fib_semantic_match bad type %#x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#out_fill_res\">out_fill_res</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#prefixlen\">prefixlen</a> = <a class=\"id\" href=\"#prefixlen\">prefixlen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#nh_sel\">nh_sel</a> = <a class=\"id\" href=\"#nh_sel\">nh_sel</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_clntref\">fib_clntref</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Find appropriate source address to this destination */</span>", 
"", 
"<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#__fib_res_prefsrc\">__fib_res_prefsrc</a>(struct <a class=\"id\" href=\"#fib_result\">fib_result</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inet_select_addr\">inet_select_addr</a>(<a class=\"id\" href=\"#FIB_RES_DEV\">FIB_RES_DEV</a>(*<a class=\"id\" href=\"#res\">res</a>), <a class=\"id\" href=\"#FIB_RES_GW\">FIB_RES_GW</a>(*<a class=\"id\" href=\"#res\">res</a>), <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#scope\">scope</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_dump_info\">fib_dump_info</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a>, int <a class=\"id\" href=\"#event\">event</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tb_id\">tb_id</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#scope\">scope</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dst\">dst</a>, int <a class=\"id\" href=\"#dst_len\">dst_len</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tos\">tos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlmsghdr\">nlmsghdr</a> *<a class=\"id\" href=\"#nlh\">nlh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtmsg\">rtmsg</a> *<a class=\"id\" href=\"#rtm\">rtm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlh\">nlh</a> = <a class=\"id\" href=\"#nlmsg_put\">nlmsg_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#event\">event</a>, sizeof(*<a class=\"id\" href=\"#rtm\">rtm</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nlh\">nlh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a> = <a class=\"id\" href=\"#nlmsg_data\">nlmsg_data</a>(<a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_family\">rtm_family</a> = <a class=\"id\" href=\"#AF_INET\">AF_INET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_dst_len\">rtm_dst_len</a> = <a class=\"id\" href=\"#dst_len\">dst_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_src_len\">rtm_src_len</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_tos\">rtm_tos</a> = <a class=\"id\" href=\"#tos\">tos</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb_id\">tb_id</a> &lt; 256)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_table\">rtm_table</a> = <a class=\"id\" href=\"#tb_id\">tb_id</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_table\">rtm_table</a> = <a class=\"id\" href=\"#RT_TABLE_COMPAT\">RT_TABLE_COMPAT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_TABLE\">RTA_TABLE</a>, <a class=\"id\" href=\"#tb_id\">tb_id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_type\">rtm_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_flags\">rtm_flags</a> = <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_scope\">rtm_scope</a> = <a class=\"id\" href=\"#scope\">scope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_protocol\">rtm_protocol</a> = <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_protocol\">fib_protocol</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtm\">rtm</a>-><a class=\"id\" href=\"#rtm_dst_len\">rtm_dst_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_DST\">RTA_DST</a>, <a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_PRIORITY\">RTA_PRIORITY</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rtnetlink_put_metrics\">rtnetlink_put_metrics</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_metrics\">fib_metrics</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_PREFSRC\">RTA_PREFSRC</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a> == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_GATEWAY\">RTA_GATEWAY</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_OIF\">RTA_OIF</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>[0].<a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_FLOW\">RTA_FLOW</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>[0].<a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rtnexthop\">rtnexthop</a> *<a class=\"id\" href=\"#rtnh\">rtnh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#mp\">mp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mp\">mp</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_MULTIPATH\">RTA_MULTIPATH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mp\">mp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_nexthops\">for_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a> = <a class=\"id\" href=\"#nla_reserve_nohdr\">nla_reserve_nohdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#rtnh\">rtnh</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rtnh\">rtnh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_flags\">rtnh_flags</a> = <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a> &amp; 0xFF;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_hops\">rtnh_hops</a> = <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_weight\">nh_weight</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_ifindex\">rtnh_ifindex</a> = <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_oif\">nh_oif</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_BE32\">NLA_PUT_BE32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_GATEWAY\">RTA_GATEWAY</a>, <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_CLS_ROUTE\">CONFIG_NET_CLS_ROUTE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NLA_PUT_U32\">NLA_PUT_U32</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#RTA_FLOW\">RTA_FLOW</a>, <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_tclassid\">nh_tclassid</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* length of rtnetlink header + attributes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtnh\">rtnh</a>-><a class=\"id\" href=\"#rtnh_len\">rtnh_len</a> = <a class=\"id\" href=\"#nlmsg_get_pos\">nlmsg_get_pos</a>(<a class=\"id\" href=\"#skb\">skb</a>) - (void *) <a class=\"id\" href=\"#rtnh\">rtnh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#mp\">mp</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nlmsg_end\">nlmsg_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"", 
"<a class=\"id\" href=\"#nla_put_failure\">nla_put_failure</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_cancel\">nlmsg_cancel</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nlh\">nlh</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">   Update FIB if:</span>", 
"<span class=\"comment\">   - local address disappeared -&gt; we must delete all the entries</span>", 
"<span class=\"comment\">     referring to it.</span>", 
"<span class=\"comment\">   - device went down -&gt; we must shutdown all nexthops going via it.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#fib_sync_down_addr\">fib_sync_down_addr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#local\">local</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#fib_laddr_hashfn\">fib_laddr_hashfn</a>(<a class=\"id\" href=\"#local\">local</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_laddrhash\">fib_info_laddrhash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fib_info_laddrhash\">fib_info_laddrhash</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#local\">local</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fib_lhash\">fib_lhash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_net\">fib_net</a>, <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_prefsrc\">fib_prefsrc</a> == <a class=\"id\" href=\"#local\">local</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a> |= <a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_sync_down_dev\">fib_sync_down_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#RT_SCOPE_NOWHERE\">RT_SCOPE_NOWHERE</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#prev_fi\">prev_fi</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#fib_devindex_hashfn\">fib_devindex_hashfn</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_devhash\">fib_info_devhash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nh\">nh</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#force\">force</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#nh\">nh</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#nh_hash\">nh_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_parent\">nh_parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dead\">dead</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> != <a class=\"id\" href=\"#dev\">dev</a> || <a class=\"id\" href=\"#fi\">fi</a> == <a class=\"id\" href=\"#prev_fi\">prev_fi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_fi\">prev_fi</a> = <a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dead\">dead</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dead\">dead</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> == <a class=\"id\" href=\"#dev\">dev</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_scope\">nh_scope</a> != <a class=\"id\" href=\"#scope\">scope</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a> |= <a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_power\">fib_power</a> -= <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_power\">nh_power</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_power\">nh_power</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dead\">dead</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#force\">force</a> &gt; 1 && <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> == <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dead\">dead</a> = <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dead\">dead</a> == <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a> |= <a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_ROUTE_MULTIPATH\">CONFIG_IP_ROUTE_MULTIPATH</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">   Dead device goes up. We wake up dead nexthops.</span>", 
"<span class=\"comment\">   It takes sense only on multipath routes.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#fib_sync_up\">fib_sync_up</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#prev_fi\">prev_fi</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_nh\">fib_nh</a> *<a class=\"id\" href=\"#nh\">nh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_fi\">prev_fi</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#fib_devindex_hashfn\">fib_devindex_hashfn</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fib_info_devhash\">fib_info_devhash</a>[<a class=\"id\" href=\"#hash\">hash</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#nh\">nh</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#nh_hash\">nh_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_parent\">nh_parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#alive\">alive</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nhs\">fib_nhs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nh\">nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> != <a class=\"id\" href=\"#dev\">dev</a> || <a class=\"id\" href=\"#fi\">fi</a> == <a class=\"id\" href=\"#prev_fi\">prev_fi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_fi\">prev_fi</a> = <a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alive\">alive</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alive\">alive</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_UP\">IFF_UP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_dev\">nh_dev</a> != <a class=\"id\" href=\"#dev\">dev</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alive\">alive</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_power\">nh_power</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a> &= ~<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>)", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#alive\">alive</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a> &= ~<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">   The algorithm is suboptimal, but it provides really</span>", 
"<span class=\"comment\">   fair weighted route distribution.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#fib_select_multipath\">fib_select_multipath</a>(const struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#flp\">flp</a>, struct <a class=\"id\" href=\"#fib_result\">fib_result</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#w\">w</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_power\">fib_power</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#power\">power</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#power\">power</a> += <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_weight\">nh_weight</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_power\">nh_power</a> = <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_weight\">nh_weight</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_power\">fib_power</a> = <a class=\"id\" href=\"#power\">power</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#power\">power</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Race condition: route has just become dead. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#nh_sel\">nh_sel</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* w should be random number [0..fi-&gt;fib_power-1],</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   it is pretty bad approximation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> % <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_power\">fib_power</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#change_nexthops\">change_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_flags\">nh_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_power\">nh_power</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#w\">w</a> -= <a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_power\">nh_power</a>) <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop_nh\">nexthop_nh</a>-><a class=\"id\" href=\"#nh_power\">nh_power</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_power\">fib_power</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#nh_sel\">nh_sel</a> = <a class=\"id\" href=\"#nhsel\">nhsel</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#endfor_nexthops\">endfor_nexthops</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Race condition: route has just become dead. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#nh_sel\">nh_sel</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_multipath_lock\">fib_multipath_lock</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/0c/ed9a3d2df09f8778ce168b82b923a4c2cddd45.xr', __xr_tmp);
