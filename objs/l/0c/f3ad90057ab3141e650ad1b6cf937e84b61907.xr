var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This file define a set of standard wireless extensions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version :<span class=\"ts\"/>22<span class=\"ts\"/>16.3.07</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors :<span class=\"ts\"/>Jean Tourrilhes - HPL - &lt;jt@hpl.hp.com&gt;</span>", 
"<span class=\"comment\"> * Copyright (c) 1997-2007 Jean Tourrilhes, All Rights Reserved.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_WIRELESS_H\">_LINUX_WIRELESS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_WIRELESS_H\">_LINUX_WIRELESS_H</a>", 
"", 
"<span class=\"comment\">/************************** DOCUMENTATION **************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initial APIs (1996 -&gt; onward) :</span>", 
"<span class=\"comment\"> * -----------------------------</span>", 
"<span class=\"comment\"> * Basically, the wireless extensions are for now a set of standard ioctl</span>", 
"<span class=\"comment\"> * call + /proc/net/wireless</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The entry /proc/net/wireless give statistics and information on the</span>", 
"<span class=\"comment\"> * driver.</span>", 
"<span class=\"comment\"> * This is better than having each driver having its entry because</span>", 
"<span class=\"comment\"> * its centralised and we may remove the driver module safely.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Ioctl are used to configure the driver and issue commands.  This is</span>", 
"<span class=\"comment\"> * better than command line options of insmod because we may want to</span>", 
"<span class=\"comment\"> * change dynamically (while the driver is running) some parameters.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The ioctl mechanimsm are copied from standard devices ioctl.</span>", 
"<span class=\"comment\"> * We have the list of command plus a structure descibing the</span>", 
"<span class=\"comment\"> * data exchanged...</span>", 
"<span class=\"comment\"> * Note that to add these ioctl, I was obliged to modify :</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># net/core/dev.c (two place + add include)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># net/ipv4/af_inet.c (one place + add include)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * /proc/net/wireless is a copy of /proc/net/dev.</span>", 
"<span class=\"comment\"> * We have a structure for data passed from the driver to /proc/net/wireless</span>", 
"<span class=\"comment\"> * Too add this, I've modified :</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># net/core/dev.c (two other places)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># include/linux/netdevice.h (one place)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># include/linux/proc_fs.h (one place)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * New driver API (2002 -&gt; onward) :</span>", 
"<span class=\"comment\"> * -------------------------------</span>", 
"<span class=\"comment\"> * This file is only concerned with the user space API and common definitions.</span>", 
"<span class=\"comment\"> * The new driver API is defined and documented in :</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># include/net/iw_handler.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note as well that /proc/net/wireless implementation has now moved in :</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># net/core/wireless.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Wireless Events (2002 -&gt; onward) :</span>", 
"<span class=\"comment\"> * --------------------------------</span>", 
"<span class=\"comment\"> * Events are defined at the end of this file, and implemented in :</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/># net/core/wireless.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Other comments :</span>", 
"<span class=\"comment\"> * --------------</span>", 
"<span class=\"comment\"> * Do not add here things that are redundant with other mechanisms</span>", 
"<span class=\"comment\"> * (drivers init, ifconfig, /proc/net/dev, ...) and with are not</span>", 
"<span class=\"comment\"> * wireless specific.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These wireless extensions are not magic : each driver has to provide</span>", 
"<span class=\"comment\"> * support for them...</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IMPORTANT NOTE : As everything in the kernel, this is very much a</span>", 
"<span class=\"comment\"> * work in progress. Contact me if you have ideas of improvements...</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/***************************** INCLUDES *****************************/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for __u* and __s* typedefs */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for \"struct sockaddr\" et al<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/if.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* for IFNAMSIZ and co... */</span>", 
"", 
"<span class=\"comment\">/***************************** VERSION *****************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This constant is used to know the availability of the wireless</span>", 
"<span class=\"comment\"> * extensions and to know which version of wireless extensions it is</span>", 
"<span class=\"comment\"> * (there is some stuff that will be added in the future...)</span>", 
"<span class=\"comment\"> * I just plan to increment with each new version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#WIRELESS_EXT\">WIRELESS_EXT</a><span class=\"ts\"/>22", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Changes :</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V2 to V3</span>", 
"<span class=\"comment\"> * --------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alan Cox start some incompatibles changes. I've integrated a bit more.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Encryption renamed to Encode to avoid US regulation problems</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Frequency changed from float to struct to avoid problems on old 386</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V3 to V4</span>", 
"<span class=\"comment\"> * --------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add sensitivity</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V4 to V5</span>", 
"<span class=\"comment\"> * --------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Missing encoding definitions in range</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Access points stuff</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V5 to V6</span>", 
"<span class=\"comment\"> * --------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- 802.11 support (ESSID ioctls)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V6 to V7</span>", 
"<span class=\"comment\"> * --------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- define IW_ESSID_MAX_SIZE and IW_MAX_AP</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V7 to V8</span>", 
"<span class=\"comment\"> * --------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Changed my e-mail address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- More 802.11 support (nickname, rate, rts, frag)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- List index in frequencies</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V8 to V9</span>", 
"<span class=\"comment\"> * --------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Support for 'mode of operation' (ad-hoc, managed...)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Support for unicast and multicast power saving</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Change encoding to support larger tokens (&gt;64 bits)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Updated iw_params (disable, flags) and use it for NWID</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Extracted iw_point from iwreq for clarity</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V9 to V10</span>", 
"<span class=\"comment\"> * ---------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add PM capability to range structure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add PM modifier : MAX/MIN/RELATIVE</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add encoding option : IW_ENCODE_NOKEY</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add TxPower ioctls (work like TxRate)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V10 to V11</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add WE version in range (help backward/forward compatibility)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add retry ioctls (work like PM)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V11 to V12</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add SIOCSIWSTATS to get /proc/net/wireless programatically</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add DEV PRIVATE IOCTL to avoid collisions in SIOCDEVPRIVATE space</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add new statistics (frag, retry, beacon)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add average quality (for user space calibration)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V12 to V13</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Document creation of new driver API.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Extract union iwreq_data from struct iwreq (for new driver API).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Rename SIOCSIWNAME as SIOCSIWCOMMIT</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V13 to V14</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Wireless Events support : define struct iw_event</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Define additional specific event numbers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add \"addr\" and \"param\" fields in union iwreq_data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- AP scanning stuff (SIOCSIWSCAN and friends)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V14 to V15</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_PRIV_TYPE_ADDR for struct sockaddr private arg</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Make struct iw_freq signed (both m &amp; e), add explicit padding</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IWEVCUSTOM for driver specific event/scanning token</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_MAX_GET_SPY for driver returning a lot of addresses</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_TXPOW_RANGE for range of Tx Powers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IWEVREGISTERED &amp; IWEVEXPIRED events for Access Points</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_MODE_MONITOR for passive monitor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V15 to V16</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Increase the number of bitrates in iw_range to 32 (for 802.11g)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Increase the number of frequencies in iw_range to 32 (for 802.11b+a)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Reshuffle struct iw_range for increases, add filler</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Increase IW_MAX_AP to 64 for driver returning a lot of addresses</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Remove IW_MAX_GET_SPY because conflict with enhanced spy support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add SIOCSIWTHRSPY/SIOCGIWTHRSPY and \"struct iw_thrspy\"</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_ENCODE_TEMP and iw_range-&gt;encoding_login_index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V16 to V17</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add flags to frequency -&gt; auto/fixed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Document (struct iw_quality *)-&gt;updated, add new flags (INVALID)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Wireless Event capability in struct iw_range</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add support for relative TxPower (yick !)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V17 to V18 (From Jouni Malinen &lt;j@w1.fi&gt;)</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add support for WPA/WPA2</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add extended encoding configuration (SIOCSIWENCODEEXT and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  SIOCGIWENCODEEXT)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add SIOCSIWGENIE/SIOCGIWGENIE</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add SIOCSIWMLME</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add SIOCSIWPMKSA</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add struct iw_range bit field for supported encoding capabilities</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add optional scan request parameters for SIOCSIWSCAN</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add SIOCSIWAUTH/SIOCGIWAUTH for setting authentication and WPA</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  related parameters (extensible up to 4096 parameter values)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add wireless events: IWEVGENIE, IWEVMICHAELMICFAILURE,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  IWEVASSOCREQIE, IWEVASSOCRESPIE, IWEVPMKIDCAND</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V18 to V19</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Remove (struct iw_point *)-&gt;pointer from events and streams</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Remove header includes to help user space</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Increase IW_ENCODING_TOKEN_MAX from 32 to 64</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_QUAL_ALL_UPDATED and IW_QUAL_ALL_INVALID macros</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add explicit flag to tell stats are in dBm : IW_QUAL_DBM</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_IOCTL_IDX() and IW_EVENT_IDX() macros</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V19 to V20</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- RtNetlink requests support (SET/GET)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V20 to V21</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Remove (struct net_device *)-&gt;get_wireless_stats()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Change length in ESSID and NICK to strlen() instead of strlen()+1</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add IW_RETRY_SHORT/IW_RETRY_LONG retry modifiers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Power/Retry relative values no longer * 100000</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Add explicit flag to tell stats are in 802.11k RCPI : IW_QUAL_RCPI</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * V21 to V22</span>", 
"<span class=\"comment\"> * ----------</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- Prevent leaking of kernel space in stream on 64 bits.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**************************** CONSTANTS ****************************/</span>", 
"", 
"<span class=\"comment\">/* -------------------------- IOCTL LIST -------------------------- */</span>", 
"", 
"<span class=\"comment\">/* Wireless Identification */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWCOMMIT\">SIOCSIWCOMMIT</a><span class=\"ts\"/>0x8B00<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Commit pending changes to driver */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWNAME\">SIOCGIWNAME</a><span class=\"ts\"/>0x8B01<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get name == wireless protocol */</span>", 
"<span class=\"comment\">/* SIOCGIWNAME is used to verify the presence of Wireless Extensions.</span>", 
"<span class=\"comment\"> * Common values : \"IEEE 802.11-DS\", \"IEEE 802.11-FH\", \"IEEE 802.11b\"...</span>", 
"<span class=\"comment\"> * Don't put the name of your driver there, it's useless. */</span>", 
"", 
"<span class=\"comment\">/* Basic operations */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWNWID\">SIOCSIWNWID</a><span class=\"ts\"/>0x8B02<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set network id (pre-802.11) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWNWID\">SIOCGIWNWID</a><span class=\"ts\"/>0x8B03<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get network id (the cell) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWFREQ\">SIOCSIWFREQ</a><span class=\"ts\"/>0x8B04<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set channel/frequency (Hz) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWFREQ\">SIOCGIWFREQ</a><span class=\"ts\"/>0x8B05<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get channel/frequency (Hz) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWMODE\">SIOCSIWMODE</a><span class=\"ts\"/>0x8B06<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set operation mode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWMODE\">SIOCGIWMODE</a><span class=\"ts\"/>0x8B07<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get operation mode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWSENS\">SIOCSIWSENS</a><span class=\"ts\"/>0x8B08<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set sensitivity (dBm) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWSENS\">SIOCGIWSENS</a><span class=\"ts\"/>0x8B09<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get sensitivity (dBm) */</span>", 
"", 
"<span class=\"comment\">/* Informative stuff */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWRANGE\">SIOCSIWRANGE</a><span class=\"ts\"/>0x8B0A<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unused */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWRANGE\">SIOCGIWRANGE</a><span class=\"ts\"/>0x8B0B<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get range of parameters */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWPRIV\">SIOCSIWPRIV</a><span class=\"ts\"/>0x8B0C<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unused */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWPRIV\">SIOCGIWPRIV</a><span class=\"ts\"/>0x8B0D<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get private ioctl interface info */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWSTATS\">SIOCSIWSTATS</a><span class=\"ts\"/>0x8B0E<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unused */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWSTATS\">SIOCGIWSTATS</a><span class=\"ts\"/>0x8B0F<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get /proc/net/wireless stats */</span>", 
"<span class=\"comment\">/* SIOCGIWSTATS is strictly used between user space and the kernel, and</span>", 
"<span class=\"comment\"> * is never passed to the driver (i.e. the driver will never see it). */</span>", 
"", 
"<span class=\"comment\">/* Spy support (statistics per MAC address - used for Mobile IP support) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWSPY\">SIOCSIWSPY</a><span class=\"ts\"/>0x8B10<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set spy addresses */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWSPY\">SIOCGIWSPY</a><span class=\"ts\"/>0x8B11<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get spy info (quality of link) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWTHRSPY\">SIOCSIWTHRSPY</a><span class=\"ts\"/>0x8B12<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set spy threshold (spy event) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWTHRSPY\">SIOCGIWTHRSPY</a><span class=\"ts\"/>0x8B13<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get spy threshold */</span>", 
"", 
"<span class=\"comment\">/* Access Point manipulation */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWAP\">SIOCSIWAP</a><span class=\"ts\"/>0x8B14<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set access point MAC addresses */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWAP\">SIOCGIWAP</a><span class=\"ts\"/>0x8B15<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get access point MAC addresses */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWAPLIST\">SIOCGIWAPLIST</a><span class=\"ts\"/>0x8B17<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Deprecated in favor of scanning */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWSCAN\">SIOCSIWSCAN</a><span class=\"ts\"/>0x8B18<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* trigger scanning (list cells) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWSCAN\">SIOCGIWSCAN</a><span class=\"ts\"/>0x8B19<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get scanning results */</span>", 
"", 
"<span class=\"comment\">/* 802.11 specific support */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWESSID\">SIOCSIWESSID</a><span class=\"ts\"/>0x8B1A<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set ESSID (network name) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWESSID\">SIOCGIWESSID</a><span class=\"ts\"/>0x8B1B<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get ESSID */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWNICKN\">SIOCSIWNICKN</a><span class=\"ts\"/>0x8B1C<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set node name/nickname */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWNICKN\">SIOCGIWNICKN</a><span class=\"ts\"/>0x8B1D<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get node name/nickname */</span>", 
"<span class=\"comment\">/* As the ESSID and NICKN are strings up to 32 bytes long, it doesn't fit</span>", 
"<span class=\"comment\"> * within the 'iwreq' structure, so we need to use the 'data' member to</span>", 
"<span class=\"comment\"> * point to a string in user space, like it is done for RANGE... */</span>", 
"", 
"<span class=\"comment\">/* Other parameters useful in 802.11 and some other devices */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWRATE\">SIOCSIWRATE</a><span class=\"ts\"/>0x8B20<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set default bit rate (bps) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWRATE\">SIOCGIWRATE</a><span class=\"ts\"/>0x8B21<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get default bit rate (bps) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWRTS\">SIOCSIWRTS</a><span class=\"ts\"/>0x8B22<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set RTS/CTS threshold (bytes) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWRTS\">SIOCGIWRTS</a><span class=\"ts\"/>0x8B23<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get RTS/CTS threshold (bytes) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWFRAG\">SIOCSIWFRAG</a><span class=\"ts\"/>0x8B24<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set fragmentation thr (bytes) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWFRAG\">SIOCGIWFRAG</a><span class=\"ts\"/>0x8B25<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get fragmentation thr (bytes) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWTXPOW\">SIOCSIWTXPOW</a><span class=\"ts\"/>0x8B26<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set transmit power (dBm) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWTXPOW\">SIOCGIWTXPOW</a><span class=\"ts\"/>0x8B27<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get transmit power (dBm) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWRETRY\">SIOCSIWRETRY</a><span class=\"ts\"/>0x8B28<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set retry limits and lifetime */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWRETRY\">SIOCGIWRETRY</a><span class=\"ts\"/>0x8B29<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get retry limits and lifetime */</span>", 
"", 
"<span class=\"comment\">/* Encoding stuff (scrambling, hardware security, WEP...) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWENCODE\">SIOCSIWENCODE</a><span class=\"ts\"/>0x8B2A<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set encoding token &amp; mode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWENCODE\">SIOCGIWENCODE</a><span class=\"ts\"/>0x8B2B<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get encoding token &amp; mode */</span>", 
"<span class=\"comment\">/* Power saving stuff (power management, unicast and multicast) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWPOWER\">SIOCSIWPOWER</a><span class=\"ts\"/>0x8B2C<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set Power Management settings */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWPOWER\">SIOCGIWPOWER</a><span class=\"ts\"/>0x8B2D<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get Power Management settings */</span>", 
"", 
"<span class=\"comment\">/* WPA : Generic IEEE 802.11 informatiom element (e.g., for WPA/RSN/WMM).</span>", 
"<span class=\"comment\"> * This ioctl uses struct iw_point and data buffer that includes IE id and len</span>", 
"<span class=\"comment\"> * fields. More than one IE may be included in the request. Setting the generic</span>", 
"<span class=\"comment\"> * IE to empty buffer (len=0) removes the generic IE from the driver. Drivers</span>", 
"<span class=\"comment\"> * are allowed to generate their own WPA/RSN IEs, but in these cases, drivers</span>", 
"<span class=\"comment\"> * are required to report the used IE as a wireless event, e.g., when</span>", 
"<span class=\"comment\"> * associating with an AP. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWGENIE\">SIOCSIWGENIE</a><span class=\"ts\"/>0x8B30<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set generic IE */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWGENIE\">SIOCGIWGENIE</a><span class=\"ts\"/>0x8B31<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get generic IE */</span>", 
"", 
"<span class=\"comment\">/* WPA : IEEE 802.11 MLME requests */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWMLME\">SIOCSIWMLME</a><span class=\"ts\"/>0x8B16<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* request MLME operation; uses</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * struct iw_mlme */</span>", 
"<span class=\"comment\">/* WPA : Authentication mode parameters */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWAUTH\">SIOCSIWAUTH</a><span class=\"ts\"/>0x8B32<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set authentication mode params */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWAUTH\">SIOCGIWAUTH</a><span class=\"ts\"/>0x8B33<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get authentication mode params */</span>", 
"", 
"<span class=\"comment\">/* WPA : Extended version of encoding configuration */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWENCODEEXT\">SIOCSIWENCODEEXT</a> 0x8B34<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set encoding token &amp; mode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCGIWENCODEEXT\">SIOCGIWENCODEEXT</a> 0x8B35<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get encoding token &amp; mode */</span>", 
"", 
"<span class=\"comment\">/* WPA2 : PMKSA cache management */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCSIWPMKSA\">SIOCSIWPMKSA</a><span class=\"ts\"/>0x8B36<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PMKSA cache operation */</span>", 
"", 
"<span class=\"comment\">/* -------------------- DEV PRIVATE IOCTL LIST -------------------- */</span>", 
"", 
"<span class=\"comment\">/* These 32 ioctl are wireless device private, for 16 commands.</span>", 
"<span class=\"comment\"> * Each driver is free to use them for whatever purpose it chooses,</span>", 
"<span class=\"comment\"> * however the driver *must* export the description of those ioctls</span>", 
"<span class=\"comment\"> * with SIOCGIWPRIV and *must* use arguments as defined below.</span>", 
"<span class=\"comment\"> * If you don't follow those rules, DaveM is going to hate you (reason :</span>", 
"<span class=\"comment\"> * it make mixed 32/64bit operation impossible).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCIWFIRSTPRIV\">SIOCIWFIRSTPRIV</a><span class=\"ts\"/>0x8BE0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCIWLASTPRIV\">SIOCIWLASTPRIV</a><span class=\"ts\"/>0x8BFF", 
"<span class=\"comment\">/* Previously, we were using SIOCDEVPRIVATE, but we now have our</span>", 
"<span class=\"comment\"> * separate range because of collisions with other tools such as</span>", 
"<span class=\"comment\"> * 'mii-tool'.</span>", 
"<span class=\"comment\"> * We now have 32 commands, so a bit more space ;-).</span>", 
"<span class=\"comment\"> * Also, all 'even' commands are only usable by root and don't return the</span>", 
"<span class=\"comment\"> * content of ifr/iwr to user (but you are not obliged to use the set/get</span>", 
"<span class=\"comment\"> * convention, just use every other two command). More details in iwpriv.c.</span>", 
"<span class=\"comment\"> * And I repeat : you are not forced to use them with iwpriv, but you</span>", 
"<span class=\"comment\"> * must be compliant with it.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* ------------------------- IOCTL STUFF ------------------------- */</span>", 
"", 
"<span class=\"comment\">/* The first and the last (range) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCIWFIRST\">SIOCIWFIRST</a><span class=\"ts\"/>0x8B00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIOCIWLAST\">SIOCIWLAST</a><span class=\"ts\"/><a class=\"id\" href=\"#SIOCIWLASTPRIV\">SIOCIWLASTPRIV</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x8BFF */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_IOCTL_IDX\">IW_IOCTL_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#cmd\">cmd</a>) - <a class=\"id\" href=\"#SIOCIWFIRST\">SIOCIWFIRST</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_HANDLER\">IW_HANDLER</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#func\">func</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#IW_IOCTL_IDX\">IW_IOCTL_IDX</a>(<a class=\"id\" href=\"#id\">id</a>)] = <a class=\"id\" href=\"#func\">func</a>", 
"", 
"<span class=\"comment\">/* Odd : get (world access), even : set (root access) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_IS_SET\">IW_IS_SET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)<span class=\"ts\"/>(!((<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; 0x1))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_IS_GET\">IW_IS_GET</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; 0x1)", 
"", 
"<span class=\"comment\">/* ----------------------- WIRELESS EVENTS ----------------------- */</span>", 
"<span class=\"comment\">/* Those are *NOT* ioctls, do not issue request on them !!! */</span>", 
"<span class=\"comment\">/* Most events use the same identifier as ioctl requests */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVTXDROP\">IWEVTXDROP</a><span class=\"ts\"/>0x8C00<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Packet dropped to excessive retry */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVQUAL\">IWEVQUAL</a><span class=\"ts\"/>0x8C01<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Quality part of statistics (scan) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVCUSTOM\">IWEVCUSTOM</a><span class=\"ts\"/>0x8C02<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Driver specific ascii string */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVREGISTERED\">IWEVREGISTERED</a><span class=\"ts\"/>0x8C03<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Discovered a new node (AP mode) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVEXPIRED\">IWEVEXPIRED</a><span class=\"ts\"/>0x8C04<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Expired a node (AP mode) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVGENIE\">IWEVGENIE</a><span class=\"ts\"/>0x8C05<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Generic IE (WPA, RSN, WMM, ..)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (scan results); This includes id and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * length fields. One IWEVGENIE may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * contain more than one IE. Scan</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * results may contain one or more</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * IWEVGENIE events. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVMICHAELMICFAILURE\">IWEVMICHAELMICFAILURE</a> 0x8C06<span class=\"ts\"/><span class=\"comment\">/* Michael MIC failure</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (struct iw_michaelmicfailure)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVASSOCREQIE\">IWEVASSOCREQIE</a><span class=\"ts\"/>0x8C07<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IEs used in (Re)Association Request.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The data includes id and length</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * fields and may contain more than one</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * IE. This event is required in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Managed mode if the driver</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * generates its own WPA/RSN IE. This</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * should be sent just before</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * IWEVREGISTERED event for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * association. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVASSOCRESPIE\">IWEVASSOCRESPIE</a><span class=\"ts\"/>0x8C08<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IEs used in (Re)Association</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Response. The data includes id and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * length fields and may contain more</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * than one IE. This may be sent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * between IWEVASSOCREQIE and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * IWEVREGISTERED events for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * association. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVPMKIDCAND\">IWEVPMKIDCAND</a><span class=\"ts\"/>0x8C09<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PMKID candidate for RSN</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pre-authentication</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (struct iw_pmkid_cand) */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IWEVFIRST\">IWEVFIRST</a><span class=\"ts\"/>0x8C00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_IDX\">IW_EVENT_IDX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#cmd\">cmd</a>) - <a class=\"id\" href=\"#IWEVFIRST\">IWEVFIRST</a>)", 
"", 
"<span class=\"comment\">/* ------------------------- PRIVATE INFO ------------------------- */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following is used with SIOCGIWPRIV. It allow a driver to define</span>", 
"<span class=\"comment\"> * the interface (name, type of data) for its private ioctl.</span>", 
"<span class=\"comment\"> * Privates ioctl are SIOCIWFIRSTPRIV -&gt; SIOCIWLASTPRIV</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_TYPE_MASK\">IW_PRIV_TYPE_MASK</a><span class=\"ts\"/>0x7000<span class=\"ts\"/><span class=\"comment\">/* Type of arguments */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_TYPE_NONE\">IW_PRIV_TYPE_NONE</a><span class=\"ts\"/>0x0000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_TYPE_BYTE\">IW_PRIV_TYPE_BYTE</a><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"comment\">/* Char as number */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_TYPE_CHAR\">IW_PRIV_TYPE_CHAR</a><span class=\"ts\"/>0x2000<span class=\"ts\"/><span class=\"comment\">/* Char as character */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_TYPE_INT\">IW_PRIV_TYPE_INT</a><span class=\"ts\"/>0x4000<span class=\"ts\"/><span class=\"comment\">/* 32 bits int */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_TYPE_FLOAT\">IW_PRIV_TYPE_FLOAT</a><span class=\"ts\"/>0x5000<span class=\"ts\"/><span class=\"comment\">/* struct iw_freq */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_TYPE_ADDR\">IW_PRIV_TYPE_ADDR</a><span class=\"ts\"/>0x6000<span class=\"ts\"/><span class=\"comment\">/* struct sockaddr */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_SIZE_FIXED\">IW_PRIV_SIZE_FIXED</a><span class=\"ts\"/>0x0800<span class=\"ts\"/><span class=\"comment\">/* Variable or fixed number of args */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PRIV_SIZE_MASK\">IW_PRIV_SIZE_MASK</a><span class=\"ts\"/>0x07FF<span class=\"ts\"/><span class=\"comment\">/* Max number of those args */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Note : if the number of args is fixed and the size &lt; 16 octets,</span>", 
"<span class=\"comment\"> * instead of passing a pointer we will put args in the iwreq struct...</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* ----------------------- OTHER CONSTANTS ----------------------- */</span>", 
"", 
"<span class=\"comment\">/* Maximum frequencies in the range struct */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MAX_FREQUENCIES\">IW_MAX_FREQUENCIES</a><span class=\"ts\"/>32", 
"<span class=\"comment\">/* Note : if you have something like 80 frequencies,</span>", 
"<span class=\"comment\"> * don't increase this constant and don't fill the frequency list.</span>", 
"<span class=\"comment\"> * The user will be able to set by channel anyway... */</span>", 
"", 
"<span class=\"comment\">/* Maximum bit rates in the range struct */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MAX_BITRATES\">IW_MAX_BITRATES</a><span class=\"ts\"/><span class=\"ts\"/>32", 
"", 
"<span class=\"comment\">/* Maximum tx powers in the range struct */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MAX_TXPOWER\">IW_MAX_TXPOWER</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"<span class=\"comment\">/* Note : if you more than 8 TXPowers, just set the max and min or</span>", 
"<span class=\"comment\"> * a few of them in the struct iw_range. */</span>", 
"", 
"<span class=\"comment\">/* Maximum of address that you may set with SPY */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MAX_SPY\">IW_MAX_SPY</a><span class=\"ts\"/><span class=\"ts\"/>8", 
"", 
"<span class=\"comment\">/* Maximum of address that you may get in the</span>", 
"<span class=\"comment\">   list of access points in range */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MAX_AP\">IW_MAX_AP</a><span class=\"ts\"/><span class=\"ts\"/>64", 
"", 
"<span class=\"comment\">/* Maximum size of the ESSID and NICKN strings */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ESSID_MAX_SIZE\">IW_ESSID_MAX_SIZE</a><span class=\"ts\"/>32", 
"", 
"<span class=\"comment\">/* Modes of operation */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_AUTO\">IW_MODE_AUTO</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* Let the driver decides */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_ADHOC\">IW_MODE_ADHOC</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Single cell network */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_INFRA\">IW_MODE_INFRA</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Multi cell network, roaming, ... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_MASTER\">IW_MODE_MASTER</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* Synchronisation master or Access Point */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_REPEAT\">IW_MODE_REPEAT</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* Wireless Repeater (forwarder) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_SECOND\">IW_MODE_SECOND</a><span class=\"ts\"/>5<span class=\"ts\"/><span class=\"comment\">/* Secondary master/repeater (backup) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_MONITOR\">IW_MODE_MONITOR</a><span class=\"ts\"/>6<span class=\"ts\"/><span class=\"comment\">/* Passive monitor (listen only) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MODE_MESH\">IW_MODE_MESH</a><span class=\"ts\"/>7<span class=\"ts\"/><span class=\"comment\">/* Mesh (IEEE 802.11s) network */</span>", 
"", 
"<span class=\"comment\">/* Statistics flags (bitmask in updated) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_QUAL_UPDATED\">IW_QUAL_QUAL_UPDATED</a><span class=\"ts\"/>0x01<span class=\"ts\"/><span class=\"comment\">/* Value was updated since last read */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_LEVEL_UPDATED\">IW_QUAL_LEVEL_UPDATED</a><span class=\"ts\"/>0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_NOISE_UPDATED\">IW_QUAL_NOISE_UPDATED</a><span class=\"ts\"/>0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_ALL_UPDATED\">IW_QUAL_ALL_UPDATED</a><span class=\"ts\"/>0x07", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_DBM\">IW_QUAL_DBM</a><span class=\"ts\"/><span class=\"ts\"/>0x08<span class=\"ts\"/><span class=\"comment\">/* Level + Noise are dBm */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_QUAL_INVALID\">IW_QUAL_QUAL_INVALID</a><span class=\"ts\"/>0x10<span class=\"ts\"/><span class=\"comment\">/* Driver doesn't provide value */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_LEVEL_INVALID\">IW_QUAL_LEVEL_INVALID</a><span class=\"ts\"/>0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_NOISE_INVALID\">IW_QUAL_NOISE_INVALID</a><span class=\"ts\"/>0x40", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_RCPI\">IW_QUAL_RCPI</a><span class=\"ts\"/><span class=\"ts\"/>0x80<span class=\"ts\"/><span class=\"comment\">/* Level + Noise are 802.11k RCPI */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_QUAL_ALL_INVALID\">IW_QUAL_ALL_INVALID</a><span class=\"ts\"/>0x70", 
"", 
"<span class=\"comment\">/* Frequency flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_FREQ_AUTO\">IW_FREQ_AUTO</a><span class=\"ts\"/><span class=\"ts\"/>0x00<span class=\"ts\"/><span class=\"comment\">/* Let the driver decides */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_FREQ_FIXED\">IW_FREQ_FIXED</a><span class=\"ts\"/><span class=\"ts\"/>0x01<span class=\"ts\"/><span class=\"comment\">/* Force a specific value */</span>", 
"", 
"<span class=\"comment\">/* Maximum number of size of encoding token available</span>", 
"<span class=\"comment\"> * they are listed in the range structure */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MAX_ENCODING_SIZES\">IW_MAX_ENCODING_SIZES</a><span class=\"ts\"/>8", 
"", 
"<span class=\"comment\">/* Maximum size of the encoding token in bytes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODING_TOKEN_MAX\">IW_ENCODING_TOKEN_MAX</a><span class=\"ts\"/>64<span class=\"ts\"/><span class=\"comment\">/* 512 bits (for now) */</span>", 
"", 
"<span class=\"comment\">/* Flags for encoding (along with the token) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_INDEX\">IW_ENCODE_INDEX</a><span class=\"ts\"/><span class=\"ts\"/>0x00FF<span class=\"ts\"/><span class=\"comment\">/* Token index (if needed) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_FLAGS\">IW_ENCODE_FLAGS</a><span class=\"ts\"/><span class=\"ts\"/>0xFF00<span class=\"ts\"/><span class=\"comment\">/* Flags defined below */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_MODE\">IW_ENCODE_MODE</a><span class=\"ts\"/><span class=\"ts\"/>0xF000<span class=\"ts\"/><span class=\"comment\">/* Modes defined below */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_DISABLED\">IW_ENCODE_DISABLED</a><span class=\"ts\"/>0x8000<span class=\"ts\"/><span class=\"comment\">/* Encoding disabled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_ENABLED\">IW_ENCODE_ENABLED</a><span class=\"ts\"/>0x0000<span class=\"ts\"/><span class=\"comment\">/* Encoding enabled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_RESTRICTED\">IW_ENCODE_RESTRICTED</a><span class=\"ts\"/>0x4000<span class=\"ts\"/><span class=\"comment\">/* Refuse non-encoded packets */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_OPEN\">IW_ENCODE_OPEN</a><span class=\"ts\"/><span class=\"ts\"/>0x2000<span class=\"ts\"/><span class=\"comment\">/* Accept non-encoded packets */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_NOKEY\">IW_ENCODE_NOKEY</a><span class=\"ts\"/><span class=\"ts\"/>0x0800  <span class=\"comment\">/* Key is write only, so not present */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_TEMP\">IW_ENCODE_TEMP</a><span class=\"ts\"/><span class=\"ts\"/>0x0400  <span class=\"comment\">/* Temporary key */</span>", 
"", 
"<span class=\"comment\">/* Power management flags available (along with the value, if any) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_ON\">IW_POWER_ON</a><span class=\"ts\"/><span class=\"ts\"/>0x0000<span class=\"ts\"/><span class=\"comment\">/* No details... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_TYPE\">IW_POWER_TYPE</a><span class=\"ts\"/><span class=\"ts\"/>0xF000<span class=\"ts\"/><span class=\"comment\">/* Type of parameter */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_PERIOD\">IW_POWER_PERIOD</a><span class=\"ts\"/><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"comment\">/* Value is a period/duration of  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_TIMEOUT\">IW_POWER_TIMEOUT</a><span class=\"ts\"/>0x2000<span class=\"ts\"/><span class=\"comment\">/* Value is a timeout (to go asleep) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_MODE\">IW_POWER_MODE</a><span class=\"ts\"/><span class=\"ts\"/>0x0F00<span class=\"ts\"/><span class=\"comment\">/* Power Management mode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_UNICAST_R\">IW_POWER_UNICAST_R</a><span class=\"ts\"/>0x0100<span class=\"ts\"/><span class=\"comment\">/* Receive only unicast messages */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_MULTICAST_R\">IW_POWER_MULTICAST_R</a><span class=\"ts\"/>0x0200<span class=\"ts\"/><span class=\"comment\">/* Receive only multicast messages */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_ALL_R\">IW_POWER_ALL_R</a><span class=\"ts\"/><span class=\"ts\"/>0x0300<span class=\"ts\"/><span class=\"comment\">/* Receive all messages though PM */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_FORCE_S\">IW_POWER_FORCE_S</a><span class=\"ts\"/>0x0400<span class=\"ts\"/><span class=\"comment\">/* Force PM procedure for sending unicast */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_REPEATER\">IW_POWER_REPEATER</a><span class=\"ts\"/>0x0800<span class=\"ts\"/><span class=\"comment\">/* Repeat broadcast messages in PM period */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_MODIFIER\">IW_POWER_MODIFIER</a><span class=\"ts\"/>0x000F<span class=\"ts\"/><span class=\"comment\">/* Modify a parameter */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_MIN\">IW_POWER_MIN</a><span class=\"ts\"/><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* Value is a minimum  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_MAX\">IW_POWER_MAX</a><span class=\"ts\"/><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"comment\">/* Value is a maximum */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_POWER_RELATIVE\">IW_POWER_RELATIVE</a><span class=\"ts\"/>0x0004<span class=\"ts\"/><span class=\"comment\">/* Value is not in seconds/ms/us */</span>", 
"", 
"<span class=\"comment\">/* Transmit Power flags available */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_TXPOW_TYPE\">IW_TXPOW_TYPE</a><span class=\"ts\"/><span class=\"ts\"/>0x00FF<span class=\"ts\"/><span class=\"comment\">/* Type of value */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_TXPOW_DBM\">IW_TXPOW_DBM</a><span class=\"ts\"/><span class=\"ts\"/>0x0000<span class=\"ts\"/><span class=\"comment\">/* Value is in dBm */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_TXPOW_MWATT\">IW_TXPOW_MWATT</a><span class=\"ts\"/><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* Value is in mW */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_TXPOW_RELATIVE\">IW_TXPOW_RELATIVE</a><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"comment\">/* Value is in arbitrary units */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_TXPOW_RANGE\">IW_TXPOW_RANGE</a><span class=\"ts\"/><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"comment\">/* Range of value between min/max */</span>", 
"", 
"<span class=\"comment\">/* Retry limits and lifetime flags available */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_ON\">IW_RETRY_ON</a><span class=\"ts\"/><span class=\"ts\"/>0x0000<span class=\"ts\"/><span class=\"comment\">/* No details... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_TYPE\">IW_RETRY_TYPE</a><span class=\"ts\"/><span class=\"ts\"/>0xF000<span class=\"ts\"/><span class=\"comment\">/* Type of parameter */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_LIMIT\">IW_RETRY_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>0x1000<span class=\"ts\"/><span class=\"comment\">/* Maximum number of retries*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_LIFETIME\">IW_RETRY_LIFETIME</a><span class=\"ts\"/>0x2000<span class=\"ts\"/><span class=\"comment\">/* Maximum duration of retries in us */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_MODIFIER\">IW_RETRY_MODIFIER</a><span class=\"ts\"/>0x00FF<span class=\"ts\"/><span class=\"comment\">/* Modify a parameter */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_MIN\">IW_RETRY_MIN</a><span class=\"ts\"/><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* Value is a minimum  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_MAX\">IW_RETRY_MAX</a><span class=\"ts\"/><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"comment\">/* Value is a maximum */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_RELATIVE\">IW_RETRY_RELATIVE</a><span class=\"ts\"/>0x0004<span class=\"ts\"/><span class=\"comment\">/* Value is not in seconds/ms/us */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_SHORT\">IW_RETRY_SHORT</a><span class=\"ts\"/><span class=\"ts\"/>0x0010<span class=\"ts\"/><span class=\"comment\">/* Value is for short packets  */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_RETRY_LONG\">IW_RETRY_LONG</a><span class=\"ts\"/><span class=\"ts\"/>0x0020<span class=\"ts\"/><span class=\"comment\">/* Value is for long packets */</span>", 
"", 
"<span class=\"comment\">/* Scanning request flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_DEFAULT\">IW_SCAN_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/>0x0000<span class=\"ts\"/><span class=\"comment\">/* Default scan of the driver */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_ALL_ESSID\">IW_SCAN_ALL_ESSID</a><span class=\"ts\"/>0x0001<span class=\"ts\"/><span class=\"comment\">/* Scan all ESSIDs */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_THIS_ESSID\">IW_SCAN_THIS_ESSID</a><span class=\"ts\"/>0x0002<span class=\"ts\"/><span class=\"comment\">/* Scan only this ESSID */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_ALL_FREQ\">IW_SCAN_ALL_FREQ</a><span class=\"ts\"/>0x0004<span class=\"ts\"/><span class=\"comment\">/* Scan all Frequencies */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_THIS_FREQ\">IW_SCAN_THIS_FREQ</a><span class=\"ts\"/>0x0008<span class=\"ts\"/><span class=\"comment\">/* Scan only this Frequency */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_ALL_MODE\">IW_SCAN_ALL_MODE</a><span class=\"ts\"/>0x0010<span class=\"ts\"/><span class=\"comment\">/* Scan all Modes */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_THIS_MODE\">IW_SCAN_THIS_MODE</a><span class=\"ts\"/>0x0020<span class=\"ts\"/><span class=\"comment\">/* Scan only this Mode */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_ALL_RATE\">IW_SCAN_ALL_RATE</a><span class=\"ts\"/>0x0040<span class=\"ts\"/><span class=\"comment\">/* Scan all Bit-Rates */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_THIS_RATE\">IW_SCAN_THIS_RATE</a><span class=\"ts\"/>0x0080<span class=\"ts\"/><span class=\"comment\">/* Scan only this Bit-Rate */</span>", 
"<span class=\"comment\">/* struct iw_scan_req scan_type */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_TYPE_ACTIVE\">IW_SCAN_TYPE_ACTIVE</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_TYPE_PASSIVE\">IW_SCAN_TYPE_PASSIVE</a> 1", 
"<span class=\"comment\">/* Maximum size of returned data */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_MAX_DATA\">IW_SCAN_MAX_DATA</a><span class=\"ts\"/>4096<span class=\"ts\"/><span class=\"comment\">/* In bytes */</span>", 
"", 
"<span class=\"comment\">/* Scan capability flags - in (struct iw_range *)-&gt;scan_capa */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_NONE\">IW_SCAN_CAPA_NONE</a><span class=\"ts\"/><span class=\"ts\"/>0x00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_ESSID\">IW_SCAN_CAPA_ESSID</a><span class=\"ts\"/><span class=\"ts\"/>0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_BSSID\">IW_SCAN_CAPA_BSSID</a><span class=\"ts\"/><span class=\"ts\"/>0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_CHANNEL\">IW_SCAN_CAPA_CHANNEL</a><span class=\"ts\"/>0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_MODE\">IW_SCAN_CAPA_MODE</a><span class=\"ts\"/><span class=\"ts\"/>0x08", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_RATE\">IW_SCAN_CAPA_RATE</a><span class=\"ts\"/><span class=\"ts\"/>0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_TYPE\">IW_SCAN_CAPA_TYPE</a><span class=\"ts\"/><span class=\"ts\"/>0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_SCAN_CAPA_TIME\">IW_SCAN_CAPA_TIME</a><span class=\"ts\"/><span class=\"ts\"/>0x40", 
"", 
"<span class=\"comment\">/* Max number of char in custom event - use multiple of them if needed */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_CUSTOM_MAX\">IW_CUSTOM_MAX</a><span class=\"ts\"/><span class=\"ts\"/>256<span class=\"ts\"/><span class=\"comment\">/* In bytes */</span>", 
"", 
"<span class=\"comment\">/* Generic information element */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_GENERIC_IE_MAX\">IW_GENERIC_IE_MAX</a><span class=\"ts\"/>1024", 
"", 
"<span class=\"comment\">/* MLME requests (SIOCSIWMLME / struct iw_mlme) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MLME_DEAUTH\">IW_MLME_DEAUTH</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MLME_DISASSOC\">IW_MLME_DISASSOC</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MLME_AUTH\">IW_MLME_AUTH</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MLME_ASSOC\">IW_MLME_ASSOC</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"", 
"<span class=\"comment\">/* SIOCSIWAUTH/SIOCGIWAUTH struct iw_param flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_INDEX\">IW_AUTH_INDEX</a><span class=\"ts\"/><span class=\"ts\"/>0x0FFF", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_FLAGS\">IW_AUTH_FLAGS</a><span class=\"ts\"/><span class=\"ts\"/>0xF000", 
"<span class=\"comment\">/* SIOCSIWAUTH/SIOCGIWAUTH parameters (0 .. 4095)</span>", 
"<span class=\"comment\"> * (IW_AUTH_INDEX mask in struct iw_param flags; this is the index of the</span>", 
"<span class=\"comment\"> * parameter that is being set/get to; value will be read/written to</span>", 
"<span class=\"comment\"> * struct iw_param value field) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_WPA_VERSION\">IW_AUTH_WPA_VERSION</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_PAIRWISE\">IW_AUTH_CIPHER_PAIRWISE</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_GROUP\">IW_AUTH_CIPHER_GROUP</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_KEY_MGMT\">IW_AUTH_KEY_MGMT</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_TKIP_COUNTERMEASURES\">IW_AUTH_TKIP_COUNTERMEASURES</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_DROP_UNENCRYPTED\">IW_AUTH_DROP_UNENCRYPTED</a><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_80211_AUTH_ALG\">IW_AUTH_80211_AUTH_ALG</a><span class=\"ts\"/><span class=\"ts\"/>6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_WPA_ENABLED\">IW_AUTH_WPA_ENABLED</a><span class=\"ts\"/><span class=\"ts\"/>7", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_RX_UNENCRYPTED_EAPOL\">IW_AUTH_RX_UNENCRYPTED_EAPOL</a><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_ROAMING_CONTROL\">IW_AUTH_ROAMING_CONTROL</a><span class=\"ts\"/><span class=\"ts\"/>9", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_PRIVACY_INVOKED\">IW_AUTH_PRIVACY_INVOKED</a><span class=\"ts\"/><span class=\"ts\"/>10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_GROUP_MGMT\">IW_AUTH_CIPHER_GROUP_MGMT</a><span class=\"ts\"/>11", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_MFP\">IW_AUTH_MFP</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>12", 
"", 
"<span class=\"comment\">/* IW_AUTH_WPA_VERSION values (bit field) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_WPA_VERSION_DISABLED\">IW_AUTH_WPA_VERSION_DISABLED</a><span class=\"ts\"/>0x00000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_WPA_VERSION_WPA\">IW_AUTH_WPA_VERSION_WPA</a><span class=\"ts\"/><span class=\"ts\"/>0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_WPA_VERSION_WPA2\">IW_AUTH_WPA_VERSION_WPA2</a><span class=\"ts\"/>0x00000004", 
"", 
"<span class=\"comment\">/* IW_AUTH_PAIRWISE_CIPHER, IW_AUTH_GROUP_CIPHER, and IW_AUTH_CIPHER_GROUP_MGMT</span>", 
"<span class=\"comment\"> * values (bit field) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_NONE\">IW_AUTH_CIPHER_NONE</a><span class=\"ts\"/>0x00000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_WEP40\">IW_AUTH_CIPHER_WEP40</a><span class=\"ts\"/>0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_TKIP\">IW_AUTH_CIPHER_TKIP</a><span class=\"ts\"/>0x00000004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_CCMP\">IW_AUTH_CIPHER_CCMP</a><span class=\"ts\"/>0x00000008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_WEP104\">IW_AUTH_CIPHER_WEP104</a><span class=\"ts\"/>0x00000010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_CIPHER_AES_CMAC\">IW_AUTH_CIPHER_AES_CMAC</a><span class=\"ts\"/>0x00000020", 
"", 
"<span class=\"comment\">/* IW_AUTH_KEY_MGMT values (bit field) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_KEY_MGMT_802_1X\">IW_AUTH_KEY_MGMT_802_1X</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_KEY_MGMT_PSK\">IW_AUTH_KEY_MGMT_PSK</a><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/* IW_AUTH_80211_AUTH_ALG values (bit field) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_ALG_OPEN_SYSTEM\">IW_AUTH_ALG_OPEN_SYSTEM</a><span class=\"ts\"/>0x00000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_ALG_SHARED_KEY\">IW_AUTH_ALG_SHARED_KEY</a><span class=\"ts\"/>0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_ALG_LEAP\">IW_AUTH_ALG_LEAP</a><span class=\"ts\"/>0x00000004", 
"", 
"<span class=\"comment\">/* IW_AUTH_ROAMING_CONTROL values */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_ROAMING_ENABLE\">IW_AUTH_ROAMING_ENABLE</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* driver/firmware based roaming */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_ROAMING_DISABLE\">IW_AUTH_ROAMING_DISABLE</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* user space program used for roaming</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * control */</span>", 
"", 
"<span class=\"comment\">/* IW_AUTH_MFP (management frame protection) values */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_MFP_DISABLED\">IW_AUTH_MFP_DISABLED</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* MFP disabled */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_MFP_OPTIONAL\">IW_AUTH_MFP_OPTIONAL</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* MFP optional */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_AUTH_MFP_REQUIRED\">IW_AUTH_MFP_REQUIRED</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* MFP required */</span>", 
"", 
"<span class=\"comment\">/* SIOCSIWENCODEEXT definitions */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_SEQ_MAX_SIZE\">IW_ENCODE_SEQ_MAX_SIZE</a><span class=\"ts\"/>8", 
"<span class=\"comment\">/* struct iw_encode_ext -&gt;alg */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_ALG_NONE\">IW_ENCODE_ALG_NONE</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_ALG_WEP\">IW_ENCODE_ALG_WEP</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_ALG_TKIP\">IW_ENCODE_ALG_TKIP</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_ALG_CCMP\">IW_ENCODE_ALG_CCMP</a><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_ALG_PMK\">IW_ENCODE_ALG_PMK</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_ALG_AES_CMAC\">IW_ENCODE_ALG_AES_CMAC</a><span class=\"ts\"/>5", 
"<span class=\"comment\">/* struct iw_encode_ext -&gt;ext_flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_EXT_TX_SEQ_VALID\">IW_ENCODE_EXT_TX_SEQ_VALID</a><span class=\"ts\"/>0x00000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_EXT_RX_SEQ_VALID\">IW_ENCODE_EXT_RX_SEQ_VALID</a><span class=\"ts\"/>0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_EXT_GROUP_KEY\">IW_ENCODE_EXT_GROUP_KEY</a><span class=\"ts\"/><span class=\"ts\"/>0x00000004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENCODE_EXT_SET_TX_KEY\">IW_ENCODE_EXT_SET_TX_KEY</a><span class=\"ts\"/>0x00000008", 
"", 
"<span class=\"comment\">/* IWEVMICHAELMICFAILURE : struct iw_michaelmicfailure -&gt;flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MICFAILURE_KEY_ID\">IW_MICFAILURE_KEY_ID</a><span class=\"ts\"/>0x00000003 <span class=\"comment\">/* Key ID 0..3 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MICFAILURE_GROUP\">IW_MICFAILURE_GROUP</a><span class=\"ts\"/>0x00000004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MICFAILURE_PAIRWISE\">IW_MICFAILURE_PAIRWISE</a><span class=\"ts\"/>0x00000008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MICFAILURE_STAKEY\">IW_MICFAILURE_STAKEY</a><span class=\"ts\"/>0x00000010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_MICFAILURE_COUNT\">IW_MICFAILURE_COUNT</a><span class=\"ts\"/>0x00000060 <span class=\"comment\">/* 1 or 2 (0 = count not supported)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    */</span>", 
"", 
"<span class=\"comment\">/* Bit field values for enc_capa in struct iw_range */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENC_CAPA_WPA\">IW_ENC_CAPA_WPA</a><span class=\"ts\"/><span class=\"ts\"/>0x00000001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENC_CAPA_WPA2\">IW_ENC_CAPA_WPA2</a><span class=\"ts\"/>0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENC_CAPA_CIPHER_TKIP\">IW_ENC_CAPA_CIPHER_TKIP</a><span class=\"ts\"/>0x00000004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENC_CAPA_CIPHER_CCMP\">IW_ENC_CAPA_CIPHER_CCMP</a><span class=\"ts\"/>0x00000008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_ENC_CAPA_4WAY_HANDSHAKE\">IW_ENC_CAPA_4WAY_HANDSHAKE</a><span class=\"ts\"/>0x00000010", 
"", 
"<span class=\"comment\">/* Event capability macros - in (struct iw_range *)-&gt;event_capa</span>", 
"<span class=\"comment\"> * Because we have more than 32 possible events, we use an array of</span>", 
"<span class=\"comment\"> * 32 bit bitmasks. Note : 32 bits = 0x20 = 2^5. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_CAPA_BASE\">IW_EVENT_CAPA_BASE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#cmd\">cmd</a> >= <a class=\"id\" href=\"#SIOCIWFIRSTPRIV\">SIOCIWFIRSTPRIV</a>) ? \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#cmd\">cmd</a> - <a class=\"id\" href=\"#SIOCIWFIRSTPRIV\">SIOCIWFIRSTPRIV</a> + 0x60) : \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#cmd\">cmd</a> - <a class=\"id\" href=\"#SIOCIWFIRST\">SIOCIWFIRST</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_CAPA_INDEX\">IW_EVENT_CAPA_INDEX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)<span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EVENT_CAPA_BASE\">IW_EVENT_CAPA_BASE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) >> 5)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_CAPA_MASK\">IW_EVENT_CAPA_MASK</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)<span class=\"ts\"/><span class=\"ts\"/>(1 << (<a class=\"id\" href=\"#IW_EVENT_CAPA_BASE\">IW_EVENT_CAPA_BASE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; 0x1F))", 
"<span class=\"comment\">/* Event capability constants - event autogenerated by the kernel</span>", 
"<span class=\"comment\"> * This list is valid for most 802.11 devices, customise as needed... */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_CAPA_K_0\">IW_EVENT_CAPA_K_0</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EVENT_CAPA_MASK\">IW_EVENT_CAPA_MASK</a>(0x8B04) | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IW_EVENT_CAPA_MASK\">IW_EVENT_CAPA_MASK</a>(0x8B06) | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IW_EVENT_CAPA_MASK\">IW_EVENT_CAPA_MASK</a>(0x8B1A))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_CAPA_K_1\">IW_EVENT_CAPA_K_1</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EVENT_CAPA_MASK\">IW_EVENT_CAPA_MASK</a>(0x8B2A))", 
"<span class=\"comment\">/* \"Easy\" macro to set events in iw_range (less efficient) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_CAPA_SET\">IW_EVENT_CAPA_SET</a>(<a class=\"id\" href=\"#event_capa\">event_capa</a>, <a class=\"id\" href=\"#cmd\">cmd</a>) (<a class=\"id\" href=\"#event_capa\">event_capa</a>[<a class=\"id\" href=\"#IW_EVENT_CAPA_INDEX\">IW_EVENT_CAPA_INDEX</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)] |= <a class=\"id\" href=\"#IW_EVENT_CAPA_MASK\">IW_EVENT_CAPA_MASK</a>(<a class=\"id\" href=\"#cmd\">cmd</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EVENT_CAPA_SET_KERNEL\">IW_EVENT_CAPA_SET_KERNEL</a>(<a class=\"id\" href=\"#event_capa\">event_capa</a>) {<a class=\"id\" href=\"#event_capa\">event_capa</a>[0] |= <a class=\"id\" href=\"#IW_EVENT_CAPA_K_0\">IW_EVENT_CAPA_K_0</a>; <a class=\"id\" href=\"#event_capa\">event_capa</a>[1] |= <a class=\"id\" href=\"#IW_EVENT_CAPA_K_1\">IW_EVENT_CAPA_K_1</a>; }", 
"", 
"", 
"<span class=\"comment\">/****************************** TYPES ******************************/</span>", 
"", 
"<span class=\"comment\">/* --------------------------- SUBTYPES --------------------------- */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generic format for most parameters that fit in an int</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_param\">iw_param</a>", 
"{", 
"  <a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The value of the parameter itself */</span>", 
"  <a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fixed\">fixed</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Hardware should not use auto select */</span>", 
"  <a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disabled\">disabled</a>;<span class=\"ts\"/><span class=\"comment\">/* Disable the feature */</span>", 
"  <a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Various specifc flags (if any) */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For all data larger than 16 octets, we need to use a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pointer to memory allocated in user space.</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_point\">iw_point</a>", 
"{", 
"  void <a class=\"id\" href=\"#__user\">__user</a><span class=\"ts\"/>*<a class=\"id\" href=\"#pointer\">pointer</a>;<span class=\"ts\"/><span class=\"comment\">/* Pointer to the data  (in user space) */</span>", 
"  <a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of fields or size in bytes */</span>", 
"  <a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Optional params */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compat\">compat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#compat_iw_point\">compat_iw_point</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_caddr_t\">compat_caddr_t</a> <a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A frequency</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For numbers lower than 10^9, we encode the number in 'm' and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>set 'e' to 0</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For number greater than 10^9, we divide it by the lowest power</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of 10 to get 'm' lower than 10^9, with 'm'= f / (10^'e')...</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The power of 10 is in 'e', the result of the division is in 'm'.</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_freq\">iw_freq</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Mantissa */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Exponent */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* List index (when in range struct) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Flags (fixed/auto) */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Quality of the link</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_quality\">iw_quality</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qual\">qual</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* link quality (%retries, SNR,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   %missed beacons or better...) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level\">level</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* signal level (dBm) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#noise\">noise</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* noise level (dBm) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#updated\">updated</a>;<span class=\"ts\"/><span class=\"comment\">/* Flags to know if updated */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Packet discarded in the wireless adapter due to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"wireless\" specific problems...</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note : the list of counter and statistics in net_device_stats</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is already pretty exhaustive, and you should use that first.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is only additional stats...</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_discarded\">iw_discarded</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nwid\">nwid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rx : Wrong nwid/essid */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#code\">code</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rx : Unable to code/decode (WEP) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fragment\">fragment</a>;<span class=\"ts\"/><span class=\"comment\">/* Rx : Can't perform MAC reassembly */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retries\">retries</a>;<span class=\"ts\"/><span class=\"comment\">/* Tx : Max MAC retries num reached */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#misc\">misc</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Others cases */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Packet/Time period missed in the wireless adapter due to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>\"wireless\" specific problems...</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_missed\">iw_missed</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#beacon\">beacon</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Missed beacons/superframe */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Quality range (for spy threshold)</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_thrspy\">iw_thrspy</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Source address (hw/mac) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a><span class=\"ts\"/><a class=\"id\" href=\"#qual\">qual</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Quality of the link */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a><span class=\"ts\"/><a class=\"id\" href=\"#low\">low</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Low threshold */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a><span class=\"ts\"/><a class=\"id\" href=\"#high\">high</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* High threshold */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Optional data for scan request</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Note: these optional parameters are controlling parameters for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>scanning behavior, these do not apply to getting scan results</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(SIOCGIWSCAN). Drivers are expected to keep a local BSS table and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>provide a merged results with all BSSes even if the previous scan</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>request limited scanning to a subset, e.g., by specifying an SSID.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Especially, scan results are required to include an entry for the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>current BSS if the driver is in Managed mode and associated with an AP.</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_scan_req\">iw_scan_req</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scan_type\">scan_type</a>; <span class=\"comment\">/* IW_SCAN_TYPE_{ACTIVE,PASSIVE} */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#essid_len\">essid_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_channels\">num_channels</a>; <span class=\"comment\">/* num entries in channel_list;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       * 0 = scan all allowed channels */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>; <span class=\"comment\">/* reserved as padding; use zero, this may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* be used in the future for adding flags</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* to request different scan behavior */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#bssid\">bssid</a>; <span class=\"comment\">/* ff:ff:ff:ff:ff:ff for broadcast BSSID or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* individual address of a specific BSS */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use this ESSID if IW_SCAN_THIS_ESSID flag is used instead of using</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the current ESSID. This allows scan requests for specific ESSID</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * without having to change the current ESSID and potentially breaking</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the current association.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#essid\">essid</a>[<a class=\"id\" href=\"#IW_ESSID_MAX_SIZE\">IW_ESSID_MAX_SIZE</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Optional parameters for changing the default scanning behavior.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * These are based on the MLME-SCAN.request from IEEE Std 802.11.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TU is 1.024 ms. If these are set to 0, driver is expected to use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reasonable default values. min_channel_time defines the time that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will be used to wait for the first reply on each channel. If no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * replies are received, next channel will be scanned after this. If</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * replies are received, total time waited on the channel is defined by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * max_channel_time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_channel_time\">min_channel_time</a>; <span class=\"comment\">/* in TU */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_channel_time\">max_channel_time</a>; <span class=\"comment\">/* in TU */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_freq\">iw_freq</a><span class=\"ts\"/><a class=\"id\" href=\"#channel_list\">channel_list</a>[<a class=\"id\" href=\"#IW_MAX_FREQUENCIES\">IW_MAX_FREQUENCIES</a>];", 
"};", 
"", 
"<span class=\"comment\">/* ------------------------- WPA SUPPORT ------------------------- */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Extended data structure for get/set encoding (this is used with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SIOCSIWENCODEEXT/SIOCGIWENCODEEXT. struct iw_point and IW_ENCODE_*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>flags are used in the same way as with SIOCSIWENCODE/SIOCGIWENCODE and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>only the data contents changes (key data -&gt; this structure, including</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>key data).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If the new key is the first group key, it will be set as the default</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>TX key. Otherwise, default TX key index is only changed if</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IW_ENCODE_EXT_SET_TX_KEY flag is set.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Key will be changed with SIOCSIWENCODEEXT in all cases except for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>special \"change TX key index\" operation which is indicated by setting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>key_len = 0 and ext_flags |= IW_ENCODE_EXT_SET_TX_KEY.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tx_seq/rx_seq are only used when respective</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>IW_ENCODE_EXT_{TX,RX}_SEQ_VALID flag is set in ext_flags. Normal</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>TKIP/CCMP operation is to set RX seq with SIOCSIWENCODEEXT and start</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>TX seq from zero whenever key is changed. SIOCGIWENCODEEXT is normally</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>used only by an Authenticator (AP or an IBSS station) to get the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>current TX sequence number. Using TX_SEQ_VALID for SIOCSIWENCODEEXT and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RX_SEQ_VALID for SIOCGIWENCODEEXT are optional, but can be useful for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>debugging/testing.</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_encode_ext\">iw_encode_ext</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_flags\">ext_flags</a>; <span class=\"comment\">/* IW_ENCODE_EXT_* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tx_seq\">tx_seq</a>[<a class=\"id\" href=\"#IW_ENCODE_SEQ_MAX_SIZE\">IW_ENCODE_SEQ_MAX_SIZE</a>]; <span class=\"comment\">/* LSB first */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rx_seq\">rx_seq</a>[<a class=\"id\" href=\"#IW_ENCODE_SEQ_MAX_SIZE\">IW_ENCODE_SEQ_MAX_SIZE</a>]; <span class=\"comment\">/* LSB first */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>; <span class=\"comment\">/* ff:ff:ff:ff:ff:ff for broadcast/multicast</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       * (group) keys or unicast address for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       * individual keys */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a>; <span class=\"comment\">/* IW_ENCODE_ALG_* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_len\">key_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/* SIOCSIWMLME data */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_mlme\">iw_mlme</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>; <span class=\"comment\">/* IW_MLME_* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reason_code\">reason_code</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>;", 
"};", 
"", 
"<span class=\"comment\">/* SIOCSIWPMKSA data */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PMKSA_ADD\">IW_PMKSA_ADD</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PMKSA_REMOVE\">IW_PMKSA_REMOVE</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PMKSA_FLUSH\">IW_PMKSA_FLUSH</a><span class=\"ts\"/><span class=\"ts\"/>3", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PMKID_LEN\">IW_PMKID_LEN</a><span class=\"ts\"/>16", 
"", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_pmksa\">iw_pmksa</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>; <span class=\"comment\">/* IW_PMKSA_* */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#bssid\">bssid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmkid\">pmkid</a>[<a class=\"id\" href=\"#IW_PMKID_LEN\">IW_PMKID_LEN</a>];", 
"};", 
"", 
"<span class=\"comment\">/* IWEVMICHAELMICFAILURE data */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_michaelmicfailure\">iw_michaelmicfailure</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#src_addr\">src_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsc\">tsc</a>[<a class=\"id\" href=\"#IW_ENCODE_SEQ_MAX_SIZE\">IW_ENCODE_SEQ_MAX_SIZE</a>]; <span class=\"comment\">/* LSB first */</span>", 
"};", 
"", 
"<span class=\"comment\">/* IWEVPMKIDCAND data */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_PMKID_CAND_PREAUTH\">IW_PMKID_CAND_PREAUTH</a><span class=\"ts\"/>0x00000001 <span class=\"comment\">/* RNS pre-authentication enabled */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_pmkid_cand\">iw_pmkid_cand</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>; <span class=\"comment\">/* IW_PMKID_CAND_* */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>; <span class=\"comment\">/* the smaller the index, the higher the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* priority */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#bssid\">bssid</a>;", 
"};", 
"", 
"<span class=\"comment\">/* ------------------------ WIRELESS STATS ------------------------ */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wireless statistics (used for /proc/net/wireless)</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_statistics\">iw_statistics</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Status</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * - device dependent for now */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a><span class=\"ts\"/><a class=\"id\" href=\"#qual\">qual</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Quality of the link</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (instant/mean/max) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_discarded\">iw_discarded</a><span class=\"ts\"/><a class=\"id\" href=\"#discard\">discard</a>;<span class=\"ts\"/><span class=\"comment\">/* Packet discarded counts */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_missed\">iw_missed</a><span class=\"ts\"/><a class=\"id\" href=\"#miss\">miss</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Packet missed counts */</span>", 
"};", 
"", 
"<span class=\"comment\">/* ------------------------ IOCTL REQUEST ------------------------ */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure defines the payload of an ioctl, and is used </span>", 
"<span class=\"comment\"> * below.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that this structure should fit on the memory footprint</span>", 
"<span class=\"comment\"> * of iwreq (which is the same as ifreq), which mean a max size of</span>", 
"<span class=\"comment\"> * 16 octets = 128 bits. Warning, pointers might be 64 bits wide...</span>", 
"<span class=\"comment\"> * You should check this when increasing the structures defined</span>", 
"<span class=\"comment\"> * above in this file...</span>", 
"<span class=\"comment\"> */</span>", 
"union<span class=\"ts\"/><a class=\"id\" href=\"#iwreq_data\">iwreq_data</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Config - generic */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];", 
"<span class=\"ts\"/><span class=\"comment\">/* Name : used to verify the presence of  wireless extensions.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Name of the protocol/provider... */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_point\">iw_point</a><span class=\"ts\"/><a class=\"id\" href=\"#essid\">essid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Extended network name */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#nwid\">nwid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* network id (or domain - the cell) */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_freq\">iw_freq</a><span class=\"ts\"/><a class=\"id\" href=\"#freq\">freq</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* frequency or channel :</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 0-1000 = channel</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * &gt; 1000 = frequency in Hz */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#sens\">sens</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* signal level threshold */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#bitrate\">bitrate</a>;<span class=\"ts\"/><span class=\"comment\">/* default bit rate */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#txpower\">txpower</a>;<span class=\"ts\"/><span class=\"comment\">/* default transmit power */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#rts\">rts</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RTS threshold threshold */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#frag\">frag</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fragmentation threshold */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Operation mode */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#retry\">retry</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Retry limits &amp; lifetime */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_point\">iw_point</a><span class=\"ts\"/><a class=\"id\" href=\"#encoding\">encoding</a>;<span class=\"ts\"/><span class=\"comment\">/* Encoding stuff : tokens */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#power\">power</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PM duration/timeout */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a> <a class=\"id\" href=\"#qual\">qual</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Quality part of statistics */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#ap_addr\">ap_addr</a>;<span class=\"ts\"/><span class=\"comment\">/* Access point address */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Destination address (hw/mac) */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_param\">iw_param</a><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Other small parameters */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_point\">iw_point</a><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Other large parameters */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The structure to exchange data for ioctl.</span>", 
"<span class=\"comment\"> * This structure is the same as 'struct ifreq', but (re)defined for</span>", 
"<span class=\"comment\"> * convenience...</span>", 
"<span class=\"comment\"> * Do I need to remind you about structure size (32 octets) ?</span>", 
"<span class=\"comment\"> */</span>", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iwreq\">iwreq</a> ", 
"{", 
"<span class=\"ts\"/>union", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#ifrn_name\">ifrn_name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];<span class=\"ts\"/><span class=\"comment\">/* if name, e.g. \"eth0\" */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#ifr_ifrn\">ifr_ifrn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Data part (defined just above) */</span>", 
"<span class=\"ts\"/>union<span class=\"ts\"/><a class=\"id\" href=\"#iwreq_data\">iwreq_data</a><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>;", 
"};", 
"", 
"<span class=\"comment\">/* -------------------------- IOCTL DATA -------------------------- */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For those ioctl which want to exchange mode data that what could</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>fit in the above structure...</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Range of parameters</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_range\">iw_range</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Informative stuff (to choose between different interface) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#throughput\">throughput</a>;<span class=\"ts\"/><span class=\"comment\">/* To give an idea... */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* In theory this value should be the maximum benchmarked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TCP/IP throughput, because with most of these devices the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bit rate is meaningless (overhead an co) to estimate how</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fast the connection will go and pick the fastest one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I suggest people to play with Netperf or any benchmark...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NWID (or domain id) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_nwid\">min_nwid</a>;<span class=\"ts\"/><span class=\"comment\">/* Minimal NWID we are able to set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_nwid\">max_nwid</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal NWID we are able to set */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Old Frequency (backward compat - moved lower ) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_num_channels\">old_num_channels</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_num_frequency\">old_num_frequency</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Scan capabilities */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scan_capa\">scan_capa</a>; <span class=\"ts\"/><span class=\"comment\">/* IW_SCAN_CAPA_* bit field */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wireless event capability bitmasks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event_capa\">event_capa</a>[6];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* signal level threshold range */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sensitivity\">sensitivity</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Quality of link &amp; SNR stuff */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Quality range (link, level, noise)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the quality is absolute, it will be in the range [0 ; max_qual],</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the quality is dBm, it will be in the range [max_qual ; 0].</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't forget that we use 8 bit arithmetics... */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a><span class=\"ts\"/><a class=\"id\" href=\"#max_qual\">max_qual</a>;<span class=\"ts\"/><span class=\"comment\">/* Quality of the link */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* This should contain the average/typical values of the quality</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * indicator. This should be the threshold between a \"good\" and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a \"bad\" link (example : monitor going from green to orange).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Currently, user space apps like quality monitors don't have any</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * way to calibrate the measurement. With this, they can split</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the range between 0 and max_qual in different quality level</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (using a geometric subdivision centered on the average).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I expect that people doing the user space apps will feedback</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * us on which value we need to put in each driver... */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a><span class=\"ts\"/><a class=\"id\" href=\"#avg_qual\">avg_qual</a>;<span class=\"ts\"/><span class=\"comment\">/* Quality of the link */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Rates */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_bitrates\">num_bitrates</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of entries in the list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitrate\">bitrate</a>[<a class=\"id\" href=\"#IW_MAX_BITRATES\">IW_MAX_BITRATES</a>];<span class=\"ts\"/><span class=\"comment\">/* list, in bps */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RTS threshold */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_rts\">min_rts</a>;<span class=\"ts\"/><span class=\"comment\">/* Minimal RTS threshold */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_rts\">max_rts</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal RTS threshold */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Frag threshold */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_frag\">min_frag</a>;<span class=\"ts\"/><span class=\"comment\">/* Minimal frag threshold */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_frag\">max_frag</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal frag threshold */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Power Management duration &amp; timeout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_pmp\">min_pmp</a>;<span class=\"ts\"/><span class=\"comment\">/* Minimal PM period */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pmp\">max_pmp</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal PM period */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_pmt\">min_pmt</a>;<span class=\"ts\"/><span class=\"comment\">/* Minimal PM timeout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pmt\">max_pmt</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal PM timeout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmp_flags\">pmp_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* How to decode max/min PM period */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmt_flags\">pmt_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* How to decode max/min PM timeout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_capa\">pm_capa</a>;<span class=\"ts\"/><span class=\"comment\">/* What PM options are supported */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Encoder stuff */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#encoding_size\">encoding_size</a>[<a class=\"id\" href=\"#IW_MAX_ENCODING_SIZES\">IW_MAX_ENCODING_SIZES</a>];<span class=\"ts\"/><span class=\"comment\">/* Different token sizes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#num_encoding_sizes\">num_encoding_sizes</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of entry in the list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#max_encoding_tokens\">max_encoding_tokens</a>;<span class=\"ts\"/><span class=\"comment\">/* Max number of tokens */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* For drivers that need a \"login/passwd\" form */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#encoding_login_index\">encoding_login_index</a>;<span class=\"ts\"/><span class=\"comment\">/* token index for login token */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Transmit power */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#txpower_capa\">txpower_capa</a>;<span class=\"ts\"/><span class=\"comment\">/* What options are supported */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_txpower\">num_txpower</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of entries in the list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#txpower\">txpower</a>[<a class=\"id\" href=\"#IW_MAX_TXPOWER\">IW_MAX_TXPOWER</a>];<span class=\"ts\"/><span class=\"comment\">/* list, in bps */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wireless Extension version info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#we_version_compiled\">we_version_compiled</a>;<span class=\"ts\"/><span class=\"comment\">/* Must be WIRELESS_EXT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#we_version_source\">we_version_source</a>;<span class=\"ts\"/><span class=\"comment\">/* Last update of source */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Retry limits and lifetime */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry_capa\">retry_capa</a>;<span class=\"ts\"/><span class=\"comment\">/* What retry options are supported */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retry_flags\">retry_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* How to decode max/min retry limit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r_time_flags\">r_time_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* How to decode max/min retry life */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_retry\">min_retry</a>;<span class=\"ts\"/><span class=\"comment\">/* Minimal number of retries */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_retry\">max_retry</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal number of retries */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_r_time\">min_r_time</a>;<span class=\"ts\"/><span class=\"comment\">/* Minimal retry lifetime */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_r_time\">max_r_time</a>;<span class=\"ts\"/><span class=\"comment\">/* Maximal retry lifetime */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Frequency */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_channels\">num_channels</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of channels [0; num - 1] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_frequency\">num_frequency</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of entry in the list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iw_freq\">iw_freq</a><span class=\"ts\"/><a class=\"id\" href=\"#freq\">freq</a>[<a class=\"id\" href=\"#IW_MAX_FREQUENCIES\">IW_MAX_FREQUENCIES</a>];<span class=\"ts\"/><span class=\"comment\">/* list */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Note : this frequency list doesn't need to fit channel numbers,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because each entry contain its channel index */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enc_capa\">enc_capa</a>;<span class=\"ts\"/><span class=\"comment\">/* IW_ENC_CAPA_* bit field */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Private ioctl interface information</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"struct<span class=\"ts\"/><a class=\"id\" href=\"#iw_priv_args\">iw_priv_args</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Number of the ioctl to issue */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_args\">set_args</a>;<span class=\"ts\"/><span class=\"comment\">/* Type and number of args */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_args\">get_args</a>;<span class=\"ts\"/><span class=\"comment\">/* Type and number of args */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];<span class=\"ts\"/><span class=\"comment\">/* Name of the extension */</span>", 
"};", 
"", 
"<span class=\"comment\">/* ----------------------- WIRELESS EVENTS ----------------------- */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wireless events are carried through the rtnetlink socket to user</span>", 
"<span class=\"comment\"> * space. They are encapsulated in the IFLA_WIRELESS field of</span>", 
"<span class=\"comment\"> * a RTM_NEWLINK message.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A Wireless Event. Contains basically the same data as the ioctl...</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#iw_event\">iw_event</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Real length of this stuff */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Wireless IOCTL */</span>", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#iwreq_data\">iwreq_data</a><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* IOCTL fixed payload */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Size of the Event prefix (including padding and alignement junk) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a><span class=\"ts\"/>(sizeof(struct <a class=\"id\" href=\"#iw_event\">iw_event</a>) - sizeof(union <a class=\"id\" href=\"#iwreq_data\">iwreq_data</a>))", 
"<span class=\"comment\">/* Size of the various events */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_CHAR_LEN\">IW_EV_CHAR_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_UINT_LEN\">IW_EV_UINT_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_FREQ_LEN\">IW_EV_FREQ_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_freq\">iw_freq</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_PARAM_LEN\">IW_EV_PARAM_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_param\">iw_param</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_ADDR_LEN\">IW_EV_ADDR_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_QUAL_LEN\">IW_EV_QUAL_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a>))", 
"", 
"<span class=\"comment\">/* iw_point events are special. First, the payload (extra data) come at</span>", 
"<span class=\"comment\"> * the end of the event, so they are bigger than IW_EV_POINT_LEN. Second,</span>", 
"<span class=\"comment\"> * we omit the pointer, so start at an offset. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_POINT_OFF\">IW_EV_POINT_OFF</a> (((char *) &amp;(((struct <a class=\"id\" href=\"#iw_point\">iw_point</a> *) <a class=\"id\" href=\"#NULL\">NULL</a>)-><a class=\"id\" href=\"#length\">length</a>)) - \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (char *) <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_POINT_LEN\">IW_EV_POINT_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_point\">iw_point</a>) - \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IW_EV_POINT_OFF\">IW_EV_POINT_OFF</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"struct <a class=\"id\" href=\"#__compat_iw_event\">__compat_iw_event</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Real length of this stuff */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Wireless IOCTL */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_caddr_t\">compat_caddr_t</a><span class=\"ts\"/><a class=\"id\" href=\"#pointer\">pointer</a>;", 
"};", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#__compat_iw_event\">__compat_iw_event</a>, <a class=\"id\" href=\"#pointer\">pointer</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_POINT_OFF\">IW_EV_COMPAT_POINT_OFF</a> <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#compat_iw_point\">compat_iw_point</a>, <a class=\"id\" href=\"#length\">length</a>)", 
"", 
"<span class=\"comment\">/* Size of the various events for compat */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_CHAR_LEN\">IW_EV_COMPAT_CHAR_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> + <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_UINT_LEN\">IW_EV_COMPAT_UINT_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> + sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_FREQ_LEN\">IW_EV_COMPAT_FREQ_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_freq\">iw_freq</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_PARAM_LEN\">IW_EV_COMPAT_PARAM_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_param\">iw_param</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_ADDR_LEN\">IW_EV_COMPAT_ADDR_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_QUAL_LEN\">IW_EV_COMPAT_QUAL_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_COMPAT_POINT_LEN\">IW_EV_COMPAT_POINT_LEN</a><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_COMPAT_LCP_LEN\">IW_EV_COMPAT_LCP_LEN</a> + sizeof(struct <a class=\"id\" href=\"#compat_iw_point\">compat_iw_point</a>) - \\", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#IW_EV_COMPAT_POINT_OFF\">IW_EV_COMPAT_POINT_OFF</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Size of the Event prefix when packed in stream */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_LCP_PK_LEN\">IW_EV_LCP_PK_LEN</a><span class=\"ts\"/>(4)", 
"<span class=\"comment\">/* Size of the various events when packed in stream */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_CHAR_PK_LEN\">IW_EV_CHAR_PK_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_PK_LEN\">IW_EV_LCP_PK_LEN</a> + <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_UINT_PK_LEN\">IW_EV_UINT_PK_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_PK_LEN\">IW_EV_LCP_PK_LEN</a> + sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_FREQ_PK_LEN\">IW_EV_FREQ_PK_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_PK_LEN\">IW_EV_LCP_PK_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_freq\">iw_freq</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_PARAM_PK_LEN\">IW_EV_PARAM_PK_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_PK_LEN\">IW_EV_LCP_PK_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_param\">iw_param</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_ADDR_PK_LEN\">IW_EV_ADDR_PK_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_PK_LEN\">IW_EV_LCP_PK_LEN</a> + sizeof(struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_QUAL_PK_LEN\">IW_EV_QUAL_PK_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_PK_LEN\">IW_EV_LCP_PK_LEN</a> + sizeof(struct <a class=\"id\" href=\"#iw_quality\">iw_quality</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IW_EV_POINT_PK_LEN\">IW_EV_POINT_PK_LEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IW_EV_LCP_LEN\">IW_EV_LCP_LEN</a> + 4)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _LINUX_WIRELESS_H */</span>", 
];
xr_frag_insert('l/0c/f3ad90057ab3141e650ad1b6cf937e84b61907.xr', __xr_tmp);
