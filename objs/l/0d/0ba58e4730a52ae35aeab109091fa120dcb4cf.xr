var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * CBC: Cipher Block Chaining mode</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2006 Herbert Xu &lt;herbert@gondor.apana.org.au&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation; either version 2 of the License, or (at your option)</span>", 
"<span class=\"comment\"> * any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#crypto\">crypto</a>/<a class=\"id\" href=\"#algapi\">algapi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#crypto_cbc_ctx\">crypto_cbc_ctx</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_setkey\">crypto_cbc_setkey</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#parent\">parent</a>, const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#keylen\">keylen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cbc_ctx\">crypto_cbc_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_clear_flags\">crypto_cipher_clear_flags</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MASK\">CRYPTO_TFM_REQ_MASK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_set_flags\">crypto_cipher_set_flags</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#crypto_tfm_get_flags\">crypto_tfm_get_flags</a>(<a class=\"id\" href=\"#parent\">parent</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MASK\">CRYPTO_TFM_REQ_MASK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_cipher_setkey\">crypto_cipher_setkey</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#keylen\">keylen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_tfm_set_flags\">crypto_tfm_set_flags</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#crypto_cipher_get_flags\">crypto_cipher_get_flags</a>(<a class=\"id\" href=\"#child\">child</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#CRYPTO_TFM_RES_MASK\">CRYPTO_TFM_RES_MASK</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_encrypt_segment\">crypto_cbc_encrypt_segment</a>(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#blkcipher_walk\">blkcipher_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *, <a class=\"id\" href=\"#u8\">u8</a> *, const <a class=\"id\" href=\"#u8\">u8</a> *) =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_alg\">crypto_cipher_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#cia_encrypt\">cia_encrypt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bsize\">bsize</a> = <a class=\"id\" href=\"#crypto_cipher_blocksize\">crypto_cipher_blocksize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#src\">src</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#iv\">iv</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#iv\">iv</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_xor\">crypto_xor</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#crypto_cipher_tfm\">crypto_cipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#iv\">iv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> += <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#nbytes\">nbytes</a> -= <a class=\"id\" href=\"#bsize\">bsize</a>) >= <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_encrypt_inplace\">crypto_cbc_encrypt_inplace</a>(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#blkcipher_walk\">blkcipher_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *, <a class=\"id\" href=\"#u8\">u8</a> *, const <a class=\"id\" href=\"#u8\">u8</a> *) =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_alg\">crypto_cipher_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#cia_encrypt\">cia_encrypt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bsize\">bsize</a> = <a class=\"id\" href=\"#crypto_cipher_blocksize\">crypto_cipher_blocksize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#src\">src</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#iv\">iv</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#iv\">iv</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_xor\">crypto_xor</a>(<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#crypto_cipher_tfm\">crypto_cipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iv\">iv</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#nbytes\">nbytes</a> -= <a class=\"id\" href=\"#bsize\">bsize</a>) >= <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_encrypt\">crypto_cbc_encrypt</a>(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blkcipher_walk\">blkcipher_walk</a> <a class=\"id\" href=\"#walk\">walk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_blkcipher\">crypto_blkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cbc_ctx\">crypto_cbc_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_blkcipher_ctx\">crypto_blkcipher_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkcipher_walk_init\">blkcipher_walk_init</a>(&amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blkcipher_walk_virt\">blkcipher_walk_virt</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>);", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#nbytes\">nbytes</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#src\">src</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_cbc_encrypt_inplace\">crypto_cbc_encrypt_inplace</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_cbc_encrypt_segment\">crypto_cbc_encrypt_segment</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blkcipher_walk_done\">blkcipher_walk_done</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_decrypt_segment\">crypto_cbc_decrypt_segment</a>(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#blkcipher_walk\">blkcipher_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *, <a class=\"id\" href=\"#u8\">u8</a> *, const <a class=\"id\" href=\"#u8\">u8</a> *) =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_alg\">crypto_cipher_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#cia_decrypt\">cia_decrypt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bsize\">bsize</a> = <a class=\"id\" href=\"#crypto_cipher_blocksize\">crypto_cipher_blocksize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#src\">src</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#iv\">iv</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#iv\">iv</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#crypto_cipher_tfm\">crypto_cipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_xor\">crypto_xor</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iv\">iv</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> += <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"<span class=\"ts\"/>} while ((<a class=\"id\" href=\"#nbytes\">nbytes</a> -= <a class=\"id\" href=\"#bsize\">bsize</a>) >= <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_decrypt_inplace\">crypto_cbc_decrypt_inplace</a>(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#blkcipher_walk\">blkcipher_walk</a> *<a class=\"id\" href=\"#walk\">walk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *, <a class=\"id\" href=\"#u8\">u8</a> *, const <a class=\"id\" href=\"#u8\">u8</a> *) =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_alg\">crypto_cipher_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#cia_decrypt\">cia_decrypt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bsize\">bsize</a> = <a class=\"id\" href=\"#crypto_cipher_blocksize\">crypto_cipher_blocksize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#src\">src</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#last_iv\">last_iv</a>[<a class=\"id\" href=\"#bsize\">bsize</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start of the last block. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#nbytes\">nbytes</a> - (<a class=\"id\" href=\"#nbytes\">nbytes</a> &amp; (<a class=\"id\" href=\"#bsize\">bsize</a> - 1)) - <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#last_iv\">last_iv</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#crypto_cipher_tfm\">crypto_cipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>), <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#nbytes\">nbytes</a> -= <a class=\"id\" href=\"#bsize\">bsize</a>) &lt; <a class=\"id\" href=\"#bsize\">bsize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_xor\">crypto_xor</a>(<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#src\">src</a> - <a class=\"id\" href=\"#bsize\">bsize</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> -= <a class=\"id\" href=\"#bsize\">bsize</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_xor\">crypto_xor</a>(<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#walk\">walk</a>-><a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#last_iv\">last_iv</a>, <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nbytes\">nbytes</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_decrypt\">crypto_cbc_decrypt</a>(struct <a class=\"id\" href=\"#blkcipher_desc\">blkcipher_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#nbytes\">nbytes</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blkcipher_walk\">blkcipher_walk</a> <a class=\"id\" href=\"#walk\">walk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_blkcipher\">crypto_blkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cbc_ctx\">crypto_cbc_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_blkcipher_ctx\">crypto_blkcipher_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blkcipher_walk_init\">blkcipher_walk_init</a>(&amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blkcipher_walk_virt\">blkcipher_walk_virt</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>);", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#nbytes\">nbytes</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#src\">src</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a> == <a class=\"id\" href=\"#walk\">walk</a>.<a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#virt\">virt</a>.<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_cbc_decrypt_inplace\">crypto_cbc_decrypt_inplace</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbytes\">nbytes</a> = <a class=\"id\" href=\"#crypto_cbc_decrypt_segment\">crypto_cbc_decrypt_segment</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#blkcipher_walk_done\">blkcipher_walk_done</a>(<a class=\"id\" href=\"#desc\">desc</a>, &amp;<a class=\"id\" href=\"#walk\">walk</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#crypto_cbc_init_tfm\">crypto_cbc_init_tfm</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a> = (void *)<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_spawn\">crypto_spawn</a> *<a class=\"id\" href=\"#spawn\">spawn</a> = <a class=\"id\" href=\"#crypto_instance_ctx\">crypto_instance_ctx</a>(<a class=\"id\" href=\"#inst\">inst</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cbc_ctx\">crypto_cbc_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#cipher\">cipher</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cipher\">cipher</a> = <a class=\"id\" href=\"#crypto_spawn_cipher\">crypto_spawn_cipher</a>(<a class=\"id\" href=\"#spawn\">spawn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#cipher\">cipher</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#cipher\">cipher</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#cipher\">cipher</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#crypto_cbc_exit_tfm\">crypto_cbc_exit_tfm</a>(struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cbc_ctx\">crypto_cbc_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#crypto_tfm_ctx\">crypto_tfm_ctx</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_cipher\">crypto_free_cipher</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#child\">child</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#crypto_cbc_alloc\">crypto_cbc_alloc</a>(struct <a class=\"id\" href=\"#rtattr\">rtattr</a> **<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_check_attr_type\">crypto_check_attr_type</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_BLKCIPHER\">CRYPTO_ALG_TYPE_BLKCIPHER</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alg\">alg</a> = <a class=\"id\" href=\"#crypto_get_attr_alg\">crypto_get_attr_alg</a>(<a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_CIPHER\">CRYPTO_ALG_TYPE_CIPHER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_MASK\">CRYPTO_ALG_TYPE_MASK</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#alg\">alg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_blocksize\">cra_blocksize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a> = <a class=\"id\" href=\"#crypto_alloc_instance\">crypto_alloc_instance</a>(\"cbc\", <a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inst\">inst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_flags\">cra_flags</a> = <a class=\"id\" href=\"#CRYPTO_ALG_TYPE_BLKCIPHER\">CRYPTO_ALG_TYPE_BLKCIPHER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_priority\">cra_priority</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_priority\">cra_priority</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_blocksize\">cra_blocksize</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_blocksize\">cra_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_alignmask\">cra_alignmask</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_alignmask\">cra_alignmask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_type\">cra_type</a> = &amp;<a class=\"id\" href=\"#crypto_blkcipher_type\">crypto_blkcipher_type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We access the data as u32s when xoring. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_alignmask\">cra_alignmask</a> |= <a class=\"id\" href=\"#__alignof__\">__alignof__</a>(<a class=\"id\" href=\"#u32\">u32</a>) - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_blkcipher\">cra_blkcipher</a>.<a class=\"id\" href=\"#ivsize\">ivsize</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_blocksize\">cra_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_blkcipher\">cra_blkcipher</a>.<a class=\"id\" href=\"#min_keysize\">min_keysize</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_cipher\">cra_cipher</a>.<a class=\"id\" href=\"#cia_min_keysize\">cia_min_keysize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_blkcipher\">cra_blkcipher</a>.<a class=\"id\" href=\"#max_keysize\">max_keysize</a> = <a class=\"id\" href=\"#alg\">alg</a>-><a class=\"id\" href=\"#cra_cipher\">cra_cipher</a>.<a class=\"id\" href=\"#cia_max_keysize\">cia_max_keysize</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_ctxsize\">cra_ctxsize</a> = sizeof(struct <a class=\"id\" href=\"#crypto_cbc_ctx\">crypto_cbc_ctx</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_init\">cra_init</a> = <a class=\"id\" href=\"#crypto_cbc_init_tfm\">crypto_cbc_init_tfm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_exit\">cra_exit</a> = <a class=\"id\" href=\"#crypto_cbc_exit_tfm\">crypto_cbc_exit_tfm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_blkcipher\">cra_blkcipher</a>.<a class=\"id\" href=\"#setkey\">setkey</a> = <a class=\"id\" href=\"#crypto_cbc_setkey\">crypto_cbc_setkey</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_blkcipher\">cra_blkcipher</a>.<a class=\"id\" href=\"#encrypt\">encrypt</a> = <a class=\"id\" href=\"#crypto_cbc_encrypt\">crypto_cbc_encrypt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inst\">inst</a>-><a class=\"id\" href=\"#alg\">alg</a>.<a class=\"id\" href=\"#cra_blkcipher\">cra_blkcipher</a>.<a class=\"id\" href=\"#decrypt\">decrypt</a> = <a class=\"id\" href=\"#crypto_cbc_decrypt\">crypto_cbc_decrypt</a>;", 
"", 
"<a class=\"id\" href=\"#out_put_alg\">out_put_alg</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_mod_put\">crypto_mod_put</a>(<a class=\"id\" href=\"#alg\">alg</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inst\">inst</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#crypto_cbc_free\">crypto_cbc_free</a>(struct <a class=\"id\" href=\"#crypto_instance\">crypto_instance</a> *<a class=\"id\" href=\"#inst\">inst</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_drop_spawn\">crypto_drop_spawn</a>(<a class=\"id\" href=\"#crypto_instance_ctx\">crypto_instance_ctx</a>(<a class=\"id\" href=\"#inst\">inst</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#inst\">inst</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#crypto_template\">crypto_template</a> <a class=\"id\" href=\"#crypto_cbc_tmpl\">crypto_cbc_tmpl</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"cbc\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc\">alloc</a> = <a class=\"id\" href=\"#crypto_cbc_alloc\">crypto_cbc_alloc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#crypto_cbc_free\">crypto_cbc_free</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#module\">module</a> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#crypto_cbc_module_init\">crypto_cbc_module_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_register_template\">crypto_register_template</a>(&amp;<a class=\"id\" href=\"#crypto_cbc_tmpl\">crypto_cbc_tmpl</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#crypto_cbc_module_exit\">crypto_cbc_module_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_unregister_template\">crypto_unregister_template</a>(&amp;<a class=\"id\" href=\"#crypto_cbc_tmpl\">crypto_cbc_tmpl</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#crypto_cbc_module_init\">crypto_cbc_module_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#crypto_cbc_module_exit\">crypto_cbc_module_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"CBC block cipher algorithm\");", 
];
xr_frag_insert('l/0d/0ba58e4730a52ae35aeab109091fa120dcb4cf.xr', __xr_tmp);
