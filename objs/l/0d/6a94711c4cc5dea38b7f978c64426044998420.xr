var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_THREADS_H\">_LINUX_THREADS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_THREADS_H\">_LINUX_THREADS_H</a>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The default limit for the nr of threads is now in</span>", 
"<span class=\"comment\"> * /proc/sys/kernel/threads-max.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximum supported processors.  Setting this smaller saves quite a</span>", 
"<span class=\"comment\"> * bit of memory.  Use nr_cpu_ids instead of this except for static bitmaps.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NR_CPUS\">CONFIG_NR_CPUS</a>", 
"<span class=\"comment\">/* FIXME: This should be fixed in the arch's Kconfig */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CONFIG_NR_CPUS\">CONFIG_NR_CPUS</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Places which use this should consider cpumask_var_t. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_NR_CPUS\">CONFIG_NR_CPUS</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_THREADS_LEFT_FOR_ROOT\">MIN_THREADS_LEFT_FOR_ROOT</a> 4", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This controls the default maximum pid allocated to a process</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PID_MAX_DEFAULT\">PID_MAX_DEFAULT</a> (<a class=\"id\" href=\"#CONFIG_BASE_SMALL\">CONFIG_BASE_SMALL</a> ? 0x1000 : 0x8000)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A maximum of 4 million PIDs should be enough for a while.</span>", 
"<span class=\"comment\"> * [NOTE: PID/TIDs are limited to 2^29 ~= 500+ million, see futex.h.]</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PID_MAX_LIMIT\">PID_MAX_LIMIT</a> (<a class=\"id\" href=\"#CONFIG_BASE_SMALL\">CONFIG_BASE_SMALL</a> ? <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> * 8 : \\", 
"<span class=\"ts\"/>(sizeof(long) &gt; 4 ? 4 * 1024 * 1024 : <a class=\"id\" href=\"#PID_MAX_DEFAULT\">PID_MAX_DEFAULT</a>))", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define a minimum number of pids per cpu.  Heuristically based</span>", 
"<span class=\"comment\"> * on original pid max of 32k for 32 cpus.  Also, increase the</span>", 
"<span class=\"comment\"> * minimum settable value for pid_max on the running system based</span>", 
"<span class=\"comment\"> * on similar defaults.  See kernel/pid.c:pidmap_init() for details.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PIDS_PER_CPU_DEFAULT\">PIDS_PER_CPU_DEFAULT</a><span class=\"ts\"/>1024", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PIDS_PER_CPU_MIN\">PIDS_PER_CPU_MIN</a><span class=\"ts\"/>8", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/0d/6a94711c4cc5dea38b7f978c64426044998420.xr', __xr_tmp);
