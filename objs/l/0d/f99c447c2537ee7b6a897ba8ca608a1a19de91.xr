var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IA-32 Huge TLB Page Support for Kernel.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2002, Rohit Seth &lt;rohit.seth@intel.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlb\">tlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgalloc\">pgalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static unsigned long <a class=\"id\" href=\"#page_table_shareable\">page_table_shareable</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#svma\">svma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#saddr\">saddr</a> = ((<a class=\"id\" href=\"#idx\">idx</a> - <a class=\"id\" href=\"#svma\">svma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a>) << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#svma\">svma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sbase\">sbase</a> = <a class=\"id\" href=\"#saddr\">saddr</a> &amp; <a class=\"id\" href=\"#PUD_MASK\">PUD_MASK</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_end\">s_end</a> = <a class=\"id\" href=\"#sbase\">sbase</a> + <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allow segments to share if only one is marked locked */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vm_flags\">vm_flags</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; ~<a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#svm_flags\">svm_flags</a> = <a class=\"id\" href=\"#svma\">svma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; ~<a class=\"id\" href=\"#VM_LOCKED\">VM_LOCKED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * match the virtual addresses, permission and the alignment of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * page table page.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_index\">pmd_index</a>(<a class=\"id\" href=\"#addr\">addr</a>) != <a class=\"id\" href=\"#pmd_index\">pmd_index</a>(<a class=\"id\" href=\"#saddr\">saddr</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#vm_flags\">vm_flags</a> != <a class=\"id\" href=\"#svm_flags\">svm_flags</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sbase\">sbase</a> &lt; <a class=\"id\" href=\"#svma\">svma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> || <a class=\"id\" href=\"#svma\">svma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> &lt; <a class=\"id\" href=\"#s_end\">s_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#saddr\">saddr</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vma_shareable\">vma_shareable</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#addr\">addr</a> &amp; <a class=\"id\" href=\"#PUD_MASK\">PUD_MASK</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check on proper vm_flags and page table alignment</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_MAYSHARE\">VM_MAYSHARE</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> <= <a class=\"id\" href=\"#base\">base</a> && <a class=\"id\" href=\"#end\">end</a> <= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * search for a shareable pmd page for hugetlb.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#huge_pmd_share\">huge_pmd_share</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#idx\">idx</a> = ((<a class=\"id\" href=\"#addr\">addr</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#prio_tree_iter\">prio_tree_iter</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#svma\">svma</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#spte\">spte</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma_shareable\">vma_shareable</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma_prio_tree_foreach\">vma_prio_tree_foreach</a>(<a class=\"id\" href=\"#svma\">svma</a>, &amp;<a class=\"id\" href=\"#iter\">iter</a>, &amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap\">i_mmap</a>, <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#idx\">idx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#svma\">svma</a> == <a class=\"id\" href=\"#vma\">vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#page_table_shareable\">page_table_shareable</a>(<a class=\"id\" href=\"#svma\">svma</a>, <a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#saddr\">saddr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spte\">spte</a> = <a class=\"id\" href=\"#huge_pte_offset\">huge_pte_offset</a>(<a class=\"id\" href=\"#svma\">svma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>, <a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#spte\">spte</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_page\">get_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#spte\">spte</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#spte\">spte</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none\">pud_none</a>(*<a class=\"id\" href=\"#pud\">pud</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_populate\">pud_populate</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pud\">pud</a>, (<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *)((unsigned long)<a class=\"id\" href=\"#spte\">spte</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_page\">put_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#spte\">spte</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * unmap huge page backed by shared pte.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Hugetlb pte page is ref counted at the time of mapping.  If pte is shared</span>", 
"<span class=\"comment\"> * indicated by page_count &gt; 1, unmap is achieved by clearing pud and</span>", 
"<span class=\"comment\"> * decrementing the ref count. If count == 1, the pte page is not shared.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * called with vma-&gt;vm_mm-&gt;page_table_lock held.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * returns: 1 successfully unmapped a shared pte page</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>    0 the underlying pte page is not shared, or it is the last user</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#huge_pmd_unshare\">huge_pmd_unshare</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long *<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, *<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, *<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#page_count\">page_count</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#ptep\">ptep</a>)) == 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_count\">page_count</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#ptep\">ptep</a>)) == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_clear\">pud_clear</a>(<a class=\"id\" href=\"#pud\">pud</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_page\">put_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#ptep\">ptep</a>));", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(*<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#HPAGE_SIZE\">HPAGE_SIZE</a> * <a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>) - <a class=\"id\" href=\"#HPAGE_SIZE\">HPAGE_SIZE</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#huge_pte_alloc\">huge_pte_alloc</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#sz\">sz</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_alloc\">pud_alloc</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pud\">pud</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sz\">sz</a> == <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = (<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#sz\">sz</a> != <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none\">pud_none</a>(*<a class=\"id\" href=\"#pud\">pud</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#huge_pmd_share\">huge_pmd_share</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pud\">pud</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = (<a class=\"id\" href=\"#pte_t\">pte_t</a> *) <a class=\"id\" href=\"#pmd_alloc\">pmd_alloc</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pte\">pte</a> && !<a class=\"id\" href=\"#pte_none\">pte_none</a>(*<a class=\"id\" href=\"#pte\">pte</a>) && !<a class=\"id\" href=\"#pte_huge\">pte_huge</a>(*<a class=\"id\" href=\"#pte\">pte</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte\">pte</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#huge_pte_offset\">huge_pte_offset</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_present\">pgd_present</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_present\">pud_present</a>(*<a class=\"id\" href=\"#pud\">pud</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_large\">pud_large</a>(*<a class=\"id\" href=\"#pud\">pud</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#pte_t\">pte_t</a> *) <a class=\"id\" href=\"#pmd\">pmd</a>;", 
"}", 
"", 
"#if 0<span class=\"ts\"/><span class=\"comment\">/* This is just for testing */</span>", 
"struct <a class=\"id\" href=\"#page\">page</a> *", 
"<a class=\"id\" href=\"#follow_huge_addr\">follow_huge_addr</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>, int <a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#length\">length</a> = 1;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a> || !<a class=\"id\" href=\"#is_vm_hugetlb_page\">is_vm_hugetlb_page</a>(<a class=\"id\" href=\"#vma\">vma</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#huge_pte_offset\">huge_pte_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#address\">address</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* hugetlb should be locked, and hence, prefaulted */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#pte\">pte</a> || <a class=\"id\" href=\"#pte_none\">pte_none</a>(*<a class=\"id\" href=\"#pte\">pte</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = &amp;<a class=\"id\" href=\"#pte_page\">pte_page</a>(*<a class=\"id\" href=\"#pte\">pte</a>)[<a class=\"id\" href=\"#vpfn\">vpfn</a> % (<a class=\"id\" href=\"#HPAGE_SIZE\">HPAGE_SIZE</a>/<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#PageHead\">PageHead</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#pmd_huge\">pmd_huge</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#pud_huge\">pud_huge</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#page\">page</a> *", 
"<a class=\"id\" href=\"#follow_huge_pmd\">follow_huge_pmd</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, int <a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#else", 
"", 
"struct <a class=\"id\" href=\"#page\">page</a> *", 
"<a class=\"id\" href=\"#follow_huge_addr\">follow_huge_addr</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>, int <a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#pmd_huge\">pmd_huge</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#pmd\">pmd</a>)", 
"{", 
"<span class=\"ts\"/>return !!(<a class=\"id\" href=\"#pmd_val\">pmd_val</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) &amp; <a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#pud_huge\">pud_huge</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> <a class=\"id\" href=\"#pud\">pud</a>)", 
"{", 
"<span class=\"ts\"/>return !!(<a class=\"id\" href=\"#pud_val\">pud_val</a>(<a class=\"id\" href=\"#pud\">pud</a>) &amp; <a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#page\">page</a> *", 
"<a class=\"id\" href=\"#follow_huge_pmd\">follow_huge_pmd</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, int <a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pte_page\">pte_page</a>(*(<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pmd\">pmd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> += ((<a class=\"id\" href=\"#address\">address</a> &amp; ~<a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#page\">page</a> *", 
"<a class=\"id\" href=\"#follow_huge_pud\">follow_huge_pud</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>, int <a class=\"id\" href=\"#write\">write</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pte_page\">pte_page</a>(*(<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pud\">pud</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> += ((<a class=\"id\" href=\"#address\">address</a> &amp; ~<a class=\"id\" href=\"#PUD_MASK\">PUD_MASK</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* x86_64 also uses this file */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#HAVE_ARCH_HUGETLB_UNMAPPED_AREA\">HAVE_ARCH_HUGETLB_UNMAPPED_AREA</a>", 
"static unsigned long <a class=\"id\" href=\"#hugetlb_get_unmapped_area_bottomup\">hugetlb_get_unmapped_area_bottomup</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pgoff\">pgoff</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hstate\">hstate</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hstate_file\">hstate_file</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_addr\">start_addr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a>) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#start_addr\">start_addr</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#start_addr\">start_addr</a> = <a class=\"id\" href=\"#TASK_UNMAPPED_BASE\">TASK_UNMAPPED_BASE</a>;", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#full_search\">full_search</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#start_addr\">start_addr</a>, <a class=\"id\" href=\"#huge_page_size\">huge_page_size</a>(<a class=\"id\" href=\"#h\">h</a>));", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>); ; <a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* At this point:  (!vma || addr &lt; vma-&gt;vm_end). */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TASK_SIZE\">TASK_SIZE</a> - <a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Start a new search - just in case we missed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * some holes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start_addr\">start_addr</a> != <a class=\"id\" href=\"#TASK_UNMAPPED_BASE\">TASK_UNMAPPED_BASE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_addr\">start_addr</a> = <a class=\"id\" href=\"#TASK_UNMAPPED_BASE\">TASK_UNMAPPED_BASE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#full_search\">full_search</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a> || <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> = <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>        <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> - <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>, <a class=\"id\" href=\"#huge_page_size\">huge_page_size</a>(<a class=\"id\" href=\"#h\">h</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#hugetlb_get_unmapped_area_topdown\">hugetlb_get_unmapped_area_topdown</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr0\">addr0</a>, unsigned long <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pgoff\">pgoff</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hstate\">hstate</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hstate_file\">hstate_file</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, *<a class=\"id\" href=\"#prev_vma\">prev_vma</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_base\">mmap_base</a>, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#addr0\">addr0</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#largest_hole\">largest_hole</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#first_time\">first_time</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* don't allow allocations above current base */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> &gt; <a class=\"id\" href=\"#base\">base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#largest_hole\">largest_hole</a>) {", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#largest_hole\">largest_hole</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a>  = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#try_again\">try_again</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* make sure it can fit in the remaining address space */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> &lt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* either no address requested or cant fit in requested address hole */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> - <a class=\"id\" href=\"#len\">len</a>) &amp; <a class=\"id\" href=\"#huge_page_mask\">huge_page_mask</a>(<a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Lookup failure means no vma is above this address,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * i.e. return with success:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma_prev\">find_vma_prev</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#prev_vma\">prev_vma</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * new region fits between prev_vma-&gt;vm_end and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * vma-&gt;vm_start, use it:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>            (!<a class=\"id\" href=\"#prev_vma\">prev_vma</a> || (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#prev_vma\">prev_vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remember the address as a hint for next time */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>        <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> = <a class=\"id\" href=\"#largest_hole\">largest_hole</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>        return (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> = <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pull free_area_cache down to the first hole */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>        if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> == <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> = <a class=\"id\" href=\"#largest_hole\">largest_hole</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remember the largest hole we saw so far */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#largest_hole\">largest_hole</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>        <a class=\"id\" href=\"#largest_hole\">largest_hole</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> - <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* try just below the current vma-&gt;vm_start */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> - <a class=\"id\" href=\"#len\">len</a>) &amp; <a class=\"id\" href=\"#huge_page_mask\">huge_page_mask</a>(<a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>);", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if hint left us with no space for the requested</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mapping then try again:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#first_time\">first_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#largest_hole\">largest_hole</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_time\">first_time</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#try_again\">try_again</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A failed mmap() very likely causes application failure,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so fall back to the bottom-up function here. This scenario</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can happen with large stack limits and large mmap()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> = <a class=\"id\" href=\"#TASK_UNMAPPED_BASE\">TASK_UNMAPPED_BASE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> = ~0UL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#hugetlb_get_unmapped_area_bottomup\">hugetlb_get_unmapped_area_bottomup</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#addr0\">addr0</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#pgoff\">pgoff</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Restore the topdown base:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#free_area_cache\">free_area_cache</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#cached_hole_size\">cached_hole_size</a> = ~0UL;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"", 
"unsigned long", 
"<a class=\"id\" href=\"#hugetlb_get_unmapped_area\">hugetlb_get_unmapped_area</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>, unsigned long <a class=\"id\" href=\"#pgoff\">pgoff</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hstate\">hstate</a> *<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hstate_file\">hstate_file</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &amp; ~<a class=\"id\" href=\"#huge_page_mask\">huge_page_mask</a>(<a class=\"id\" href=\"#h\">h</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#TASK_SIZE\">TASK_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MAP_FIXED\">MAP_FIXED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prepare_hugepage_range\">prepare_hugepage_range</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#huge_page_size\">huge_page_size</a>(<a class=\"id\" href=\"#h\">h</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma\">find_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#TASK_SIZE\">TASK_SIZE</a> - <a class=\"id\" href=\"#len\">len</a> >= <a class=\"id\" href=\"#addr\">addr</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#vma\">vma</a> || <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#get_unmapped_area\">get_unmapped_area</a> == <a class=\"id\" href=\"#arch_get_unmapped_area\">arch_get_unmapped_area</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#hugetlb_get_unmapped_area_bottomup\">hugetlb_get_unmapped_area_bottomup</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff\">pgoff</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#hugetlb_get_unmapped_area_topdown\">hugetlb_get_unmapped_area_topdown</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff\">pgoff</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/*HAVE_ARCH_HUGETLB_UNMAPPED_AREA*/</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#setup_hugepagesz\">setup_hugepagesz</a>(char *<a class=\"id\" href=\"#opt\">opt</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ps\">ps</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#opt\">opt</a>, &amp;<a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ps\">ps</a> == <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_add_hstate\">hugetlb_add_hstate</a>(<a class=\"id\" href=\"#PMD_SHIFT\">PMD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ps\">ps</a> == <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a> && <a class=\"id\" href=\"#cpu_has_gbpages\">cpu_has_gbpages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_add_hstate\">hugetlb_add_hstate</a>(<a class=\"id\" href=\"#PUD_SHIFT\">PUD_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"hugepagesz: Unsupported page size %lu M\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ps\">ps</a> >> 20);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"hugepagesz=\", <a class=\"id\" href=\"#setup_hugepagesz\">setup_hugepagesz</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/0d/f99c447c2537ee7b6a897ba8ca608a1a19de91.xr', __xr_tmp);
