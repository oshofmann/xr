var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This file manages the translation entries for the IBM Calgary IOMMU.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Derived from arch/powerpc/platforms/pseries/iommu.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) IBM Corporation, 2006</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Jon Mason &lt;jdmason@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> * Author: Muli Ben-Yehuda &lt;muli@il.ibm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tce\">tce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#calgary\">calgary</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* flush a tce at 'tceaddr' to main memory */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_tce\">flush_tce</a>(void* <a class=\"id\" href=\"#tceaddr\">tceaddr</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* a single tce can't cross a cache line */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has_clflush\">cpu_has_clflush</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clflush\">clflush</a>(<a class=\"id\" href=\"#tceaddr\">tceaddr</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wbinvd\">wbinvd</a>();", 
"}", 
"", 
"void <a class=\"id\" href=\"#tce_build\">tce_build</a>(struct <a class=\"id\" href=\"#iommu_table\">iommu_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, unsigned long <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#npages\">npages</a>, unsigned long <a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#direction\">direction</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a>* <a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#rpn\">rpn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = (1 << <a class=\"id\" href=\"#TCE_READ_SHIFT\">TCE_READ_SHIFT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#direction\">direction</a> != <a class=\"id\" href=\"#DMA_TO_DEVICE\">DMA_TO_DEVICE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> |= (1 << <a class=\"id\" href=\"#TCE_WRITE_SHIFT\">TCE_WRITE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = ((<a class=\"id\" href=\"#u64\">u64</a>*)<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_base\">it_base</a>) + <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#npages\">npages</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rpn\">rpn</a> = (<a class=\"id\" href=\"#virt_to_bus\">virt_to_bus</a>((void*)<a class=\"id\" href=\"#uaddr\">uaddr</a>)) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> &= ~<a class=\"id\" href=\"#TCE_RPN_MASK\">TCE_RPN_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> |= (<a class=\"id\" href=\"#rpn\">rpn</a> << <a class=\"id\" href=\"#TCE_RPN_SHIFT\">TCE_RPN_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#cpu_to_be64\">cpu_to_be64</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_tce\">flush_tce</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uaddr\">uaddr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#tce_free\">tce_free</a>(struct <a class=\"id\" href=\"#iommu_table\">iommu_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>, long <a class=\"id\" href=\"#index\">index</a>, unsigned int <a class=\"id\" href=\"#npages\">npages</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a>* <a class=\"id\" href=\"#tp\">tp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>  = ((<a class=\"id\" href=\"#u64\">u64</a>*)<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_base\">it_base</a>) + <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#npages\">npages</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#cpu_to_be64\">cpu_to_be64</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_tce\">flush_tce</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#table_size_to_number_of_entries\">table_size_to_number_of_entries</a>(unsigned char <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * size is the order of the table, 0-7</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * smallest table is 8K entries, so shift result by 13 to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * multiply by 8K</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return (1 << <a class=\"id\" href=\"#size\">size</a>) << 13;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tce_table_setparms\">tce_table_setparms</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#iommu_table\">iommu_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bitmapsz\">bitmapsz</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bmppages\">bmppages</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_busno\">it_busno</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set the tce table size - measured in entries */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_size\">it_size</a> = <a class=\"id\" href=\"#table_size_to_number_of_entries\">table_size_to_number_of_entries</a>(<a class=\"id\" href=\"#specified_table_size\">specified_table_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * number of bytes needed for the bitmap size in number of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * entries; we need one bit per entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmapsz\">bitmapsz</a> = <a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_size\">it_size</a> / <a class=\"id\" href=\"#BITS_PER_BYTE\">BITS_PER_BYTE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bmppages\">bmppages</a> = <a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#bitmapsz\">bitmapsz</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bmppages\">bmppages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Calgary: cannot allocate bitmap\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_map\">it_map</a> = (unsigned long*)<a class=\"id\" href=\"#bmppages\">bmppages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_map\">it_map</a>, 0, <a class=\"id\" href=\"#bitmapsz\">bitmapsz</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_hint\">it_hint</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#it_lock\">it_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#build_tce_table\">build_tce_table</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#bbar\">bbar</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iommu_table\">iommu_table</a> *<a class=\"id\" href=\"#tbl\">tbl</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_iommu\">pci_iommu</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Calgary: dev %p has sysdata->iommu %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_iommu\">pci_iommu</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#iommu_table\">iommu_table</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tbl\">tbl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Calgary: error allocating iommu_table\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tce_table_setparms\">tce_table_setparms</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#tbl\">tbl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_tbl\">free_tbl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tbl\">tbl</a>-><a class=\"id\" href=\"#bbar\">bbar</a> = <a class=\"id\" href=\"#bbar\">bbar</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pci_iommu\">set_pci_iommu</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#tbl\">tbl</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#free_tbl\">free_tbl</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tbl\">tbl</a>);", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#alloc_tce_table\">alloc_tce_table</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#table_size_to_number_of_entries\">table_size_to_number_of_entries</a>(<a class=\"id\" href=\"#specified_table_size\">specified_table_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#TCE_ENTRY_SIZE\">TCE_ENTRY_SIZE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__alloc_bootmem_low\">__alloc_bootmem_low</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#size\">size</a>, 0);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#free_tce_table\">free_tce_table</a>(void *<a class=\"id\" href=\"#tbl\">tbl</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tbl\">tbl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#table_size_to_number_of_entries\">table_size_to_number_of_entries</a>(<a class=\"id\" href=\"#specified_table_size\">specified_table_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> *= <a class=\"id\" href=\"#TCE_ENTRY_SIZE\">TCE_ENTRY_SIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_bootmem\">free_bootmem</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#tbl\">tbl</a>), <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
];
xr_frag_insert('l/0e/9f8c428fc123a51d3f2f35bc67fb919d12022e.xr', __xr_tmp);
