var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  include/linux/hrtimer.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  hrtimers - High-resolution kernel timers</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   Copyright(C) 2005, Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>", 
"<span class=\"comment\"> *   Copyright(C) 2005, Red Hat, Inc., Ingo Molnar</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  data type definitions, declarations, prototypes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Started by: Thomas Gleixner and Ingo Molnar</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  For licencing details see kernel-base/COPYING</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_HRTIMER_H\">_LINUX_HRTIMER_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_HRTIMER_H\">_LINUX_HRTIMER_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rbtree\">rbtree</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ktime\">ktime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"struct <a class=\"id\" href=\"#hrtimer_clock_base\">hrtimer_clock_base</a>;", 
"struct <a class=\"id\" href=\"#hrtimer_cpu_base\">hrtimer_cpu_base</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mode arguments of xxx_hrtimer functions:</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a> = 0x0,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Time value is absolute */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_MODE_REL\">HRTIMER_MODE_REL</a> = 0x1,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Time value is relative to now */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_MODE_PINNED\">HRTIMER_MODE_PINNED</a> = 0x02,<span class=\"ts\"/><span class=\"comment\">/* Timer is bound to CPU */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_MODE_ABS_PINNED\">HRTIMER_MODE_ABS_PINNED</a> = 0x02,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_MODE_REL_PINNED\">HRTIMER_MODE_REL_PINNED</a> = 0x03,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return values for the callback function</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a>,<span class=\"ts\"/><span class=\"comment\">/* Timer is not restarted */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_RESTART\">HRTIMER_RESTART</a>,<span class=\"ts\"/><span class=\"comment\">/* Timer must be restarted */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Values to track state of the timer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Possible states:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * 0x00<span class=\"ts\"/><span class=\"ts\"/>inactive</span>", 
"<span class=\"comment\"> * 0x01<span class=\"ts\"/><span class=\"ts\"/>enqueued into rbtree</span>", 
"<span class=\"comment\"> * 0x02<span class=\"ts\"/><span class=\"ts\"/>callback function running</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Special cases:</span>", 
"<span class=\"comment\"> * 0x03<span class=\"ts\"/><span class=\"ts\"/>callback function running and enqueued</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>(was requeued on another CPU)</span>", 
"<span class=\"comment\"> * 0x09<span class=\"ts\"/><span class=\"ts\"/>timer was migrated on CPU hotunplug</span>", 
"<span class=\"comment\"> * The \"callback function running and enqueued\" status is only possible on</span>", 
"<span class=\"comment\"> * SMP. It happens for example when a posix timer expired and the callback</span>", 
"<span class=\"comment\"> * queued a signal. Between dropping the lock which protects the posix timer</span>", 
"<span class=\"comment\"> * and reacquiring the base lock of the hrtimer, another CPU can deliver the</span>", 
"<span class=\"comment\"> * signal and rearm the timer. We have to preserve the callback running state,</span>", 
"<span class=\"comment\"> * as otherwise the timer could be removed before the softirq code finishes the</span>", 
"<span class=\"comment\"> * the handling of the timer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The HRTIMER_STATE_ENQUEUED bit is always or'ed to the current state to</span>", 
"<span class=\"comment\"> * preserve the HRTIMER_STATE_CALLBACK bit in the above scenario.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All state transitions are protected by cpu_base-&gt;lock.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HRTIMER_STATE_INACTIVE\">HRTIMER_STATE_INACTIVE</a><span class=\"ts\"/>0x00", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HRTIMER_STATE_ENQUEUED\">HRTIMER_STATE_ENQUEUED</a><span class=\"ts\"/>0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HRTIMER_STATE_CALLBACK\">HRTIMER_STATE_CALLBACK</a><span class=\"ts\"/>0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HRTIMER_STATE_MIGRATE\">HRTIMER_STATE_MIGRATE</a><span class=\"ts\"/>0x04", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct hrtimer - the basic hrtimer structure</span>", 
"<span class=\"comment\"> * @node:<span class=\"ts\"/>red black tree node for time ordered insertion</span>", 
"<span class=\"comment\"> * @_expires:<span class=\"ts\"/>the absolute expiry time in the hrtimers internal</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>representation. The time is related to the clock on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>which the timer is based. Is setup by adding</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>slack to the _softexpires value. For non range timers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>identical to _softexpires.</span>", 
"<span class=\"comment\"> * @_softexpires: the absolute earliest expiry time of the hrtimer.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>The time which was given as expiry time when the timer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>was armed.</span>", 
"<span class=\"comment\"> * @function:<span class=\"ts\"/>timer expiry callback function</span>", 
"<span class=\"comment\"> * @base:<span class=\"ts\"/>pointer to the timer base (per cpu and per clock)</span>", 
"<span class=\"comment\"> * @state:<span class=\"ts\"/>state information (See bit values above)</span>", 
"<span class=\"comment\"> * @start_site:<span class=\"ts\"/>timer statistics field to store the site where the timer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>was started</span>", 
"<span class=\"comment\"> * @start_comm: timer statistics field to store the name of the process which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>started the timer</span>", 
"<span class=\"comment\"> * @start_pid: timer statistics field to store the pid of the task which</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>started the timer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The hrtimer structure must be initialized by hrtimer_init()</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_expires\">_expires</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_softexpires\">_softexpires</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#function\">function</a>)(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_clock_base\">hrtimer_clock_base</a><span class=\"ts\"/>*<a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TIMER_STATS\">CONFIG_TIMER_STATS</a>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_pid\">start_pid</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#start_site\">start_site</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_comm\">start_comm</a>[16];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct hrtimer_sleeper - simple sleeper structure</span>", 
"<span class=\"comment\"> * @timer:<span class=\"ts\"/>embedded timer structure</span>", 
"<span class=\"comment\"> * @task:<span class=\"ts\"/>task to wake up</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * task is set to NULL, when the timer expires.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> <a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct hrtimer_clock_base - the timer base for a specific clock</span>", 
"<span class=\"comment\"> * @cpu_base:<span class=\"ts\"/><span class=\"ts\"/>per cpu clock base</span>", 
"<span class=\"comment\"> * @index:<span class=\"ts\"/><span class=\"ts\"/>clock type index for per_cpu support when moving a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>timer to a base on another cpu.</span>", 
"<span class=\"comment\"> * @active:<span class=\"ts\"/><span class=\"ts\"/>red black tree root node for the active timers</span>", 
"<span class=\"comment\"> * @first:<span class=\"ts\"/><span class=\"ts\"/>pointer to the timer node which expires first</span>", 
"<span class=\"comment\"> * @resolution:<span class=\"ts\"/><span class=\"ts\"/>the resolution of the clock, in nanoseconds</span>", 
"<span class=\"comment\"> * @get_time:<span class=\"ts\"/><span class=\"ts\"/>function to retrieve the current time of the clock</span>", 
"<span class=\"comment\"> * @softirq_time:<span class=\"ts\"/>the time when running the hrtimer queue in the softirq</span>", 
"<span class=\"comment\"> * @offset:<span class=\"ts\"/><span class=\"ts\"/>offset of this clock to the monotonic base</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#hrtimer_clock_base\">hrtimer_clock_base</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_cpu_base\">hrtimer_cpu_base</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cpu_base\">cpu_base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockid_t\">clockid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_root\">rb_root</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#active\">active</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resolution\">resolution</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#get_time\">get_time</a>)(void);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#softirq_time\">softirq_time</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGH_RES_TIMERS\">CONFIG_HIGH_RES_TIMERS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HRTIMER_MAX_CLOCK_BASES\">HRTIMER_MAX_CLOCK_BASES</a> 2", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * struct hrtimer_cpu_base - the per cpu clock bases</span>", 
"<span class=\"comment\"> * @lock:<span class=\"ts\"/><span class=\"ts\"/>lock protecting the base and associated clock bases</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and timers</span>", 
"<span class=\"comment\"> * @clock_base:<span class=\"ts\"/><span class=\"ts\"/>array of clock bases for this cpu</span>", 
"<span class=\"comment\"> * @curr_timer:<span class=\"ts\"/><span class=\"ts\"/>the timer which is executing a callback right now</span>", 
"<span class=\"comment\"> * @expires_next:<span class=\"ts\"/>absolute time of the next event which was scheduled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>via clock_set_next_event()</span>", 
"<span class=\"comment\"> * @hres_active:<span class=\"ts\"/>State of high resolution mode</span>", 
"<span class=\"comment\"> * @hang_detected:<span class=\"ts\"/>The last hrtimer interrupt detected a hang</span>", 
"<span class=\"comment\"> * @nr_events:<span class=\"ts\"/><span class=\"ts\"/>Total number of hrtimer interrupt events</span>", 
"<span class=\"comment\"> * @nr_retries:<span class=\"ts\"/><span class=\"ts\"/>Total number of hrtimer interrupt retries</span>", 
"<span class=\"comment\"> * @nr_hangs:<span class=\"ts\"/><span class=\"ts\"/>Total number of hrtimer interrupt hangs</span>", 
"<span class=\"comment\"> * @max_hang_time:<span class=\"ts\"/>Maximum time spent in hrtimer_interrupt</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#hrtimer_cpu_base\">hrtimer_cpu_base</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_clock_base\">hrtimer_clock_base</a><span class=\"ts\"/><a class=\"id\" href=\"#clock_base\">clock_base</a>[<a class=\"id\" href=\"#HRTIMER_MAX_CLOCK_BASES\">HRTIMER_MAX_CLOCK_BASES</a>];", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGH_RES_TIMERS\">CONFIG_HIGH_RES_TIMERS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires_next\">expires_next</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hres_active\">hres_active</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hang_detected\">hang_detected</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_events\">nr_events</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_retries\">nr_retries</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_hangs\">nr_hangs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_hang_time\">max_hang_time</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_set_expires\">hrtimer_set_expires</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#time\">time</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a> = <a class=\"id\" href=\"#time\">time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a> = <a class=\"id\" href=\"#time\">time</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_set_expires_range\">hrtimer_set_expires_range</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#delta\">delta</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a> = <a class=\"id\" href=\"#time\">time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a> = <a class=\"id\" href=\"#ktime_add_safe\">ktime_add_safe</a>(<a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#delta\">delta</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_set_expires_range_ns\">hrtimer_set_expires_range_ns</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#time\">time</a>, unsigned long <a class=\"id\" href=\"#delta\">delta</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a> = <a class=\"id\" href=\"#time\">time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a> = <a class=\"id\" href=\"#ktime_add_safe\">ktime_add_safe</a>(<a class=\"id\" href=\"#time\">time</a>, <a class=\"id\" href=\"#ns_to_ktime\">ns_to_ktime</a>(<a class=\"id\" href=\"#delta\">delta</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_set_expires_tv64\">hrtimer_set_expires_tv64</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#tv64\">tv64</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = <a class=\"id\" href=\"#tv64\">tv64</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = <a class=\"id\" href=\"#tv64\">tv64</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_add_expires\">hrtimer_add_expires</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#time\">time</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a> = <a class=\"id\" href=\"#ktime_add_safe\">ktime_add_safe</a>(<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a>, <a class=\"id\" href=\"#time\">time</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a> = <a class=\"id\" href=\"#ktime_add_safe\">ktime_add_safe</a>(<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a>, <a class=\"id\" href=\"#time\">time</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_add_expires_ns\">hrtimer_add_expires_ns</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a> = <a class=\"id\" href=\"#ktime_add_ns\">ktime_add_ns</a>(<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a> = <a class=\"id\" href=\"#ktime_add_ns\">ktime_add_ns</a>(<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a>, <a class=\"id\" href=\"#ns\">ns</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#hrtimer_get_expires\">hrtimer_get_expires</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#hrtimer_get_softexpires\">hrtimer_get_softexpires</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#hrtimer_get_expires_tv64\">hrtimer_get_expires_tv64</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a>.<a class=\"id\" href=\"#tv64\">tv64</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#hrtimer_get_softexpires_tv64\">hrtimer_get_softexpires_tv64</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_softexpires\">_softexpires</a>.<a class=\"id\" href=\"#tv64\">tv64</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#hrtimer_get_expires_ns\">hrtimer_get_expires_ns</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#hrtimer_expires_remaining\">hrtimer_expires_remaining</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"    return <a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#_expires\">_expires</a>, <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#get_time\">get_time</a>());", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGH_RES_TIMERS\">CONFIG_HIGH_RES_TIMERS</a>", 
"struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a>;", 
"", 
"extern void <a class=\"id\" href=\"#clock_was_set\">clock_was_set</a>(void);", 
"extern void <a class=\"id\" href=\"#hres_timers_resume\">hres_timers_resume</a>(void);", 
"extern void <a class=\"id\" href=\"#hrtimer_interrupt\">hrtimer_interrupt</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * In high resolution mode the time reference must be read accurate</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#hrtimer_cb_get_time\">hrtimer_cb_get_time</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#get_time\">get_time</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hrtimer_is_hres_active\">hrtimer_is_hres_active</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#cpu_base\">cpu_base</a>-><a class=\"id\" href=\"#hres_active\">hres_active</a>;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#hrtimer_peek_ahead_timers\">hrtimer_peek_ahead_timers</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The resolution of the clocks. The resolution value is returned in</span>", 
"<span class=\"comment\"> * the clock_getres() system call to give application programmers an</span>", 
"<span class=\"comment\"> * idea of the (in)accuracy of timers. Timer values are rounded up to</span>", 
"<span class=\"comment\"> * this resolution values.</span>", 
"<span class=\"comment\"> */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HIGH_RES_NSEC\">HIGH_RES_NSEC</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KTIME_HIGH_RES\">KTIME_HIGH_RES</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ktime_t\">ktime_t</a>) { .<a class=\"id\" href=\"#tv64\">tv64</a> = <a class=\"id\" href=\"#HIGH_RES_NSEC\">HIGH_RES_NSEC</a> }", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MONOTONIC_RES_NSEC\">MONOTONIC_RES_NSEC</a><span class=\"ts\"/><a class=\"id\" href=\"#HIGH_RES_NSEC\">HIGH_RES_NSEC</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KTIME_MONOTONIC_RES\">KTIME_MONOTONIC_RES</a><span class=\"ts\"/><a class=\"id\" href=\"#KTIME_HIGH_RES\">KTIME_HIGH_RES</a>", 
"", 
"#else", 
"", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MONOTONIC_RES_NSEC\">MONOTONIC_RES_NSEC</a><span class=\"ts\"/><a class=\"id\" href=\"#LOW_RES_NSEC\">LOW_RES_NSEC</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KTIME_MONOTONIC_RES\">KTIME_MONOTONIC_RES</a><span class=\"ts\"/><a class=\"id\" href=\"#KTIME_LOW_RES\">KTIME_LOW_RES</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * clock_was_set() is a NOP for non- high-resolution systems. The</span>", 
"<span class=\"comment\"> * time-sorted order guarantees that a timer does not expire early and</span>", 
"<span class=\"comment\"> * is expired in the next softirq when the clock was advanced.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clock_was_set\">clock_was_set</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_peek_ahead_timers\">hrtimer_peek_ahead_timers</a>(void) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hres_timers_resume\">hres_timers_resume</a>(void) { }", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * In non high resolution mode the time reference is taken from</span>", 
"<span class=\"comment\"> * the base softirq time variable.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#hrtimer_cb_get_time\">hrtimer_cb_get_time</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#softirq_time\">softirq_time</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hrtimer_is_hres_active\">hrtimer_is_hres_active</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_get\">ktime_get</a>(void);", 
"extern <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#ktime_get_real\">ktime_get_real</a>(void);", 
"", 
"", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#tick_device\">tick_device</a>, <a class=\"id\" href=\"#tick_cpu_device\">tick_cpu_device</a>);", 
"", 
"", 
"<span class=\"comment\">/* Exported timer functions: */</span>", 
"", 
"<span class=\"comment\">/* Initialize timers: */</span>", 
"extern void <a class=\"id\" href=\"#hrtimer_init\">hrtimer_init</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#which_clock\">which_clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_OBJECTS_TIMERS\">CONFIG_DEBUG_OBJECTS_TIMERS</a>", 
"extern void <a class=\"id\" href=\"#hrtimer_init_on_stack\">hrtimer_init_on_stack</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#which_clock\">which_clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"", 
"extern void <a class=\"id\" href=\"#destroy_hrtimer_on_stack\">destroy_hrtimer_on_stack</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#hrtimer_init_on_stack\">hrtimer_init_on_stack</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#which_clock\">which_clock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init\">hrtimer_init</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#which_clock\">which_clock</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#destroy_hrtimer_on_stack\">destroy_hrtimer_on_stack</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Basic timer operations: */</span>", 
"extern int <a class=\"id\" href=\"#hrtimer_start\">hrtimer_start</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#tim\">tim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"extern int <a class=\"id\" href=\"#hrtimer_start_range_ns\">hrtimer_start_range_ns</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#tim\">tim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range_ns\">range_ns</a>, const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"extern int", 
"<a class=\"id\" href=\"#__hrtimer_start_range_ns\">__hrtimer_start_range_ns</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#tim\">tim</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#delta_ns\">delta_ns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>, int <a class=\"id\" href=\"#wakeup\">wakeup</a>);", 
"", 
"extern int <a class=\"id\" href=\"#hrtimer_cancel\">hrtimer_cancel</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>);", 
"extern int <a class=\"id\" href=\"#hrtimer_try_to_cancel\">hrtimer_try_to_cancel</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hrtimer_start_expires\">hrtimer_start_expires</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delta\">delta</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#soft\">soft</a>, <a class=\"id\" href=\"#hard\">hard</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#soft\">soft</a> = <a class=\"id\" href=\"#hrtimer_get_softexpires\">hrtimer_get_softexpires</a>(<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hard\">hard</a> = <a class=\"id\" href=\"#hrtimer_get_expires\">hrtimer_get_expires</a>(<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta\">delta</a> = <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#ktime_sub\">ktime_sub</a>(<a class=\"id\" href=\"#hard\">hard</a>, <a class=\"id\" href=\"#soft\">soft</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hrtimer_start_range_ns\">hrtimer_start_range_ns</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#soft\">soft</a>, <a class=\"id\" href=\"#delta\">delta</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hrtimer_start_expires\">hrtimer_start_expires</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Query timers: */</span>", 
"extern <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#hrtimer_get_remaining\">hrtimer_get_remaining</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>);", 
"extern int <a class=\"id\" href=\"#hrtimer_get_res\">hrtimer_get_res</a>(const <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#which_clock\">which_clock</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"extern <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#hrtimer_get_next_event\">hrtimer_get_next_event</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A timer is active, when it is enqueued into the rbtree or the callback</span>", 
"<span class=\"comment\"> * function is running.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hrtimer_active\">hrtimer_active</a>(const struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#HRTIMER_STATE_INACTIVE\">HRTIMER_STATE_INACTIVE</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helper function to check, whether the timer is on one of the queues</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hrtimer_is_queued\">hrtimer_is_queued</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#HRTIMER_STATE_ENQUEUED\">HRTIMER_STATE_ENQUEUED</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helper function to check, whether the timer is running the callback</span>", 
"<span class=\"comment\"> * function</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hrtimer_callback_running\">hrtimer_callback_running</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#HRTIMER_STATE_CALLBACK\">HRTIMER_STATE_CALLBACK</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Forward a hrtimer so it expires after now: */</span>", 
"extern <a class=\"id\" href=\"#u64\">u64</a>", 
"<a class=\"id\" href=\"#hrtimer_forward\">hrtimer_forward</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#interval\">interval</a>);", 
"", 
"<span class=\"comment\">/* Forward a hrtimer so it expires after the hrtimer's current now */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#hrtimer_forward_now\">hrtimer_forward_now</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#interval\">interval</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hrtimer_forward\">hrtimer_forward</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#get_time\">get_time</a>(), <a class=\"id\" href=\"#interval\">interval</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Precise sleep: */</span>", 
"extern long <a class=\"id\" href=\"#hrtimer_nanosleep\">hrtimer_nanosleep</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#rqtp\">rqtp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#rmtp\">rmtp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#clockid\">clockid</a>);", 
"extern long <a class=\"id\" href=\"#hrtimer_nanosleep_restart\">hrtimer_nanosleep_restart</a>(struct <a class=\"id\" href=\"#restart_block\">restart_block</a> *<a class=\"id\" href=\"#restart_block\">restart_block</a>);", 
"", 
"extern void <a class=\"id\" href=\"#hrtimer_init_sleeper\">hrtimer_init_sleeper</a>(struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> *<a class=\"id\" href=\"#sl\">sl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"extern int <a class=\"id\" href=\"#schedule_hrtimeout_range\">schedule_hrtimeout_range</a>(<a class=\"id\" href=\"#ktime_t\">ktime_t</a> *<a class=\"id\" href=\"#expires\">expires</a>, unsigned long <a class=\"id\" href=\"#delta\">delta</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"extern int <a class=\"id\" href=\"#schedule_hrtimeout_range_clock\">schedule_hrtimeout_range_clock</a>(<a class=\"id\" href=\"#ktime_t\">ktime_t</a> *<a class=\"id\" href=\"#expires\">expires</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#delta\">delta</a>, const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>, int <a class=\"id\" href=\"#clock\">clock</a>);", 
"extern int <a class=\"id\" href=\"#schedule_hrtimeout\">schedule_hrtimeout</a>(<a class=\"id\" href=\"#ktime_t\">ktime_t</a> *<a class=\"id\" href=\"#expires\">expires</a>, const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>);", 
"", 
"<span class=\"comment\">/* Soft interrupt function to run the hrtimer queues: */</span>", 
"extern void <a class=\"id\" href=\"#hrtimer_run_queues\">hrtimer_run_queues</a>(void);", 
"extern void <a class=\"id\" href=\"#hrtimer_run_pending\">hrtimer_run_pending</a>(void);", 
"", 
"<span class=\"comment\">/* Bootup initialization: */</span>", 
"extern void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#hrtimers_init\">hrtimers_init</a>(void);", 
"", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> &lt; 64", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ktime_divns\">ktime_divns</a>(const <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#kt\">kt</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#div\">div</a>);", 
"#else <span class=\"comment\">/* BITS_PER_LONG &lt; 64 */</span>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ktime_divns\">ktime_divns</a>(<a class=\"id\" href=\"#kt\">kt</a>, <a class=\"id\" href=\"#div\">div</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#u64\">u64</a>)((<a class=\"id\" href=\"#kt\">kt</a>).<a class=\"id\" href=\"#tv64\">tv64</a> / (<a class=\"id\" href=\"#div\">div</a>))", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Show pending timers: */</span>", 
"extern void <a class=\"id\" href=\"#sysrq_timer_list_show\">sysrq_timer_list_show</a>(void);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/0f/0593af867a95446d215740108bf5d419307bc2.xr', __xr_tmp);
