var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions related to io context handling</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* for max_pfn/max_low_pfn */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"blk.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For io context allocations</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#iocontext_cachep\">iocontext_cachep</a>;", 
"", 
"static void <a class=\"id\" href=\"#cfq_dtor\">cfq_dtor</a>(struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#ioc\">ioc</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#cic_list\">cic_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_io_context\">cfq_io_context</a> *<a class=\"id\" href=\"#cic\">cic</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#cic_list\">cic_list</a>.<a class=\"id\" href=\"#first\">first</a>, struct <a class=\"id\" href=\"#cfq_io_context\">cfq_io_context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cic_list\">cic_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a>-><a class=\"id\" href=\"#dtor\">dtor</a>(<a class=\"id\" href=\"#ioc\">ioc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * IO Context helper functions. put_io_context() returns 1 if there are no</span>", 
"<span class=\"comment\"> * more users of this io context, 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#put_io_context\">put_io_context</a>(struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#ioc\">ioc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ioc\">ioc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#atomic_long_read\">atomic_long_read</a>(&amp;<a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#refcount\">refcount</a>) == 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_long_dec_and_test\">atomic_long_dec_and_test</a>(&amp;<a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#refcount\">refcount</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_dtor\">cfq_dtor</a>(<a class=\"id\" href=\"#ioc\">ioc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#iocontext_cachep\">iocontext_cachep</a>, <a class=\"id\" href=\"#ioc\">ioc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#put_io_context\">put_io_context</a>);", 
"", 
"static void <a class=\"id\" href=\"#cfq_exit\">cfq_exit</a>(struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#ioc\">ioc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#cic_list\">cic_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#cfq_io_context\">cfq_io_context</a> *<a class=\"id\" href=\"#cic\">cic</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#cic_list\">cic_list</a>.<a class=\"id\" href=\"#first\">first</a>, struct <a class=\"id\" href=\"#cfq_io_context\">cfq_io_context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cic_list\">cic_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cic\">cic</a>-><a class=\"id\" href=\"#exit\">exit</a>(<a class=\"id\" href=\"#ioc\">ioc</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"", 
"<span class=\"comment\">/* Called by the exitting task */</span>", 
"void <a class=\"id\" href=\"#exit_io_context\">exit_io_context</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#ioc\">ioc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioc\">ioc</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#io_context\">io_context</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#io_context\">io_context</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#ioc\">ioc</a>-><a class=\"id\" href=\"#nr_tasks\">nr_tasks</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfq_exit\">cfq_exit</a>(<a class=\"id\" href=\"#ioc\">ioc</a>);", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_io_context\">put_io_context</a>(<a class=\"id\" href=\"#ioc\">ioc</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#alloc_io_context\">alloc_io_context</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#kmem_cache_alloc_node\">kmem_cache_alloc_node</a>(<a class=\"id\" href=\"#iocontext_cachep\">iocontext_cachep</a>, <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_long_set\">atomic_long_set</a>(&amp;<a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#refcount\">refcount</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#nr_tasks\">nr_tasks</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#ioprio_changed\">ioprio_changed</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#ioprio\">ioprio</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#last_waited\">last_waited</a> = 0; <span class=\"comment\">/* doesn't matter... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#nr_batch_requests\">nr_batch_requests</a> = 0; <span class=\"comment\">/* because this is 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_RADIX_TREE\">INIT_RADIX_TREE</a>(&amp;<a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#radix_root\">radix_root</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_HIGH\">__GFP_HIGH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_HLIST_HEAD\">INIT_HLIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#cic_list\">cic_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#ioc_data\">ioc_data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If the current task has no IO context then create one and initialise it.</span>", 
"<span class=\"comment\"> * Otherwise, return its existing IO context.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This returned IO context doesn't have a specifically elevated refcount,</span>", 
"<span class=\"comment\"> * but since the current task itself holds a reference, the context can be</span>", 
"<span class=\"comment\"> * used in general code, so long as it stays within `current` context.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#current_io_context\">current_io_context</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#io_context\">io_context</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#alloc_io_context\">alloc_io_context</a>(<a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make sure set_task_ioprio() sees the settings above */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#io_context\">io_context</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If the current task has no IO context then create one and initialise it.</span>", 
"<span class=\"comment\"> * If it does have a context, take a ref on it.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is always called in the context of the task which submitted the I/O.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#get_io_context\">get_io_context</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check for unlikely race with exiting task. ioc ref count is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * zero when ioc is being detached.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#current_io_context\">current_io_context</a>(<a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#ret\">ret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>} while (!<a class=\"id\" href=\"#atomic_long_inc_not_zero\">atomic_long_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#ret\">ret</a>-><a class=\"id\" href=\"#refcount\">refcount</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#get_io_context\">get_io_context</a>);", 
"", 
"void <a class=\"id\" href=\"#copy_io_context\">copy_io_context</a>(struct <a class=\"id\" href=\"#io_context\">io_context</a> **<a class=\"id\" href=\"#pdst\">pdst</a>, struct <a class=\"id\" href=\"#io_context\">io_context</a> **<a class=\"id\" href=\"#psrc\">psrc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#src\">src</a> = *<a class=\"id\" href=\"#psrc\">psrc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#io_context\">io_context</a> *<a class=\"id\" href=\"#dst\">dst</a> = *<a class=\"id\" href=\"#pdst\">pdst</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src\">src</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#atomic_long_read\">atomic_long_read</a>(&amp;<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#refcount\">refcount</a>) == 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_long_inc\">atomic_long_inc</a>(&amp;<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#refcount\">refcount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_io_context\">put_io_context</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pdst\">pdst</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#copy_io_context\">copy_io_context</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#blk_ioc_init\">blk_ioc_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iocontext_cachep\">iocontext_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"blkdev_ioc\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#io_context\">io_context</a>), 0, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#blk_ioc_init\">blk_ioc_init</a>);", 
];
xr_frag_insert('l/0f/0a3e57f145914e8ce5a1a520adc4149f629583.xr', __xr_tmp);
