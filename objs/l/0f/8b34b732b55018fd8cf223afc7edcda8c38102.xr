var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Firmware replacement code.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Work around broken BIOSes that don't set an aperture, only set the</span>", 
"<span class=\"comment\"> * aperture in the AGP bridge, or set too small aperture.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If all fails map the aperture over some low memory.  This is cheaper than</span>", 
"<span class=\"comment\"> * doing bounce buffering. The memory is lost. This is done at early boot</span>", 
"<span class=\"comment\"> * because only the bootmem allocator can allocate 32+MB.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2002 Andi Kleen, SuSE Labs.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci_ids\">pci_ids</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#suspend\">suspend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmemleak\">kmemleak</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#iommu\">iommu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#gart\">gart</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#direct\">direct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#k8\">k8</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#gart_iommu_aperture\">gart_iommu_aperture</a>;", 
"int <a class=\"id\" href=\"#gart_iommu_aperture_disabled\">gart_iommu_aperture_disabled</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"int <a class=\"id\" href=\"#gart_iommu_aperture_allowed\">gart_iommu_aperture_allowed</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"int <a class=\"id\" href=\"#fallback_aper_order\">fallback_aper_order</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = 1; <span class=\"comment\">/* 64MB */</span>", 
"int <a class=\"id\" href=\"#fallback_aper_force\">fallback_aper_force</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"int <a class=\"id\" href=\"#fix_aperture\">fix_aperture</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = 1;", 
"", 
"struct <a class=\"id\" href=\"#bus_dev_range\">bus_dev_range</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dev_base\">dev_base</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#bus_dev_range\">bus_dev_range</a> <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/>{ 0x00, 0x18, 0x20},", 
"<span class=\"ts\"/>{ 0xff, 0x00, 0x20},", 
"<span class=\"ts\"/>{ 0xfe, 0x00, 0x20}", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#gart_resource\">gart_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"GART\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#insert_aperture_resource\">insert_aperture_resource</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aper_base\">aper_base</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aper_size\">aper_size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gart_resource\">gart_resource</a>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#aper_base\">aper_base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gart_resource\">gart_resource</a>.<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#aper_base\">aper_base</a> + <a class=\"id\" href=\"#aper_size\">aper_size</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, &amp;<a class=\"id\" href=\"#gart_resource\">gart_resource</a>);", 
"}", 
"", 
"<span class=\"comment\">/* This code runs before the PCI subsystem is initialized, so just</span>", 
"<span class=\"comment\">   access the northbridge directly. */</span>", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#allocate_aperture\">allocate_aperture</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aper_size\">aper_size</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* aper_size should &lt;= 1G */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fallback_aper_order\">fallback_aper_order</a> &gt; 5)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fallback_aper_order\">fallback_aper_order</a> = 5;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aper_size\">aper_size</a> = (32 * 1024 * 1024) << <a class=\"id\" href=\"#fallback_aper_order\">fallback_aper_order</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Aperture has to be naturally aligned. This means a 2GB aperture</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * won't have much chance of finding a place in the lower 4GB of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memory. Unfortunately we cannot move it up because that would</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make the IOMMU useless.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * using 512M as goal, in case kexec will load kernel_big</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that will do the on position decompress, and  could overlap with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that positon with gart that is used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sequende:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kernel_small</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ==&gt; kexec (with kdump trigger path or previous doesn't shutdown gart)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ==&gt; kernel_small(gart area become e820_reserved)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ==&gt; kexec (with kdump trigger path or previous doesn't shutdown gart)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ==&gt; kerne_big (uncompressed size will be big than 64M or 128M)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so don't use 512M below as gart iommu, leave the space for kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * code for safe</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#__alloc_bootmem_nopanic\">__alloc_bootmem_nopanic</a>(<a class=\"id\" href=\"#aper_size\">aper_size</a>, <a class=\"id\" href=\"#aper_size\">aper_size</a>, 512ULL<<20);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Kmemleak should not scan this block as it may not be mapped via the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kernel direct mapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmemleak_ignore\">kmemleak_ignore</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a> || <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>)+<a class=\"id\" href=\"#aper_size\">aper_size</a> &gt; 0xffffffff) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Cannot allocate aperture memory hole (%p,%uK)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#aper_size\">aper_size</a>>>10);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_bootmem\">free_bootmem</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#aper_size\">aper_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Mapping aperture over %d KB of RAM @ %lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_size\">aper_size</a> >> 10, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#insert_aperture_resource\">insert_aperture_resource</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#aper_size\">aper_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_nosave_region\">register_nosave_region</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>+<a class=\"id\" href=\"#aper_size\">aper_size</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Find a PCI capability */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_cap\">find_cap</a>(int <a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#slot\">slot</a>, int <a class=\"id\" href=\"#func\">func</a>, int <a class=\"id\" href=\"#cap\">cap</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#read_pci_config_16\">read_pci_config_16</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#PCI_STATUS\">PCI_STATUS</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_STATUS_CAP_LIST\">PCI_STATUS_CAP_LIST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#read_pci_config_byte\">read_pci_config_byte</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#PCI_CAPABILITY_LIST\">PCI_CAPABILITY_LIST</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#bytes\">bytes</a> = 0; <a class=\"id\" href=\"#bytes\">bytes</a> &lt; 48 && <a class=\"id\" href=\"#pos\">pos</a> >= 0x40; <a class=\"id\" href=\"#bytes\">bytes</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#id\">id</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> &= ~3;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#read_pci_config_byte\">read_pci_config_byte</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#pos\">pos</a>+<a class=\"id\" href=\"#PCI_CAP_LIST_ID\">PCI_CAP_LIST_ID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> == 0xff)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> == <a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#read_pci_config_byte\">read_pci_config_byte</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>+<a class=\"id\" href=\"#PCI_CAP_LIST_NEXT\">PCI_CAP_LIST_NEXT</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Read a standard AGPv3 bridge header */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#read_agp\">read_agp</a>(int <a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#slot\">slot</a>, int <a class=\"id\" href=\"#func\">func</a>, int <a class=\"id\" href=\"#cap\">cap</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#order\">order</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#apsize\">apsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#apsizereg\">apsizereg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nbits\">nbits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aper_low\">aper_low</a>, <a class=\"id\" href=\"#aper_hi\">aper_hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#aper\">aper</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#old_order\">old_order</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"AGP bridge at %02x:%02x:%02x\\n\", <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apsizereg\">apsizereg</a> = <a class=\"id\" href=\"#read_pci_config_16\">read_pci_config_16</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#cap\">cap</a> + 0x14);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#apsizereg\">apsizereg</a> == 0xffffffff) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"APSIZE in AGP bridge unreadable\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* old_order could be the value from NB gart setting */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_order\">old_order</a> = *<a class=\"id\" href=\"#order\">order</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apsize\">apsize</a> = <a class=\"id\" href=\"#apsizereg\">apsizereg</a> &amp; 0xfff;", 
"<span class=\"ts\"/><span class=\"comment\">/* Some BIOS use weird encodings not in the AGPv3 table. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#apsize\">apsize</a> &amp; 0xff)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#apsize\">apsize</a> |= 0xf00;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nbits\">nbits</a> = <a class=\"id\" href=\"#hweight16\">hweight16</a>(<a class=\"id\" href=\"#apsize\">apsize</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#order\">order</a> = 7 - <a class=\"id\" href=\"#nbits\">nbits</a>;", 
"<span class=\"ts\"/>if ((int)*<a class=\"id\" href=\"#order\">order</a> &lt; 0) <span class=\"comment\">/* &lt; 32MB */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#order\">order</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aper_low\">aper_low</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>, 0x10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aper_hi\">aper_hi</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>, 0x14);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aper\">aper</a> = (<a class=\"id\" href=\"#aper_low\">aper_low</a> &amp; ~((1<<22)-1)) | ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#aper_hi\">aper_hi</a> << 32);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * On some sick chips, APSIZE is 0. It means it wants 4G</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so let double check that order, and lets trust AMD NB settings:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Aperture from AGP @ %Lx old size %u MB\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper\">aper</a>, 32 << <a class=\"id\" href=\"#old_order\">old_order</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aper\">aper</a> + (32ULL<<(20 + *<a class=\"id\" href=\"#order\">order</a>)) &gt; 0x100000000ULL) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Aperture size %u MB (APSIZE %x) is not right, using settings from NB\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>32 << *<a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#apsizereg\">apsizereg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#order\">order</a> = <a class=\"id\" href=\"#old_order\">old_order</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Aperture from AGP @ %Lx size %u MB (APSIZE %x)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper\">aper</a>, 32 << *<a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#apsizereg\">apsizereg</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#aperture_valid\">aperture_valid</a>(<a class=\"id\" href=\"#aper\">aper</a>, (32*1024*1024) << *<a class=\"id\" href=\"#order\">order</a>, 32<<20))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#aper\">aper</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Look for an AGP bridge. Windows only expects the aperture in the</span>", 
"<span class=\"comment\"> * AGP bridge and some BIOS forget to initialize the Northbridge too.</span>", 
"<span class=\"comment\"> * Work around this here.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Do an PCI bus scan by hand because we're running before the PCI</span>", 
"<span class=\"comment\"> * subsystem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All K8 AGP bridges are AGPv3 compliant, so we can do this scan</span>", 
"<span class=\"comment\"> * generically. It's probably overkill to always scan all slots because</span>", 
"<span class=\"comment\"> * the AGP bridges should be always an own bus on the HT hierarchy,</span>", 
"<span class=\"comment\"> * but do it here for future safety.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#search_agp_bridge\">search_agp_bridge</a>(<a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#order\">order</a>, int *<a class=\"id\" href=\"#valid_agp\">valid_agp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Poor man's PCI discovery */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#bus\">bus</a> = 0; <a class=\"id\" href=\"#bus\">bus</a> &lt; 256; <a class=\"id\" href=\"#bus\">bus</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#slot\">slot</a> = 0; <a class=\"id\" href=\"#slot\">slot</a> &lt; 32; <a class=\"id\" href=\"#slot\">slot</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#func\">func</a> = 0; <a class=\"id\" href=\"#func\">func</a> &lt; 8; <a class=\"id\" href=\"#func\">func</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_CLASS_REVISION\">PCI_CLASS_REVISION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> == 0xffffffff)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#class\">class</a> >> 16) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_HOST\">PCI_CLASS_BRIDGE_HOST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_OTHER\">PCI_CLASS_BRIDGE_OTHER</a>: <span class=\"comment\">/* needed? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* AGP bridge? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#find_cap\">find_cap</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_CAP_ID_AGP\">PCI_CAP_ID_AGP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap\">cap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#valid_agp\">valid_agp</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#read_agp\">read_agp</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>, <a class=\"id\" href=\"#cap\">cap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No multi-function device? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#read_pci_config_byte\">read_pci_config_byte</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PCI_HEADER_TYPE\">PCI_HEADER_TYPE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#type\">type</a> &amp; 0x80))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"No AGP bridge found\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#gart_fix_e820\">gart_fix_e820</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = 1;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_gart_mem\">parse_gart_mem</a>(char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#p\">p</a>, \"off\", 3))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gart_fix_e820\">gart_fix_e820</a> = 0;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#p\">p</a>, \"on\", 2))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gart_fix_e820\">gart_fix_e820</a> = 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"gart_fix_e820\", <a class=\"id\" href=\"#parse_gart_mem\">parse_gart_mem</a>);", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_gart_iommu_check\">early_gart_iommu_check</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in case it is enabled before, esp for kexec/kdump,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * previous kernel already enable that. memset called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by allocate_aperture/__alloc_bootmem_nopanic cause restart.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or second kernel have different position for GART hole. and new</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kernel could use hole as RAM that is still used by GART set by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * first kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or BIOS forget to put that in reserved.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * try to update e820 to make that region as reserved.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#agp_aper_order\">agp_aper_order</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#fix\">fix</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#valid_agp\">valid_agp</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ctl\">ctl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aper_size\">aper_size</a> = 0, <a class=\"id\" href=\"#aper_order\">aper_order</a> = 0, <a class=\"id\" href=\"#last_aper_order\">last_aper_order</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#aper_base\">aper_base</a> = 0, <a class=\"id\" href=\"#last_aper_base\">last_aper_base</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#aper_enabled\">aper_enabled</a> = 0, <a class=\"id\" href=\"#last_aper_enabled\">last_aper_enabled</a> = 0, <a class=\"id\" href=\"#last_valid\">last_valid</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#early_pci_allowed\">early_pci_allowed</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is mostly duplicate of iommu_hole_init */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#search_agp_bridge\">search_agp_bridge</a>(&amp;<a class=\"id\" href=\"#agp_aper_order\">agp_aper_order</a>, &amp;<a class=\"id\" href=\"#valid_agp\">valid_agp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fix\">fix</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dev_base\">dev_base</a>, <a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_base\">dev_base</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_base\">dev_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_limit\">dev_limit</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#dev_base\">dev_base</a>; <a class=\"id\" href=\"#slot\">slot</a> &lt; <a class=\"id\" href=\"#dev_limit\">dev_limit</a>; <a class=\"id\" href=\"#slot\">slot</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#early_is_k8_nb\">early_is_k8_nb</a>(<a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, 0x00)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTURECTL\">AMD64_GARTAPERTURECTL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_enabled\">aper_enabled</a> = <a class=\"id\" href=\"#ctl\">ctl</a> &amp; <a class=\"id\" href=\"#AMD64_GARTEN\">AMD64_GARTEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_order\">aper_order</a> = (<a class=\"id\" href=\"#ctl\">ctl</a> >> 1) &amp; 7;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_size\">aper_size</a> = (32 * 1024 * 1024) << <a class=\"id\" href=\"#aper_order\">aper_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_base\">aper_base</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTUREBASE\">AMD64_GARTAPERTUREBASE</a>) &amp; 0x7fff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_base\">aper_base</a> <<= 25;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_valid\">last_valid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#aper_order\">aper_order</a> != <a class=\"id\" href=\"#last_aper_order\">last_aper_order</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#aper_base\">aper_base</a> != <a class=\"id\" href=\"#last_aper_base\">last_aper_base</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#aper_enabled\">aper_enabled</a> != <a class=\"id\" href=\"#last_aper_enabled\">last_aper_enabled</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fix\">fix</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_aper_order\">last_aper_order</a> = <a class=\"id\" href=\"#aper_order\">aper_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_aper_base\">last_aper_base</a> = <a class=\"id\" href=\"#aper_base\">aper_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_aper_enabled\">last_aper_enabled</a> = <a class=\"id\" href=\"#aper_enabled\">aper_enabled</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_valid\">last_valid</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fix\">fix</a> && !<a class=\"id\" href=\"#aper_enabled\">aper_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#aper_base\">aper_base</a> || !<a class=\"id\" href=\"#aper_size\">aper_size</a> || <a class=\"id\" href=\"#aper_base\">aper_base</a> + <a class=\"id\" href=\"#aper_size\">aper_size</a> &gt; 0x100000000UL)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fix\">fix</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gart_fix_e820\">gart_fix_e820</a> && !<a class=\"id\" href=\"#fix\">fix</a> && <a class=\"id\" href=\"#aper_enabled\">aper_enabled</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#e820_any_mapped\">e820_any_mapped</a>(<a class=\"id\" href=\"#aper_base\">aper_base</a>, <a class=\"id\" href=\"#aper_base\">aper_base</a> + <a class=\"id\" href=\"#aper_size\">aper_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reserve it, so we can reuse it in second kernel */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"update e820 for GART\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(<a class=\"id\" href=\"#aper_base\">aper_base</a>, <a class=\"id\" href=\"#aper_size\">aper_size</a>, <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_e820\">update_e820</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#valid_agp\">valid_agp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* disable them all at first */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dev_base\">dev_base</a>, <a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_base\">dev_base</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_base\">dev_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_limit\">dev_limit</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#dev_base\">dev_base</a>; <a class=\"id\" href=\"#slot\">slot</a> &lt; <a class=\"id\" href=\"#dev_limit\">dev_limit</a>; <a class=\"id\" href=\"#slot\">slot</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#early_is_k8_nb\">early_is_k8_nb</a>(<a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, 0x00)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTURECTL\">AMD64_GARTAPERTURECTL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> &= ~<a class=\"id\" href=\"#AMD64_GARTEN\">AMD64_GARTEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_pci_config\">write_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTURECTL\">AMD64_GARTAPERTURECTL</a>, <a class=\"id\" href=\"#ctl\">ctl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#printed_gart_size_msg\">printed_gart_size_msg</a>;", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#gart_iommu_hole_init\">gart_iommu_hole_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#agp_aper_base\">agp_aper_base</a> = 0, <a class=\"id\" href=\"#agp_aper_order\">agp_aper_order</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aper_size\">aper_size</a>, <a class=\"id\" href=\"#aper_alloc\">aper_alloc</a> = 0, <a class=\"id\" href=\"#aper_order\">aper_order</a> = 0, <a class=\"id\" href=\"#last_aper_order\">last_aper_order</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#aper_base\">aper_base</a>, <a class=\"id\" href=\"#last_aper_base\">last_aper_base</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fix\">fix</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#valid_agp\">valid_agp</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gart_iommu_aperture_disabled\">gart_iommu_aperture_disabled</a> || !<a class=\"id\" href=\"#fix_aperture\">fix_aperture</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#early_pci_allowed\">early_pci_allowed</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>  \"Checking aperture...\\n\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fallback_aper_force\">fallback_aper_force</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#agp_aper_base\">agp_aper_base</a> = <a class=\"id\" href=\"#search_agp_bridge\">search_agp_bridge</a>(&amp;<a class=\"id\" href=\"#agp_aper_order\">agp_aper_order</a>, &amp;<a class=\"id\" href=\"#valid_agp\">valid_agp</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fix\">fix</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dev_base\">dev_base</a>, <a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ctl\">ctl</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_base\">dev_base</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_base\">dev_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_limit\">dev_limit</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#dev_base\">dev_base</a>; <a class=\"id\" href=\"#slot\">slot</a> &lt; <a class=\"id\" href=\"#dev_limit\">dev_limit</a>; <a class=\"id\" href=\"#slot\">slot</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#early_is_k8_nb\">early_is_k8_nb</a>(<a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, 0x00)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu_detected\">iommu_detected</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gart_iommu_aperture\">gart_iommu_aperture</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#iommu\">iommu</a>.<a class=\"id\" href=\"#iommu_init\">iommu_init</a> = <a class=\"id\" href=\"#gart_iommu_init\">gart_iommu_init</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#AMD64_GARTAPERTURECTL\">AMD64_GARTAPERTURECTL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Before we do anything else disable the GART. It may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * still be enabled if we boot into a crash-kernel here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Reconfiguring the GART while it is enabled could have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * unknown side-effects.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> &= ~<a class=\"id\" href=\"#GARTEN\">GARTEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_pci_config\">write_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTURECTL\">AMD64_GARTAPERTURECTL</a>, <a class=\"id\" href=\"#ctl\">ctl</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_order\">aper_order</a> = (<a class=\"id\" href=\"#ctl\">ctl</a> >> 1) &amp; 7;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_size\">aper_size</a> = (32 * 1024 * 1024) << <a class=\"id\" href=\"#aper_order\">aper_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_base\">aper_base</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTUREBASE\">AMD64_GARTAPERTUREBASE</a>) &amp; 0x7fff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_base\">aper_base</a> <<= 25;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Node %d: aperture @ %Lx size %u MB\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#aper_base\">aper_base</a>, <a class=\"id\" href=\"#aper_size\">aper_size</a> >> 20);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#aperture_valid\">aperture_valid</a>(<a class=\"id\" href=\"#aper_base\">aper_base</a>, <a class=\"id\" href=\"#aper_size\">aper_size</a>, 64<<20)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valid_agp\">valid_agp</a> && <a class=\"id\" href=\"#agp_aper_base\">agp_aper_base</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#agp_aper_base\">agp_aper_base</a> == <a class=\"id\" href=\"#aper_base\">aper_base</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#agp_aper_order\">agp_aper_order</a> == <a class=\"id\" href=\"#aper_order\">aper_order</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the same between two setting from NB and agp */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#no_iommu\">no_iommu</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#max_pfn\">max_pfn</a> &gt; <a class=\"id\" href=\"#MAX_DMA32_PFN\">MAX_DMA32_PFN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#printed_gart_size_msg\">printed_gart_size_msg</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"you are using iommu with agp, but GART size is less than 64M\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"please increase GART size in your BIOS setup\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"if BIOS doesn't have that option, contact your HW vendor!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printed_gart_size_msg\">printed_gart_size_msg</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fix\">fix</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#last_aper_order\">last_aper_order</a> && <a class=\"id\" href=\"#aper_order\">aper_order</a> != <a class=\"id\" href=\"#last_aper_order\">last_aper_order</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#last_aper_base\">last_aper_base</a> && <a class=\"id\" href=\"#aper_base\">aper_base</a> != <a class=\"id\" href=\"#last_aper_base\">last_aper_base</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fix\">fix</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_aper_order\">last_aper_order</a> = <a class=\"id\" href=\"#aper_order\">aper_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_aper_base\">last_aper_base</a> = <a class=\"id\" href=\"#aper_base\">aper_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fix\">fix</a> && !<a class=\"id\" href=\"#fallback_aper_force\">fallback_aper_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_aper_base\">last_aper_base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#n\">n</a> = (32 * 1024 * 1024) << <a class=\"id\" href=\"#last_aper_order\">last_aper_order</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#insert_aperture_resource\">insert_aperture_resource</a>((<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#last_aper_base\">last_aper_base</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fallback_aper_force\">fallback_aper_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_alloc\">aper_alloc</a> = <a class=\"id\" href=\"#agp_aper_base\">agp_aper_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_order\">aper_order</a> = <a class=\"id\" href=\"#agp_aper_order\">agp_aper_order</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aper_alloc\">aper_alloc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Got the aperture from the AGP bridge */</span>", 
"<span class=\"ts\"/>} else if ((!<a class=\"id\" href=\"#no_iommu\">no_iommu</a> && <a class=\"id\" href=\"#max_pfn\">max_pfn</a> &gt; <a class=\"id\" href=\"#MAX_DMA32_PFN\">MAX_DMA32_PFN</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#force_iommu\">force_iommu</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#valid_agp\">valid_agp</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#fallback_aper_force\">fallback_aper_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Your BIOS doesn't leave a aperture memory hole\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Please enable the IOMMU option in the BIOS setup\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"This costs you %d MB of RAM\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>32 << <a class=\"id\" href=\"#fallback_aper_order\">fallback_aper_order</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_order\">aper_order</a> = <a class=\"id\" href=\"#fallback_aper_order\">fallback_aper_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aper_alloc\">aper_alloc</a> = <a class=\"id\" href=\"#allocate_aperture\">allocate_aperture</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#aper_alloc\">aper_alloc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Could disable AGP and IOMMU here, but it's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * probably not worth it. But the later users</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * cannot deal with bad apertures and turning</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * on the aperture over memory causes very</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * strange problems, so it's better to panic</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * early.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Not enough memory for aperture\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fix up the north bridges */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dev_base\">dev_base</a>, <a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_base\">dev_base</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_base\">dev_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_limit\">dev_limit</a> = <a class=\"id\" href=\"#bus_dev_ranges\">bus_dev_ranges</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dev_limit\">dev_limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#dev_base\">dev_base</a>; <a class=\"id\" href=\"#slot\">slot</a> &lt; <a class=\"id\" href=\"#dev_limit\">dev_limit</a>; <a class=\"id\" href=\"#slot\">slot</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#early_is_k8_nb\">early_is_k8_nb</a>(<a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, 0x00)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't enable translation yet. That is done later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   Assume this BIOS didn't initialise the GART so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   just overwrite all previous bits */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_pci_config\">write_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTURECTL\">AMD64_GARTAPERTURECTL</a>, <a class=\"id\" href=\"#aper_order\">aper_order</a> << 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_pci_config\">write_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, 3, <a class=\"id\" href=\"#AMD64_GARTAPERTUREBASE\">AMD64_GARTAPERTUREBASE</a>, <a class=\"id\" href=\"#aper_alloc\">aper_alloc</a> >> 25);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_up_gart_resume\">set_up_gart_resume</a>(<a class=\"id\" href=\"#aper_order\">aper_order</a>, <a class=\"id\" href=\"#aper_alloc\">aper_alloc</a>);", 
"}", 
];
xr_frag_insert('l/0f/8b34b732b55018fd8cf223afc7edcda8c38102.xr', __xr_tmp);
