var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Security plug functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 WireX Communications, Inc &lt;chris@wirex.com&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2001-2002 Greg Kroah-Hartman &lt;greg@kroah.com&gt;</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 Networks Associates Technology, Inc &lt;ssmalley@nai.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ima\">ima</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Boot-time LSM user choice */</span>", 
"static <a class=\"id\" href=\"#__initdata\">__initdata</a> char <a class=\"id\" href=\"#chosen_lsm\">chosen_lsm</a>[<a class=\"id\" href=\"#SECURITY_NAME_MAX\">SECURITY_NAME_MAX</a> + 1] =", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_DEFAULT_SECURITY\">CONFIG_DEFAULT_SECURITY</a>;", 
"", 
"<span class=\"comment\">/* things that live in capability.c */</span>", 
"extern void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#security_fixup_ops\">security_fixup_ops</a>(struct <a class=\"id\" href=\"#security_operations\">security_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"static struct <a class=\"id\" href=\"#security_operations\">security_operations</a> *<a class=\"id\" href=\"#security_ops\">security_ops</a>;", 
"static struct <a class=\"id\" href=\"#security_operations\">security_operations</a> <a class=\"id\" href=\"#default_security_ops\">default_security_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"default\",", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#verify\">verify</a>(struct <a class=\"id\" href=\"#security_operations\">security_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* verify the security_operations structure exists */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ops\">ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_fixup_ops\">security_fixup_ops</a>(<a class=\"id\" href=\"#ops\">ops</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#do_security_initcalls\">do_security_initcalls</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initcall_t\">initcall_t</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#__security_initcall_start\">__security_initcall_start</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#call\">call</a> &lt; <a class=\"id\" href=\"#__security_initcall_end\">__security_initcall_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#call\">call</a>) ();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_init - initializes the security framework</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This should be called early in the kernel initialization sequence.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#security_init\">security_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Security Framework initialized\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_fixup_ops\">security_fixup_ops</a>(&amp;<a class=\"id\" href=\"#default_security_ops\">default_security_ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_ops\">security_ops</a> = &amp;<a class=\"id\" href=\"#default_security_ops\">default_security_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_security_initcalls\">do_security_initcalls</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#reset_security_ops\">reset_security_ops</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_ops\">security_ops</a> = &amp;<a class=\"id\" href=\"#default_security_ops\">default_security_ops</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Save user chosen LSM */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#choose_lsm\">choose_lsm</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#chosen_lsm\">chosen_lsm</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#SECURITY_NAME_MAX\">SECURITY_NAME_MAX</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"security=\", <a class=\"id\" href=\"#choose_lsm\">choose_lsm</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * security_module_enable - Load given security module on boot ?</span>", 
"<span class=\"comment\"> * @ops: a pointer to the struct security_operations that is to be checked.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Each LSM must pass this method before registering its own operations</span>", 
"<span class=\"comment\"> * to avoid security registration races. This method may also be used</span>", 
"<span class=\"comment\"> * to check if your LSM is currently loaded during kernel initialization.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return true if:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-The passed LSM is the one chosen by user at boot time,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-or the passed LSM is configured as the default and the user did not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> choose an alternate LSM at boot time,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-or there is no default LSM set and the user didn't specify a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> specific LSM and we're the first to ask for registration permission,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>-or the passed LSM is currently loaded.</span>", 
"<span class=\"comment\"> * Otherwise, return false.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#security_module_enable\">security_module_enable</a>(struct <a class=\"id\" href=\"#security_operations\">security_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#chosen_lsm\">chosen_lsm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#chosen_lsm\">chosen_lsm</a>, <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#SECURITY_NAME_MAX\">SECURITY_NAME_MAX</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#chosen_lsm\">chosen_lsm</a>, <a class=\"id\" href=\"#SECURITY_NAME_MAX\">SECURITY_NAME_MAX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * register_security - registers a security framework with the kernel</span>", 
"<span class=\"comment\"> * @ops: a pointer to the struct security_options that is to be registered</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function allows a security module to register itself with the</span>", 
"<span class=\"comment\"> * kernel security subsystem.  Some rudimentary checking is done on the @ops</span>", 
"<span class=\"comment\"> * value passed to this function. You'll need to check first if your LSM</span>", 
"<span class=\"comment\"> * is allowed to register its @ops by calling security_module_enable(@ops).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If there is already a security module registered with the kernel,</span>", 
"<span class=\"comment\"> * an error will be returned.  Otherwise %0 is returned on success.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#register_security\">register_security</a>(struct <a class=\"id\" href=\"#security_operations\">security_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#verify\">verify</a>(<a class=\"id\" href=\"#ops\">ops</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s could not verify \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"security_operations structure.\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#security_ops\">security_ops</a> != &amp;<a class=\"id\" href=\"#default_security_ops\">default_security_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_ops\">security_ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Security operations */</span>", 
"", 
"int <a class=\"id\" href=\"#security_ptrace_access_check\">security_ptrace_access_check</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>, unsigned int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#ptrace_access_check\">ptrace_access_check</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_ptrace_traceme\">security_ptrace_traceme</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#ptrace_traceme\">ptrace_traceme</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_capget\">security_capget</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#target\">target</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#effective\">effective</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#inheritable\">inheritable</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#permitted\">permitted</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#capget\">capget</a>(<a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#effective\">effective</a>, <a class=\"id\" href=\"#inheritable\">inheritable</a>, <a class=\"id\" href=\"#permitted\">permitted</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_capset\">security_capset</a>(struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>, const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#old\">old</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#effective\">effective</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#inheritable\">inheritable</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#permitted\">permitted</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#capset\">capset</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#old\">old</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#effective\">effective</a>, <a class=\"id\" href=\"#inheritable\">inheritable</a>, <a class=\"id\" href=\"#permitted\">permitted</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_capable\">security_capable</a>(int <a class=\"id\" href=\"#cap\">cap</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#current_cred\">current_cred</a>(), <a class=\"id\" href=\"#cap\">cap</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#SECURITY_CAP_AUDIT\">SECURITY_CAP_AUDIT</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_real_capable\">security_real_capable</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, int <a class=\"id\" href=\"#cap\">cap</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#get_task_cred\">get_task_cred</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#cap\">cap</a>, <a class=\"id\" href=\"#SECURITY_CAP_AUDIT\">SECURITY_CAP_AUDIT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_real_capable_noaudit\">security_real_capable_noaudit</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, int <a class=\"id\" href=\"#cap\">cap</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#get_task_cred\">get_task_cred</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#cap\">cap</a>, <a class=\"id\" href=\"#SECURITY_CAP_NOAUDIT\">SECURITY_CAP_NOAUDIT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cred\">put_cred</a>(<a class=\"id\" href=\"#cred\">cred</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sysctl\">security_sysctl</a>(struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#table\">table</a>, int <a class=\"id\" href=\"#op\">op</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sysctl\">sysctl</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#op\">op</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_quotactl\">security_quotactl</a>(int <a class=\"id\" href=\"#cmds\">cmds</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#id\">id</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#quotactl\">quotactl</a>(<a class=\"id\" href=\"#cmds\">cmds</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_quota_on\">security_quota_on</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#quota_on\">quota_on</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_syslog\">security_syslog</a>(int <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#from_file\">from_file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#syslog\">syslog</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#from_file\">from_file</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_settime\">security_settime</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>, struct <a class=\"id\" href=\"#timezone\">timezone</a> *<a class=\"id\" href=\"#tz\">tz</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#settime\">settime</a>(<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#tz\">tz</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_vm_enough_memory\">security_vm_enough_memory</a>(long <a class=\"id\" href=\"#pages\">pages</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#vm_enough_memory\">vm_enough_memory</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pages\">pages</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_vm_enough_memory_mm\">security_vm_enough_memory_mm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, long <a class=\"id\" href=\"#pages\">pages</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#vm_enough_memory\">vm_enough_memory</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pages\">pages</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_vm_enough_memory_kern\">security_vm_enough_memory_kern</a>(long <a class=\"id\" href=\"#pages\">pages</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* If current-&gt;mm is a kernel thread then we will pass NULL,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   for this specific case that is fine */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#vm_enough_memory\">vm_enough_memory</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pages\">pages</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_bprm_set_creds\">security_bprm_set_creds</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#bprm_set_creds\">bprm_set_creds</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_bprm_check\">security_bprm_check</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#bprm_check_security\">bprm_check_security</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ima_bprm_check\">ima_bprm_check</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#security_bprm_committing_creds\">security_bprm_committing_creds</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#bprm_committing_creds\">bprm_committing_creds</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#security_bprm_committed_creds\">security_bprm_committed_creds</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#bprm_committed_creds\">bprm_committed_creds</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_bprm_secureexec\">security_bprm_secureexec</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#bprm_secureexec\">bprm_secureexec</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sb_alloc\">security_sb_alloc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_alloc_security\">sb_alloc_security</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#security_sb_free\">security_sb_free</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_free_security\">sb_free_security</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sb_copy_data\">security_sb_copy_data</a>(char *<a class=\"id\" href=\"#orig\">orig</a>, char *<a class=\"id\" href=\"#copy\">copy</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_copy_data\">sb_copy_data</a>(<a class=\"id\" href=\"#orig\">orig</a>, <a class=\"id\" href=\"#copy\">copy</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#security_sb_copy_data\">security_sb_copy_data</a>);", 
"", 
"int <a class=\"id\" href=\"#security_sb_kern_mount\">security_sb_kern_mount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#flags\">flags</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_kern_mount\">sb_kern_mount</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sb_show_options\">security_sb_show_options</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_show_options\">sb_show_options</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sb_statfs\">security_sb_statfs</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_statfs\">sb_statfs</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sb_mount\">security_sb_mount</a>(char *<a class=\"id\" href=\"#dev_name\">dev_name</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"                       char *<a class=\"id\" href=\"#type\">type</a>, unsigned long <a class=\"id\" href=\"#flags\">flags</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_mount\">sb_mount</a>(<a class=\"id\" href=\"#dev_name\">dev_name</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sb_umount\">security_sb_umount</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_umount\">sb_umount</a>(<a class=\"id\" href=\"#mnt\">mnt</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#security_sb_pivotroot\">security_sb_pivotroot</a>(struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#old_path\">old_path</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#new_path\">new_path</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#security_ops\">security_ops</a>-><a class=\"id\" href=\"#sb_pivotroot\">sb_pivotroot</a>(<a class=\"id\" href=\"#old_path\">old_path</a>, <a class=\"id\" href=\"#new_path\">new_path</a>);", 
];
xr_frag_insert('l/10/7280015c105fe20bb129157071c57c4447fa9c.xr', __xr_tmp);
