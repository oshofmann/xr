var __xr_tmp = [
"<span class=\"comment\">/***************************************************************************</span>", 
"<span class=\"comment\"> * Linux PPP over L2TP (PPPoL2TP) Socket Implementation (RFC 2661)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file supplies definitions required by the PPP over L2TP driver</span>", 
"<span class=\"comment\"> * (l2tp_ppp.c).  All version information wrt this file is located in l2tp_ppp.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * License:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_IF_PPPOL2TP_H\">__LINUX_IF_PPPOL2TP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_IF_PPPOL2TP_H\">__LINUX_IF_PPPOL2TP_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Structure used to connect() the socket to a particular tunnel UDP</span>", 
"<span class=\"comment\"> * socket.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#pppol2tp_addr\">pppol2tp_addr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_pid_t\">__kernel_pid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pid that owns the fd.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 0 =&gt; current */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#fd\">fd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FD of UDP socket to use */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> <a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"comment\">/* IP address and port to send to */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#s_tunnel\">s_tunnel</a>, <a class=\"id\" href=\"#s_session\">s_session</a>;<span class=\"ts\"/><span class=\"comment\">/* For matching incoming packets */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#d_tunnel\">d_tunnel</a>, <a class=\"id\" href=\"#d_session\">d_session</a>;<span class=\"ts\"/><span class=\"comment\">/* For sending outgoing packets */</span>", 
"};", 
"", 
"<span class=\"comment\">/* The L2TPv3 protocol changes tunnel and session ids from 16 to 32</span>", 
"<span class=\"comment\"> * bits. So we need a different sockaddr structure.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#pppol2tpv3_addr\">pppol2tpv3_addr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#pid\">pid</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pid that owns the fd.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 0 =&gt; current */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#fd\">fd</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* FD of UDP or IP socket to use */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> <a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"comment\">/* IP address and port to send to */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#s_tunnel\">s_tunnel</a>, <a class=\"id\" href=\"#s_session\">s_session</a>;<span class=\"ts\"/><span class=\"comment\">/* For matching incoming packets */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#d_tunnel\">d_tunnel</a>, <a class=\"id\" href=\"#d_session\">d_session</a>;<span class=\"ts\"/><span class=\"comment\">/* For sending outgoing packets */</span>", 
"};", 
"", 
"<span class=\"comment\">/* Socket options:</span>", 
"<span class=\"comment\"> * DEBUG<span class=\"ts\"/>- bitmask of debug message categories</span>", 
"<span class=\"comment\"> * SENDSEQ<span class=\"ts\"/>- 0 =&gt; don't send packets with sequence numbers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  1 =&gt; send packets with sequence numbers</span>", 
"<span class=\"comment\"> * RECVSEQ<span class=\"ts\"/>- 0 =&gt; receive packet sequence numbers are optional</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  1 =&gt; drop receive packets without sequence numbers</span>", 
"<span class=\"comment\"> * LNSMODE<span class=\"ts\"/>- 0 =&gt; act as LAC.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>  1 =&gt; act as LNS.</span>", 
"<span class=\"comment\"> * REORDERTO<span class=\"ts\"/>- reorder timeout (in millisecs). If 0, don't try to reorder.</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_SO_DEBUG\">PPPOL2TP_SO_DEBUG</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_SO_RECVSEQ\">PPPOL2TP_SO_RECVSEQ</a><span class=\"ts\"/>= 2,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_SO_SENDSEQ\">PPPOL2TP_SO_SENDSEQ</a><span class=\"ts\"/>= 3,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_SO_LNSMODE\">PPPOL2TP_SO_LNSMODE</a><span class=\"ts\"/>= 4,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_SO_REORDERTO\">PPPOL2TP_SO_REORDERTO</a><span class=\"ts\"/>= 5,", 
"};", 
"", 
"<span class=\"comment\">/* Debug message categories for the DEBUG socket option */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_MSG_DEBUG\">PPPOL2TP_MSG_DEBUG</a><span class=\"ts\"/>= (1 << 0),<span class=\"ts\"/><span class=\"comment\">/* verbose debug (if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * compiled in) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_MSG_CONTROL\">PPPOL2TP_MSG_CONTROL</a><span class=\"ts\"/>= (1 << 1),<span class=\"ts\"/><span class=\"comment\">/* userspace - kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * interface */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_MSG_SEQ\">PPPOL2TP_MSG_SEQ</a><span class=\"ts\"/>= (1 << 2),<span class=\"ts\"/><span class=\"comment\">/* sequence numbers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PPPOL2TP_MSG_DATA\">PPPOL2TP_MSG_DATA</a><span class=\"ts\"/>= (1 << 3),<span class=\"ts\"/><span class=\"comment\">/* data packets */</span>", 
"};", 
"", 
"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/10/8045d504a89835e15585cc488ff053ef8d627e.xr', __xr_tmp);
