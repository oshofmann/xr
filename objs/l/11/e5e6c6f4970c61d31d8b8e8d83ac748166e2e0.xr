var __xr_tmp = [
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No locking required, because the caller ensures we are in a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * critical section via mutex, and is_enabled() is false,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i.e. nothing can traverse or modify this list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Caller also ensures is_enabled() cannot change.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#trace\">trace</a>, &amp;<a class=\"id\" href=\"#trace_list\">trace_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_notice\">pr_notice</a>(\"purging non-iounmapped trace @0x%08lx, size 0x%lx.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#probe\">probe</a>.<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#probe\">probe</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#nommiotrace\">nommiotrace</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unregister_kmmio_probe\">unregister_kmmio_probe</a>(&amp;<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#probe\">probe</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>(); <span class=\"comment\">/* unregister_kmmio_probe() requirement */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#trace\">trace</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#trace_list\">trace_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#trace\">trace</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#trace\">trace</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"static <a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#downed_cpus\">downed_cpus</a>;", 
"", 
"static void <a class=\"id\" href=\"#enter_uniprocessor\">enter_uniprocessor</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#downed_cpus\">downed_cpus</a> == <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#downed_cpus\">downed_cpus</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_notice\">pr_notice</a>(\"Failed to allocate mask\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_online_cpus\">get_online_cpus</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#downed_cpus\">downed_cpus</a>, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_clear_cpu\">cpumask_clear_cpu</a>(<a class=\"id\" href=\"#cpumask_first\">cpumask_first</a>(<a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>), <a class=\"id\" href=\"#downed_cpus\">downed_cpus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_notice\">pr_notice</a>(\"Disabling non-boot CPUs...\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_online_cpus\">put_online_cpus</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#downed_cpus\">downed_cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cpu_down\">cpu_down</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"CPU%d is down.\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"Error taking CPU%d down: %d\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"multiple CPUs still online, may miss events.\\n\");", 
"}", 
"", 
"<span class=\"comment\">/* __ref because leave_uniprocessor calls cpu_up which is __cpuinit,</span>", 
"<span class=\"comment\">   but this whole function is ifdefed CONFIG_HOTPLUG_CPU */</span>", 
"static void <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#leave_uniprocessor\">leave_uniprocessor</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#downed_cpus\">downed_cpus</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#cpumask_weight\">cpumask_weight</a>(<a class=\"id\" href=\"#downed_cpus\">downed_cpus</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_notice\">pr_notice</a>(\"Re-enabling CPUs...\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#downed_cpus\">downed_cpus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#cpu_up\">cpu_up</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"enabled CPU%d.\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"cannot re-enable CPU%d: %d\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_HOTPLUG_CPU */</span>", 
"static void <a class=\"id\" href=\"#enter_uniprocessor\">enter_uniprocessor</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_online_cpus\">num_online_cpus</a>() &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"multiple CPUs are online, may miss events. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Suggest booting with maxcpus=1 kernel argument.\\n\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#leave_uniprocessor\">leave_uniprocessor</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#enable_mmiotrace\">enable_mmiotrace</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#mmiotrace_mutex\">mmiotrace_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_enabled\">is_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nommiotrace\">nommiotrace</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"MMIO tracing disabled.\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmmio_init\">kmmio_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enter_uniprocessor\">enter_uniprocessor</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#trace_lock\">trace_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#mmiotrace_enabled\">mmiotrace_enabled</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#trace_lock\">trace_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"enabled.\\n\");", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#mmiotrace_mutex\">mmiotrace_mutex</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#disable_mmiotrace\">disable_mmiotrace</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#mmiotrace_mutex\">mmiotrace_mutex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_enabled\">is_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#trace_lock\">trace_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#mmiotrace_enabled\">mmiotrace_enabled</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#is_enabled\">is_enabled</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#trace_lock\">trace_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_trace_list\">clear_trace_list</a>(); <span class=\"comment\">/* guarantees: no more kmmio callbacks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#leave_uniprocessor\">leave_uniprocessor</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmmio_cleanup\">kmmio_cleanup</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"disabled.\\n\");", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#mmiotrace_mutex\">mmiotrace_mutex</a>);", 
"}", 
];
xr_frag_insert('l/11/e5e6c6f4970c61d31d8b8e8d83ac748166e2e0.xr', __xr_tmp);
