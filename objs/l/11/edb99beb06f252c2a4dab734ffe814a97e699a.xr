var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/kernel/time/tick-oneshot.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains functions which manage high resolution tick</span>", 
"<span class=\"comment\"> * related events.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright(C) 2005-2006, Thomas Gleixner &lt;tglx@linutronix.de&gt;</span>", 
"<span class=\"comment\"> * Copyright(C) 2005-2007, Red Hat, Inc., Ingo Molnar</span>", 
"<span class=\"comment\"> * Copyright(C) 2006-2007, Timesys Corp., Thomas Gleixner</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This code is licenced under the GPL version 2. For details see</span>", 
"<span class=\"comment\"> * kernel-base/COPYING.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hrtimer\">hrtimer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#profile\">profile</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tick\">tick</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"tick-internal.h\"", 
"", 
"<span class=\"comment\">/* Limit min_delta to a jiffie */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_DELTA_LIMIT\">MIN_DELTA_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> / <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"static int <a class=\"id\" href=\"#tick_increase_min_delta\">tick_increase_min_delta</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Nothing to do if we already reached the limit */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> >= <a class=\"id\" href=\"#MIN_DELTA_LIMIT\">MIN_DELTA_LIMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIME\">ETIME</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> &lt; 5000)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> = 5000;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> += <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> >> 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> &gt; <a class=\"id\" href=\"#MIN_DELTA_LIMIT\">MIN_DELTA_LIMIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a> = <a class=\"id\" href=\"#MIN_DELTA_LIMIT\">MIN_DELTA_LIMIT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"CE: %s increased min_delta_ns to %llu nsec\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"?\",", 
"<span class=\"ts\"/>       (unsigned long long) <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tick_program_event internal worker function</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tick_dev_program_event\">tick_dev_program_event</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#expires\">expires</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#ktime_get\">ktime_get</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#clockevents_program_event\">clockevents_program_event</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#now\">now</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> || !<a class=\"id\" href=\"#force\">force</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#retries\">retries</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We tried 3 times to program the device with the given</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * min_delta_ns. If that's not working then we increase it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and emit a warning.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#i\">i</a> &gt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Increase the min. delta and try again */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tick_increase_min_delta\">tick_increase_min_delta</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Get out of the loop if min_delta_ns</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * hit the limit already. That's</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * better than staying here forever.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We clear next_event so we have a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * chance that the box survives.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"CE: Reprogramming failure. Giving up\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#next_event\">next_event</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = <a class=\"id\" href=\"#KTIME_MAX\">KTIME_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETIME\">ETIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#ktime_get\">ktime_get</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#ktime_add_ns\">ktime_add_ns</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#min_delta_ns\">min_delta_ns</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tick_program_event</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tick_program_event\">tick_program_event</a>(<a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#expires\">expires</a>, int <a class=\"id\" href=\"#force\">force</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tick_cpu_device\">tick_cpu_device</a>).<a class=\"id\" href=\"#evtdev\">evtdev</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tick_dev_program_event\">tick_dev_program_event</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#force\">force</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tick_resume_onshot - resume oneshot mode</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tick_resume_oneshot\">tick_resume_oneshot</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tick_device\">tick_device</a> *<a class=\"id\" href=\"#td\">td</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tick_cpu_device\">tick_cpu_device</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#td\">td</a>-><a class=\"id\" href=\"#evtdev\">evtdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_set_mode\">clockevents_set_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#CLOCK_EVT_MODE_ONESHOT\">CLOCK_EVT_MODE_ONESHOT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_program_event\">tick_program_event</a>(<a class=\"id\" href=\"#ktime_get\">ktime_get</a>(), 1);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tick_setup_oneshot - setup the event device for oneshot mode (hres or nohz)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tick_setup_oneshot\">tick_setup_oneshot</a>(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#newdev\">newdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void (*<a class=\"id\" href=\"#handler\">handler</a>)(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#next_event\">next_event</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newdev\">newdev</a>-><a class=\"id\" href=\"#event_handler\">event_handler</a> = <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_set_mode\">clockevents_set_mode</a>(<a class=\"id\" href=\"#newdev\">newdev</a>, <a class=\"id\" href=\"#CLOCK_EVT_MODE_ONESHOT\">CLOCK_EVT_MODE_ONESHOT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_dev_program_event\">tick_dev_program_event</a>(<a class=\"id\" href=\"#newdev\">newdev</a>, <a class=\"id\" href=\"#next_event\">next_event</a>, 1);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tick_switch_to_oneshot - switch to oneshot mode</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tick_switch_to_oneshot\">tick_switch_to_oneshot</a>(void (*<a class=\"id\" href=\"#handler\">handler</a>)(struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tick_device\">tick_device</a> *<a class=\"id\" href=\"#td\">td</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tick_cpu_device\">tick_cpu_device</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clock_event_device\">clock_event_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#td\">td</a>-><a class=\"id\" href=\"#evtdev\">evtdev</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a> || !(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#CLOCK_EVT_FEAT_ONESHOT\">CLOCK_EVT_FEAT_ONESHOT</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#tick_device_is_functional\">tick_device_is_functional</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Clockevents: \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"could not switch to one-shot mode:\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" no tick device\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tick_device_is_functional\">tick_device_is_functional</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" %s is not functional.\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\" %s does not support one-shot mode.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#td\">td</a>-><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#TICKDEV_MODE_ONESHOT\">TICKDEV_MODE_ONESHOT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#event_handler\">event_handler</a> = <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockevents_set_mode\">clockevents_set_mode</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#CLOCK_EVT_MODE_ONESHOT\">CLOCK_EVT_MODE_ONESHOT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_broadcast_switch_to_oneshot\">tick_broadcast_switch_to_oneshot</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tick_check_oneshot_mode - check whether the system is in oneshot mode</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * returns 1 when either nohz or highres are enabled. otherwise 0.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tick_oneshot_mode_active\">tick_oneshot_mode_active</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#tick_cpu_device\">tick_cpu_device</a>).<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#TICKDEV_MODE_ONESHOT\">TICKDEV_MODE_ONESHOT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGH_RES_TIMERS\">CONFIG_HIGH_RES_TIMERS</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tick_init_highres - switch to high resolution mode</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called with interrupts disabled.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tick_init_highres\">tick_init_highres</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tick_switch_to_oneshot\">tick_switch_to_oneshot</a>(<a class=\"id\" href=\"#hrtimer_interrupt\">hrtimer_interrupt</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/11/edb99beb06f252c2a4dab734ffe814a97e699a.xr', __xr_tmp);
