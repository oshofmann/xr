var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#etherdevice\">etherdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fddidevice\">fddidevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#trdevice\">trdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jhash\">jhash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ax25\">ax25</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netrom\">netrom</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ATM_CLIP\">CONFIG_ATM_CLIP</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ATM_CLIP_MODULE\">CONFIG_ATM_CLIP_MODULE</a>)", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#atmclip\">atmclip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> *<a class=\"id\" href=\"#clip_tbl_hook\">clip_tbl_hook</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#clip_tbl_hook\">clip_tbl_hook</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_arp\">netfilter_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Interface to generic neighbour cache.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arp_hash\">arp_hash</a>(const void *<a class=\"id\" href=\"#pkey\">pkey</a>, const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"static int <a class=\"id\" href=\"#arp_constructor\">arp_constructor</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"static void <a class=\"id\" href=\"#arp_solicit\">arp_solicit</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"static void <a class=\"id\" href=\"#arp_error_report\">arp_error_report</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"static void <a class=\"id\" href=\"#parp_redo\">parp_redo</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#neigh_ops\">neigh_ops</a> <a class=\"id\" href=\"#arp_generic_ops\">arp_generic_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET\">AF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#solicit\">solicit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_solicit\">arp_solicit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_report\">error_report</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_error_report\">arp_error_report</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#output\">output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_resolve_output\">neigh_resolve_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connected_output\">connected_output</a> =<span class=\"ts\"/><a class=\"id\" href=\"#neigh_connected_output\">neigh_connected_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hh_output\">hh_output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#neigh_ops\">neigh_ops</a> <a class=\"id\" href=\"#arp_hh_ops\">arp_hh_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET\">AF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#solicit\">solicit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_solicit\">arp_solicit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_report\">error_report</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_error_report\">arp_error_report</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#output\">output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_resolve_output\">neigh_resolve_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connected_output\">connected_output</a> =<span class=\"ts\"/><a class=\"id\" href=\"#neigh_resolve_output\">neigh_resolve_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hh_output\">hh_output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#neigh_ops\">neigh_ops</a> <a class=\"id\" href=\"#arp_direct_ops\">arp_direct_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET\">AF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#output\">output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connected_output\">connected_output</a> =<span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hh_output\">hh_output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"};", 
"", 
"const struct <a class=\"id\" href=\"#neigh_ops\">neigh_ops</a> <a class=\"id\" href=\"#arp_broken_ops\">arp_broken_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AF_INET\">AF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#solicit\">solicit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_solicit\">arp_solicit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#error_report\">error_report</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_error_report\">arp_error_report</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#output\">output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_compat_output\">neigh_compat_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connected_output\">connected_output</a> =<span class=\"ts\"/><a class=\"id\" href=\"#neigh_compat_output\">neigh_compat_output</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hh_output\">hh_output</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#queue_xmit\">queue_xmit</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arp_broken_ops\">arp_broken_ops</a>);", 
"", 
"struct <a class=\"id\" href=\"#neigh_table\">neigh_table</a> <a class=\"id\" href=\"#arp_tbl\">arp_tbl</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#family\">family</a> =<span class=\"ts\"/><a class=\"id\" href=\"#AF_INET\">AF_INET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#entry_size\">entry_size</a> =<span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#neighbour\">neighbour</a>) + 4,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#key_len\">key_len</a> =<span class=\"ts\"/>4,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hash\">hash</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_hash\">arp_hash</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#constructor\">constructor</a> =<span class=\"ts\"/><a class=\"id\" href=\"#arp_constructor\">arp_constructor</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_redo\">proxy_redo</a> =<span class=\"ts\"/><a class=\"id\" href=\"#parp_redo\">parp_redo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a> =<span class=\"ts\"/><span class=\"ts\"/>\"arp_cache\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#parms\">parms</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#tbl\">tbl</a> =<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#base_reachable_time\">base_reachable_time</a> =<span class=\"ts\"/>30 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#retrans_time\">retrans_time</a> =<span class=\"ts\"/>1 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#gc_staletime\">gc_staletime</a> =<span class=\"ts\"/>60 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#reachable_time\">reachable_time</a> =<span class=\"ts\"/><span class=\"ts\"/>30 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#delay_probe_time\">delay_probe_time</a> =<span class=\"ts\"/>5 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#queue_len\">queue_len</a> =<span class=\"ts\"/><span class=\"ts\"/>3,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ucast_probes\">ucast_probes</a> =<span class=\"ts\"/>3,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mcast_probes\">mcast_probes</a> =<span class=\"ts\"/>3,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#anycast_delay\">anycast_delay</a> =<span class=\"ts\"/>1 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_delay\">proxy_delay</a> =<span class=\"ts\"/><span class=\"ts\"/>(8 * <a class=\"id\" href=\"#HZ\">HZ</a>) / 10,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proxy_qlen\">proxy_qlen</a> =<span class=\"ts\"/><span class=\"ts\"/>64,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#locktime\">locktime</a> =<span class=\"ts\"/><span class=\"ts\"/>1 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_interval\">gc_interval</a> =<span class=\"ts\"/>30 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_thresh1\">gc_thresh1</a> =<span class=\"ts\"/>128,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_thresh2\">gc_thresh2</a> =<span class=\"ts\"/>512,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#gc_thresh3\">gc_thresh3</a> =<span class=\"ts\"/>1024,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>);", 
"", 
"int <a class=\"id\" href=\"#arp_mc_map\">arp_mc_map</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#haddr\">haddr</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#dir\">dir</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802\">ARPHRD_IEEE802</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_eth_mc_map\">ip_eth_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#haddr\">haddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_tr_mc_map\">ip_tr_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#haddr\">haddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_INFINIBAND\">ARPHRD_INFINIBAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_ib_mc_map\">ip_ib_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#haddr\">haddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#haddr\">haddr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#arp_hash\">arp_hash</a>(const void *<a class=\"id\" href=\"#pkey\">pkey</a>, const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jhash_2words\">jhash_2words</a>(*(<a class=\"id\" href=\"#u32\">u32</a> *)<a class=\"id\" href=\"#pkey\">pkey</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, <a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>.<a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_constructor\">arp_constructor</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a> = *(<a class=\"id\" href=\"#__be32\">__be32</a>*)<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neigh_parms\">neigh_parms</a> *<a class=\"id\" href=\"#parms\">parms</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parms\">parms</a> = <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#arp_parms\">arp_parms</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__neigh_parms_put\">__neigh_parms_put</a>(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a> = <a class=\"id\" href=\"#neigh_parms_clone\">neigh_parms_clone</a>(<a class=\"id\" href=\"#parms\">parms</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#header_ops\">header_ops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#arp_direct_ops\">arp_direct_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#queue_xmit\">queue_xmit</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Good devices (checked by reading texts, but only Ethernet is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   tested)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   ARPHRD_ETHER: (ethernet, apfddi)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   ARPHRD_FDDI: (fddi)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   ARPHRD_IEEE802: (tr)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   ARPHRD_METRICOM: (strip)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   ARPHRD_ARCNET:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   etc. etc. etc.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   ARPHRD_IPDDP will also work, if author repairs it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   I did not it, because this driver does not work even</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   in old paradigm.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"#if 1", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* So... these \"amateur\" devices are hopeless.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   The only thing, that I can say now:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   It is very sad that we need to keep ugly obsolete</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   code to make them happy.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   They should be moved to more reasonable state, now</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   they use rebuild_header INSTEAD OF hard_start_xmit!!!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   Besides that, they are sort of out of date</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   (a lot of redundant clones/copies, useless in 2.1),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   I wonder why people believe that they work.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_ROSE\">ARPHRD_ROSE</a>:", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25\">CONFIG_AX25</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25_MODULE\">CONFIG_AX25_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_AX25\">ARPHRD_AX25</a>:", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETROM\">CONFIG_NETROM</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETROM_MODULE\">CONFIG_NETROM_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_NETROM\">ARPHRD_NETROM</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#arp_broken_ops\">arp_broken_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#output\">output</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>;}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_mc_map\">arp_mc_map</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;(<a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a>|<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a> || <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a> = <a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#header_ops\">header_ops</a>-><a class=\"id\" href=\"#cache\">cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#arp_hh_ops\">arp_hh_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#arp_generic_ops\">arp_generic_ops</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>&amp;<a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#connected_output\">connected_output</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#output\">output</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#output\">output</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#arp_error_report\">arp_error_report</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_link_failure\">dst_link_failure</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#arp_solicit\">arp_solicit</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#saddr\">saddr</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a>  *<a class=\"id\" href=\"#dst_ha\">dst_ha</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#target\">target</a> = *(<a class=\"id\" href=\"#__be32\">__be32</a>*)<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#probes\">probes</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#probes\">probes</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_dev\">in_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#IN_DEV_ARP_ANNOUNCE\">IN_DEV_ARP_ANNOUNCE</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) {", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/>case 0:<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* By default announce any local IP */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> && <a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>) == <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Restrict announcements of saddr in same subnet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#ip_hdr\">ip_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#saddr\">saddr</a>) == <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* saddr should be known to target */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_addr_onlink\">inet_addr_onlink</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#saddr\">saddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Avoid secondary IPs, get a primary/preferred one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#saddr\">saddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#inet_select_addr\">inet_select_addr</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#probes\">probes</a> -= <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#ucast_probes\">ucast_probes</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>&amp;<a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"trying to ucast probe in NUD_INVALID\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_ha\">dst_ha</a> = <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#probes\">probes</a> -= <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#app_probes\">app_probes</a>) &lt; 0) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARPD\">CONFIG_ARPD</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_app_ns\">neigh_app_ns</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_send\">arp_send</a>(<a class=\"id\" href=\"#ARPOP_REQUEST\">ARPOP_REQUEST</a>, <a class=\"id\" href=\"#ETH_P_ARP\">ETH_P_ARP</a>, <a class=\"id\" href=\"#target\">target</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dst_ha\">dst_ha</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst_ha\">dst_ha</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_ignore\">arp_ignore</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#tip\">tip</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scope\">scope</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#IN_DEV_ARP_IGNORE\">IN_DEV_ARP_IGNORE</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) {", 
"<span class=\"ts\"/>case 0:<span class=\"ts\"/><span class=\"comment\">/* Reply, the tip is already validated */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case 1:<span class=\"ts\"/><span class=\"comment\">/* Reply only if tip is configured on the incoming interface */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sip\">sip</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 2:<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Reply only if tip is configured on the incoming interface</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and is in same subnet as sip</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#RT_SCOPE_HOST\">RT_SCOPE_HOST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 3:<span class=\"ts\"/><span class=\"comment\">/* Do not reply for scope host addresses */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sip\">sip</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 4:<span class=\"ts\"/><span class=\"comment\">/* Reserved */</span>", 
"<span class=\"ts\"/>case 5:", 
"<span class=\"ts\"/>case 6:", 
"<span class=\"ts\"/>case 7:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case 8:<span class=\"ts\"/><span class=\"comment\">/* Do not reply */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#inet_confirm_addr\">inet_confirm_addr</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#tip\">tip</a>, <a class=\"id\" href=\"#scope\">scope</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_filter\">arp_filter</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#tip\">tip</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> = { .<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#sip\">sip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> .<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#tip\">tip</a> } } };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flag\">flag</a> = 0;", 
"<span class=\"ts\"/><span class=\"comment\">/*unsigned long now; */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_route_output_key\">ip_route_output_key</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#LINUX_MIB_ARPFILTER\">LINUX_MIB_ARPFILTER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flag\">flag</a>;", 
"}", 
"", 
"<span class=\"comment\">/* OBSOLETE FUNCTIONS */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Find an arp mapping in the cache. If not found, post a request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It is very UGLY routine: it DOES NOT use skb-&gt;dst-&gt;neighbour,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>even if it exists. It is supposed that skb-&gt;dev was mangled</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>by a virtual device (eql, shaper). Nobody but broken devices</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is allowed to use this function, it is scheduled to be removed. --ANK</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#arp_set_predefined\">arp_set_predefined</a>(int <a class=\"id\" href=\"#addr_hint\">addr_hint</a>, unsigned char * <a class=\"id\" href=\"#haddr\">haddr</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#paddr\">paddr</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> * <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#addr_hint\">addr_hint</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ARP: arp called for own IP address\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#haddr\">haddr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_mc_map\">arp_mc_map</a>(<a class=\"id\" href=\"#paddr\">paddr</a>, <a class=\"id\" href=\"#haddr\">haddr</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#haddr\">haddr</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#arp_find\">arp_find</a>(unsigned char *<a class=\"id\" href=\"#haddr\">haddr</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#paddr\">paddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_dst\">skb_dst</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"arp_find is called with dst==NULL\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paddr\">paddr</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#rt_gateway\">rt_gateway</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arp_set_predefined\">arp_set_predefined</a>(<a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#paddr\">paddr</a>), <a class=\"id\" href=\"#haddr\">haddr</a>, <a class=\"id\" href=\"#paddr\">paddr</a>, <a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__neigh_lookup\">__neigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#paddr\">paddr</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#used\">used</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>&amp;<a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a> || <a class=\"id\" href=\"#neigh_event_send\">neigh_event_send</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#skb\">skb</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#haddr\">haddr</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arp_find\">arp_find</a>);", 
"", 
"<span class=\"comment\">/* END OF OBSOLETE FUNCTIONS */</span>", 
"", 
"int <a class=\"id\" href=\"#arp_bind_neighbour\">arp_bind_neighbour</a>(struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#nexthop\">nexthop</a> = ((struct <a class=\"id\" href=\"#rtable\">rtable</a> *)<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#rt_gateway\">rt_gateway</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;(<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>|<a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nexthop\">nexthop</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__neigh_lookup_errno\">__neigh_lookup_errno</a>(", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ATM_CLIP\">CONFIG_ATM_CLIP</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ATM_CLIP_MODULE\">CONFIG_ATM_CLIP_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_ATM\">ARPHRD_ATM</a> ? <a class=\"id\" href=\"#clip_tbl_hook\">clip_tbl_hook</a> :", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#nexthop\">nexthop</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#neighbour\">neighbour</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check if we can use proxy ARP for this path</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#arp_fwd_proxy\">arp_fwd_proxy</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#out_dev\">out_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#imi\">imi</a>, <a class=\"id\" href=\"#omi\">omi</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IN_DEV_PROXY_ARP\">IN_DEV_PROXY_ARP</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#imi\">imi</a> = <a class=\"id\" href=\"#IN_DEV_MEDIUM_ID\">IN_DEV_MEDIUM_ID</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#imi\">imi</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* place to check for proxy_arp for routes */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#out_dev\">out_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#out_dev\">out_dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#omi\">omi</a> = <a class=\"id\" href=\"#IN_DEV_MEDIUM_ID\">IN_DEV_MEDIUM_ID</a>(<a class=\"id\" href=\"#out_dev\">out_dev</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#omi\">omi</a> != <a class=\"id\" href=\"#imi\">imi</a> && <a class=\"id\" href=\"#omi\">omi</a> != -1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check for RFC3069 proxy arp private VLAN (allow to send back to same dev)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RFC3069 supports proxy arp replies back to the same interface.  This</span>", 
"<span class=\"comment\"> * is done to support (ethernet) switch features, like RFC 3069, where</span>", 
"<span class=\"comment\"> * the individual ports are not allowed to communicate with each</span>", 
"<span class=\"comment\"> * other, BUT they are allowed to talk to the upstream router.  As</span>", 
"<span class=\"comment\"> * described in RFC 3069, it is possible to allow these hosts to</span>", 
"<span class=\"comment\"> * communicate through the upstream router, by proxy_arp'ing.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RFC 3069: \"VLAN Aggregation for Efficient IP Address Allocation\"</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This technology is known by different names:</span>", 
"<span class=\"comment\"> *    In RFC 3069 it is called VLAN Aggregation.</span>", 
"<span class=\"comment\"> *    Cisco and Allied Telesyn call it Private VLAN.</span>", 
"<span class=\"comment\"> *    Hewlett-Packard call it Source-Port filtering or port-isolation.</span>", 
"<span class=\"comment\"> *    Ericsson call it MAC-Forced Forwarding (RFC Draft).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#arp_fwd_pvlan\">arp_fwd_pvlan</a>(struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#tip\">tip</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Private VLAN is only concerned about the same ethernet segment */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't reply on self probes (often done by windowz boxes)*/</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sip\">sip</a> == <a class=\"id\" href=\"#tip\">tip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IN_DEV_PROXY_ARP_PVLAN\">IN_DEV_PROXY_ARP_PVLAN</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Interface to link layer: send routine and receive handler.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Create an arp packet. If (dest_hw == NULL), we create a broadcast</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>message.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#arp_create\">arp_create</a>(int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#ptype\">ptype</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dest_ip\">dest_ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#src_ip\">src_ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const unsigned char *<a class=\"id\" href=\"#dest_hw\">dest_hw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const unsigned char *<a class=\"id\" href=\"#src_hw\">src_hw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const unsigned char *<a class=\"id\" href=\"#target_hw\">target_hw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arphdr\">arphdr</a> *<a class=\"id\" href=\"#arp\">arp</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Allocate a buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(<a class=\"id\" href=\"#arp_hdr_len\">arp_hdr_len</a>(<a class=\"id\" href=\"#dev\">dev</a>) + <a class=\"id\" href=\"#LL_ALLOCATED_SPACE\">LL_ALLOCATED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#LL_RESERVED_SPACE\">LL_RESERVED_SPACE</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_reset_network_header\">skb_reset_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a> = (struct <a class=\"id\" href=\"#arphdr\">arphdr</a> *) <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#arp_hdr_len\">arp_hdr_len</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_ARP\">ETH_P_ARP</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#src_hw\">src_hw</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src_hw\">src_hw</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_hw\">dest_hw</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_hw\">dest_hw</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Fill the device header for the ARP frame</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_hard_header\">dev_hard_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ptype\">ptype</a>, <a class=\"id\" href=\"#dest_hw\">dest_hw</a>, <a class=\"id\" href=\"#src_hw\">src_hw</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fill out the arp protocol part.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The arp hardware type should match the device type, except for FDDI,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which (according to RFC 1390) should always equal 1 (Ethernet).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Exceptions everywhere. AX.25 uses the AX.25 PID value not the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>DIX code for the protocol. Make these device structure fields.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25\">CONFIG_AX25</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25_MODULE\">CONFIG_AX25_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_AX25\">ARPHRD_AX25</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_AX25\">ARPHRD_AX25</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#AX25_P_IP\">AX25_P_IP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETROM\">CONFIG_NETROM</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NETROM_MODULE\">CONFIG_NETROM_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_NETROM\">ARPHRD_NETROM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_NETROM\">ARPHRD_NETROM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#AX25_P_IP\">AX25_P_IP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_FDDI\">CONFIG_FDDI</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_FDDI_MODULE\">CONFIG_FDDI_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_TR\">CONFIG_TR</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_TR_MODULE\">CONFIG_TR_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_IEEE802\">ARPHRD_IEEE802</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hln\">ar_hln</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pln\">ar_pln</a> = 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>=(unsigned char *)(<a class=\"id\" href=\"#arp\">arp</a>+1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>, <a class=\"id\" href=\"#src_hw\">src_hw</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a> += <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>, &amp;<a class=\"id\" href=\"#src_ip\">src_ip</a>, 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a> += 4;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target_hw\">target_hw</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>, <a class=\"id\" href=\"#target_hw\">target_hw</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>, 0, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a> += <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>, &amp;<a class=\"id\" href=\"#dest_ip\">dest_ip</a>, 4);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arp_create\">arp_create</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Send an arp packet.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#arp_xmit\">arp_xmit</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Send it off, maybe filter it using firewalling first.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_ARP\">NFPROTO_ARP</a>, <a class=\"id\" href=\"#NF_ARP_OUT\">NF_ARP_OUT</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#dev_queue_xmit\">dev_queue_xmit</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arp_xmit\">arp_xmit</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Create and send an arp packet.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#arp_send\">arp_send</a>(int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#ptype\">ptype</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dest_ip\">dest_ip</a>,", 
"<span class=\"ts\"/>      struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#src_ip\">src_ip</a>,", 
"<span class=\"ts\"/>      const unsigned char *<a class=\"id\" href=\"#dest_hw\">dest_hw</a>, const unsigned char *<a class=\"id\" href=\"#src_hw\">src_hw</a>,", 
"<span class=\"ts\"/>      const unsigned char *<a class=\"id\" href=\"#target_hw\">target_hw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>No arp on this interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#arp_create\">arp_create</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#ptype\">ptype</a>, <a class=\"id\" href=\"#dest_ip\">dest_ip</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#src_ip\">src_ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dest_hw\">dest_hw</a>, <a class=\"id\" href=\"#src_hw\">src_hw</a>, <a class=\"id\" href=\"#target_hw\">target_hw</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_xmit\">arp_xmit</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#arp_send\">arp_send</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Process an arp request.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#arp_process\">arp_process</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_device\">in_device</a> *<a class=\"id\" href=\"#in_dev\">in_dev</a> = <a class=\"id\" href=\"#__in_dev_get_rcu\">__in_dev_get_rcu</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arphdr\">arphdr</a> *<a class=\"id\" href=\"#arp\">arp</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#sha\">sha</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#tip\">tip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#dev_type\">dev_type</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* arp_rcv below verifies the ARP header and verifies the device</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is ARP'able.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_dev\">in_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a> = <a class=\"id\" href=\"#arp_hdr\">arp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev_type\">dev_type</a>) {", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#dev_type\">dev_type</a>) != <a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802\">ARPHRD_IEEE802</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ETHERNET, Token Ring and Fibre Channel (which are IEEE 802</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * devices, according to RFC 2625) devices will accept ARP</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hardware types of either 1 (Ethernet) or 6 (IEEE 802.2).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This is the case also of FDDI, where the RFC 1390 says that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * FDDI devices should accept ARP hardware of (1) Ethernet,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * however, to be more robust, we'll accept both 1 (Ethernet)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or 6 (IEEE 802.2)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_IEEE802\">ARPHRD_IEEE802</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ETH_P_IP\">ETH_P_IP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_AX25\">ARPHRD_AX25</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#AX25_P_IP\">AX25_P_IP</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_AX25\">ARPHRD_AX25</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_NETROM\">ARPHRD_NETROM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pro\">ar_pro</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#AX25_P_IP\">AX25_P_IP</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hrd\">ar_hrd</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPHRD_NETROM\">ARPHRD_NETROM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Understand only these message types */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPOP_REPLY\">ARPOP_REPLY</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPOP_REQUEST\">ARPOP_REQUEST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Extract fields</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>= (unsigned char *)(<a class=\"id\" href=\"#arp\">arp</a>+1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sha\">sha</a><span class=\"ts\"/>= <a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a> += <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>, 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a> += 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_ptr\">arp_ptr</a> += <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#tip\">tip</a>, <a class=\"id\" href=\"#arp_ptr\">arp_ptr</a>, 4);", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Check for bad requests for 127.x.x.x and requests for multicast</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>addresses.  If this is one such, delete it.</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv4_is_loopback\">ipv4_is_loopback</a>(<a class=\"id\" href=\"#tip\">tip</a>) || <a class=\"id\" href=\"#ipv4_is_multicast\">ipv4_is_multicast</a>(<a class=\"id\" href=\"#tip\">tip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *     Special case: We must set Frame Relay source Q.922 address</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_type\">dev_type</a> == <a class=\"id\" href=\"#ARPHRD_DLCI\">ARPHRD_DLCI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sha\">sha</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#broadcast\">broadcast</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Process entry.  The idea here is we want to send a reply if it is a</span>", 
"<span class=\"comment\"> *  request for us or if it is a request for someone else that we hold</span>", 
"<span class=\"comment\"> *  a proxy for.  We want to add an entry to our cache if it is a reply</span>", 
"<span class=\"comment\"> *  to us or if it is a request for our address.</span>", 
"<span class=\"comment\"> *  (The assumption for this last is that if someone is requesting our</span>", 
"<span class=\"comment\"> *  address, they are probably intending to talk to us, so it saves time</span>", 
"<span class=\"comment\"> *  if we cache their address.  Their address is also probably not in</span>", 
"<span class=\"comment\"> *  our cache, since ours is not in their cache.)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Putting this another way, we only care about replies if they are to</span>", 
"<span class=\"comment\"> *  us, in which case we add them to the cache.  For requests, we care</span>", 
"<span class=\"comment\"> *  about those for us and those for our proxies.  We reply to both,</span>", 
"<span class=\"comment\"> *  and in the case of requests for us we add the requester to the arp</span>", 
"<span class=\"comment\"> *  cache.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Special case: IPv4 duplicate address detection packet (RFC2131) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sip\">sip</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPOP_REQUEST\">ARPOP_REQUEST</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#tip\">tip</a>) == <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#arp_ignore\">arp_ignore</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#tip\">tip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_send\">arp_send</a>(<a class=\"id\" href=\"#ARPOP_REPLY\">ARPOP_REPLY</a>, <a class=\"id\" href=\"#ETH_P_ARP\">ETH_P_ARP</a>, <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#tip\">tip</a>, <a class=\"id\" href=\"#sha\">sha</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, <a class=\"id\" href=\"#sha\">sha</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPOP_REQUEST\">ARPOP_REQUEST</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ip_route_input_noref\">ip_route_input_noref</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#tip\">tip</a>, <a class=\"id\" href=\"#sip\">sip</a>, 0, <a class=\"id\" href=\"#dev\">dev</a>) == 0) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#skb_rtable\">skb_rtable</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt_type\">rt_type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dont_send\">dont_send</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dont_send\">dont_send</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_send\">dont_send</a> |= <a class=\"id\" href=\"#arp_ignore\">arp_ignore</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>,<a class=\"id\" href=\"#sip\">sip</a>,<a class=\"id\" href=\"#tip\">tip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dont_send\">dont_send</a> && <a class=\"id\" href=\"#IN_DEV_ARPFILTER\">IN_DEV_ARPFILTER</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_send\">dont_send</a> |= <a class=\"id\" href=\"#arp_filter\">arp_filter</a>(<a class=\"id\" href=\"#sip\">sip</a>,<a class=\"id\" href=\"#tip\">tip</a>,<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dont_send\">dont_send</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#neigh_event_ns\">neigh_event_ns</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#sha\">sha</a>, &amp;<a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_send\">arp_send</a>(<a class=\"id\" href=\"#ARPOP_REPLY\">ARPOP_REPLY</a>,<a class=\"id\" href=\"#ETH_P_ARP\">ETH_P_ARP</a>,<a class=\"id\" href=\"#sip\">sip</a>,<a class=\"id\" href=\"#dev\">dev</a>,<a class=\"id\" href=\"#tip\">tip</a>,<a class=\"id\" href=\"#sha\">sha</a>,<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>,<a class=\"id\" href=\"#sha\">sha</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#IN_DEV_FORWARD\">IN_DEV_FORWARD</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#RTN_UNICAST\">RTN_UNICAST</a>  &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#arp_fwd_proxy\">arp_fwd_proxy</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#rt\">rt</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#arp_fwd_pvlan\">arp_fwd_pvlan</a>(<a class=\"id\" href=\"#in_dev\">in_dev</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#tip\">tip</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#pneigh_lookup\">pneigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#tip\">tip</a>, <a class=\"id\" href=\"#dev\">dev</a>, 0)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#neigh_event_ns\">neigh_event_ns</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#sha\">sha</a>, &amp;<a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#NEIGH_CB\">NEIGH_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#LOCALLY_ENQUEUED\">LOCALLY_ENQUEUED</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> == <a class=\"id\" href=\"#PACKET_HOST\">PACKET_HOST</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#arp_parms\">arp_parms</a>-><a class=\"id\" href=\"#proxy_delay\">proxy_delay</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_send\">arp_send</a>(<a class=\"id\" href=\"#ARPOP_REPLY\">ARPOP_REPLY</a>,<a class=\"id\" href=\"#ETH_P_ARP\">ETH_P_ARP</a>,<a class=\"id\" href=\"#sip\">sip</a>,<a class=\"id\" href=\"#dev\">dev</a>,<a class=\"id\" href=\"#tip\">tip</a>,<a class=\"id\" href=\"#sha\">sha</a>,<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>,<a class=\"id\" href=\"#sha\">sha</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pneigh_enqueue\">pneigh_enqueue</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#in_dev\">in_dev</a>-><a class=\"id\" href=\"#arp_parms\">arp_parms</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update our ARP tables */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__neigh_lookup\">__neigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#dev\">dev</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#ARP_ACCEPT\">ARP_ACCEPT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unsolicited ARP is not accepted by default.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   It is possible, that this option should be enabled for some</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   devices (strip is candidate)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> == <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPOP_REPLY\">ARPOP_REPLY</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> == <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPOP_REQUEST\">ARPOP_REQUEST</a>) && <a class=\"id\" href=\"#tip\">tip</a> == <a class=\"id\" href=\"#sip\">sip</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sip\">sip</a>) == <a class=\"id\" href=\"#RTN_UNICAST\">RTN_UNICAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#__neigh_lookup\">__neigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#sip\">sip</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#NUD_REACHABLE\">NUD_REACHABLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#override\">override</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If several different ARP replies follows back-to-back,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   use the FIRST one. It is possible, if several proxy</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   agents are active. Taking the first reply prevents</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   arp trashing and chooses the fastest router.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#override\">override</a> = <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#updated\">updated</a> + <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#parms\">parms</a>-><a class=\"id\" href=\"#locktime\">locktime</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Broadcast replies and request packets</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   do not assert neighbour reachability.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_op\">ar_op</a> != <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#ARPOP_REPLY\">ARPOP_REPLY</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> != <a class=\"id\" href=\"#PACKET_HOST\">PACKET_HOST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#NUD_STALE\">NUD_STALE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_update\">neigh_update</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#sha\">sha</a>, <a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#override\">override</a> ? <a class=\"id\" href=\"#NEIGH_UPDATE_F_OVERRIDE\">NEIGH_UPDATE_F_OVERRIDE</a> : 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#consume_skb\">consume_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#parp_redo\">parp_redo</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_process\">arp_process</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Receive an arp request from the device layer.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#arp_rcv\">arp_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#pt\">pt</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#orig_dev\">orig_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arphdr\">arphdr</a> *<a class=\"id\" href=\"#arp\">arp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ARP header, plus 2 device addresses, plus 2 IP addresses.  */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#arp_hdr_len\">arp_hdr_len</a>(<a class=\"id\" href=\"#dev\">dev</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#freeskb\">freeskb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp\">arp</a> = <a class=\"id\" href=\"#arp_hdr\">arp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_hln\">ar_hln</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> == <a class=\"id\" href=\"#PACKET_OTHERHOST\">PACKET_OTHERHOST</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> == <a class=\"id\" href=\"#PACKET_LOOPBACK\">PACKET_LOOPBACK</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#arp\">arp</a>-><a class=\"id\" href=\"#ar_pln\">ar_pln</a> != 4)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#freeskb\">freeskb</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_share_check\">skb_share_check</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_of_mem\">out_of_mem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#NEIGH_CB\">NEIGH_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>), 0, sizeof(struct <a class=\"id\" href=\"#neighbour_cb\">neighbour_cb</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NF_HOOK\">NF_HOOK</a>(<a class=\"id\" href=\"#NFPROTO_ARP\">NFPROTO_ARP</a>, <a class=\"id\" href=\"#NF_ARP_IN\">NF_ARP_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#arp_process\">arp_process</a>);", 
"", 
"<a class=\"id\" href=\"#freeskb\">freeskb</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<a class=\"id\" href=\"#out_of_mem\">out_of_mem</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>User level interface (ioctl)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set (create) an ARP cache entry.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#arp_req_set_proxy\">arp_req_set_proxy</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#on\">on</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IPV4_DEVCONF_ALL\">IPV4_DEVCONF_ALL</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#PROXY_ARP\">PROXY_ARP</a>) = <a class=\"id\" href=\"#on\">on</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IN_DEV_CONF_SET\">IN_DEV_CONF_SET</a>(<a class=\"id\" href=\"#__in_dev_get_rtnl\">__in_dev_get_rtnl</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#PROXY_ARP\">PROXY_ARP</a>, <a class=\"id\" href=\"#on\">on</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_req_set_public\">arp_req_set_public</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#arpreq\">arpreq</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#ip\">ip</a> = ((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_pa\">arp_pa</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#mask\">mask</a> = ((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_netmask\">arp_netmask</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> && <a class=\"id\" href=\"#mask\">mask</a> != <a class=\"id\" href=\"#htonl\">htonl</a>(0xFFFFFFFF))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a> && (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_COM\">ATF_COM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_getbyhwaddr\">dev_getbyhwaddr</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pneigh_lookup\">pneigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#arp_req_set_proxy\">arp_req_set_proxy</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_req_set\">arp_req_set</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#arpreq\">arpreq</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> * <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#ip\">ip</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_PUBL\">ATF_PUBL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#arp_req_set_public\">arp_req_set_public</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a> = ((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_pa\">arp_pa</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_PERM\">ATF_PERM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a> |= <a class=\"id\" href=\"#ATF_COM\">ATF_COM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> = { .<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#ip\">ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> .<a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#RTO_ONLINK\">RTO_ONLINK</a> } } };", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> * <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_route_output_key\">ip_route_output_key</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_FDDI\">CONFIG_FDDI</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_FDDI_MODULE\">CONFIG_FDDI_MODULE</a>)", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * According to RFC 1390, FDDI devices should accept ARP</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hardware types of 1 (Ethernet).  However, to be more</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * robust, we'll accept hardware types of either 1 (Ethernet)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or 6 (IEEE 802.2).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#ARPHRD_IEEE802\">ARPHRD_IEEE802</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a> = <a class=\"id\" href=\"#__neigh_lookup_errno\">__neigh_lookup_errno</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#neigh\">neigh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#NUD_STALE\">NUD_STALE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_PERM\">ATF_PERM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#NUD_PERMANENT\">NUD_PERMANENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#neigh_update\">neigh_update</a>(<a class=\"id\" href=\"#neigh\">neigh</a>, (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a>&amp;<a class=\"id\" href=\"#ATF_COM\">ATF_COM</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#state\">state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NEIGH_UPDATE_F_OVERRIDE\">NEIGH_UPDATE_F_OVERRIDE</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NEIGH_UPDATE_F_ADMIN\">NEIGH_UPDATE_F_ADMIN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#arp_state_to_flags\">arp_state_to_flags</a>(struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>&amp;<a class=\"id\" href=\"#NUD_PERMANENT\">NUD_PERMANENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ATF_PERM\">ATF_PERM</a>|<a class=\"id\" href=\"#ATF_COM\">ATF_COM</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>&amp;<a class=\"id\" href=\"#NUD_VALID\">NUD_VALID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ATF_COM\">ATF_COM</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Get an ARP cache entry.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#arp_req_get\">arp_req_get</a>(struct <a class=\"id\" href=\"#arpreq\">arpreq</a> *<a class=\"id\" href=\"#r\">r</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#ip\">ip</a> = ((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *) &amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_pa\">arp_pa</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a> = <a class=\"id\" href=\"#neigh_lookup\">neigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_data\">sa_data</a>, <a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a> = <a class=\"id\" href=\"#arp_state_to_flags\">arp_state_to_flags</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_dev\">arp_dev</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, sizeof(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_dev\">arp_dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_req_delete_public\">arp_req_delete_public</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#arpreq\">arpreq</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#ip\">ip</a> = ((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *) &amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_pa\">arp_pa</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#mask\">mask</a> = ((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_netmask\">arp_netmask</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> == <a class=\"id\" href=\"#htonl\">htonl</a>(0xFFFFFFFF))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pneigh_delete\">pneigh_delete</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#arp_req_set_proxy\">arp_req_set_proxy</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_req_delete\">arp_req_delete</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#arpreq\">arpreq</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> * <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#ip\">ip</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#neigh\">neigh</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_PUBL\">ATF_PUBL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#arp_req_delete_public\">arp_req_delete_public</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a> = ((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#arp_pa\">arp_pa</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a> = { .<a class=\"id\" href=\"#nl_u\">nl_u</a> = { .<a class=\"id\" href=\"#ip4_u\">ip4_u</a> = { .<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#ip\">ip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> .<a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#RTO_ONLINK\">RTO_ONLINK</a> } } };", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rtable\">rtable</a> * <a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip_route_output_key\">ip_route_output_key</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#rt\">rt</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_rt_put\">ip_rt_put</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh\">neigh</a> = <a class=\"id\" href=\"#neigh_lookup\">neigh_lookup</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, &amp;<a class=\"id\" href=\"#ip\">ip</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#neigh\">neigh</a>-><a class=\"id\" href=\"#nud_state\">nud_state</a>&amp;~<a class=\"id\" href=\"#NUD_NOARP\">NUD_NOARP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#neigh_update\">neigh_update</a>(<a class=\"id\" href=\"#neigh\">neigh</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NUD_FAILED\">NUD_FAILED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NEIGH_UPDATE_F_OVERRIDE\">NEIGH_UPDATE_F_OVERRIDE</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NEIGH_UPDATE_F_ADMIN\">NEIGH_UPDATE_F_ADMIN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_release\">neigh_release</a>(<a class=\"id\" href=\"#neigh\">neigh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Handle an ARP layer I/O control request.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#arp_ioctl\">arp_ioctl</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#arpreq\">arpreq</a> <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCDARP\">SIOCDARP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSARP\">SIOCSARP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGARP\">SIOCGARP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(struct <a class=\"id\" href=\"#arpreq\">arpreq</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_pa\">arp_pa</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#AF_INET\">AF_INET</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPFNOSUPPORT\">EPFNOSUPPORT</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_PUBL\">ATF_PUBL</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; (<a class=\"id\" href=\"#ATF_NETMASK\">ATF_NETMASK</a>|<a class=\"id\" href=\"#ATF_DONTPUB\">ATF_DONTPUB</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_NETMASK\">ATF_NETMASK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>((struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)&amp;<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_netmask\">arp_netmask</a>)-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#htonl\">htonl</a>(0xFFFFFFFFUL);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_dev\">arp_dev</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_dev\">arp_dev</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Mmmm... It is wrong... ARPHRD_NETROM==0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_flags\">arp_flags</a> &amp; <a class=\"id\" href=\"#ATF_COM\">ATF_COM</a>) && <a class=\"id\" href=\"#r\">r</a>.<a class=\"id\" href=\"#arp_ha\">arp_ha</a>.<a class=\"id\" href=\"#sa_family\">sa_family</a> != <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#SIOCGARP\">SIOCGARP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCDARP\">SIOCDARP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#arp_req_delete\">arp_req_delete</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCSARP\">SIOCSARP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#arp_req_set\">arp_req_set</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SIOCGARP\">SIOCGARP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#arp_req_get\">arp_req_get</a>(&amp;<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#r\">r</a>, sizeof(<a class=\"id\" href=\"#r\">r</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_netdev_event\">arp_netdev_event</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#this\">this</a>, unsigned long <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#event\">event</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NETDEV_CHANGEADDR\">NETDEV_CHANGEADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#neigh_changeaddr\">neigh_changeaddr</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_cache_flush\">rt_cache_flush</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_DONE\">NOTIFY_DONE</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#arp_netdev_notifier\">arp_netdev_notifier</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#arp_netdev_event\">arp_netdev_event</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Note, that it is not on notifier chain.</span>", 
"<span class=\"comment\">   It is necessary, that this routine was called after route cache will be</span>", 
"<span class=\"comment\">   flushed.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#arp_ifdown\">arp_ifdown</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_ifdown\">neigh_ifdown</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called once on startup.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static struct <a class=\"id\" href=\"#packet_type\">packet_type</a> <a class=\"id\" href=\"#arp_packet_type\">arp_packet_type</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#type\">type</a> =<span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(<a class=\"id\" href=\"#ETH_P_ARP\">ETH_P_ARP</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#func\">func</a> =<span class=\"ts\"/><a class=\"id\" href=\"#arp_rcv\">arp_rcv</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#arp_proc_init\">arp_proc_init</a>(void);", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#arp_init\">arp_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_table_init\">neigh_table_init</a>(&amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_add_pack\">dev_add_pack</a>(&amp;<a class=\"id\" href=\"#arp_packet_type\">arp_packet_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arp_proc_init\">arp_proc_init</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#neigh_sysctl_register\">neigh_sysctl_register</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>.<a class=\"id\" href=\"#parms\">parms</a>, \"ipv4\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_netdevice_notifier\">register_netdevice_notifier</a>(&amp;<a class=\"id\" href=\"#arp_netdev_notifier\">arp_netdev_notifier</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25\">CONFIG_AX25</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25_MODULE\">CONFIG_AX25_MODULE</a>)", 
"", 
"<span class=\"comment\">/* ------------------------------------------------------------------------ */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ax25 -&gt; ASCII conversion</span>", 
"<span class=\"comment\"> */</span>", 
"static char *<a class=\"id\" href=\"#ax2asc2\">ax2asc2</a>(<a class=\"id\" href=\"#ax25_address\">ax25_address</a> *<a class=\"id\" href=\"#a\">a</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#c\">c</a>, *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0, <a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#buf\">buf</a>; <a class=\"id\" href=\"#n\">n</a> &lt; 6; <a class=\"id\" href=\"#n\">n</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#ax25_call\">ax25_call</a>[<a class=\"id\" href=\"#n\">n</a>] >> 1) &amp; 0x7F;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> != ' ') *<a class=\"id\" href=\"#s\">s</a>++ = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a>++ = '-';", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#n\">n</a> = ((<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#ax25_call\">ax25_call</a>[6] >> 1) &amp; 0x0F)) &gt; 9) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a>++ = '1';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> -= 10;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a>++ = <a class=\"id\" href=\"#n\">n</a> + '0';", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#s\">s</a>++ = '\\0';", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#buf\">buf</a> == '\\0' || *<a class=\"id\" href=\"#buf\">buf</a> == '-')", 
"<span class=\"ts\"/>   return \"*\";", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_AX25 */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HBUFFERLEN\">HBUFFERLEN</a> 30", 
"", 
"static void <a class=\"id\" href=\"#arp_format_neigh_entry\">arp_format_neigh_entry</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#neighbour\">neighbour</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#hbuffer\">hbuffer</a>[<a class=\"id\" href=\"#HBUFFERLEN\">HBUFFERLEN</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tbuf\">tbuf</a>[16];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hatype\">hatype</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert hardware address to XX:XX:XX:XX ... form. */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25\">CONFIG_AX25</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25_MODULE\">CONFIG_AX25_MODULE</a>)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hatype\">hatype</a> == <a class=\"id\" href=\"#ARPHRD_AX25\">ARPHRD_AX25</a> || <a class=\"id\" href=\"#hatype\">hatype</a> == <a class=\"id\" href=\"#ARPHRD_NETROM\">ARPHRD_NETROM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ax2asc2\">ax2asc2</a>((<a class=\"id\" href=\"#ax25_address\">ax25_address</a> *)<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ha\">ha</a>, <a class=\"id\" href=\"#hbuffer\">hbuffer</a>);", 
"<span class=\"ts\"/>else {", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0, <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#HBUFFERLEN\">HBUFFERLEN</a> - 3 && <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hbuffer\">hbuffer</a>[<a class=\"id\" href=\"#k\">k</a>++] = <a class=\"id\" href=\"#hex_asc_hi\">hex_asc_hi</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ha\">ha</a>[<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hbuffer\">hbuffer</a>[<a class=\"id\" href=\"#k\">k</a>++] = <a class=\"id\" href=\"#hex_asc_lo\">hex_asc_lo</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ha\">ha</a>[<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hbuffer\">hbuffer</a>[<a class=\"id\" href=\"#k\">k</a>++] = ':';", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hbuffer\">hbuffer</a>[<a class=\"id\" href=\"#k\">k</a>] = 0;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25\">CONFIG_AX25</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_AX25_MODULE\">CONFIG_AX25_MODULE</a>)", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#tbuf\">tbuf</a>, \"%pI4\", <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#primary_key\">primary_key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%-16s 0x%-10x0x%-10x%s     *        %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tbuf\">tbuf</a>, <a class=\"id\" href=\"#hatype\">hatype</a>, <a class=\"id\" href=\"#arp_state_to_flags\">arp_state_to_flags</a>(<a class=\"id\" href=\"#n\">n</a>), <a class=\"id\" href=\"#hbuffer\">hbuffer</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#arp_format_pneigh_entry\">arp_format_pneigh_entry</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pneigh_entry\">pneigh_entry</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hatype\">hatype</a> = <a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> : 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tbuf\">tbuf</a>[16];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#tbuf\">tbuf</a>, \"%pI4\", <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%-16s 0x%-10x0x%-10x%s     *        %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tbuf\">tbuf</a>, <a class=\"id\" href=\"#hatype\">hatype</a>, <a class=\"id\" href=\"#ATF_PUBL\">ATF_PUBL</a> | <a class=\"id\" href=\"#ATF_PERM\">ATF_PERM</a>, \"00:00:00:00:00:00\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dev\">dev</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"*\");", 
"}", 
"", 
"static int <a class=\"id\" href=\"#arp_seq_show\">arp_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"IP address       HW type     Flags       \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"HW address            Mask     Device\\n\");", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#neigh_seq_state\">neigh_seq_state</a> *<a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#NEIGH_SEQ_IS_PNEIGH\">NEIGH_SEQ_IS_PNEIGH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_format_pneigh_entry\">arp_format_pneigh_entry</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arp_format_neigh_entry\">arp_format_neigh_entry</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#arp_seq_start\">arp_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't want to confuse \"arp -a\" w/ magic entries,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we tell the generic iterator to skip NUD_NOARP.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#neigh_seq_start\">neigh_seq_start</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#arp_tbl\">arp_tbl</a>, <a class=\"id\" href=\"#NEIGH_SEQ_SKIP_NOARP\">NEIGH_SEQ_SKIP_NOARP</a>);", 
"}", 
"", 
"<span class=\"comment\">/* ------------------------------------------------------------------------ */</span>", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#arp_seq_ops\">arp_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a>  = <a class=\"id\" href=\"#arp_seq_start\">arp_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>   = <a class=\"id\" href=\"#neigh_seq_next\">neigh_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>   = <a class=\"id\" href=\"#neigh_seq_stop\">neigh_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#arp_seq_show\">arp_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#arp_seq_open\">arp_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#arp_seq_ops\">arp_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#neigh_seq_state\">neigh_seq_state</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#arp_seq_fops\">arp_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>           = <a class=\"id\" href=\"#arp_seq_open\">arp_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>           = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>         = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#arp_net_init\">arp_net_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"arp\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#arp_seq_fops\">arp_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#arp_net_exit\">arp_net_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"arp\");", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#arp_net_ops\">arp_net_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#arp_net_init\">arp_net_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#arp_net_exit\">arp_net_exit</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#arp_proc_init\">arp_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#arp_net_ops\">arp_net_ops</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#arp_proc_init\">arp_proc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
];
xr_frag_insert('l/11/f10e7c6234ea5135d880d2e5e3f8b20ccaae9d.xr', __xr_tmp);
