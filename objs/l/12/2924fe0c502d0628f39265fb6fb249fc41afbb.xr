var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/ext3/super.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  from</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  linux/fs/minix/inode.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Big-endian to little-endian byte-swapping/bitmaps by</span>", 
"<span class=\"comment\"> *        David S. Miller (davem@caip.rutgers.edu), 1995</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd\">jbd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext3_fs\">ext3_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext3_jbd\">ext3_jbd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#exportfs\">exportfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vfs\">vfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#namei\">namei</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"xattr.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acl.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"namei.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_DEFAULTS_TO_ORDERED\">CONFIG_EXT3_DEFAULTS_TO_ORDERED</a>", 
"  #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_MOUNT_DEFAULT_DATA_MODE\">EXT3_MOUNT_DEFAULT_DATA_MODE</a> <a class=\"id\" href=\"#EXT3_MOUNT_ORDERED_DATA\">EXT3_MOUNT_ORDERED_DATA</a>", 
"#else", 
"  #<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT3_MOUNT_DEFAULT_DATA_MODE\">EXT3_MOUNT_DEFAULT_DATA_MODE</a> <a class=\"id\" href=\"#EXT3_MOUNT_WRITEBACK_DATA\">EXT3_MOUNT_WRITEBACK_DATA</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ext3_load_journal\">ext3_load_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>);", 
"static int <a class=\"id\" href=\"#ext3_create_journal\">ext3_create_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int);", 
"static int <a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#sync\">sync</a>);", 
"static void <a class=\"id\" href=\"#ext3_mark_recovery_complete\">ext3_mark_recovery_complete</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#es\">es</a>);", 
"static void <a class=\"id\" href=\"#ext3_clear_journal_err\">ext3_clear_journal_err</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#es\">es</a>);", 
"static int <a class=\"id\" href=\"#ext3_sync_fs\">ext3_sync_fs</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#wait\">wait</a>);", 
"static const char *<a class=\"id\" href=\"#ext3_decode_error\">ext3_decode_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#errno\">errno</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16]);", 
"static int <a class=\"id\" href=\"#ext3_remount\">ext3_remount</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, int * <a class=\"id\" href=\"#flags\">flags</a>, char * <a class=\"id\" href=\"#data\">data</a>);", 
"static int <a class=\"id\" href=\"#ext3_statfs\">ext3_statfs</a> (struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstatfs\">kstatfs</a> * <a class=\"id\" href=\"#buf\">buf</a>);", 
"static int <a class=\"id\" href=\"#ext3_unfreeze\">ext3_unfreeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"static int <a class=\"id\" href=\"#ext3_freeze\">ext3_freeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wrappers for journal_start/end.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The only special thing we need to do here is to make sure that all</span>", 
"<span class=\"comment\"> * journal_end calls result in the superblock being marked dirty, so</span>", 
"<span class=\"comment\"> * that sync() will call the filesystem's write_super callback if</span>", 
"<span class=\"comment\"> * appropriate.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#ext3_journal_start_sb\">ext3_journal_start_sb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EROFS\">EROFS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Special case here: if the journal has aborted behind our</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * backs (eg. EIO in the commit thread), then we still need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * take the FS itself readonly cleanly. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_journal_aborted\">is_journal_aborted</a>(<a class=\"id\" href=\"#journal\">journal</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_abort\">ext3_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Detected aborted journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EROFS\">EROFS</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal_start\">journal_start</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The only special thing we need to do here is to make sure that all</span>", 
"<span class=\"comment\"> * journal_stop calls result in the superblock being marked dirty, so</span>", 
"<span class=\"comment\"> * that sync() will call the filesystem's write_super callback if</span>", 
"<span class=\"comment\"> * appropriate.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__ext3_journal_stop\">__ext3_journal_stop</a>(const char *<a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_transaction\">h_transaction</a>-><a class=\"id\" href=\"#t_journal\">t_journal</a>-><a class=\"id\" href=\"#j_private\">j_private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_err\">h_err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#journal_stop\">journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ext3_std_error\">__ext3_std_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#where\">where</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext3_journal_abort_handle\">ext3_journal_abort_handle</a>(const char *<a class=\"id\" href=\"#caller\">caller</a>, const char *<a class=\"id\" href=\"#err_fn\">err_fn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#ext3_decode_error\">ext3_decode_error</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#nbuf\">nbuf</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"abort\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_err\">h_err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_err\">h_err</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_handle_aborted\">is_handle_aborted</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"EXT3-fs: %s: aborting transaction: %s in %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#caller\">caller</a>, <a class=\"id\" href=\"#errstr\">errstr</a>, <a class=\"id\" href=\"#err_fn\">err_fn</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_abort_handle\">journal_abort_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, const char *<a class=\"id\" href=\"#prefix\">prefix</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%sEXT3-fs (%s): \", <a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Deal with the reporting of failure conditions on a filesystem such as</span>", 
"<span class=\"comment\"> * inconsistencies detected or read IO failures.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * On ext2, we can store the error state of the filesystem in the</span>", 
"<span class=\"comment\"> * superblock.  That is not possible on ext3, because we may have other</span>", 
"<span class=\"comment\"> * write ordering constraints on the superblock which prevent us from</span>", 
"<span class=\"comment\"> * writing it out straight away; and given that the journal is about to</span>", 
"<span class=\"comment\"> * be aborted, we can't rely on the current, or future, transactions to</span>", 
"<span class=\"comment\"> * write out the superblock safely.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We'll just use the journal_abort() error code to record an error in</span>", 
"<span class=\"comment\"> * the journal instead.  On recovery, the journal will complain about</span>", 
"<span class=\"comment\"> * that error until we've noted it down and cleared it.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#ext3_handle_error\">ext3_handle_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> |= <a class=\"id\" href=\"#EXT3_ERROR_FS\">EXT3_ERROR_FS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> |= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT3_ERROR_FS\">EXT3_ERROR_FS</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ABORT\">ABORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_abort\">journal_abort</a>(<a class=\"id\" href=\"#journal\">journal</a>, -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: remounting filesystem read-only\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"EXT3-fs (%s): panic forced after error\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext3_error\">ext3_error</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, const char * <a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const char * <a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"EXT3-fs error (device %s): %s: \",<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_handle_error\">ext3_handle_error</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"static const char *<a class=\"id\" href=\"#ext3_decode_error\">ext3_decode_error</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#errno\">errno</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16])", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#errno\">errno</a>) {", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EIO\">EIO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"IO failure\";", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"Out of memory\";", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EROFS\">EROFS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a> || <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JFS_ABORT\">JFS_ABORT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"Journal has aborted\";", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = \"Readonly filesystem\";", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the caller passed in an extra buffer for unknown</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * errors, textualise them now.  Else we just return</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * NULL. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nbuf\">nbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for truncated error codes... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#nbuf\">nbuf</a>, 16, \"error %d\", -<a class=\"id\" href=\"#errno\">errno</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#nbuf\">nbuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#errstr\">errstr</a>;", 
"}", 
"", 
"<span class=\"comment\">/* __ext3_std_error decodes expected errors from journaling functions</span>", 
"<span class=\"comment\"> * automatically and invokes the appropriate error response.  */</span>", 
"", 
"void <a class=\"id\" href=\"#__ext3_std_error\">__ext3_std_error</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, const char * <a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#errno\">errno</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#errstr\">errstr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Special case: if the error is EROFS, and we're not already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inside a transaction, then there's really no point in logging</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * an error. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#errno\">errno</a> == -<a class=\"id\" href=\"#EROFS\">EROFS</a> && <a class=\"id\" href=\"#journal_current_handle\">journal_current_handle</a>() == <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#ext3_decode_error\">ext3_decode_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#errno\">errno</a>, <a class=\"id\" href=\"#nbuf\">nbuf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>, \"error in %s: %s\", <a class=\"id\" href=\"#function\">function</a>, <a class=\"id\" href=\"#errstr\">errstr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_handle_error\">ext3_handle_error</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_abort is a much stronger failure handler than ext3_error.  The</span>", 
"<span class=\"comment\"> * abort function may be used to deal with unrecoverable failures such</span>", 
"<span class=\"comment\"> * as journal IO errors or ENOMEM at a critical moment in log management.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We unconditionally force the filesystem into an ABORT|READONLY state,</span>", 
"<span class=\"comment\"> * unless the error response on the fs has been set to panic in which</span>", 
"<span class=\"comment\"> * case we take the easy way out and panic immediately.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ext3_abort\">ext3_abort</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, const char * <a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const char * <a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"EXT3-fs (%s): error: %s: \", <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"EXT3-fs: panic from previous error\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"error: remounting filesystem read-only\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> |= <a class=\"id\" href=\"#EXT3_ERROR_FS\">EXT3_ERROR_FS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ABORT\">ABORT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_abort\">journal_abort</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>, -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext3_warning\">ext3_warning</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, const char * <a class=\"id\" href=\"#function\">function</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const char * <a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"EXT3-fs (%s): warning: %s: \",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#function\">function</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vprintk\">vprintk</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ext3_update_dynamic_rev\">ext3_update_dynamic_rev</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) &gt; <a class=\"id\" href=\"#EXT3_GOOD_OLD_REV\">EXT3_GOOD_OLD_REV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>\"warning: updating to rev %d because of \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"new feature flag, running e2fsck is recommended\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_DYNAMIC_REV\">EXT3_DYNAMIC_REV</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT3_GOOD_OLD_FIRST_INO\">EXT3_GOOD_OLD_FIRST_INO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT3_GOOD_OLD_INODE_SIZE\">EXT3_GOOD_OLD_INODE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT3_DYNAMIC_REV\">EXT3_DYNAMIC_REV</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* leave es-&gt;s_feature_*compat flags alone */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* es-&gt;s_uuid will be set by e2fsck if empty */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The rest of the superblock fields should be zero, and if not it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * means they are likely already in use, so leave them alone.  We</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can leave it up to e2fsck to clean up any inconsistencies there.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Open the external journal device</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#ext3_blkdev_get\">ext3_blkdev_get</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#open_by_devnum\">open_by_devnum</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>|<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#bdev\">bdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"error: failed to open journal device %s: %ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__bdevname\">__bdevname</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#b\">b</a>), <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#bdev\">bdev</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Release the journal device</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext3_blkdev_put\">ext3_blkdev_put</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_release\">bd_release</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>|<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_blkdev_remove\">ext3_blkdev_remove</a>(struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdev\">bdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext3_blkdev_put\">ext3_blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#orphan_list_entry\">orphan_list_entry</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#l\">l</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#l\">l</a>, struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a>, <a class=\"id\" href=\"#i_orphan\">i_orphan</a>)-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dump_orphan_list\">dump_orphan_list</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: sb orphan head is %d\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"sb_info orphan list:\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#l\">l</a>, &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#orphan_list_entry\">orphan_list_entry</a>(<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"  \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"inode %s:%lu at %p: mode %o, nlink %d, next %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#NEXT_ORPHAN\">NEXT_ORPHAN</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext3_put_super\">ext3_put_super</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1, <a class=\"id\" href=\"#DQUOT_USAGE_ENABLED\">DQUOT_USAGE_ENABLED</a> | <a class=\"id\" href=\"#DQUOT_LIMITS_ENABLED\">DQUOT_LIMITS_ENABLED</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_put_super\">ext3_xattr_put_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_destroy\">journal_destroy</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_abort\">ext3_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, \"Couldn't clean up the journal\");", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_CLEAR_INCOMPAT_FEATURE\">EXT3_CLEAR_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>, \"marking dirty\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Debugging code just in case the in-memory inode orphan list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * isn't empty.  The on-disk one can be non-empty if we've</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * detected an error and taken the fs readonly, but the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in-memory list had better be clean by this point. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_orphan_list\">dump_orphan_list</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#invalidate_bdev\">invalidate_bdev</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> != <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Invalidate the journal device's buffers.  We don't want them</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * floating about in memory - the physical journal device may</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hotswapped, and it breaks the `ro-after' testing code.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_blockdev\">sync_blockdev</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invalidate_bdev\">invalidate_bdev</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_blkdev_remove\">ext3_blkdev_remove</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#ext3_inode_cachep\">ext3_inode_cachep</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called inside transaction, so use GFP_NOFS</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext3_alloc_inode\">ext3_alloc_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#ext3_inode_cachep\">ext3_inode_cachep</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ei\">ei</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_block_alloc_info\">i_block_alloc_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>.<a class=\"id\" href=\"#i_version\">i_version</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_datasync_tid\">i_datasync_tid</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_sync_tid\">i_sync_tid</a>, 0);", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext3_destroy_inode\">ext3_destroy_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;(<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_orphan\">i_orphan</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"EXT3 Inode %p: orphan list check failed!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_hex_dump\">print_hex_dump</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"\", <a class=\"id\" href=\"#DUMP_PREFIX_ADDRESS\">DUMP_PREFIX_ADDRESS</a>, 16, 4,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>), sizeof(struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dump_stack\">dump_stack</a>();", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#ext3_inode_cachep\">ext3_inode_cachep</a>, <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_once\">init_once</a>(void *<a class=\"id\" href=\"#foo\">foo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a> *<a class=\"id\" href=\"#ei\">ei</a> = (struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a> *) <a class=\"id\" href=\"#foo\">foo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#i_orphan\">i_orphan</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_XATTR\">CONFIG_EXT3_FS_XATTR</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#truncate_mutex\">truncate_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_init_once\">inode_init_once</a>(&amp;<a class=\"id\" href=\"#ei\">ei</a>-><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#init_inodecache\">init_inodecache</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_inode_cachep\">ext3_inode_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"ext3_inode_cache\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#ext3_inode_info\">ext3_inode_info</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     0, (<a class=\"id\" href=\"#SLAB_RECLAIM_ACCOUNT\">SLAB_RECLAIM_ACCOUNT</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SLAB_MEM_SPREAD\">SLAB_MEM_SPREAD</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#init_once\">init_once</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_inode_cachep\">ext3_inode_cachep</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#ext3_inode_cachep\">ext3_inode_cachep</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext3_show_quota_options\">ext3_show_quota_options</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#fmtname\">fmtname</a> = \"\";", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#QFMT_VFS_OLD\">QFMT_VFS_OLD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fmtname\">fmtname</a> = \"vfsold\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#QFMT_VFS_V0\">QFMT_VFS_V0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fmtname\">fmtname</a> = \"vfsv0\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#QFMT_VFS_V1\">QFMT_VFS_V1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fmtname\">fmtname</a> = \"vfsv1\";", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",jqfmt=%s\", <a class=\"id\" href=\"#fmtname\">fmtname</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",usrjquota=%s\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpjquota=%s\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",usrquota\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpquota\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static char *<a class=\"id\" href=\"#data_mode_string\">data_mode_string</a>(unsigned long <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EXT3_MOUNT_JOURNAL_DATA\">EXT3_MOUNT_JOURNAL_DATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"journal\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EXT3_MOUNT_ORDERED_DATA\">EXT3_MOUNT_ORDERED_DATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"ordered\";", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EXT3_MOUNT_WRITEBACK_DATA\">EXT3_MOUNT_WRITEBACK_DATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"writeback\";", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return \"unknown\";", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Show an option if</span>", 
"<span class=\"comment\"> *  - it's set to a non-default value OR</span>", 
"<span class=\"comment\"> *  - if the per-sb default is different from the global default</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext3_show_options\">ext3_show_options</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#vfs\">vfs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#vfs\">vfs</a>-><a class=\"id\" href=\"#mnt_sb\">mnt_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_default_mount_opts\">s_default_mount_opts</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",sb=%lu\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",minixdf\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",grpid\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>) && (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_BSDGROUPS\">EXT3_DEFM_BSDGROUPS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nogrpid\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> != <a class=\"id\" href=\"#EXT3_DEF_RESUID\">EXT3_DEF_RESUID</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resuid\">s_def_resuid</a>) != <a class=\"id\" href=\"#EXT3_DEF_RESUID\">EXT3_DEF_RESUID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",resuid=%u\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> != <a class=\"id\" href=\"#EXT3_DEF_RESGID\">EXT3_DEF_RESGID</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resgid\">s_def_resgid</a>) != <a class=\"id\" href=\"#EXT3_DEF_RESGID\">EXT3_DEF_RESGID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",resgid=%u\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#def_errors\">def_errors</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#def_errors\">def_errors</a> == <a class=\"id\" href=\"#EXT3_ERRORS_PANIC\">EXT3_ERRORS_PANIC</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#def_errors\">def_errors</a> == <a class=\"id\" href=\"#EXT3_ERRORS_CONTINUE\">EXT3_ERRORS_CONTINUE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=remount-ro\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=continue\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",errors=panic\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nouid32\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",debug\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",oldalloc\");", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_XATTR\">CONFIG_EXT3_FS_XATTR</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",user_xattr\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_XATTR_USER\">EXT3_DEFM_XATTR_USER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",nouser_xattr\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_POSIX_ACL\">CONFIG_EXT3_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",acl\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) && (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_ACL\">EXT3_DEFM_ACL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",noacl\");", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",noreservation\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",commit=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (unsigned) (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> / <a class=\"id\" href=\"#HZ\">HZ</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Always display barrier state so it's clear what the status is.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",barrier=\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>) ? \"1\" : \"0\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",data=%s\", <a class=\"id\" href=\"#data_mode_string\">data_mode_string</a>(<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>)));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",data_err=abort\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_puts\">seq_puts</a>(<a class=\"id\" href=\"#seq\">seq</a>, \",norecovery\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_show_quota_options\">ext3_show_quota_options</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext3_nfs_get_inode\">ext3_nfs_get_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ino\">ino</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#generation\">generation</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &lt; <a class=\"id\" href=\"#EXT3_FIRST_INO\">EXT3_FIRST_INO</a>(<a class=\"id\" href=\"#sb\">sb</a>) && <a class=\"id\" href=\"#ino\">ino</a> != <a class=\"id\" href=\"#EXT3_ROOT_INO\">EXT3_ROOT_INO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ino\">ino</a> &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* iget isn't really right if the inode is currently unallocated!!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext3_read_inode will return a bad_inode if the inode had been</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * deleted, so we should be safe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Currently we don't know the generation for parent directory, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a generation of 0 means \"accept any\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext3_iget\">ext3_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ino\">ino</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_CAST\">ERR_CAST</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#generation\">generation</a> && <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_generation\">i_generation</a> != <a class=\"id\" href=\"#generation\">generation</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext3_fh_to_dentry\">ext3_fh_to_dentry</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#fid\">fid</a> *<a class=\"id\" href=\"#fid\">fid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fh_len\">fh_len</a>, int <a class=\"id\" href=\"#fh_type\">fh_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_fh_to_dentry\">generic_fh_to_dentry</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#fh_len\">fh_len</a>, <a class=\"id\" href=\"#fh_type\">fh_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext3_nfs_get_inode\">ext3_nfs_get_inode</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext3_fh_to_parent\">ext3_fh_to_parent</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#fid\">fid</a> *<a class=\"id\" href=\"#fid\">fid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#fh_len\">fh_len</a>, int <a class=\"id\" href=\"#fh_type\">fh_type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#generic_fh_to_parent\">generic_fh_to_parent</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#fh_len\">fh_len</a>, <a class=\"id\" href=\"#fh_type\">fh_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext3_nfs_get_inode\">ext3_nfs_get_inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to release metadata pages (indirect blocks, directories) which are</span>", 
"<span class=\"comment\"> * mapped via the block device.  Since these pages could have journal heads</span>", 
"<span class=\"comment\"> * which would prevent try_to_free_buffers() from freeing them, we must use</span>", 
"<span class=\"comment\"> * jbd layer's try_to_free_buffers() function to release them.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#PageChecked\">PageChecked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#journal_try_to_free_buffers\">journal_try_to_free_buffers</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#page\">page</a>, ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#wait\">wait</a> &amp; ~<a class=\"id\" href=\"#__GFP_WAIT\">__GFP_WAIT</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#try_to_free_buffers\">try_to_free_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTYPE2NAME\">QTYPE2NAME</a>(<a class=\"id\" href=\"#t\">t</a>) ((<a class=\"id\" href=\"#t\">t</a>)==<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>?\"user\":\"group\")", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#QTYPE2MOPT\">QTYPE2MOPT</a>(<a class=\"id\" href=\"#on\">on</a>, <a class=\"id\" href=\"#t\">t</a>) ((<a class=\"id\" href=\"#t\">t</a>)==<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>?((<a class=\"id\" href=\"#on\">on</a>)##<a class=\"id\" href=\"#USRJQUOTA\">USRJQUOTA</a>):((<a class=\"id\" href=\"#on\">on</a>)##<a class=\"id\" href=\"#GRPJQUOTA\">GRPJQUOTA</a>))", 
"", 
"static int <a class=\"id\" href=\"#ext3_write_dquot\">ext3_write_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext3_acquire_dquot\">ext3_acquire_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext3_release_dquot\">ext3_release_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext3_mark_dquot_dirty\">ext3_mark_dquot_dirty</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"static int <a class=\"id\" href=\"#ext3_write_info\">ext3_write_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"static int <a class=\"id\" href=\"#ext3_quota_on\">ext3_quota_on</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#path\">path</a>);", 
"static int <a class=\"id\" href=\"#ext3_quota_on_mount\">ext3_quota_on_mount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext3_quota_read\">ext3_quota_read</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, char *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>);", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext3_quota_write\">ext3_quota_write</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#dquot_operations\">dquot_operations</a> <a class=\"id\" href=\"#ext3_quota_operations\">ext3_quota_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_dquot\">write_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_write_dquot\">ext3_write_dquot</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#acquire_dquot\">acquire_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_acquire_dquot\">ext3_acquire_dquot</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_dquot\">release_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_release_dquot\">ext3_release_dquot</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mark_dirty\">mark_dirty</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_mark_dquot_dirty\">ext3_mark_dquot_dirty</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_info\">write_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_write_info\">ext3_write_info</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_dquot\">alloc_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_alloc\">dquot_alloc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_dquot\">destroy_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_destroy\">dquot_destroy</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#quotactl_ops\">quotactl_ops</a> <a class=\"id\" href=\"#ext3_qctl_operations\">ext3_qctl_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_on\">quota_on</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_quota_on\">ext3_quota_on</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_off\">quota_off</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_quota_off\">dquot_quota_off</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_sync\">quota_sync</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_quota_sync\">dquot_quota_sync</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_info\">get_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_get_dqinfo\">dquot_get_dqinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_info\">set_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_set_dqinfo\">dquot_set_dqinfo</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_dqblk\">get_dqblk</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_get_dqblk\">dquot_get_dqblk</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_dqblk\">set_dqblk</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_set_dqblk\">dquot_set_dqblk</a>", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#ext3_sops\">ext3_sops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_inode\">alloc_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_alloc_inode\">ext3_alloc_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_inode\">destroy_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_destroy_inode\">ext3_destroy_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_inode\">write_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_write_inode\">ext3_write_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dirty_inode\">dirty_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_dirty_inode\">ext3_dirty_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#evict_inode\">evict_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_evict_inode\">ext3_evict_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_super\">put_super</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_put_super\">ext3_put_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sync_fs\">sync_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_sync_fs\">ext3_sync_fs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freeze_fs\">freeze_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_freeze\">ext3_freeze</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unfreeze_fs\">unfreeze_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_unfreeze\">ext3_unfreeze</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_statfs\">ext3_statfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remount_fs\">remount_fs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_remount\">ext3_remount</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show_options\">show_options</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_show_options\">ext3_show_options</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_read\">quota_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_quota_read\">ext3_quota_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#quota_write\">quota_write</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_quota_write\">ext3_quota_write</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a> = <a class=\"id\" href=\"#bdev_try_to_free_page\">bdev_try_to_free_page</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#export_operations\">export_operations</a> <a class=\"id\" href=\"#ext3_export_ops\">ext3_export_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fh_to_dentry\">fh_to_dentry</a> = <a class=\"id\" href=\"#ext3_fh_to_dentry\">ext3_fh_to_dentry</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fh_to_parent\">fh_to_parent</a> = <a class=\"id\" href=\"#ext3_fh_to_parent\">ext3_fh_to_parent</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_parent\">get_parent</a> = <a class=\"id\" href=\"#ext3_get_parent\">ext3_get_parent</a>,", 
"};", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>, <a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>, <a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, <a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>, <a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>, <a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>, <a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>, <a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>, <a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>, <a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>, <a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>, <a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>, <a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>, <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>, <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>, <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_reservation\">Opt_reservation</a>, <a class=\"id\" href=\"#Opt_noreservation\">Opt_noreservation</a>, <a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>, <a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>, <a class=\"id\" href=\"#Opt_bh\">Opt_bh</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_commit\">Opt_commit</a>, <a class=\"id\" href=\"#Opt_journal_update\">Opt_journal_update</a>, <a class=\"id\" href=\"#Opt_journal_inum\">Opt_journal_inum</a>, <a class=\"id\" href=\"#Opt_journal_dev\">Opt_journal_dev</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_abort\">Opt_abort</a>, <a class=\"id\" href=\"#Opt_data_journal\">Opt_data_journal</a>, <a class=\"id\" href=\"#Opt_data_ordered\">Opt_data_ordered</a>, <a class=\"id\" href=\"#Opt_data_writeback\">Opt_data_writeback</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_data_err_abort\">Opt_data_err_abort</a>, <a class=\"id\" href=\"#Opt_data_err_ignore\">Opt_data_err_ignore</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>, <a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>, <a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>, <a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>, <a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>, <a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>, <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>, <a class=\"id\" href=\"#Opt_ignore\">Opt_ignore</a>, <a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>, <a class=\"id\" href=\"#Opt_nobarrier\">Opt_nobarrier</a>, <a class=\"id\" href=\"#Opt_err\">Opt_err</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_resize\">Opt_resize</a>, <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>, <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>", 
"};", 
"", 
"static const <a class=\"id\" href=\"#match_table_t\">match_table_t</a> <a class=\"id\" href=\"#tokens\">tokens</a> = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>, \"bsddf\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>, \"minixdf\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, \"grpid\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>, \"bsdgroups\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>, \"nogrpid\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>, \"sysvgroups\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>, \"resgid=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>, \"resuid=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>, \"sb=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>, \"errors=continue\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>, \"errors=panic\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>, \"errors=remount-ro\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>, \"nouid32\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>, \"nocheck\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>, \"check=none\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>, \"debug\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>, \"oldalloc\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>, \"orlov\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>, \"user_xattr\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>, \"nouser_xattr\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>, \"acl\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>, \"noacl\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_reservation\">Opt_reservation</a>, \"reservation\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noreservation\">Opt_noreservation</a>, \"noreservation\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>, \"noload\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>, \"norecovery\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>, \"nobh\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_bh\">Opt_bh</a>, \"bh\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_commit\">Opt_commit</a>, \"commit=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_update\">Opt_journal_update</a>, \"journal=update\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_inum\">Opt_journal_inum</a>, \"journal=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_journal_dev\">Opt_journal_dev</a>, \"journal_dev=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_abort\">Opt_abort</a>, \"abort\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_journal\">Opt_data_journal</a>, \"data=journal\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_ordered\">Opt_data_ordered</a>, \"data=ordered\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_writeback\">Opt_data_writeback</a>, \"data=writeback\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_err_abort\">Opt_data_err_abort</a>, \"data_err=abort\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_data_err_ignore\">Opt_data_err_ignore</a>, \"data_err=ignore\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>, \"usrjquota=\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>, \"usrjquota=%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>, \"grpjquota=\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>, \"grpjquota=%s\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>, \"jqfmt=vfsold\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>, \"jqfmt=vfsv0\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>, \"jqfmt=vfsv1\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>, \"grpquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>, \"noquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>, \"quota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>, \"usrquota\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>, \"barrier=%u\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>, \"barrier\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_nobarrier\">Opt_nobarrier</a>, \"nobarrier\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_resize\">Opt_resize</a>, \"resize\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err\">Opt_err</a>, <a class=\"id\" href=\"#NULL\">NULL</a>},", 
"};", 
"", 
"static <a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#get_sb_block\">get_sb_block</a>(void **<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a><span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#options\">options</a> = (char *) *<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#options\">options</a> || <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#options\">options</a>, \"sb=\", 3) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;<span class=\"ts\"/><span class=\"comment\">/* Default location */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a> += 3;", 
"<span class=\"ts\"/><span class=\"comment\">/*todo: use simple_strtoll with &gt;32bit ext3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#options\">options</a>, &amp;<a class=\"id\" href=\"#options\">options</a>, 0);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#options\">options</a> && *<a class=\"id\" href=\"#options\">options</a> != ',') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"error: invalid sb specification: %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       (char *) *<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#options\">options</a> == ',')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#options\">options</a>++;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#data\">data</a> = (void *) <a class=\"id\" href=\"#options\">options</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"static int <a class=\"id\" href=\"#set_qf_name\">set_qf_name</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#qtype\">qtype</a>, <a class=\"id\" href=\"#substring_t\">substring_t</a> *<a class=\"id\" href=\"#args\">args</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#qname\">qname</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Cannot change journaled \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota options when quota turned on\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qname\">qname</a> = <a class=\"id\" href=\"#match_strdup\">match_strdup</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#qname\">qname</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Not enough memory for storing quotafile name\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>], <a class=\"id\" href=\"#qname\">qname</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s quota file already specified\", <a class=\"id\" href=\"#QTYPE2NAME\">QTYPE2NAME</a>(<a class=\"id\" href=\"#qtype\">qtype</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#qname\">qname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] = <a class=\"id\" href=\"#qname\">qname</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>], '/')) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quotafile must be on filesystem root\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#clear_qf_name\">clear_qf_name</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#qtype\">qtype</a>) {", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Cannot change journaled quota options\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" when quota turned on\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The space will be released later when all options are confirmed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to be correct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#qtype\">qtype</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#parse_options\">parse_options</a> (char *<a class=\"id\" href=\"#options\">options</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int *<a class=\"id\" href=\"#inum\">inum</a>, unsigned long *<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> *<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>, int <a class=\"id\" href=\"#is_remount\">is_remount</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>char * <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#substring_t\">substring_t</a> <a class=\"id\" href=\"#args\">args</a>[<a class=\"id\" href=\"#MAX_OPT_ARGS\">MAX_OPT_ARGS</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#data_opt\">data_opt</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#option\">option</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#qfmt\">qfmt</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#options\">options</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#strsep\">strsep</a> (&amp;<a class=\"id\" href=\"#options\">options</a>, \",\")) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#token\">token</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Initialize args struct so we know whether arg was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * found; some options take optional arguments.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[0].<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#args\">args</a>[0].<a class=\"id\" href=\"#from\">from</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#token\">token</a> = <a class=\"id\" href=\"#match_token\">match_token</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tokens\">tokens</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#token\">token</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_bsd_df\">Opt_bsd_df</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_minix_df\">Opt_minix_df</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpid\">Opt_grpid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nogrpid\">Opt_nogrpid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resuid\">Opt_resuid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resgid\">Opt_resgid</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_sb\">Opt_sb</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* handled by get_sb_block() instead of here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* *sb_block = match_int(&amp;args[0]); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_panic\">Opt_err_panic</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_ro\">Opt_err_ro</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_err_cont\">Opt_err_cont</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouid32\">Opt_nouid32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nocheck\">Opt_nocheck</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#CHECK\">CHECK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_debug\">Opt_debug</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_oldalloc\">Opt_oldalloc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_orlov\">Opt_orlov</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#OLDALLOC\">OLDALLOC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_XATTR\">CONFIG_EXT3_FS_XATTR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_user_xattr\">Opt_user_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nouser_xattr\">Opt_nouser_xattr</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(no)user_xattr options not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_POSIX_ACL\">CONFIG_EXT3_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_acl\">Opt_acl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noacl\">Opt_noacl</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"(no)acl options not supported\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_reservation\">Opt_reservation</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noreservation\">Opt_noreservation</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_update\">Opt_journal_update</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* @@@ FIXME */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Eventually we will want to be able to create</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   a journal file here.  For now, only allow the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   user to specify an existing inode to be the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   journal file. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: cannot specify \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"journal on remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#UPDATE_JOURNAL\">UPDATE_JOURNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_inum\">Opt_journal_inum</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: cannot specify \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"journal on remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#inum\">inum</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_journal_dev\">Opt_journal_dev</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: cannot specify \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"journal on remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noload\">Opt_noload</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a> (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_commit\">Opt_commit</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#option\">option</a> = <a class=\"id\" href=\"#JBD_DEFAULT_MAX_COMMIT_AGE\">JBD_DEFAULT_MAX_COMMIT_AGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> = <a class=\"id\" href=\"#HZ\">HZ</a> * <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_journal\">Opt_data_journal</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_opt\">data_opt</a> = <a class=\"id\" href=\"#EXT3_MOUNT_JOURNAL_DATA\">EXT3_MOUNT_JOURNAL_DATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#datacheck\">datacheck</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_ordered\">Opt_data_ordered</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_opt\">data_opt</a> = <a class=\"id\" href=\"#EXT3_MOUNT_ORDERED_DATA\">EXT3_MOUNT_ORDERED_DATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#datacheck\">datacheck</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_writeback\">Opt_data_writeback</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_opt\">data_opt</a> = <a class=\"id\" href=\"#EXT3_MOUNT_WRITEBACK_DATA\">EXT3_MOUNT_WRITEBACK_DATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datacheck\">datacheck</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#data_opt\">data_opt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: cannot change \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"data mode on remount. The filesystem \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"is mounted in data=%s mode and you \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"try to remount it in data=%s mode.\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_mode_string\">data_mode_string</a>(<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data_mode_string\">data_mode_string</a>(<a class=\"id\" href=\"#data_opt\">data_opt</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> |= <a class=\"id\" href=\"#data_opt\">data_opt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_err_abort\">Opt_data_err_abort</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_data_err_ignore\">Opt_data_err_ignore</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#set_qf_name\">set_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>, &amp;<a class=\"id\" href=\"#args\">args</a>[0]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#set_qf_name\">set_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>, &amp;<a class=\"id\" href=\"#args\">args</a>[0]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#clear_qf_name\">clear_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#clear_qf_name\">clear_qf_name</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qfmt\">qfmt</a> = <a class=\"id\" href=\"#QFMT_VFS_OLD\">QFMT_VFS_OLD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_qf_format\">set_qf_format</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qfmt\">qfmt</a> = <a class=\"id\" href=\"#QFMT_VFS_V0\">QFMT_VFS_V0</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_qf_format\">set_qf_format</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qfmt\">qfmt</a> = <a class=\"id\" href=\"#QFMT_VFS_V1\">QFMT_VFS_V1</a>;", 
"<a class=\"id\" href=\"#set_qf_format\">set_qf_format</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> != <a class=\"id\" href=\"#qfmt\">qfmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: cannot change \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"journaled quota options when \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota turned on.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> = <a class=\"id\" href=\"#qfmt\">qfmt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: cannot change \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota options when quota turned on.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_quota\">Opt_quota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrquota\">Opt_usrquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpquota\">Opt_grpquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: quota options not supported.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_usrjquota\">Opt_usrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_grpjquota\">Opt_grpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offusrjquota\">Opt_offusrjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_offgrpjquota\">Opt_offgrpjquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsold\">Opt_jqfmt_vfsold</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv0\">Opt_jqfmt_vfsv0</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_jqfmt_vfsv1\">Opt_jqfmt_vfsv1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: journaled quota options not \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"supported.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_noquota\">Opt_noquota</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_abort\">Opt_abort</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ABORT\">ABORT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nobarrier\">Opt_nobarrier</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_barrier\">Opt_barrier</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#args\">args</a>[0].<a class=\"id\" href=\"#from\">from</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#option\">option</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* No argument, default to 1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#option\">option</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_ignore\">Opt_ignore</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_resize\">Opt_resize</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_remount\">is_remount</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: resize option only available \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"for remount\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_int\">match_int</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> = <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_nobh\">Opt_nobh</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: ignoring deprecated nobh option\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_bh\">Opt_bh</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: ignoring deprecated bh option\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: unrecognized mount option \\\"%s\\\" \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"or missing value\", <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>] || <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>) && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>) && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>) || <a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: old and new quota \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"format mixing.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: journaled quota format \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"not specified.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: journaled quota format \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"specified with no journaling \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"enabled.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_setup_super\">ext3_setup_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#read_only\">read_only</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) &gt; <a class=\"id\" href=\"#EXT3_MAX_SUPP_REV\">EXT3_MAX_SUPP_REV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: revision level too high, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"forcing read-only mode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_only\">read_only</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT3_VALID_FS\">EXT3_VALID_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: mounting unchecked fs, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT3_ERROR_FS\">EXT3_ERROR_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: mounting fs with errors, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>) >= 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mnt_count\">s_mnt_count</a>) >=", 
"<span class=\"ts\"/><span class=\"ts\"/> (unsigned short) (<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: maximal mount count reached, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_checkinterval\">s_checkinterval</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_lastcheck\">s_lastcheck</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_checkinterval\">s_checkinterval</a>) <= <a class=\"id\" href=\"#get_seconds\">get_seconds</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: checktime reached, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"#if 0", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* @@@ We _will_ want to clear the valid bit if we find</span>", 
"<span class=\"comment\">                   inconsistencies, to force a fsck at reboot.  But for</span>", 
"<span class=\"comment\">                   a plain journaled filesystem we can keep it set as</span>", 
"<span class=\"comment\">                   valid forever! :) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> &= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(~<a class=\"id\" href=\"#EXT3_VALID_FS\">EXT3_VALID_FS</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#__s16\">__s16</a>) <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_max_mnt_count\">s_max_mnt_count</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT3_DFL_MAX_MNT_COUNT\">EXT3_DFL_MAX_MNT_COUNT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le16_add_cpu\">le16_add_cpu</a>(&amp;<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mnt_count\">s_mnt_count</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_mtime\">s_mtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_update_dynamic_rev\">ext3_update_dynamic_rev</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SET_INCOMPAT_FEATURE\">EXT3_SET_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"[bs=%lu, gc=%lu, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bpg=%lu, ipg=%lu, mo=%04lx]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_BLOCKS_PER_GROUP\">EXT3_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_inode\">j_inode</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#BDEVNAME_SIZE\">BDEVNAME_SIZE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"using external journal on %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bdevname\">bdevname</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#b\">b</a>));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"using internal journal\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Called at mount-time, super-block is locked */</span>", 
"static int <a class=\"id\" href=\"#ext3_check_descriptors\">ext3_check_descriptors</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_debug\">ext3_debug</a> (\"Checking group descriptors\");", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_group_desc\">ext3_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext3_get_group_desc\">ext3_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#first_block\">first_block</a> = <a class=\"id\" href=\"#ext3_group_first_block_no\">ext3_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#last_block\">last_block</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_block\">last_block</a> = <a class=\"id\" href=\"#first_block\">first_block</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT3_BLOCKS_PER_GROUP\">EXT3_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_block_bitmap\">bg_block_bitmap</a>) &lt; <a class=\"id\" href=\"#first_block\">first_block</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_block_bitmap\">bg_block_bitmap</a>) &gt; <a class=\"id\" href=\"#last_block\">last_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a> (<a class=\"id\" href=\"#sb\">sb</a>, \"ext3_check_descriptors\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Block bitmap for group %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" not in group (block %lu)!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#i\">i</a>, (unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_block_bitmap\">bg_block_bitmap</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_bitmap\">bg_inode_bitmap</a>) &lt; <a class=\"id\" href=\"#first_block\">first_block</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_bitmap\">bg_inode_bitmap</a>) &gt; <a class=\"id\" href=\"#last_block\">last_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a> (<a class=\"id\" href=\"#sb\">sb</a>, \"ext3_check_descriptors\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Inode bitmap for group %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" not in group (block %lu)!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#i\">i</a>, (unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_bitmap\">bg_inode_bitmap</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_table\">bg_inode_table</a>) &lt; <a class=\"id\" href=\"#first_block\">first_block</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_table\">bg_inode_table</a>) + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a> - 1 &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#last_block\">last_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a> (<a class=\"id\" href=\"#sb\">sb</a>, \"ext3_check_descriptors\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Inode table for group %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" not in group (block %lu)!\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#i\">i</a>, (unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_inode_table\">bg_inode_table</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_free_blocks_count\">s_free_blocks_count</a>=<a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ext3_count_free_blocks\">ext3_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a>=<a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ext3_count_free_inodes\">ext3_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* ext3_orphan_cleanup() walks a singly-linked list of inodes (starting at</span>", 
"<span class=\"comment\"> * the superblock) which were deleted from all directories, but held open by</span>", 
"<span class=\"comment\"> * a process at the time of a crash.  We walk the list and try to delete these</span>", 
"<span class=\"comment\"> * inodes at recovery time (only with a read-write filesystem).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * In order to keep the orphan inode chain consistent during traversal (in</span>", 
"<span class=\"comment\"> * case of crash during recovery), we link each inode into the superblock</span>", 
"<span class=\"comment\"> * orphan list_head and handle it the same way as an inode deletion during</span>", 
"<span class=\"comment\"> * normal operation (which journals the operations for us).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We only do an iget() and an iput() on each inode, which is very safe if we</span>", 
"<span class=\"comment\"> * accidentally point at an in-use or already deleted inode.  The worst that</span>", 
"<span class=\"comment\"> * can happen in this case is that we get a \"bit already cleared\" message from</span>", 
"<span class=\"comment\"> * ext3_free_inode().  The only reason we would point at a wrong inode is if</span>", 
"<span class=\"comment\"> * e2fsck was run on this filesystem, and it must have already done the orphan</span>", 
"<span class=\"comment\"> * inode cleanup for us, so we can safely abort without any further action.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext3_orphan_cleanup\">ext3_orphan_cleanup</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_orphans\">nr_orphans</a> = 0, <a class=\"id\" href=\"#nr_truncates\">nr_truncates</a> = 0;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(4, \"no orphan inodes to clean up\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdev_read_only\">bdev_read_only</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: write access \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"unavailable, skipping orphan cleanup.\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT3_ERROR_FS\">EXT3_ERROR_FS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Errors on filesystem, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"clearing orphan list.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Skipping orphan recovery on fs with errors.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"orphan cleanup on readonly fs\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &= ~<a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Needed for iput() to work correctly and not trash data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_ACTIVE\">MS_ACTIVE</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Turn on quotas so that they are updated correctly */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext3_quota_on_mount\">ext3_quota_on_mount</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: cannot turn on journaled \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quota: %d\", <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ext3_orphan_get\">ext3_orphan_get</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_orphan\">i_orphan</a>, &amp;<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s: truncating inode %lu to %Ld bytes\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"truncating inode %lu to %Ld bytes\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_truncate\">ext3_truncate</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_truncates\">nr_truncates</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s: deleting unreferenced inode %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"deleting unreferenced inode %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_orphans\">nr_orphans</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);  <span class=\"comment\">/* The delete magic happens here! */</span>", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PLURAL\">PLURAL</a>(<a class=\"id\" href=\"#x\">x</a>) (<a class=\"id\" href=\"#x\">x</a>), ((<a class=\"id\" href=\"#x\">x</a>)==1) ? \"\" : \"s\"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_orphans\">nr_orphans</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"%d orphan inode%s deleted\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PLURAL\">PLURAL</a>(<a class=\"id\" href=\"#nr_orphans\">nr_orphans</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_truncates\">nr_truncates</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"%d truncate%s cleaned up\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PLURAL\">PLURAL</a>(<a class=\"id\" href=\"#nr_truncates\">nr_truncates</a>));", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Turn quotas off */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_quota_off\">dquot_quota_off</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#s_flags\">s_flags</a>; <span class=\"comment\">/* Restore MS_RDONLY status */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximal file size.  There is a direct, and {,double-,triple-}indirect</span>", 
"<span class=\"comment\"> * block limit, and also a limit of (2^32 - 1) 512-byte sectors in i_blocks.</span>", 
"<span class=\"comment\"> * We need to be 1 filesystem block less than the 2^32 sector limit.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#ext3_max_size\">ext3_max_size</a>(int <a class=\"id\" href=\"#bits\">bits</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#EXT3_NDIR_BLOCKS\">EXT3_NDIR_BLOCKS</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#meta_blocks\">meta_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is calculated to be the largest file size for a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * dense, file such that the total number of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sectors in the file, including data and all indirect blocks,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * does not exceed 2^32 -1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * __u32 i_blocks representing the total number of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 512 bytes blocks of the file</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> = (1LL << 32) - 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* total blocks in file system block size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> >>= (<a class=\"id\" href=\"#bits\">bits</a> - 9);", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> = 1;", 
"<span class=\"ts\"/><span class=\"comment\">/* double indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> += 1 + (1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><span class=\"comment\">/* tripple indirect blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#meta_blocks\">meta_blocks</a> += 1 + (1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2)) + (1LL << (2*(<a class=\"id\" href=\"#bits\">bits</a>-2)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> -= <a class=\"id\" href=\"#meta_blocks\">meta_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper_limit\">upper_limit</a> <<= <a class=\"id\" href=\"#bits\">bits</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (<a class=\"id\" href=\"#bits\">bits</a>-2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (2*(<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += 1LL << (3*(<a class=\"id\" href=\"#bits\">bits</a>-2));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> <<= <a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#upper_limit\">upper_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#upper_limit\">upper_limit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#descriptor_loc\">descriptor_loc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#nr\">nr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bg\">bg</a>, <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#has_super\">has_super</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_meta_bg\">s_first_meta_bg</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_META_BG\">EXT3_FEATURE_INCOMPAT_META_BG</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#nr\">nr</a> &lt; <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> + <a class=\"id\" href=\"#nr\">nr</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bg\">bg</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a> * <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_bg_has_super\">ext3_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bg\">bg</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#has_super\">has_super</a> = 1;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#has_super\">has_super</a> + <a class=\"id\" href=\"#ext3_group_first_block_no\">ext3_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bg\">bg</a>));", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#ext3_fill_super\">ext3_fill_super</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#silent\">silent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#get_sb_block\">get_sb_block</a>(&amp;<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#journal_inum\">journal_inum</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hblock\">hblock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#db_count\">db_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#needs_recovery\">needs_recovery</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#features\">features</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sbi\">sbi</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#EXT3_DEF_RESUID\">EXT3_DEF_RESUID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#EXT3_DEF_RESGID\">EXT3_DEF_RESGID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#sb_min_blocksize\">sb_min_blocksize</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: unable to set blocksize\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The ext3 superblock will not be buffer aligned for other than 1kB</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block sizes.  We need to calculate the offset from buffer start.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> != <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a> * <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a>) / <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a> * <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a>) % <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: unable to read superblock\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: s_es must be initialized as soon as possible because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *       some ext3 macro-instructions depend on its value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *) (((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a> = <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> != <a class=\"id\" href=\"#EXT3_SUPER_MAGIC\">EXT3_SUPER_MAGIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext3\">cantfind_ext3</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set defaults before we parse the mount options */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_default_mount_opts\">s_default_mount_opts</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_DEBUG\">EXT3_DEFM_DEBUG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_BSDGROUPS\">EXT3_DEFM_BSDGROUPS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_UID16\">EXT3_DEFM_UID16</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_XATTR\">CONFIG_EXT3_FS_XATTR</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_XATTR_USER\">EXT3_DEFM_XATTR_USER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT3_FS_POSIX_ACL\">CONFIG_EXT3_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_ACL\">EXT3_DEFM_ACL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_JMODE\">EXT3_DEFM_JMODE</a>) == <a class=\"id\" href=\"#EXT3_DEFM_JMODE_DATA\">EXT3_DEFM_JMODE_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#JOURNAL_DATA\">JOURNAL_DATA</a>);", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_JMODE\">EXT3_DEFM_JMODE</a>) == <a class=\"id\" href=\"#EXT3_DEFM_JMODE_ORDERED\">EXT3_DEFM_JMODE_ORDERED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ORDERED_DATA\">ORDERED_DATA</a>);", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT3_DEFM_JMODE\">EXT3_DEFM_JMODE</a>) == <a class=\"id\" href=\"#EXT3_DEFM_JMODE_WBACK\">EXT3_DEFM_JMODE_WBACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#WRITEBACK_DATA\">WRITEBACK_DATA</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>) == <a class=\"id\" href=\"#EXT3_ERRORS_PANIC\">EXT3_ERRORS_PANIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>) == <a class=\"id\" href=\"#EXT3_ERRORS_CONTINUE\">EXT3_ERRORS_CONTINUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resuid\">s_def_resuid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resgid\">s_def_resgid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#RESERVATION\">RESERVATION</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parse_options\">parse_options</a> ((char *) <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#journal_inum\">journal_inum</a>, &amp;<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; ~<a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) ? <a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a> : 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) == <a class=\"id\" href=\"#EXT3_GOOD_OLD_REV\">EXT3_GOOD_OLD_REV</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#EXT3_HAS_COMPAT_FEATURE\">EXT3_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U) ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#EXT3_HAS_RO_COMPAT_FEATURE\">EXT3_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U) ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: feature flags set on rev 0 fs, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"running e2fsck is recommended\");", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check feature flags regardless of the revision level, since we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * previously didn't change the revision level when setting the flags,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so there is a chance incompat flags are set on a rev 0 filesystem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#features\">features</a> = <a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~<a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_SUPP\">EXT3_FEATURE_INCOMPAT_SUPP</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#features\">features</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: couldn't mount because of unsupported \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"optional features (%x)\", <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#features\">features</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#features\">features</a> = <a class=\"id\" href=\"#EXT3_HAS_RO_COMPAT_FEATURE\">EXT3_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~<a class=\"id\" href=\"#EXT3_FEATURE_RO_COMPAT_SUPP\">EXT3_FEATURE_RO_COMPAT_SUPP</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) && <a class=\"id\" href=\"#features\">features</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: couldn't mount RDWR because of unsupported \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"optional features (%x)\", <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#features\">features</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a> << <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_log_block_size\">s_log_block_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> &lt; <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#blocksize\">blocksize</a> &gt; <a class=\"id\" href=\"#EXT3_MAX_BLOCK_SIZE\">EXT3_MAX_BLOCK_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: couldn't mount because of unsupported \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"filesystem blocksize %d\", <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hblock\">hblock</a> = <a class=\"id\" href=\"#bdev_logical_block_size\">bdev_logical_block_size</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> != <a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Make sure the blocksize for the filesystem is larger</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * than the hardware sectorsize for the machine.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> &lt; <a class=\"id\" href=\"#hblock\">hblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: fsblocksize %d too small for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"hardware sectorsize %d\", <a class=\"id\" href=\"#blocksize\">blocksize</a>, <a class=\"id\" href=\"#hblock\">hblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_set_blocksize\">sb_set_blocksize</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: bad blocksize %d\", <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a> * <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a>) / <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#sb_block\">sb_block</a> * <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a>) % <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"error: can't read superblock on 2nd try\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *)(((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a> = <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> != <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT3_SUPER_MAGIC\">EXT3_SUPER_MAGIC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: magic mismatch\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a> = <a class=\"id\" href=\"#ext3_max_size\">ext3_max_size</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) == <a class=\"id\" href=\"#EXT3_GOOD_OLD_REV\">EXT3_GOOD_OLD_REV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#EXT3_GOOD_OLD_INODE_SIZE\">EXT3_GOOD_OLD_INODE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#EXT3_GOOD_OLD_FIRST_INO\">EXT3_GOOD_OLD_FIRST_INO</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &lt; <a class=\"id\" href=\"#EXT3_GOOD_OLD_INODE_SIZE\">EXT3_GOOD_OLD_INODE_SIZE</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: unsupported inode size: %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a> = <a class=\"id\" href=\"#EXT3_MIN_FRAG_SIZE\">EXT3_MIN_FRAG_SIZE</a> <<", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_log_frag_size\">s_log_frag_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"error: fragsize %lu != blocksize %u (unsupported)\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frag_size\">s_frag_size</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_block\">s_frags_per_block</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_INODE_SIZE\">EXT3_INODE_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0 || <a class=\"id\" href=\"#EXT3_INODES_PER_GROUP\">EXT3_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext3\">cantfind_ext3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a> = <a class=\"id\" href=\"#blocksize\">blocksize</a> / <a class=\"id\" href=\"#EXT3_INODE_SIZE\">EXT3_INODE_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext3\">cantfind_ext3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a> = <a class=\"id\" href=\"#blocksize\">blocksize</a> / sizeof(struct <a class=\"id\" href=\"#ext3_group_desc\">ext3_group_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_addr_per_block_bits\">s_addr_per_block_bits</a> = <a class=\"id\" href=\"#ilog2\">ilog2</a>(<a class=\"id\" href=\"#EXT3_ADDR_PER_BLOCK\">EXT3_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block_bits\">s_desc_per_block_bits</a> = <a class=\"id\" href=\"#ilog2\">ilog2</a>(<a class=\"id\" href=\"#EXT3_DESC_PER_BLOCK\">EXT3_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_hash_seed\">s_hash_seed</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_hash_seed\">s_hash_seed</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_def_hash_version\">s_def_hash_version</a> = <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_hash_version\">s_def_hash_version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &amp; <a class=\"id\" href=\"#EXT2_FLAGS_UNSIGNED_HASH\">EXT2_FLAGS_UNSIGNED_HASH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_hash_unsigned\">s_hash_unsigned</a> = 3;", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#i\">i</a> &amp; <a class=\"id\" href=\"#EXT2_FLAGS_SIGNED_HASH\">EXT2_FLAGS_SIGNED_HASH</a>) == 0) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__CHAR_UNSIGNED__\">__CHAR_UNSIGNED__</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_FLAGS_UNSIGNED_HASH\">EXT2_FLAGS_UNSIGNED_HASH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_hash_unsigned\">s_hash_unsigned</a> = 3;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_FLAGS_SIGNED_HASH\">EXT2_FLAGS_SIGNED_HASH</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"#blocks per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: #fragments per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_frags_per_group\">s_frags_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: #inodes per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sector_t\">sector_t</a>)(~0ULL) >> (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> - 9)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: filesystem is too large to mount safely\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (sizeof(<a class=\"id\" href=\"#sector_t\">sector_t</a>) &lt; 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: CONFIG_LBDAF not enabled\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_BLOCKS_PER_GROUP\">EXT3_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext3\">cantfind_ext3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> = ((<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>) - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       / <a class=\"id\" href=\"#EXT3_BLOCKS_PER_GROUP\">EXT3_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>)) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#db_count\">db_count</a> = (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> + <a class=\"id\" href=\"#EXT3_DESC_PER_BLOCK\">EXT3_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1) /", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT3_DESC_PER_BLOCK\">EXT3_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#db_count\">db_count</a> * sizeof (struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: not enough memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bgl_lock_init\">bgl_lock_init</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#db_count\">db_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#descriptor_loc\">descriptor_loc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logic_sb_block\">logic_sb_block</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: can't read group descriptor %d\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#db_count\">db_count</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_check_descriptors\">ext3_check_descriptors</a> (<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: group descriptors corrupted\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a> = <a class=\"id\" href=\"#db_count\">db_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_generation\">s_next_generation</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* per fileystem reservation list head &amp; lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_lock\">s_rsv_window_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_root\">s_rsv_window_root</a> = <a class=\"id\" href=\"#RB_ROOT\">RB_ROOT</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Add a single, static dummy reservation to the start of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reservation window list --- it gives us a placeholder for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * append-at-start-of-list which makes the allocation logic</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _much_ simpler. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_start\">rsv_start</a> = <a class=\"id\" href=\"#EXT3_RESERVE_WINDOW_NOT_ALLOCATED\">EXT3_RESERVE_WINDOW_NOT_ALLOCATED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_end\">rsv_end</a> = <a class=\"id\" href=\"#EXT3_RESERVE_WINDOW_NOT_ALLOCATED\">EXT3_RESERVE_WINDOW_NOT_ALLOCATED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_alloc_hit\">rsv_alloc_hit</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>.<a class=\"id\" href=\"#rsv_goal_size\">rsv_goal_size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_rsv_window_add\">ext3_rsv_window_add</a>(<a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_rsv_window_head\">s_rsv_window_head</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set up enough so that it can read an inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a> = &amp;<a class=\"id\" href=\"#ext3_sops\">ext3_sops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_export_op\">s_export_op</a> = &amp;<a class=\"id\" href=\"#ext3_export_ops\">ext3_export_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a> = <a class=\"id\" href=\"#ext3_xattr_handlers\">ext3_xattr_handlers</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_qcop\">s_qcop</a> = &amp;<a class=\"id\" href=\"#ext3_qctl_operations\">ext3_qctl_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#dq_op\">dq_op</a> = &amp;<a class=\"id\" href=\"#ext3_quota_operations\">ext3_quota_operations</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>); <span class=\"comment\">/* unlinked but open files */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan_lock\">s_orphan_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#needs_recovery\">needs_recovery</a> = (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a> != 0 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The first inode we look at is the journal inode.  Don't try</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * root first: it may be modified in the journal!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#EXT3_HAS_COMPAT_FEATURE\">EXT3_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_COMPAT_HAS_JOURNAL\">EXT3_FEATURE_COMPAT_HAS_JOURNAL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_load_journal\">ext3_load_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#journal_inum\">journal_inum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_create_journal\">ext3_create_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#journal_inum\">journal_inum</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#silent\">silent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: no journal found. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"mounting ext3 over ext2?\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_count_free_blocks\">ext3_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_count_free_inodes\">ext3_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_count_dirs\">ext3_count_dirs</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: insufficient memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We have now updated the journal if required, so we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * validate the data journaling mode. */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>)) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No mode set, assume a default based on the journal</span>", 
"<span class=\"comment\">                   capabilities: ORDERED_DATA if the journal can</span>", 
"<span class=\"comment\">                   cope, else JOURNAL_DATA */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_check_available_features\">journal_check_available_features</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>, 0, 0, <a class=\"id\" href=\"#JFS_FEATURE_INCOMPAT_REVOKE\">JFS_FEATURE_INCOMPAT_REVOKE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DEFAULT_DATA_MODE\">DEFAULT_DATA_MODE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#JOURNAL_DATA\">JOURNAL_DATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EXT3_MOUNT_ORDERED_DATA\">EXT3_MOUNT_ORDERED_DATA</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EXT3_MOUNT_WRITEBACK_DATA\">EXT3_MOUNT_WRITEBACK_DATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal_check_available_features\">journal_check_available_features</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>, 0, 0, <a class=\"id\" href=\"#JFS_FEATURE_INCOMPAT_REVOKE\">JFS_FEATURE_INCOMPAT_REVOKE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: journal does not support \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"requested data journaling mode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The journal_load will have done any necessary log recovery,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we can safely mount the rest of the filesystem now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#ext3_iget\">ext3_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_ROOT_INO\">EXT3_ROOT_INO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#root\">root</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: get root inode failed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) || !<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> || !<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: corrupt root inode, run e2fsck\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#d_alloc_root\">d_alloc_root</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: get root dentry failed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_setup_super\">ext3_setup_super</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> |= <a class=\"id\" href=\"#EXT3_ORPHAN_FS\">EXT3_ORPHAN_FS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_orphan_cleanup\">ext3_orphan_cleanup</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &= ~<a class=\"id\" href=\"#EXT3_ORPHAN_FS\">EXT3_ORPHAN_FS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#needs_recovery\">needs_recovery</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"recovery complete\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_mark_recovery_complete\">ext3_mark_recovery_complete</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"mounted filesystem with %s data mode\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT3_MOUNT_JOURNAL_DATA\">EXT3_MOUNT_JOURNAL_DATA</a> ? \"journal\":", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT3_MOUNT_ORDERED_DATA\">EXT3_MOUNT_ORDERED_DATA</a> ? \"ordered\":", 
"<span class=\"ts\"/><span class=\"ts\"/>\"writeback\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#cantfind_ext3\">cantfind_ext3</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#silent\">silent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: can't find ext3 filesystem on dev %s.\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"", 
"<a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_destroy\">journal_destroy</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#db_count\">db_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>);", 
"<a class=\"id\" href=\"#failed_mount\">failed_mount</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_blkdev_remove\">ext3_blkdev_remove</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#out_fail\">out_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Setup any per-fs journal parameters now.  We'll do this both on</span>", 
"<span class=\"comment\"> * initial mount, once the journal has been initialised but before we've</span>", 
"<span class=\"comment\"> * done any recovery; and again on any subsequent remount.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext3_init_journal_params\">ext3_init_journal_params</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_interval\">j_commit_interval</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* We could also set up an ext3-specific default for the commit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * interval here, but for now we'll just fall back to the jbd</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * default. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JFS_BARRIER\">JFS_BARRIER</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JFS_BARRIER\">JFS_BARRIER</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JFS_ABORT_ON_SYNCDATA_ERR\">JFS_ABORT_ON_SYNCDATA_ERR</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JFS_ABORT_ON_SYNCDATA_ERR\">JFS_ABORT_ON_SYNCDATA_ERR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#ext3_get_journal\">ext3_get_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#journal_inum\">journal_inum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#journal_inode\">journal_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First, test for the existence of a valid inode on disk.  Bad</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * things happen if we iget() an unused inode, as the subsequent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * iput() will try to delete it. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_inode\">journal_inode</a> = <a class=\"id\" href=\"#ext3_iget\">ext3_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_inum\">journal_inum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: no journal found\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal_inode\">journal_inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#make_bad_inode\">make_bad_inode</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: journal inode is deleted\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"Journal inode found at %p: %Ld bytes\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#journal_inode\">journal_inode</a>, <a class=\"id\" href=\"#journal_inode\">journal_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: invalid journal inode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#journal_init_inode\">journal_init_inode</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: could not load journal inode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_private\">j_private</a> = <a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_init_journal_params\">ext3_init_journal_params</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#ext3_get_dev_journal\">ext3_get_dev_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#j_dev\">j_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hblock\">hblock</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#ext3_blkdev_get\">ext3_blkdev_get</a>(<a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdev\">bdev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bd_claim\">bd_claim</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: failed to claim external journal device\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>|<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hblock\">hblock</a> = <a class=\"id\" href=\"#bdev_logical_block_size\">bdev_logical_block_size</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> &lt; <a class=\"id\" href=\"#hblock\">hblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: blocksize too small for journal device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a> / <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#EXT3_MIN_BLOCK_SIZE\">EXT3_MIN_BLOCK_SIZE</a> % <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_blocksize\">set_blocksize</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#__bread\">__bread</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sb_block\">sb_block</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: couldn't read superblock of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"external journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *) (((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a>) != <a class=\"id\" href=\"#EXT3_SUPER_MAGIC\">EXT3_SUPER_MAGIC</a>) ||", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>) &amp;", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_JOURNAL_DEV\">EXT3_FEATURE_INCOMPAT_JOURNAL_DEV</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: external journal has \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bad superblock\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_journal_uuid\">s_journal_uuid</a>, <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a>, 16)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: journal UUID does not match\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);<span class=\"ts\"/><span class=\"comment\">/* we're done with the superblock */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#journal_init_dev\">journal_init_dev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: failed to create device journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_private\">j_private</a> = <a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ll_rw_block\">ll_rw_block</a>(<a class=\"id\" href=\"#READ\">READ</a>, 1, &amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"I/O error on journal device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_journal\">out_journal</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_nr_users\">s_nr_users</a>) != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: external journal has more than one \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"user (unsupported) - %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_nr_users\">s_nr_users</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_journal\">out_journal</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> = <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_init_journal_params\">ext3_init_journal_params</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>;", 
"<a class=\"id\" href=\"#out_journal\">out_journal</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_destroy\">journal_destroy</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<a class=\"id\" href=\"#out_bdev\">out_bdev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_blkdev_put\">ext3_blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_load_journal\">ext3_load_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#journal_inum\">journal_inum</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_inum\">s_journal_inum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#journal_dev\">journal_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#really_read_only\">really_read_only</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> != <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"external journal device major/minor \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"numbers have changed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_dev\">journal_dev</a> = <a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_dev\">journal_dev</a> = <a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#really_read_only\">really_read_only</a> = <a class=\"id\" href=\"#bdev_read_only\">bdev_read_only</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Are we loading a blank journal or performing recovery after a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * crash?  For recovery, we need to check in advance whether we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can get read-write access to the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"recovery required on readonly filesystem\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#really_read_only\">really_read_only</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: write access \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"unavailable, cannot proceed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"write access will be enabled during recovery\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_inum\">journal_inum</a> && <a class=\"id\" href=\"#journal_dev\">journal_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error: filesystem has both journal \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"and inode journals\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_inum\">journal_inum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#ext3_get_journal\">ext3_get_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_inum\">journal_inum</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#ext3_get_dev_journal\">ext3_get_dev_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_dev\">journal_dev</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JFS_BARRIER\">JFS_BARRIER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"EXT3-fs: barriers not enabled\\n\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#really_read_only\">really_read_only</a> && <a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#UPDATE_JOURNAL\">UPDATE_JOURNAL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_update_format\">journal_update_format</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error updating journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_destroy\">journal_destroy</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_wipe\">journal_wipe</a>(<a class=\"id\" href=\"#journal\">journal</a>, !<a class=\"id\" href=\"#really_read_only\">really_read_only</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_load\">journal_load</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error loading journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_destroy\">journal_destroy</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a> = <a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_clear_journal_err\">ext3_clear_journal_err</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> != <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make sure we flush the recovery flag to disk. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_create_journal\">ext3_create_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#journal_inum\">journal_inum</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"error: readonly filesystem when trying to \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"create journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#ext3_get_journal\">ext3_get_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_inum\">journal_inum</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"creating new journal on inode %u\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#journal_inum\">journal_inum</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_create\">journal_create</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error creating journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_destroy\">journal_destroy</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a> = <a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_update_dynamic_rev\">ext3_update_dynamic_rev</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SET_INCOMPAT_FEATURE\">EXT3_SET_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SET_COMPAT_FEATURE\">EXT3_SET_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_COMPAT_HAS_JOURNAL\">EXT3_FEATURE_COMPAT_HAS_JOURNAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_inum\">s_journal_inum</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#journal_inum\">journal_inum</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure we flush the recovery flag to disk. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#sbh\">sbh</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbh\">sbh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the file system is mounted read-only, don't update the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock write time.  This avoids updating the superblock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * write time when we are mounting the root file system</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * read/only but we need to replay the journal; at that point,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for people who are east of GMT and who make their clock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tick in localtime for Windows bug-for-bug compatibility,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the clock is set in the future, and this will cause e2fsck</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to complain and force a full file system check.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_wtime\">s_wtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_blocks_count\">s_free_blocks_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ext3_count_free_blocks\">ext3_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#ext3_count_free_inodes\">ext3_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#sbh\">sbh</a>, \"marking dirty\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sync\">sync</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Have we just finished recovery?  If so, and if we are mounting (or</span>", 
"<span class=\"comment\"> * remounting) the filesystem readonly, then we will end up with a</span>", 
"<span class=\"comment\"> * consistent fs on disk.  Record that fact.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext3_mark_recovery_complete\">ext3_mark_recovery_complete</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_lock_updates\">journal_lock_updates</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_flush\">journal_flush</a>(<a class=\"id\" href=\"#journal\">journal</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_HAS_INCOMPAT_FEATURE\">EXT3_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_CLEAR_INCOMPAT_FEATURE\">EXT3_CLEAR_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_unlock_updates\">journal_unlock_updates</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If we are mounting (or read-write remounting) a filesystem whose journal</span>", 
"<span class=\"comment\"> * has recorded an error from a previous lifetime, move that error to the</span>", 
"<span class=\"comment\"> * main filesystem now.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext3_clear_journal_err\">ext3_clear_journal_err</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j_errno\">j_errno</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#errstr\">errstr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now check for any error status which may have been recorded in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * journal by a prior ext3_error() or ext3_abort()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j_errno\">j_errno</a> = <a class=\"id\" href=\"#journal_errno\">journal_errno</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#j_errno\">j_errno</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#ext3_decode_error\">ext3_decode_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#j_errno\">j_errno</a>, <a class=\"id\" href=\"#nbuf\">nbuf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_warning\">ext3_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, \"Filesystem error recorded \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"from previous mount: %s\", <a class=\"id\" href=\"#errstr\">errstr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_warning\">ext3_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, \"Marking fs in need of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"filesystem check.\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> |= <a class=\"id\" href=\"#EXT3_ERROR_FS\">EXT3_ERROR_FS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> |= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT3_ERROR_FS\">EXT3_ERROR_FS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_clear_err\">journal_clear_err</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Force the running and committing transactions to commit,</span>", 
"<span class=\"comment\"> * and wait on the commit.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext3_force_commit\">ext3_force_commit</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext3_journal_force_commit\">ext3_journal_force_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_sync_fs\">ext3_sync_fs</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#target\">target</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_start_commit\">journal_start_commit</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>, &amp;<a class=\"id\" href=\"#target\">target</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log_wait_commit\">log_wait_commit</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>, <a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * LVM calls this function before a (read-only) snapshot is created.  This</span>", 
"<span class=\"comment\"> * gives us a chance to flush the journal completely and mark the fs clean.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext3_freeze\">ext3_freeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now we set up the journal barrier. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_lock_updates\">journal_lock_updates</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We don't want to clear needs_recovery flag when we failed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to flush the journal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#journal_flush\">journal_flush</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Journal blocked and flushed, clear needs_recovery flag. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_CLEAR_INCOMPAT_FEATURE\">EXT3_CLEAR_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_unlock_updates\">journal_unlock_updates</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called by LVM after the snapshot is done.  We need to reset the RECOVER</span>", 
"<span class=\"comment\"> * flag here, even though the filesystem is not technically dirty yet.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext3_unfreeze\">ext3_unfreeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_super\">lock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reser the needs_recovery flag before the fs is unlocked. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SET_INCOMPAT_FEATURE\">EXT3_SET_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_FEATURE_INCOMPAT_RECOVER\">EXT3_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_commit_super\">ext3_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_unlock_updates\">journal_unlock_updates</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_remount\">ext3_remount</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, int * <a class=\"id\" href=\"#flags\">flags</a>, char * <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> * <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_mount_options\">ext3_mount_options</a> <a class=\"id\" href=\"#old_opts\">old_opts</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#enable_quota\">enable_quota</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Store the original options */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_super\">lock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow the \"check\" option to be passed as a remount option.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parse_options\">parse_options</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>, 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ABORT\">ABORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_abort\">ext3_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>, \"Abort forced by user\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; ~<a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) ? <a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a> : 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_init_journal_params\">ext3_init_journal_params</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"", 
"<span class=\"ts\"/>if ((*<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) != (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> &gt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ABORT\">ABORT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dquot_suspend\">dquot_suspend</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * First of all, the unconditional stuff we have to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to disable replay of the journal when we next remount</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * OK, test if we are remounting a valid rw partition</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * readonly, and if so set the rdonly flag and then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * mark the partition as valid again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> &amp; <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT3_VALID_FS\">EXT3_VALID_FS</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT3_VALID_FS\">EXT3_VALID_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_mark_recovery_complete\">ext3_mark_recovery_complete</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#EXT3_HAS_RO_COMPAT_FEATURE\">EXT3_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>~<a class=\"id\" href=\"#EXT3_FEATURE_RO_COMPAT_SUPP\">EXT3_FEATURE_RO_COMPAT_SUPP</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: couldn't remount RDWR \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"because of unsupported optional \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"features (%x)\", <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ret\">ret</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we have an unprocessed orphan list hanging</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * around from a previously readonly bdev mount,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * require a full umount/remount for now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"warning: couldn't \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"remount RDWR because of unprocessed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"orphan inode list.  Please \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"umount/remount instead.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Mounting a RDONLY partition read-write, so reread</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and store the current valid flag.  (It may have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * been changed by e2fsck since we originally mounted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the partition.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_clear_journal_err\">ext3_clear_journal_err</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_group_extend\">ext3_group_extend</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_setup_super\">ext3_setup_super</a> (<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &= ~<a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable_quota\">enable_quota</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Release old quota file names */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enable_quota\">enable_quota</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_resume\">dquot_resume</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1);", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#restore_opts\">restore_opts</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_statfs\">ext3_statfs</a> (struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstatfs\">kstatfs</a> * <a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_sb_info\">ext3_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_super_block\">ext3_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#fsid\">fsid</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a> = 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a> != <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_fsblk_t\">ext3_fsblk_t</a> <a class=\"id\" href=\"#overhead\">overhead</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_rmb\">smp_rmb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Compute the overhead (FS structures).  This is constant</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * for a given filesystem unless the number of block groups</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * changes so we cache the previous value until it does.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * All of the blocks before first_data_block are</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * overhead</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Add the overhead attributed to the superblock and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * block group descriptors.  If the sparse superblocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * feature is turned on, then not all groups have this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> += <a class=\"id\" href=\"#ext3_bg_has_super\">ext3_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_bg_num_gdb\">ext3_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Every block group has an inode bitmap, a block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bitmap, and an inode table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> += <a class=\"id\" href=\"#ngroups\">ngroups</a> * (2 + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a> = <a class=\"id\" href=\"#overhead\">overhead</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_type\">f_type</a> = <a class=\"id\" href=\"#EXT3_SUPER_MAGIC\">EXT3_SUPER_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bsize\">f_bsize</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_blocks\">f_blocks</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_count\">s_blocks_count</a>) - <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bavail\">f_bavail</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> - <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count\">s_r_blocks_count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_r_blocks_count\">s_r_blocks_count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bavail\">f_bavail</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_files\">f_files</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_ffree\">f_ffree</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_namelen\">f_namelen</a> = <a class=\"id\" href=\"#EXT3_NAME_LEN\">EXT3_NAME_LEN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsid\">fsid</a> = <a class=\"id\" href=\"#le64_to_cpup\">le64_to_cpup</a>((void *)<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a>) ^", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#le64_to_cpup\">le64_to_cpup</a>((void *)<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a> + sizeof(<a class=\"id\" href=\"#u64\">u64</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_fsid\">f_fsid</a>.<a class=\"id\" href=\"#val\">val</a>[0] = <a class=\"id\" href=\"#fsid\">fsid</a> &amp; 0xFFFFFFFFUL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_fsid\">f_fsid</a>.<a class=\"id\" href=\"#val\">val</a>[1] = (<a class=\"id\" href=\"#fsid\">fsid</a> >> 32) &amp; 0xFFFFFFFFUL;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Helper function for writing quotas on sync - we need to start transaction before quota file</span>", 
"<span class=\"comment\"> * is locked for write. Otherwise the are possible deadlocks:</span>", 
"<span class=\"comment\"> * Process 1                         Process 2</span>", 
"<span class=\"comment\"> * ext3_create()                     quota_sync()</span>", 
"<span class=\"comment\"> *   journal_start()                   write_dquot()</span>", 
"<span class=\"comment\"> *   dquot_initialize()                       down(dqio_mutex)</span>", 
"<span class=\"comment\"> *     down(dqio_mutex)                    journal_start()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>];", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_write_dquot\">ext3_write_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext3_journal_start\">ext3_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_QUOTA_TRANS_BLOCKS\">EXT3_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_commit\">dquot_commit</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_stop\">ext3_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_acquire_dquot\">ext3_acquire_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext3_journal_start\">ext3_journal_start</a>(<a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(<a class=\"id\" href=\"#dquot\">dquot</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_QUOTA_INIT_BLOCKS\">EXT3_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_acquire\">dquot_acquire</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_stop\">ext3_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_release_dquot\">ext3_release_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext3_journal_start\">ext3_journal_start</a>(<a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(<a class=\"id\" href=\"#dquot\">dquot</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_QUOTA_DEL_BLOCKS\">EXT3_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Release dquot anyway to avoid endless cycle in dqput() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_release\">dquot_release</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_release\">dquot_release</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_stop\">ext3_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_mark_dquot_dirty\">ext3_mark_dquot_dirty</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Are we journaling quotas? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>] ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_mark_dquot_dirty\">dquot_mark_dquot_dirty</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ext3_write_dquot\">ext3_write_dquot</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_mark_dquot_dirty\">dquot_mark_dquot_dirty</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext3_write_info\">ext3_write_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Data block + inode block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext3_journal_start\">ext3_journal_start</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, 2);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_commit_info\">dquot_commit_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_stop\">ext3_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Turn on quotas during mount time - we need to find</span>", 
"<span class=\"comment\"> * the quota file and such...</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext3_quota_on_mount\">ext3_quota_on_mount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_quota_on_mount\">dquot_quota_on_mount</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#type\">type</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Standard function to be called on quota_on</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext3_quota_on\">ext3_quota_on</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#kern_path\">kern_path</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>, &amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Quotafile not on the same filesystem? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_sb\">mnt_sb</a> != <a class=\"id\" href=\"#sb\">sb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EXDEV\">EXDEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Journaling quota? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#type\">type</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Quotafile not of fs root? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_parent\">d_parent</a> != <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: Quota file not on filesystem root. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Journaled quota will not work.\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When we journal data on quota file, we have to flush journal to see</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all updates to the file when we bypass pagecache...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_should_journal_data\">ext3_should_journal_data</a>(<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We don't need to lock updates but journal_flush() could</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * otherwise be livelocked...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_lock_updates\">journal_lock_updates</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#journal_flush\">journal_flush</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_unlock_updates\">journal_unlock_updates</a>(<a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dquot_quota_on_path\">dquot_quota_on_path</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#format_id\">format_id</a>, &amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Read data from quotafile - avoid pagecache and such because we cannot afford</span>", 
"<span class=\"comment\"> * acquiring the locks... As quota files are never truncated and quota code</span>", 
"<span class=\"comment\"> * itself serializes the operations (and noone else should touch the files)</span>", 
"<span class=\"comment\"> * we don't have to be afraid of races */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext3_quota_read\">ext3_quota_read</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, char *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#off\">off</a> >> <a class=\"id\" href=\"#EXT3_BLOCK_SIZE_BITS\">EXT3_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#off\">off</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#toread\">toread</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a> &gt; <a class=\"id\" href=\"#i_size\">i_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a>+<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#i_size\">i_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#i_size\">i_size</a>-<a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#toread\">toread</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#toread\">toread</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocopy\">tocopy</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#toread\">toread</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> : <a class=\"id\" href=\"#toread\">toread</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ext3_bread\">ext3_bread</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#blk\">blk</a>, 0, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/><span class=\"comment\">/* A hole? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#data\">data</a>, 0, <a class=\"id\" href=\"#tocopy\">tocopy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#tocopy\">tocopy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toread\">toread</a> -= <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk\">blk</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Write to quotafile (we know the transaction is already started and has</span>", 
"<span class=\"comment\"> * enough credits) */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext3_quota_write\">ext3_quota_write</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#off\">off</a> >> <a class=\"id\" href=\"#EXT3_BLOCK_SIZE_BITS\">EXT3_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#off\">off</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#journal_quota\">journal_quota</a> = <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#type\">type</a>] != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#journal_current_handle\">journal_current_handle</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#handle\">handle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"warning: quota write (off=%llu, len=%llu)\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" cancelled because transaction is not started.\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#off\">off</a>, (unsigned long long)<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since we account only one data block in transaction credits,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then it is impossible to cross a block boundary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_msg\">ext3_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"Quota write (off=%llu, len=%llu)\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" cancelled because not block aligned\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#off\">off</a>, (unsigned long long)<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_QUOTA\">I_MUTEX_QUOTA</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ext3_bread\">ext3_bread</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#blk\">blk</a>, 1, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_quota\">journal_quota</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_page\">b_page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_quota\">journal_quota</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_dirty_metadata\">ext3_journal_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Always do at least ordered writes for quotas */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext3_journal_dirty_data\">ext3_journal_dirty_data</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> &lt; <a class=\"id\" href=\"#off\">off</a> + <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#off\">off</a> + <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_version\">i_version</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_mark_inode_dirty\">ext3_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ext3_get_sb\">ext3_get_sb</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs_type\">fs_type</a>,", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>, const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>, void *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#get_sb_bdev\">get_sb_bdev</a>(<a class=\"id\" href=\"#fs_type\">fs_type</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#ext3_fill_super\">ext3_fill_super</a>, <a class=\"id\" href=\"#mnt\">mnt</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#ext3_fs_type\">ext3_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"ext3\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext3_get_sb\">ext3_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#kill_block_super\">kill_block_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fs_flags\">fs_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#FS_REQUIRES_DEV\">FS_REQUIRES_DEV</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_ext3_fs\">init_ext3_fs</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_ext3_xattr\">init_ext3_xattr</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_inodecache\">init_inodecache</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out1\">out1</a>;", 
"        <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#ext3_fs_type\">ext3_fs_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>();", 
"<a class=\"id\" href=\"#out1\">out1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_ext3_xattr\">exit_ext3_xattr</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#exit_ext3_fs\">exit_ext3_fs</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>(&amp;<a class=\"id\" href=\"#ext3_fs_type\">ext3_fs_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_ext3_xattr\">exit_ext3_xattr</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Remy Card, Stephen Tweedie, Andrew Morton, Andreas Dilger, Theodore Ts'o and others\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Second Extended Filesystem with journaling extensions\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#init_ext3_fs\">init_ext3_fs</a>)", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#exit_ext3_fs\">exit_ext3_fs</a>)", 
];
xr_frag_insert('l/12/2924fe0c502d0628f39265fb6fb249fc41afbb.xr', __xr_tmp);
