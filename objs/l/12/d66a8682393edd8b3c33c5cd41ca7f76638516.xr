var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * File:<span class=\"ts\"/>drivers/pci/pcie/aspm.c</span>", 
"<span class=\"comment\"> * Enabling PCIe link L0s/L1 state and Clock Power Management</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2007 Intel</span>", 
"<span class=\"comment\"> * Copyright (C) Zhang Yanmin (yanmin.zhang@intel.com)</span>", 
"<span class=\"comment\"> * Copyright (C) Shaohua Li (shaohua.li@intel.com)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#moduleparam\">moduleparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci_regs\">pci_regs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#aspm\">aspm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"../pci.h\"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#MODULE_PARAM_PREFIX\">MODULE_PARAM_PREFIX</a>", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#MODULE_PARAM_PREFIX\">MODULE_PARAM_PREFIX</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MODULE_PARAM_PREFIX\">MODULE_PARAM_PREFIX</a> \"pcie_aspm.\"", 
"", 
"<span class=\"comment\">/* Note: those are not register definitions */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ASPM_STATE_L0S_UP\">ASPM_STATE_L0S_UP</a><span class=\"ts\"/>(1)<span class=\"ts\"/><span class=\"comment\">/* Upstream direction L0s state */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ASPM_STATE_L0S_DW\">ASPM_STATE_L0S_DW</a><span class=\"ts\"/>(2)<span class=\"ts\"/><span class=\"comment\">/* Downstream direction L0s state */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a><span class=\"ts\"/><span class=\"ts\"/>(4)<span class=\"ts\"/><span class=\"comment\">/* L1 state */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ASPM_STATE_L0S\">ASPM_STATE_L0S</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ASPM_STATE_L0S_UP\">ASPM_STATE_L0S_UP</a> | <a class=\"id\" href=\"#ASPM_STATE_L0S_DW\">ASPM_STATE_L0S_DW</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ASPM_STATE_ALL\">ASPM_STATE_ALL</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#ASPM_STATE_L0S\">ASPM_STATE_L0S</a> | <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>)", 
"", 
"struct <a class=\"id\" href=\"#aspm_latency\">aspm_latency</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#l0s\">l0s</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* L0s latency (nsec) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#l1\">l1</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* L1 latency (nsec) */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Upstream component of the Link */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#root\">root</a>;<span class=\"ts\"/><span class=\"comment\">/* pointer to the root port link */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#parent\">parent</a>;<span class=\"ts\"/><span class=\"comment\">/* pointer to the parent Link state */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#sibling\">sibling</a>;<span class=\"ts\"/><span class=\"comment\">/* node in link_list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#children\">children</a>;<span class=\"ts\"/><span class=\"comment\">/* list of child link states */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#link\">link</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* node in parent's children list */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ASPM state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aspm_support\">aspm_support</a>:3;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Supported ASPM state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a>:3;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enabled ASPM state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aspm_capable\">aspm_capable</a>:3;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Capable ASPM state with latency */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aspm_default\">aspm_default</a>:3;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Default ASPM state by BIOS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#aspm_disable\">aspm_disable</a>:3;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disabled ASPM state */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clock PM state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#clkpm_capable\">clkpm_capable</a>:1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clock PM capable? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#clkpm_enabled\">clkpm_enabled</a>:1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Current Clock PM state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#clkpm_default\">clkpm_default</a>:1;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Default Clock PM state by BIOS */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Exit latencies */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aspm_latency\">aspm_latency</a> <a class=\"id\" href=\"#latency_up\">latency_up</a>;<span class=\"ts\"/><span class=\"comment\">/* Upstream direction exit latency */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aspm_latency\">aspm_latency</a> <a class=\"id\" href=\"#latency_dw\">latency_dw</a>;<span class=\"ts\"/><span class=\"comment\">/* Downstream direction exit latency */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Endpoint acceptable latencies. A pcie downstream port only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * has one slot under it, so at most there are 8 functions.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aspm_latency\">aspm_latency</a> <a class=\"id\" href=\"#acceptable\">acceptable</a>[8];", 
"};", 
"", 
"static int <a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a>, <a class=\"id\" href=\"#aspm_force\">aspm_force</a>;", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#link_list\">link_list</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLICY_DEFAULT\">POLICY_DEFAULT</a> 0<span class=\"ts\"/><span class=\"comment\">/* BIOS default setting */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLICY_PERFORMANCE\">POLICY_PERFORMANCE</a> 1<span class=\"ts\"/><span class=\"comment\">/* high performance */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POLICY_POWERSAVE\">POLICY_POWERSAVE</a> 2<span class=\"ts\"/><span class=\"comment\">/* high power saving */</span>", 
"static int <a class=\"id\" href=\"#aspm_policy\">aspm_policy</a>;", 
"static const char *<a class=\"id\" href=\"#policy_str\">policy_str</a>[] = {", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#POLICY_DEFAULT\">POLICY_DEFAULT</a>] = \"default\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#POLICY_PERFORMANCE\">POLICY_PERFORMANCE</a>] = \"performance\",", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#POLICY_POWERSAVE\">POLICY_POWERSAVE</a>] = \"powersave\"", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LINK_RETRAIN_TIMEOUT\">LINK_RETRAIN_TIMEOUT</a> <a class=\"id\" href=\"#HZ\">HZ</a>", 
"", 
"static int <a class=\"id\" href=\"#policy_to_aspm_state\">policy_to_aspm_state</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#aspm_policy\">aspm_policy</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#POLICY_PERFORMANCE\">POLICY_PERFORMANCE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disable ASPM and Clock PM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#POLICY_POWERSAVE\">POLICY_POWERSAVE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enable ASPM L0s/L1 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ASPM_STATE_ALL\">ASPM_STATE_ALL</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#POLICY_DEFAULT\">POLICY_DEFAULT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_default\">aspm_default</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#policy_to_clkpm_state\">policy_to_clkpm_state</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#aspm_policy\">aspm_policy</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#POLICY_PERFORMANCE\">POLICY_PERFORMANCE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disable ASPM and Clock PM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#POLICY_POWERSAVE\">POLICY_POWERSAVE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disable Clock PM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#POLICY_DEFAULT\">POLICY_DEFAULT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_default\">clkpm_default</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_set_clkpm_nocheck\">pcie_set_clkpm_nocheck</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>, int <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#linkbus\">linkbus</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#enable\">enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> |= <a class=\"id\" href=\"#PCI_EXP_LNKCTL_CLKREQ_EN\">PCI_EXP_LNKCTL_CLKREQ_EN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> &= ~<a class=\"id\" href=\"#PCI_EXP_LNKCTL_CLKREQ_EN\">PCI_EXP_LNKCTL_CLKREQ_EN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_enabled\">clkpm_enabled</a> = !!<a class=\"id\" href=\"#enable\">enable</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_set_clkpm\">pcie_set_clkpm</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>, int <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't enable Clock PM if the link is not Clock PM capable */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_capable\">clkpm_capable</a> && <a class=\"id\" href=\"#enable\">enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/* Need nothing if the specified equals to current state */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_enabled\">clkpm_enabled</a> == <a class=\"id\" href=\"#enable\">enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_set_clkpm_nocheck\">pcie_set_clkpm_nocheck</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#enable\">enable</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_clkpm_cap_init\">pcie_clkpm_cap_init</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>, int <a class=\"id\" href=\"#blacklist\">blacklist</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#capable\">capable</a> = 1, <a class=\"id\" href=\"#enabled\">enabled</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#linkbus\">linkbus</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* All functions should have the same cap and state, take the worst */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCAP\">PCI_EXP_LNKCAP</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKCAP_CLKPM\">PCI_EXP_LNKCAP_CLKPM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#capable\">capable</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enabled\">enabled</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKCTL_CLKREQ_EN\">PCI_EXP_LNKCTL_CLKREQ_EN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enabled\">enabled</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_enabled\">clkpm_enabled</a> = <a class=\"id\" href=\"#enabled\">enabled</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_default\">clkpm_default</a> = <a class=\"id\" href=\"#enabled\">enabled</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_capable\">clkpm_capable</a> = (<a class=\"id\" href=\"#blacklist\">blacklist</a>) ? 0 : <a class=\"id\" href=\"#capable\">capable</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pcie_aspm_configure_common_clock: check if the 2 ends of a link</span>", 
"<span class=\"comment\"> *   could use common clock. If they are, configure them to use the</span>", 
"<span class=\"comment\"> *   common clock. That will reduce the ASPM state exit latency.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pcie_aspm_configure_common_clock\">pcie_aspm_configure_common_clock</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#cpos\">cpos</a>, <a class=\"id\" href=\"#same_clock\">same_clock</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>, <a class=\"id\" href=\"#parent_reg\">parent_reg</a>, <a class=\"id\" href=\"#child_reg\">child_reg</a>[8];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_jiffies\">start_jiffies</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#child\">child</a>, *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#linkbus\">linkbus</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All functions of a slot should have the same Slot Clock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Configuration, so just check one function</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>.<a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#child\">child</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check downstream component if bit Slot Clock Configuration is 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpos\">cpos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#cpos\">cpos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKSTA\">PCI_EXP_LNKSTA</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKSTA_SLC\">PCI_EXP_LNKSTA_SLC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#same_clock\">same_clock</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check upstream component if bit Slot Clock Configuration is 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#ppos\">ppos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKSTA\">PCI_EXP_LNKSTA</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKSTA_SLC\">PCI_EXP_LNKSTA_SLC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#same_clock\">same_clock</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Configure downstream component, all functions */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpos\">cpos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#cpos\">cpos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child_reg\">child_reg</a>[<a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#devfn\">devfn</a>)] = <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#same_clock\">same_clock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> |= <a class=\"id\" href=\"#PCI_EXP_LNKCTL_CCC\">PCI_EXP_LNKCTL_CCC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> &= ~<a class=\"id\" href=\"#PCI_EXP_LNKCTL_CCC\">PCI_EXP_LNKCTL_CCC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#cpos\">cpos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Configure upstream component */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#ppos\">ppos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent_reg\">parent_reg</a> = <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#same_clock\">same_clock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> |= <a class=\"id\" href=\"#PCI_EXP_LNKCTL_CCC\">PCI_EXP_LNKCTL_CCC</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> &= ~<a class=\"id\" href=\"#PCI_EXP_LNKCTL_CCC\">PCI_EXP_LNKCTL_CCC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#ppos\">ppos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Retrain link */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> |= <a class=\"id\" href=\"#PCI_EXP_LNKCTL_RL\">PCI_EXP_LNKCTL_RL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#ppos\">ppos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait for link training end. Break out after waiting for timeout */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start_jiffies\">start_jiffies</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#ppos\">ppos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKSTA\">PCI_EXP_LNKSTA</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKSTA_LT\">PCI_EXP_LNKSTA_LT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#start_jiffies\">start_jiffies</a> + <a class=\"id\" href=\"#LINK_RETRAIN_TIMEOUT\">LINK_RETRAIN_TIMEOUT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKSTA_LT\">PCI_EXP_LNKSTA_LT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Training failed. Restore common clock configurations */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"ASPM: Could not configure common clock\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpos\">cpos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#cpos\">cpos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#child_reg\">child_reg</a>[<a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#devfn\">devfn</a>)]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#ppos\">ppos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, <a class=\"id\" href=\"#parent_reg\">parent_reg</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Convert L0s latency encoding to ns */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#calc_l0s_latency\">calc_l0s_latency</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#encoding\">encoding</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#encoding\">encoding</a> == 0x7)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (5 * 1000);<span class=\"ts\"/><span class=\"comment\">/* &gt; 4us */</span>", 
"<span class=\"ts\"/>return (64 << <a class=\"id\" href=\"#encoding\">encoding</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Convert L0s acceptable latency encoding to ns */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#calc_l0s_acceptable\">calc_l0s_acceptable</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#encoding\">encoding</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#encoding\">encoding</a> == 0x7)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1U;", 
"<span class=\"ts\"/>return (64 << <a class=\"id\" href=\"#encoding\">encoding</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Convert L1 latency encoding to ns */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#calc_l1_latency\">calc_l1_latency</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#encoding\">encoding</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#encoding\">encoding</a> == 0x7)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (65 * 1000);<span class=\"ts\"/><span class=\"comment\">/* &gt; 64us */</span>", 
"<span class=\"ts\"/>return (1000 << <a class=\"id\" href=\"#encoding\">encoding</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Convert L1 acceptable latency encoding to ns */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#calc_l1_acceptable\">calc_l1_acceptable</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#encoding\">encoding</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#encoding\">encoding</a> == 0x7)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1U;", 
"<span class=\"ts\"/>return (1000 << <a class=\"id\" href=\"#encoding\">encoding</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#aspm_register_info\">aspm_register_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#support\">support</a>:2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#enabled\">enabled</a>:2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#latency_encoding_l0s\">latency_encoding_l0s</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#latency_encoding_l1\">latency_encoding_l1</a>;", 
"};", 
"", 
"static void <a class=\"id\" href=\"#pcie_get_aspm_reg\">pcie_get_aspm_reg</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#aspm_register_info\">aspm_register_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCAP\">PCI_EXP_LNKCAP</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#support\">support</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKCAP_ASPMS\">PCI_EXP_LNKCAP_ASPMS</a>) >> 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#latency_encoding_l0s\">latency_encoding_l0s</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKCAP_L0SEL\">PCI_EXP_LNKCAP_L0SEL</a>) >> 12;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#latency_encoding_l1\">latency_encoding_l1</a>  = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKCAP_L1EL\">PCI_EXP_LNKCAP_L1EL</a>) >> 15;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#enabled\">enabled</a> = <a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_LNKCTL_ASPMC\">PCI_EXP_LNKCTL_ASPMC</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_aspm_check_latency\">pcie_aspm_check_latency</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#endpoint\">endpoint</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#latency\">latency</a>, <a class=\"id\" href=\"#l1_switch_latency\">l1_switch_latency</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aspm_latency\">aspm_latency</a> *<a class=\"id\" href=\"#acceptable\">acceptable</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Device not in D0 doesn't need latency check */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#endpoint\">endpoint</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#endpoint\">endpoint</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#endpoint\">endpoint</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acceptable\">acceptable</a> = &amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#acceptable\">acceptable</a>[<a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#endpoint\">endpoint</a>-><a class=\"id\" href=\"#devfn\">devfn</a>)];", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#link\">link</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check upstream direction L0s latency */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L0S_UP\">ASPM_STATE_L0S_UP</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_up\">latency_up</a>.<a class=\"id\" href=\"#l0s\">l0s</a> &gt; <a class=\"id\" href=\"#acceptable\">acceptable</a>-><a class=\"id\" href=\"#l0s\">l0s</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> &= ~<a class=\"id\" href=\"#ASPM_STATE_L0S_UP\">ASPM_STATE_L0S_UP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check downstream direction L0s latency */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L0S_DW\">ASPM_STATE_L0S_DW</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_dw\">latency_dw</a>.<a class=\"id\" href=\"#l0s\">l0s</a> &gt; <a class=\"id\" href=\"#acceptable\">acceptable</a>-><a class=\"id\" href=\"#l0s\">l0s</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> &= ~<a class=\"id\" href=\"#ASPM_STATE_L0S_DW\">ASPM_STATE_L0S_DW</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Check L1 latency.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Every switch on the path to root complex need 1</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * more microsecond for L1. Spec doesn't mention L0s.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#latency\">latency</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_up\">latency_up</a>.<a class=\"id\" href=\"#l1\">l1</a>, <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_dw\">latency_dw</a>.<a class=\"id\" href=\"#l1\">l1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#latency\">latency</a> + <a class=\"id\" href=\"#l1_switch_latency\">l1_switch_latency</a> &gt; <a class=\"id\" href=\"#acceptable\">acceptable</a>-><a class=\"id\" href=\"#l1\">l1</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> &= ~<a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l1_switch_latency\">l1_switch_latency</a> += 1000;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_aspm_cap_init\">pcie_aspm_cap_init</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>, int <a class=\"id\" href=\"#blacklist\">blacklist</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#child\">child</a>, *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#linkbus\">linkbus</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aspm_register_info\">aspm_register_info</a> <a class=\"id\" href=\"#upreg\">upreg</a>, <a class=\"id\" href=\"#dwreg\">dwreg</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blacklist\">blacklist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set enabled/disable so that we will disable ASPM later */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a> = <a class=\"id\" href=\"#ASPM_STATE_ALL\">ASPM_STATE_ALL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_disable\">aspm_disable</a> = <a class=\"id\" href=\"#ASPM_STATE_ALL\">ASPM_STATE_ALL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Configure common clock before checking latencies */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_aspm_configure_common_clock\">pcie_aspm_configure_common_clock</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get upstream/downstream components' register state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_get_aspm_reg\">pcie_get_aspm_reg</a>(<a class=\"id\" href=\"#parent\">parent</a>, &amp;<a class=\"id\" href=\"#upreg\">upreg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>.<a class=\"id\" href=\"#next\">next</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_get_aspm_reg\">pcie_get_aspm_reg</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#dwreg\">dwreg</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Setup L0s state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that we must not enable L0s in either direction on a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * given link unless components on both sides of the link each</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * support L0s.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dwreg\">dwreg</a>.<a class=\"id\" href=\"#support\">support</a> &amp; <a class=\"id\" href=\"#upreg\">upreg</a>.<a class=\"id\" href=\"#support\">support</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L0S\">PCIE_LINK_STATE_L0S</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_support\">aspm_support</a> |= <a class=\"id\" href=\"#ASPM_STATE_L0S\">ASPM_STATE_L0S</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dwreg\">dwreg</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L0S\">PCIE_LINK_STATE_L0S</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a> |= <a class=\"id\" href=\"#ASPM_STATE_L0S_UP\">ASPM_STATE_L0S_UP</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#upreg\">upreg</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L0S\">PCIE_LINK_STATE_L0S</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a> |= <a class=\"id\" href=\"#ASPM_STATE_L0S_DW\">ASPM_STATE_L0S_DW</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_up\">latency_up</a>.<a class=\"id\" href=\"#l0s\">l0s</a> = <a class=\"id\" href=\"#calc_l0s_latency\">calc_l0s_latency</a>(<a class=\"id\" href=\"#upreg\">upreg</a>.<a class=\"id\" href=\"#latency_encoding_l0s\">latency_encoding_l0s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_dw\">latency_dw</a>.<a class=\"id\" href=\"#l0s\">l0s</a> = <a class=\"id\" href=\"#calc_l0s_latency\">calc_l0s_latency</a>(<a class=\"id\" href=\"#dwreg\">dwreg</a>.<a class=\"id\" href=\"#latency_encoding_l0s\">latency_encoding_l0s</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup L1 state */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#upreg\">upreg</a>.<a class=\"id\" href=\"#support\">support</a> &amp; <a class=\"id\" href=\"#dwreg\">dwreg</a>.<a class=\"id\" href=\"#support\">support</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L1\">PCIE_LINK_STATE_L1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_support\">aspm_support</a> |= <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#upreg\">upreg</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; <a class=\"id\" href=\"#dwreg\">dwreg</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L1\">PCIE_LINK_STATE_L1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a> |= <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_up\">latency_up</a>.<a class=\"id\" href=\"#l1\">l1</a> = <a class=\"id\" href=\"#calc_l1_latency\">calc_l1_latency</a>(<a class=\"id\" href=\"#upreg\">upreg</a>.<a class=\"id\" href=\"#latency_encoding_l1\">latency_encoding_l1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#latency_dw\">latency_dw</a>.<a class=\"id\" href=\"#l1\">l1</a> = <a class=\"id\" href=\"#calc_l1_latency\">calc_l1_latency</a>(<a class=\"id\" href=\"#dwreg\">dwreg</a>.<a class=\"id\" href=\"#latency_encoding_l1\">latency_encoding_l1</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Save default state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_default\">aspm_default</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup initial capable state. Will be updated later */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_support\">aspm_support</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the downstream component has pci bridge function, don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * do ASPM for now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_PCI_BRIDGE\">PCI_EXP_TYPE_PCI_BRIDGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_disable\">aspm_disable</a> = <a class=\"id\" href=\"#ASPM_STATE_ALL\">ASPM_STATE_ALL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get and check endpoint acceptable latencies */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>, <a class=\"id\" href=\"#encoding\">encoding</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#aspm_latency\">aspm_latency</a> *<a class=\"id\" href=\"#acceptable\">acceptable</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#acceptable\">acceptable</a>[<a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#devfn\">devfn</a>)];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_ENDPOINT\">PCI_EXP_TYPE_ENDPOINT</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_LEG_END\">PCI_EXP_TYPE_LEG_END</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_DEVCAP\">PCI_EXP_DEVCAP</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Calculate endpoint L0s acceptable latency */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#encoding\">encoding</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_DEVCAP_L0S\">PCI_EXP_DEVCAP_L0S</a>) >> 6;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acceptable\">acceptable</a>-><a class=\"id\" href=\"#l0s\">l0s</a> = <a class=\"id\" href=\"#calc_l0s_acceptable\">calc_l0s_acceptable</a>(<a class=\"id\" href=\"#encoding\">encoding</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Calculate endpoint L1 acceptable latency */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#encoding\">encoding</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_DEVCAP_L1\">PCI_EXP_DEVCAP_L1</a>) >> 9;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acceptable\">acceptable</a>-><a class=\"id\" href=\"#l1\">l1</a> = <a class=\"id\" href=\"#calc_l1_acceptable\">calc_l1_acceptable</a>(<a class=\"id\" href=\"#encoding\">encoding</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_aspm_check_latency\">pcie_aspm_check_latency</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_config_aspm_dev\">pcie_config_aspm_dev</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> &= ~0x3;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> |= <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_config_aspm_link\">pcie_config_aspm_link</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#upstream\">upstream</a> = 0, <a class=\"id\" href=\"#dwstream\">dwstream</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#child\">child</a>, *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#linkbus\">linkbus</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Nothing to do if the link is already in the requested state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> &= (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> &amp; ~<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_disable\">aspm_disable</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a> == <a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert ASPM state to upstream/downstream ASPM register state */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L0S_UP\">ASPM_STATE_L0S_UP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dwstream\">dwstream</a> |= <a class=\"id\" href=\"#PCIE_LINK_STATE_L0S\">PCIE_LINK_STATE_L0S</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L0S_DW\">ASPM_STATE_L0S_DW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upstream\">upstream</a> |= <a class=\"id\" href=\"#PCIE_LINK_STATE_L0S\">PCIE_LINK_STATE_L0S</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upstream\">upstream</a> |= <a class=\"id\" href=\"#PCIE_LINK_STATE_L1\">PCIE_LINK_STATE_L1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dwstream\">dwstream</a> |= <a class=\"id\" href=\"#PCIE_LINK_STATE_L1\">PCIE_LINK_STATE_L1</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Spec 2.0 suggests all functions should be configured the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * same setting for ASPM. Enabling ASPM L1 should be done in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * upstream component first and then downstream, and vice</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * versa for disabling ASPM L1. Spec doesn't mention L0S.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_dev\">pcie_config_aspm_dev</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#upstream\">upstream</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_dev\">pcie_config_aspm_dev</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#dwstream\">dwstream</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_dev\">pcie_config_aspm_dev</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#upstream\">upstream</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pcie_config_aspm_path\">pcie_config_aspm_path</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#link\">link</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_link\">pcie_config_aspm_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#policy_to_aspm_state\">policy_to_aspm_state</a>(<a class=\"id\" href=\"#link\">link</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_link_state\">free_link_state</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pcie_aspm_sanity_check\">pcie_aspm_sanity_check</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some functions in a slot might not all be PCIe functions,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * very strange. Disable ASPM for the whole slot</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Disable ASPM for pre-1.1 PCIe device, we follow MS to use</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * RBER bit to determine if a function is 1.1 version device</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_DEVCAP\">PCI_EXP_DEVCAP</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_DEVCAP_RBER\">PCI_EXP_DEVCAP_RBER</a>) && !<a class=\"id\" href=\"#aspm_force\">aspm_force</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, &amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"disabling ASPM\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" on pre-1.1 PCIe device.  You can enable it\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" with 'pcie_aspm=force'\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#alloc_pcie_link_state\">alloc_pcie_link_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#link\">link</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sibling\">sibling</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#children\">children</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#self\">self</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#children\">children</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup a pointer to the root port link */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#root\">root</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sibling\">sibling</a>, &amp;<a class=\"id\" href=\"#link_list\">link_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a> = <a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#link\">link</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pcie_aspm_init_link_state: Initiate PCI express link state.</span>", 
"<span class=\"comment\"> * It is called after the pcie and its children devices are scaned.</span>", 
"<span class=\"comment\"> * @pdev: the root port or switch downstream port</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pcie_aspm_init_link_state\">pcie_aspm_init_link_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blacklist\">blacklist</a> = !!<a class=\"id\" href=\"#pcie_aspm_sanity_check\">pcie_aspm_sanity_check</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a> || !<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) || <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* VIA has a strange chipset, root port is under a bridge */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>-><a class=\"id\" href=\"#devices\">devices</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#alloc_pcie_link_state\">alloc_pcie_link_state</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock\">unlock</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Setup initial ASPM state. Note that we need to configure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * upstream links also because capable state of them can be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * update through pcie_aspm_cap_init().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_aspm_cap_init\">pcie_aspm_cap_init</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#blacklist\">blacklist</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Setup initial Clock PM state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_clkpm_cap_init\">pcie_clkpm_cap_init</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#blacklist\">blacklist</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * At this stage drivers haven't had an opportunity to change the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * link policy setting. Enabling ASPM on broken hardware can cripple</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it even before the driver has had a chance to disable ASPM, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * default to a safe level right now. If we're enabling ASPM beyond</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the BIOS's expectation, we'll do so once pci_enable_device() is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * called.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aspm_policy\">aspm_policy</a> != <a class=\"id\" href=\"#POLICY_POWERSAVE\">POLICY_POWERSAVE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_path\">pcie_config_aspm_path</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_set_clkpm\">pcie_set_clkpm</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#policy_to_clkpm_state\">policy_to_clkpm_state</a>(<a class=\"id\" href=\"#link\">link</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#unlock\">unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Recheck latencies and update aspm_capable for links under the root */</span>", 
"static void <a class=\"id\" href=\"#pcie_update_aspm_capable\">pcie_update_aspm_capable</a>(struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#root\">root</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#link_list\">link_list</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#root\">root</a> != <a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_capable\">aspm_capable</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_support\">aspm_support</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#link_list\">link_list</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#linkbus\">linkbus</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#root\">root</a> != <a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#linkbus\">linkbus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_ENDPOINT\">PCI_EXP_TYPE_ENDPOINT</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_LEG_END\">PCI_EXP_TYPE_LEG_END</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_aspm_check_latency\">pcie_aspm_check_latency</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* @pdev: the endpoint device */</span>", 
"void <a class=\"id\" href=\"#pcie_aspm_exit_link_state\">pcie_aspm_exit_link_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>, *<a class=\"id\" href=\"#root\">root</a>, *<a class=\"id\" href=\"#parent_link\">parent_link</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a> || !<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#parent\">parent</a> || !<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#link_state\">link_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All PCIe functions are in one slot, remove one function will remove</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the whole slot, so just wait until we are the last function left.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_is_last\">list_is_last</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus_list\">bus_list</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>-><a class=\"id\" href=\"#devices\">devices</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parent_link\">parent_link</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* All functions are removed, so just disable ASPM for the link */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_link\">pcie_config_aspm_link</a>(<a class=\"id\" href=\"#link\">link</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#sibling\">sibling</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Clock PM is for endpoint device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_link_state\">free_link_state</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Recheck latencies and configure upstream links */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent_link\">parent_link</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_update_aspm_capable\">pcie_update_aspm_capable</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_path\">pcie_config_aspm_path</a>(<a class=\"id\" href=\"#parent_link\">parent_link</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"}", 
"", 
"<span class=\"comment\">/* @pdev: the root port or switch downstream port */</span>", 
"void <a class=\"id\" href=\"#pcie_aspm_pm_state_change\">pcie_aspm_pm_state_change</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a> || !<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) || !<a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Devices changed PM state, we should recheck if latency</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * meets all functions' requirement</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_update_aspm_capable\">pcie_update_aspm_capable</a>(<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_path\">pcie_config_aspm_path</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * pci_disable_link_state - disable pci device's link state, so the link will</span>", 
"<span class=\"comment\"> * never enter specific states</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_disable_link_state\">pci_disable_link_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, int <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a> || !<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#pdev\">pdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#pdev\">pdev</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a> || !<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#link_state\">link_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L0S\">PCIE_LINK_STATE_L0S</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_disable\">aspm_disable</a> |= <a class=\"id\" href=\"#ASPM_STATE_L0S\">ASPM_STATE_L0S</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L1\">PCIE_LINK_STATE_L1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#aspm_disable\">aspm_disable</a> |= <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_link\">pcie_config_aspm_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#policy_to_aspm_state\">policy_to_aspm_state</a>(<a class=\"id\" href=\"#link\">link</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_CLKPM\">PCIE_LINK_STATE_CLKPM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#clkpm_capable\">clkpm_capable</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_set_clkpm\">pcie_set_clkpm</a>(<a class=\"id\" href=\"#link\">link</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_disable_link_state\">pci_disable_link_state</a>);", 
"", 
"static int <a class=\"id\" href=\"#pcie_aspm_set_policy\">pcie_aspm_set_policy</a>(const char *<a class=\"id\" href=\"#val\">val</a>, struct <a class=\"id\" href=\"#kernel_param\">kernel_param</a> *<a class=\"id\" href=\"#kp\">kp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#policy_str\">policy_str</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#policy_str\">policy_str</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#policy_str\">policy_str</a>[<a class=\"id\" href=\"#i\">i</a>])))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#policy_str\">policy_str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#aspm_policy\">aspm_policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aspm_policy\">aspm_policy</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#link_list\">link_list</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_link\">pcie_config_aspm_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#policy_to_aspm_state\">policy_to_aspm_state</a>(<a class=\"id\" href=\"#link\">link</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_set_clkpm\">pcie_set_clkpm</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#policy_to_clkpm_state\">policy_to_clkpm_state</a>(<a class=\"id\" href=\"#link\">link</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pcie_aspm_get_policy\">pcie_aspm_get_policy</a>(char *<a class=\"id\" href=\"#buffer\">buffer</a>, struct <a class=\"id\" href=\"#kernel_param\">kernel_param</a> *<a class=\"id\" href=\"#kp\">kp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#cnt\">cnt</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#policy_str\">policy_str</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#aspm_policy\">aspm_policy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#cnt\">cnt</a>, \"[%s] \", <a class=\"id\" href=\"#policy_str\">policy_str</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#cnt\">cnt</a>, \"%s \", <a class=\"id\" href=\"#policy_str\">policy_str</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#module_param_call\">module_param_call</a>(<a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#pcie_aspm_set_policy\">pcie_aspm_set_policy</a>, <a class=\"id\" href=\"#pcie_aspm_get_policy\">pcie_aspm_get_policy</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>, 0644);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCIEASPM_DEBUG\">CONFIG_PCIEASPM_DEBUG</a>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#link_state_show\">link_state_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_device\">pci_device</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link_state\">link_state</a> = <a class=\"id\" href=\"#pci_device\">pci_device</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#link_state\">link_state</a>-><a class=\"id\" href=\"#aspm_enabled\">aspm_enabled</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#link_state_store\">link_state_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link\">link</a>, *<a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a>-><a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#buf\">buf</a>[0] - '0', <a class=\"id\" href=\"#state\">state</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &lt; 1 || <a class=\"id\" href=\"#val\">val</a> &gt; 3)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert requested state to ASPM state */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L0S\">PCIE_LINK_STATE_L0S</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#ASPM_STATE_L0S\">ASPM_STATE_L0S</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#PCIE_LINK_STATE_L1\">PCIE_LINK_STATE_L1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#ASPM_STATE_L1\">ASPM_STATE_L1</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#link\">link</a>, &amp;<a class=\"id\" href=\"#link_list\">link_list</a>, <a class=\"id\" href=\"#sibling\">sibling</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#root\">root</a> != <a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_config_aspm_link\">pcie_config_aspm_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#clk_ctl_show\">clk_ctl_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_device\">pci_device</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link_state\">link_state</a> = <a class=\"id\" href=\"#pci_device\">pci_device</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%d\\n\", <a class=\"id\" href=\"#link_state\">link_state</a>-><a class=\"id\" href=\"#clkpm_enabled\">clkpm_enabled</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#clk_ctl_store\">clk_ctl_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &lt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#buf\">buf</a>[0]-'0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_set_clkpm_nocheck\">pcie_set_clkpm_nocheck</a>(<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a>, !!<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#aspm_lock\">aspm_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#link_state\">link_state</a>, 0644, <a class=\"id\" href=\"#link_state_show\">link_state_show</a>, <a class=\"id\" href=\"#link_state_store\">link_state_store</a>);", 
"static <a class=\"id\" href=\"#DEVICE_ATTR\">DEVICE_ATTR</a>(<a class=\"id\" href=\"#clk_ctl\">clk_ctl</a>, 0644, <a class=\"id\" href=\"#clk_ctl_show\">clk_ctl_show</a>, <a class=\"id\" href=\"#clk_ctl_store\">clk_ctl_store</a>);", 
"", 
"static char <a class=\"id\" href=\"#power_group\">power_group</a>[] = \"power\";", 
"void <a class=\"id\" href=\"#pcie_aspm_create_sysfs_dev_files\">pcie_aspm_create_sysfs_dev_files</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link_state\">link_state</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a> &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>) || !<a class=\"id\" href=\"#link_state\">link_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link_state\">link_state</a>-><a class=\"id\" href=\"#aspm_support\">aspm_support</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_add_file_to_group\">sysfs_add_file_to_group</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_link_state\">dev_attr_link_state</a>.<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#power_group\">power_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link_state\">link_state</a>-><a class=\"id\" href=\"#clkpm_capable\">clkpm_capable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_add_file_to_group\">sysfs_add_file_to_group</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_clk_ctl\">dev_attr_clk_ctl</a>.<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#power_group\">power_group</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#pcie_aspm_remove_sysfs_dev_files\">pcie_aspm_remove_sysfs_dev_files</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pcie_link_state\">pcie_link_state</a> *<a class=\"id\" href=\"#link_state\">link_state</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#link_state\">link_state</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#pdev\">pdev</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a> &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> != <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>) || !<a class=\"id\" href=\"#link_state\">link_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link_state\">link_state</a>-><a class=\"id\" href=\"#aspm_support\">aspm_support</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_file_from_group\">sysfs_remove_file_from_group</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_link_state\">dev_attr_link_state</a>.<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#power_group\">power_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#link_state\">link_state</a>-><a class=\"id\" href=\"#clkpm_capable\">clkpm_capable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_file_from_group\">sysfs_remove_file_from_group</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#dev_attr_clk_ctl\">dev_attr_clk_ctl</a>.<a class=\"id\" href=\"#attr\">attr</a>, <a class=\"id\" href=\"#power_group\">power_group</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pcie_aspm_disable\">pcie_aspm_disable</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"off\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"PCIe ASPM is disabled\\n\");", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"force\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aspm_force\">aspm_force</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"PCIe ASPM is forcedly enabled\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"pcie_aspm=\", <a class=\"id\" href=\"#pcie_aspm_disable\">pcie_aspm_disable</a>);", 
"", 
"void <a class=\"id\" href=\"#pcie_no_aspm\">pcie_no_aspm</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#aspm_force\">aspm_force</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a> = 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pcie_aspm_enabled - is PCIe ASPM enabled?</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns true if ASPM has not been disabled by the command-line option</span>", 
"<span class=\"comment\"> * pcie_aspm=off.</span>", 
"<span class=\"comment\"> **/</span>", 
"int <a class=\"id\" href=\"#pcie_aspm_enabled\">pcie_aspm_enabled</a>(void)", 
"{", 
"       return !<a class=\"id\" href=\"#aspm_disabled\">aspm_disabled</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pcie_aspm_enabled\">pcie_aspm_enabled</a>);", 
"", 
];
xr_frag_insert('l/12/d66a8682393edd8b3c33c5cd41ca7f76638516.xr', __xr_tmp);
