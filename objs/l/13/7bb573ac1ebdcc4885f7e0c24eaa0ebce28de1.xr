var __xr_tmp = [
"<span class=\"comment\">         * We do not lock all allocations via s_resize_lock</span>", 
"<span class=\"comment\">         * so we have to be safe wrt. concurrent accesses the group</span>", 
"<span class=\"comment\">         * data.  So we need to be careful to set all of the relevant</span>", 
"<span class=\"comment\">         * group descriptor data etc. *before* we enable the group.</span>", 
"<span class=\"comment\">         *</span>", 
"<span class=\"comment\">         * The key field here is sbi-&gt;s_groups_count: as long as</span>", 
"<span class=\"comment\">         * that retains its old value, nobody is going to access the new</span>", 
"<span class=\"comment\">         * group.</span>", 
"<span class=\"comment\">         *</span>", 
"<span class=\"comment\">         * So first we update all the descriptor metadata for the new</span>", 
"<span class=\"comment\">         * group; then we update the total disk blocks count; then we</span>", 
"<span class=\"comment\">         * update the groups count to enable the group; then finally we</span>", 
"<span class=\"comment\">         * update the free space counts so that the system can start</span>", 
"<span class=\"comment\">         * using the new disk blocks.</span>", 
"<span class=\"comment\">         */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update group descriptor block for new group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = (struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *)((char *)<a class=\"id\" href=\"#primary\">primary</a>-><a class=\"id\" href=\"#b_data\">b_data</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#gdb_off\">gdb_off</a> * <a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#gdp\">gdp</a>, 0, <a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_block_bitmap_set\">ext4_block_bitmap_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#block_bitmap\">block_bitmap</a>); <span class=\"comment\">/* LV FIXME */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_inode_bitmap_set\">ext4_inode_bitmap_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_bitmap\">inode_bitmap</a>); <span class=\"comment\">/* LV FIXME */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_inode_table_set\">ext4_inode_table_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#inode_table\">inode_table</a>); <span class=\"comment\">/* LV FIXME */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blks_set\">ext4_free_blks_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_inodes_set\">ext4_free_inodes_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_flags\">bg_flags</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_BG_INODE_ZEROED\">EXT4_BG_INODE_ZEROED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_checksum\">bg_checksum</a> = <a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can allocate memory for mb_alloc based on the new group</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * descriptor</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_mb_add_groupinfo\">ext4_mb_add_groupinfo</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_journal\">exit_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make the new blocks and inodes valid next.  We do this before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * increasing the group count so that once the group is enabled,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all of its blocks and inodes are already valid.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We always allocate group-by-group, then block-by-block or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inode-by-inode within a group, so enabling these</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blocks/inodes before the group is live won't actually let us</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocate the new space yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_blocks_count_set\">ext4_blocks_count_set</a>(<a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#blocks_count\">blocks_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#le32_add_cpu\">le32_add_cpu</a>(&amp;<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>, <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to protect s_groups_count against other CPUs seeing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inconsistent state in the superblock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The precise rules we use are:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * * Writers of s_groups_count *must* hold s_resize_lock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * AND</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * * Writers must perform a smp_wmb() after updating all dependent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   data and before modifying the groups count</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * * Readers must hold s_resize_lock over the access</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * OR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * * Readers must perform an smp_rmb() after reading the groups count</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   and before reading any dependent data.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NB. These rules can be relaxed when checking the group count</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * while freeing data, as we can only allocate from a block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * group after serialising against the group count, and we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only then free after serialising in turn against that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the global fs size fields */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#primary\">primary</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the reserved block counts only once the new group is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * active. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_r_blocks_count_set\">ext4_r_blocks_count_set</a>(<a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#ext4_r_blocks_count\">ext4_r_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#reserved_blocks\">reserved_blocks</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the free space counts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_add\">percpu_counter_add</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_add\">percpu_counter_add</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#flex_group\">flex_group</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flex_group\">flex_group</a> = <a class=\"id\" href=\"#ext4_flex_group\">ext4_flex_group</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#group\">group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#input\">input</a>-><a class=\"id\" href=\"#free_blocks_count\">free_blocks_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>[<a class=\"id\" href=\"#flex_group\">flex_group</a>].<a class=\"id\" href=\"#free_blocks\">free_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>[<a class=\"id\" href=\"#flex_group\">flex_group</a>].<a class=\"id\" href=\"#free_inodes\">free_inodes</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_super\">ext4_handle_dirty_super</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<a class=\"id\" href=\"#exit_journal\">exit_journal</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>)) && !<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_backups\">update_backups</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, (char *)<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_backups\">update_backups</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#primary\">primary</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, <a class=\"id\" href=\"#primary\">primary</a>-><a class=\"id\" href=\"#b_data\">b_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#primary\">primary</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#exit_put\">exit_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"} <span class=\"comment\">/* ext4_group_add */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Extend the filesystem to the new number of blocks specified.  This entry</span>", 
"<span class=\"comment\"> * point is only used to extend the current filesystem to the end of the last</span>", 
"<span class=\"comment\"> * existing group.  It can be accessed via ioctl, or by \"remount,resize=&lt;size&gt;\"</span>", 
"<span class=\"comment\"> * for emergencies (because it has no dependencies on reserved blocks).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If we _really_ wanted, we could use default values to call ext4_group_add()</span>", 
"<span class=\"comment\"> * allow the \"remount\" trick to work for arbitrary resizing, assuming enough</span>", 
"<span class=\"comment\"> * GDT blocks are reserved to grow to the desired size.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_group_extend\">ext4_group_extend</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#add\">add</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't need to worry about locking wrt other resizers just</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * yet: we're going to revalidate es-&gt;s_blocks_count after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * taking the s_resize_lock below. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> = <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"EXT4-fs: extending last group from %llu uto %llu blocks\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>, <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> == 0 || <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> == <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> &gt; (<a class=\"id\" href=\"#sector_t\">sector_t</a>)(~0ULL) >> (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> - 9)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"EXT4-fs: filesystem on %s:\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" too large to resize to %llu blocks safely\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (sizeof(<a class=\"id\" href=\"#sector_t\">sector_t</a>) &lt; 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"CONFIG_LBDAF not enabled\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> &lt; <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"can't shrink FS - resize aborted\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Handle the remaining blocks in the last group only. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>, &amp;<a class=\"id\" href=\"#group\">group</a>, &amp;<a class=\"id\" href=\"#last\">last</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last\">last</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"need to use ext2online to resize further\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add\">add</a> = <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) - <a class=\"id\" href=\"#last\">last</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a> &lt; <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"blocks_count overflow\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a> &gt; <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add\">add</a> = <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> - <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a> &lt; <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"will only finish group (%llu blocks, %u new)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a>, <a class=\"id\" href=\"#add\">add</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* See if the device is actually as big as what was requested */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a> - 1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"can't read last block, resize aborted\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We will update the superblock, one block bitmap, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one group descriptor via ext4_free_blocks().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start_sb\">ext4_journal_start_sb</a>(<a class=\"id\" href=\"#sb\">sb</a>, 3);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"error %d on journal start\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_put\">exit_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> != <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"multiple resizers run on filesystem!\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_put\">exit_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"error %d on journal write access\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_put\">exit_put</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_blocks_count_set\">ext4_blocks_count_set</a>(<a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"freeing blocks %llu through %llu\\n\", <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* We add the blocks to the bitmap and set the group need init bit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_add_groupblocks\">ext4_add_groupblocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>, <a class=\"id\" href=\"#add\">add</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_super\">ext4_handle_dirty_super</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"freed blocks %llu through %llu\\n\", <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#o_blocks_count\">o_blocks_count</a> + <a class=\"id\" href=\"#add\">add</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_put\">exit_put</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"EXT4-fs: extended group to %llu blocks\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_backups\">update_backups</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, (char *)<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a>));", 
"<a class=\"id\" href=\"#exit_put\">exit_put</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"} <span class=\"comment\">/* ext4_group_extend */</span>", 
];
xr_frag_insert('l/13/7bb573ac1ebdcc4885f7e0c24eaa0ebce28de1.xr', __xr_tmp);
