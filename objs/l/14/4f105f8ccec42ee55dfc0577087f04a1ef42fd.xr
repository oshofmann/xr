var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs_root\">set_fs_root</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#fs\">fs</a>, &amp;<a class=\"id\" href=\"#root\">root</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mnt_init\">mnt_init</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#u\">u</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;<a class=\"id\" href=\"#namespace_sem\">namespace_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_cache\">mnt_cache</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"mnt_cache\", sizeof(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0, <a class=\"id\" href=\"#SLAB_HWCACHE_ALIGN\">SLAB_HWCACHE_ALIGN</a> | <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mount_hashtable\">mount_hashtable</a> = (struct <a class=\"id\" href=\"#list_head\">list_head</a> *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mount_hashtable\">mount_hashtable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Failed to allocate mount hash table\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Mount-cache hash table entries: %lu\\n\", <a class=\"id\" href=\"#HASH_SIZE\">HASH_SIZE</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#u\">u</a> = 0; <a class=\"id\" href=\"#u\">u</a> &lt; <a class=\"id\" href=\"#HASH_SIZE\">HASH_SIZE</a>; <a class=\"id\" href=\"#u\">u</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#mount_hashtable\">mount_hashtable</a>[<a class=\"id\" href=\"#u\">u</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#br_lock_init\">br_lock_init</a>(<a class=\"id\" href=\"#vfsmount_lock\">vfsmount_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_init\">sysfs_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: sysfs_init error: %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fs_kobj\">fs_kobj</a> = <a class=\"id\" href=\"#kobject_create_and_add\">kobject_create_and_add</a>(\"fs\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fs_kobj\">fs_kobj</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: kobj create error\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_rootfs\">init_rootfs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_mount_tree\">init_mount_tree</a>();", 
"}", 
"", 
"void <a class=\"id\" href=\"#put_mnt_ns\">put_mnt_ns</a>(struct <a class=\"id\" href=\"#mnt_namespace\">mnt_namespace</a> *<a class=\"id\" href=\"#ns\">ns</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#umount_list\">umount_list</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#namespace_sem\">namespace_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#br_write_lock\">br_write_lock</a>(<a class=\"id\" href=\"#vfsmount_lock\">vfsmount_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#umount_tree\">umount_tree</a>(<a class=\"id\" href=\"#ns\">ns</a>-><a class=\"id\" href=\"#root\">root</a>, 0, &amp;<a class=\"id\" href=\"#umount_list\">umount_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#br_write_unlock\">br_write_unlock</a>(<a class=\"id\" href=\"#vfsmount_lock\">vfsmount_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#namespace_sem\">namespace_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_mounts\">release_mounts</a>(&amp;<a class=\"id\" href=\"#umount_list\">umount_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ns\">ns</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#put_mnt_ns\">put_mnt_ns</a>);", 
];
xr_frag_insert('l/14/4f105f8ccec42ee55dfc0577087f04a1ef42fd.xr', __xr_tmp);
