var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: exstore - AML Interpreter object store support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acdispat.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"amlcode.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_EXECUTER\">ACPI_EXECUTER</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"exstore\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_store_object_to_index\">acpi_ex_store_object_to_index</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#val_desc\">val_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#dest_desc\">dest_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_store</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  *source_desc        - Value to be stored</span>", 
"<span class=\"comment\"> *              *dest_desc          - Where to store it.  Must be an NS node</span>", 
"<span class=\"comment\"> *                                    or a union acpi_operand_object of type</span>", 
"<span class=\"comment\"> *                                    Reference;</span>", 
"<span class=\"comment\"> *              walk_state          - Current walk state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Store the value described by source_desc into the location</span>", 
"<span class=\"comment\"> *              described by dest_desc. Called by various interpreter</span>", 
"<span class=\"comment\"> *              functions to store the result of an operation into</span>", 
"<span class=\"comment\"> *              the destination operand -- not just simply the actual \"Store\"</span>", 
"<span class=\"comment\"> *              ASL operator.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_store\">acpi_ex_store</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#dest_desc\">dest_desc</a>,", 
"<span class=\"ts\"/>      struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#ref_desc\">ref_desc</a> = <a class=\"id\" href=\"#dest_desc\">dest_desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ex_store\">ex_store</a>, <a class=\"id\" href=\"#dest_desc\">dest_desc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Validate parameters */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#source_desc\">source_desc</a> || !<a class=\"id\" href=\"#dest_desc\">dest_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Null parameter\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_NO_OPERAND\">AE_AML_NO_OPERAND</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* dest_desc can be either a namespace node or an ACPI object */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#dest_desc\">dest_desc</a>) == <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Dest is a namespace node,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Storing an object into a Named node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_store_object_to_node\">acpi_ex_store_object_to_node</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (struct", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dest_desc\">dest_desc</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ACPI_IMPLICIT_CONVERSION\">ACPI_IMPLICIT_CONVERSION</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Destination object must be a Reference or a Constant object */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dest_desc\">dest_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allow stores to Constants -- a Noop as per ACPI spec */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_desc\">dest_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AOPOBJ_AML_CONSTANT\">AOPOBJ_AML_CONSTANT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*lint -fallthrough */</span>", 
"", 
"<span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Destination is not a Reference object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Target is not a Reference or Constant object - %s [%p]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#dest_desc\">dest_desc</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dest_desc\">dest_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Examine the Reference class. These cases are handled:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1) Store to Name (Change the object associated with a name)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2) Store to an indexed area of a Buffer or Package</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 3) Store to a Method Local or Arg</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 4) Store to the debug object</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ref_desc\">ref_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_REFOF\">ACPI_REFCLASS_REFOF</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Storing an object into a Name \"container\" */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_store_object_to_node\">acpi_ex_store_object_to_node</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ref_desc\">ref_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#object\">object</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ACPI_IMPLICIT_CONVERSION\">ACPI_IMPLICIT_CONVERSION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_INDEX\">ACPI_REFCLASS_INDEX</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Storing to an Index (pointer into a packager or buffer) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_store_object_to_index\">acpi_ex_store_object_to_index</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>, <a class=\"id\" href=\"#ref_desc\">ref_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_LOCAL\">ACPI_REFCLASS_LOCAL</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_ARG\">ACPI_REFCLASS_ARG</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Store to a method local/arg  */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ds_store_object_to_local\">acpi_ds_store_object_to_local</a>(<a class=\"id\" href=\"#ref_desc\">ref_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ref_desc\">ref_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#source_desc\">source_desc</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_DEBUG\">ACPI_REFCLASS_DEBUG</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Storing to the Debug object causes the value stored to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * displayed and otherwise has no effect -- see ACPI Specification</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"**** Write to Debug Object: Object %p %s ****:\\n\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_OBJECT\">ACPI_DEBUG_OBJECT</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Unknown Reference Class 0x%2.2X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ref_desc\">ref_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DUMP_ENTRY\">ACPI_DUMP_ENTRY</a>(<a class=\"id\" href=\"#ref_desc\">ref_desc</a>, <a class=\"id\" href=\"#ACPI_LV_INFO\">ACPI_LV_INFO</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_store_object_to_index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  *source_desc            - Value to be stored</span>", 
"<span class=\"comment\"> *              *dest_desc              - Named object to receive the value</span>", 
"<span class=\"comment\"> *              walk_state              - Current walk state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Store the object to indexed Buffer or Package element</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_store_object_to_index\">acpi_ex_store_object_to_index</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#index_desc\">index_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_desc\">new_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_store_object_to_index\">ex_store_object_to_index</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Destination must be a reference pointer, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must point to either a buffer or a package</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#index_desc\">index_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#target_type\">target_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Storing to a package element. Copy the object and replace</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * any existing object with the new object. No implicit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * conversion is performed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The object at *(index_desc-&gt;Reference.Where) is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * element within the package that is to be modified.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The parent package object is at index_desc-&gt;Reference.Object</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = *(<a class=\"id\" href=\"#index_desc\">index_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#where\">where</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ACPI_REFCLASS_TABLE\">ACPI_REFCLASS_TABLE</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is a DDBHandle, just add a reference to it */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_desc\">new_desc</a> = <a class=\"id\" href=\"#source_desc\">source_desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Normal object, copy it */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_copy_iobject_to_iobject\">acpi_ut_copy_iobject_to_iobject</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#new_desc\">new_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Decrement reference count by the ref count of the parent package */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; ((union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#index_desc\">index_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#object\">object</a>)-><a class=\"id\" href=\"#common\">common</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#reference_count\">reference_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*(<a class=\"id\" href=\"#index_desc\">index_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#where\">where</a>) = <a class=\"id\" href=\"#new_desc\">new_desc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Increment ref count by the ref count of the parent package-1 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 1; <a class=\"id\" href=\"#i\">i</a> &lt; ((union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#index_desc\">index_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#object\">object</a>)-><a class=\"id\" href=\"#common\">common</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#reference_count\">reference_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#new_desc\">new_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Store into a Buffer or String (not actually a real buffer_field)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * at a location defined by an Index.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The first 8-bit element of the source object is written to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 8-bit Buffer location defined by the Index destination object,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * according to the ACPI 2.0 specification.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Make sure the target is a Buffer or String. An error should</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not happen here, since the reference_object was constructed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * by the INDEX_OP code.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#index_desc\">index_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The assignment of the individual elements will be slightly</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * different for each source type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Use the least-significant byte of the integer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = (<a class=\"id\" href=\"#u8\">u8</a>) (<a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note: Takes advantage of common string/buffer fields */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All other types are invalid */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Source must be Integer/Buffer/String type, not %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Store the source value into the target buffer byte */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>[<a class=\"id\" href=\"#index_desc\">index_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#value\">value</a>] = <a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Target is not a Package or BufferField\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_store_object_to_node</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  source_desc             - Value to be stored</span>", 
"<span class=\"comment\"> *              Node                    - Named object to receive the value</span>", 
"<span class=\"comment\"> *              walk_state              - Current walk state</span>", 
"<span class=\"comment\"> *              implicit_conversion     - Perform implicit conversion (yes/no)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Store the object to the named object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              The Assignment of an object to a named object is handled here</span>", 
"<span class=\"comment\"> *              The value passed in will replace the current value (if any)</span>", 
"<span class=\"comment\"> *              with the input value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              When storing into an object the data is converted to the</span>", 
"<span class=\"comment\"> *              target object type then stored in the object.  This means</span>", 
"<span class=\"comment\"> *              that the target object type (for an initialized target) will</span>", 
"<span class=\"comment\"> *              not be changed by a store operation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              Assumes parameters are already validated.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_store_object_to_node\">acpi_ex_store_object_to_node</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#implicit_conversion\">implicit_conversion</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#target_desc\">target_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_desc\">new_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_object_type\">acpi_object_type</a> <a class=\"id\" href=\"#target_type\">target_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ex_store_object_to_node\">ex_store_object_to_node</a>, <a class=\"id\" href=\"#source_desc\">source_desc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get current type of the node, and object attached to Node */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target_type\">target_type</a> = <a class=\"id\" href=\"#acpi_ns_get_type\">acpi_ns_get_type</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target_desc\">target_desc</a> = <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>, \"Storing %p(%s) into node %p(%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>), <a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_type_name\">acpi_ut_get_type_name</a>(<a class=\"id\" href=\"#target_type\">target_type</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Resolve the source object to an actual value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (If it is a reference object)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_resolve_object\">acpi_ex_resolve_object</a>(&amp;<a class=\"id\" href=\"#source_desc\">source_desc</a>, <a class=\"id\" href=\"#target_type\">target_type</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If no implicit conversion, drop into the default case below */</span>", 
"", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#implicit_conversion\">implicit_conversion</a>) ||", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#opcode\">opcode</a> == <a class=\"id\" href=\"#AML_COPY_OP\">AML_COPY_OP</a>) &&", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#target_type\">target_type</a> != <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REGION_FIELD\">ACPI_TYPE_LOCAL_REGION_FIELD</a>) &&", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#target_type\">target_type</a> != <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>) &&", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#target_type\">target_type</a> != <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Force execution of default (no implicit conversion). Note:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * copy_object does not perform an implicit conversion, as per the ACPI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * spec -- except in case of region/bank/index fields -- because these</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * objects must retain their original type permanently.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target_type\">target_type</a> = <a class=\"id\" href=\"#ACPI_TYPE_ANY\">ACPI_TYPE_ANY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do the actual store operation */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#target_type\">target_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REGION_FIELD\">ACPI_TYPE_LOCAL_REGION_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For fields, copy the source data to the target field. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_write_data_to_field\">acpi_ex_write_data_to_field</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>, <a class=\"id\" href=\"#target_desc\">target_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#result_obj\">result_obj</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * These target types are all of type Integer/String/Buffer, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * therefore support implicit conversion before the store.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Copy and/or convert the source object to a new target object</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_store_object_to_object\">acpi_ex_store_object_to_object</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>, <a class=\"id\" href=\"#target_desc\">target_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#new_desc\">new_desc</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_desc\">new_desc</a> != <a class=\"id\" href=\"#target_desc\">target_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Store the new new_desc as the new value of the Name, and set</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the Name's type to that of the value being stored in it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * source_desc reference count is incremented by attach_object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note: This may change the type of the node if an explicit store</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * has been performed such that the node/object type has been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * changed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_attach_object\">acpi_ns_attach_object</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#new_desc\">new_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#new_desc\">new_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Store %s into %s via Convert/Attach\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#source_desc\">source_desc</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#new_desc\">new_desc</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Storing %s (%p) directly into node (%p) with no implicit conversion\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#source_desc\">source_desc</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#source_desc\">source_desc</a>, <a class=\"id\" href=\"#node\">node</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No conversions for all other types.  Just attach the source object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_attach_object\">acpi_ns_attach_object</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#source_desc\">source_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#source_desc\">source_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
];
xr_frag_insert('l/14/7a80d328f582f9cb413f9accc5ae118324d8c6.xr', __xr_tmp);
