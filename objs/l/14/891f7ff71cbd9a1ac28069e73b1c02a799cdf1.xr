var __xr_tmp = [
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Name: acpiosxf.h - All interfaces to the OS Services Layer (OSL).  These</span>", 
"<span class=\"comment\"> *                    interfaces must be implemented by OSL to interface the</span>", 
"<span class=\"comment\"> *                    ACPI components to the host operating system.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ACPIOSXF_H__\">__ACPIOSXF_H__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__ACPIOSXF_H__\">__ACPIOSXF_H__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"platform/acenv.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"actypes.h\"", 
"", 
"<span class=\"comment\">/* Types for acpi_os_execute */</span>", 
"", 
"typedef enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#OSL_GLOBAL_LOCK_HANDLER\">OSL_GLOBAL_LOCK_HANDLER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#OSL_NOTIFY_HANDLER\">OSL_NOTIFY_HANDLER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#OSL_GPE_HANDLER\">OSL_GPE_HANDLER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#OSL_DEBUGGER_THREAD\">OSL_DEBUGGER_THREAD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#OSL_EC_POLL_HANDLER\">OSL_EC_POLL_HANDLER</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#OSL_EC_BURST_HANDLER\">OSL_EC_BURST_HANDLER</a>", 
"} <a class=\"id\" href=\"#acpi_execute_type\">acpi_execute_type</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_NO_UNIT_LIMIT\">ACPI_NO_UNIT_LIMIT</a>          ((<a class=\"id\" href=\"#u32\">u32</a>) -1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_MUTEX_SEM\">ACPI_MUTEX_SEM</a>              1", 
"", 
"<span class=\"comment\">/* Functions for acpi_os_signal */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_SIGNAL_FATAL\">ACPI_SIGNAL_FATAL</a>           0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_SIGNAL_BREAKPOINT\">ACPI_SIGNAL_BREAKPOINT</a>      1", 
"", 
"struct <a class=\"id\" href=\"#acpi_signal_fatal_info\">acpi_signal_fatal_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#argument\">argument</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * OSL Initialization and shutdown primitives</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#acpi_os_initialize\">acpi_os_initialize</a>(void);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_terminate\">acpi_os_terminate</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ACPI Table interfaces</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#acpi_os_get_root_pointer\">acpi_os_get_root_pointer</a>(void);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_predefined_override\">acpi_os_predefined_override</a>(const struct <a class=\"id\" href=\"#acpi_predefined_names\">acpi_predefined_names</a> *<a class=\"id\" href=\"#init_val\">init_val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_string\">acpi_string</a> * <a class=\"id\" href=\"#new_val\">new_val</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_table_override\">acpi_os_table_override</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#existing_table\">existing_table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> **<a class=\"id\" href=\"#new_table\">new_table</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Spinlock primitives</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_create_lock\">acpi_os_create_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> * <a class=\"id\" href=\"#out_handle\">out_handle</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_delete_lock\">acpi_os_delete_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> <a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_cpu_flags\">acpi_cpu_flags</a> <a class=\"id\" href=\"#acpi_os_acquire_lock\">acpi_os_acquire_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> <a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_release_lock\">acpi_os_release_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#acpi_cpu_flags\">acpi_cpu_flags</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Semaphore primitives</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_create_semaphore\">acpi_os_create_semaphore</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#max_units\">max_units</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#initial_units\">initial_units</a>, <a class=\"id\" href=\"#acpi_semaphore\">acpi_semaphore</a> * <a class=\"id\" href=\"#out_handle\">out_handle</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_delete_semaphore\">acpi_os_delete_semaphore</a>(<a class=\"id\" href=\"#acpi_semaphore\">acpi_semaphore</a> <a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_wait_semaphore\">acpi_os_wait_semaphore</a>(<a class=\"id\" href=\"#acpi_semaphore\">acpi_semaphore</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#units\">units</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_signal_semaphore\">acpi_os_signal_semaphore</a>(<a class=\"id\" href=\"#acpi_semaphore\">acpi_semaphore</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#units\">units</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mutex primitives. May be configured to use semaphores instead via</span>", 
"<span class=\"comment\"> * ACPI_MUTEX_TYPE (see platform/acenv.h)</span>", 
"<span class=\"comment\"> */</span>", 
"#if (<a class=\"id\" href=\"#ACPI_MUTEX_TYPE\">ACPI_MUTEX_TYPE</a> != <a class=\"id\" href=\"#ACPI_BINARY_SEMAPHORE\">ACPI_BINARY_SEMAPHORE</a>)", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_create_mutex\">acpi_os_create_mutex</a>(<a class=\"id\" href=\"#acpi_mutex\">acpi_mutex</a> * <a class=\"id\" href=\"#out_handle\">out_handle</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_delete_mutex\">acpi_os_delete_mutex</a>(<a class=\"id\" href=\"#acpi_mutex\">acpi_mutex</a> <a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_acquire_mutex\">acpi_os_acquire_mutex</a>(<a class=\"id\" href=\"#acpi_mutex\">acpi_mutex</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_release_mutex\">acpi_os_release_mutex</a>(<a class=\"id\" href=\"#acpi_mutex\">acpi_mutex</a> <a class=\"id\" href=\"#handle\">handle</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Memory allocation and mapping</span>", 
"<span class=\"comment\"> */</span>", 
"void *<a class=\"id\" href=\"#acpi_os_allocate\">acpi_os_allocate</a>(<a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#acpi_os_map_memory\">acpi_os_map_memory</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#where\">where</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#length\">length</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(void <a class=\"id\" href=\"#__iomem\">__iomem</a> * <a class=\"id\" href=\"#logical_address\">logical_address</a>, <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>);", 
"void <a class=\"id\" href=\"#early_acpi_os_unmap_memory\">early_acpi_os_unmap_memory</a>(void <a class=\"id\" href=\"#__iomem\">__iomem</a> * <a class=\"id\" href=\"#virt\">virt</a>, <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_FUTURE_USAGE\">ACPI_FUTURE_USAGE</a>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_get_physical_address\">acpi_os_get_physical_address</a>(void *<a class=\"id\" href=\"#logical_address\">logical_address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> * <a class=\"id\" href=\"#physical_address\">physical_address</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Memory/Object Cache</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_create_cache\">acpi_os_create_cache</a>(char *<a class=\"id\" href=\"#cache_name\">cache_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#object_size\">object_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#max_depth\">max_depth</a>, <a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> ** <a class=\"id\" href=\"#return_cache\">return_cache</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_delete_cache\">acpi_os_delete_cache</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_purge_cache\">acpi_os_purge_cache</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>);", 
"", 
"void *<a class=\"id\" href=\"#acpi_os_acquire_object\">acpi_os_acquire_object</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_release_object\">acpi_os_release_object</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>, void *<a class=\"id\" href=\"#object\">object</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Interrupt handlers</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_install_interrupt_handler\">acpi_os_install_interrupt_handler</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_osd_handler\">acpi_osd_handler</a> <a class=\"id\" href=\"#service_routine\">service_routine</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_remove_interrupt_handler\">acpi_os_remove_interrupt_handler</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gsi\">gsi</a>, <a class=\"id\" href=\"#acpi_osd_handler\">acpi_osd_handler</a> <a class=\"id\" href=\"#service_routine\">service_routine</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_gpe_count\">acpi_os_gpe_count</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#gpe_number\">gpe_number</a>);", 
"void <a class=\"id\" href=\"#acpi_os_fixed_event_count\">acpi_os_fixed_event_count</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fixed_event_number\">fixed_event_number</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Threads and Scheduling</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_thread_id\">acpi_thread_id</a> <a class=\"id\" href=\"#acpi_os_get_thread_id\">acpi_os_get_thread_id</a>(void);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_execute\">acpi_os_execute</a>(<a class=\"id\" href=\"#acpi_execute_type\">acpi_execute_type</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_osd_exec_callback\">acpi_osd_exec_callback</a> <a class=\"id\" href=\"#function\">function</a>, void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_hotplug_execute\">acpi_os_hotplug_execute</a>(<a class=\"id\" href=\"#acpi_osd_exec_callback\">acpi_osd_exec_callback</a> <a class=\"id\" href=\"#function\">function</a>, void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_wait_events_complete\">acpi_os_wait_events_complete</a>(void *<a class=\"id\" href=\"#context\">context</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_sleep\">acpi_os_sleep</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#milliseconds\">milliseconds</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_stall\">acpi_os_stall</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#microseconds\">microseconds</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Platform and hardware-independent I/O interfaces</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_read_port\">acpi_os_read_port</a>(<a class=\"id\" href=\"#acpi_io_address\">acpi_io_address</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#u32\">u32</a> * <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_write_port\">acpi_os_write_port</a>(<a class=\"id\" href=\"#acpi_io_address\">acpi_io_address</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Platform and hardware-independent physical memory interfaces</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_read_memory\">acpi_os_read_memory</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#u32\">u32</a> * <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_write_memory\">acpi_os_write_memory</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Platform and hardware-independent PCI configuration space access</span>", 
"<span class=\"comment\"> * Note: Can't use \"Register\" as a parameter, changed to \"Reg\" --</span>", 
"<span class=\"comment\"> * certain compilers complain.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_read_pci_configuration\">acpi_os_read_pci_configuration</a>(struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> *<a class=\"id\" href=\"#pci_id\">pci_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_write_pci_configuration\">acpi_os_write_pci_configuration</a>(struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> *<a class=\"id\" href=\"#pci_id\">pci_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#width\">width</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Interim function needed for PCI IRQ routing</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#acpi_os_derive_pci_id\">acpi_os_derive_pci_id</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#device\">device</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#region\">region</a>, struct <a class=\"id\" href=\"#acpi_pci_id\">acpi_pci_id</a> **<a class=\"id\" href=\"#pci_id\">pci_id</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Miscellaneous</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_validate_interface\">acpi_os_validate_interface</a>(char *<a class=\"id\" href=\"#interface\">interface</a>);", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_osi_invalidate\">acpi_osi_invalidate</a>(char* <a class=\"id\" href=\"#interface\">interface</a>);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_validate_address\">acpi_os_validate_address</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#space_id\">space_id</a>, <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#length\">length</a>, char *<a class=\"id\" href=\"#name\">name</a>);", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_invalidate_address\">acpi_os_invalidate_address</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#space_id\">space_id</a>, <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#length\">length</a>);", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#acpi_os_get_timer\">acpi_os_get_timer</a>(void);", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_signal\">acpi_os_signal</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#function\">function</a>, void *<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Debug print routines</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ACPI_INTERNAL_VAR_XFACE\">ACPI_INTERNAL_VAR_XFACE</a> <a class=\"id\" href=\"#acpi_os_printf\">acpi_os_printf</a>(const char *<a class=\"id\" href=\"#format\">format</a>, ...);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_vprintf\">acpi_os_vprintf</a>(const char *<a class=\"id\" href=\"#format\">format</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_redirect_output\">acpi_os_redirect_output</a>(void *<a class=\"id\" href=\"#destination\">destination</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_FUTURE_USAGE\">ACPI_FUTURE_USAGE</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Debug input</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#acpi_os_get_line\">acpi_os_get_line</a>(char *<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Directory manipulation</span>", 
"<span class=\"comment\"> */</span>", 
"void *<a class=\"id\" href=\"#acpi_os_open_directory\">acpi_os_open_directory</a>(char *<a class=\"id\" href=\"#pathname\">pathname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     char *<a class=\"id\" href=\"#wildcard_spec\">wildcard_spec</a>, char <a class=\"id\" href=\"#requested_file_type\">requested_file_type</a>);", 
"", 
"<span class=\"comment\">/* requeste_file_type values */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQUEST_FILE_ONLY\">REQUEST_FILE_ONLY</a>                   0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REQUEST_DIR_ONLY\">REQUEST_DIR_ONLY</a>                    1", 
"", 
"char *<a class=\"id\" href=\"#acpi_os_get_next_filename\">acpi_os_get_next_filename</a>(void *<a class=\"id\" href=\"#dir_handle\">dir_handle</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_os_close_directory\">acpi_os_close_directory</a>(void *<a class=\"id\" href=\"#dir_handle\">dir_handle</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* __ACPIOSXF_H__ */</span>", 
];
xr_frag_insert('l/14/891f7ff71cbd9a1ac28069e73b1c02a799cdf1.xr', __xr_tmp);
