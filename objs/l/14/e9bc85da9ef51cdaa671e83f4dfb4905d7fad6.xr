var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#phy_device\">phy_device</a>, <a class=\"id\" href=\"#phy_queue\">phy_queue</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#did_interrupt\">did_interrupt</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#did_interrupt\">did_interrupt</a>(<a class=\"id\" href=\"#phydev\">phydev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ignore\">ignore</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#phy_disable_interrupts\">phy_disable_interrupts</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#phy_err\">phy_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#PHY_RUNNING\">PHY_RUNNING</a> == <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a>) || (<a class=\"id\" href=\"#PHY_NOLINK\">PHY_NOLINK</a> == <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#PHY_CHANGELINK\">PHY_CHANGELINK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#irq_disable\">irq_disable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_irq\">enable_irq</a>(<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reenable interrupts */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PHY_HALTED\">PHY_HALTED</a> != <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#phy_config_interrupt\">phy_config_interrupt</a>(<a class=\"id\" href=\"#phydev\">phydev</a>, <a class=\"id\" href=\"#PHY_INTERRUPT_ENABLED\">PHY_INTERRUPT_ENABLED</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#irq_enable_err\">irq_enable_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* reschedule state queue work to run as soon as possible */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cancel_delayed_work_sync\">cancel_delayed_work_sync</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state_queue\">state_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_delayed_work\">schedule_delayed_work</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state_queue\">state_queue</a>, 0);", 
"", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#ignore\">ignore</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#irq_disable\">irq_disable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_irq\">enable_irq</a>(<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#irq_enable_err\">irq_enable_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_irq\">disable_irq</a>(<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#irq_disable\">irq_disable</a>);", 
"<a class=\"id\" href=\"#phy_err\">phy_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phy_error\">phy_error</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * phy_stop - Bring down the PHY link, and stop checking the status</span>", 
"<span class=\"comment\"> * @phydev: target phy_device struct</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#phy_stop\">phy_stop</a>(struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PHY_HALTED\">PHY_HALTED</a> == <a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#irq\">irq</a> != <a class=\"id\" href=\"#PHY_POLL\">PHY_POLL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Disable PHY Interrupts */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phy_config_interrupt\">phy_config_interrupt</a>(<a class=\"id\" href=\"#phydev\">phydev</a>, <a class=\"id\" href=\"#PHY_INTERRUPT_DISABLED\">PHY_INTERRUPT_DISABLED</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clear any pending interrupts */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phy_clear_interrupt\">phy_clear_interrupt</a>(<a class=\"id\" href=\"#phydev\">phydev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#PHY_HALTED\">PHY_HALTED</a>;", 
"", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Cannot call flush_scheduled_work() here as desired because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of rtnl_lock(), but PHY_HALTED shall guarantee phy_change()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will not reenable interrupts.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * phy_start - start or restart a PHY device</span>", 
"<span class=\"comment\"> * @phydev: target phy_device struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Indicates the attached device's readiness to</span>", 
"<span class=\"comment\"> *   handle PHY-related work.  Used during startup to start the</span>", 
"<span class=\"comment\"> *   PHY, and after a call to phy_stop() to resume operation.</span>", 
"<span class=\"comment\"> *   Also used to indicate the MDIO bus has cleared an error</span>", 
"<span class=\"comment\"> *   condition.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#phy_start\">phy_start</a>(struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PHY_STARTING\">PHY_STARTING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#PHY_PENDING\">PHY_PENDING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PHY_READY\">PHY_READY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#PHY_UP\">PHY_UP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PHY_HALTED\">PHY_HALTED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#PHY_RESUMING\">PHY_RESUMING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#phy_stop\">phy_stop</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#phy_start\">phy_start</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * phy_state_machine - Handle the state machine</span>", 
"<span class=\"comment\"> * @work: work_struct that describes the work to be done</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#phy_state_machine\">phy_state_machine</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> *<a class=\"id\" href=\"#dwork\">dwork</a> = <a class=\"id\" href=\"#to_delayed_work\">to_delayed_work</a>(<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#phy_device\">phy_device</a> *<a class=\"id\" href=\"#phydev\">phydev</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dwork\">dwork</a>, struct <a class=\"id\" href=\"#phy_device\">phy_device</a>, <a class=\"id\" href=\"#state_queue\">state_queue</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#needs_aneg\">needs_aneg</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#adjust_state\">adjust_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#adjust_state\">adjust_state</a>(<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#attached_dev\">attached_dev</a>);", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#phydev\">phydev</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PHY_DOWN\">PHY_DOWN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PHY_STARTING\">PHY_STARTING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PHY_READY\">PHY_READY</a>:", 
];
xr_frag_insert('l/14/e9bc85da9ef51cdaa671e83f4dfb4905d7fad6.xr', __xr_tmp);
