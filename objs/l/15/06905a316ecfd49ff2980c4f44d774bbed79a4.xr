var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsicmd\">scsicmd</a>[0], <a class=\"id\" href=\"#scsicmd\">scsicmd</a>[1], <a class=\"id\" href=\"#scsicmd\">scsicmd</a>[2], <a class=\"id\" href=\"#scsicmd\">scsicmd</a>[3],", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsicmd\">scsicmd</a>[4], <a class=\"id\" href=\"#scsicmd\">scsicmd</a>[5], <a class=\"id\" href=\"#scsicmd\">scsicmd</a>[6], <a class=\"id\" href=\"#scsicmd\">scsicmd</a>[7],", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsicmd\">scsicmd</a>[8]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__ata_scsi_queuecmd\">__ata_scsi_queuecmd</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#scmd\">scmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void (*<a class=\"id\" href=\"#done\">done</a>)(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#scsi_op\">scsi_op</a> = <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_xlat_func_t\">ata_xlat_func_t</a> <a class=\"id\" href=\"#xlat_func\">xlat_func</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ATA_DEV_ATA\">ATA_DEV_ATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> || <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> &gt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cdb_len\">cdb_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_cdb_len\">bad_cdb_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xlat_func\">xlat_func</a> = <a class=\"id\" href=\"#ata_get_xlat_func\">ata_get_xlat_func</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#scsi_op\">scsi_op</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_cdb_len\">bad_cdb_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xlat_func\">xlat_func</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>((<a class=\"id\" href=\"#scsi_op\">scsi_op</a> != <a class=\"id\" href=\"#ATA_16\">ATA_16</a>) || !<a class=\"id\" href=\"#atapi_passthru16\">atapi_passthru16</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* relay SCSI command to ATAPI device */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#COMMAND_SIZE\">COMMAND_SIZE</a>(<a class=\"id\" href=\"#scsi_op\">scsi_op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> || <a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cdb_len\">cdb_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_cdb_len\">bad_cdb_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xlat_func\">xlat_func</a> = <a class=\"id\" href=\"#atapi_xlat\">atapi_xlat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ATA_16 passthru, treat as an ATA command */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a> &gt; 16))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_cdb_len\">bad_cdb_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xlat_func\">xlat_func</a> = <a class=\"id\" href=\"#ata_get_xlat_func\">ata_get_xlat_func</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#scsi_op\">scsi_op</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xlat_func\">xlat_func</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_scsi_translate\">ata_scsi_translate</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#scmd\">scmd</a>, <a class=\"id\" href=\"#done\">done</a>, <a class=\"id\" href=\"#xlat_func\">xlat_func</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_simulate\">ata_scsi_simulate</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#scmd\">scmd</a>, <a class=\"id\" href=\"#done\">done</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
" <a class=\"id\" href=\"#bad_cdb_len\">bad_cdb_len</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"bad CDB len=%u, scsi_op=0x%02x, max=%u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#cmd_len\">cmd_len</a>, <a class=\"id\" href=\"#scsi_op\">scsi_op</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cdb_len\">cdb_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scmd\">scmd</a>-><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#DID_ERROR\">DID_ERROR</a> << 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a>(<a class=\"id\" href=\"#scmd\">scmd</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_queuecmd - Issue SCSI cdb to libata-managed device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: SCSI command to be sent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@done: Completion function, called when command is complete</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>In some cases, this function translates SCSI commands into</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ATA taskfiles, and queues the taskfiles to be sent to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>hardware.  In other cases, this function simulates a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SCSI device by evaluating and responding to certain</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SCSI commands.  This creates the overall effect of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ATA and ATAPI devices appearing as SCSI devices.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Releases scsi-layer-held lock, and obtains host lock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return value from __ata_scsi_queuecmd() if @cmd can be queued,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_scsi_queuecmd\">ata_scsi_queuecmd</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, void (*<a class=\"id\" href=\"#done\">done</a>)(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#scsidev\">scsidev</a> = <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#scsidev\">scsidev</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#ata_shost_to_port\">ata_shost_to_port</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_dump_cdb\">ata_scsi_dump_cdb</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ata_scsi_find_dev\">ata_scsi_find_dev</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#scsidev\">scsidev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#__ata_scsi_queuecmd\">__ata_scsi_queuecmd</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#result\">result</a> = (<a class=\"id\" href=\"#DID_BAD_TARGET\">DID_BAD_TARGET</a> << 16);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_simulate - simulate SCSI command on ATA device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: the target device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: SCSI command being sent to device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@done: SCSI command completion function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Interprets and directly executes a select list of SCSI commands</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that can be handled internally.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ata_scsi_simulate\">ata_scsi_simulate</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      void (*<a class=\"id\" href=\"#done\">done</a>)(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_scsi_args\">ata_scsi_args</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#scsicmd\">scsicmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#cmnd\">cmnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tmp8\">tmp8</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>.<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>.<a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>.<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>.<a class=\"id\" href=\"#done\">done</a> = <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#scsicmd\">scsicmd</a>[0]) {", 
"<span class=\"ts\"/><span class=\"comment\">/* TODO: worth improving? */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FORMAT_UNIT\">FORMAT_UNIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_invalid_field\">ata_scsi_invalid_field</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#INQUIRY\">INQUIRY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsicmd\">scsicmd</a>[1] &amp; 2)<span class=\"ts\"/>           <span class=\"comment\">/* is CmdDt set?  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_invalid_field\">ata_scsi_invalid_field</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if ((<a class=\"id\" href=\"#scsicmd\">scsicmd</a>[1] &amp; 1) == 0)    <span class=\"comment\">/* is EVPD clear? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_inq_std\">ata_scsiop_inq_std</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else switch (<a class=\"id\" href=\"#scsicmd\">scsicmd</a>[2]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x00:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_inq_00\">ata_scsiop_inq_00</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x80:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_inq_80\">ata_scsiop_inq_80</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x83:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_inq_83\">ata_scsiop_inq_83</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x89:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_inq_89\">ata_scsiop_inq_89</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0xb0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_inq_b0\">ata_scsiop_inq_b0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0xb1:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_inq_b1\">ata_scsiop_inq_b1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_invalid_field\">ata_scsi_invalid_field</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODE_SENSE\">MODE_SENSE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODE_SENSE_10\">MODE_SENSE_10</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_mode_sense\">ata_scsiop_mode_sense</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODE_SELECT\">MODE_SELECT</a>:<span class=\"ts\"/><span class=\"comment\">/* unconditionally return */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MODE_SELECT_10\">MODE_SELECT_10</a>:<span class=\"ts\"/><span class=\"comment\">/* bad-field-in-cdb */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_invalid_field\">ata_scsi_invalid_field</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#READ_CAPACITY\">READ_CAPACITY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_read_cap\">ata_scsiop_read_cap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SERVICE_ACTION_IN\">SERVICE_ACTION_IN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#scsicmd\">scsicmd</a>[1] &amp; 0x1f) == <a class=\"id\" href=\"#SAI_READ_CAPACITY_16\">SAI_READ_CAPACITY_16</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_read_cap\">ata_scsiop_read_cap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_invalid_field\">ata_scsi_invalid_field</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#REPORT_LUNS\">REPORT_LUNS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_report_luns\">ata_scsiop_report_luns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#REQUEST_SENSE\">REQUEST_SENSE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_set_sense\">ata_scsi_set_sense</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, 0, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#result\">result</a> = (<a class=\"id\" href=\"#DRIVER_SENSE\">DRIVER_SENSE</a> << 24);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if we reach this, then writeback caching is disabled,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * turning this into a no-op.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SYNCHRONIZE_CACHE\">SYNCHRONIZE_CACHE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* no-op's, complete with success */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#REZERO_UNIT\">REZERO_UNIT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SEEK_6\">SEEK_6</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SEEK_10\">SEEK_10</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TEST_UNIT_READY\">TEST_UNIT_READY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_noop\">ata_scsiop_noop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SEND_DIAGNOSTIC\">SEND_DIAGNOSTIC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp8\">tmp8</a> = <a class=\"id\" href=\"#scsicmd\">scsicmd</a>[1] &amp; ~(1 << 3);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tmp8\">tmp8</a> == 0x4) && (!<a class=\"id\" href=\"#scsicmd\">scsicmd</a>[3]) && (!<a class=\"id\" href=\"#scsicmd\">scsicmd</a>[4]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_rbuf_fill\">ata_scsi_rbuf_fill</a>(&amp;<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#ata_scsiop_noop\">ata_scsiop_noop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_invalid_field\">ata_scsi_invalid_field</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* all other commands */</span>", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_set_sense\">ata_scsi_set_sense</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#ILLEGAL_REQUEST\">ILLEGAL_REQUEST</a>, 0x20, 0x0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* \"Invalid command operation code\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#ata_scsi_add_hosts\">ata_scsi_add_hosts</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>, struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> *<a class=\"id\" href=\"#sht\">sht</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#n_ports\">n_ports</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#scsi_host_alloc\">scsi_host_alloc</a>(<a class=\"id\" href=\"#sht\">sht</a>, sizeof(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#shost\">shost</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_alloc\">err_alloc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> **)&amp;<a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#hostdata\">hostdata</a>[0] = <a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_host\">scsi_host</a> = <a class=\"id\" href=\"#shost\">shost</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#transportt\">transportt</a> = &amp;<a class=\"id\" href=\"#ata_scsi_transport_template\">ata_scsi_transport_template</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#unique_id\">unique_id</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_id\">max_id</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_lun\">max_lun</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_channel\">max_channel</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_cmd_len\">max_cmd_len</a> = 16;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Schedule policy is determined by -&gt;qc_defer()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * callback and it needs to see every deferred qc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Set host_blocked to 1 to prevent SCSI midlayer from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * automatically deferring requests.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#max_host_blocked\">max_host_blocked</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#scsi_add_host\">scsi_add_host</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_host\">scsi_host</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_add\">err_add</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_add\">err_add</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_host_put\">scsi_host_put</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#scsi_host\">scsi_host</a>);", 
" <a class=\"id\" href=\"#err_alloc\">err_alloc</a>:", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#i\">i</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#scsi_host\">scsi_host</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_remove_host\">scsi_remove_host</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_host_put\">scsi_host_put</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ata_scsi_scan_host\">ata_scsi_scan_host</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tries\">tries</a> = 5;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#last_failed_dev\">last_failed_dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
" <a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_link\">ata_for_each_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#EDGE\">EDGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#channel\">channel</a> = 0, <a class=\"id\" href=\"#id\">id</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ata_is_host_link\">ata_is_host_link</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#channel\">channel</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#pmp\">pmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#__scsi_add_device\">__scsi_add_device</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_host\">scsi_host</a>, <a class=\"id\" href=\"#channel\">channel</a>, <a class=\"id\" href=\"#id\">id</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#sdev\">sdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#sdev\">sdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we scanned while EH was in progress or allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * failure occurred, scan would have failed silently.  Check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * whether all devices are attached.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_link\">ata_for_each_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#EDGE\">EDGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_loop\">exit_loop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
" <a class=\"id\" href=\"#exit_loop\">exit_loop</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we're missing some SCSI devices */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sync\">sync</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If caller requested synchrnous scan &amp;&amp; we've made</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * any progress, sleep briefly and repeat.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> != <a class=\"id\" href=\"#last_failed_dev\">last_failed_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(100);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_failed_dev\">last_failed_dev</a> = <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We might be failing to detect boot device, give it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a few more chances.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#tries\">tries</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(100);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_printk\">ata_port_printk</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"WARNING: synchronous SCSI scan \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"failed without making any progress,\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"                  switching to async\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue_delayed_work\">queue_delayed_work</a>(<a class=\"id\" href=\"#system_long_wq\">system_long_wq</a>, &amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#hotplug_task\">hotplug_task</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#round_jiffies_relative\">round_jiffies_relative</a>(<a class=\"id\" href=\"#HZ\">HZ</a>));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_offline_dev - offline attached SCSI device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: ATA device to offline attached SCSI device for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function is called from ata_eh_hotplug() and responsible</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>for taking the SCSI device attached to @dev offline.  This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>function is called with host lock which protects dev-&gt;sdev</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>against clearing.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 if attached SCSI device exists, 0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_scsi_offline_dev\">ata_scsi_offline_dev</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_set_state\">scsi_device_set_state</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#SDEV_OFFLINE\">SDEV_OFFLINE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_remove_dev - remove attached SCSI device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: ATA device to remove attached SCSI device for</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function is called from ata_eh_scsi_hotplug() and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>responsible for removing the SCSI device attached to @dev.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep).</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ata_scsi_remove_dev\">ata_scsi_remove_dev</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Alas, we need to grab scan_mutex to ensure SCSI device</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * state doesn't change underneath us and thus</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * scsi_device_get() always succeeds.  The mutex locking can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be removed if there is __scsi_device_get() interface which</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * increments reference counts regardless of device state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_host\">scsi_host</a>-><a class=\"id\" href=\"#scan_mutex\">scan_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clearing dev-&gt;sdev is protected by host lock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If user initiated unplug races with us, sdev can go</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * away underneath us after the host lock and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * scan_mutex are released.  Hold onto it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_device_get\">scsi_device_get</a>(<a class=\"id\" href=\"#sdev\">sdev</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The following ensures the attached sdev is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * offline on return from ata_scsi_offline_dev()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * regardless it wins or loses the race</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * against this function.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_set_state\">scsi_device_set_state</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#SDEV_OFFLINE\">SDEV_OFFLINE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_host\">scsi_host</a>-><a class=\"id\" href=\"#scan_mutex\">scan_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_dev_printk\">ata_dev_printk</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"detaching (SCSI %s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_remove_device\">scsi_remove_device</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ata_scsi_handle_link_detach\">ata_scsi_handle_link_detach</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ALL\">ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_DFLAG_DETACHED\">ATA_DFLAG_DETACHED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#ATA_DFLAG_DETACHED\">ATA_DFLAG_DETACHED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_remove_dev\">ata_scsi_remove_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_media_change_notify - send media change event</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: Pointer to the disk device with media change event</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Tell the block layer to send a media change notification</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>event.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>spin_lock_irqsave(host lock)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_scsi_media_change_notify\">ata_scsi_media_change_notify</a>(struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sdev_evt_send_simple\">sdev_evt_send_simple</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#SDEV_EVT_MEDIA_CHANGE\">SDEV_EVT_MEDIA_CHANGE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_hotplug - SCSI part of hotplug</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@work: Pointer to ATA port to perform SCSI hotplug on</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Perform SCSI part of hotplug.  It's executed from a separate</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>workqueue after EH completes.  This is necessary because SCSI</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>hot plugging requires working EH and hot unplugging is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>synchronized with hot plugging with a mutex.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep).</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_scsi_hotplug\">ata_scsi_hotplug</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#ata_port\">ata_port</a>, <a class=\"id\" href=\"#hotplug_task\">hotplug_task</a>.<a class=\"id\" href=\"#work\">work</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pflags\">pflags</a> &amp; <a class=\"id\" href=\"#ATA_PFLAG_UNLOADING\">ATA_PFLAG_UNLOADING</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ENTER/EXIT - unloading\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ENTER\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_scan_mutex\">scsi_scan_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unplug detached devices.  We cannot use link iterator here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because PMP links have to be scanned even if PMP is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * currently not attached.  Iterate manually.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_handle_link_detach\">ata_scsi_handle_link_detach</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pmp_link\">pmp_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#SATA_PMP_MAX_PORTS\">SATA_PMP_MAX_PORTS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_handle_link_detach\">ata_scsi_handle_link_detach</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pmp_link\">pmp_link</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* scan for new ones */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_scan_host\">ata_scsi_scan_host</a>(<a class=\"id\" href=\"#ap\">ap</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_scan_mutex\">scsi_scan_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"EXIT\\n\");", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_user_scan - indication for user-initiated bus scan</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@shost: SCSI host to scan</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@channel: Channel to scan</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@id: ID to scan</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@lun: LUN to scan</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This function is called when user explicitly requests bus</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>scan.  Set probe pending flag and invoke EH.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>SCSI layer (we don't care)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Zero.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ata_scsi_user_scan\">ata_scsi_user_scan</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>, unsigned int <a class=\"id\" href=\"#channel\">channel</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#id\">id</a>, unsigned int <a class=\"id\" href=\"#lun\">lun</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#ata_shost_to_port\">ata_shost_to_port</a>(<a class=\"id\" href=\"#shost\">shost</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#devno\">devno</a>, <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#error_handler\">error_handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lun\">lun</a> != <a class=\"id\" href=\"#SCAN_WILD_CARD\">SCAN_WILD_CARD</a> && <a class=\"id\" href=\"#lun\">lun</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sata_pmp_attached\">sata_pmp_attached</a>(<a class=\"id\" href=\"#ap\">ap</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#channel\">channel</a> != <a class=\"id\" href=\"#SCAN_WILD_CARD\">SCAN_WILD_CARD</a> && <a class=\"id\" href=\"#channel\">channel</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devno\">devno</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a> != <a class=\"id\" href=\"#SCAN_WILD_CARD\">SCAN_WILD_CARD</a> && <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devno\">devno</a> = <a class=\"id\" href=\"#channel\">channel</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#devno\">devno</a> == <a class=\"id\" href=\"#SCAN_WILD_CARD\">SCAN_WILD_CARD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_link\">ata_for_each_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#EDGE\">EDGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a> = &amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_info\">eh_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#probe_mask\">probe_mask</a> |= <a class=\"id\" href=\"#ATA_ALL_DEVICES\">ATA_ALL_DEVICES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#action\">action</a> |= <a class=\"id\" href=\"#ATA_EH_RESET\">ATA_EH_RESET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#ata_find_dev\">ata_find_dev</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#devno\">devno</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_eh_info\">ata_eh_info</a> *<a class=\"id\" href=\"#ehi\">ehi</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_info\">eh_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#probe_mask\">probe_mask</a> |= 1 << <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devno\">devno</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ehi\">ehi</a>-><a class=\"id\" href=\"#action\">action</a> |= <a class=\"id\" href=\"#ATA_EH_RESET\">ATA_EH_RESET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_schedule_eh\">ata_port_schedule_eh</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_wait_eh\">ata_port_wait_eh</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_scsi_dev_rescan - initiate scsi_rescan_device()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@work: Pointer to ATA port to perform scsi_rescan_device()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>After ATA pass thru (SAT) commands are executed successfully,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>libata need to propagate the changes to SCSI layer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kernel thread context (may sleep).</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ata_scsi_dev_rescan\">ata_scsi_dev_rescan</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#ata_port\">ata_port</a>, <a class=\"id\" href=\"#scsi_rescan_task\">scsi_rescan_task</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_scan_mutex\">scsi_scan_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_link\">ata_for_each_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#EDGE\">EDGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ENABLED\">ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sdev\">sdev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sdev\">sdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scsi_device_get\">scsi_device_get</a>(<a class=\"id\" href=\"#sdev\">sdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_rescan_device\">scsi_rescan_device</a>(&amp;(<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_gendev\">sdev_gendev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_device_put\">scsi_device_put</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#scsi_scan_mutex\">scsi_scan_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sas_port_alloc - Allocate port for a SAS attached SATA device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@host: ATA host container for all SAS ports</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@port_info: Information from low-level host driver</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@shost: SCSI host that the scsi device is attached to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI/etc. bus probe sem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_port pointer on success / NULL on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ata_sas_port_alloc\">ata_sas_port_alloc</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> *<a class=\"id\" href=\"#port_info\">port_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#ata_port_alloc\">ata_port_alloc</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ap\">ap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#host_lock\">host_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pio_mask\">pio_mask</a> = <a class=\"id\" href=\"#port_info\">port_info</a>-><a class=\"id\" href=\"#pio_mask\">pio_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a> = <a class=\"id\" href=\"#port_info\">port_info</a>-><a class=\"id\" href=\"#mwdma_mask\">mwdma_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a> = <a class=\"id\" href=\"#port_info\">port_info</a>-><a class=\"id\" href=\"#udma_mask\">udma_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#port_info\">port_info</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#port_info\">port_info</a>-><a class=\"id\" href=\"#port_ops\">port_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#cbl\">cbl</a> = <a class=\"id\" href=\"#ATA_CBL_SATA\">ATA_CBL_SATA</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ap\">ap</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sas_port_alloc\">ata_sas_port_alloc</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sas_port_start - Set port up for dma.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to initialize</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called just after data structures for each port are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>initialized.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>May be used as the port_start() entry in ata_port_operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ata_sas_port_start\">ata_sas_port_start</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sas_port_start\">ata_sas_port_start</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_port_stop - Undo ata_sas_port_start()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: Port to shut down</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>May be used as the port_stop() entry in ata_port_operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Inherited from caller.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ata_sas_port_stop\">ata_sas_port_stop</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sas_port_stop\">ata_sas_port_stop</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sas_port_init - Initialize a SATA device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: SATA port to initialize</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>LOCKING:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>PCI/etc. bus probe sem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Zero on success, non-zero on error.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_sas_port_init\">ata_sas_port_init</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#port_start\">port_start</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#print_id\">print_id</a> = <a class=\"id\" href=\"#ata_print_id\">ata_print_id</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_bus_probe\">ata_bus_probe</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sas_port_init\">ata_sas_port_init</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sas_port_destroy - Destroy a SATA port allocated by ata_sas_port_alloc</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: SATA port to destroy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#ata_sas_port_destroy\">ata_sas_port_destroy</a>(struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#port_stop\">port_stop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#port_stop\">port_stop</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sas_port_destroy\">ata_sas_port_destroy</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sas_slave_configure - Default slave_config routine for libata devices</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sdev: SCSI device to configure</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap: ATA port to which SCSI device is attached</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Zero.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_sas_slave_configure\">ata_sas_slave_configure</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>, struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_sdev_config\">ata_scsi_sdev_config</a>(<a class=\"id\" href=\"#sdev\">sdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_dev_config\">ata_scsi_dev_config</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sas_slave_configure\">ata_sas_slave_configure</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ata_sas_queuecmd - Issue SCSI cdb to libata-managed device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@cmd: SCSI command to be sent</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@done: Completion function, called when command is complete</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@ap:<span class=\"ts\"/>ATA port to which the command is being sent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RETURNS:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return value from __ata_scsi_queuecmd() if @cmd can be queued,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#ata_sas_queuecmd\">ata_sas_queuecmd</a>(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *<a class=\"id\" href=\"#cmd\">cmd</a>, void (*<a class=\"id\" href=\"#done\">done</a>)(struct <a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_scsi_dump_cdb\">ata_scsi_dump_cdb</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ata_dev_enabled\">ata_dev_enabled</a>(<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#device\">device</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#__ata_scsi_queuecmd\">__ata_scsi_queuecmd</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#done\">done</a>, <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#device\">device</a>);", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmd\">cmd</a>-><a class=\"id\" href=\"#result\">result</a> = (<a class=\"id\" href=\"#DID_BAD_TARGET\">DID_BAD_TARGET</a> << 16);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#done\">done</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ata_sas_queuecmd\">ata_sas_queuecmd</a>);", 
];
xr_frag_insert('l/15/06905a316ecfd49ff2980c4f44d774bbed79a4.xr', __xr_tmp);
