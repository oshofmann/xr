var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 1995  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Pentium III FXSR, SSE support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Gareth Hughes &lt;gareth@valinux.com&gt;, May 2000</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  X86-64 port</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>CPU hotplug support - ashok.raj@intel.com</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This file handles the architecture-dependent parts of process handling..</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stackprotector\">stackprotector</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elfcore\">elfcore</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kprobes\">kprobes</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdebug\">kdebug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tick\">tick</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#prctl\">prctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ftrace\">ftrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i387\">i387</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#prctl\">prctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ia32\">ia32</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#idle\">idle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#debugreg\">debugreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> extern void <a class=\"id\" href=\"#ret_from_fork\">ret_from_fork</a>(void);", 
"", 
"<a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(unsigned long, <a class=\"id\" href=\"#old_rsp\">old_rsp</a>);", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(unsigned char, <a class=\"id\" href=\"#is_idle\">is_idle</a>);", 
"", 
"static <a class=\"id\" href=\"#ATOMIC_NOTIFIER_HEAD\">ATOMIC_NOTIFIER_HEAD</a>(<a class=\"id\" href=\"#idle_notifier\">idle_notifier</a>);", 
"", 
"void <a class=\"id\" href=\"#idle_notifier_register\">idle_notifier_register</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_chain_register\">atomic_notifier_chain_register</a>(&amp;<a class=\"id\" href=\"#idle_notifier\">idle_notifier</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#idle_notifier_register\">idle_notifier_register</a>);", 
"", 
"void <a class=\"id\" href=\"#idle_notifier_unregister\">idle_notifier_unregister</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_chain_unregister\">atomic_notifier_chain_unregister</a>(&amp;<a class=\"id\" href=\"#idle_notifier\">idle_notifier</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#idle_notifier_unregister\">idle_notifier_unregister</a>);", 
"", 
"void <a class=\"id\" href=\"#enter_idle\">enter_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#is_idle\">is_idle</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#idle_notifier\">idle_notifier</a>, <a class=\"id\" href=\"#IDLE_START\">IDLE_START</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit_idle\">__exit_idle</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_test_and_clear_bit_percpu\">x86_test_and_clear_bit_percpu</a>(0, <a class=\"id\" href=\"#is_idle\">is_idle</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_notifier_call_chain\">atomic_notifier_call_chain</a>(&amp;<a class=\"id\" href=\"#idle_notifier\">idle_notifier</a>, <a class=\"id\" href=\"#IDLE_END\">IDLE_END</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Called from interrupts to signify idle end */</span>", 
"void <a class=\"id\" href=\"#exit_idle\">exit_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* idle loop has pid 0 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#pid\">pid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__exit_idle\">__exit_idle</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#play_dead\">play_dead</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The idle thread. There's no useful work to be</span>", 
"<span class=\"comment\"> * done, so just try to conserve power and have a</span>", 
"<span class=\"comment\"> * low exit latency (ie sit in a loop waiting for</span>", 
"<span class=\"comment\"> * somebody to say that they'd like to reschedule)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#cpu_idle\">cpu_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#status\">status</a> |= <a class=\"id\" href=\"#TS_POLLING\">TS_POLLING</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we're the non-boot CPU, nothing set the stack canary up</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for us.  CPU0 already has it initialized but no harm in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * doing it again.  This is a good place for updating it, as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we wont ever return from this function (so the invalid</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * canaries already on the stack wont ever trigger).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#boot_init_stack_canary\">boot_init_stack_canary</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* endless idle loop with no priority at all */</span>", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_nohz_stop_sched_tick\">tick_nohz_stop_sched_tick</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#need_resched\">need_resched</a>()) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rmb\">rmb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_is_offline\">cpu_is_offline</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#play_dead\">play_dead</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Idle routines should keep interrupts disabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * from here on, until they go to idle.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, idle callbacks can misfire.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enter_idle\">enter_idle</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't trace irqs off for idle */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stop_critical_timings\">stop_critical_timings</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_idle\">pm_idle</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_critical_timings\">start_critical_timings</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_power_end\">trace_power_end</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* In many cases the interrupt that ended idle</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   has already called exit_idle. But some idle</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   loops can be woken up without interrupt. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__exit_idle\">__exit_idle</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tick_nohz_restart_sched_tick\">tick_nohz_restart_sched_tick</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable_no_resched\">preempt_enable_no_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Prints also some state that isn't saved in the pt_regs */</span>", 
"void <a class=\"id\" href=\"#__show_regs\">__show_regs</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>, int <a class=\"id\" href=\"#all\">all</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#cr0\">cr0</a> = 0L, <a class=\"id\" href=\"#cr2\">cr2</a> = 0L, <a class=\"id\" href=\"#cr3\">cr3</a> = 0L, <a class=\"id\" href=\"#cr4\">cr4</a> = 0L, <a class=\"id\" href=\"#fs\">fs</a>, <a class=\"id\" href=\"#gs\">gs</a>, <a class=\"id\" href=\"#shadowgs\">shadowgs</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#d0\">d0</a>, <a class=\"id\" href=\"#d1\">d1</a>, <a class=\"id\" href=\"#d2\">d2</a>, <a class=\"id\" href=\"#d3\">d3</a>, <a class=\"id\" href=\"#d6\">d6</a>, <a class=\"id\" href=\"#d7\">d7</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#fsindex\">fsindex</a>, <a class=\"id\" href=\"#gsindex\">gsindex</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ds\">ds</a>, <a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#es\">es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#show_regs_common\">show_regs_common</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"RIP: %04lx:[<%016lx>] \", <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cs\">cs</a> &amp; 0xffff, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_address\">printk_address</a>(<a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ip\">ip</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"RSP: %04lx:%016lx  EFLAGS: %08lx\\n\", <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ss\">ss</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#sp\">sp</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"RAX: %016lx RBX: %016lx RCX: %016lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#ax\">ax</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bx\">bx</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#cx\">cx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"RDX: %016lx RSI: %016lx RDI: %016lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#dx\">dx</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#si\">si</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#di\">di</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"RBP: %016lx R08: %016lx R09: %016lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#bp\">bp</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r8\">r8</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r9\">r9</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"R10: %016lx R11: %016lx R12: %016lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r10\">r10</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r11\">r11</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r12\">r12</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"R13: %016lx R14: %016lx R15: %016lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r13\">r13</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r14\">r14</a>, <a class=\"id\" href=\"#regs\">regs</a>-><a class=\"id\" href=\"#r15\">r15</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"movl %%ds,%0\" : \"=r\" (<a class=\"id\" href=\"#ds\">ds</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"movl %%cs,%0\" : \"=r\" (<a class=\"id\" href=\"#cs\">cs</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"movl %%es,%0\" : \"=r\" (<a class=\"id\" href=\"#es\">es</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"movl %%fs,%0\" : \"=r\" (<a class=\"id\" href=\"#fsindex\">fsindex</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"movl %%gs,%0\" : \"=r\" (<a class=\"id\" href=\"#gsindex\">gsindex</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_FS_BASE\">MSR_FS_BASE</a>, <a class=\"id\" href=\"#fs\">fs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_GS_BASE\">MSR_GS_BASE</a>, <a class=\"id\" href=\"#gs\">gs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_KERNEL_GS_BASE\">MSR_KERNEL_GS_BASE</a>, <a class=\"id\" href=\"#shadowgs\">shadowgs</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#all\">all</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr0\">cr0</a> = <a class=\"id\" href=\"#read_cr0\">read_cr0</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr2\">cr2</a> = <a class=\"id\" href=\"#read_cr2\">read_cr2</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr3\">cr3</a> = <a class=\"id\" href=\"#read_cr3\">read_cr3</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cr4\">cr4</a> = <a class=\"id\" href=\"#read_cr4\">read_cr4</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"FS:  %016lx(%04x) GS:%016lx(%04x) knlGS:%016lx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#fs\">fs</a>, <a class=\"id\" href=\"#fsindex\">fsindex</a>, <a class=\"id\" href=\"#gs\">gs</a>, <a class=\"id\" href=\"#gsindex\">gsindex</a>, <a class=\"id\" href=\"#shadowgs\">shadowgs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"CS:  %04x DS: %04x ES: %04x CR0: %016lx\\n\", <a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#ds\">ds</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#cr0\">cr0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEFAULT\">KERN_DEFAULT</a> \"CR2: %016lx CR3: %016lx CR4: %016lx\\n\", <a class=\"id\" href=\"#cr2\">cr2</a>, <a class=\"id\" href=\"#cr3\">cr3</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cr4\">cr4</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_debugreg\">get_debugreg</a>(<a class=\"id\" href=\"#d0\">d0</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_debugreg\">get_debugreg</a>(<a class=\"id\" href=\"#d1\">d1</a>, 1);", 
];
xr_frag_insert('l/15/75b4769be9f77f516272aeadee3555f29dc7ed.xr', __xr_tmp);
