var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_DIV64_H\">_ASM_X86_DIV64_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_DIV64_H\">_ASM_X86_DIV64_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * do_div() is NOT a C function. It wants to return</span>", 
"<span class=\"comment\"> * two values (the quotient and the remainder), but</span>", 
"<span class=\"comment\"> * since that doesn't work very well in C, what it</span>", 
"<span class=\"comment\"> * does is:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * - modifies the 64-bit dividend _in_place_</span>", 
"<span class=\"comment\"> * - returns the 32-bit remainder</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This ends up being the most efficient \"calling</span>", 
"<span class=\"comment\"> * convention\" on x86.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#base\">base</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#__upper\">__upper</a>, <a class=\"id\" href=\"#__low\">__low</a>, <a class=\"id\" href=\"#__high\">__high</a>, <a class=\"id\" href=\"#__mod\">__mod</a>, <a class=\"id\" href=\"#__base\">__base</a>;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__base\">__base</a> = (<a class=\"id\" href=\"#base\">base</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"\":\"=a\" (<a class=\"id\" href=\"#__low\">__low</a>), \"=d\" (<a class=\"id\" href=\"#__high\">__high</a>) : \"A\" (<a class=\"id\" href=\"#n\">n</a>));<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__upper\">__upper</a> = <a class=\"id\" href=\"#__high\">__high</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__high\">__high</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__upper\">__upper</a> = <a class=\"id\" href=\"#__high\">__high</a> % (<a class=\"id\" href=\"#__base\">__base</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__high\">__high</a> = <a class=\"id\" href=\"#__high\">__high</a> / (<a class=\"id\" href=\"#__base\">__base</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"divl %2\":\"=a\" (<a class=\"id\" href=\"#__low\">__low</a>), \"=d\" (<a class=\"id\" href=\"#__mod\">__mod</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>    : \"rm\" (<a class=\"id\" href=\"#__base\">__base</a>), \"0\" (<a class=\"id\" href=\"#__low\">__low</a>), \"1\" (<a class=\"id\" href=\"#__upper\">__upper</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a>(\"\":\"=A\" (<a class=\"id\" href=\"#n\">n</a>) : \"a\" (<a class=\"id\" href=\"#__low\">__low</a>), \"d\" (<a class=\"id\" href=\"#__high\">__high</a>));<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__mod\">__mod</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#div_u64_rem\">div_u64_rem</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#dividend\">dividend</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#divisor\">divisor</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#remainder\">remainder</a>)", 
"{", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#v64\">v64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v32\">v32</a>[2];", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#d\">d</a> = { <a class=\"id\" href=\"#dividend\">dividend</a> };", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#upper\">upper</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> = <a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#v32\">v32</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#v32\">v32</a>[1] = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#upper\">upper</a> >= <a class=\"id\" href=\"#divisor\">divisor</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#v32\">v32</a>[1] = <a class=\"id\" href=\"#upper\">upper</a> / <a class=\"id\" href=\"#divisor\">divisor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#upper\">upper</a> %= <a class=\"id\" href=\"#divisor\">divisor</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> (\"divl %2\" : \"=a\" (<a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#v32\">v32</a>[0]), \"=d\" (*<a class=\"id\" href=\"#remainder\">remainder</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/>\"rm\" (<a class=\"id\" href=\"#divisor\">divisor</a>), \"0\" (<a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#v32\">v32</a>[0]), \"1\" (<a class=\"id\" href=\"#upper\">upper</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d\">d</a>.<a class=\"id\" href=\"#v64\">v64</a>;", 
"}", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#div_u64_rem\">div_u64_rem</a><span class=\"ts\"/><a class=\"id\" href=\"#div_u64_rem\">div_u64_rem</a>", 
"", 
"#else", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>-<a class=\"id\" href=\"#generic\">generic</a>/<a class=\"id\" href=\"#div64\">div64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_DIV64_H */</span>", 
];
xr_frag_insert('l/15/af1a604dd94e762dbdecc12278c0f1c29294a9.xr', __xr_tmp);
