var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#va\">va</a> == <a class=\"id\" href=\"#TLB_FLUSH_ALL\">TLB_FLUSH_ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#MMUEXT_TLB_FLUSH_MULTI\">MMUEXT_TLB_FLUSH_MULTI</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#MMUEXT_INVLPG_MULTI\">MMUEXT_INVLPG_MULTI</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#arg1\">arg1</a>.<a class=\"id\" href=\"#linear_addr\">linear_addr</a> = <a class=\"id\" href=\"#va\">va</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MULTI_mmuext_op\">MULTI_mmuext_op</a>(<a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#mc\">mc</a>, &amp;<a class=\"id\" href=\"#args\">args</a>-><a class=\"id\" href=\"#op\">op</a>, 1, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_MMU\">PARAVIRT_LAZY_MMU</a>);", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#xen_read_cr3\">xen_read_cr3</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#percpu_read\">percpu_read</a>(<a class=\"id\" href=\"#xen_cr3\">xen_cr3</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_current_cr3\">set_current_cr3</a>(void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#xen_current_cr3\">xen_current_cr3</a>, (unsigned long)<a class=\"id\" href=\"#v\">v</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__xen_write_cr3\">__xen_write_cr3</a>(<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#kernel\">kernel</a>, unsigned long <a class=\"id\" href=\"#cr3\">cr3</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mmuext_op\">mmuext_op</a> *<a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#multicall_space\">multicall_space</a> <a class=\"id\" href=\"#mcs\">mcs</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mfn\">mfn</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cr3\">cr3</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mfn\">mfn</a> = <a class=\"id\" href=\"#pfn_to_mfn\">pfn_to_mfn</a>(<a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#cr3\">cr3</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mfn\">mfn</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#mfn\">mfn</a> == 0 && <a class=\"id\" href=\"#kernel\">kernel</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mcs\">mcs</a> = <a class=\"id\" href=\"#__xen_mc_entry\">__xen_mc_entry</a>(sizeof(*<a class=\"id\" href=\"#op\">op</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#kernel\">kernel</a> ? <a class=\"id\" href=\"#MMUEXT_NEW_BASEPTR\">MMUEXT_NEW_BASEPTR</a> : <a class=\"id\" href=\"#MMUEXT_NEW_USER_BASEPTR\">MMUEXT_NEW_USER_BASEPTR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>-><a class=\"id\" href=\"#arg1\">arg1</a>.<a class=\"id\" href=\"#mfn\">mfn</a> = <a class=\"id\" href=\"#mfn\">mfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MULTI_mmuext_op\">MULTI_mmuext_op</a>(<a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#mc\">mc</a>, <a class=\"id\" href=\"#op\">op</a>, 1, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kernel\">kernel</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#xen_cr3\">xen_cr3</a>, <a class=\"id\" href=\"#cr3\">cr3</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Update xen_current_cr3 once the batch has actually</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   been submitted. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_callback\">xen_mc_callback</a>(<a class=\"id\" href=\"#set_current_cr3\">set_current_cr3</a>, (void *)<a class=\"id\" href=\"#cr3\">cr3</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_write_cr3\">xen_write_cr3</a>(unsigned long <a class=\"id\" href=\"#cr3\">cr3</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#preemptible\">preemptible</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_batch\">xen_mc_batch</a>();  <span class=\"comment\">/* disables interrupts */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update while interrupts are disabled, so its atomic with</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   respect to ipis */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_write\">percpu_write</a>(<a class=\"id\" href=\"#xen_cr3\">xen_cr3</a>, <a class=\"id\" href=\"#cr3\">cr3</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__xen_write_cr3\">__xen_write_cr3</a>(<a class=\"id\" href=\"#true\">true</a>, <a class=\"id\" href=\"#cr3\">cr3</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#user_pgd\">user_pgd</a> = <a class=\"id\" href=\"#xen_get_user_pgd\">xen_get_user_pgd</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#cr3\">cr3</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#user_pgd\">user_pgd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__xen_write_cr3\">__xen_write_cr3</a>(<a class=\"id\" href=\"#false\">false</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#user_pgd\">user_pgd</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__xen_write_cr3\">__xen_write_cr3</a>(<a class=\"id\" href=\"#false\">false</a>, 0);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);  <span class=\"comment\">/* interrupts restored */</span>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#xen_pgd_alloc\">xen_pgd_alloc</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#PagePinned\">PagePinned</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#pgd\">pgd</a>)));", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#user_pgd\">user_pgd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#private\">private</a> != 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_pgd\">user_pgd</a> = (<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#private\">private</a> = (unsigned long)<a class=\"id\" href=\"#user_pgd\">user_pgd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#user_pgd\">user_pgd</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#user_pgd\">user_pgd</a>[<a class=\"id\" href=\"#pgd_index\">pgd_index</a>(<a class=\"id\" href=\"#VSYSCALL_START\">VSYSCALL_START</a>)] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pgd\">__pgd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#level3_user_vsyscall\">level3_user_vsyscall</a>) | <a class=\"id\" href=\"#_PAGE_TABLE\">_PAGE_TABLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#PagePinned\">PagePinned</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#xen_get_user_pgd\">xen_get_user_pgd</a>(<a class=\"id\" href=\"#pgd\">pgd</a>))));", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_pgd_free\">xen_pgd_free</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#user_pgd\">user_pgd</a> = <a class=\"id\" href=\"#xen_get_user_pgd\">xen_get_user_pgd</a>(<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#user_pgd\">user_pgd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#user_pgd\">user_pgd</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"static <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#mask_rw_pte\">mask_rw_pte</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* If there's an existing pte, then don't allow _PAGE_RW to be set */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_val_ma\">pte_val_ma</a>(*<a class=\"id\" href=\"#ptep\">ptep</a>) &amp; <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#__pte_ma\">__pte_ma</a>(((<a class=\"id\" href=\"#pte_val_ma\">pte_val_ma</a>(*<a class=\"id\" href=\"#ptep\">ptep</a>) &amp; <a class=\"id\" href=\"#_PAGE_RW\">_PAGE_RW</a>) | ~<a class=\"id\" href=\"#_PAGE_RW\">_PAGE_RW</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pte_val_ma\">pte_val_ma</a>(<a class=\"id\" href=\"#pte\">pte</a>));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte\">pte</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Init-time set_pte while constructing initial pagetables, which</span>", 
"<span class=\"comment\">   doesn't allow RO pagetable pages to be remapped RW */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_set_pte_init\">xen_set_pte_init</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#mask_rw_pte\">mask_rw_pte</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_set_pte\">xen_set_pte</a>(<a class=\"id\" href=\"#ptep\">ptep</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(unsigned <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mmuext_op\">mmuext_op</a> <a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#cmd\">cmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#arg1\">arg1</a>.<a class=\"id\" href=\"#mfn\">mfn</a> = <a class=\"id\" href=\"#pfn_to_mfn\">pfn_to_mfn</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_mmuext_op\">HYPERVISOR_mmuext_op</a>(&amp;<a class=\"id\" href=\"#op\">op</a>, 1, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"", 
"<span class=\"comment\">/* Early in boot, while setting up the initial pagetable, assume</span>", 
"<span class=\"comment\">   everything is pinned. */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_alloc_pte_init\">xen_alloc_pte_init</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FLATMEM\">CONFIG_FLATMEM</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#mem_map\">mem_map</a>);<span class=\"ts\"/><span class=\"comment\">/* should only be used early */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readonly\">make_lowmem_page_readonly</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#PFN_PHYS\">PFN_PHYS</a>(<a class=\"id\" href=\"#pfn\">pfn</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_PIN_L1_TABLE\">MMUEXT_PIN_L1_TABLE</a>, <a class=\"id\" href=\"#pfn\">pfn</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Used for pmd and pud */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_alloc_pmd_init\">xen_alloc_pmd_init</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FLATMEM\">CONFIG_FLATMEM</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#mem_map\">mem_map</a>);<span class=\"ts\"/><span class=\"comment\">/* should only be used early */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readonly\">make_lowmem_page_readonly</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#PFN_PHYS\">PFN_PHYS</a>(<a class=\"id\" href=\"#pfn\">pfn</a>)));", 
"}", 
"", 
"<span class=\"comment\">/* Early release_pte assumes that all pts are pinned, since there's</span>", 
"<span class=\"comment\">   only init_mm and anything attached to that is pinned. */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_release_pte_init\">xen_release_pte_init</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_UNPIN_TABLE\">MMUEXT_UNPIN_TABLE</a>, <a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readwrite\">make_lowmem_page_readwrite</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#PFN_PHYS\">PFN_PHYS</a>(<a class=\"id\" href=\"#pfn\">pfn</a>)));", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_release_pmd_init\">xen_release_pmd_init</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readwrite\">make_lowmem_page_readwrite</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#PFN_PHYS\">PFN_PHYS</a>(<a class=\"id\" href=\"#pfn\">pfn</a>)));", 
"}", 
"", 
"<span class=\"comment\">/* This needs to make sure the new pte page is pinned iff its being</span>", 
"<span class=\"comment\">   attached to a pinned pagetable. */</span>", 
"static void <a class=\"id\" href=\"#xen_alloc_ptpage\">xen_alloc_ptpage</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, unsigned <a class=\"id\" href=\"#level\">level</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PagePinned\">PagePinned</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#pgd\">pgd</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SetPagePinned\">SetPagePinned</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageHighMem\">PageHighMem</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readonly\">make_lowmem_page_readonly</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#PFN_PHYS\">PFN_PHYS</a>((unsigned long)<a class=\"id\" href=\"#pfn\">pfn</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#PT_PTE\">PT_PTE</a> && <a class=\"id\" href=\"#USE_SPLIT_PTLOCKS\">USE_SPLIT_PTLOCKS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_PIN_L1_TABLE\">MMUEXT_PIN_L1_TABLE</a>, <a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make sure there are no stray mappings of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   this page */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmap_flush_unused\">kmap_flush_unused</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_alloc_pte\">xen_alloc_pte</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_alloc_ptpage\">xen_alloc_ptpage</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PT_PTE\">PT_PTE</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_alloc_pmd\">xen_alloc_pmd</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_alloc_ptpage\">xen_alloc_ptpage</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PT_PMD\">PT_PMD</a>);", 
"}", 
"", 
"<span class=\"comment\">/* This should never happen until we're OK to use struct page */</span>", 
"static void <a class=\"id\" href=\"#xen_release_ptpage\">xen_release_ptpage</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>, unsigned <a class=\"id\" href=\"#level\">level</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#pfn_to_page\">pfn_to_page</a>(<a class=\"id\" href=\"#pfn\">pfn</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#PagePinned\">PagePinned</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#PageHighMem\">PageHighMem</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#PT_PTE\">PT_PTE</a> && <a class=\"id\" href=\"#USE_SPLIT_PTLOCKS\">USE_SPLIT_PTLOCKS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_UNPIN_TABLE\">MMUEXT_UNPIN_TABLE</a>, <a class=\"id\" href=\"#pfn\">pfn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#make_lowmem_page_readwrite\">make_lowmem_page_readwrite</a>(<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#PFN_PHYS\">PFN_PHYS</a>(<a class=\"id\" href=\"#pfn\">pfn</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ClearPagePinned\">ClearPagePinned</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_release_pte\">xen_release_pte</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_release_ptpage\">xen_release_ptpage</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PT_PTE\">PT_PTE</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_release_pmd\">xen_release_pmd</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_release_ptpage\">xen_release_ptpage</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PT_PMD\">PT_PMD</a>);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> == 4", 
"static void <a class=\"id\" href=\"#xen_alloc_pud\">xen_alloc_pud</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_alloc_ptpage\">xen_alloc_ptpage</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PT_PUD\">PT_PUD</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_release_pud\">xen_release_pud</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_release_ptpage\">xen_release_ptpage</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PT_PUD\">PT_PUD</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_reserve_top\">xen_reserve_top</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#top\">top</a> = <a class=\"id\" href=\"#HYPERVISOR_VIRT_START\">HYPERVISOR_VIRT_START</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_platform_parameters\">xen_platform_parameters</a> <a class=\"id\" href=\"#pp\">pp</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_xen_version\">HYPERVISOR_xen_version</a>(<a class=\"id\" href=\"#XENVER_platform_parameters\">XENVER_platform_parameters</a>, &amp;<a class=\"id\" href=\"#pp\">pp</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#top\">top</a> = <a class=\"id\" href=\"#pp\">pp</a>.<a class=\"id\" href=\"#virt_start\">virt_start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_top_address\">reserve_top_address</a>(-<a class=\"id\" href=\"#top\">top</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_32 */</span>", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Like __va(), but returns address in the kernel mapping (which is</span>", 
"<span class=\"comment\"> * all we have until the physical memory mapping has been set up.</span>", 
"<span class=\"comment\"> */</span>", 
"static void *<a class=\"id\" href=\"#__ka\">__ka</a>(<a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a> <a class=\"id\" href=\"#paddr\">paddr</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>return (void *)(<a class=\"id\" href=\"#paddr\">paddr</a> + <a class=\"id\" href=\"#__START_KERNEL_map\">__START_KERNEL_map</a>);", 
"#else", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#paddr\">paddr</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/* Convert a machine address to physical address */</span>", 
"static unsigned long <a class=\"id\" href=\"#m2p\">m2p</a>(<a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a> <a class=\"id\" href=\"#maddr\">maddr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a> <a class=\"id\" href=\"#paddr\">paddr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#maddr\">maddr</a> &= <a class=\"id\" href=\"#PTE_PFN_MASK\">PTE_PFN_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paddr\">paddr</a> = <a class=\"id\" href=\"#mfn_to_pfn\">mfn_to_pfn</a>(<a class=\"id\" href=\"#maddr\">maddr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#paddr\">paddr</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Convert a machine address to kernel virtual */</span>", 
"static void *<a class=\"id\" href=\"#m2v\">m2v</a>(<a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a> <a class=\"id\" href=\"#maddr\">maddr</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ka\">__ka</a>(<a class=\"id\" href=\"#m2p\">m2p</a>(<a class=\"id\" href=\"#maddr\">maddr</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#addr\">addr</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_update_va_mapping\">HYPERVISOR_update_va_mapping</a>((unsigned long)<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte\">pte</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_map_identity_early\">xen_map_identity_early</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#max_pfn\">max_pfn</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#pmdidx\">pmdidx</a>, <a class=\"id\" href=\"#pteidx\">pteidx</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ident_pte\">ident_pte</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ident_pte\">ident_pte</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pfn\">pfn</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pmdidx\">pmdidx</a> = 0; <a class=\"id\" href=\"#pmdidx\">pmdidx</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a> && <a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#max_pfn\">max_pfn</a>; <a class=\"id\" href=\"#pmdidx\">pmdidx</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte_page\">pte_page</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reuse or allocate a page of ptes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_present\">pmd_present</a>(<a class=\"id\" href=\"#pmd\">pmd</a>[<a class=\"id\" href=\"#pmdidx\">pmdidx</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_page\">pte_page</a> = <a class=\"id\" href=\"#m2v\">m2v</a>(<a class=\"id\" href=\"#pmd\">pmd</a>[<a class=\"id\" href=\"#pmdidx\">pmdidx</a>].<a class=\"id\" href=\"#pmd\">pmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for free pte pages */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ident_pte\">ident_pte</a> == <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#level1_ident_pgt\">level1_ident_pgt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_page\">pte_page</a> = &amp;<a class=\"id\" href=\"#level1_ident_pgt\">level1_ident_pgt</a>[<a class=\"id\" href=\"#ident_pte\">ident_pte</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ident_pte\">ident_pte</a> += <a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a>[<a class=\"id\" href=\"#pmdidx\">pmdidx</a>] = <a class=\"id\" href=\"#__pmd\">__pmd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pte_page\">pte_page</a>) | <a class=\"id\" href=\"#_PAGE_TABLE\">_PAGE_TABLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Install mappings */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#pteidx\">pteidx</a> = 0; <a class=\"id\" href=\"#pteidx\">pteidx</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>; <a class=\"id\" href=\"#pteidx\">pteidx</a>++, <a class=\"id\" href=\"#pfn\">pfn</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn\">pfn</a> &gt; <a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a> = <a class=\"id\" href=\"#pfn\">pfn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pte_none\">pte_none</a>(<a class=\"id\" href=\"#pte_page\">pte_page</a>[<a class=\"id\" href=\"#pteidx\">pteidx</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#pfn\">pfn</a>, <a class=\"id\" href=\"#PAGE_KERNEL_EXEC\">PAGE_KERNEL_EXEC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_page\">pte_page</a>[<a class=\"id\" href=\"#pteidx\">pteidx</a>] = <a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pteidx\">pteidx</a> = 0; <a class=\"id\" href=\"#pteidx\">pteidx</a> &lt; <a class=\"id\" href=\"#ident_pte\">ident_pte</a>; <a class=\"id\" href=\"#pteidx\">pteidx</a> += <a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(&amp;<a class=\"id\" href=\"#level1_ident_pgt\">level1_ident_pgt</a>[<a class=\"id\" href=\"#pteidx\">pteidx</a>], <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"static void <a class=\"id\" href=\"#convert_pfn_mfn\">convert_pfn_mfn</a>(void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* All levels are converted the same way, so just treat them</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   as ptes. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#xen_make_pte\">xen_make_pte</a>(<a class=\"id\" href=\"#pte\">pte</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#pte\">pte</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up the inital kernel pagetable.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We can construct this by grafting the Xen provided pagetable into</span>", 
"<span class=\"comment\"> * head_64.S's preconstructed pagetables.  We copy the Xen L2's into</span>", 
"<span class=\"comment\"> * level2_ident_pgt, level2_kernel_pgt and level2_fixmap_pgt.  This</span>", 
"<span class=\"comment\"> * means that only the kernel has a physical mapping to start with -</span>", 
"<span class=\"comment\"> * but that's enough to get __va working.  We need to fill in the rest</span>", 
"<span class=\"comment\"> * of the physical mapping once some sort of allocator has been set</span>", 
"<span class=\"comment\"> * up.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#xen_setup_kernel_pagetable\">xen_setup_kernel_pagetable</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#max_pfn\">max_pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#l3\">l3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#l2\">l2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Zap identity mapping */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_level4_pgt\">init_level4_pgt</a>[0] = <a class=\"id\" href=\"#__pgd\">__pgd</a>(0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Pre-constructed entries are in pfn, so convert to mfn */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#convert_pfn_mfn\">convert_pfn_mfn</a>(<a class=\"id\" href=\"#init_level4_pgt\">init_level4_pgt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#convert_pfn_mfn\">convert_pfn_mfn</a>(<a class=\"id\" href=\"#level3_ident_pgt\">level3_ident_pgt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#convert_pfn_mfn\">convert_pfn_mfn</a>(<a class=\"id\" href=\"#level3_kernel_pgt\">level3_kernel_pgt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a> = <a class=\"id\" href=\"#m2v\">m2v</a>(<a class=\"id\" href=\"#pgd\">pgd</a>[<a class=\"id\" href=\"#pgd_index\">pgd_index</a>(<a class=\"id\" href=\"#__START_KERNEL_map\">__START_KERNEL_map</a>)].<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = <a class=\"id\" href=\"#m2v\">m2v</a>(<a class=\"id\" href=\"#l3\">l3</a>[<a class=\"id\" href=\"#pud_index\">pud_index</a>(<a class=\"id\" href=\"#__START_KERNEL_map\">__START_KERNEL_map</a>)].<a class=\"id\" href=\"#pud\">pud</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#level2_ident_pgt\">level2_ident_pgt</a>, <a class=\"id\" href=\"#l2\">l2</a>, sizeof(<a class=\"id\" href=\"#pmd_t\">pmd_t</a>) * <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>, <a class=\"id\" href=\"#l2\">l2</a>, sizeof(<a class=\"id\" href=\"#pmd_t\">pmd_t</a>) * <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l3\">l3</a> = <a class=\"id\" href=\"#m2v\">m2v</a>(<a class=\"id\" href=\"#pgd\">pgd</a>[<a class=\"id\" href=\"#pgd_index\">pgd_index</a>(<a class=\"id\" href=\"#__START_KERNEL_map\">__START_KERNEL_map</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>)].<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l2\">l2</a> = <a class=\"id\" href=\"#m2v\">m2v</a>(<a class=\"id\" href=\"#l3\">l3</a>[<a class=\"id\" href=\"#pud_index\">pud_index</a>(<a class=\"id\" href=\"#__START_KERNEL_map\">__START_KERNEL_map</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>)].<a class=\"id\" href=\"#pud\">pud</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#level2_fixmap_pgt\">level2_fixmap_pgt</a>, <a class=\"id\" href=\"#l2\">l2</a>, sizeof(<a class=\"id\" href=\"#pmd_t\">pmd_t</a>) * <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up identity map */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_map_identity_early\">xen_map_identity_early</a>(<a class=\"id\" href=\"#level2_ident_pgt\">level2_ident_pgt</a>, <a class=\"id\" href=\"#max_pfn\">max_pfn</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make pagetable pieces RO */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#init_level4_pgt\">init_level4_pgt</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#level3_ident_pgt\">level3_ident_pgt</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#level3_kernel_pgt\">level3_kernel_pgt</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#level3_user_vsyscall\">level3_user_vsyscall</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#level2_fixmap_pgt\">level2_fixmap_pgt</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Pin down new L4 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_PIN_L4_TABLE\">MMUEXT_PIN_L4_TABLE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#__pa_symbol\">__pa_symbol</a>(<a class=\"id\" href=\"#init_level4_pgt\">init_level4_pgt</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unpin Xen-provided one */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_UNPIN_TABLE\">MMUEXT_UNPIN_TABLE</a>, <a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pgd\">pgd</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Switch over */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#init_level4_pgt\">init_level4_pgt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * At this stage there can be no user pgd, and no page</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * structure to attach it to, so make sure we just set kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pgd.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_batch\">xen_mc_batch</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__xen_write_cr3\">__xen_write_cr3</a>(<a class=\"id\" href=\"#true\">true</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pgd\">pgd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(<a class=\"id\" href=\"#PARAVIRT_LAZY_CPU\">PARAVIRT_LAZY_CPU</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#pt_base\">pt_base</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#pt_base\">pt_base</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#nr_pt_frames\">nr_pt_frames</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"XEN PAGETABLES\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pgd\">pgd</a>;", 
"}", 
"#else<span class=\"ts\"/><span class=\"comment\">/* !CONFIG_X86_64 */</span>", 
"static <a class=\"id\" href=\"#pmd_t\">pmd_t</a> <a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>[<a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>] <a class=\"id\" href=\"#__page_aligned_bss\">__page_aligned_bss</a>;", 
"", 
"<a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#xen_setup_kernel_pagetable\">xen_setup_kernel_pagetable</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#max_pfn\">max_pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#kernel_pmd\">kernel_pmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a> = <a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#pt_base\">pt_base</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#nr_pt_frames\">nr_pt_frames</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  512*1024);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_pmd\">kernel_pmd</a> = <a class=\"id\" href=\"#m2v\">m2v</a>(<a class=\"id\" href=\"#pgd\">pgd</a>[<a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a>].<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>, <a class=\"id\" href=\"#kernel_pmd\">kernel_pmd</a>, sizeof(<a class=\"id\" href=\"#pmd_t\">pmd_t</a>) * <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_map_identity_early\">xen_map_identity_early</a>(<a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>, <a class=\"id\" href=\"#max_pfn\">max_pfn</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>, <a class=\"id\" href=\"#pgd\">pgd</a>, sizeof(<a class=\"id\" href=\"#pgd_t\">pgd_t</a>) * <a class=\"id\" href=\"#PTRS_PER_PGD\">PTRS_PER_PGD</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pgd\">set_pgd</a>(&amp;<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>[<a class=\"id\" href=\"#KERNEL_PGD_BOUNDARY\">KERNEL_PGD_BOUNDARY</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pgd\">__pgd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>) | <a class=\"id\" href=\"#_PAGE_PRESENT\">_PAGE_PRESENT</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_page_prot\">set_page_prot</a>(<a class=\"id\" href=\"#empty_zero_page\">empty_zero_page</a>, <a class=\"id\" href=\"#PAGE_KERNEL_RO\">PAGE_KERNEL_RO</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_UNPIN_TABLE\">MMUEXT_UNPIN_TABLE</a>, <a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pgd\">pgd</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_write_cr3\">xen_write_cr3</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pin_pagetable_pfn\">pin_pagetable_pfn</a>(<a class=\"id\" href=\"#MMUEXT_PIN_L3_TABLE\">MMUEXT_PIN_L3_TABLE</a>, <a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#pt_base\">pt_base</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#pt_base\">pt_base</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#xen_start_info\">xen_start_info</a>-><a class=\"id\" href=\"#nr_pt_frames\">nr_pt_frames</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>      \"XEN PAGETABLES\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_64 */</span>", 
"", 
"static void <a class=\"id\" href=\"#xen_set_fixmap\">xen_set_fixmap</a>(unsigned <a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a> <a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#phys\">phys</a> >>= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#idx\">idx</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_BTMAP_END\">FIX_BTMAP_END</a> ... <a class=\"id\" href=\"#FIX_BTMAP_BEGIN\">FIX_BTMAP_BEGIN</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_F00F_BUG\">CONFIG_X86_F00F_BUG</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_F00F_IDT\">FIX_F00F_IDT</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_WP_TEST\">FIX_WP_TEST</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_VDSO\">FIX_VDSO</a>:", 
"# <a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHMEM\">CONFIG_HIGHMEM</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_KMAP_BEGIN\">FIX_KMAP_BEGIN</a> ... <a class=\"id\" href=\"#FIX_KMAP_END\">FIX_KMAP_END</a>:", 
"# <a class=\"id\" href=\"#endif\">endif</a>", 
"#else", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#VSYSCALL_LAST_PAGE\">VSYSCALL_LAST_PAGE</a> ... <a class=\"id\" href=\"#VSYSCALL_FIRST_PAGE\">VSYSCALL_FIRST_PAGE</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_APIC_BASE\">FIX_APIC_BASE</a>:<span class=\"ts\"/><span class=\"comment\">/* maps dummy local APIC */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_TEXT_POKE0\">FIX_TEXT_POKE0</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_TEXT_POKE1\">FIX_TEXT_POKE1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All local page mappings */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FIX_PARAVIRT_BOOTMAP\">FIX_PARAVIRT_BOOTMAP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This is an MFN, but it isn't an IO mapping from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   IO domain */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#mfn_pte\">mfn_pte</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* By default, set_fixmap is used for hardware mappings */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#mfn_pte\">mfn_pte</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#__pgprot\">__pgprot</a>(<a class=\"id\" href=\"#pgprot_val\">pgprot_val</a>(<a class=\"id\" href=\"#prot\">prot</a>) | <a class=\"id\" href=\"#_PAGE_IOMAP\">_PAGE_IOMAP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__native_set_fixmap\">__native_set_fixmap</a>(<a class=\"id\" href=\"#idx\">idx</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Replicate changes to map the vsyscall page into the user</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   pagetable vsyscall mapping. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idx\">idx</a> >= <a class=\"id\" href=\"#VSYSCALL_LAST_PAGE\">VSYSCALL_LAST_PAGE</a> && <a class=\"id\" href=\"#idx\">idx</a> <= <a class=\"id\" href=\"#VSYSCALL_FIRST_PAGE\">VSYSCALL_FIRST_PAGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#__fix_to_virt\">__fix_to_virt</a>(<a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte_vaddr_pud\">set_pte_vaddr_pud</a>(<a class=\"id\" href=\"#level3_user_vsyscall\">level3_user_vsyscall</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#xen_post_allocator_init\">xen_post_allocator_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pte\">set_pte</a> = <a class=\"id\" href=\"#xen_set_pte\">xen_set_pte</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pmd\">set_pmd</a> = <a class=\"id\" href=\"#xen_set_pmd\">xen_set_pmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pud\">set_pud</a> = <a class=\"id\" href=\"#xen_set_pud\">xen_set_pud</a>;", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> == 4", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#set_pgd\">set_pgd</a> = <a class=\"id\" href=\"#xen_set_pgd\">xen_set_pgd</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This will work as long as patching hasn't happened yet</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   (which it hasn't) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#alloc_pte\">alloc_pte</a> = <a class=\"id\" href=\"#xen_alloc_pte\">xen_alloc_pte</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#alloc_pmd\">alloc_pmd</a> = <a class=\"id\" href=\"#xen_alloc_pmd\">xen_alloc_pmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#release_pte\">release_pte</a> = <a class=\"id\" href=\"#xen_release_pte\">xen_release_pte</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#release_pmd\">release_pmd</a> = <a class=\"id\" href=\"#xen_release_pmd\">xen_release_pmd</a>;", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> == 4", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#alloc_pud\">alloc_pud</a> = <a class=\"id\" href=\"#xen_alloc_pud\">xen_alloc_pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#release_pud\">release_pud</a> = <a class=\"id\" href=\"#xen_release_pud\">xen_release_pud</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SetPagePinned\">SetPagePinned</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#level3_user_vsyscall\">level3_user_vsyscall</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mark_init_mm_pinned\">xen_mark_init_mm_pinned</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#xen_leave_lazy_mmu\">xen_leave_lazy_mmu</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_flush\">xen_mc_flush</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paravirt_leave_lazy_mmu\">paravirt_leave_lazy_mmu</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a> <a class=\"id\" href=\"#xen_mmu_ops\">xen_mmu_ops</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr2\">read_cr2</a> = <a class=\"id\" href=\"#xen_read_cr2\">xen_read_cr2</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr2\">write_cr2</a> = <a class=\"id\" href=\"#xen_write_cr2\">xen_write_cr2</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_cr3\">read_cr3</a> = <a class=\"id\" href=\"#xen_read_cr3\">xen_read_cr3</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_cr3\">write_cr3</a> = <a class=\"id\" href=\"#xen_write_cr3\">xen_write_cr3</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_user\">flush_tlb_user</a> = <a class=\"id\" href=\"#xen_flush_tlb\">xen_flush_tlb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_kernel\">flush_tlb_kernel</a> = <a class=\"id\" href=\"#xen_flush_tlb\">xen_flush_tlb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_single\">flush_tlb_single</a> = <a class=\"id\" href=\"#xen_flush_tlb_single\">xen_flush_tlb_single</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush_tlb_others\">flush_tlb_others</a> = <a class=\"id\" href=\"#xen_flush_tlb_others\">xen_flush_tlb_others</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pte_update\">pte_update</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pte_update_defer\">pte_update_defer</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pgd_alloc\">pgd_alloc</a> = <a class=\"id\" href=\"#xen_pgd_alloc\">xen_pgd_alloc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pgd_free\">pgd_free</a> = <a class=\"id\" href=\"#xen_pgd_free\">xen_pgd_free</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pte\">alloc_pte</a> = <a class=\"id\" href=\"#xen_alloc_pte_init\">xen_alloc_pte_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_pte\">release_pte</a> = <a class=\"id\" href=\"#xen_release_pte_init\">xen_release_pte_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pmd\">alloc_pmd</a> = <a class=\"id\" href=\"#xen_alloc_pmd_init\">xen_alloc_pmd_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pmd_clone\">alloc_pmd_clone</a> = <a class=\"id\" href=\"#paravirt_nop\">paravirt_nop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_pmd\">release_pmd</a> = <a class=\"id\" href=\"#xen_release_pmd_init\">xen_release_pmd_init</a>,", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_pte\">set_pte</a> = <a class=\"id\" href=\"#xen_set_pte\">xen_set_pte</a>,", 
"#else", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_pte\">set_pte</a> = <a class=\"id\" href=\"#xen_set_pte_init\">xen_set_pte_init</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_pte_at\">set_pte_at</a> = <a class=\"id\" href=\"#xen_set_pte_at\">xen_set_pte_at</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_pmd\">set_pmd</a> = <a class=\"id\" href=\"#xen_set_pmd_hyper\">xen_set_pmd_hyper</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ptep_modify_prot_start\">ptep_modify_prot_start</a> = <a class=\"id\" href=\"#__ptep_modify_prot_start\">__ptep_modify_prot_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ptep_modify_prot_commit\">ptep_modify_prot_commit</a> = <a class=\"id\" href=\"#__ptep_modify_prot_commit\">__ptep_modify_prot_commit</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pte_val\">pte_val</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_pte_val\">xen_pte_val</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pgd_val\">pgd_val</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_pgd_val\">xen_pgd_val</a>),", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#make_pte\">make_pte</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_make_pte\">xen_make_pte</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#make_pgd\">make_pgd</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_make_pgd\">xen_make_pgd</a>),", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PAE\">CONFIG_X86_PAE</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_pte_atomic\">set_pte_atomic</a> = <a class=\"id\" href=\"#xen_set_pte_atomic\">xen_set_pte_atomic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pte_clear\">pte_clear</a> = <a class=\"id\" href=\"#xen_pte_clear\">xen_pte_clear</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pmd_clear\">pmd_clear</a> = <a class=\"id\" href=\"#xen_pmd_clear\">xen_pmd_clear</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_X86_PAE */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_pud\">set_pud</a> = <a class=\"id\" href=\"#xen_set_pud_hyper\">xen_set_pud_hyper</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#make_pmd\">make_pmd</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_make_pmd\">xen_make_pmd</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pmd_val\">pmd_val</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_pmd_val\">xen_pmd_val</a>),", 
"", 
"#if <a class=\"id\" href=\"#PAGETABLE_LEVELS\">PAGETABLE_LEVELS</a> == 4", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pud_val\">pud_val</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_pud_val\">xen_pud_val</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#make_pud\">make_pud</a> = <a class=\"id\" href=\"#PV_CALLEE_SAVE\">PV_CALLEE_SAVE</a>(<a class=\"id\" href=\"#xen_make_pud\">xen_make_pud</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_pgd\">set_pgd</a> = <a class=\"id\" href=\"#xen_set_pgd_hyper\">xen_set_pgd_hyper</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_pud\">alloc_pud</a> = <a class=\"id\" href=\"#xen_alloc_pmd_init\">xen_alloc_pmd_init</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_pud\">release_pud</a> = <a class=\"id\" href=\"#xen_release_pmd_init\">xen_release_pmd_init</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* PAGETABLE_LEVELS == 4 */</span>", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#activate_mm\">activate_mm</a> = <a class=\"id\" href=\"#xen_activate_mm\">xen_activate_mm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dup_mmap\">dup_mmap</a> = <a class=\"id\" href=\"#xen_dup_mmap\">xen_dup_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#exit_mmap\">exit_mmap</a> = <a class=\"id\" href=\"#xen_exit_mmap\">xen_exit_mmap</a>,", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lazy_mode\">lazy_mode</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#enter\">enter</a> = <a class=\"id\" href=\"#paravirt_enter_lazy_mmu\">paravirt_enter_lazy_mmu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#leave\">leave</a> = <a class=\"id\" href=\"#xen_leave_lazy_mmu\">xen_leave_lazy_mmu</a>,", 
"<span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_fixmap\">set_fixmap</a> = <a class=\"id\" href=\"#xen_set_fixmap\">xen_set_fixmap</a>,", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_init_mmu_ops\">xen_init_mmu_ops</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#paging\">paging</a>.<a class=\"id\" href=\"#pagetable_setup_start\">pagetable_setup_start</a> = <a class=\"id\" href=\"#xen_pagetable_setup_start\">xen_pagetable_setup_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#paging\">paging</a>.<a class=\"id\" href=\"#pagetable_setup_done\">pagetable_setup_done</a> = <a class=\"id\" href=\"#xen_pagetable_setup_done\">xen_pagetable_setup_done</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a> = <a class=\"id\" href=\"#xen_mmu_ops\">xen_mmu_ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vmap_lazy_unmap\">vmap_lazy_unmap</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Protected by xen_reservation_lock. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_CONTIG_ORDER\">MAX_CONTIG_ORDER</a> 9 <span class=\"comment\">/* 2MB */</span>", 
"static unsigned long <a class=\"id\" href=\"#discontig_frames\">discontig_frames</a>[1<<<a class=\"id\" href=\"#MAX_CONTIG_ORDER\">MAX_CONTIG_ORDER</a>];", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VOID_PTE\">VOID_PTE</a> (<a class=\"id\" href=\"#mfn_pte\">mfn_pte</a>(0, <a class=\"id\" href=\"#__pgprot\">__pgprot</a>(0)))", 
"static void <a class=\"id\" href=\"#xen_zap_pfn_range\">xen_zap_pfn_range</a>(unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>, unsigned int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#in_frames\">in_frames</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#out_frames\">out_frames</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#multicall_space\">multicall_space</a> <a class=\"id\" href=\"#mcs\">mcs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_batch\">xen_mc_batch</a>();", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; (1UL<<<a class=\"id\" href=\"#order\">order</a>); <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#vaddr\">vaddr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mcs\">mcs</a> = <a class=\"id\" href=\"#__xen_mc_entry\">__xen_mc_entry</a>(0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_frames\">in_frames</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in_frames\">in_frames</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#virt_to_mfn\">virt_to_mfn</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MULTI_update_va_mapping\">MULTI_update_va_mapping</a>(<a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#mc\">mc</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#VOID_PTE\">VOID_PTE</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_phys_to_machine\">set_phys_to_machine</a>(<a class=\"id\" href=\"#virt_to_pfn\">virt_to_pfn</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>), <a class=\"id\" href=\"#INVALID_P2M_ENTRY\">INVALID_P2M_ENTRY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#out_frames\">out_frames</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#out_frames\">out_frames</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#virt_to_pfn\">virt_to_pfn</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Update the pfn-to-mfn mappings for a virtual address range, either to</span>", 
"<span class=\"comment\"> * point to an array of mfns, or contiguously from a single starting</span>", 
"<span class=\"comment\"> * mfn.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#xen_remap_exchanged_ptes\">xen_remap_exchanged_ptes</a>(unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>, int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long *<a class=\"id\" href=\"#mfns\">mfns</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#first_mfn\">first_mfn</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mfn\">mfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_batch\">xen_mc_batch</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = 1u << <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#limit\">limit</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#vaddr\">vaddr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#multicall_space\">multicall_space</a> <a class=\"id\" href=\"#mcs\">mcs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mcs\">mcs</a> = <a class=\"id\" href=\"#__xen_mc_entry\">__xen_mc_entry</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mfns\">mfns</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mfn\">mfn</a> = <a class=\"id\" href=\"#mfns\">mfns</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mfn\">mfn</a> = <a class=\"id\" href=\"#first_mfn\">first_mfn</a> + <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; (<a class=\"id\" href=\"#limit\">limit</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#order\">order</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#UVMF_INVLPG\">UVMF_INVLPG</a> | <a class=\"id\" href=\"#UVMF_ALL\">UVMF_ALL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#UVMF_TLB_FLUSH\">UVMF_TLB_FLUSH</a> | <a class=\"id\" href=\"#UVMF_ALL\">UVMF_ALL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MULTI_update_va_mapping\">MULTI_update_va_mapping</a>(<a class=\"id\" href=\"#mcs\">mcs</a>.<a class=\"id\" href=\"#mc\">mc</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mfn_pte\">mfn_pte</a>(<a class=\"id\" href=\"#mfn\">mfn</a>, <a class=\"id\" href=\"#PAGE_KERNEL\">PAGE_KERNEL</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_phys_to_machine\">set_phys_to_machine</a>(<a class=\"id\" href=\"#virt_to_pfn\">virt_to_pfn</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>), <a class=\"id\" href=\"#mfn\">mfn</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_mc_issue\">xen_mc_issue</a>(0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Perform the hypercall to exchange a region of our pfns to point to</span>", 
"<span class=\"comment\"> * memory with the required contiguous alignment.  Takes the pfns as</span>", 
"<span class=\"comment\"> * input, and populates mfns as output.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a success code indicating whether the hypervisor was able to</span>", 
"<span class=\"comment\"> * satisfy the request or not.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#xen_exchange_memory\">xen_exchange_memory</a>(unsigned long <a class=\"id\" href=\"#extents_in\">extents_in</a>, unsigned int <a class=\"id\" href=\"#order_in\">order_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long *<a class=\"id\" href=\"#pfns_in\">pfns_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#extents_out\">extents_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#order_out\">order_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long *<a class=\"id\" href=\"#mfns_out\">mfns_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned int <a class=\"id\" href=\"#address_bits\">address_bits</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#success\">success</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_memory_exchange\">xen_memory_exchange</a> <a class=\"id\" href=\"#exchange\">exchange</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#in\">in</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#nr_extents\">nr_extents</a>   = <a class=\"id\" href=\"#extents_in\">extents_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extent_order\">extent_order</a> = <a class=\"id\" href=\"#order_in\">order_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extent_start\">extent_start</a> = <a class=\"id\" href=\"#pfns_in\">pfns_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#domid\">domid</a>        = <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#out\">out</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#nr_extents\">nr_extents</a>   = <a class=\"id\" href=\"#extents_out\">extents_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extent_order\">extent_order</a> = <a class=\"id\" href=\"#order_out\">order_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#extent_start\">extent_start</a> = <a class=\"id\" href=\"#mfns_out\">mfns_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#address_bits\">address_bits</a> = <a class=\"id\" href=\"#address_bits\">address_bits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#domid\">domid</a>        = <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#extents_in\">extents_in</a> << <a class=\"id\" href=\"#order_in\">order_in</a> != <a class=\"id\" href=\"#extents_out\">extents_out</a> << <a class=\"id\" href=\"#order_out\">order_out</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#HYPERVISOR_memory_op\">HYPERVISOR_memory_op</a>(<a class=\"id\" href=\"#XENMEM_exchange\">XENMEM_exchange</a>, &amp;<a class=\"id\" href=\"#exchange\">exchange</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#success\">success</a> = (<a class=\"id\" href=\"#exchange\">exchange</a>.<a class=\"id\" href=\"#nr_exchanged\">nr_exchanged</a> == <a class=\"id\" href=\"#extents_in\">extents_in</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#success\">success</a> && ((<a class=\"id\" href=\"#exchange\">exchange</a>.<a class=\"id\" href=\"#nr_exchanged\">nr_exchanged</a> != 0) || (<a class=\"id\" href=\"#rc\">rc</a> == 0)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#success\">success</a> && (<a class=\"id\" href=\"#rc\">rc</a> != 0));", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#success\">success</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xen_create_contiguous_region\">xen_create_contiguous_region</a>(unsigned long <a class=\"id\" href=\"#vstart\">vstart</a>, unsigned int <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#address_bits\">address_bits</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#in_frames\">in_frames</a> = <a class=\"id\" href=\"#discontig_frames\">discontig_frames</a>, <a class=\"id\" href=\"#out_frame\">out_frame</a>;", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int            <a class=\"id\" href=\"#success\">success</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Currently an auto-translated guest will not perform I/O, nor will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it require PAE page directories below 4GB. Therefore any calls to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this function are redundant and can be ignored.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_feature\">xen_feature</a>(<a class=\"id\" href=\"#XENFEAT_auto_translated_physmap\">XENFEAT_auto_translated_physmap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#order\">order</a> &gt; <a class=\"id\" href=\"#MAX_CONTIG_ORDER\">MAX_CONTIG_ORDER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((void *) <a class=\"id\" href=\"#vstart\">vstart</a>, 0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> << <a class=\"id\" href=\"#order\">order</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#xen_reservation_lock\">xen_reservation_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 1. Zap current PTEs, remembering MFNs. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_zap_pfn_range\">xen_zap_pfn_range</a>(<a class=\"id\" href=\"#vstart\">vstart</a>, <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#in_frames\">in_frames</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 2. Get a new contiguous memory extent. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#out_frame\">out_frame</a> = <a class=\"id\" href=\"#virt_to_pfn\">virt_to_pfn</a>(<a class=\"id\" href=\"#vstart\">vstart</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#success\">success</a> = <a class=\"id\" href=\"#xen_exchange_memory\">xen_exchange_memory</a>(1UL << <a class=\"id\" href=\"#order\">order</a>, 0, <a class=\"id\" href=\"#in_frames\">in_frames</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      1, <a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#out_frame\">out_frame</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#address_bits\">address_bits</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 3. Map the new extent in place of old pages. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#success\">success</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_remap_exchanged_ptes\">xen_remap_exchanged_ptes</a>(<a class=\"id\" href=\"#vstart\">vstart</a>, <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#out_frame\">out_frame</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_remap_exchanged_ptes\">xen_remap_exchanged_ptes</a>(<a class=\"id\" href=\"#vstart\">vstart</a>, <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#in_frames\">in_frames</a>, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#xen_reservation_lock\">xen_reservation_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#success\">success</a> ? 0 : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#xen_create_contiguous_region\">xen_create_contiguous_region</a>);", 
"", 
"void <a class=\"id\" href=\"#xen_destroy_contiguous_region\">xen_destroy_contiguous_region</a>(unsigned long <a class=\"id\" href=\"#vstart\">vstart</a>, unsigned int <a class=\"id\" href=\"#order\">order</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#out_frames\">out_frames</a> = <a class=\"id\" href=\"#discontig_frames\">discontig_frames</a>, <a class=\"id\" href=\"#in_frame\">in_frame</a>;", 
"<span class=\"ts\"/>unsigned long  <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#success\">success</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xen_feature\">xen_feature</a>(<a class=\"id\" href=\"#XENFEAT_auto_translated_physmap\">XENFEAT_auto_translated_physmap</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#order\">order</a> &gt; <a class=\"id\" href=\"#MAX_CONTIG_ORDER\">MAX_CONTIG_ORDER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((void *) <a class=\"id\" href=\"#vstart\">vstart</a>, 0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> << <a class=\"id\" href=\"#order\">order</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#xen_reservation_lock\">xen_reservation_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 1. Find start MFN of contiguous extent. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_frame\">in_frame</a> = <a class=\"id\" href=\"#virt_to_mfn\">virt_to_mfn</a>(<a class=\"id\" href=\"#vstart\">vstart</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 2. Zap current PTEs. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_zap_pfn_range\">xen_zap_pfn_range</a>(<a class=\"id\" href=\"#vstart\">vstart</a>, <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#out_frames\">out_frames</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 3. Do the exchange for non-contiguous MFNs. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#success\">success</a> = <a class=\"id\" href=\"#xen_exchange_memory\">xen_exchange_memory</a>(1, <a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#in_frame\">in_frame</a>, 1UL << <a class=\"id\" href=\"#order\">order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0, <a class=\"id\" href=\"#out_frames\">out_frames</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 4. Map new pages in place of old pages. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#success\">success</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_remap_exchanged_ptes\">xen_remap_exchanged_ptes</a>(<a class=\"id\" href=\"#vstart\">vstart</a>, <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#out_frames\">out_frames</a>, 0);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xen_remap_exchanged_ptes\">xen_remap_exchanged_ptes</a>(<a class=\"id\" href=\"#vstart\">vstart</a>, <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#in_frame\">in_frame</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#xen_reservation_lock\">xen_reservation_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#xen_destroy_contiguous_region\">xen_destroy_contiguous_region</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XEN_PVHVM\">CONFIG_XEN_PVHVM</a>", 
"static void <a class=\"id\" href=\"#xen_hvm_exit_mmap\">xen_hvm_exit_mmap</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_hvm_pagetable_dying\">xen_hvm_pagetable_dying</a> <a class=\"id\" href=\"#a\">a</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#domid\">domid</a> = <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#gpa\">gpa</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#pgd\">pgd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#HYPERVISOR_hvm_op\">HYPERVISOR_hvm_op</a>(<a class=\"id\" href=\"#HVMOP_pagetable_dying\">HVMOP_pagetable_dying</a>, &amp;<a class=\"id\" href=\"#a\">a</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#rc\">rc</a> &lt; 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#is_pagetable_dying_supported\">is_pagetable_dying_supported</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xen_hvm_pagetable_dying\">xen_hvm_pagetable_dying</a> <a class=\"id\" href=\"#a\">a</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#domid\">domid</a> = <a class=\"id\" href=\"#DOMID_SELF\">DOMID_SELF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#gpa\">gpa</a> = 0x00;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#HYPERVISOR_hvm_op\">HYPERVISOR_hvm_op</a>(<a class=\"id\" href=\"#HVMOP_pagetable_dying\">HVMOP_pagetable_dying</a>, &amp;<a class=\"id\" href=\"#a\">a</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"HVMOP_pagetable_dying not supported\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_hvm_init_mmu_ops\">xen_hvm_init_mmu_ops</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_pagetable_dying_supported\">is_pagetable_dying_supported</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pv_mmu_ops\">pv_mmu_ops</a>.<a class=\"id\" href=\"#exit_mmap\">exit_mmap</a> = <a class=\"id\" href=\"#xen_hvm_exit_mmap\">xen_hvm_exit_mmap</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_XEN_DEBUG_FS\">CONFIG_XEN_DEBUG_FS</a>", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#xen_mmu_debugfs\">xen_mmu_debugfs</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_xen\">d_xen</a> = <a class=\"id\" href=\"#xen_init_debugfs\">xen_init_debugfs</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d_xen\">d_xen</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(\"mmu\", <a class=\"id\" href=\"#d_xen\">d_xen</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u8\">debugfs_create_u8</a>(\"zero_stats\", 0644, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#zero_stats\">zero_stats</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pgd_update\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pgd_update\">pgd_update</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pgd_update_pinned\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pgd_update_pinned\">pgd_update_pinned</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pgd_update_batched\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pgd_update_pinned\">pgd_update_pinned</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pud_update\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pud_update\">pud_update</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pud_update_pinned\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pud_update_pinned\">pud_update_pinned</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pud_update_batched\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pud_update_pinned\">pud_update_pinned</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pmd_update\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pmd_update\">pmd_update</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pmd_update_pinned\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pmd_update_pinned\">pmd_update_pinned</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pmd_update_batched\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pmd_update_pinned\">pmd_update_pinned</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pte_update\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pte_update\">pte_update</a>);", 
"<span class=\"comment\">//<span class=\"ts\"/>debugfs_create_u32(\"pte_update_pinned\", 0444, d_mmu_debug,</span>", 
"<span class=\"comment\">//<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;mmu_stats.pte_update_pinned);</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"pte_update_batched\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#pte_update_pinned\">pte_update_pinned</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"mmu_update\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#mmu_update\">mmu_update</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"mmu_update_extended\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#mmu_update_extended\">mmu_update_extended</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xen_debugfs_create_u32_array\">xen_debugfs_create_u32_array</a>(\"mmu_update_histo\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#mmu_update_histo\">mmu_update_histo</a>, 20);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"set_pte_at\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#set_pte_at\">set_pte_at</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"set_pte_at_batched\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#set_pte_at_batched\">set_pte_at_batched</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"set_pte_at_current\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#set_pte_at_current\">set_pte_at_current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"set_pte_at_kernel\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#set_pte_at_kernel\">set_pte_at_kernel</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"prot_commit\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>, &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#prot_commit\">prot_commit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debugfs_create_u32\">debugfs_create_u32</a>(\"prot_commit_batched\", 0444, <a class=\"id\" href=\"#d_mmu_debug\">d_mmu_debug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#mmu_stats\">mmu_stats</a>.<a class=\"id\" href=\"#prot_commit_batched\">prot_commit_batched</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#xen_mmu_debugfs\">xen_mmu_debugfs</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_XEN_DEBUG_FS */</span>", 
];
xr_frag_insert('l/15/fc09d10aac074b6cf6e383757fbb15179fb342.xr', __xr_tmp);
