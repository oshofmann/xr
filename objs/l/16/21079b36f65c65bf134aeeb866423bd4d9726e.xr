var __xr_tmp = [
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: rsutils - Utilities for the resource manager</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acresrc.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_RESOURCES\">ACPI_RESOURCES</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"rsutils\")", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_decode_bitmask</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Mask            - Bitmask to decode</span>", 
"<span class=\"comment\"> *              List            - Where the converted list is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Count of bits set (length of list)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Convert a bit mask into a list of values</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_rs_decode_bitmask\">acpi_rs_decode_bitmask</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bit_count\">bit_count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Decode the mask bits */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#bit_count\">bit_count</a> = 0; <a class=\"id\" href=\"#mask\">mask</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> &amp; 0x0001) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>[<a class=\"id\" href=\"#bit_count\">bit_count</a>] = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_count\">bit_count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> >>= 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#bit_count\">bit_count</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_encode_bitmask</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  List            - List of values to encode</span>", 
"<span class=\"comment\"> *              Count           - Length of list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Encoded bitmask</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Convert a list of values to an encoded bitmask</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#acpi_rs_encode_bitmask\">acpi_rs_encode_bitmask</a>(<a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Encode the list into a single bitmask */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#mask\">mask</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= (0x1 << <a class=\"id\" href=\"#list\">list</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_move_data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Destination         - Pointer to the destination descriptor</span>", 
"<span class=\"comment\"> *              Source              - Pointer to the source descriptor</span>", 
"<span class=\"comment\"> *              item_count          - How many items to move</span>", 
"<span class=\"comment\"> *              move_type           - Byte width</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Move multiple data items from one descriptor to another. Handles</span>", 
"<span class=\"comment\"> *              alignment issues and endian issues if necessary, as configured</span>", 
"<span class=\"comment\"> *              via the ACPI_MOVE_* macros. (This is why a memcpy is not used)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void", 
"<a class=\"id\" href=\"#acpi_rs_move_data\">acpi_rs_move_data</a>(void *<a class=\"id\" href=\"#destination\">destination</a>, void *<a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#item_count\">item_count</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#move_type\">move_type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* One move per item */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#item_count\">item_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#move_type\">move_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * For the 8-bit case, we can perform the move all at once</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * since there are no alignment or endian issues</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_RSC_MOVE8\">ACPI_RSC_MOVE8</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#destination\">destination</a>, <a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#item_count\">item_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * 16-, 32-, and 64-bit cases must use the move macros that perform</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * endian conversion and/or accommodate hardware that cannot perform</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * misaligned memory transfers</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_RSC_MOVE16\">ACPI_RSC_MOVE16</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_16_TO_16\">ACPI_MOVE_16_TO_16</a>(&amp;<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u16\">u16</a>, <a class=\"id\" href=\"#destination\">destination</a>)[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u16\">u16</a>, <a class=\"id\" href=\"#source\">source</a>)[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_RSC_MOVE32\">ACPI_RSC_MOVE32</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_32_TO_32\">ACPI_MOVE_32_TO_32</a>(&amp;<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#destination\">destination</a>)[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#source\">source</a>)[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_RSC_MOVE64\">ACPI_RSC_MOVE64</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_64_TO_64\">ACPI_MOVE_64_TO_64</a>(&amp;<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u64\">u64</a>, <a class=\"id\" href=\"#destination\">destination</a>)[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u64\">u64</a>, <a class=\"id\" href=\"#source\">source</a>)[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_set_resource_length</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  total_length        - Length of the AML descriptor, including</span>", 
"<span class=\"comment\"> *                                    the header and length fields.</span>", 
"<span class=\"comment\"> *              Aml                 - Pointer to the raw AML descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Set the resource_length field of an AML</span>", 
"<span class=\"comment\"> *              resource descriptor, both Large and Small descriptors are</span>", 
"<span class=\"comment\"> *              supported automatically. Note: Descriptor Type field must</span>", 
"<span class=\"comment\"> *              be valid.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void", 
"<a class=\"id\" href=\"#acpi_rs_set_resource_length\">acpi_rs_set_resource_length</a>(<a class=\"id\" href=\"#acpi_rsdesc_size\">acpi_rsdesc_size</a> <a class=\"id\" href=\"#total_length\">total_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    union <a class=\"id\" href=\"#aml_resource\">aml_resource</a> *<a class=\"id\" href=\"#aml\">aml</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rs_length\">acpi_rs_length</a> <a class=\"id\" href=\"#resource_length\">resource_length</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Length is the total descriptor length minus the header length */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_length\">resource_length</a> = (<a class=\"id\" href=\"#acpi_rs_length\">acpi_rs_length</a>)", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#total_length\">total_length</a> - <a class=\"id\" href=\"#acpi_ut_get_resource_header_length\">acpi_ut_get_resource_header_length</a>(<a class=\"id\" href=\"#aml\">aml</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Length is stored differently for large and small descriptors */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#aml\">aml</a>-><a class=\"id\" href=\"#small_header\">small_header</a>.<a class=\"id\" href=\"#descriptor_type\">descriptor_type</a> &amp; <a class=\"id\" href=\"#ACPI_RESOURCE_NAME_LARGE\">ACPI_RESOURCE_NAME_LARGE</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Large descriptor -- bytes 1-2 contain the 16-bit length */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_16_TO_16\">ACPI_MOVE_16_TO_16</a>(&amp;<a class=\"id\" href=\"#aml\">aml</a>-><a class=\"id\" href=\"#large_header\">large_header</a>.<a class=\"id\" href=\"#resource_length\">resource_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#resource_length\">resource_length</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Small descriptor -- bits 2:0 of byte 0 contain the length */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aml\">aml</a>-><a class=\"id\" href=\"#small_header\">small_header</a>.<a class=\"id\" href=\"#descriptor_type\">descriptor_type</a> = (<a class=\"id\" href=\"#u8\">u8</a>)", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* Clear any existing length, preserving descriptor type bits */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#aml\">aml</a>-><a class=\"id\" href=\"#small_header\">small_header</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#descriptor_type\">descriptor_type</a> &amp; ~<a class=\"id\" href=\"#ACPI_RESOURCE_NAME_SMALL_LENGTH_MASK\">ACPI_RESOURCE_NAME_SMALL_LENGTH_MASK</a>)", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>     | <a class=\"id\" href=\"#resource_length\">resource_length</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_set_resource_header</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  descriptor_type     - Byte to be inserted as the type</span>", 
"<span class=\"comment\"> *              total_length        - Length of the AML descriptor, including</span>", 
"<span class=\"comment\"> *                                    the header and length fields.</span>", 
"<span class=\"comment\"> *              Aml                 - Pointer to the raw AML descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Set the descriptor_type and resource_length fields of an AML</span>", 
"<span class=\"comment\"> *              resource descriptor, both Large and Small descriptors are</span>", 
"<span class=\"comment\"> *              supported automatically</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void", 
"<a class=\"id\" href=\"#acpi_rs_set_resource_header\">acpi_rs_set_resource_header</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#descriptor_type\">descriptor_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_rsdesc_size\">acpi_rsdesc_size</a> <a class=\"id\" href=\"#total_length\">total_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    union <a class=\"id\" href=\"#aml_resource\">aml_resource</a> *<a class=\"id\" href=\"#aml\">aml</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the Resource Type */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aml\">aml</a>-><a class=\"id\" href=\"#small_header\">small_header</a>.<a class=\"id\" href=\"#descriptor_type\">descriptor_type</a> = <a class=\"id\" href=\"#descriptor_type\">descriptor_type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the Resource Length */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rs_set_resource_length\">acpi_rs_set_resource_length</a>(<a class=\"id\" href=\"#total_length\">total_length</a>, <a class=\"id\" href=\"#aml\">aml</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_strcpy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Destination         - Pointer to the destination string</span>", 
"<span class=\"comment\"> *              Source              - Pointer to the source string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      String length, including NULL terminator</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Local string copy that returns the string length, saving a</span>", 
"<span class=\"comment\"> *              strcpy followed by a strlen.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#acpi_rs_strcpy\">acpi_rs_strcpy</a>(char *<a class=\"id\" href=\"#destination\">destination</a>, char *<a class=\"id\" href=\"#source\">source</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#source\">source</a>[<a class=\"id\" href=\"#i\">i</a>]; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#destination\">destination</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#source\">source</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destination\">destination</a>[<a class=\"id\" href=\"#i\">i</a>] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return string length including the NULL terminator */</span>", 
"", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#u16\">u16</a>) (<a class=\"id\" href=\"#i\">i</a> + 1));", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_get_resource_source</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  resource_length     - Length field of the descriptor</span>", 
"<span class=\"comment\"> *              minimum_length      - Minimum length of the descriptor (minus</span>", 
"<span class=\"comment\"> *                                    any optional fields)</span>", 
"<span class=\"comment\"> *              resource_source     - Where the resource_source is returned</span>", 
"<span class=\"comment\"> *              Aml                 - Pointer to the raw AML descriptor</span>", 
"<span class=\"comment\"> *              string_ptr          - (optional) where to store the actual</span>", 
"<span class=\"comment\"> *                                    resource_source string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Length of the string plus NULL terminator, rounded up to native</span>", 
"<span class=\"comment\"> *              word boundary</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Copy the optional resource_source data from a raw AML descriptor</span>", 
"<span class=\"comment\"> *              to an internal resource descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_rs_length\">acpi_rs_length</a>", 
"<a class=\"id\" href=\"#acpi_rs_get_resource_source\">acpi_rs_get_resource_source</a>(<a class=\"id\" href=\"#acpi_rs_length\">acpi_rs_length</a> <a class=\"id\" href=\"#resource_length\">resource_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_rs_length\">acpi_rs_length</a> <a class=\"id\" href=\"#minimum_length\">minimum_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_resource_source\">acpi_resource_source</a> * <a class=\"id\" href=\"#resource_source\">resource_source</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    union <a class=\"id\" href=\"#aml_resource\">aml_resource</a> * <a class=\"id\" href=\"#aml\">aml</a>, char *<a class=\"id\" href=\"#string_ptr\">string_ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rsdesc_size\">acpi_rsdesc_size</a> <a class=\"id\" href=\"#total_length\">total_length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_length\">total_length</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#resource_length\">resource_length</a> + sizeof(struct <a class=\"id\" href=\"#aml_resource_large_header\">aml_resource_large_header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a> = <a class=\"id\" href=\"#ACPI_ADD_PTR\">ACPI_ADD_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#aml\">aml</a>, <a class=\"id\" href=\"#minimum_length\">minimum_length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * resource_source is present if the length of the descriptor is longer than</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the minimum length.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: Some resource descriptors will have an additional null, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we add 1 to the minimum length.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#total_length\">total_length</a> &gt; (<a class=\"id\" href=\"#acpi_rsdesc_size\">acpi_rsdesc_size</a>) (<a class=\"id\" href=\"#minimum_length\">minimum_length</a> + 1)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the resource_source_index */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a>[0];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_ptr\">string_ptr</a> = <a class=\"id\" href=\"#string_ptr\">string_ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#string_ptr\">string_ptr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * String destination pointer is not specified; Set the String</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * pointer to the end of the current resource_source structure.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_ptr\">string_ptr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ADD_PTR\">ACPI_ADD_PTR</a>(char, <a class=\"id\" href=\"#resource_source\">resource_source</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#acpi_resource_source\">acpi_resource_source</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * In order for the Resource length to be a multiple of the native</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * word, calculate the length of the string (+1 for NULL terminator)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and expand to the next word multiple.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Zero the entire area of the buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_length\">total_length</a> = (<a class=\"id\" href=\"#u32\">u32</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_STRLEN\">ACPI_STRLEN</a>(<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char, &amp;<a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a>[1])) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_length\">total_length</a> = (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#ACPI_ROUND_UP_TO_NATIVE_WORD\">ACPI_ROUND_UP_TO_NATIVE_WORD</a>(<a class=\"id\" href=\"#total_length\">total_length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMSET\">ACPI_MEMSET</a>(<a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_ptr\">string_ptr</a>, 0, <a class=\"id\" href=\"#total_length\">total_length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Copy the resource_source string to the destination */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_length\">string_length</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_rs_strcpy\">acpi_rs_strcpy</a>(<a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_ptr\">string_ptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a>[1]));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return ((<a class=\"id\" href=\"#acpi_rs_length\">acpi_rs_length</a>) <a class=\"id\" href=\"#total_length\">total_length</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* resource_source is not present */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#index\">index</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_length\">string_length</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_ptr\">string_ptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return (0);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_set_resource_source</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Aml                 - Pointer to the raw AML descriptor</span>", 
"<span class=\"comment\"> *              minimum_length      - Minimum length of the descriptor (minus</span>", 
"<span class=\"comment\"> *                                    any optional fields)</span>", 
"<span class=\"comment\"> *              resource_source     - Internal resource_source</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Total length of the AML descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Convert an optional resource_source from internal format to a</span>", 
"<span class=\"comment\"> *              raw AML resource descriptor</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_rsdesc_size\">acpi_rsdesc_size</a>", 
"<a class=\"id\" href=\"#acpi_rs_set_resource_source\">acpi_rs_set_resource_source</a>(union <a class=\"id\" href=\"#aml_resource\">aml_resource</a> * <a class=\"id\" href=\"#aml\">aml</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_rs_length\">acpi_rs_length</a> <a class=\"id\" href=\"#minimum_length\">minimum_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_resource_source\">acpi_resource_source</a> * <a class=\"id\" href=\"#resource_source\">resource_source</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_rsdesc_size\">acpi_rsdesc_size</a> <a class=\"id\" href=\"#descriptor_length\">descriptor_length</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_ENTRY\">ACPI_FUNCTION_ENTRY</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#descriptor_length\">descriptor_length</a> = <a class=\"id\" href=\"#minimum_length\">minimum_length</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Non-zero string length indicates presence of a resource_source */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_length\">string_length</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Point to the end of the AML descriptor */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a> = <a class=\"id\" href=\"#ACPI_ADD_PTR\">ACPI_ADD_PTR</a>(<a class=\"id\" href=\"#u8\">u8</a>, <a class=\"id\" href=\"#aml\">aml</a>, <a class=\"id\" href=\"#minimum_length\">minimum_length</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Copy the resource_source_index */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a>[0] = (<a class=\"id\" href=\"#u8\">u8</a>) <a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Copy the resource_source string */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_STRCPY\">ACPI_STRCPY</a>(<a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(char, &amp;<a class=\"id\" href=\"#aml_resource_source\">aml_resource_source</a>[1]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_ptr\">string_ptr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Add the length of the string (+ 1 for null terminator) to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * final descriptor length</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descriptor_length\">descriptor_length</a> +=", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#acpi_rsdesc_size\">acpi_rsdesc_size</a>) <a class=\"id\" href=\"#resource_source\">resource_source</a>-><a class=\"id\" href=\"#string_length\">string_length</a> + 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return the new total length of the AML descriptor */</span>", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#descriptor_length\">descriptor_length</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_get_prt_method_data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Node            - Device node</span>", 
"<span class=\"comment\"> *              ret_buffer      - Pointer to a buffer structure for the</span>", 
"<span class=\"comment\"> *                                results</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to get the _PRT value of an object</span>", 
"<span class=\"comment\"> *              contained in an object specified by the handle passed in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              If the function fails an appropriate status will be returned</span>", 
"<span class=\"comment\"> *              and the contents of the callers buffer is undefined.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_rs_get_prt_method_data\">acpi_rs_get_prt_method_data</a>(struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> * <a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> * <a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#rs_get_prt_method_data\">rs_get_prt_method_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameters guaranteed valid by caller */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute the method, no parameters */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_evaluate_object\">acpi_ut_evaluate_object</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#METHOD_NAME__PRT\">METHOD_NAME__PRT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_BTYPE_PACKAGE\">ACPI_BTYPE_PACKAGE</a>, &amp;<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Create a resource linked list from the byte stream buffer that comes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * back from the _CRS method execution.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_rs_create_pci_routing_table\">acpi_rs_create_pci_routing_table</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* On exit, we must delete the object returned by evaluate_object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_get_crs_method_data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Node            - Device node</span>", 
"<span class=\"comment\"> *              ret_buffer      - Pointer to a buffer structure for the</span>", 
"<span class=\"comment\"> *                                results</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to get the _CRS value of an object</span>", 
"<span class=\"comment\"> *              contained in an object specified by the handle passed in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              If the function fails an appropriate status will be returned</span>", 
"<span class=\"comment\"> *              and the contents of the callers buffer is undefined.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_rs_get_crs_method_data\">acpi_rs_get_crs_method_data</a>(struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> *<a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#rs_get_crs_method_data\">rs_get_crs_method_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameters guaranteed valid by caller */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute the method, no parameters */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_evaluate_object\">acpi_ut_evaluate_object</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#METHOD_NAME__CRS\">METHOD_NAME__CRS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_BTYPE_BUFFER\">ACPI_BTYPE_BUFFER</a>, &amp;<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make the call to create a resource linked list from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * byte stream buffer that comes back from the _CRS method</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * execution.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_rs_create_resource_list\">acpi_rs_create_resource_list</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* On exit, we must delete the object returned by evaluate_object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_get_prs_method_data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Node            - Device node</span>", 
"<span class=\"comment\"> *              ret_buffer      - Pointer to a buffer structure for the</span>", 
"<span class=\"comment\"> *                                results</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to get the _PRS value of an object</span>", 
"<span class=\"comment\"> *              contained in an object specified by the handle passed in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              If the function fails an appropriate status will be returned</span>", 
"<span class=\"comment\"> *              and the contents of the callers buffer is undefined.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_FUTURE_USAGE\">ACPI_FUTURE_USAGE</a>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_rs_get_prs_method_data\">acpi_rs_get_prs_method_data</a>(struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> *<a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#rs_get_prs_method_data\">rs_get_prs_method_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameters guaranteed valid by caller */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute the method, no parameters */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_evaluate_object\">acpi_ut_evaluate_object</a>(<a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#METHOD_NAME__PRS\">METHOD_NAME__PRS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_BTYPE_BUFFER\">ACPI_BTYPE_BUFFER</a>, &amp;<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make the call to create a resource linked list from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * byte stream buffer that comes back from the _CRS method</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * execution.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_rs_create_resource_list\">acpi_rs_create_resource_list</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* On exit, we must delete the object returned by evaluate_object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  ACPI_FUTURE_USAGE  */</span>", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_get_method_data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Handle          - Handle to the containing object</span>", 
"<span class=\"comment\"> *              Path            - Path to method, relative to Handle</span>", 
"<span class=\"comment\"> *              ret_buffer      - Pointer to a buffer structure for the</span>", 
"<span class=\"comment\"> *                                results</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to get the _CRS or _PRS value of an</span>", 
"<span class=\"comment\"> *              object contained in an object specified by the handle passed in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              If the function fails an appropriate status will be returned</span>", 
"<span class=\"comment\"> *              and the contents of the callers buffer is undefined.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_rs_get_method_data\">acpi_rs_get_method_data</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#path\">path</a>, struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> *<a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#rs_get_method_data\">rs_get_method_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Parameters guaranteed valid by caller */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute the method, no parameters */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_evaluate_object\">acpi_ut_evaluate_object</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ACPI_BTYPE_BUFFER\">ACPI_BTYPE_BUFFER</a>, &amp;<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make the call to create a resource linked list from the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * byte stream buffer that comes back from the method</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * execution.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_rs_create_resource_list\">acpi_rs_create_resource_list</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>, <a class=\"id\" href=\"#ret_buffer\">ret_buffer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* On exit, we must delete the object returned by evaluate_object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_rs_set_srs_method_data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Node            - Device node</span>", 
"<span class=\"comment\"> *              in_buffer       - Pointer to a buffer structure of the</span>", 
"<span class=\"comment\"> *                                parameter</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: This function is called to set the _SRS of an object contained</span>", 
"<span class=\"comment\"> *              in an object specified by the handle passed in</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              If the function fails an appropriate status will be returned</span>", 
"<span class=\"comment\"> *              and the contents of the callers buffer is undefined.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: Parameters guaranteed valid by caller</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_rs_set_srs_method_data\">acpi_rs_set_srs_method_data</a>(struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> *<a class=\"id\" href=\"#in_buffer\">in_buffer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a> *<a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#args\">args</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#rs_set_srs_method_data\">rs_set_srs_method_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate and initialize the evaluation information block */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>(sizeof(struct <a class=\"id\" href=\"#acpi_evaluate_info\">acpi_evaluate_info</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prefix_node\">prefix_node</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#pathname\">pathname</a> = <a class=\"id\" href=\"#METHOD_NAME__SRS\">METHOD_NAME__SRS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#parameters\">parameters</a> = <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_IGNORE_RETURN_VALUE\">ACPI_IGNORE_RETURN_VALUE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The in_buffer parameter will point to a linked list of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * resource parameters. It needs to be formatted into a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * byte stream to be sent in as an input parameter to _SRS</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Convert the linked list into a byte stream</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_LOCAL_BUFFER\">ACPI_ALLOCATE_LOCAL_BUFFER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_rs_create_aml_resources\">acpi_rs_create_aml_resources</a>(<a class=\"id\" href=\"#in_buffer\">in_buffer</a>-><a class=\"id\" href=\"#pointer\">pointer</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create and initialize the method parameter object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[0] = <a class=\"id\" href=\"#acpi_ut_create_internal_object\">acpi_ut_create_internal_object</a>(<a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#args\">args</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Must free the buffer allocated above (otherwise it is freed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * later)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[0]-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> = (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[0]-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[0]-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#AOPOBJ_DATA_VALID\">AOPOBJ_DATA_VALID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#args\">args</a>[1] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute the method, no return value is expected */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_evaluate\">acpi_ns_evaluate</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clean up and return the status from acpi_ns_evaluate */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#args\">args</a>[0]);", 
"", 
"      <a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
];
xr_frag_insert('l/16/21079b36f65c65bf134aeeb866423bd4d9726e.xr', __xr_tmp);
