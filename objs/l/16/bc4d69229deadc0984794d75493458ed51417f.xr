var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> * event_channel.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Event channels between domains.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 2003-2004, K A Fraser.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__XEN_PUBLIC_EVENT_CHANNEL_H__\">__XEN_PUBLIC_EVENT_CHANNEL_H__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__XEN_PUBLIC_EVENT_CHANNEL_H__\">__XEN_PUBLIC_EVENT_CHANNEL_H__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#xen\">xen</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"typedef <a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a>;", 
"<a class=\"id\" href=\"#DEFINE_GUEST_HANDLE\">DEFINE_GUEST_HANDLE</a>(<a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_alloc_unbound: Allocate a port in domain &lt;dom&gt; and mark as</span>", 
"<span class=\"comment\"> * accepting interdomain bindings from domain &lt;remote_dom&gt;. A fresh port</span>", 
"<span class=\"comment\"> * is allocated in &lt;dom&gt; and returned as &lt;port&gt;.</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *  1. If the caller is unprivileged then &lt;dom&gt; must be DOMID_SELF.</span>", 
"<span class=\"comment\"> *  2. &lt;rdom&gt; may be DOMID_SELF, allowing loopback connections.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_alloc_unbound\">EVTCHNOP_alloc_unbound</a><span class=\"ts\"/>  6", 
"struct <a class=\"id\" href=\"#evtchn_alloc_unbound\">evtchn_alloc_unbound</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domid_t\">domid_t</a> <a class=\"id\" href=\"#dom\">dom</a>, <a class=\"id\" href=\"#remote_dom\">remote_dom</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* OUT parameters */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_bind_interdomain: Construct an interdomain event channel between</span>", 
"<span class=\"comment\"> * the calling domain and &lt;remote_dom&gt;. &lt;remote_dom,remote_port&gt; must identify</span>", 
"<span class=\"comment\"> * a port that is unbound and marked as accepting bindings from the calling</span>", 
"<span class=\"comment\"> * domain. A fresh port is allocated in the calling domain and returned as</span>", 
"<span class=\"comment\"> * &lt;local_port&gt;.</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *  2. &lt;remote_dom&gt; may be DOMID_SELF, allowing loopback connections.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_bind_interdomain\">EVTCHNOP_bind_interdomain</a> 0", 
"struct <a class=\"id\" href=\"#evtchn_bind_interdomain\">evtchn_bind_interdomain</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domid_t\">domid_t</a> <a class=\"id\" href=\"#remote_dom\">remote_dom</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#remote_port\">remote_port</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* OUT parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#local_port\">local_port</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_bind_virq: Bind a local event channel to VIRQ &lt;irq&gt; on specified</span>", 
"<span class=\"comment\"> * vcpu.</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *  1. A virtual IRQ may be bound to at most one event channel per vcpu.</span>", 
"<span class=\"comment\"> *  2. The allocated event channel is bound to the specified vcpu. The binding</span>", 
"<span class=\"comment\"> *     may not be changed.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_bind_virq\">EVTCHNOP_bind_virq</a><span class=\"ts\"/>  1", 
"struct <a class=\"id\" href=\"#evtchn_bind_virq\">evtchn_bind_virq</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#virq\">virq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#vcpu\">vcpu</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* OUT parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_bind_pirq: Bind a local event channel to PIRQ &lt;irq&gt;.</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *  1. A physical IRQ may be bound to at most one event channel per domain.</span>", 
"<span class=\"comment\"> *  2. Only a sufficiently-privileged domain may bind to a physical IRQ.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_bind_pirq\">EVTCHNOP_bind_pirq</a><span class=\"ts\"/>  2", 
"struct <a class=\"id\" href=\"#evtchn_bind_pirq\">evtchn_bind_pirq</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#pirq\">pirq</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIND_PIRQ__WILL_SHARE\">BIND_PIRQ__WILL_SHARE</a> 1", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#flags\">flags</a>; <span class=\"comment\">/* BIND_PIRQ__* */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* OUT parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_bind_ipi: Bind a local event channel to receive events.</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *  1. The allocated event channel is bound to the specified vcpu. The binding</span>", 
"<span class=\"comment\"> *     may not be changed.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_bind_ipi\">EVTCHNOP_bind_ipi</a><span class=\"ts\"/>  7", 
"struct <a class=\"id\" href=\"#evtchn_bind_ipi\">evtchn_bind_ipi</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#vcpu\">vcpu</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* OUT parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_close: Close a local event channel &lt;port&gt;. If the channel is</span>", 
"<span class=\"comment\"> * interdomain then the remote end is placed in the unbound state</span>", 
"<span class=\"comment\"> * (EVTCHNSTAT_unbound), awaiting a new connection.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_close\">EVTCHNOP_close</a><span class=\"ts\"/><span class=\"ts\"/>  3", 
"struct <a class=\"id\" href=\"#evtchn_close\">evtchn_close</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_send: Send an event to the remote end of the channel whose local</span>", 
"<span class=\"comment\"> * endpoint is &lt;port&gt;.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_send\">EVTCHNOP_send</a><span class=\"ts\"/><span class=\"ts\"/>  4", 
"struct <a class=\"id\" href=\"#evtchn_send\">evtchn_send</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_status: Get the current status of the communication channel which</span>", 
"<span class=\"comment\"> * has an endpoint at &lt;dom, port&gt;.</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *  1. &lt;dom&gt; may be specified as DOMID_SELF.</span>", 
"<span class=\"comment\"> *  2. Only a sufficiently-privileged domain may obtain the status of an event</span>", 
"<span class=\"comment\"> *     channel for which &lt;dom&gt; is not DOMID_SELF.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_status\">EVTCHNOP_status</a><span class=\"ts\"/><span class=\"ts\"/>  5", 
"struct <a class=\"id\" href=\"#evtchn_status\">evtchn_status</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#domid_t\">domid_t</a>  <a class=\"id\" href=\"#dom\">dom</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* OUT parameters */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNSTAT_closed\">EVTCHNSTAT_closed</a><span class=\"ts\"/>0  <span class=\"comment\">/* Channel is not in use.<span class=\"ts\"/><span class=\"ts\"/>     */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNSTAT_unbound\">EVTCHNSTAT_unbound</a><span class=\"ts\"/>1  <span class=\"comment\">/* Channel is waiting interdom connection.*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNSTAT_interdomain\">EVTCHNSTAT_interdomain</a><span class=\"ts\"/>2  <span class=\"comment\">/* Channel is connected to remote domain. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNSTAT_pirq\">EVTCHNSTAT_pirq</a><span class=\"ts\"/><span class=\"ts\"/>3  <span class=\"comment\">/* Channel is bound to a phys IRQ line.   */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNSTAT_virq\">EVTCHNSTAT_virq</a><span class=\"ts\"/><span class=\"ts\"/>4  <span class=\"comment\">/* Channel is bound to a virtual IRQ line */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNSTAT_ipi\">EVTCHNSTAT_ipi</a><span class=\"ts\"/><span class=\"ts\"/>5  <span class=\"comment\">/* Channel is bound to a virtual IPI line */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#vcpu\">vcpu</a>;<span class=\"ts\"/><span class=\"ts\"/>   <span class=\"comment\">/* VCPU to which this channel is bound.   */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domid_t\">domid_t</a> <a class=\"id\" href=\"#dom\">dom</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#unbound\">unbound</a>; <span class=\"comment\">/* EVTCHNSTAT_unbound */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#domid_t\">domid_t</a> <a class=\"id\" href=\"#dom\">dom</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#interdomain\">interdomain</a>; <span class=\"comment\">/* EVTCHNSTAT_interdomain */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#pirq\">pirq</a>;<span class=\"ts\"/>    <span class=\"comment\">/* EVTCHNSTAT_pirq<span class=\"ts\"/>      */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#virq\">virq</a>;<span class=\"ts\"/>    <span class=\"comment\">/* EVTCHNSTAT_virq<span class=\"ts\"/>      */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_bind_vcpu: Specify which vcpu a channel should notify when an</span>", 
"<span class=\"comment\"> * event is pending.</span>", 
"<span class=\"comment\"> * NOTES:</span>", 
"<span class=\"comment\"> *  1. IPI- and VIRQ-bound channels always notify the vcpu that initialised</span>", 
"<span class=\"comment\"> *     the binding. This binding cannot be changed.</span>", 
"<span class=\"comment\"> *  2. All other channels notify vcpu0 by default. This default is set when</span>", 
"<span class=\"comment\"> *     the channel is allocated (a port that is freed and subsequently reused</span>", 
"<span class=\"comment\"> *     has its binding reset to vcpu0).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_bind_vcpu\">EVTCHNOP_bind_vcpu</a><span class=\"ts\"/>  8", 
"struct <a class=\"id\" href=\"#evtchn_bind_vcpu\">evtchn_bind_vcpu</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#vcpu\">vcpu</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * EVTCHNOP_unmask: Unmask the specified local event-channel port and deliver</span>", 
"<span class=\"comment\"> * a notification to the appropriate VCPU if an event is pending.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVTCHNOP_unmask\">EVTCHNOP_unmask</a><span class=\"ts\"/><span class=\"ts\"/>  9", 
"struct <a class=\"id\" href=\"#evtchn_unmask\">evtchn_unmask</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* IN parameters. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_port_t\">evtchn_port_t</a> <a class=\"id\" href=\"#port\">port</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#evtchn_op\">evtchn_op</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#cmd\">cmd</a>; <span class=\"comment\">/* EVTCHNOP_* */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_alloc_unbound\">evtchn_alloc_unbound</a>    <a class=\"id\" href=\"#alloc_unbound\">alloc_unbound</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_interdomain\">evtchn_bind_interdomain</a> <a class=\"id\" href=\"#bind_interdomain\">bind_interdomain</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_virq\">evtchn_bind_virq</a><span class=\"ts\"/>       <a class=\"id\" href=\"#bind_virq\">bind_virq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_pirq\">evtchn_bind_pirq</a><span class=\"ts\"/>       <a class=\"id\" href=\"#bind_pirq\">bind_pirq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_ipi\">evtchn_bind_ipi</a><span class=\"ts\"/>       <a class=\"id\" href=\"#bind_ipi\">bind_ipi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_close\">evtchn_close</a><span class=\"ts\"/>       <a class=\"id\" href=\"#close\">close</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_send\">evtchn_send</a><span class=\"ts\"/>       <a class=\"id\" href=\"#send\">send</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_status\">evtchn_status</a><span class=\"ts\"/>       <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_vcpu\">evtchn_bind_vcpu</a><span class=\"ts\"/>       <a class=\"id\" href=\"#bind_vcpu\">bind_vcpu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_unmask\">evtchn_unmask</a><span class=\"ts\"/>       <a class=\"id\" href=\"#unmask\">unmask</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"};", 
"<a class=\"id\" href=\"#DEFINE_GUEST_HANDLE_STRUCT\">DEFINE_GUEST_HANDLE_STRUCT</a>(<a class=\"id\" href=\"#evtchn_op\">evtchn_op</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __XEN_PUBLIC_EVENT_CHANNEL_H__ */</span>", 
];
xr_frag_insert('l/16/bc4d69229deadc0984794d75493458ed51417f.xr', __xr_tmp);
