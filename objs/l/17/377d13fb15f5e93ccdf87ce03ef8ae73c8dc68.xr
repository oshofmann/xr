var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_kill_rq\">ide_kill_rq</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ide_stall_queue<span class=\"ts\"/><span class=\"ts\"/>-<span class=\"ts\"/>pause an IDE device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@drive: drive to stall</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@timeout: time to stall for (jiffies)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ide_stall_queue() can be used by a drive to give excess bandwidth back</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to the port by sleeping for timeout jiffies.</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"void <a class=\"id\" href=\"#ide_stall_queue\">ide_stall_queue</a> (<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a> &gt; <a class=\"id\" href=\"#WAIT_WORSTCASE\">WAIT_WORSTCASE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#WAIT_WORSTCASE\">WAIT_WORSTCASE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#sleep\">sleep</a> = <a class=\"id\" href=\"#timeout\">timeout</a> + <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> |= <a class=\"id\" href=\"#IDE_DFLAG_SLEEPING\">IDE_DFLAG_SLEEPING</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ide_stall_queue\">ide_stall_queue</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ide_lock_port\">ide_lock_port</a>(<a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#busy\">busy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#busy\">busy</a> = 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ide_unlock_port\">ide_unlock_port</a>(<a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#busy\">busy</a> = 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ide_lock_host\">ide_lock_host</a>(struct <a class=\"id\" href=\"#ide_host\">ide_host</a> *<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_flags\">host_flags</a> &amp; <a class=\"id\" href=\"#IDE_HFLAG_SERIALIZE\">IDE_HFLAG_SERIALIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#test_and_set_bit_lock\">test_and_set_bit_lock</a>(<a class=\"id\" href=\"#IDE_HOST_BUSY\">IDE_HOST_BUSY</a>, &amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_busy\">host_busy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#get_lock\">get_lock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#get_lock\">get_lock</a>(<a class=\"id\" href=\"#ide_intr\">ide_intr</a>, <a class=\"id\" href=\"#hwif\">hwif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ide_unlock_host\">ide_unlock_host</a>(struct <a class=\"id\" href=\"#ide_host\">ide_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_flags\">host_flags</a> &amp; <a class=\"id\" href=\"#IDE_HFLAG_SERIALIZE\">IDE_HFLAG_SERIALIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#release_lock\">release_lock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#release_lock\">release_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit_unlock\">clear_bit_unlock</a>(<a class=\"id\" href=\"#IDE_HOST_BUSY\">IDE_HOST_BUSY</a>, &amp;<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_busy\">host_busy</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Issue a new request to a device.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#do_ide_request\">do_ide_request</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a><span class=\"ts\"/>*<a class=\"id\" href=\"#drive\">drive</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queuedata\">queuedata</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a><span class=\"ts\"/>*<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ide_host\">ide_host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_startstop_t\">ide_startstop_t</a><span class=\"ts\"/><a class=\"id\" href=\"#startstop\">startstop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * drive is doing pre-flush, ordered write, post-flush sequence. even</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * though that is 3 requests, it must be seen as a single transaction.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we must not preempt this drive until that is complete</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blk_queue_flushing\">blk_queue_flushing</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * small race where queue could get replugged during</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the 3-request flush cycle, just yank the plug since</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we want it to finish asap</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_remove_plug\">blk_remove_plug</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* HLD do_request() callback might sleep, make sure it's okay */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_sleep\">might_sleep</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ide_lock_host\">ide_lock_host</a>(<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#hwif\">hwif</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#plug_device_2\">plug_device_2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ide_lock_port\">ide_lock_port</a>(<a class=\"id\" href=\"#hwif\">hwif</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#prev_port\">prev_port</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#rq\">rq</a>);", 
"<a class=\"id\" href=\"#repeat\">repeat</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_port\">prev_port</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#cur_port\">cur_port</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_SLEEPING\">IDE_DFLAG_SLEEPING</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#sleep\">sleep</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_unlock_port\">ide_unlock_port</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#plug_device\">plug_device</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#host_flags\">host_flags</a> &amp; <a class=\"id\" href=\"#IDE_HFLAG_SERIALIZE\">IDE_HFLAG_SERIALIZE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#hwif\">hwif</a> != <a class=\"id\" href=\"#prev_port\">prev_port</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#cur_dev\">cur_dev</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_port\">prev_port</a> ? <a class=\"id\" href=\"#prev_port\">prev_port</a>-><a class=\"id\" href=\"#cur_dev\">cur_dev</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * set nIEN for previous port, drives in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * quirk list may not like intr setups/cleanups</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cur_dev\">cur_dev</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#cur_dev\">cur_dev</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_NIEN_QUIRK\">IDE_DFLAG_NIEN_QUIRK</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev_port\">prev_port</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#write_devctl\">write_devctl</a>(<a class=\"id\" href=\"#prev_port\">prev_port</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_NIEN\">ATA_NIEN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ATA_DEVCTL_OBS\">ATA_DEVCTL_OBS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#cur_port\">cur_port</a> = <a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#cur_dev\">cur_dev</a> = <a class=\"id\" href=\"#drive\">drive</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &= ~(<a class=\"id\" href=\"#IDE_DFLAG_SLEEPING\">IDE_DFLAG_SLEEPING</a> | <a class=\"id\" href=\"#IDE_DFLAG_PARKED\">IDE_DFLAG_PARKED</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we know that the queue isn't empty, but this can happen</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if the q-&gt;prep_rq_fn() decides to kill a request</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rq\">rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#blk_fetch_request\">blk_fetch_request</a>(<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rq\">rq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_unlock_port\">ide_unlock_port</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Sanity: don't accept a request that isn't a PM request</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if we are currently power managed. This is very important as</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * blk_stop_queue() doesn't prevent the blk_fetch_request()</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * above to return us whatever is in the queue. Since we call</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ide_do_request() ourselves, we end up taking requests while</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the queue is blocked...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We let requests forced at head of queue with ide-preempt</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * though. I hope that doesn't happen too much, hopefully not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * unless the subdriver triggers such a thing in its own PM</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * state machine.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#dev_flags\">dev_flags</a> &amp; <a class=\"id\" href=\"#IDE_DFLAG_BLOCKED\">IDE_DFLAG_BLOCKED</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#blk_pm_request\">blk_pm_request</a>(<a class=\"id\" href=\"#rq\">rq</a>) == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cmd_flags\">cmd_flags</a> &amp; <a class=\"id\" href=\"#REQ_PREEMPT\">REQ_PREEMPT</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* there should be no pending command at this point */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_unlock_port\">ide_unlock_port</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#plug_device\">plug_device</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#rq\">rq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#startstop\">startstop</a> = <a class=\"id\" href=\"#start_request\">start_request</a>(<a class=\"id\" href=\"#drive\">drive</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#startstop\">startstop</a> == <a class=\"id\" href=\"#ide_stopped\">ide_stopped</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#repeat\">repeat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#plug_device\">plug_device</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ide_unlock_host\">ide_unlock_host</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#plug_device\">plug_device</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_unlock_host\">ide_unlock_host</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<a class=\"id\" href=\"#plug_device_2\">plug_device_2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_requeue_request\">blk_requeue_request</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elv_queue_empty\">elv_queue_empty</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_plug_device\">blk_plug_device</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#ide_requeue_and_plug\">ide_requeue_and_plug</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>, struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_requeue_request\">blk_requeue_request</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elv_queue_empty\">elv_queue_empty</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_plug_device\">blk_plug_device</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#queue_lock\">queue_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#drive_is_ready\">drive_is_ready</a>(<a class=\"id\" href=\"#ide_drive_t\">ide_drive_t</a> *<a class=\"id\" href=\"#drive\">drive</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ide_hwif_t\">ide_hwif_t</a> *<a class=\"id\" href=\"#hwif\">hwif</a> = <a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#hwif\">hwif</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#stat\">stat</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drive\">drive</a>-><a class=\"id\" href=\"#waiting_for_dma\">waiting_for_dma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#dma_ops\">dma_ops</a>-><a class=\"id\" href=\"#dma_test_irq\">dma_test_irq</a>(<a class=\"id\" href=\"#drive\">drive</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#io_ports\">io_ports</a>.<a class=\"id\" href=\"#ctl_addr\">ctl_addr</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#host_flags\">host_flags</a> &amp; <a class=\"id\" href=\"#IDE_HFLAG_BROKEN_ALTSTATUS\">IDE_HFLAG_BROKEN_ALTSTATUS</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_altstatus\">read_altstatus</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note: this may clear a pending IRQ!! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stat\">stat</a> = <a class=\"id\" href=\"#hwif\">hwif</a>-><a class=\"id\" href=\"#tp_ops\">tp_ops</a>-><a class=\"id\" href=\"#read_status\">read_status</a>(<a class=\"id\" href=\"#hwif\">hwif</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stat\">stat</a> &amp; <a class=\"id\" href=\"#ATA_BUSY\">ATA_BUSY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* drive busy: definitely not interrupting */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* drive ready: *might* be interrupting */</span>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ide_timer_expiry<span class=\"ts\"/>-<span class=\"ts\"/>handle lack of an IDE interrupt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@data: timer callback magic (hwif)</span>", 
];
xr_frag_insert('l/17/377d13fb15f5e93ccdf87ce03ef8ae73c8dc68.xr', __xr_tmp);
