var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_CACHEFLUSH_H\">_ASM_X86_CACHEFLUSH_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_CACHEFLUSH_H\">_ASM_X86_CACHEFLUSH_H</a>", 
"", 
"<span class=\"comment\">/* Keep includes the same across arches.  */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Caches aren't brain-dead on the intel. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_cache_all\">flush_cache_all</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_cache_mm\">flush_cache_mm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_cache_dup_mm\">flush_cache_dup_mm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_cache_range\">flush_cache_range</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_cache_page\">flush_cache_page</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#vmaddr\">vmaddr</a>, unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>) { }", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE\">ARCH_IMPLEMENTS_FLUSH_DCACHE_PAGE</a> 0", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_dcache_mmap_lock\">flush_dcache_mmap_lock</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_dcache_mmap_unlock\">flush_dcache_mmap_unlock</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_icache_range\">flush_icache_range</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#end\">end</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_icache_page\">flush_icache_page</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_icache_user_range\">flush_icache_user_range</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#len\">len</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_cache_vmap\">flush_cache_vmap</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#flush_cache_vunmap\">flush_cache_vunmap</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#end\">end</a>) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#copy_to_user_page\">copy_to_user_page</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#dst\">dst</a>, const void *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#copy_from_user_page\">copy_from_user_page</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       void *<a class=\"id\" href=\"#dst\">dst</a>, const void *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_PAT\">CONFIG_X86_PAT</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * X86 PAT uses page flags WC and Uncached together to keep track of</span>", 
"<span class=\"comment\"> * memory type of pages that have backing page struct. X86 PAT supports 3</span>", 
"<span class=\"comment\"> * different memory types, _PAGE_CACHE_WB, _PAGE_CACHE_WC and</span>", 
"<span class=\"comment\"> * _PAGE_CACHE_UC_MINUS and fourth state where page's memory type has not</span>", 
"<span class=\"comment\"> * been changed from its default (value of -1 used to denote this).</span>", 
"<span class=\"comment\"> * Note we do not support _PAGE_CACHE_UC here.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PGMT_DEFAULT\">_PGMT_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PGMT_WC\">_PGMT_WC</a><span class=\"ts\"/><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#PG_arch_1\">PG_arch_1</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PGMT_UC_MINUS\">_PGMT_UC_MINUS</a><span class=\"ts\"/><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#PG_uncached\">PG_uncached</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PGMT_WB\">_PGMT_WB</a><span class=\"ts\"/><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#PG_uncached\">PG_uncached</a> | 1UL << <a class=\"id\" href=\"#PG_arch_1\">PG_arch_1</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PGMT_MASK\">_PGMT_MASK</a><span class=\"ts\"/><span class=\"ts\"/>(1UL << <a class=\"id\" href=\"#PG_uncached\">PG_uncached</a> | 1UL << <a class=\"id\" href=\"#PG_arch_1\">PG_arch_1</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PGMT_CLEAR_MASK\">_PGMT_CLEAR_MASK</a><span class=\"ts\"/>(~<a class=\"id\" href=\"#_PGMT_MASK\">_PGMT_MASK</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#get_page_memtype\">get_page_memtype</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#pg\">pg</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pg_flags\">pg_flags</a> = <a class=\"id\" href=\"#pg\">pg</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#_PGMT_MASK\">_PGMT_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pg_flags\">pg_flags</a> == <a class=\"id\" href=\"#_PGMT_DEFAULT\">_PGMT_DEFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#pg_flags\">pg_flags</a> == <a class=\"id\" href=\"#_PGMT_WC\">_PGMT_WC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#_PAGE_CACHE_WC\">_PAGE_CACHE_WC</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#pg_flags\">pg_flags</a> == <a class=\"id\" href=\"#_PGMT_UC_MINUS\">_PGMT_UC_MINUS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#_PAGE_CACHE_UC_MINUS\">_PAGE_CACHE_UC_MINUS</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#_PAGE_CACHE_WB\">_PAGE_CACHE_WB</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_page_memtype\">set_page_memtype</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#pg\">pg</a>, unsigned long <a class=\"id\" href=\"#memtype\">memtype</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#memtype_flags\">memtype_flags</a> = <a class=\"id\" href=\"#_PGMT_DEFAULT\">_PGMT_DEFAULT</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_flags\">old_flags</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#new_flags\">new_flags</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#memtype\">memtype</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#_PAGE_CACHE_WC\">_PAGE_CACHE_WC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memtype_flags\">memtype_flags</a> = <a class=\"id\" href=\"#_PGMT_WC\">_PGMT_WC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#_PAGE_CACHE_UC_MINUS\">_PAGE_CACHE_UC_MINUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memtype_flags\">memtype_flags</a> = <a class=\"id\" href=\"#_PGMT_UC_MINUS\">_PGMT_UC_MINUS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#_PAGE_CACHE_WB\">_PAGE_CACHE_WB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memtype_flags\">memtype_flags</a> = <a class=\"id\" href=\"#_PGMT_WB\">_PGMT_WB</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_flags\">old_flags</a> = <a class=\"id\" href=\"#pg\">pg</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_flags\">new_flags</a> = (<a class=\"id\" href=\"#old_flags\">old_flags</a> &amp; <a class=\"id\" href=\"#_PGMT_CLEAR_MASK\">_PGMT_CLEAR_MASK</a>) | <a class=\"id\" href=\"#memtype_flags\">memtype_flags</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#cmpxchg\">cmpxchg</a>(&amp;<a class=\"id\" href=\"#pg\">pg</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#old_flags\">old_flags</a>, <a class=\"id\" href=\"#new_flags\">new_flags</a>) != <a class=\"id\" href=\"#old_flags\">old_flags</a>);", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#get_page_memtype\">get_page_memtype</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#pg\">pg</a>) { return -1; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_page_memtype\">set_page_memtype</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#pg\">pg</a>, unsigned long <a class=\"id\" href=\"#memtype\">memtype</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The set_memory_* API can be used to change various attributes of a virtual</span>", 
"<span class=\"comment\"> * address range. The attributes include:</span>", 
"<span class=\"comment\"> * Cachability   : UnCached, WriteCombining, WriteBack</span>", 
"<span class=\"comment\"> * Executability : eXeutable, NoteXecutable</span>", 
"<span class=\"comment\"> * Read/Write    : ReadOnly, ReadWrite</span>", 
"<span class=\"comment\"> * Presence      : NotPresent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Within a catagory, the attributes are mutually exclusive.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The implementation of this API will take care of various aspects that</span>", 
"<span class=\"comment\"> * are associated with changing such attributes, such as:</span>", 
"<span class=\"comment\"> * - Flushing TLBs</span>", 
"<span class=\"comment\"> * - Flushing CPU caches</span>", 
"<span class=\"comment\"> * - Making sure aliases of the memory behind the mapping don't violate</span>", 
"<span class=\"comment\"> *   coherency rules as defined by the CPU in the system.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * What this API does not do:</span>", 
"<span class=\"comment\"> * - Provide exclusion between various callers - including callers that</span>", 
"<span class=\"comment\"> *   operation on other mappings of the same physical page</span>", 
"<span class=\"comment\"> * - Restore default attributes when a page is freed</span>", 
"<span class=\"comment\"> * - Guarantee that mappings other than the requested one are</span>", 
"<span class=\"comment\"> *   in any state, other than that these do not violate rules for</span>", 
"<span class=\"comment\"> *   the CPU you have. Do not depend on any effects on other mappings,</span>", 
"<span class=\"comment\"> *   CPUs other than the one you have may have more relaxed rules.</span>", 
"<span class=\"comment\"> * The caller is required to take care of these.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#_set_memory_uc\">_set_memory_uc</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#_set_memory_wc\">_set_memory_wc</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#_set_memory_wb\">_set_memory_wb</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_uc\">set_memory_uc</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_wc\">set_memory_wc</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_wb\">set_memory_wb</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_x\">set_memory_x</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_nx\">set_memory_nx</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_ro\">set_memory_ro</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_rw\">set_memory_rw</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_np\">set_memory_np</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_memory_4k\">set_memory_4k</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"", 
"int <a class=\"id\" href=\"#set_memory_array_uc\">set_memory_array_uc</a>(unsigned long *<a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#addrinarray\">addrinarray</a>);", 
"int <a class=\"id\" href=\"#set_memory_array_wc\">set_memory_array_wc</a>(unsigned long *<a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#addrinarray\">addrinarray</a>);", 
"int <a class=\"id\" href=\"#set_memory_array_wb\">set_memory_array_wb</a>(unsigned long *<a class=\"id\" href=\"#addr\">addr</a>, int <a class=\"id\" href=\"#addrinarray\">addrinarray</a>);", 
"", 
"int <a class=\"id\" href=\"#set_pages_array_uc\">set_pages_array_uc</a>(struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>, int <a class=\"id\" href=\"#addrinarray\">addrinarray</a>);", 
"int <a class=\"id\" href=\"#set_pages_array_wc\">set_pages_array_wc</a>(struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>, int <a class=\"id\" href=\"#addrinarray\">addrinarray</a>);", 
"int <a class=\"id\" href=\"#set_pages_array_wb\">set_pages_array_wb</a>(struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>, int <a class=\"id\" href=\"#addrinarray\">addrinarray</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * For legacy compatibility with the old APIs, a few functions</span>", 
"<span class=\"comment\"> * are provided that work on a \"struct page\".</span>", 
"<span class=\"comment\"> * These functions operate ONLY on the 1:1 kernel mapping of the</span>", 
"<span class=\"comment\"> * memory that the struct page represents, and internally just</span>", 
"<span class=\"comment\"> * call the set_memory_* function. See the description of the</span>", 
"<span class=\"comment\"> * set_memory_* function for more details on conventions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These APIs should be considered *deprecated* and are likely going to</span>", 
"<span class=\"comment\"> * be removed in the future.</span>", 
"<span class=\"comment\"> * The reason for this is the implicit operation on the 1:1 mapping only,</span>", 
"<span class=\"comment\"> * making this not a generally useful API.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Specifically, many users of the old APIs had a virtual address,</span>", 
"<span class=\"comment\"> * called virt_to_page() or vmalloc_to_page() on that address to</span>", 
"<span class=\"comment\"> * get a struct page* that the old API required.</span>", 
"<span class=\"comment\"> * To convert these cases, use set_memory_*() on the original</span>", 
"<span class=\"comment\"> * virtual address, do not use these functions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#set_pages_uc\">set_pages_uc</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_pages_wb\">set_pages_wb</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_pages_x\">set_pages_x</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_pages_nx\">set_pages_nx</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_pages_ro\">set_pages_ro</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"int <a class=\"id\" href=\"#set_pages_rw\">set_pages_rw</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int <a class=\"id\" href=\"#numpages\">numpages</a>);", 
"", 
"", 
"void <a class=\"id\" href=\"#clflush_cache_range\">clflush_cache_range</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_RODATA\">CONFIG_DEBUG_RODATA</a>", 
"void <a class=\"id\" href=\"#mark_rodata_ro\">mark_rodata_ro</a>(void);", 
"extern const int <a class=\"id\" href=\"#rodata_test_data\">rodata_test_data</a>;", 
"extern int <a class=\"id\" href=\"#kernel_set_to_readonly\">kernel_set_to_readonly</a>;", 
"void <a class=\"id\" href=\"#set_kernel_text_rw\">set_kernel_text_rw</a>(void);", 
"void <a class=\"id\" href=\"#set_kernel_text_ro\">set_kernel_text_ro</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_kernel_text_rw\">set_kernel_text_rw</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_kernel_text_ro\">set_kernel_text_ro</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_RODATA_TEST\">CONFIG_DEBUG_RODATA_TEST</a>", 
"int <a class=\"id\" href=\"#rodata_test\">rodata_test</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rodata_test\">rodata_test</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_CACHEFLUSH_H */</span>", 
];
xr_frag_insert('l/17/486292d6f28345048f4ca5159b23bb9b909d58.xr', __xr_tmp);
