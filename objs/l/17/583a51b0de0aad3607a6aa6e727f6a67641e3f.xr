var __xr_tmp = [
"<span class=\"comment\">/* Key garbage collector</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2009 Red Hat, Inc. All Rights Reserved.</span>", 
"<span class=\"comment\"> * Written by David Howells (dhowells@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public Licence</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the Licence, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#keys\">keys</a>/<a class=\"id\" href=\"#keyring\">keyring</a>-<a class=\"id\" href=\"#type\">type</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Delay between key revocation/expiry in seconds</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned <a class=\"id\" href=\"#key_gc_delay\">key_gc_delay</a> = 5 * 60;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reaper</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#key_gc_timer_func\">key_gc_timer_func</a>(unsigned long);", 
"static void <a class=\"id\" href=\"#key_garbage_collector\">key_garbage_collector</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *);", 
"static <a class=\"id\" href=\"#DEFINE_TIMER\">DEFINE_TIMER</a>(<a class=\"id\" href=\"#key_gc_timer\">key_gc_timer</a>, <a class=\"id\" href=\"#key_gc_timer_func\">key_gc_timer_func</a>, 0, 0);", 
"static <a class=\"id\" href=\"#DECLARE_WORK\">DECLARE_WORK</a>(<a class=\"id\" href=\"#key_gc_work\">key_gc_work</a>, <a class=\"id\" href=\"#key_garbage_collector\">key_garbage_collector</a>);", 
"static <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#key_gc_cursor\">key_gc_cursor</a>; <span class=\"comment\">/* the last key the gc considered */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#key_gc_again\">key_gc_again</a>;", 
"static unsigned long <a class=\"id\" href=\"#key_gc_executing\">key_gc_executing</a>;", 
"static <a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#key_gc_next_run\">key_gc_next_run</a> = <a class=\"id\" href=\"#LONG_MAX\">LONG_MAX</a>;", 
"static <a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#key_gc_new_timer\">key_gc_new_timer</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Schedule a garbage collection run</span>", 
"<span class=\"comment\"> * - precision isn't particularly important</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#key_schedule_gc\">key_schedule_gc</a>(<a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#gc_at\">gc_at</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#current_kernel_time\">current_kernel_time</a>().<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%ld\", <a class=\"id\" href=\"#gc_at\">gc_at</a> - <a class=\"id\" href=\"#now\">now</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gc_at\">gc_at</a> <= <a class=\"id\" href=\"#now\">now</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#key_gc_work\">key_gc_work</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#gc_at\">gc_at</a> &lt; <a class=\"id\" href=\"#key_gc_next_run\">key_gc_next_run</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + (<a class=\"id\" href=\"#gc_at\">gc_at</a> - <a class=\"id\" href=\"#now\">now</a>) * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#key_gc_timer\">key_gc_timer</a>, <a class=\"id\" href=\"#expires\">expires</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The garbage collector timer kicked off</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#key_gc_timer_func\">key_gc_timer_func</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_gc_next_run\">key_gc_next_run</a> = <a class=\"id\" href=\"#LONG_MAX\">LONG_MAX</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#key_gc_work\">key_gc_work</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Garbage collect pointers from a keyring</span>", 
"<span class=\"comment\"> * - return true if we altered the keyring</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#key_gc_keyring\">key_gc_keyring</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#keyring\">keyring</a>, <a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#limit\">limit</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#keyring_list\">keyring_list</a> *<a class=\"id\" href=\"#klist\">klist</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#loop\">loop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%x\", <a class=\"id\" href=\"#key_serial\">key_serial</a>(<a class=\"id\" href=\"#keyring\">keyring</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_REVOKED\">KEY_FLAG_REVOKED</a>, &amp;<a class=\"id\" href=\"#keyring\">keyring</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dont_gc\">dont_gc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* scan the keyring looking for dead keys */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#klist\">klist</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#keyring\">keyring</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#subscriptions\">subscriptions</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#klist\">klist</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#unlock_dont_gc\">unlock_dont_gc</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#loop\">loop</a> = <a class=\"id\" href=\"#klist\">klist</a>-><a class=\"id\" href=\"#nkeys\">nkeys</a> - 1; <a class=\"id\" href=\"#loop\">loop</a> >= 0; <a class=\"id\" href=\"#loop\">loop</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#klist\">klist</a>-><a class=\"id\" href=\"#keys\">keys</a>[<a class=\"id\" href=\"#loop\">loop</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_DEAD\">KEY_FLAG_DEAD</a>, &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#flags\">flags</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> &gt; 0 && <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> <= <a class=\"id\" href=\"#limit\">limit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#do_gc\">do_gc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#unlock_dont_gc\">unlock_dont_gc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<a class=\"id\" href=\"#dont_gc\">dont_gc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = false\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<a class=\"id\" href=\"#do_gc\">do_gc</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_gc_cursor\">key_gc_cursor</a> = <a class=\"id\" href=\"#keyring\">keyring</a>-><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#keyring\">keyring</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#keyring_gc\">keyring_gc</a>(<a class=\"id\" href=\"#keyring\">keyring</a>, <a class=\"id\" href=\"#limit\">limit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#keyring\">keyring</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" = true\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Garbage collector for keys</span>", 
"<span class=\"comment\"> * - this involves scanning the keyrings for dead, expired and revoked keys</span>", 
"<span class=\"comment\"> *   that have overstayed their welcome</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#key_garbage_collector\">key_garbage_collector</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#rb\">rb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#cursor\">cursor</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, *<a class=\"id\" href=\"#xkey\">xkey</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#new_timer\">new_timer</a> = <a class=\"id\" href=\"#LONG_MAX\">LONG_MAX</a>, <a class=\"id\" href=\"#limit\">limit</a>, <a class=\"id\" href=\"#now\">now</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#current_kernel_time\">current_kernel_time</a>().<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"[%x,%ld]\", <a class=\"id\" href=\"#key_gc_cursor\">key_gc_cursor</a>, <a class=\"id\" href=\"#key_gc_new_timer\">key_gc_new_timer</a> - <a class=\"id\" href=\"#now\">now</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_and_set_bit\">test_and_set_bit</a>(0, &amp;<a class=\"id\" href=\"#key_gc_executing\">key_gc_executing</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_schedule_gc\">key_schedule_gc</a>(<a class=\"id\" href=\"#current_kernel_time\">current_kernel_time</a>().<a class=\"id\" href=\"#tv_sec\">tv_sec</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" [busy; deferring]\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a> &gt; <a class=\"id\" href=\"#key_gc_delay\">key_gc_delay</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> -= <a class=\"id\" href=\"#key_gc_delay\">key_gc_delay</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#key_gc_delay\">key_gc_delay</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#RB_EMPTY_ROOT\">RB_EMPTY_ROOT</a>(&amp;<a class=\"id\" href=\"#key_serial_tree\">key_serial_tree</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(0, &amp;<a class=\"id\" href=\"#key_gc_executing\">key_gc_executing</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cursor\">cursor</a> = <a class=\"id\" href=\"#key_gc_cursor\">key_gc_cursor</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cursor\">cursor</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cursor\">cursor</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cursor\">cursor</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_timer\">new_timer</a> = <a class=\"id\" href=\"#key_gc_new_timer\">key_gc_new_timer</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_gc_again\">key_gc_again</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the first key above the cursor */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rb\">rb</a> = <a class=\"id\" href=\"#key_serial_tree\">key_serial_tree</a>.<a class=\"id\" href=\"#rb_node\">rb_node</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#rb\">rb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xkey\">xkey</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#rb\">rb</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cursor\">cursor</a> &lt; <a class=\"id\" href=\"#xkey\">xkey</a>-><a class=\"id\" href=\"#serial\">serial</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#xkey\">xkey</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb\">rb</a> = <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#rb_left\">rb_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#cursor\">cursor</a> &gt; <a class=\"id\" href=\"#xkey\">xkey</a>-><a class=\"id\" href=\"#serial\">serial</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb\">rb</a> = <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#rb_right\">rb_right</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb\">rb</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#rb\">rb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rb\">rb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reached_the_end\">reached_the_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#rb\">rb</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#key\">key</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reached_the_end\">reached_the_end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* trawl through the keys looking for keyrings */</span>", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> &gt; <a class=\"id\" href=\"#limit\">limit</a> && <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> &lt; <a class=\"id\" href=\"#new_timer\">new_timer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdebug\">kdebug</a>(\"will expire %x in %ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#key_serial\">key_serial</a>(<a class=\"id\" href=\"#key\">key</a>), <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a> - <a class=\"id\" href=\"#limit\">limit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_timer\">new_timer</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#expiry\">expiry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a> == &amp;<a class=\"id\" href=\"#key_type_keyring\">key_type_keyring</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key_gc_keyring\">key_gc_keyring</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#limit\">limit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the gc had to release our lock so that the keyring</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * could be modified, so we have to get it again */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#gc_released_our_lock\">gc_released_our_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rb\">rb</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rb\">rb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reached_the_end\">reached_the_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#rb\">rb</a>, struct <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#serial_node\">serial_node</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#gc_released_our_lock\">gc_released_our_lock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kdebug\">kdebug</a>(\"gc_released_our_lock\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_gc_new_timer\">key_gc_new_timer</a> = <a class=\"id\" href=\"#new_timer\">new_timer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_gc_again\">key_gc_again</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(0, &amp;<a class=\"id\" href=\"#key_gc_executing\">key_gc_executing</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#key_gc_work\">key_gc_work</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" [continue]\");", 
"<span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* when we reach the end of the run, we set the timer for the next one */</span>", 
"<a class=\"id\" href=\"#reached_the_end\">reached_the_end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kdebug\">kdebug</a>(\"reached_the_end\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#key_serial_lock\">key_serial_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_gc_new_timer\">key_gc_new_timer</a> = <a class=\"id\" href=\"#new_timer\">new_timer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_gc_cursor\">key_gc_cursor</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(0, &amp;<a class=\"id\" href=\"#key_gc_executing\">key_gc_executing</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key_gc_again\">key_gc_again</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* there may have been a key that expired whilst we were</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * scanning, so if we discarded any links we should do another</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * scan */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_timer\">new_timer</a> = <a class=\"id\" href=\"#now\">now</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_schedule_gc\">key_schedule_gc</a>(<a class=\"id\" href=\"#new_timer\">new_timer</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#new_timer\">new_timer</a> &lt; <a class=\"id\" href=\"#LONG_MAX\">LONG_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_timer\">new_timer</a> += <a class=\"id\" href=\"#key_gc_delay\">key_gc_delay</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_schedule_gc\">key_schedule_gc</a>(<a class=\"id\" href=\"#new_timer\">new_timer</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kleave\">kleave</a>(\" [end]\");", 
"}", 
];
xr_frag_insert('l/17/583a51b0de0aad3607a6aa6e727f6a67641e3f.xr', __xr_tmp);
