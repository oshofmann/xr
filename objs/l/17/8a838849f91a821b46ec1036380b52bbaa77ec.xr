var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#init\">init</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#read_wait\">read_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kref_init\">kref_init</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_timer\">setup_timer</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#wakeup_readers\">wakeup_readers</a>, (unsigned long)<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer_sync\">del_timer_sync</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_produced\">subbufs_produced</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#subbufs_consumed\">subbufs_consumed</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#bytes_consumed\">bytes_consumed</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#finalized\">finalized</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#n_subbufs\">n_subbufs</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#i\">i</a>] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#subbuf_start\">subbuf_start</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_reset - reset the channel</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@chan: the channel</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This has the effect of erasing all data from all channel buffers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>and restarting the channel in its initial state.  The buffers</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>are not freed, so any mappings are still in effect.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>NOTE. Care should be taken that the channel isn't actually</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>being used by anything when this call is made.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#relay_reset\">relay_reset</a>(struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#chan\">chan</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#is_global\">is_global</a> && <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__relay_reset\">__relay_reset</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0], 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__relay_reset\">__relay_reset</a>(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#i\">i</a>], 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#relay_channels_mutex\">relay_channels_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#relay_reset\">relay_reset</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#relay_set_buf_dentry\">relay_set_buf_dentry</a>(struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#early_bytes\">early_bytes</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#relay_create_buf_file\">relay_create_buf_file</a>(struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tmpname\">tmpname</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmpname\">tmpname</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#NAME_MAX\">NAME_MAX</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmpname\">tmpname</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#tmpname\">tmpname</a>, <a class=\"id\" href=\"#NAME_MAX\">NAME_MAX</a>, \"%s%d\", <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#base_filename\">base_filename</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create file in fs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#create_buf_file\">create_buf_file</a>(<a class=\"id\" href=\"#tmpname\">tmpname</a>, <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#S_IRUSR\">S_IRUSR</a>, <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#is_global\">is_global</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tmpname\">tmpname</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_open_buf - create a new relay channel buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>used by relay_open() and CPU hotplug.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#relay_open_buf\">relay_open_buf</a>(struct <a class=\"id\" href=\"#rchan\">rchan</a> *<a class=\"id\" href=\"#chan\">chan</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
" <span class=\"ts\"/>struct <a class=\"id\" href=\"#rchan_buf\">rchan_buf</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
" <span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#is_global\">is_global</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#relay_create_buf\">relay_create_buf</a>(<a class=\"id\" href=\"#chan\">chan</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#has_base_filename\">has_base_filename</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#relay_create_buf_file\">relay_create_buf_file</a>(<a class=\"id\" href=\"#chan\">chan</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_buf\">free_buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#relay_set_buf_dentry\">relay_set_buf_dentry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>}", 
"", 
" <span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__relay_reset\">__relay_reset</a>(<a class=\"id\" href=\"#buf\">buf</a>, 1);", 
"", 
" <span class=\"ts\"/>if(<a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#is_global\">is_global</a>) {", 
" <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chan\">chan</a>-><a class=\"id\" href=\"#buf\">buf</a>[0] = <a class=\"id\" href=\"#buf\">buf</a>;", 
" <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#cpu\">cpu</a> = 0;", 
"  <span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<a class=\"id\" href=\"#free_buf\">free_buf</a>:", 
" <span class=\"ts\"/><a class=\"id\" href=\"#relay_destroy_buf\">relay_destroy_buf</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>relay_close_buf - close a channel buffer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@buf: channel buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Marks the buffer finalized and restores the default callbacks.</span>", 
];
xr_frag_insert('l/17/8a838849f91a821b46ec1036380b52bbaa77ec.xr', __xr_tmp);
