var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpufreq\">cpufreq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mperf.h\"", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#aperfmperf\">aperfmperf</a>, <a class=\"id\" href=\"#acfreq_old_perf\">acfreq_old_perf</a>);", 
"", 
"<span class=\"comment\">/* Called via smp_call_function_single(), on the target CPU */</span>", 
"static void <a class=\"id\" href=\"#read_measured_perf_ctrs\">read_measured_perf_ctrs</a>(void *<a class=\"id\" href=\"#_cur\">_cur</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aperfmperf\">aperfmperf</a> *<a class=\"id\" href=\"#am\">am</a> = <a class=\"id\" href=\"#_cur\">_cur</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_aperfmperf\">get_aperfmperf</a>(<a class=\"id\" href=\"#am\">am</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return the measured active (C0) frequency on this CPU since last call</span>", 
"<span class=\"comment\"> * to this function.</span>", 
"<span class=\"comment\"> * Input: cpu number</span>", 
"<span class=\"comment\"> * Return: Average CPU frequency in terms of max frequency (zero on error)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We use IA32_MPERF and IA32_APERF MSRs to get the measured performance</span>", 
"<span class=\"comment\"> * over a period of time, while CPU is in C0 state.</span>", 
"<span class=\"comment\"> * IA32_MPERF counts at the rate of max advertised frequency</span>", 
"<span class=\"comment\"> * IA32_APERF counts at the rate of actual CPU frequency</span>", 
"<span class=\"comment\"> * Only IA32_APERF/IA32_MPERF ratio is architecturally defined and</span>", 
"<span class=\"comment\"> * no meaning should be associated with absolute values of these MSRs.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#cpufreq_get_measured_perf\">cpufreq_get_measured_perf</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#aperfmperf\">aperfmperf</a> <a class=\"id\" href=\"#perf\">perf</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ratio\">ratio</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#smp_call_function_single\">smp_call_function_single</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#read_measured_perf_ctrs\">read_measured_perf_ctrs</a>, &amp;<a class=\"id\" href=\"#perf\">perf</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ratio\">ratio</a> = <a class=\"id\" href=\"#calc_aperfmperf_ratio\">calc_aperfmperf_ratio</a>(&amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#acfreq_old_perf\">acfreq_old_perf</a>, <a class=\"id\" href=\"#cpu\">cpu</a>), &amp;<a class=\"id\" href=\"#perf\">perf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#acfreq_old_perf\">acfreq_old_perf</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) = <a class=\"id\" href=\"#perf\">perf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = (<a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpuinfo\">cpuinfo</a>.<a class=\"id\" href=\"#max_freq\">max_freq</a> * <a class=\"id\" href=\"#ratio\">ratio</a>) >> <a class=\"id\" href=\"#APERFMPERF_SHIFT\">APERFMPERF_SHIFT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cpufreq_get_measured_perf\">cpufreq_get_measured_perf</a>);", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/17/98a774abdacc4f2454f53c6afbbdee15a47c87.xr', __xr_tmp);
