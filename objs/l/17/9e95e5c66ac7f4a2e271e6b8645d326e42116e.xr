var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/fcntl.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fdtable\">fdtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dnotify\">dnotify</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pipe_fs_i\">pipe_fs_i</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pid_namespace\">pid_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#siginfo\">siginfo</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"void <a class=\"id\" href=\"#set_close_on_exec\">set_close_on_exec</a>(unsigned int <a class=\"id\" href=\"#fd\">fd</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#files\">files</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FD_SET\">FD_SET</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#close_on_exec\">close_on_exec</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FD_CLR\">FD_CLR</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#close_on_exec\">close_on_exec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#get_close_on_exec\">get_close_on_exec</a>(unsigned int <a class=\"id\" href=\"#fd\">fd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#files\">files</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#FD_ISSET\">FD_ISSET</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#close_on_exec\">close_on_exec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#dup3\">dup3</a>, unsigned int, <a class=\"id\" href=\"#oldfd\">oldfd</a>, unsigned int, <a class=\"id\" href=\"#newfd\">newfd</a>, int, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, *<a class=\"id\" href=\"#tofree\">tofree</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> * <a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#files\">files</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#O_CLOEXEC\">O_CLOEXEC</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#oldfd\">oldfd</a> == <a class=\"id\" href=\"#newfd\">newfd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#expand_files\">expand_files</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#newfd\">newfd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fcheck\">fcheck</a>(<a class=\"id\" href=\"#oldfd\">oldfd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Ebadf\">Ebadf</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a> &lt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EMFILE\">EMFILE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Ebadf\">Ebadf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to detect attempts to do dup2() over allocated but still</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not finished descriptor.  NB: OpenBSD avoids that at the price of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * extra work in their equivalent of fget() - they insert struct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * file immediately after grabbing descriptor, mark it larval if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * more work (e.g. actual opening) is needed and make sure that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fget() treats larval files as absent.  Potentially interesting,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but while extra work in fget() is trivial, locking implications</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and amount of surgery on open()-related paths in VFS are not.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FreeBSD fails with -EBADF in the same situation, NetBSD \"solution\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * deadlocks in rather amusing ways, AFAICS.  All of that is out of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * scope of POSIX or SUS, since neither considers shared descriptor</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tables and this condition does not arise without those.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tofree\">tofree</a> = <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#fd\">fd</a>[<a class=\"id\" href=\"#newfd\">newfd</a>];", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tofree\">tofree</a> && <a class=\"id\" href=\"#FD_ISSET\">FD_ISSET</a>(<a class=\"id\" href=\"#newfd\">newfd</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#open_fds\">open_fds</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_file\">get_file</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#fd\">fd</a>[<a class=\"id\" href=\"#newfd\">newfd</a>], <a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FD_SET\">FD_SET</a>(<a class=\"id\" href=\"#newfd\">newfd</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#open_fds\">open_fds</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_CLOEXEC\">O_CLOEXEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FD_SET\">FD_SET</a>(<a class=\"id\" href=\"#newfd\">newfd</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#close_on_exec\">close_on_exec</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FD_CLR\">FD_CLR</a>(<a class=\"id\" href=\"#newfd\">newfd</a>, <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#close_on_exec\">close_on_exec</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tofree\">tofree</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp_close\">filp_close</a>(<a class=\"id\" href=\"#tofree\">tofree</a>, <a class=\"id\" href=\"#files\">files</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newfd\">newfd</a>;", 
"", 
"<a class=\"id\" href=\"#Ebadf\">Ebadf</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#files\">files</a>-><a class=\"id\" href=\"#file_lock\">file_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#dup2\">dup2</a>, unsigned int, <a class=\"id\" href=\"#oldfd\">oldfd</a>, unsigned int, <a class=\"id\" href=\"#newfd\">newfd</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#newfd\">newfd</a> == <a class=\"id\" href=\"#oldfd\">oldfd</a>)) { <span class=\"comment\">/* corner case */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#files\">files</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#files\">files</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#oldfd\">oldfd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#fcheck_files\">fcheck_files</a>(<a class=\"id\" href=\"#files\">files</a>, <a class=\"id\" href=\"#oldfd\">oldfd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_dup3\">sys_dup3</a>(<a class=\"id\" href=\"#oldfd\">oldfd</a>, <a class=\"id\" href=\"#newfd\">newfd</a>, 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#dup\">dup</a>, unsigned int, <a class=\"id\" href=\"#fildes\">fildes</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget\">fget</a>(<a class=\"id\" href=\"#fildes\">fildes</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_unused_fd\">get_unused_fd</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fd_install\">fd_install</a>(<a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/17/9e95e5c66ac7f4a2e271e6b8645d326e42116e.xr', __xr_tmp);
