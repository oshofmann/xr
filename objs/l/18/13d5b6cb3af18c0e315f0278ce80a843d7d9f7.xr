var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 2008 Red Hat, Inc., Eric Paris &lt;eparis@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2, or (at your option)</span>", 
"<span class=\"comment\"> *  any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; see the file COPYING.  If not, write to</span>", 
"<span class=\"comment\"> *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dcache\">dcache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mount\">mount</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#srcu\">srcu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fsnotify_backend\">fsnotify_backend</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"fsnotify.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Clear all of the marks on an inode when it is being evicted from core</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__fsnotify_inode_delete\">__fsnotify_inode_delete</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_clear_marks_by_inode\">fsnotify_clear_marks_by_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__fsnotify_inode_delete\">__fsnotify_inode_delete</a>);", 
"", 
"void <a class=\"id\" href=\"#__fsnotify_vfsmount_delete\">__fsnotify_vfsmount_delete</a>(struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_clear_marks_by_mount\">fsnotify_clear_marks_by_mount</a>(<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Given an inode, first check if we care what happens to our children.  Inotify</span>", 
"<span class=\"comment\"> * and dnotify both tell their parents about events.  If we care about any event</span>", 
"<span class=\"comment\"> * on a child we run all of our children and set a dentry flag saying that the</span>", 
"<span class=\"comment\"> * parent cares.  Thus when an event happens on a child it can quickly tell if</span>", 
"<span class=\"comment\"> * if there is a need to find a parent and send the event to the parent.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__fsnotify_update_child_dentry_flags\">__fsnotify_update_child_dentry_flags</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#alias\">alias</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#watched\">watched</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* determine if the children should tell inode about their events */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#watched\">watched</a> = <a class=\"id\" href=\"#fsnotify_inode_watches_children\">fsnotify_inode_watches_children</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dcache_lock\">dcache_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* run all of the dentries associated with this inode.  Since this is a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * directory, there damn well better only be one item on this list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#alias\">alias</a>, &amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dentry\">i_dentry</a>, <a class=\"id\" href=\"#d_alias\">d_alias</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* run all of the children of the original inode and fix their</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * d_flags to indicate parental interest (their parent is the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * original inode) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#child\">child</a>, &amp;<a class=\"id\" href=\"#alias\">alias</a>-><a class=\"id\" href=\"#d_subdirs\">d_subdirs</a>, <a class=\"id\" href=\"#d_u\">d_u</a>.<a class=\"id\" href=\"#d_child\">d_child</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_lock\">d_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#watched\">watched</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_flags\">d_flags</a> |= <a class=\"id\" href=\"#DCACHE_FSNOTIFY_PARENT_WATCHED\">DCACHE_FSNOTIFY_PARENT_WATCHED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_flags\">d_flags</a> &= ~<a class=\"id\" href=\"#DCACHE_FSNOTIFY_PARENT_WATCHED\">DCACHE_FSNOTIFY_PARENT_WATCHED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_lock\">d_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/18/13d5b6cb3af18c0e315f0278ce80a843d7d9f7.xr', __xr_tmp);
