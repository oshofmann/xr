var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * x86_64 specific EFI support functions</span>", 
"<span class=\"comment\"> * Based on Extensible Firmware Interface Specification version 1.0</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005-2008 Intel Co.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fenghua Yu &lt;fenghua.yu@intel.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bibo Mao &lt;bibo.mao@intel.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Chandramouli Narayanan &lt;mouli@linux.intel.com&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Huang Ying &lt;ying.huang@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Code to convert EFI to E820 map has been implemented in elilo bootloader</span>", 
"<span class=\"comment\"> * based on a EFI patch by Edgar Hucek. Based on the E820 map, the page table</span>", 
"<span class=\"comment\"> * is setup appropriately for EFI runtime code.</span>", 
"<span class=\"comment\"> * - mouli 06/14/2007.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#reboot\">reboot</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cacheflush\">cacheflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#fixmap\">fixmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#pgd_t\">pgd_t</a> <a class=\"id\" href=\"#save_pgd\">save_pgd</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"static unsigned long <a class=\"id\" href=\"#efi_flags\">efi_flags</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_mapping_set_exec\">early_mapping_set_exec</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#executable\">executable</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#num_pages\">num_pages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> &= <a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#end\">end</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1) &amp; <a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_pages\">num_pages</a> = (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#executable\">executable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_memory_x\">set_memory_x</a>((unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#start\">start</a>), <a class=\"id\" href=\"#num_pages\">num_pages</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_memory_nx\">set_memory_nx</a>((unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#start\">start</a>), <a class=\"id\" href=\"#num_pages\">num_pages</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#early_runtime_code_mapping_set_exec\">early_runtime_code_mapping_set_exec</a>(int <a class=\"id\" href=\"#executable\">executable</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#efi_memory_desc_t\">efi_memory_desc_t</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> &amp; <a class=\"id\" href=\"#_PAGE_NX\">_PAGE_NX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make EFI runtime service code area executable */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#memmap\">memmap</a>.<a class=\"id\" href=\"#map\">map</a>; <a class=\"id\" href=\"#p\">p</a> &lt; <a class=\"id\" href=\"#memmap\">memmap</a>.<a class=\"id\" href=\"#map_end\">map_end</a>; <a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#memmap\">memmap</a>.<a class=\"id\" href=\"#desc_size\">desc_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#EFI_RUNTIME_SERVICES_CODE\">EFI_RUNTIME_SERVICES_CODE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#phys_addr\">phys_addr</a> + (<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#num_pages\">num_pages</a> << <a class=\"id\" href=\"#EFI_PAGE_SHIFT\">EFI_PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_mapping_set_exec\">early_mapping_set_exec</a>(<a class=\"id\" href=\"#md\">md</a>-><a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#executable\">executable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#efi_call_phys_prelog\">efi_call_phys_prelog</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vaddress\">vaddress</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_runtime_code_mapping_set_exec\">early_runtime_code_mapping_set_exec</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#efi_flags\">efi_flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vaddress\">vaddress</a> = (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(0x0UL);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_pgd\">save_pgd</a> = *<a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(0x0UL);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pgd\">set_pgd</a>(<a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(0x0UL), *<a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#vaddress\">vaddress</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>();", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#efi_call_phys_epilog\">efi_call_phys_epilog</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * After the lock is released, the original page table is restored.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pgd\">set_pgd</a>(<a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(0x0UL), <a class=\"id\" href=\"#save_pgd\">save_pgd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#efi_flags\">efi_flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_runtime_code_mapping_set_exec\">early_runtime_code_mapping_set_exec</a>(0);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#efi_ioremap\">efi_ioremap</a>(unsigned long <a class=\"id\" href=\"#phys_addr\">phys_addr</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_map_pfn\">last_map_pfn</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#EFI_MEMORY_MAPPED_IO\">EFI_MEMORY_MAPPED_IO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_map_pfn\">last_map_pfn</a> = <a class=\"id\" href=\"#init_memory_mapping\">init_memory_mapping</a>(<a class=\"id\" href=\"#phys_addr\">phys_addr</a>, <a class=\"id\" href=\"#phys_addr\">phys_addr</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#last_map_pfn\">last_map_pfn</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) &lt; <a class=\"id\" href=\"#phys_addr\">phys_addr</a> + <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return (void <a class=\"id\" href=\"#__iomem\">__iomem</a> *)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#phys_addr\">phys_addr</a>);", 
"}", 
];
xr_frag_insert('l/18/7871dee981c6639dc6a62d6eb7df3be189eaa2.xr', __xr_tmp);
