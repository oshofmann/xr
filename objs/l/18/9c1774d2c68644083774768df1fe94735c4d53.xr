var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *   (c) 2003-2010 Advanced Micro Devices, Inc.</span>", 
"<span class=\"comment\"> *  Your use of this code is subject to the terms and conditions of the</span>", 
"<span class=\"comment\"> *  GNU general public license version 2. See \"COPYING\" or</span>", 
"<span class=\"comment\"> *  http://www.gnu.org/licenses/gpl.html</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Support : mark.langsdorf@amd.com</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Based on the powernow-k7.c module written by Dave Jones.</span>", 
"<span class=\"comment\"> *  (C) 2003 Dave Jones on behalf of SuSE Labs</span>", 
"<span class=\"comment\"> *  (C) 2004 Dominik Brodowski &lt;linux@brodo.de&gt;</span>", 
"<span class=\"comment\"> *  (C) 2004 Pavel Machek &lt;pavel@ucw.cz&gt;</span>", 
"<span class=\"comment\"> *  Licensed under the terms of the GNU GPL License version 2.</span>", 
"<span class=\"comment\"> *  Based upon datasheets &amp; sample CPUs kindly provided by AMD.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Valuable input gratefully received from Dave Jones, Pavel Machek,</span>", 
"<span class=\"comment\"> *  Dominik Brodowski, Jacob Shin, and others.</span>", 
"<span class=\"comment\"> *  Originally developed by Paul Devriendt.</span>", 
"<span class=\"comment\"> *  Processor information obtained from Chapter 9 (Power and Thermal Management)</span>", 
"<span class=\"comment\"> *  of the \"BIOS and Kernel Developer's Guide for the AMD Athlon 64 and AMD</span>", 
"<span class=\"comment\"> *  Opteron Processors\" available for download from www.amd.com</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Tables for specific CPUs can be inferred from</span>", 
"<span class=\"comment\"> *     http://www.amd.com/us-en/assets/content_type/white_papers_and_tech_docs/30430.pdf</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpufreq\">cpufreq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;<span class=\"ts\"/><span class=\"comment\">/* for current / set_cpus_allowed() */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"powernow-k8: \"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VERSION\">VERSION</a> \"version 2.20.00\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"powernow-k8.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mperf.h\"", 
"", 
"<span class=\"comment\">/* serialize freq changes  */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#fidvid_mutex\">fidvid_mutex</a>);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *, <a class=\"id\" href=\"#powernow_data\">powernow_data</a>);", 
"", 
"static int <a class=\"id\" href=\"#cpu_family\">cpu_family</a> = <a class=\"id\" href=\"#CPU_OPTERON\">CPU_OPTERON</a>;", 
"", 
"<span class=\"comment\">/* core performance boost */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#cpb_capable\">cpb_capable</a>, <a class=\"id\" href=\"#cpb_enabled\">cpb_enabled</a>;", 
"static struct <a class=\"id\" href=\"#msr\">msr</a> <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#msrs\">msrs</a>;", 
"", 
"static struct <a class=\"id\" href=\"#cpufreq_driver\">cpufreq_driver</a> <a class=\"id\" href=\"#cpufreq_amd64_driver\">cpufreq_amd64_driver</a>;", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpu_core_mask\">cpu_core_mask</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(0);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Return a frequency in MHz, given an input fid */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#find_freq_from_fid\">find_freq_from_fid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fid\">fid</a>)", 
"{", 
"<span class=\"ts\"/>return 800 + (<a class=\"id\" href=\"#fid\">fid</a> * 100);", 
"}", 
"", 
"<span class=\"comment\">/* Return a frequency in KHz, given an input fid */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#find_khz_freq_from_fid\">find_khz_freq_from_fid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fid\">fid</a>)", 
"{", 
"<span class=\"ts\"/>return 1000 * <a class=\"id\" href=\"#find_freq_from_fid\">find_freq_from_fid</a>(<a class=\"id\" href=\"#fid\">fid</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#find_khz_freq_from_pstate\">find_khz_freq_from_pstate</a>(struct <a class=\"id\" href=\"#cpufreq_frequency_table\">cpufreq_frequency_table</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pstate\">pstate</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#pstate\">pstate</a>].<a class=\"id\" href=\"#frequency\">frequency</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Return the vco fid for an input fid</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Each \"low\" fid has corresponding \"high\" fid, and you can get to \"low\" fids</span>", 
"<span class=\"comment\"> * only from corresponding high fids. This returns \"high\" fid corresponding to</span>", 
"<span class=\"comment\"> * \"low\" one.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#convert_fid_to_vco_fid\">convert_fid_to_vco_fid</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fid\">fid</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fid\">fid</a> &lt; <a class=\"id\" href=\"#HI_FID_TABLE_BOTTOM\">HI_FID_TABLE_BOTTOM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 8 + (2 * <a class=\"id\" href=\"#fid\">fid</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#fid\">fid</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return 1 if the pending bit is set. Unless we just instructed the processor</span>", 
"<span class=\"comment\"> * to transition to a new state, seeing this bit set is really bad news.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pending_bit_stuck\">pending_bit_stuck</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_family\">cpu_family</a> == <a class=\"id\" href=\"#CPU_HW_PSTATE\">CPU_HW_PSTATE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_FIDVID_STATUS\">MSR_FIDVID_STATUS</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lo\">lo</a> &amp; <a class=\"id\" href=\"#MSR_S_LO_CHANGE_PENDING\">MSR_S_LO_CHANGE_PENDING</a> ? 1 : 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Update the global current fid / vid values from the status msr.</span>", 
"<span class=\"comment\"> * Returns 1 on error.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_family\">cpu_family</a> == <a class=\"id\" href=\"#CPU_HW_PSTATE\">CPU_HW_PSTATE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_PSTATE_STATUS\">MSR_PSTATE_STATUS</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#lo\">lo</a> &amp; <a class=\"id\" href=\"#HW_PSTATE_MASK\">HW_PSTATE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currpstate\">currpstate</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a workaround for family 11h erratum 311 might cause</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * an \"out-of-range Pstate if the core is in Pstate-0</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 0x11) && (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currpstate\">currpstate</a> = <a class=\"id\" href=\"#HW_PSTATE_0\">HW_PSTATE_0</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>++ &gt; 10000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"detected change pending stuck\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_FIDVID_STATUS\">MSR_FIDVID_STATUS</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#lo\">lo</a> &amp; <a class=\"id\" href=\"#MSR_S_LO_CHANGE_PENDING\">MSR_S_LO_CHANGE_PENDING</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> = <a class=\"id\" href=\"#hi\">hi</a> &amp; <a class=\"id\" href=\"#MSR_S_HI_CURRENT_VID\">MSR_S_HI_CURRENT_VID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> = <a class=\"id\" href=\"#lo\">lo</a> &amp; <a class=\"id\" href=\"#MSR_S_LO_CURRENT_FID\">MSR_S_LO_CURRENT_FID</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* the isochronous relief time */</span>", 
"static void <a class=\"id\" href=\"#count_off_irt\">count_off_irt</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>((1 << <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#irt\">irt</a>) * 10);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/* the voltage stabilization time */</span>", 
"static void <a class=\"id\" href=\"#count_off_vst\">count_off_vst</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#udelay\">udelay</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vstable\">vstable</a> * <a class=\"id\" href=\"#VST_UNITS_20US\">VST_UNITS_20US</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/* need to init the control msr to a safe value (for each cpu) */</span>", 
"static void <a class=\"id\" href=\"#fidvid_msr_init\">fidvid_msr_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#vid\">vid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_FIDVID_STATUS\">MSR_FIDVID_STATUS</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vid\">vid</a> = <a class=\"id\" href=\"#hi\">hi</a> &amp; <a class=\"id\" href=\"#MSR_S_HI_CURRENT_VID\">MSR_S_HI_CURRENT_VID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fid\">fid</a> = <a class=\"id\" href=\"#lo\">lo</a> &amp; <a class=\"id\" href=\"#MSR_S_LO_CURRENT_FID\">MSR_S_LO_CURRENT_FID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#fid\">fid</a> | (<a class=\"id\" href=\"#vid\">vid</a> << <a class=\"id\" href=\"#MSR_C_LO_VID_SHIFT\">MSR_C_LO_VID_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hi\">hi</a> = <a class=\"id\" href=\"#MSR_C_HI_STP_GNT_BENIGN\">MSR_C_HI_STP_GNT_BENIGN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"cpu%d, init lo 0x%x, hi 0x%x\\n\", <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(), <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_FIDVID_CTL\">MSR_FIDVID_CTL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#hi\">hi</a>);", 
"}", 
"", 
"<span class=\"comment\">/* write the new fid value along with the other control fields to the msr */</span>", 
"static int <a class=\"id\" href=\"#write_new_fid\">write_new_fid</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fid\">fid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#savevid\">savevid</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#fid\">fid</a> &amp; <a class=\"id\" href=\"#INVALID_FID_MASK\">INVALID_FID_MASK</a>) || (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> &amp; <a class=\"id\" href=\"#INVALID_VID_MASK\">INVALID_VID_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"internal error - overflow on fid write\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#fid\">fid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> << <a class=\"id\" href=\"#MSR_C_LO_VID_SHIFT\">MSR_C_LO_VID_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= <a class=\"id\" href=\"#MSR_C_LO_INIT_FID_VID\">MSR_C_LO_INIT_FID_VID</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"writing fid 0x%x, lo 0x%x, hi 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#plllock\">plllock</a> * <a class=\"id\" href=\"#PLL_LOCK_CONVERSION\">PLL_LOCK_CONVERSION</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_FIDVID_CTL\">MSR_FIDVID_CTL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#plllock\">plllock</a> * <a class=\"id\" href=\"#PLL_LOCK_CONVERSION\">PLL_LOCK_CONVERSION</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>++ &gt; 100) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Hardware error - pending bit very stuck - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"no further pstate changes possible\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(<a class=\"id\" href=\"#data\">data</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count_off_irt\">count_off_irt</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#savevid\">savevid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"vid change on fid trans, old 0x%x, new 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#savevid\">savevid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fid\">fid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"fid trans failed, fid 0x%x, curr 0x%x\\n\", <a class=\"id\" href=\"#fid\">fid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Write a new vid to the hardware */</span>", 
"static int <a class=\"id\" href=\"#write_new_vid\">write_new_vid</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#vid\">vid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#savefid\">savefid</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> &amp; <a class=\"id\" href=\"#INVALID_FID_MASK\">INVALID_FID_MASK</a>) || (<a class=\"id\" href=\"#vid\">vid</a> &amp; <a class=\"id\" href=\"#INVALID_VID_MASK\">INVALID_VID_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"internal error - overflow on vid write\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= (<a class=\"id\" href=\"#vid\">vid</a> << <a class=\"id\" href=\"#MSR_C_LO_VID_SHIFT\">MSR_C_LO_VID_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> |= <a class=\"id\" href=\"#MSR_C_LO_INIT_FID_VID\">MSR_C_LO_INIT_FID_VID</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"writing vid 0x%x, lo 0x%x, hi 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vid\">vid</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#STOP_GRANT_5NS\">STOP_GRANT_5NS</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_FIDVID_CTL\">MSR_FIDVID_CTL</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#STOP_GRANT_5NS\">STOP_GRANT_5NS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>++ &gt; 100) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"internal error - pending bit \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"very stuck - no further pstate \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"changes possible\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(<a class=\"id\" href=\"#data\">data</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#savefid\">savefid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"fid changed on vid trans, old \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"0x%x new 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#savefid\">savefid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vid\">vid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"vid trans failed, vid 0x%x, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"curr 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vid\">vid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reduce the vid by the max of step or reqvid.</span>", 
"<span class=\"comment\"> * Decreasing vid codes represent increasing voltages:</span>", 
"<span class=\"comment\"> * vid of 0 is 1.550V, vid of 0x1e is 0.800V, vid of VID_OFF is off.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#decrease_vid_code_by_step\">decrease_vid_code_by_step</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reqvid\">reqvid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#step\">step</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> - <a class=\"id\" href=\"#reqvid\">reqvid</a>) &gt; <a class=\"id\" href=\"#step\">step</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqvid\">reqvid</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> - <a class=\"id\" href=\"#step\">step</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write_new_vid\">write_new_vid</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count_off_vst\">count_off_vst</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Change hardware pstate by single MSR write */</span>", 
"static int <a class=\"id\" href=\"#transition_pstate\">transition_pstate</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pstate\">pstate</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_PSTATE_CTRL\">MSR_PSTATE_CTRL</a>, <a class=\"id\" href=\"#pstate\">pstate</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currpstate\">currpstate</a> = <a class=\"id\" href=\"#pstate\">pstate</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Change Opteron/Athlon64 fid and vid, by the 3 phases. */</span>", 
"static int <a class=\"id\" href=\"#transition_fid_vid\">transition_fid_vid</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reqfid\">reqfid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reqvid\">reqvid</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#core_voltage_pre_transition\">core_voltage_pre_transition</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>, <a class=\"id\" href=\"#reqfid\">reqfid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#core_frequency_transition\">core_frequency_transition</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#reqfid\">reqfid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#core_voltage_post_transition\">core_voltage_post_transition</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#reqfid\">reqfid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) || (<a class=\"id\" href=\"#reqvid\">reqvid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"failed (cpu%d): req 0x%x 0x%x, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"curr 0x%x 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqfid\">reqfid</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"transitioned (cpu%d): new fid 0x%x, vid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(), <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Phase 1 - core voltage transition ... setup voltage */</span>", 
"static int <a class=\"id\" href=\"#core_voltage_pre_transition\">core_voltage_pre_transition</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reqvid\">reqvid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reqfid\">reqfid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rvosteps\">rvosteps</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#savefid\">savefid</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#maxvid\">maxvid</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#rvomult\">rvomult</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph1 (cpu%d): start, currfid 0x%x, currvid 0x%x, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"reqvid 0x%x, rvo 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#savefid\">savefid</a> &lt; <a class=\"id\" href=\"#LO_FID_TABLE_TOP\">LO_FID_TABLE_TOP</a>) && (<a class=\"id\" href=\"#reqfid\">reqfid</a> &lt; <a class=\"id\" href=\"#LO_FID_TABLE_TOP\">LO_FID_TABLE_TOP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rvomult\">rvomult</a> = 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rvosteps\">rvosteps</a> *= <a class=\"id\" href=\"#rvomult\">rvomult</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_FIDVID_STATUS\">MSR_FIDVID_STATUS</a>, <a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#maxvid\">maxvid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#maxvid\">maxvid</a> = 0x1f &amp; (<a class=\"id\" href=\"#maxvid\">maxvid</a> >> 16);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph1 maxvid=0x%x\\n\", <a class=\"id\" href=\"#maxvid\">maxvid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reqvid\">reqvid</a> &lt; <a class=\"id\" href=\"#maxvid\">maxvid</a>) <span class=\"comment\">/* lower numbers are higher voltages */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqvid\">reqvid</a> = <a class=\"id\" href=\"#maxvid\">maxvid</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> &gt; <a class=\"id\" href=\"#reqvid\">reqvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph1: curr 0x%x, req vid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#decrease_vid_code_by_step\">decrease_vid_code_by_step</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#vidmvs\">vidmvs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#rvosteps\">rvosteps</a> &gt; 0) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#rvomult\">rvomult</a> * <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a> + <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>) &gt; <a class=\"id\" href=\"#reqvid\">reqvid</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> == <a class=\"id\" href=\"#maxvid\">maxvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rvosteps\">rvosteps</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph1: changing vid for rvo, req 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#decrease_vid_code_by_step\">decrease_vid_code_by_step</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>-1, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rvosteps\">rvosteps</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#savefid\">savefid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"ph1 err, currfid changed 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph1 complete, currfid 0x%x, currvid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Phase 2 - core frequency transition */</span>", 
"static int <a class=\"id\" href=\"#core_frequency_transition\">core_frequency_transition</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reqfid\">reqfid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a>, <a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a>, <a class=\"id\" href=\"#vcofiddiff\">vcofiddiff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fid_interval\">fid_interval</a>, <a class=\"id\" href=\"#savevid\">savevid</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> == <a class=\"id\" href=\"#reqfid\">reqfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"ph2 null fid transition 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph2 (cpu%d): starting, currfid 0x%x, currvid 0x%x, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"reqfid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>, <a class=\"id\" href=\"#reqfid\">reqfid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a> = <a class=\"id\" href=\"#convert_fid_to_vco_fid\">convert_fid_to_vco_fid</a>(<a class=\"id\" href=\"#reqfid\">reqfid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a> = <a class=\"id\" href=\"#convert_fid_to_vco_fid\">convert_fid_to_vco_fid</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vcofiddiff\">vcofiddiff</a> = <a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a> &gt; <a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a> ? <a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a> - <a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a>", 
"<span class=\"ts\"/>    : <a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a> - <a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#reqfid\">reqfid</a> <= <a class=\"id\" href=\"#LO_FID_TABLE_TOP\">LO_FID_TABLE_TOP</a>) && (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> <= <a class=\"id\" href=\"#LO_FID_TABLE_TOP\">LO_FID_TABLE_TOP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vcofiddiff\">vcofiddiff</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#vcofiddiff\">vcofiddiff</a> &gt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> &amp; 1) ? (<a class=\"id\" href=\"#fid_interval\">fid_interval</a> = 1) : (<a class=\"id\" href=\"#fid_interval\">fid_interval</a> = 2);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reqfid\">reqfid</a> &gt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> &gt; <a class=\"id\" href=\"#LO_FID_TABLE_TOP\">LO_FID_TABLE_TOP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#write_new_fid\">write_new_fid</a>(<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> + <a class=\"id\" href=\"#fid_interval\">fid_interval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#write_new_fid\">write_new_fid</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     2 + <a class=\"id\" href=\"#convert_fid_to_vco_fid\">convert_fid_to_vco_fid</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#write_new_fid\">write_new_fid</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> - <a class=\"id\" href=\"#fid_interval\">fid_interval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a> = <a class=\"id\" href=\"#convert_fid_to_vco_fid\">convert_fid_to_vco_fid</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vcofiddiff\">vcofiddiff</a> = <a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a> &gt; <a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a> ? <a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a> - <a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    : <a class=\"id\" href=\"#vcoreqfid\">vcoreqfid</a> - <a class=\"id\" href=\"#vcocurrfid\">vcocurrfid</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write_new_fid\">write_new_fid</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#reqfid\">reqfid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a> != <a class=\"id\" href=\"#reqfid\">reqfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ph2: mismatch, failed fid transition, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"curr 0x%x, req 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#reqfid\">reqfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#savevid\">savevid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"ph2: vid changed, save 0x%x, curr 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#savevid\">savevid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph2 complete, currfid 0x%x, currvid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Phase 3 - core voltage transition flow ... jump to the final vid. */</span>", 
"static int <a class=\"id\" href=\"#core_voltage_post_transition\">core_voltage_post_transition</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reqvid\">reqvid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#savefid\">savefid</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#savereqvid\">savereqvid</a> = <a class=\"id\" href=\"#reqvid\">reqvid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph3 (cpu%d): starting, currfid 0x%x, currvid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>(),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reqvid\">reqvid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#write_new_vid\">write_new_vid</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#reqvid\">reqvid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#savefid\">savefid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ph3: bad fid change, save 0x%x, curr 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#savefid\">savefid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a> != <a class=\"id\" href=\"#reqvid\">reqvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ph3: failed vid transition\\n, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"req 0x%x, curr 0x%x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#reqvid\">reqvid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(<a class=\"id\" href=\"#data\">data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#savereqvid\">savereqvid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph3 failed, currvid 0x%x\\n\", <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#savefid\">savefid</a> != <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph3 failed, currfid changed 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"ph3 complete, currfid 0x%x, currvid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#check_supported_cpu\">check_supported_cpu</a>(void *<a class=\"id\" href=\"#_rc\">_rc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#eax\">eax</a>, <a class=\"id\" href=\"#ebx\">ebx</a>, <a class=\"id\" href=\"#ecx\">ecx</a>, <a class=\"id\" href=\"#edx\">edx</a>;", 
"<span class=\"ts\"/>int *<a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#_rc\">_rc</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current_cpu_data\">current_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> != <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a> = <a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(<a class=\"id\" href=\"#CPUID_PROCESSOR_SIGNATURE\">CPUID_PROCESSOR_SIGNATURE</a>);", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#eax\">eax</a> &amp; <a class=\"id\" href=\"#CPUID_XFAM\">CPUID_XFAM</a>) != <a class=\"id\" href=\"#CPUID_XFAM_K8\">CPUID_XFAM_K8</a>) &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#eax\">eax</a> &amp; <a class=\"id\" href=\"#CPUID_XFAM\">CPUID_XFAM</a>) &lt; <a class=\"id\" href=\"#CPUID_XFAM_10H\">CPUID_XFAM_10H</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#eax\">eax</a> &amp; <a class=\"id\" href=\"#CPUID_XFAM\">CPUID_XFAM</a>) == <a class=\"id\" href=\"#CPUID_XFAM_K8\">CPUID_XFAM_K8</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((<a class=\"id\" href=\"#eax\">eax</a> &amp; <a class=\"id\" href=\"#CPUID_USE_XFAM_XMOD\">CPUID_USE_XFAM_XMOD</a>) != <a class=\"id\" href=\"#CPUID_USE_XFAM_XMOD\">CPUID_USE_XFAM_XMOD</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#eax\">eax</a> &amp; <a class=\"id\" href=\"#CPUID_XMOD\">CPUID_XMOD</a>) &gt; <a class=\"id\" href=\"#CPUID_XMOD_REV_MASK\">CPUID_XMOD_REV_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Processor cpuid %x not supported\\n\", <a class=\"id\" href=\"#eax\">eax</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eax\">eax</a> = <a class=\"id\" href=\"#cpuid_eax\">cpuid_eax</a>(<a class=\"id\" href=\"#CPUID_GET_MAX_CAPABILITIES\">CPUID_GET_MAX_CAPABILITIES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eax\">eax</a> &lt; <a class=\"id\" href=\"#CPUID_FREQ_VOLT_CAPABILITIES\">CPUID_FREQ_VOLT_CAPABILITIES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"No frequency change capabilities detected\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(<a class=\"id\" href=\"#CPUID_FREQ_VOLT_CAPABILITIES\">CPUID_FREQ_VOLT_CAPABILITIES</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#edx\">edx</a> &amp; <a class=\"id\" href=\"#P_STATE_TRANSITION_CAPABLE\">P_STATE_TRANSITION_CAPABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!= <a class=\"id\" href=\"#P_STATE_TRANSITION_CAPABLE\">P_STATE_TRANSITION_CAPABLE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Power state transitions not supported\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else { <span class=\"comment\">/* must be a HW Pstate capable processor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpuid\">cpuid</a>(<a class=\"id\" href=\"#CPUID_FREQ_VOLT_CAPABILITIES\">CPUID_FREQ_VOLT_CAPABILITIES</a>, &amp;<a class=\"id\" href=\"#eax\">eax</a>, &amp;<a class=\"id\" href=\"#ebx\">ebx</a>, &amp;<a class=\"id\" href=\"#ecx\">ecx</a>, &amp;<a class=\"id\" href=\"#edx\">edx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#edx\">edx</a> &amp; <a class=\"id\" href=\"#USE_HW_PSTATE\">USE_HW_PSTATE</a>) == <a class=\"id\" href=\"#USE_HW_PSTATE\">USE_HW_PSTATE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_family\">cpu_family</a> = <a class=\"id\" href=\"#CPU_HW_PSTATE\">CPU_HW_PSTATE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#check_pst_table\">check_pst_table</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#pst_s\">pst_s</a> *<a class=\"id\" href=\"#pst\">pst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#maxvid\">maxvid</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#lastfid\">lastfid</a> = 0xff;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#vid\">vid</a> &gt; <a class=\"id\" href=\"#LEAST_VID\">LEAST_VID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"vid %d invalid : 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#vid\">vid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#vid\">vid</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* vid + rvo &gt;= 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"0 vid exceeded with pstate\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" %d\\n\", <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#vid\">vid</a> &lt; <a class=\"id\" href=\"#maxvid\">maxvid</a> + <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#rvo\">rvo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* vid + rvo &gt;= maxvid */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"maxvid exceeded with pstate\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" %d\\n\", <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a> &gt; <a class=\"id\" href=\"#MAX_FID\">MAX_FID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"maxfid exceeded with pstate\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" %d\\n\", <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a> && (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a> &lt; <a class=\"id\" href=\"#HI_FID_TABLE_BOTTOM\">HI_FID_TABLE_BOTTOM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only first fid is allowed to be in \"low\" range */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"two low fids - %d : \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"0x%x\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a> &lt; <a class=\"id\" href=\"#lastfid\">lastfid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lastfid\">lastfid</a> = <a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lastfid\">lastfid</a> &amp; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"lastfid invalid\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lastfid\">lastfid</a> &gt; <a class=\"id\" href=\"#LO_FID_TABLE_TOP\">LO_FID_TABLE_TOP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"first fid not from lo freq table\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#invalidate_entry\">invalidate_entry</a>(struct <a class=\"id\" href=\"#cpufreq_frequency_table\">cpufreq_frequency_table</a> *<a class=\"id\" href=\"#powernow_table\">powernow_table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#entry\">entry</a>].<a class=\"id\" href=\"#frequency\">frequency</a> = <a class=\"id\" href=\"#CPUFREQ_ENTRY_INVALID\">CPUFREQ_ENTRY_INVALID</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#print_basics\">print_basics</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#frequency\">frequency</a> !=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CPUFREQ_ENTRY_INVALID\">CPUFREQ_ENTRY_INVALID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_family\">cpu_family</a> == <a class=\"id\" href=\"#CPU_HW_PSTATE\">CPU_HW_PSTATE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"   %d : pstate %d (%d MHz)\\n\", <a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#frequency\">frequency</a>/1000);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"   %d : fid 0x%x (%d MHz), vid 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#index\">index</a> &amp; 0xff,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#frequency\">frequency</a>/1000,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#index\">index</a> >> 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#batps\">batps</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"Only %d pstates on battery\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#batps\">batps</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#freq_from_fid_did\">freq_from_fid_did</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fid\">fid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#did\">did</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mhz\">mhz</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 0x10)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mhz\">mhz</a> = (100 * (<a class=\"id\" href=\"#fid\">fid</a> + 0x10)) >> <a class=\"id\" href=\"#did\">did</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> == 0x11)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mhz\">mhz</a> = (100 * (<a class=\"id\" href=\"#fid\">fid</a> + 8)) >> <a class=\"id\" href=\"#did\">did</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mhz\">mhz</a> * 1000;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fill_powernow_table\">fill_powernow_table</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pst_s\">pst_s</a> *<a class=\"id\" href=\"#pst\">pst</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#maxvid\">maxvid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_frequency_table\">cpufreq_frequency_table</a> *<a class=\"id\" href=\"#powernow_table\">powernow_table</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#batps\">batps</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* use ACPI support to get full speed on mains power */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PFX\">PFX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Only %d pstates usable (use ACPI driver for full \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"range\\n\", <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#batps\">batps</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#batps\">batps</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 1; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>-1].<a class=\"id\" href=\"#fid\">fid</a> >= <a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"PST out of sequence\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a> &lt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"no p states to transition\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#check_pst_table\">check_pst_table</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#pst\">pst</a>, <a class=\"id\" href=\"#maxvid\">maxvid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#powernow_table\">powernow_table</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>((sizeof(struct <a class=\"id\" href=\"#cpufreq_frequency_table\">cpufreq_frequency_table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>* (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a> + 1)), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#powernow_table\">powernow_table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PFX\">PFX</a> \"powernow_table memory alloc failure\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#freq\">freq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a>; <span class=\"comment\">/* lower 8 bits */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#index\">index</a> |= (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#vid\">vid</a> << 8); <span class=\"comment\">/* upper 8 bits */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq\">freq</a> = <a class=\"id\" href=\"#find_khz_freq_from_fid\">find_khz_freq_from_fid</a>(<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#frequency\">frequency</a> = <a class=\"id\" href=\"#freq\">freq</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>].<a class=\"id\" href=\"#frequency\">frequency</a> = <a class=\"id\" href=\"#CPUFREQ_TABLE_END\">CPUFREQ_TABLE_END</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#powernow_table\">powernow_table</a>[<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>].<a class=\"id\" href=\"#index\">index</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#query_current_values_with_pending_wait\">query_current_values_with_pending_wait</a>(<a class=\"id\" href=\"#data\">data</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#powernow_table\">powernow_table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"cfid 0x%x, cvid 0x%x\\n\", <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#powernow_table\">powernow_table</a> = <a class=\"id\" href=\"#powernow_table\">powernow_table</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpumask_first\">cpumask_first</a>(<a class=\"id\" href=\"#cpu_core_mask\">cpu_core_mask</a>(<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)) == <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#cpu\">cpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_basics\">print_basics</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#numps\">numps</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#fid\">fid</a> == <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currfid\">currfid</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#pst\">pst</a>[<a class=\"id\" href=\"#j\">j</a>].<a class=\"id\" href=\"#vid\">vid</a> == <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#currvid\">currvid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dprintk\">dprintk</a>(\"currfid/vid do not match PST, ignoring\\n\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Find and validate the PSB/PST table in BIOS. */</span>", 
"static int <a class=\"id\" href=\"#find_psb_table\">find_psb_table</a>(struct <a class=\"id\" href=\"#powernow_k8_data\">powernow_k8_data</a> *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#psb_s\">psb_s</a> *<a class=\"id\" href=\"#psb\">psb</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mvs\">mvs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#maxvid\">maxvid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cpst\">cpst</a> = 0;", 
];
xr_frag_insert('l/18/9c1774d2c68644083774768df1fe94735c4d53.xr', __xr_tmp);
