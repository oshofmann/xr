var __xr_tmp = [
"<span class=\"comment\"> * Copyright 1997 Andi Kleen &lt;ak@muc.de&gt;</span>", 
"<span class=\"comment\"> * Copyright 1997 Linus Torvalds</span>", 
"<span class=\"comment\"> * Copyright 2002 Andi Kleen &lt;ak@suse.de&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copy a null terminated string from userspace.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__do_strncpy_from_user\">__do_strncpy_from_user</a>(<a class=\"id\" href=\"#dst\">dst</a>,<a class=\"id\" href=\"#src\">src</a>,<a class=\"id\" href=\"#count\">count</a>,<a class=\"id\" href=\"#res\">res</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#__d0\">__d0</a>, <a class=\"id\" href=\"#__d1\">__d1</a>, <a class=\"id\" href=\"#__d2\">__d2</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_fault\">might_fault</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__asm__\">__asm__</a> <a class=\"id\" href=\"#__volatile__\">__volatile__</a>(<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" testq %1,%1\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" jz 2f\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\"0: lodsb\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" stosb\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" testb %%al,%%al\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" jz 1f\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" decq %1\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" jnz 0b\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\"1: subq %1,%0\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\"2:\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\".section .fixup,\\\"ax\\\"\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\"3: movq %5,%0\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\" jmp 2b\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>\".previous\\n\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_ASM_EXTABLE\">_ASM_EXTABLE</a>(0<a class=\"id\" href=\"#b\">b</a>,3<a class=\"id\" href=\"#b\">b</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>: \"=&r\"(<a class=\"id\" href=\"#res\">res</a>), \"=&c\"(<a class=\"id\" href=\"#count\">count</a>), \"=&a\" (<a class=\"id\" href=\"#__d0\">__d0</a>), \"=&S\" (<a class=\"id\" href=\"#__d1\">__d1</a>),<span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"=&D\" (<a class=\"id\" href=\"#__d2\">__d2</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"<span class=\"ts\"/><span class=\"ts\"/>: \"i\"(-<a class=\"id\" href=\"#EFAULT\">EFAULT</a>), \"0\"(<a class=\"id\" href=\"#count\">count</a>), \"1\"(<a class=\"id\" href=\"#count\">count</a>), \"3\"(<a class=\"id\" href=\"#src\">src</a>), \"4\"(<a class=\"id\" href=\"#dst\">dst</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/>: \"memory\");<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \\", 
"} while (0)", 
"", 
"long", 
"<a class=\"id\" href=\"#__strncpy_from_user\">__strncpy_from_user</a>(char *<a class=\"id\" href=\"#dst\">dst</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#src\">src</a>, long <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__do_strncpy_from_user\">__do_strncpy_from_user</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__strncpy_from_user\">__strncpy_from_user</a>);", 
"", 
"long", 
"<a class=\"id\" href=\"#strncpy_from_user\">strncpy_from_user</a>(char *<a class=\"id\" href=\"#dst\">dst</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#src\">src</a>, long <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#res\">res</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#src\">src</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__strncpy_from_user\">__strncpy_from_user</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#strncpy_from_user\">strncpy_from_user</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Zero Userspace</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"unsigned long <a class=\"id\" href=\"#__clear_user\">__clear_user</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#__d0\">__d0</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#might_fault\">might_fault</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* no memory constraint because it doesn't change any memory gcc knows</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   about */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(", 
"<span class=\"ts\"/><span class=\"ts\"/>\" testq  %[size8],%[size8]\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" jz     4f\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"0: movq %[zero],(%[dst])\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" addq   %[eight],%[dst]\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" decl %%ecx ; jnz   0b\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"4: movq  %[size1],%%rcx\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" testl %%ecx,%%ecx\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" jz     2f\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"1: movb   %b[zero],(%[dst])\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" incq   %[dst]\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" decl %%ecx ; jnz  1b\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"2:\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\".section .fixup,\\\"ax\\\"\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"3: lea 0(%[size1],%[size8],8),%[size8]\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" jmp 2b\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\".previous\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_ASM_EXTABLE\">_ASM_EXTABLE</a>(0<a class=\"id\" href=\"#b\">b</a>,3<a class=\"id\" href=\"#b\">b</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_ASM_EXTABLE\">_ASM_EXTABLE</a>(1<a class=\"id\" href=\"#b\">b</a>,2<a class=\"id\" href=\"#b\">b</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>: [<a class=\"id\" href=\"#size8\">size8</a>] \"=&c\"(<a class=\"id\" href=\"#size\">size</a>), [<a class=\"id\" href=\"#dst\">dst</a>] \"=&D\" (<a class=\"id\" href=\"#__d0\">__d0</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>: [<a class=\"id\" href=\"#size1\">size1</a>] \"r\"(<a class=\"id\" href=\"#size\">size</a> &amp; 7), \"[size8]\" (<a class=\"id\" href=\"#size\">size</a> / 8), \"[dst]\"(<a class=\"id\" href=\"#addr\">addr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>  [<a class=\"id\" href=\"#zero\">zero</a>] \"r\" (0UL), [<a class=\"id\" href=\"#eight\">eight</a>] \"r\" (8UL));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__clear_user\">__clear_user</a>);", 
"", 
"unsigned long <a class=\"id\" href=\"#clear_user\">clear_user</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#to\">to</a>, unsigned long <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#n\">n</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__clear_user\">__clear_user</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#clear_user\">clear_user</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Return the size of a string (including the ending 0)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 0 on exception, a value greater than N if too long</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"long <a class=\"id\" href=\"#__strnlen_user\">__strnlen_user</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#s\">s</a>, long <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>&gt;<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#n\">n</a>+1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#s\">s</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>+1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__strnlen_user\">__strnlen_user</a>);", 
"", 
"long <a class=\"id\" href=\"#strnlen_user\">strnlen_user</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#s\">s</a>, long <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#s\">s</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__strnlen_user\">__strnlen_user</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#strnlen_user\">strnlen_user</a>);", 
"", 
"long <a class=\"id\" href=\"#strlen_user\">strlen_user</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#res\">res</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#s\">s</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#c\">c</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>+1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#strlen_user\">strlen_user</a>);", 
"", 
"unsigned long <a class=\"id\" href=\"#copy_in_user\">copy_in_user</a>(void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#to\">to</a>, const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#from\">from</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#len\">len</a>) && <a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#len\">len</a>)) { ", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#copy_user_generic\">copy_user_generic</a>((<a class=\"id\" href=\"#__force\">__force</a> void *)<a class=\"id\" href=\"#to\">to</a>, (<a class=\"id\" href=\"#__force\">__force</a> void *)<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>} ", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;<span class=\"ts\"/><span class=\"ts\"/>", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#copy_in_user\">copy_in_user</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Try to copy last bytes and clear the rest if needed.</span>", 
"<span class=\"comment\"> * Since protection fault in copy_from/to_user is not a normal situation,</span>", 
"<span class=\"comment\"> * it is not necessary to optimize tail handling.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long", 
"<a class=\"id\" href=\"#copy_user_handle_tail\">copy_user_handle_tail</a>(char *<a class=\"id\" href=\"#to\">to</a>, char *<a class=\"id\" href=\"#from\">from</a>, unsigned <a class=\"id\" href=\"#len\">len</a>, unsigned <a class=\"id\" href=\"#zerorest\">zerorest</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#zero_len\">zero_len</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#len\">len</a>; --<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__get_user_nocheck\">__get_user_nocheck</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#from\">from</a>++, sizeof(char)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user_nocheck\">__put_user_nocheck</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#to\">to</a>++, sizeof(char)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#c\">c</a> = 0, <a class=\"id\" href=\"#zero_len\">zero_len</a> = <a class=\"id\" href=\"#len\">len</a>; <a class=\"id\" href=\"#zerorest\">zerorest</a> && <a class=\"id\" href=\"#zero_len\">zero_len</a>; --<a class=\"id\" href=\"#zero_len\">zero_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user_nocheck\">__put_user_nocheck</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#to\">to</a>++, sizeof(char)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
];
xr_frag_insert('l/18/af5f723f88ea7404e77d6ea25c9b0fcf5fccfe.xr', __xr_tmp);
