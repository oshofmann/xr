var __xr_tmp = [
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s_kobj\">s_kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#complete\">complete</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kobj_unregister\">s_kobj_unregister</a>);", 
"}", 
"", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#ext4_attr_ops\">ext4_attr_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_attr_show\">ext4_attr_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_attr_store\">ext4_attr_store</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#ext4_ktype\">ext4_ktype</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#default_attrs\">default_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_attrs\">ext4_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ext4_attr_ops\">ext4_attr_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_sb_release\">ext4_sb_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check whether this filesystem can be mounted based on</span>", 
"<span class=\"comment\"> * the features present and the RDONLY/RDWR mount requested.</span>", 
"<span class=\"comment\"> * Returns 1 if this filesystem can be mounted as requested,</span>", 
"<span class=\"comment\"> * 0 if it cannot be.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_feature_set_ok\">ext4_feature_set_ok</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#readonly\">readonly</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~<a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_SUPP\">EXT4_FEATURE_INCOMPAT_SUPP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Couldn't mount because of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"unsupported optional features (%x)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>~<a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_SUPP\">EXT4_FEATURE_INCOMPAT_SUPP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#readonly\">readonly</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check that feature set is OK for a read-write mount */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~<a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SUPP\">EXT4_FEATURE_RO_COMPAT_SUPP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"couldn't mount RDWR because of \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"unsupported optional features (%x)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>~<a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SUPP\">EXT4_FEATURE_RO_COMPAT_SUPP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Large file size enabled file system can only be mounted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * read-write on 32-bit systems if kernel is built with CONFIG_LBDAF</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_HUGE_FILE\">EXT4_FEATURE_RO_COMPAT_HUGE_FILE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (sizeof(<a class=\"id\" href=\"#blkcnt_t\">blkcnt_t</a>) &lt; sizeof(<a class=\"id\" href=\"#u64\">u64</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Filesystem with huge files \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"cannot be mounted RDWR without \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"CONFIG_LBDAF\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is called once a day if we have errors logged</span>", 
"<span class=\"comment\"> * on the file system</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#print_daily_error_info\">print_daily_error_info</a>(unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = (struct <a class=\"id\" href=\"#super_block\">super_block</a> *) <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_error_count\">s_error_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>, \"error count: %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_error_count\">s_error_count</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_time\">s_first_error_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"EXT4-fs (%s): initial error at %u: %.*s:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_time\">s_first_error_time</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       (int) sizeof(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_func\">s_first_error_func</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_func\">s_first_error_func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_line\">s_first_error_line</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_ino\">s_first_error_ino</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\": inode %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_ino\">s_first_error_ino</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_block\">s_first_error_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\": block %llu\", (unsigned long long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le64_to_cpu\">le64_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_error_block\">s_first_error_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_time\">s_last_error_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"EXT4-fs (%s): last error at %u: %.*s:%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_time\">s_last_error_time</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       (int) sizeof(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_func\">s_last_error_func</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_func\">s_last_error_func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_line\">s_last_error_line</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_ino\">s_last_error_ino</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\": inode %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_ino\">s_last_error_ino</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_block\">s_last_error_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\": block %llu\", (unsigned long long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le64_to_cpu\">le64_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_error_block\">s_last_error_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_err_report\">s_err_report</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + 24*60*60*<a class=\"id\" href=\"#HZ\">HZ</a>);  <span class=\"comment\">/* Once a day */</span>", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_fill_super\">ext4_fill_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#silent\">silent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#kernel_lock\">kernel_lock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#kernel_lock\">kernel_lock</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#orig_data\">orig_data</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#get_sb_block\">get_sb_block</a>(&amp;<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#cp\">cp</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#descr\">descr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#db_count\">db_count</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#needs_recovery\">needs_recovery</a>, <a class=\"id\" href=\"#has_huge_files\">has_huge_files</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#blocks_count\">blocks_count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a> = <a class=\"id\" href=\"#DEFAULT_JOURNAL_IOPRIO\">DEFAULT_JOURNAL_IOPRIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#sbi\">sbi</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_orig\">out_free_orig</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#blockgroup_lock\">blockgroup_lock</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_orig\">out_free_orig</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#sbi\">sbi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#EXT4_DEF_RESUID\">EXT4_DEF_RESUID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#EXT4_DEF_RESGID\">EXT4_DEF_RESGID</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_readahead_blks\">s_inode_readahead_blks</a> = <a class=\"id\" href=\"#EXT4_DEF_INODE_READAHEAD_BLKS\">EXT4_DEF_INODE_READAHEAD_BLKS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sb_block\">s_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sectors_written_start\">s_sectors_written_start</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#part_stat_read\">part_stat_read</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>, <a class=\"id\" href=\"#sectors\">sectors</a>[1]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cleanup superblock name */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>; (<a class=\"id\" href=\"#cp\">cp</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#cp\">cp</a>, '/'));)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#cp\">cp</a> = '!';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#sb_min_blocksize\">sb_min_blocksize</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"unable to set blocksize\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The ext4 superblock will not be buffer aligned for other than 1kB</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block sizes.  We need to calculate the offset from buffer start.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> != <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a> * <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"unable to read superblock\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note: s_es must be initialized as soon as possible because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *       some ext4 macro-instructions depend on its value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *) (((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a> = <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> != <a class=\"id\" href=\"#EXT4_SUPER_MAGIC\">EXT4_SUPER_MAGIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext4\">cantfind_ext4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a> = <a class=\"id\" href=\"#le64_to_cpu\">le64_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set defaults before we parse the mount options */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_default_mount_opts\">s_default_mount_opts</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_DEBUG\">EXT4_DEFM_DEBUG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DEBUG\">DEBUG</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_BSDGROUPS\">EXT4_DEFM_BSDGROUPS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, <a class=\"id\" href=\"#deprecated_msg\">deprecated_msg</a>, \"bsdgroups\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"2.6.38\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#GRPID\">GRPID</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_UID16\">EXT4_DEFM_UID16</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#NO_UID32\">NO_UID32</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_XATTR\">CONFIG_EXT4_FS_XATTR</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_XATTR_USER\">EXT4_DEFM_XATTR_USER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#XATTR_USER\">XATTR_USER</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT4_FS_POSIX_ACL\">CONFIG_EXT4_FS_POSIX_ACL</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_ACL\">EXT4_DEFM_ACL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_JMODE\">EXT4_DEFM_JMODE</a>) == <a class=\"id\" href=\"#EXT4_DEFM_JMODE_DATA\">EXT4_DEFM_JMODE_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#JOURNAL_DATA\">JOURNAL_DATA</a>);", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_JMODE\">EXT4_DEFM_JMODE</a>) == <a class=\"id\" href=\"#EXT4_DEFM_JMODE_ORDERED\">EXT4_DEFM_JMODE_ORDERED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ORDERED_DATA\">ORDERED_DATA</a>);", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_JMODE\">EXT4_DEFM_JMODE</a>) == <a class=\"id\" href=\"#EXT4_DEFM_JMODE_WBACK\">EXT4_DEFM_JMODE_WBACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#WRITEBACK_DATA\">WRITEBACK_DATA</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>) == <a class=\"id\" href=\"#EXT4_ERRORS_PANIC\">EXT4_ERRORS_PANIC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_PANIC\">ERRORS_PANIC</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_errors\">s_errors</a>) == <a class=\"id\" href=\"#EXT4_ERRORS_CONTINUE\">EXT4_ERRORS_CONTINUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_CONT\">ERRORS_CONT</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ERRORS_RO\">ERRORS_RO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_BLOCK_VALIDITY\">EXT4_DEFM_BLOCK_VALIDITY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BLOCK_VALIDITY\">BLOCK_VALIDITY</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_DISCARD\">EXT4_DEFM_DISCARD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DISCARD\">DISCARD</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resuid\">s_def_resuid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_resgid\">s_def_resgid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> = <a class=\"id\" href=\"#JBD2_DEFAULT_MAX_COMMIT_AGE\">JBD2_DEFAULT_MAX_COMMIT_AGE</a> * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a> = <a class=\"id\" href=\"#EXT4_DEF_MIN_BATCH_TIME\">EXT4_DEF_MIN_BATCH_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a> = <a class=\"id\" href=\"#EXT4_DEF_MAX_BATCH_TIME\">EXT4_DEF_MAX_BATCH_TIME</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_NOBARRIER\">EXT4_DEFM_NOBARRIER</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * enable delayed allocation by default</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Use -o nodelalloc to turn it off</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_EXT3_SB\">IS_EXT3_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>) &&", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#def_mount_opts\">def_mount_opts</a> &amp; <a class=\"id\" href=\"#EXT4_DEFM_NODELALLOC\">EXT4_DEFM_NODELALLOC</a>) == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DELALLOC\">DELALLOC</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parse_options\">parse_options</a>((char *) <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_mount_opts\">s_mount_opts</a>, <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>, &amp;<a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"failed to parse options in superblock: %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_mount_opts\">s_mount_opts</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parse_options\">parse_options</a>((char *) <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sb\">sb</a>, &amp;<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; ~<a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) ? <a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a> : 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) == <a class=\"id\" href=\"#EXT4_GOOD_OLD_REV\">EXT4_GOOD_OLD_REV</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U) ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U) ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, ~0U)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"feature flags set on rev 0 fs, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"running e2fsck is recommended\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check feature flags regardless of the revision level, since we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * previously didn't change the revision level when setting the flags,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so there is a chance incompat flags are set on a rev 0 filesystem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_feature_set_ok\">ext4_feature_set_ok</a>(<a class=\"id\" href=\"#sb\">sb</a>, (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#BLOCK_SIZE\">BLOCK_SIZE</a> << <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_log_block_size\">s_log_block_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> &lt; <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#blocksize\">blocksize</a> &gt; <a class=\"id\" href=\"#EXT4_MAX_BLOCK_SIZE\">EXT4_MAX_BLOCK_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Unsupported filesystem blocksize %d\", <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> != <a class=\"id\" href=\"#blocksize\">blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Validate the filesystem blocksize */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_set_blocksize\">sb_set_blocksize</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"bad block size %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a> * <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Can't read superblock on 2nd try\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *)(((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a> = <a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a> != <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_SUPER_MAGIC\">EXT4_SUPER_MAGIC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Magic mismatch, very weird!\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#has_huge_files\">has_huge_files</a> = <a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_HUGE_FILE\">EXT4_FEATURE_RO_COMPAT_HUGE_FILE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_bitmap_maxbytes\">s_bitmap_maxbytes</a> = <a class=\"id\" href=\"#ext4_max_bitmap_size\">ext4_max_bitmap_size</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#has_huge_files\">has_huge_files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a> = <a class=\"id\" href=\"#ext4_max_size\">ext4_max_size</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>, <a class=\"id\" href=\"#has_huge_files\">has_huge_files</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_rev_level\">s_rev_level</a>) == <a class=\"id\" href=\"#EXT4_GOOD_OLD_REV\">EXT4_GOOD_OLD_REV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#EXT4_GOOD_OLD_FIRST_INO\">EXT4_GOOD_OLD_FIRST_INO</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_ino\">s_first_ino</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &lt; <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"unsupported inode size: %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &gt; <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a> = 1 << (<a class=\"id\" href=\"#EXT4_EPOCH_BITS\">EXT4_EPOCH_BITS</a> - 2);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_64BIT\">EXT4_FEATURE_INCOMPAT_64BIT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a> &lt; <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE_64BIT\">EXT4_MIN_DESC_SIZE_64BIT</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a> &gt; <a class=\"id\" href=\"#EXT4_MAX_DESC_SIZE\">EXT4_MAX_DESC_SIZE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"unsupported descriptor size %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_size\">s_desc_size</a> = <a class=\"id\" href=\"#EXT4_MIN_DESC_SIZE\">EXT4_MIN_DESC_SIZE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_INODE_SIZE\">EXT4_INODE_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0 || <a class=\"id\" href=\"#EXT4_INODES_PER_GROUP\">EXT4_INODES_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext4\">cantfind_ext4</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a> = <a class=\"id\" href=\"#blocksize\">blocksize</a> / <a class=\"id\" href=\"#EXT4_INODE_SIZE\">EXT4_INODE_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext4\">cantfind_ext4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_block\">s_inodes_per_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a> = <a class=\"id\" href=\"#blocksize\">blocksize</a> / <a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_sbh\">s_sbh</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_addr_per_block_bits\">s_addr_per_block_bits</a> = <a class=\"id\" href=\"#ilog2\">ilog2</a>(<a class=\"id\" href=\"#EXT4_ADDR_PER_BLOCK\">EXT4_ADDR_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block_bits\">s_desc_per_block_bits</a> = <a class=\"id\" href=\"#ilog2\">ilog2</a>(<a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_hash_seed\">s_hash_seed</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_hash_seed\">s_hash_seed</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_def_hash_version\">s_def_hash_version</a> = <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_def_hash_version\">s_def_hash_version</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &amp; <a class=\"id\" href=\"#EXT2_FLAGS_UNSIGNED_HASH\">EXT2_FLAGS_UNSIGNED_HASH</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_hash_unsigned\">s_hash_unsigned</a> = 3;", 
"<span class=\"ts\"/>else if ((<a class=\"id\" href=\"#i\">i</a> &amp; <a class=\"id\" href=\"#EXT2_FLAGS_SIGNED_HASH\">EXT2_FLAGS_SIGNED_HASH</a>) == 0) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__CHAR_UNSIGNED__\">__CHAR_UNSIGNED__</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_FLAGS_UNSIGNED_HASH\">EXT2_FLAGS_UNSIGNED_HASH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_hash_unsigned\">s_hash_unsigned</a> = 3;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_FLAGS_SIGNED_HASH\">EXT2_FLAGS_SIGNED_HASH</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dirt\">s_dirt</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"#blocks per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_per_group\">s_blocks_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a> * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"#inodes per group too big: %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inodes_per_group\">s_inodes_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Test whether we have more sectors than will fit in sector_t,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and whether the max offset is addressable by the page cache.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) &gt;", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#sector_t\">sector_t</a>)(~0ULL) >> (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a> - 9)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) &gt;", 
"<span class=\"ts\"/>     (<a class=\"id\" href=\"#pgoff_t\">pgoff_t</a>)(~0ULL) >> (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"filesystem\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" too large to mount safely on this system\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (sizeof(<a class=\"id\" href=\"#sector_t\">sector_t</a>) &lt; 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"CONFIG_LBDAF not enabled\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cantfind_ext4\">cantfind_ext4</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check blocks count against device size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocks_count\">blocks_count</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_inode\">bd_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> >> <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocks_count\">blocks_count</a> && <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) &gt; <a class=\"id\" href=\"#blocks_count\">blocks_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"bad geometry: block count %llu \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"exceeds size of device (%llu blocks)\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>), <a class=\"id\" href=\"#blocks_count\">blocks_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It makes no sense for the first data block to be beyond the end</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of the filesystem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>) >= <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>)) {", 
"                <a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"bad geometry: first data\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"block %u is beyond end of filesystem (%llu)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocks_count\">blocks_count</a> = (<a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#blocks_count\">blocks_count</a>, <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocks_count\">blocks_count</a> &gt; ((<a class=\"id\" href=\"#uint64_t\">uint64_t</a>)1<<32) - <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"groups count too large: %u \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"(block count %llu, first data block %u, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"blocks per group %lu)\", <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> = <a class=\"id\" href=\"#blocks_count\">blocks_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockfile_groups\">s_blockfile_groups</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#EXT4_MAX_BLOCK_FILE_PHYS\">EXT4_MAX_BLOCK_FILE_PHYS</a> / <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#db_count\">db_count</a> = (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a> + <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1) /", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#db_count\">db_count</a> * sizeof(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"not enough memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_proc_root\">ext4_proc_root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_proc\">s_proc</a> = <a class=\"id\" href=\"#proc_mkdir\">proc_mkdir</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#ext4_proc_root\">ext4_proc_root</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bgl_lock_init\">bgl_lock_init</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#db_count\">db_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#descriptor_loc\">descriptor_loc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#logical_sb_block\">logical_sb_block</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"can't read group descriptor %d\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#db_count\">db_count</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_check_descriptors\">ext4_check_descriptors</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"group descriptors corrupted!\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_fill_flex_info\">ext4_fill_flex_info</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"unable to initialize \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"flex_bg meta info!\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a> = <a class=\"id\" href=\"#db_count\">db_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_generation\">s_next_generation</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_next_gen_lock\">s_next_gen_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_stripe\">s_stripe</a> = <a class=\"id\" href=\"#ext4_get_stripe_size\">ext4_get_stripe_size</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_max_writeback_mb_bump\">s_max_writeback_mb_bump</a> = 128;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set up enough so that it can read an inode</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a> = &amp;<a class=\"id\" href=\"#ext4_sops\">ext4_sops</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a> = &amp;<a class=\"id\" href=\"#ext4_nojournal_sops\">ext4_nojournal_sops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_export_op\">s_export_op</a> = &amp;<a class=\"id\" href=\"#ext4_export_ops\">ext4_export_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_xattr\">s_xattr</a> = <a class=\"id\" href=\"#ext4_xattr_handlers\">ext4_xattr_handlers</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_qcop\">s_qcop</a> = &amp;<a class=\"id\" href=\"#ext4_qctl_operations\">ext4_qctl_operations</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#dq_op\">dq_op</a> = &amp;<a class=\"id\" href=\"#ext4_quota_operations\">ext4_quota_operations</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan\">s_orphan</a>); <span class=\"comment\">/* unlinked but open files */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_orphan_lock\">s_orphan_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resize_lock\">s_resize_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#needs_recovery\">needs_recovery</a> = (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a> != 0 ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The first inode we look at is the journal inode.  Don't try</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * root first: it may be modified in the journal!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_load_journal\">ext4_load_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NOLOAD\">NOLOAD</a>) && !(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) &&", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"required journal recovery \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"suppressed and not mounted read-only\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount_wq\">failed_mount_wq</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#WRITEBACK_DATA\">WRITEBACK_DATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needs_recovery\">needs_recovery</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#no_journal\">no_journal</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) &gt; 0xffffffffULL &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#jbd2_journal_set_features\">jbd2_journal_set_features</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>, 0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_64BIT\">JBD2_FEATURE_INCOMPAT_64BIT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Failed to set 64-bit journal feature\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount_wq\">failed_mount_wq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#JOURNAL_ASYNC_COMMIT\">JOURNAL_ASYNC_COMMIT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_set_features\">jbd2_journal_set_features</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_FEATURE_COMPAT_CHECKSUM\">JBD2_FEATURE_COMPAT_CHECKSUM</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT\">JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#JOURNAL_CHECKSUM\">JOURNAL_CHECKSUM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_set_features\">jbd2_journal_set_features</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_FEATURE_COMPAT_CHECKSUM\">JBD2_FEATURE_COMPAT_CHECKSUM</a>, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_clear_features\">jbd2_journal_clear_features</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>, 0, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT\">JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_clear_features\">jbd2_journal_clear_features</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_FEATURE_COMPAT_CHECKSUM\">JBD2_FEATURE_COMPAT_CHECKSUM</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT\">JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We have now updated the journal if required, so we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * validate the data journaling mode. */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>)) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No mode set, assume a default based on the journal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * capabilities: ORDERED_DATA if the journal can</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cope, else JOURNAL_DATA</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#jbd2_journal_check_available_features\">jbd2_journal_check_available_features</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>, 0, 0, <a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_REVOKE\">JBD2_FEATURE_INCOMPAT_REVOKE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#ORDERED_DATA\">ORDERED_DATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_opt\">set_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#JOURNAL_DATA\">JOURNAL_DATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EXT4_MOUNT_ORDERED_DATA\">EXT4_MOUNT_ORDERED_DATA</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EXT4_MOUNT_WRITEBACK_DATA\">EXT4_MOUNT_WRITEBACK_DATA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#jbd2_journal_check_available_features\">jbd2_journal_check_available_features</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>, 0, 0, <a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_REVOKE\">JBD2_FEATURE_INCOMPAT_REVOKE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Journal does not support \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"requested data journaling mode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount_wq\">failed_mount_wq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_task_ioprio\">set_task_ioprio</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a>, <a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a>);", 
"", 
"<a class=\"id\" href=\"#no_journal\">no_journal</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_count_free_blocks\">ext4_count_free_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_count_free_inodes\">ext4_count_free_inodes</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_count_dirs\">ext4_count_dirs</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#percpu_counter_init\">percpu_counter_init</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"insufficient memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount_wq\">failed_mount_wq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#dio_unwritten_wq\">dio_unwritten_wq</a> = <a class=\"id\" href=\"#create_workqueue\">create_workqueue</a>(\"ext4-dio-unwritten\");", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#dio_unwritten_wq\">dio_unwritten_wq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"EXT4-fs: failed to create DIO workqueue\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount_wq\">failed_mount_wq</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The jbd2_journal_load will have done any necessary log recovery,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we can safely mount the rest of the filesystem now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#ext4_iget\">ext4_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_ROOT_INO\">EXT4_ROOT_INO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#root\">root</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"get root inode failed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount4\">failed_mount4</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) || !<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_blocks\">i_blocks</a> || !<a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#i_size\">i_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"corrupt root inode, run e2fsck\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount4\">failed_mount4</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#d_alloc_root\">d_alloc_root</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"get root dentry failed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount4\">failed_mount4</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_setup_super\">ext4_setup_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* determine the minimum size of new large inodes, if present */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> &gt; <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a> = sizeof(struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE\">EXT4_FEATURE_RO_COMPAT_EXTRA_ISIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if enough inode space is available */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a> + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a> &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_want_extra_isize\">s_want_extra_isize</a> = sizeof(struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"required extra inode space not\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"available\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DELALLOC\">DELALLOC</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_DATA\">EXT4_MOUNT_JOURNAL_DATA</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"Ignoring delalloc option - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"requested data journaling mode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DELALLOC\">DELALLOC</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DIOREAD_NOLOCK\">DIOREAD_NOLOCK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_DATA\">EXT4_MOUNT_JOURNAL_DATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"Ignoring dioread_nolock \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"option - requested data journaling mode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DIOREAD_NOLOCK\">DIOREAD_NOLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"Ignoring dioread_nolock \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"option - block size is too small\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_opt\">clear_opt</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>, <a class=\"id\" href=\"#DIOREAD_NOLOCK\">DIOREAD_NOLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_setup_system_zone\">ext4_setup_system_zone</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"failed to initialize system \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"zone (%d)\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount4\">failed_mount4</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_init\">ext4_ext_init</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_mb_init\">ext4_mb_init</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#needs_recovery\">needs_recovery</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"failed to initialize mballoc (%d)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount4\">failed_mount4</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kobj\">s_kobj</a>.<a class=\"id\" href=\"#kset\">kset</a> = <a class=\"id\" href=\"#ext4_kset\">ext4_kset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kobj_unregister\">s_kobj_unregister</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#kobject_init_and_add\">kobject_init_and_add</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_kobj\">s_kobj</a>, &amp;<a class=\"id\" href=\"#ext4_ktype\">ext4_ktype</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%s\", <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mb_release\">ext4_mb_release</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_release\">ext4_ext_release</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount4\">failed_mount4</a>;", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> |= <a class=\"id\" href=\"#EXT4_ORPHAN_FS\">EXT4_ORPHAN_FS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_orphan_cleanup\">ext4_orphan_cleanup</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &= ~<a class=\"id\" href=\"#EXT4_ORPHAN_FS\">EXT4_ORPHAN_FS</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#needs_recovery\">needs_recovery</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"recovery complete\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_recovery_complete\">ext4_mark_recovery_complete</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_JOURNAL_DATA\">EXT4_MOUNT_JOURNAL_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = \" journalled data mode\";", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_FLAGS\">DATA_FLAGS</a>) == <a class=\"id\" href=\"#EXT4_MOUNT_ORDERED_DATA\">EXT4_MOUNT_ORDERED_DATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = \" ordered data mode\";", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = \" writeback data mode\";", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#descr\">descr</a> = \"out journal\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"mounted filesystem with%s. \"", 
"<span class=\"ts\"/><span class=\"ts\"/> \"Opts: %s%s%s\", <a class=\"id\" href=\"#descr\">descr</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_mount_opts\">s_mount_opts</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> *<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_mount_opts\">s_mount_opts</a> ? \"; \" : \"\", <a class=\"id\" href=\"#orig_data\">orig_data</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_timer\">init_timer</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_err_report\">s_err_report</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_err_report\">s_err_report</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#print_daily_error_info\">print_daily_error_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_err_report\">s_err_report</a>.<a class=\"id\" href=\"#data\">data</a> = (unsigned long) <a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_error_count\">s_error_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_err_report\">s_err_report</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + 300*<a class=\"id\" href=\"#HZ\">HZ</a>); <span class=\"comment\">/* 5 minutes */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#orig_data\">orig_data</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#cantfind_ext4\">cantfind_ext4</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#silent\">silent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"VFS: Can't find ext4 filesystem\");", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#failed_mount\">failed_mount</a>;", 
"", 
"<a class=\"id\" href=\"#failed_mount4\">failed_mount4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"mount failed\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_workqueue\">destroy_workqueue</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#dio_unwritten_wq\">dio_unwritten_wq</a>);", 
"<a class=\"id\" href=\"#failed_mount_wq\">failed_mount_wq</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_release_system_zone\">ext4_release_system_zone</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_destroy\">jbd2_journal_destroy</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirs_counter\">s_dirs_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_destroy\">percpu_counter_destroy</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>);", 
"<a class=\"id\" href=\"#failed_mount3\">failed_mount3</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vmalloc_addr\">is_vmalloc_addr</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#failed_mount2\">failed_mount2</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#db_count\">db_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>);", 
"<a class=\"id\" href=\"#failed_mount\">failed_mount</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_proc\">s_proc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>, <a class=\"id\" href=\"#ext4_proc_root\">ext4_proc_root</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_blkdev_remove\">ext4_blkdev_remove</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#out_fail\">out_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blockgroup_lock\">s_blockgroup_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<a class=\"id\" href=\"#out_free_orig\">out_free_orig</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#orig_data\">orig_data</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Setup any per-fs journal parameters now.  We'll do this both on</span>", 
"<span class=\"comment\"> * initial mount, once the journal has been initialised but before we've</span>", 
"<span class=\"comment\"> * done any recovery; and again on any subsequent remount.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext4_init_journal_params\">ext4_init_journal_params</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_commit_interval\">j_commit_interval</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_min_batch_time\">j_min_batch_time</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_max_batch_time\">j_max_batch_time</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#BARRIER\">BARRIER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DATA_ERR_ABORT\">DATA_ERR_ABORT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> |= <a class=\"id\" href=\"#JBD2_ABORT_ON_SYNCDATA_ERR\">JBD2_ABORT_ON_SYNCDATA_ERR</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &= ~<a class=\"id\" href=\"#JBD2_ABORT_ON_SYNCDATA_ERR\">JBD2_ABORT_ON_SYNCDATA_ERR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock\">write_unlock</a>(&amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#ext4_get_journal\">ext4_get_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#journal_inum\">journal_inum</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#journal_inode\">journal_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First, test for the existence of a valid inode on disk.  Bad</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * things happen if we iget() an unused inode, as the subsequent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * iput() will try to delete it. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_inode\">journal_inode</a> = <a class=\"id\" href=\"#ext4_iget\">ext4_iget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_inum\">journal_inum</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"no journal found\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal_inode\">journal_inode</a>-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#make_bad_inode\">make_bad_inode</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"journal inode is deleted\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"Journal inode found at %p: %lld bytes\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#journal_inode\">journal_inode</a>, <a class=\"id\" href=\"#journal_inode\">journal_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"invalid journal inode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#jbd2_journal_init_inode\">jbd2_journal_init_inode</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"Could not load journal inode\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#journal_inode\">journal_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_private\">j_private</a> = <a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_init_journal_params\">ext4_init_journal_params</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#ext4_get_dev_journal\">ext4_get_dev_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#j_dev\">j_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hblock\">hblock</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#sb_block\">sb_block</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bdev\">bdev</a> = <a class=\"id\" href=\"#ext4_blkdev_get\">ext4_blkdev_get</a>(<a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bdev\">bdev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bd_claim\">bd_claim</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"failed to claim external journal device\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blkdev_put\">blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>|<a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocksize\">blocksize</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hblock\">hblock</a> = <a class=\"id\" href=\"#bdev_logical_block_size\">bdev_logical_block_size</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blocksize\">blocksize</a> &lt; <a class=\"id\" href=\"#hblock\">hblock</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"blocksize too small for journal device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb_block\">sb_block</a> = <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a> / <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#EXT4_MIN_BLOCK_SIZE\">EXT4_MIN_BLOCK_SIZE</a> % <a class=\"id\" href=\"#blocksize\">blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_blocksize\">set_blocksize</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#__bread\">__bread</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sb_block\">sb_block</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"couldn't read superblock of \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"external journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = (struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *) (((char *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a>) != <a class=\"id\" href=\"#EXT4_SUPER_MAGIC\">EXT4_SUPER_MAGIC</a>) ||", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>) &amp;", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_JOURNAL_DEV\">EXT4_FEATURE_INCOMPAT_JOURNAL_DEV</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"external journal has \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"bad superblock\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_journal_uuid\">s_journal_uuid</a>, <a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a>, 16)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"journal UUID does not match\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#sb_block\">sb_block</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);<span class=\"ts\"/><span class=\"comment\">/* we're done with the superblock */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#jbd2_journal_init_dev\">jbd2_journal_init_dev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#journal\">journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"failed to create device journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bdev\">out_bdev</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_private\">j_private</a> = <a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ll_rw_block\">ll_rw_block</a>(<a class=\"id\" href=\"#READ\">READ</a>, 1, &amp;<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"I/O error on journal device\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_journal\">out_journal</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_nr_users\">s_nr_users</a>) != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"External journal has more than one \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"user (unsupported) - %d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_nr_users\">s_nr_users</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_journal\">out_journal</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#journal_bdev\">journal_bdev</a> = <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_init_journal_params\">ext4_init_journal_params</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<a class=\"id\" href=\"#out_journal\">out_journal</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_destroy\">jbd2_journal_destroy</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<a class=\"id\" href=\"#out_bdev\">out_bdev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_blkdev_put\">ext4_blkdev_put</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_load_journal\">ext4_load_journal</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#journal_inum\">journal_inum</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_inum\">s_journal_inum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#journal_dev\">journal_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#really_read_only\">really_read_only</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> != <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"external journal device major/minor \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"numbers have changed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_dev\">journal_dev</a> = <a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>);", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_dev\">journal_dev</a> = <a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#really_read_only\">really_read_only</a> = <a class=\"id\" href=\"#bdev_read_only\">bdev_read_only</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Are we loading a blank journal or performing recovery after a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * crash?  For recovery, we need to check in advance whether we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * can get read-write access to the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"INFO: recovery \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"required on readonly filesystem\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#really_read_only\">really_read_only</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"write access \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"unavailable, cannot proceed\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"write access will \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"be enabled during recovery\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_inum\">journal_inum</a> && <a class=\"id\" href=\"#journal_dev\">journal_dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"filesystem has both journal \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"and inode journals!\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_inum\">journal_inum</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#ext4_get_journal\">ext4_get_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_inum\">journal_inum</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#ext4_get_dev_journal\">ext4_get_dev_journal</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#journal_dev\">journal_dev</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_flags\">j_flags</a> &amp; <a class=\"id\" href=\"#JBD2_BARRIER\">JBD2_BARRIER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"barriers disabled\");", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#really_read_only\">really_read_only</a> && <a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#UPDATE_JOURNAL\">UPDATE_JOURNAL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_update_format\">jbd2_journal_update_format</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error updating journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_destroy\">jbd2_journal_destroy</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_wipe\">jbd2_journal_wipe</a>(<a class=\"id\" href=\"#journal\">journal</a>, !<a class=\"id\" href=\"#really_read_only\">really_read_only</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#save\">save</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#EXT4_S_ERR_LEN\">EXT4_S_ERR_LEN</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#save\">save</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#save\">save</a>, ((char *) <a class=\"id\" href=\"#es\">es</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_S_ERR_START\">EXT4_S_ERR_START</a>, <a class=\"id\" href=\"#EXT4_S_ERR_LEN\">EXT4_S_ERR_LEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_load\">jbd2_journal_load</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#save\">save</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(((char *) <a class=\"id\" href=\"#es\">es</a>) + <a class=\"id\" href=\"#EXT4_S_ERR_START\">EXT4_S_ERR_START</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#save\">save</a>, <a class=\"id\" href=\"#EXT4_S_ERR_LEN\">EXT4_S_ERR_LEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#save\">save</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"error loading journal\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_destroy\">jbd2_journal_destroy</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a> = <a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_journal_err\">ext4_clear_journal_err</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#journal_devnum\">journal_devnum</a> != <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_journal_dev\">s_journal_dev</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#journal_devnum\">journal_devnum</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make sure we flush the recovery flag to disk. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#sync\">sync</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#sbh\">sbh</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbh\">sbh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#sbh\">sbh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Oh, dear.  A previous attempt to write the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * superblock failed.  This could happen because the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * USB device was yanked out.  Or it could happen to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be a transient write error and maybe the block will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be remapped.  Nothing we can do but to retry the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * write and hope for the best.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"previous I/O error to \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"superblock detected\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_write_io_error\">clear_buffer_write_io_error</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the file system is mounted read-only, don't update the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock write time.  This avoids updating the superblock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * write time when we are mounting the root file system</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * read/only but we need to replay the journal; at that point,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for people who are east of GMT and who make their clock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tick in localtime for Windows bug-for-bug compatibility,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the clock is set in the future, and this will cause e2fsck</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to complain and force a full file system check.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_wtime\">s_wtime</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#get_seconds\">get_seconds</a>());", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le64\">cpu_to_le64</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#part_stat_read\">part_stat_read</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>, <a class=\"id\" href=\"#sectors\">sectors</a>[1]) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sectors_written_start\">s_sectors_written_start</a>) >> 1));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le64\">cpu_to_le64</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_kbytes_written\">s_kbytes_written</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks_count_set\">ext4_free_blocks_count_set</a>(<a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_free_inodes_count\">s_free_inodes_count</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_dirt\">s_dirt</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#sbh\">sbh</a>, \"marking dirty\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sync\">sync</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#buffer_write_io_error\">buffer_write_io_error</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, \"I/O error while writing \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"superblock\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_buffer_write_io_error\">clear_buffer_write_io_error</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#sbh\">sbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Have we just finished recovery?  If so, and if we are mounting (or</span>", 
"<span class=\"comment\"> * remounting) the filesystem readonly, then we will end up with a</span>", 
"<span class=\"comment\"> * consistent fs on disk.  Record that fact.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext4_mark_recovery_complete\">ext4_mark_recovery_complete</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#journal\">journal</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_lock_updates\">jbd2_journal_lock_updates</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jbd2_journal_flush\">jbd2_journal_flush</a>(<a class=\"id\" href=\"#journal\">journal</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_CLEAR_INCOMPAT_FEATURE\">EXT4_CLEAR_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_unlock_updates\">jbd2_journal_unlock_updates</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If we are mounting (or read-write remounting) a filesystem whose journal</span>", 
"<span class=\"comment\"> * has recorded an error from a previous lifetime, move that error to the</span>", 
"<span class=\"comment\"> * main filesystem now.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext4_clear_journal_err\">ext4_clear_journal_err</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#j_errno\">j_errno</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#errstr\">errstr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_HAS_JOURNAL\">EXT4_FEATURE_COMPAT_HAS_JOURNAL</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now check for any error status which may have been recorded in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * journal by a prior ext4_error() or ext4_abort()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j_errno\">j_errno</a> = <a class=\"id\" href=\"#jbd2_journal_errno\">jbd2_journal_errno</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#j_errno\">j_errno</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#nbuf\">nbuf</a>[16];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#errstr\">errstr</a> = <a class=\"id\" href=\"#ext4_decode_error\">ext4_decode_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#j_errno\">j_errno</a>, <a class=\"id\" href=\"#nbuf\">nbuf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Filesystem error recorded \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \"from previous mount: %s\", <a class=\"id\" href=\"#errstr\">errstr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_warning\">ext4_warning</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Marking fs in need of filesystem check.\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> |= <a class=\"id\" href=\"#EXT4_ERROR_FS\">EXT4_ERROR_FS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> |= <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_ERROR_FS\">EXT4_ERROR_FS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_clear_err\">jbd2_journal_clear_err</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Force the running and committing transactions to commit,</span>", 
"<span class=\"comment\"> * and wait on the commit.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_force_commit\">ext4_force_commit</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#journal\">journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfs_check_frozen\">vfs_check_frozen</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#SB_FREEZE_TRANS\">SB_FREEZE_TRANS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_journal_force_commit\">ext4_journal_force_commit</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ext4_write_super\">ext4_write_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_super\">lock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_sync_fs\">ext4_sync_fs</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#target\">target</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_ext4_sync_fs\">trace_ext4_sync_fs</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_workqueue\">flush_workqueue</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#dio_unwritten_wq\">dio_unwritten_wq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#jbd2_journal_start_commit\">jbd2_journal_start_commit</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>, &amp;<a class=\"id\" href=\"#target\">target</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#wait\">wait</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_log_wait_commit\">jbd2_log_wait_commit</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>, <a class=\"id\" href=\"#target\">target</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * LVM calls this function before a (read-only) snapshot is created.  This</span>", 
"<span class=\"comment\"> * gives us a chance to flush the journal completely and mark the fs clean.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_freeze\">ext4_freeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now we set up the journal barrier. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_lock_updates\">jbd2_journal_lock_updates</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't clear the needs_recovery flag if we failed to flush</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the journal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#jbd2_journal_flush\">jbd2_journal_flush</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Journal blocked and flushed, clear needs_recovery flag. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_CLEAR_INCOMPAT_FEATURE\">EXT4_CLEAR_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* we rely on s_frozen to stop further updates */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_unlock_updates\">jbd2_journal_unlock_updates</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called by LVM after the snapshot is done.  We need to reset the RECOVER</span>", 
"<span class=\"comment\"> * flag here, even though the filesystem is not technically dirty yet.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_unfreeze\">ext4_unfreeze</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_super\">lock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset the needs_recovery flag before the fs is unlocked. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SET_INCOMPAT_FEATURE\">EXT4_SET_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_RECOVER\">EXT4_FEATURE_INCOMPAT_RECOVER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_remount\">ext4_remount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int *<a class=\"id\" href=\"#flags\">flags</a>, char *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_mount_options\">ext4_mount_options</a> <a class=\"id\" href=\"#old_opts\">old_opts</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#enable_quota\">enable_quota</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#g\">g</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a> = <a class=\"id\" href=\"#DEFAULT_JOURNAL_IOPRIO\">DEFAULT_JOURNAL_IOPRIO</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#orig_data\">orig_data</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Store the original options */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_super\">lock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a> && <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a>-><a class=\"id\" href=\"#io_context\">io_context</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a>-><a class=\"id\" href=\"#io_context\">io_context</a>-><a class=\"id\" href=\"#ioprio\">ioprio</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow the \"check\" option to be passed as a remount option.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parse_options\">parse_options</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>, 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MF_FS_ABORTED\">EXT4_MF_FS_ABORTED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_abort\">ext4_abort</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Abort forced by user\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; ~<a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#POSIX_ACL\">POSIX_ACL</a>) ? <a class=\"id\" href=\"#MS_POSIXACL\">MS_POSIXACL</a> : 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_init_journal_params\">ext4_init_journal_params</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_task_ioprio\">set_task_ioprio</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>-><a class=\"id\" href=\"#j_task\">j_task</a>, <a class=\"id\" href=\"#journal_ioprio\">journal_ioprio</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((*<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) != (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a> &gt; <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_flags\">s_mount_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MF_FS_ABORTED\">EXT4_MF_FS_ABORTED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dquot_suspend\">dquot_suspend</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * First of all, the unconditional stuff we have to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to disable replay of the journal when we next remount</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> |= <a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * OK, test if we are remounting a valid rw partition</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * readonly, and if so set the rdonly flag and then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * mark the partition as valid again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> &amp; <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_VALID_FS\">EXT4_VALID_FS</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> &amp; <a class=\"id\" href=\"#EXT4_VALID_FS\">EXT4_VALID_FS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_recovery_complete\">ext4_mark_recovery_complete</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Make sure we can mount this feature set readwrite */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_feature_set_ok\">ext4_feature_set_ok</a>(<a class=\"id\" href=\"#sb\">sb</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Make sure the group descriptor checksums</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * are sane.  If they aren't, refuse to remount r/w.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#g\">g</a> = 0; <a class=\"id\" href=\"#g\">g</a> &lt; <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_groups_count\">s_groups_count</a>; <a class=\"id\" href=\"#g\">g</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_group_desc_csum_verify\">ext4_group_desc_csum_verify</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#gdp\">gdp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>,", 
"<span class=\"ts\"/>       \"ext4_remount: Checksum for group %u failed (%u!=%u)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#gdp\">gdp</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#gdp\">gdp</a>-><a class=\"id\" href=\"#bg_checksum\">bg_checksum</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we have an unprocessed orphan list hanging</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * around from a previously readonly bdev mount,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * require a full umount/remount for now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_last_orphan\">s_last_orphan</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"Couldn't \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"remount RDWR because of unprocessed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"orphan inode list.  Please \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"umount/remount instead\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Mounting a RDONLY partition read-write, so reread</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and store the current valid flag.  (It may have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * been changed by e2fsck since we originally mounted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the partition.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_journal_err\">ext4_clear_journal_err</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_state\">s_mount_state</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_state\">s_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_group_extend\">ext4_group_extend</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, <a class=\"id\" href=\"#n_blocks_count\">n_blocks_count</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restore_opts\">restore_opts</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_setup_super\">ext4_setup_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#es\">es</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> &= ~<a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable_quota\">enable_quota</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_setup_system_zone\">ext4_setup_system_zone</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_journal\">s_journal</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_commit_super\">ext4_commit_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* Release old quota file names */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enable_quota\">enable_quota</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_resume\">dquot_resume</a>(<a class=\"id\" href=\"#sb\">sb</a>, -1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, \"re-mounted. Opts: %s\", <a class=\"id\" href=\"#orig_data\">orig_data</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#orig_data\">orig_data</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#restore_opts\">restore_opts</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_flags\">s_flags</a> = <a class=\"id\" href=\"#old_sb_flags\">old_sb_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_commit_interval\">s_commit_interval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_min_batch_time\">s_min_batch_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_max_batch_time\">s_max_batch_time</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a> = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#old_opts\">old_opts</a>.<a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_super\">unlock_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#orig_data\">orig_data</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_statfs\">ext4_statfs</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#kstatfs\">kstatfs</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_sb\">d_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#fsid\">fsid</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#MINIX_DF\">MINIX_DF</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a> = 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a> != <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#ext4_get_groups_count\">ext4_get_groups_count</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#overhead\">overhead</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Compute the overhead (FS structures).  This is constant</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * for a given filesystem unless the number of block groups</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * changes so we cache the previous value until it does.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * All of the blocks before first_data_block are</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * overhead</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Add the overhead attributed to the superblock and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * block group descriptors.  If the sparse superblocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * feature is turned on, then not all groups have this.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> += <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Every block group has an inode bitmap, a block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bitmap, and an inode table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#overhead\">overhead</a> += <a class=\"id\" href=\"#ngroups\">ngroups</a> * (2 + <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a> = <a class=\"id\" href=\"#overhead\">overhead</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_blocks_last\">s_blocks_last</a> = <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_type\">f_type</a> = <a class=\"id\" href=\"#EXT4_SUPER_MAGIC\">EXT4_SUPER_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bsize\">f_bsize</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_blocks\">f_blocks</a> = <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>) - <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_overhead_last\">s_overhead_last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bavail\">f_bavail</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> - <a class=\"id\" href=\"#ext4_r_blocks_count\">ext4_r_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bfree\">f_bfree</a> &lt; <a class=\"id\" href=\"#ext4_r_blocks_count\">ext4_r_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_bavail\">f_bavail</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_files\">f_files</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_inodes_count\">s_inodes_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_ffree\">f_ffree</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeinodes_counter\">s_freeinodes_counter</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_namelen\">f_namelen</a> = <a class=\"id\" href=\"#EXT4_NAME_LEN\">EXT4_NAME_LEN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsid\">fsid</a> = <a class=\"id\" href=\"#le64_to_cpup\">le64_to_cpup</a>((void *)<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a>) ^", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#le64_to_cpup\">le64_to_cpup</a>((void *)<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_uuid\">s_uuid</a> + sizeof(<a class=\"id\" href=\"#u64\">u64</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_fsid\">f_fsid</a>.<a class=\"id\" href=\"#val\">val</a>[0] = <a class=\"id\" href=\"#fsid\">fsid</a> &amp; 0xFFFFFFFFUL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#f_fsid\">f_fsid</a>.<a class=\"id\" href=\"#val\">val</a>[1] = (<a class=\"id\" href=\"#fsid\">fsid</a> >> 32) &amp; 0xFFFFFFFFUL;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* Helper function for writing quotas on sync - we need to start transaction</span>", 
"<span class=\"comment\"> * before quota file is locked for write. Otherwise the are possible deadlocks:</span>", 
"<span class=\"comment\"> * Process 1                         Process 2</span>", 
"<span class=\"comment\"> * ext4_create()                     quota_sync()</span>", 
"<span class=\"comment\"> *   jbd2_journal_start()                  write_dquot()</span>", 
"<span class=\"comment\"> *   dquot_initialize()                         down(dqio_mutex)</span>", 
"<span class=\"comment\"> *     down(dqio_mutex)                    jbd2_journal_start()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUOTA\">CONFIG_QUOTA</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>];", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_write_dquot\">ext4_write_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_QUOTA_TRANS_BLOCKS\">EXT4_QUOTA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_commit\">dquot_commit</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_acquire_dquot\">ext4_acquire_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(<a class=\"id\" href=\"#dquot\">dquot</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_QUOTA_INIT_BLOCKS\">EXT4_QUOTA_INIT_BLOCKS</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_acquire\">dquot_acquire</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_release_dquot\">ext4_release_dquot</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#dquot_to_inode\">dquot_to_inode</a>(<a class=\"id\" href=\"#dquot\">dquot</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_QUOTA_DEL_BLOCKS\">EXT4_QUOTA_DEL_BLOCKS</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Release dquot anyway to avoid endless cycle in dqput() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_release\">dquot_release</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_release\">dquot_release</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_mark_dquot_dirty\">ext4_mark_dquot_dirty</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Are we journaling quotas? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>] ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_mark_dquot_dirty\">dquot_mark_dquot_dirty</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_write_dquot\">ext4_write_dquot</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_mark_dquot_dirty\">dquot_mark_dquot_dirty</a>(<a class=\"id\" href=\"#dquot\">dquot</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_write_info\">ext4_write_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Data block + inode block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, 2);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dquot_commit_info\">dquot_commit_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Turn on quotas during mount time - we need to find</span>", 
"<span class=\"comment\"> * the quota file and such...</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_quota_on_mount\">ext4_quota_on_mount</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_quota_on_mount\">dquot_quota_on_mount</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#type\">type</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_jquota_fmt\">s_jquota_fmt</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Standard function to be called on quota_on</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_quota_on\">ext4_quota_on</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#QUOTA\">QUOTA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#kern_path\">kern_path</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>, &amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Quotafile not on the same filesystem? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_sb\">mnt_sb</a> != <a class=\"id\" href=\"#sb\">sb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EXDEV\">EXDEV</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Journaling quota? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_qf_names\">s_qf_names</a>[<a class=\"id\" href=\"#type\">type</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Quotafile not in fs root? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_parent\">d_parent</a> != <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Quota file not on filesystem root. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Journaled quota will not work\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When we journal data on quota file, we have to flush journal to see</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all updates to the file when we bypass pagecache...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_should_journal_data\">ext4_should_journal_data</a>(<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We don't need to lock updates but journal_flush() could</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * otherwise be livelocked...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_lock_updates\">jbd2_journal_lock_updates</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_flush\">jbd2_journal_flush</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_unlock_updates\">jbd2_journal_unlock_updates</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dquot_quota_on_path\">dquot_quota_on_path</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#format_id\">format_id</a>, &amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_quota_off\">ext4_quota_off</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Force all delayed allocation blocks to be allocated */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_opt\">test_opt</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#DELALLOC\">DELALLOC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_umount\">s_umount</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_filesystem\">sync_filesystem</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_umount\">s_umount</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_quota_off\">dquot_quota_off</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Read data from quotafile - avoid pagecache and such because we cannot afford</span>", 
"<span class=\"comment\"> * acquiring the locks... As quota files are never truncated and quota code</span>", 
"<span class=\"comment\"> * itself serializes the operations (and noone else should touch the files)</span>", 
"<span class=\"comment\"> * we don't have to be afraid of races */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext4_quota_read\">ext4_quota_read</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, char *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#off\">off</a> >> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE_BITS\">EXT4_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#off\">off</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#toread\">toread</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#i_size\">i_size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a> &gt; <a class=\"id\" href=\"#i_size\">i_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a>+<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#i_size\">i_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#i_size\">i_size</a>-<a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#toread\">toread</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#toread\">toread</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tocopy\">tocopy</a> = <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#toread\">toread</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> : <a class=\"id\" href=\"#toread\">toread</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ext4_bread\">ext4_bread</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#blk\">blk</a>, 0, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)<span class=\"ts\"/><span class=\"comment\">/* A hole? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#data\">data</a>, 0, <a class=\"id\" href=\"#tocopy\">tocopy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#tocopy\">tocopy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toread\">toread</a> -= <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#tocopy\">tocopy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk\">blk</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Write to quotafile (we know the transaction is already started and has</span>", 
"<span class=\"comment\"> * enough credits) */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ext4_quota_write\">ext4_quota_write</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#blk\">blk</a> = <a class=\"id\" href=\"#off\">off</a> >> <a class=\"id\" href=\"#EXT4_BLOCK_SIZE_BITS\">EXT4_BLOCK_SIZE_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#off\">off</a> &amp; (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#journal_current_handle\">journal_current_handle</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a> && !<a class=\"id\" href=\"#handle\">handle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"Quota write (off=%llu, len=%llu)\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" cancelled because transaction is not started\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#off\">off</a>, (unsigned long long)<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since we account only one data block in transaction credits,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then it is impossible to cross a block boundary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - <a class=\"id\" href=\"#offset\">offset</a> &lt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_msg\">ext4_msg</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, \"Quota write (off=%llu, len=%llu)\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" cancelled because not block aligned\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#off\">off</a>, (unsigned long long)<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_QUOTA\">I_MUTEX_QUOTA</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#ext4_bread\">ext4_bread</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#blk\">blk</a>, 1, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_page\">b_page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> &lt; <a class=\"id\" href=\"#off\">off</a> + <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_size_write\">i_size_write</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#off\">off</a> + <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_disksize\">i_disksize</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ext4_get_sb\">ext4_get_sb</a>(struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> *<a class=\"id\" href=\"#fs_type\">fs_type</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#dev_name\">dev_name</a>, void *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#get_sb_bdev\">get_sb_bdev</a>(<a class=\"id\" href=\"#fs_type\">fs_type</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#dev_name\">dev_name</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#ext4_fill_super\">ext4_fill_super</a>,<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"}", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT2_FS\">CONFIG_EXT2_FS</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT2_FS_MODULE\">CONFIG_EXT2_FS_MODULE</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT4_USE_FOR_EXT23\">CONFIG_EXT4_USE_FOR_EXT23</a>)", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#ext2_fs_type\">ext2_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"ext2\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_get_sb\">ext4_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#kill_block_super\">kill_block_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fs_flags\">fs_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#FS_REQUIRES_DEV\">FS_REQUIRES_DEV</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#register_as_ext2\">register_as_ext2</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#ext2_fs_type\">ext2_fs_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"EXT4-fs: Unable to register as ext2 (%d)\\n\", <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_as_ext2\">unregister_as_ext2</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>(&amp;<a class=\"id\" href=\"#ext2_fs_type\">ext2_fs_type</a>);", 
"}", 
"<a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"ext2\");", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#register_as_ext2\">register_as_ext2</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_as_ext2\">unregister_as_ext2</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT3_FS\">CONFIG_EXT3_FS</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT3_FS_MODULE\">CONFIG_EXT3_FS_MODULE</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EXT4_USE_FOR_EXT23\">CONFIG_EXT4_USE_FOR_EXT23</a>)", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#register_as_ext3\">register_as_ext3</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#ext3_fs_type\">ext3_fs_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"EXT4-fs: Unable to register as ext3 (%d)\\n\", <a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_as_ext3\">unregister_as_ext3</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_filesystem\">unregister_filesystem</a>(&amp;<a class=\"id\" href=\"#ext3_fs_type\">ext3_fs_type</a>);", 
"}", 
"<a class=\"id\" href=\"#MODULE_ALIAS\">MODULE_ALIAS</a>(\"ext3\");", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#register_as_ext3\">register_as_ext3</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#unregister_as_ext3\">unregister_as_ext3</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#file_system_type\">file_system_type</a> <a class=\"id\" href=\"#ext4_fs_type\">ext4_fs_type</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"ext4\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#get_sb\">get_sb</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ext4_get_sb\">ext4_get_sb</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#kill_sb\">kill_sb</a><span class=\"ts\"/>= <a class=\"id\" href=\"#kill_block_super\">kill_block_super</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fs_flags\">fs_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#FS_REQUIRES_DEV\">FS_REQUIRES_DEV</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_ext4_fs\">init_ext4_fs</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_check_flag_values\">ext4_check_flag_values</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_ext4_system_zone\">init_ext4_system_zone</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_kset\">ext4_kset</a> = <a class=\"id\" href=\"#kset_create_and_add\">kset_create_and_add</a>(\"ext4\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#fs_kobj\">fs_kobj</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_kset\">ext4_kset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out4\">out4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_proc_root\">ext4_proc_root</a> = <a class=\"id\" href=\"#proc_mkdir\">proc_mkdir</a>(\"fs/ext4\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_ext4_mballoc\">init_ext4_mballoc</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out3\">out3</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_ext4_xattr\">init_ext4_xattr</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#init_inodecache\">init_inodecache</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out1\">out1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_as_ext2\">register_as_ext2</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_as_ext3\">register_as_ext3</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_filesystem\">register_filesystem</a>(&amp;<a class=\"id\" href=\"#ext4_fs_type\">ext4_fs_type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_as_ext2\">unregister_as_ext2</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_as_ext3\">unregister_as_ext3</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_inodecache\">destroy_inodecache</a>();", 
"<a class=\"id\" href=\"#out1\">out1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_ext4_xattr\">exit_ext4_xattr</a>();", 
"<a class=\"id\" href=\"#out2\">out2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_ext4_mballoc\">exit_ext4_mballoc</a>();", 
"<a class=\"id\" href=\"#out3\">out3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"fs/ext4\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kset_unregister\">kset_unregister</a>(<a class=\"id\" href=\"#ext4_kset\">ext4_kset</a>);", 
"<a class=\"id\" href=\"#out4\">out4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_ext4_system_zone\">exit_ext4_system_zone</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
];
xr_frag_insert('l/19/2d79d09d0d7cedbb000da68019eb7cf6bfeb20.xr', __xr_tmp);
