var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_TYPES_H\">_LINUX_TYPES_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_TYPES_H\">_LINUX_TYPES_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#name\">name</a>,<a class=\"id\" href=\"#bits\">bits</a>) \\", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#bits\">bits</a>)]", 
"#else", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__EXPORTED_HEADERS__\">__EXPORTED_HEADERS__</a>", 
"#<a class=\"id\" href=\"#warning\">warning</a> \"Attempt to use kernel headers from user space, see http://kernelnewbies.org/KernelHeaders\"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __EXPORTED_HEADERS__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#posix_types\">posix_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"typedef <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#__kernel_dev_t\">__kernel_dev_t</a>;", 
"", 
"typedef <a class=\"id\" href=\"#__kernel_fd_set\">__kernel_fd_set</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fd_set\">fd_set</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_dev_t\">__kernel_dev_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_ino_t\">__kernel_ino_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ino_t\">ino_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_mode_t\">__kernel_mode_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_nlink_t\">__kernel_nlink_t</a><span class=\"ts\"/><a class=\"id\" href=\"#nlink_t\">nlink_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_off_t\">__kernel_off_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off_t\">off_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_pid_t\">__kernel_pid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_daddr_t\">__kernel_daddr_t</a><span class=\"ts\"/><a class=\"id\" href=\"#daddr_t\">daddr_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_key_t\">__kernel_key_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_t\">key_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_suseconds_t\">__kernel_suseconds_t</a><span class=\"ts\"/><a class=\"id\" href=\"#suseconds_t\">suseconds_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_timer_t\">__kernel_timer_t</a><span class=\"ts\"/><a class=\"id\" href=\"#timer_t\">timer_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_clockid_t\">__kernel_clockid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#clockid_t\">clockid_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_mqd_t\">__kernel_mqd_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mqd_t\">mqd_t</a>;", 
"", 
"typedef <a class=\"id\" href=\"#_Bool\">_Bool</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a>;", 
"", 
"typedef <a class=\"id\" href=\"#__kernel_uid32_t\">__kernel_uid32_t</a><span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_gid32_t\">__kernel_gid32_t</a><span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_uid16_t\">__kernel_uid16_t</a>        <a class=\"id\" href=\"#uid16_t\">uid16_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_gid16_t\">__kernel_gid16_t</a>        <a class=\"id\" href=\"#gid16_t\">gid16_t</a>;", 
"", 
"typedef unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uintptr_t\">uintptr_t</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_UID16\">CONFIG_UID16</a>", 
"<span class=\"comment\">/* This is defined by include/asm-{arch}/posix_types.h */</span>", 
"typedef <a class=\"id\" href=\"#__kernel_old_uid_t\">__kernel_old_uid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#old_uid_t\">old_uid_t</a>;", 
"typedef <a class=\"id\" href=\"#__kernel_old_gid_t\">__kernel_old_gid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#old_gid_t\">old_gid_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_UID16 */</span>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__GNUC__\">__GNUC__</a>)", 
"typedef <a class=\"id\" href=\"#__kernel_loff_t\">__kernel_loff_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following typedefs are also protected by individual ifdefs for</span>", 
"<span class=\"comment\"> * historical reasons:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SIZE_T\">_SIZE_T</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SIZE_T\">_SIZE_T</a>", 
"typedef <a class=\"id\" href=\"#__kernel_size_t\">__kernel_size_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SSIZE_T\">_SSIZE_T</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SSIZE_T\">_SSIZE_T</a>", 
"typedef <a class=\"id\" href=\"#__kernel_ssize_t\">__kernel_ssize_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_PTRDIFF_T\">_PTRDIFF_T</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_PTRDIFF_T\">_PTRDIFF_T</a>", 
"typedef <a class=\"id\" href=\"#__kernel_ptrdiff_t\">__kernel_ptrdiff_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ptrdiff_t\">ptrdiff_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_TIME_T\">_TIME_T</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_TIME_T\">_TIME_T</a>", 
"typedef <a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#time_t\">time_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_CLOCK_T\">_CLOCK_T</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_CLOCK_T\">_CLOCK_T</a>", 
"typedef <a class=\"id\" href=\"#__kernel_clock_t\">__kernel_clock_t</a><span class=\"ts\"/><a class=\"id\" href=\"#clock_t\">clock_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_CADDR_T\">_CADDR_T</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_CADDR_T\">_CADDR_T</a>", 
"typedef <a class=\"id\" href=\"#__kernel_caddr_t\">__kernel_caddr_t</a><span class=\"ts\"/><a class=\"id\" href=\"#caddr_t\">caddr_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* bsd */</span>", 
"typedef unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_char\">u_char</a>;", 
"typedef unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_short\">u_short</a>;", 
"typedef unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_int\">u_int</a>;", 
"typedef unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_long\">u_long</a>;", 
"", 
"<span class=\"comment\">/* sysv */</span>", 
"typedef unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unchar\">unchar</a>;", 
"typedef unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ushort\">ushort</a>;", 
"typedef unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint\">uint</a>;", 
"typedef unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ulong\">ulong</a>;", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__BIT_TYPES_DEFINED__\">__BIT_TYPES_DEFINED__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__BIT_TYPES_DEFINED__\">__BIT_TYPES_DEFINED__</a>", 
"", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_int8_t\">u_int8_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__s8\">__s8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#int8_t\">int8_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_int16_t\">u_int16_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#int16_t\">int16_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_int32_t\">u_int32_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__s32\">__s32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#int32_t\">int32_t</a>;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !(__BIT_TYPES_DEFINED__) */</span>", 
"", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint8_t\">uint8_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint16_t\">uint16_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint32_t\">uint32_t</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__GNUC__\">__GNUC__</a>)", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uint64_t\">uint64_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u_int64_t\">u_int64_t</a>;", 
"typedef<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__s64\">__s64</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#int64_t\">int64_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * aligned_u64 should be used in defining kernel&lt;-&gt;userspace ABIs to avoid</span>", 
"<span class=\"comment\"> * common 32/64-bit compat problems.</span>", 
"<span class=\"comment\"> * 64-bit values align to 4-byte boundaries on x86_32 (and possibly other</span>", 
"<span class=\"comment\"> * architectures) and to 8-byte boundaries on 64-bit architetures.  The new</span>", 
"<span class=\"comment\"> * aligned_64 type enforces 8-byte alignment so that structs containing</span>", 
"<span class=\"comment\"> * aligned_64 values have the same alignment on 32-bit and 64-bit architectures.</span>", 
"<span class=\"comment\"> * No conversions are necessary between 32-bit user-space and a 64-bit kernel.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#aligned_u64\">aligned_u64</a> <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#aligned_be64\">aligned_be64</a> <a class=\"id\" href=\"#__be64\">__be64</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#aligned_le64\">aligned_le64</a> <a class=\"id\" href=\"#__le64\">__le64</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)))", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * The type used for indexing onto a disc or disc partition.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Linux always considers sectors to be 512 bytes long independently</span>", 
"<span class=\"comment\"> * of the devices real block size.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * blkcnt_t is the type of the inode's block count.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_LBDAF\">CONFIG_LBDAF</a>", 
"typedef <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sector_t\">sector_t</a>;", 
"typedef <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#blkcnt_t\">blkcnt_t</a>;", 
"#else", 
"typedef unsigned long <a class=\"id\" href=\"#sector_t\">sector_t</a>;", 
"typedef unsigned long <a class=\"id\" href=\"#blkcnt_t\">blkcnt_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The type of an index into the pagecache.  Use a #define so asm/types.h</span>", 
"<span class=\"comment\"> * can override it.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> unsigned long", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Below are truly Linux-specific types that should never collide with</span>", 
"<span class=\"comment\"> * any application/library that wants linux/types.h.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__CHECKER__\">__CHECKER__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__bitwise__\">__bitwise__</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#bitwise\">bitwise</a>))", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__bitwise__\">__bitwise__</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__CHECK_ENDIAN__\">__CHECK_ENDIAN__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__bitwise__\">__bitwise__</a>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"typedef <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__le16\">__le16</a>;", 
"typedef <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__be16\">__be16</a>;", 
"typedef <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__le32\">__le32</a>;", 
"typedef <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__be32\">__be32</a>;", 
"typedef <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__le64\">__le64</a>;", 
"typedef <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__be64\">__be64</a>;", 
"", 
"typedef <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__sum16\">__sum16</a>;", 
"typedef <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#__bitwise\">__bitwise</a> <a class=\"id\" href=\"#__wsum\">__wsum</a>;", 
"", 
"<span class=\"comment\">/* this is a special 64bit data type that is 8-byte aligned */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__aligned_u64\">__aligned_u64</a> <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__aligned_be64\">__aligned_be64</a> <a class=\"id\" href=\"#__be64\">__be64</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__aligned_le64\">__aligned_le64</a> <a class=\"id\" href=\"#__le64\">__le64</a> <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#aligned\">aligned</a>(8)))", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"typedef unsigned <a class=\"id\" href=\"#__bitwise__\">__bitwise__</a> <a class=\"id\" href=\"#gfp_t\">gfp_t</a>;", 
"typedef unsigned <a class=\"id\" href=\"#__bitwise__\">__bitwise__</a> <a class=\"id\" href=\"#fmode_t\">fmode_t</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PHYS_ADDR_T_64BIT\">CONFIG_PHYS_ADDR_T_64BIT</a>", 
"typedef <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a>;", 
"#else", 
"typedef <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"typedef <a class=\"id\" href=\"#phys_addr_t\">phys_addr_t</a> <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>;", 
"", 
"typedef struct {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#counter\">counter</a>;", 
"} <a class=\"id\" href=\"#atomic_t\">atomic_t</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_64BIT\">CONFIG_64BIT</a>", 
"typedef struct {", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#counter\">counter</a>;", 
"} <a class=\"id\" href=\"#atomic64_t\">atomic64_t</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#list_head\">list_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#next\">next</a>, *<a class=\"id\" href=\"#prev\">prev</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#first\">first</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#next\">next</a>, **<a class=\"id\" href=\"#pprev\">pprev</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ustat\">ustat</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_daddr_t\">__kernel_daddr_t</a><span class=\"ts\"/><a class=\"id\" href=\"#f_tfree\">f_tfree</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_ino_t\">__kernel_ino_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f_tinode\">f_tinode</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f_fname\">f_fname</a>[6];", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f_fpack\">f_fpack</a>[6];", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/*  __ASSEMBLY__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_TYPES_H */</span>", 
];
xr_frag_insert('l/19/6e2d332cc4838d1c32814ede3436febb2f8836.xr', __xr_tmp);
