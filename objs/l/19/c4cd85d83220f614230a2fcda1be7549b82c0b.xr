var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ACPI related functions for PCI Express Hot Plug driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 Kenji Kaneshige</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 Fujitsu Limited.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or (at</span>", 
"<span class=\"comment\"> * your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or</span>", 
"<span class=\"comment\"> * NON INFRINGEMENT.  See the GNU General Public License for more</span>", 
"<span class=\"comment\"> * details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci_hotplug\">pci_hotplug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"pciehp.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIEHP_DETECT_PCIE\">PCIEHP_DETECT_PCIE</a><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIEHP_DETECT_ACPI\">PCIEHP_DETECT_ACPI</a><span class=\"ts\"/>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIEHP_DETECT_AUTO\">PCIEHP_DETECT_AUTO</a><span class=\"ts\"/>(2)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCIEHP_DETECT_DEFAULT\">PCIEHP_DETECT_DEFAULT</a><span class=\"ts\"/><a class=\"id\" href=\"#PCIEHP_DETECT_AUTO\">PCIEHP_DETECT_AUTO</a>", 
"", 
"struct <a class=\"id\" href=\"#dummy_slot\">dummy_slot</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#slot_detection_mode\">slot_detection_mode</a>;", 
"static char *<a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>, <a class=\"id\" href=\"#charp\">charp</a>, 0444);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>,", 
"<span class=\"ts\"/> \"Slot detection mode: pcie, acpi, auto\\n\"", 
"<span class=\"ts\"/> \"  pcie          - Use PCIe based slot detection\\n\"", 
"<span class=\"ts\"/> \"  acpi          - Use ACPI for slot detection\\n\"", 
"<span class=\"ts\"/> \"  auto(default) - Auto select mode. Use acpi option if duplicate\\n\"", 
"<span class=\"ts\"/> \"                  slot ids are found. Otherwise, use pcie option\\n\");", 
"", 
"int <a class=\"id\" href=\"#pciehp_acpi_slot_detection_check\">pciehp_acpi_slot_detection_check</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#slot_detection_mode\">slot_detection_mode</a> != <a class=\"id\" href=\"#PCIEHP_DETECT_ACPI\">PCIEHP_DETECT_ACPI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_pci_detect_ejectable\">acpi_pci_detect_ejectable</a>(<a class=\"id\" href=\"#DEVICE_ACPI_HANDLE\">DEVICE_ACPI_HANDLE</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_detect_mode\">parse_detect_mode</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PCIEHP_DETECT_DEFAULT\">PCIEHP_DETECT_DEFAULT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>, \"pcie\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PCIEHP_DETECT_PCIE\">PCIEHP_DETECT_PCIE</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>, \"acpi\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PCIEHP_DETECT_ACPI\">PCIEHP_DETECT_ACPI</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>, \"auto\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PCIEHP_DETECT_AUTO\">PCIEHP_DETECT_AUTO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#warn\">warn</a>(\"bad specifier '%s' for pciehp_detect_mode. Use default\\n\",", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#pciehp_detect_mode\">pciehp_detect_mode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PCIEHP_DETECT_DEFAULT\">PCIEHP_DETECT_DEFAULT</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#dup_slot_id\">dup_slot_id</a>;", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#acpi_slot_detected\">acpi_slot_detected</a>;", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#dummy_slots\">dummy_slots</a> = <a class=\"id\" href=\"#LIST_HEAD_INIT\">LIST_HEAD_INIT</a>(<a class=\"id\" href=\"#dummy_slots\">dummy_slots</a>);", 
"", 
"<span class=\"comment\">/* Dummy driver for dumplicate name detection */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dummy_probe\">dummy_probe</a>(struct <a class=\"id\" href=\"#pcie_device\">pcie_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#slot_cap\">slot_cap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dummy_slot\">dummy_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_SLTCAP\">PCI_EXP_SLTCAP</a>, &amp;<a class=\"id\" href=\"#slot_cap\">slot_cap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#slot\">slot</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#slot\">slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#slot_cap\">slot_cap</a> >> 19;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#dummy_slots\">dummy_slots</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#number\">number</a> == <a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#number\">number</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dup_slot_id\">dup_slot_id</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#dummy_slots\">dummy_slots</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#DEVICE_ACPI_HANDLE\">DEVICE_ACPI_HANDLE</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_slot_detected\">acpi_slot_detected</a> && <a class=\"id\" href=\"#acpi_pci_detect_ejectable\">acpi_pci_detect_ejectable</a>(<a class=\"id\" href=\"#handle\">handle</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_slot_detected\">acpi_slot_detected</a> = 1;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;         <span class=\"comment\">/* dummy driver always returns error */</span>", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pcie_port_service_driver\">pcie_port_service_driver</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#dummy_driver\">dummy_driver</a> = {", 
"        .<a class=\"id\" href=\"#name\">name</a>           = \"pciehp_dummy\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#port_type\">port_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#PCIE_ANY_PORT\">PCIE_ANY_PORT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#service\">service</a><span class=\"ts\"/>= <a class=\"id\" href=\"#PCIE_PORT_SERVICE_HP\">PCIE_PORT_SERVICE_HP</a>,", 
"        .<a class=\"id\" href=\"#probe\">probe</a>          = <a class=\"id\" href=\"#dummy_probe\">dummy_probe</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#select_detection_mode\">select_detection_mode</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dummy_slot\">dummy_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_port_service_register\">pcie_port_service_register</a>(&amp;<a class=\"id\" href=\"#dummy_driver\">dummy_driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcie_port_service_unregister\">pcie_port_service_unregister</a>(&amp;<a class=\"id\" href=\"#dummy_driver\">dummy_driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#dummy_slots\">dummy_slots</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_slot_detected\">acpi_slot_detected</a> && <a class=\"id\" href=\"#dup_slot_id\">dup_slot_id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PCIEHP_DETECT_ACPI\">PCIEHP_DETECT_ACPI</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PCIEHP_DETECT_PCIE\">PCIEHP_DETECT_PCIE</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pciehp_acpi_slot_detection_init\">pciehp_acpi_slot_detection_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot_detection_mode\">slot_detection_mode</a> = <a class=\"id\" href=\"#parse_detect_mode\">parse_detect_mode</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#slot_detection_mode\">slot_detection_mode</a> != <a class=\"id\" href=\"#PCIEHP_DETECT_AUTO\">PCIEHP_DETECT_AUTO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot_detection_mode\">slot_detection_mode</a> = <a class=\"id\" href=\"#select_detection_mode\">select_detection_mode</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#slot_detection_mode\">slot_detection_mode</a> == <a class=\"id\" href=\"#PCIEHP_DETECT_ACPI\">PCIEHP_DETECT_ACPI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>(\"Using ACPI for slot detection.\\n\");", 
"}", 
];
xr_frag_insert('l/19/c4cd85d83220f614230a2fcda1be7549b82c0b.xr', __xr_tmp);
