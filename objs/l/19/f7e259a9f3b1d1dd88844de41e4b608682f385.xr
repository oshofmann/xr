var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Internet Control Message Protocol (ICMPv6)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Based on net/ipv4/icmp.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RFC 1885</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Changes:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>exception handling</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Andi Kleen<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>add rate limits. never reply to a icmp.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>add more length checks and other fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>yoshfuji<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>ensure to sent parameter problem for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>fragments.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI:<span class=\"ts\"/>added sysctl for icmp rate limit.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Randy Dunlap and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI Hideaki @USAGI:<span class=\"ts\"/>Per-interface statistics support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kazunori MIYAZAWA @USAGI:       change output process to use ip6_append_data</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmpv6\">icmpv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_checksum\">ip6_checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#raw\">raw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rawv6\">rawv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#transp_v6\">transp_v6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The ICMP socket(s). This is the most convenient way to flow control</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>our ICMP output as well as maintain a clean interface throughout</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>all layers. All Socketless IP sends will soon be gone.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>On SMP we have one ICMP socket per-cpu.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#icmpv6_sk\">icmpv6_sk</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a>[<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>()];", 
"}", 
"", 
"static int <a class=\"id\" href=\"#icmpv6_rcv\">icmpv6_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"static const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> <a class=\"id\" href=\"#icmpv6_protocol\">icmpv6_protocol</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#handler\">handler</a><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_rcv\">icmpv6_rcv</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>=<span class=\"ts\"/><a class=\"id\" href=\"#INET6_PROTO_NOPOLICY\">INET6_PROTO_NOPOLICY</a>|<a class=\"id\" href=\"#INET6_PROTO_FINAL\">INET6_PROTO_FINAL</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#icmpv6_xmit_lock\">icmpv6_xmit_lock</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#icmpv6_sk\">icmpv6_sk</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#spin_trylock\">spin_trylock</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lock\">sk_lock</a>.<a class=\"id\" href=\"#slock\">slock</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This can happen if the output path (f.e. SIT or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ip6ip6 tunnel) signals dst_link_failure() for an</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * outgoing ICMP6 packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> void <a class=\"id\" href=\"#icmpv6_xmit_unlock\">icmpv6_xmit_unlock</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lock\">sk_lock</a>.<a class=\"id\" href=\"#slock\">slock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Slightly more convenient version of icmpv6_send.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#icmpv6_param_prob\">icmpv6_param_prob</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ICMPV6_PARAMPROB\">ICMPV6_PARAMPROB</a>, <a class=\"id\" href=\"#code\">code</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Figure out, may we reply to this packet with icmp error.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We do not reply, if:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- it was icmp error message.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>- it is truncated, so that it is known, that protocol is ICMPV6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>  (i.e. in the middle of some exthdr)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>--ANK (980726)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#is_ineligible\">is_ineligible</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ptr\">ptr</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)(<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>) + 1) - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nexthdr\">nexthdr</a> == <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#_type\">_type</a>, *<a class=\"id\" href=\"#tp\">tp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>+<a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>, <a class=\"id\" href=\"#icmp6_type\">icmp6_type</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#_type\">_type</a>), &amp;<a class=\"id\" href=\"#_type\">_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a> == <a class=\"id\" href=\"#NULL\">NULL</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(*<a class=\"id\" href=\"#tp\">tp</a> &amp; <a class=\"id\" href=\"#ICMPV6_INFOMSG_MASK\">ICMPV6_INFOMSG_MASK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check the ICMP output rate limit</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#icmpv6_xrlim_allow\">icmpv6_xrlim_allow</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Informational messages are not limited. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &amp; <a class=\"id\" href=\"#ICMPV6_INFOMSG_MASK\">ICMPV6_INFOMSG_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do not limit pmtu discovery, it would break it. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Look up the output route.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX: perhaps the expire for routing entries cloned by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this lookup should be more aggressive (not longer than timeout).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#ip6_route_output\">ip6_route_output</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6_INC_STATS\">IP6_INC_STATS</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ip6_dst_idev\">ip6_dst_idev</a>(<a class=\"id\" href=\"#dst\">dst</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#IPSTATS_MIB_OUTNOROUTES\">IPSTATS_MIB_OUTNOROUTES</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a> && (<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a> = (struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *)<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#tmo\">tmo</a> = <a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#icmpv6_time\">icmpv6_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Give more bandwidth to wider prefixes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>.<a class=\"id\" href=\"#plen\">plen</a> &lt; 128)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmo\">tmo</a> >>= ((128 - <a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_dst\">rt6i_dst</a>.<a class=\"id\" href=\"#plen\">plen</a>)>>5);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#xrlim_allow\">xrlim_allow</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#tmo\">tmo</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>an inline helper for the \"simple\" if statement below</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>checks if parameter problem report is caused by an</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>unrecognized IPv6 option that has the Option Type</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>highest-order two bits set to 10</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#opt_unrec\">opt_unrec</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#_optval\">_optval</a>, *<a class=\"id\" href=\"#op\">op</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#op\">op</a> = <a class=\"id\" href=\"#skb_header_pointer\">skb_header_pointer</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#_optval\">_optval</a>), &amp;<a class=\"id\" href=\"#_optval\">_optval</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#op\">op</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return (*<a class=\"id\" href=\"#op\">op</a> &amp; 0xC0) == 0x80;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#icmpv6_push_pending_frames\">icmpv6_push_pending_frames</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>, struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#thdr\">thdr</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#icmp6h\">icmp6h</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>)) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmp6h\">icmp6h</a> = <a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#icmp6h\">icmp6h</a>, <a class=\"id\" href=\"#thdr\">thdr</a>, sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmp6h\">icmp6h</a>-><a class=\"id\" href=\"#icmp6_cksum\">icmp6_cksum</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_len\">skb_queue_len</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>) == 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#icmp6h\">icmp6h</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>), <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmp6h\">icmp6h</a>-><a class=\"id\" href=\"#icmp6_cksum\">icmp6_cksum</a> = <a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#proto\">proto</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#tmp_csum\">tmp_csum</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_walk\">skb_queue_walk</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_queue\">sk_write_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_csum\">tmp_csum</a> = <a class=\"id\" href=\"#csum_add\">csum_add</a>(<a class=\"id\" href=\"#tmp_csum\">tmp_csum</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_csum\">tmp_csum</a> = <a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#icmp6h\">icmp6h</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>), <a class=\"id\" href=\"#tmp_csum\">tmp_csum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmp6h\">icmp6h</a>-><a class=\"id\" href=\"#icmp6_cksum\">icmp6_cksum</a> = <a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#proto\">proto</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#tmp_csum\">tmp_csum</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_push_pending_frames\">ip6_push_pending_frames</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#icmpv6_msg\">icmpv6_msg</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a><span class=\"ts\"/>*<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint8_t\">uint8_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#icmpv6_getfrag\">icmpv6_getfrag</a>(void *<a class=\"id\" href=\"#from\">from</a>, char *<a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#odd\">odd</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmpv6_msg\">icmpv6_msg</a> *<a class=\"id\" href=\"#msg\">msg</a> = (struct <a class=\"id\" href=\"#icmpv6_msg\">icmpv6_msg</a> *) <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#org_skb\">org_skb</a> = <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__wsum\">__wsum</a> <a class=\"id\" href=\"#csum\">csum</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#skb_copy_and_csum_bits\">skb_copy_and_csum_bits</a>(<a class=\"id\" href=\"#org_skb\">org_skb</a>, <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = <a class=\"id\" href=\"#csum_block_add\">csum_block_add</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#csum\">csum</a>, <a class=\"id\" href=\"#odd\">odd</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#type\">type</a> &amp; <a class=\"id\" href=\"#ICMPV6_INFOMSG_MASK\">ICMPV6_INFOMSG_MASK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_ct_attach\">nf_ct_attach</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#org_skb\">org_skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"static void <a class=\"id\" href=\"#mip6_addr_swap\">mip6_addr_swap</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#iph\">iph</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_destopt_hao\">ipv6_destopt_hao</a> *<a class=\"id\" href=\"#hao\">hao</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#off\">off</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dsthao\">dsthao</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> = <a class=\"id\" href=\"#ipv6_find_tlv\">ipv6_find_tlv</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#opt\">opt</a>-><a class=\"id\" href=\"#dsthao\">dsthao</a>, <a class=\"id\" href=\"#IPV6_TLV_HAO\">IPV6_TLV_HAO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#off\">off</a> >= 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hao\">hao</a> = (struct <a class=\"id\" href=\"#ipv6_destopt_hao\">ipv6_destopt_hao</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) + <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#iph\">iph</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#hao\">hao</a>-><a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#mip6_addr_swap\">mip6_addr_swap</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Send an ICMP message in response to a packet in error</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst2\">dst2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> <a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl2\">fl2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmpv6_msg\">icmpv6_msg</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iif\">iif</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hlimit\">hlimit</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#hdr\">hdr</a> &lt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a> ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#network_header\">network_header</a> + sizeof(*<a class=\"id\" href=\"#hdr\">hdr</a>)) &gt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Make sure we respect the rules</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>i.e. RFC 1885 2.4(e)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Rule (e.1) is enforced by not using icmpv6_send</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>in any code that processes icmp errors.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_chk_addr\">ipv6_chk_addr</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Dest addr check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a> || <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> != <a class=\"id\" href=\"#PACKET_HOST\">PACKET_HOST</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ICMPV6_PARAMPROB\">ICMPV6_PARAMPROB</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#code\">code</a> == <a class=\"id\" href=\"#ICMPV6_UNK_OPTION\">ICMPV6_UNK_OPTION</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#opt_unrec\">opt_unrec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#info\">info</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Source addr check</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iif\">iif</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Must not send error if the source does not uniquely</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>identify a single node (RFC2463 Section 2.4).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>We check unspecified / multicast addresses here,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>and anycast addresses will be checked later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a>) || (<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"icmpv6_send: addr_any/mcast source\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Never answer to a ICMP packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_ineligible\">is_ineligible</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"icmpv6_send: no reply to icmp error\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mip6_addr_swap\">mip6_addr_swap</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>, 0, sizeof(<a class=\"id\" href=\"#fl\">fl</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, &amp;<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#saddr\">saddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_src\">fl6_src</a>, <a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#iif\">iif</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl_icmp_type\">fl_icmp_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl_icmp_code\">fl_icmp_code</a> = <a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_skb_classify_flow\">security_skb_classify_flow</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#icmpv6_xmit_lock\">icmpv6_xmit_lock</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#icmpv6_xrlim_allow\">icmpv6_xrlim_allow</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#type\">type</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>.<a class=\"id\" href=\"#icmp6_type\">icmp6_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>.<a class=\"id\" href=\"#icmp6_code\">icmp6_code</a> = <a class=\"id\" href=\"#code\">code</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>.<a class=\"id\" href=\"#icmp6_cksum\">icmp6_cksum</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>.<a class=\"id\" href=\"#icmp6_pointer\">icmp6_pointer</a> = <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#oif\">oif</a> && <a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#mcast_oif\">mcast_oif</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_dst_lookup\">ip6_dst_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We won't send icmp if the destination is known</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * anycast.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (((struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *)<a class=\"id\" href=\"#dst\">dst</a>)-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &amp; <a class=\"id\" href=\"#RTF_ANYCAST\">RTF_ANYCAST</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"icmpv6_send: acast source\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dst_release\">out_dst_release</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No need to clone since we're just using its address. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst2\">dst2</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a> != <a class=\"id\" href=\"#dst2\">dst2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#route_done\">route_done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EPERM\">EPERM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xfrm_decode_session_reverse\">xfrm_decode_session_reverse</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl2\">fl2</a>, <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#relookup_failed\">relookup_failed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip6_dst_lookup\">ip6_dst_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#dst2\">dst2</a>, &amp;<a class=\"id\" href=\"#fl2\">fl2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#relookup_failed\">relookup_failed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#dst2\">dst2</a>, &amp;<a class=\"id\" href=\"#fl2\">fl2</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#XFRM_LOOKUP_ICMP\">XFRM_LOOKUP_ICMP</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#dst2\">dst2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EPERM\">EPERM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dst_release\">out_dst_release</a>;", 
"<span class=\"ts\"/>default:", 
"<a class=\"id\" href=\"#relookup_failed\">relookup_failed</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dst\">dst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#route_done\">route_done</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#mcast_hops\">mcast_hops</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hlimit\">hlimit</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#ip6_dst_hoplimit\">ip6_dst_hoplimit</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned int, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#IPV6_MIN_MTU\">IPV6_MIN_MTU</a> - sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>) -sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"icmp: len problem\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dst_release\">out_dst_release</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_append_data\">ip6_append_data</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#icmpv6_getfrag\">icmpv6_getfrag</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#len\">len</a> + sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>), <a class=\"id\" href=\"#hlimit\">hlimit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, (struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>*)<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>, <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#dontfrag\">dontfrag</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS_BH\">ICMP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_OUTERRORS\">ICMP6_MIB_OUTERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_flush_pending_frames\">ip6_flush_pending_frames</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#icmpv6_push_pending_frames\">icmpv6_push_pending_frames</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, &amp;<a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>, <a class=\"id\" href=\"#len\">len</a> + sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>));", 
"", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<a class=\"id\" href=\"#out_dst_release\">out_dst_release</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_xmit_unlock\">icmpv6_xmit_unlock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#icmpv6_send\">icmpv6_send</a>);", 
"", 
"static void <a class=\"id\" href=\"#icmpv6_echo_reply\">icmpv6_echo_reply</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#icmph\">icmph</a> = <a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> <a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flowi\">flowi</a> <a class=\"id\" href=\"#fl\">fl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmpv6_msg\">icmpv6_msg</a> <a class=\"id\" href=\"#msg\">msg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hlimit\">hlimit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_unicast_destination\">ipv6_unicast_destination</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>, <a class=\"id\" href=\"#icmph\">icmph</a>, sizeof(<a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>.<a class=\"id\" href=\"#icmp6_type\">icmp6_type</a> = <a class=\"id\" href=\"#ICMPV6_ECHO_REPLY\">ICMPV6_ECHO_REPLY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>, 0, sizeof(<a class=\"id\" href=\"#fl\">fl</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#proto\">proto</a> = <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#saddr\">saddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_src\">fl6_src</a>, <a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl_icmp_type\">fl_icmp_type</a> = <a class=\"id\" href=\"#ICMPV6_ECHO_REPLY\">ICMPV6_ECHO_REPLY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_skb_classify_flow\">security_skb_classify_flow</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#icmpv6_xmit_lock\">icmpv6_xmit_lock</a>(<a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#oif\">oif</a> && <a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#oif\">oif</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#mcast_oif\">mcast_oif</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_dst_lookup\">ip6_dst_lookup</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#xfrm_lookup\">xfrm_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, <a class=\"id\" href=\"#sk\">sk</a>, 0)) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>.<a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#mcast_hops\">mcast_hops</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#hop_limit\">hop_limit</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hlimit\">hlimit</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlimit\">hlimit</a> = <a class=\"id\" href=\"#ip6_dst_hoplimit\">ip6_dst_hoplimit</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ICMPV6_ECHO_REPLY\">ICMPV6_ECHO_REPLY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ip6_append_data\">ip6_append_data</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#icmpv6_getfrag\">icmpv6_getfrag</a>, &amp;<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> + sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>), <a class=\"id\" href=\"#hlimit\">hlimit</a>, <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#tclass\">tclass</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a>*)<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#dontfrag\">dontfrag</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS_BH\">ICMP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_OUTERRORS\">ICMP6_MIB_OUTERRORS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_flush_pending_frames\">ip6_flush_pending_frames</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#icmpv6_push_pending_frames\">icmpv6_push_pending_frames</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#fl\">fl</a>, &amp;<a class=\"id\" href=\"#tmp_hdr\">tmp_hdr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> + sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>));", 
"", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#idev\">idev</a> != <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_xmit_unlock\">icmpv6_xmit_unlock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#icmpv6_notify\">icmpv6_notify</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet6_protocol\">inet6_protocol</a> *<a class=\"id\" href=\"#ipprot\">ipprot</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#inner_offset\">inner_offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nexthdr\">nexthdr</a> = ((struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>)-><a class=\"id\" href=\"#nexthdr\">nexthdr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_ext_hdr\">ipv6_ext_hdr</a>(<a class=\"id\" href=\"#nexthdr\">nexthdr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* now skip over extension headers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inner_offset\">inner_offset</a> = <a class=\"id\" href=\"#ipv6_skip_exthdr\">ipv6_skip_exthdr</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>), &amp;<a class=\"id\" href=\"#nexthdr\">nexthdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inner_offset\">inner_offset</a>&lt;0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inner_offset\">inner_offset</a> = sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Checkin header including 8 bytes of inner protocol header. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#inner_offset\">inner_offset</a>+8))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* BUGGG_FUTURE: we should try to parse exthdrs in this packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Without this we will not able f.e. to make source routed</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   pmtu discovery.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Corresponding argument (opt) to notifiers is already added.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   --ANK (980726)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipprot\">ipprot</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet6_protos\">inet6_protos</a>[<a class=\"id\" href=\"#hash\">hash</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipprot\">ipprot</a> && <a class=\"id\" href=\"#ipprot\">ipprot</a>-><a class=\"id\" href=\"#err_handler\">err_handler</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipprot\">ipprot</a>-><a class=\"id\" href=\"#err_handler\">err_handler</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#code\">code</a>, <a class=\"id\" href=\"#inner_offset\">inner_offset</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw6_icmp_error\">raw6_icmp_error</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#code\">code</a>, <a class=\"id\" href=\"#inner_offset\">inner_offset</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Handle icmp messages</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#icmpv6_rcv\">icmpv6_rcv</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, *<a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#orig_hdr\">orig_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#hdr\">hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm6_policy_check\">xfrm6_policy_check</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sec_path\">sec_path</a> *<a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#skb_sec_path\">skb_sec_path</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nh\">nh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#sp\">sp</a> && <a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#xvec\">xvec</a>[<a class=\"id\" href=\"#sp\">sp</a>-><a class=\"id\" href=\"#len\">len</a> - 1]-><a class=\"id\" href=\"#props\">props</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#XFRM_STATE_ICMP\">XFRM_STATE_ICMP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_no_count\">drop_no_count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#hdr\">hdr</a>) + sizeof(*<a class=\"id\" href=\"#orig_hdr\">orig_hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_no_count\">drop_no_count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nh\">nh</a> = <a class=\"id\" href=\"#skb_network_offset\">skb_network_offset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_network_header\">skb_set_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#hdr\">hdr</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm6_policy_check_reverse\">xfrm6_policy_check_reverse</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop_no_count\">drop_no_count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_network_header\">skb_set_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nh\">nh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS_BH\">ICMP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_INMSGS\">ICMP6_MIB_INMSGS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Perform checksum. */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CHECKSUM_COMPLETE\">CHECKSUM_COMPLETE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CHECKSUM_NONE\">CHECKSUM_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = ~<a class=\"id\" href=\"#csum_unfold\">csum_unfold</a>(<a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(<a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>, 0));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__skb_checksum_complete\">__skb_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ICMPv6 checksum failed [%pI6 > %pI6]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_pull\">pskb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(*<a class=\"id\" href=\"#hdr\">hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#icmp6_type\">icmp6_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ICMP6MSGIN_INC_STATS_BH\">ICMP6MSGIN_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_ECHO_REQUEST\">ICMPV6_ECHO_REQUEST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_echo_reply\">icmpv6_echo_reply</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_ECHO_REPLY\">ICMPV6_ECHO_REPLY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we couldn't care less */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* BUGGG_FUTURE: if packet contains rthdr, we cannot update</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   standard destination cache. Seems, only \"advanced\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   destination cache will allow to solve this problem</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   --ANK (980726)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_it\">discard_it</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hdr\">hdr</a> = <a class=\"id\" href=\"#icmp6_hdr\">icmp6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_hdr\">orig_hdr</a> = (struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *) (<a class=\"id\" href=\"#hdr\">hdr</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt6_pmtu_discovery\">rt6_pmtu_discovery</a>(&amp;<a class=\"id\" href=\"#orig_hdr\">orig_hdr</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, &amp;<a class=\"id\" href=\"#orig_hdr\">orig_hdr</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#icmp6_mtu\">icmp6_mtu</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Drop through to notify</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_DEST_UNREACH\">ICMPV6_DEST_UNREACH</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_TIME_EXCEED\">ICMPV6_TIME_EXCEED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_PARAMPROB\">ICMPV6_PARAMPROB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_notify\">icmpv6_notify</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#icmp6_code\">icmp6_code</a>, <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#icmp6_mtu\">icmp6_mtu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_ROUTER_SOLICITATION\">NDISC_ROUTER_SOLICITATION</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_ROUTER_ADVERTISEMENT\">NDISC_ROUTER_ADVERTISEMENT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_NEIGHBOUR_SOLICITATION\">NDISC_NEIGHBOUR_SOLICITATION</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_NEIGHBOUR_ADVERTISEMENT\">NDISC_NEIGHBOUR_ADVERTISEMENT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NDISC_REDIRECT\">NDISC_REDIRECT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ndisc_rcv\">ndisc_rcv</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MGM_QUERY\">ICMPV6_MGM_QUERY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_event_query\">igmp6_event_query</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MGM_REPORT\">ICMPV6_MGM_REPORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#igmp6_event_report\">igmp6_event_report</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MGM_REDUCTION\">ICMPV6_MGM_REDUCTION</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_NI_QUERY\">ICMPV6_NI_QUERY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_NI_REPLY\">ICMPV6_NI_REPLY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MLD2_REPORT\">ICMPV6_MLD2_REPORT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_DHAAD_REQUEST\">ICMPV6_DHAAD_REQUEST</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_DHAAD_REPLY\">ICMPV6_DHAAD_REPLY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MOBILE_PREFIX_SOL\">ICMPV6_MOBILE_PREFIX_SOL</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_MOBILE_PREFIX_ADV\">ICMPV6_MOBILE_PREFIX_ADV</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"icmpv6: msg of unknown type\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* informational */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &amp; <a class=\"id\" href=\"#ICMPV6_INFOMSG_MASK\">ICMPV6_INFOMSG_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * error of unknown type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * must pass to upper level</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmpv6_notify\">icmpv6_notify</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#icmp6_code\">icmp6_code</a>, <a class=\"id\" href=\"#hdr\">hdr</a>-><a class=\"id\" href=\"#icmp6_mtu\">icmp6_mtu</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#discard_it\">discard_it</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ICMP6_INC_STATS_BH\">ICMP6_INC_STATS_BH</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#ICMP6_MIB_INERRORS\">ICMP6_MIB_INERRORS</a>);", 
"<a class=\"id\" href=\"#drop_no_count\">drop_no_count</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#icmpv6_flow_init\">icmpv6_flow_init</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#fl\">fl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#oif\">oif</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#fl\">fl</a>, 0, sizeof(*<a class=\"id\" href=\"#fl\">fl</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_src\">fl6_src</a>, <a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl6_dst\">fl6_dst</a>, <a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#proto\">proto</a><span class=\"ts\"/> <span class=\"ts\"/>= <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl_icmp_type\">fl_icmp_type</a><span class=\"ts\"/>= <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#fl_icmp_code\">fl_icmp_code</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a>-><a class=\"id\" href=\"#oif\">oif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#oif\">oif</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_sk_classify_flow\">security_sk_classify_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special lock-class for __icmpv6_sk:</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#lock_class_key\">lock_class_key</a> <a class=\"id\" href=\"#icmpv6_socket_sk_dst_lock_key\">icmpv6_socket_sk_dst_lock_key</a>;", 
"", 
"static int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#icmpv6_sk_init\">icmpv6_sk_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a> * sizeof(struct <a class=\"id\" href=\"#sock\">sock</a> *), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet_ctl_sock_create\">inet_ctl_sock_create</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#PF_INET6\">PF_INET6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a>, <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>, <a class=\"id\" href=\"#net\">net</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Failed to initialize the ICMP6 control socket \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"(err %d).\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Split off their lock-class, because sk-&gt;sk_dst_lock</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * gets used from softirqs, which is safe for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * __icmpv6_sk (because those never get directly used</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * via userspace syscalls), but unsafe for normal sockets.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lockdep_set_class\">lockdep_set_class</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_dst_lock\">sk_dst_lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#icmpv6_socket_sk_dst_lock_key\">icmpv6_socket_sk_dst_lock_key</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enough space for 2 64K ICMP packets, including</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sk_buff struct overhead.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(2 * ((64 * 1024) + sizeof(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>)));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#i\">i</a>; <a class=\"id\" href=\"#j\">j</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_ctl_sock_destroy\">inet_ctl_sock_destroy</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a>[<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#icmpv6_sk_exit\">icmpv6_sk_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_ctl_sock_destroy\">inet_ctl_sock_destroy</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#icmp_sk\">icmp_sk</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pernet_operations\">pernet_operations</a> <a class=\"id\" href=\"#icmpv6_sk_ops\">icmpv6_sk_ops</a> = {", 
"       .<a class=\"id\" href=\"#init\">init</a> = <a class=\"id\" href=\"#icmpv6_sk_init\">icmpv6_sk_init</a>,", 
"       .<a class=\"id\" href=\"#exit\">exit</a> = <a class=\"id\" href=\"#icmpv6_sk_exit\">icmpv6_sk_exit</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#icmpv6_init\">icmpv6_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#register_pernet_subsys\">register_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#icmpv6_sk_ops\">icmpv6_sk_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet6_add_protocol\">inet6_add_protocol</a>(&amp;<a class=\"id\" href=\"#icmpv6_protocol\">icmpv6_protocol</a>, <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Failed to register ICMP6 protocol\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#icmpv6_sk_ops\">icmpv6_sk_ops</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#icmpv6_cleanup\">icmpv6_cleanup</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_pernet_subsys\">unregister_pernet_subsys</a>(&amp;<a class=\"id\" href=\"#icmpv6_sk_ops\">icmpv6_sk_ops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_del_protocol\">inet6_del_protocol</a>(&amp;<a class=\"id\" href=\"#icmpv6_protocol\">icmpv6_protocol</a>, <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>);", 
"}", 
"", 
"", 
"static const struct <a class=\"id\" href=\"#icmp6_err\">icmp6_err</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fatal\">fatal</a>;", 
"} <a class=\"id\" href=\"#tab_unreach\">tab_unreach</a>[] = {", 
"<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"comment\">/* NOROUTE */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#err\">err</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ENETUNREACH\">ENETUNREACH</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fatal\">fatal</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"comment\">/* ADM_PROHIBITED */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#err\">err</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EACCES\">EACCES</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fatal\">fatal</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"comment\">/* Was NOT_NEIGHBOUR, now reserved */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#err\">err</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fatal\">fatal</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"comment\">/* ADDR_UNREACH<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#err\">err</a><span class=\"ts\"/>= <a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fatal\">fatal</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"comment\">/* PORT_UNREACH<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#err\">err</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ECONNREFUSED\">ECONNREFUSED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fatal\">fatal</a><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"int <a class=\"id\" href=\"#icmpv6_err_convert\">icmpv6_err_convert</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, int *<a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fatal\">fatal</a> = 0;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#EPROTO\">EPROTO</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_DEST_UNREACH\">ICMPV6_DEST_UNREACH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fatal\">fatal</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#code\">code</a> <= <a class=\"id\" href=\"#ICMPV6_PORT_UNREACH\">ICMPV6_PORT_UNREACH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a>  = <a class=\"id\" href=\"#tab_unreach\">tab_unreach</a>[<a class=\"id\" href=\"#code\">code</a>].<a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fatal\">fatal</a> = <a class=\"id\" href=\"#tab_unreach\">tab_unreach</a>[<a class=\"id\" href=\"#code\">code</a>].<a class=\"id\" href=\"#fatal\">fatal</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#EMSGSIZE\">EMSGSIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_PARAMPROB\">ICMPV6_PARAMPROB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#EPROTO\">EPROTO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fatal\">fatal</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ICMPV6_TIME_EXCEED\">ICMPV6_TIME_EXCEED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fatal\">fatal</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#icmpv6_err_convert\">icmpv6_err_convert</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"<a class=\"id\" href=\"#ctl_table\">ctl_table</a> <a class=\"id\" href=\"#ipv6_icmp_table_template\">ipv6_icmp_table_template</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#procname\">procname</a><span class=\"ts\"/>= \"ratelimit\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#data\">data</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#init_net\">init_net</a>.<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#icmpv6_time\">icmpv6_time</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#maxlen\">maxlen</a><span class=\"ts\"/><span class=\"ts\"/>= sizeof(int),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mode\">mode</a><span class=\"ts\"/><span class=\"ts\"/>= 0644,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#proc_handler\">proc_handler</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_dointvec_ms_jiffies\">proc_dointvec_ms_jiffies</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ },", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> * <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#ipv6_icmp_sysctl_init\">ipv6_icmp_sysctl_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#kmemdup\">kmemdup</a>(<a class=\"id\" href=\"#ipv6_icmp_table_template\">ipv6_icmp_table_template</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#ipv6_icmp_table_template\">ipv6_icmp_table_template</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>[0].<a class=\"id\" href=\"#data\">data</a> = &amp;<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#sysctl\">sysctl</a>.<a class=\"id\" href=\"#icmpv6_time\">icmpv6_time</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#table\">table</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
];
xr_frag_insert('l/19/f7e259a9f3b1d1dd88844de41e4b608682f385.xr', __xr_tmp);
