var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  mm/mprotect.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  (C) Copyright 1994 Linus Torvalds</span>", 
"<span class=\"comment\"> *  (C) Copyright 2002 Christoph Hellwig</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Address space accounting code<span class=\"ts\"/>&lt;alan@lxorguk.ukuu.org.uk&gt;</span>", 
"<span class=\"comment\"> *  (C) Copyright 2002 Red Hat Inc, All Rights Reserved</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hugetlb\">hugetlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#shm\">shm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempolicy\">mempolicy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#personality\">personality</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swapops\">swapops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmu_notifier\">mmu_notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#migrate\">migrate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#perf_event\">perf_event</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cacheflush\">cacheflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlbflush\">tlbflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#pgprot_modify\">pgprot_modify</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#pgprot_modify\">pgprot_modify</a>(<a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#oldprot\">oldprot</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#newprot\">newprot</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#change_pte_range\">change_pte_range</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#oldpte\">oldpte</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#ptl\">ptl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_offset_map_lock\">pte_offset_map_lock</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ptl\">ptl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_enter_lazy_mmu_mode\">arch_enter_lazy_mmu_mode</a>();", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldpte\">oldpte</a> = *<a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_present\">pte_present</a>(<a class=\"id\" href=\"#oldpte\">oldpte</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#ptent\">ptent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptent\">ptent</a> = <a class=\"id\" href=\"#ptep_modify_prot_start\">ptep_modify_prot_start</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptent\">ptent</a> = <a class=\"id\" href=\"#pte_modify\">pte_modify</a>(<a class=\"id\" href=\"#ptent\">ptent</a>, <a class=\"id\" href=\"#newprot\">newprot</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Avoid taking write faults for pages we know to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * dirty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a> && <a class=\"id\" href=\"#pte_dirty\">pte_dirty</a>(<a class=\"id\" href=\"#ptent\">ptent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptent\">ptent</a> = <a class=\"id\" href=\"#pte_mkwrite\">pte_mkwrite</a>(<a class=\"id\" href=\"#ptent\">ptent</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptep_modify_prot_commit\">ptep_modify_prot_commit</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#ptent\">ptent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#PAGE_MIGRATION\">PAGE_MIGRATION</a> && !<a class=\"id\" href=\"#pte_file\">pte_file</a>(<a class=\"id\" href=\"#oldpte\">oldpte</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_t\">swp_entry_t</a> <a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#pte_to_swp_entry\">pte_to_swp_entry</a>(<a class=\"id\" href=\"#oldpte\">oldpte</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_write_migration_entry\">is_write_migration_entry</a>(<a class=\"id\" href=\"#entry\">entry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * A protection check is difficult so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * just be safe and disable write</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#make_migration_entry_read\">make_migration_entry_read</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte_at\">set_pte_at</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pte\">pte</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swp_entry_to_pte\">swp_entry_to_pte</a>(<a class=\"id\" href=\"#entry\">entry</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pte\">pte</a>++, <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#arch_leave_lazy_mmu_mode\">arch_leave_lazy_mmu_mode</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_unmap_unlock\">pte_unmap_unlock</a>(<a class=\"id\" href=\"#pte\">pte</a> - 1, <a class=\"id\" href=\"#ptl\">ptl</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#change_pmd_range\">change_pmd_range</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pmd_addr_end\">pmd_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_none_or_clear_bad\">pmd_none_or_clear_bad</a>(<a class=\"id\" href=\"#pmd\">pmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_pte_range\">change_pte_range</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#newprot\">newprot</a>, <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pmd\">pmd</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#change_pud_range\">change_pud_range</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pud_addr_end\">pud_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none_or_clear_bad\">pud_none_or_clear_bad</a>(<a class=\"id\" href=\"#pud\">pud</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_pmd_range\">change_pmd_range</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#newprot\">newprot</a>, <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pud\">pud</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#change_protection\">change_protection</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#newprot\">newprot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset\">pgd_offset</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_cache_range\">flush_cache_range</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pgd_addr_end\">pgd_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_none_or_clear_bad\">pgd_none_or_clear_bad</a>(<a class=\"id\" href=\"#pgd\">pgd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_pud_range\">change_pud_range</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#newprot\">newprot</a>, <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#pgd\">pgd</a>++, <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#addr\">addr</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_tlb_range\">flush_tlb_range</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"}", 
"", 
"int", 
"<a class=\"id\" href=\"#mprotect_fixup\">mprotect_fixup</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> **<a class=\"id\" href=\"#pprev\">pprev</a>,", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>, unsigned long <a class=\"id\" href=\"#newflags\">newflags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#oldflags\">oldflags</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#nrpages\">nrpages</a> = (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#charged\">charged</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#pgoff\">pgoff</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newflags\">newflags</a> == <a class=\"id\" href=\"#oldflags\">oldflags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pprev\">pprev</a> = <a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we make a private mapping writable we increase our commit;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but (without finer accounting) cannot reduce our commit if we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make it unwritable again. hugetlb mapping were accounted for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * even if read-only so there is no need to account for them here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newflags\">newflags</a> &amp; <a class=\"id\" href=\"#VM_WRITE\">VM_WRITE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#oldflags\">oldflags</a> &amp; (<a class=\"id\" href=\"#VM_ACCOUNT\">VM_ACCOUNT</a>|<a class=\"id\" href=\"#VM_WRITE\">VM_WRITE</a>|<a class=\"id\" href=\"#VM_HUGETLB\">VM_HUGETLB</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_SHARED\">VM_SHARED</a>|<a class=\"id\" href=\"#VM_NORESERVE\">VM_NORESERVE</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#charged\">charged</a> = <a class=\"id\" href=\"#nrpages\">nrpages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#security_vm_enough_memory\">security_vm_enough_memory</a>(<a class=\"id\" href=\"#charged\">charged</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newflags\">newflags</a> |= <a class=\"id\" href=\"#VM_ACCOUNT\">VM_ACCOUNT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First try to merge with previous and/or next vma.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff\">pgoff</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_pgoff\">vm_pgoff</a> + ((<a class=\"id\" href=\"#start\">start</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pprev\">pprev</a> = <a class=\"id\" href=\"#vma_merge\">vma_merge</a>(<a class=\"id\" href=\"#mm\">mm</a>, *<a class=\"id\" href=\"#pprev\">pprev</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#newflags\">newflags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#anon_vma\">anon_vma</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>, <a class=\"id\" href=\"#pgoff\">pgoff</a>, <a class=\"id\" href=\"#vma_policy\">vma_policy</a>(<a class=\"id\" href=\"#vma\">vma</a>));", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pprev\">pprev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = *<a class=\"id\" href=\"#pprev\">pprev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#success\">success</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pprev\">pprev</a> = <a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> != <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#split_vma\">split_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#start\">start</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> != <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#split_vma\">split_vma</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#end\">end</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#success\">success</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * vm_flags and vm_page_prot are protected by the mmap_sem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * held in write mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> = <a class=\"id\" href=\"#newflags\">newflags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_page_prot\">vm_page_prot</a> = <a class=\"id\" href=\"#pgprot_modify\">pgprot_modify</a>(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_page_prot\">vm_page_prot</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#vm_get_page_prot\">vm_get_page_prot</a>(<a class=\"id\" href=\"#newflags\">newflags</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma_wants_writenotify\">vma_wants_writenotify</a>(<a class=\"id\" href=\"#vma\">vma</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_page_prot\">vm_page_prot</a> = <a class=\"id\" href=\"#vm_get_page_prot\">vm_get_page_prot</a>(<a class=\"id\" href=\"#newflags\">newflags</a> &amp; ~<a class=\"id\" href=\"#VM_SHARED\">VM_SHARED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmu_notifier_invalidate_range_start\">mmu_notifier_invalidate_range_start</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_vm_hugetlb_page\">is_vm_hugetlb_page</a>(<a class=\"id\" href=\"#vma\">vma</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hugetlb_change_protection\">hugetlb_change_protection</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_page_prot\">vm_page_prot</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#change_protection\">change_protection</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_page_prot\">vm_page_prot</a>, <a class=\"id\" href=\"#dirty_accountable\">dirty_accountable</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmu_notifier_invalidate_range_end\">mmu_notifier_invalidate_range_end</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vm_stat_account\">vm_stat_account</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#oldflags\">oldflags</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>, -<a class=\"id\" href=\"#nrpages\">nrpages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vm_stat_account\">vm_stat_account</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#newflags\">newflags</a>, <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>, <a class=\"id\" href=\"#nrpages\">nrpages</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vm_unacct_memory\">vm_unacct_memory</a>(<a class=\"id\" href=\"#charged\">charged</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#mprotect\">mprotect</a>, unsigned long, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long, <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vm_flags\">vm_flags</a>, <a class=\"id\" href=\"#nstart\">nstart</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#reqprot\">reqprot</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, *<a class=\"id\" href=\"#prev\">prev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>const int <a class=\"id\" href=\"#grows\">grows</a> = <a class=\"id\" href=\"#prot\">prot</a> &amp; (<a class=\"id\" href=\"#PROT_GROWSDOWN\">PROT_GROWSDOWN</a>|<a class=\"id\" href=\"#PROT_GROWSUP\">PROT_GROWSUP</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a> &= ~(<a class=\"id\" href=\"#PROT_GROWSDOWN\">PROT_GROWSDOWN</a>|<a class=\"id\" href=\"#PROT_GROWSUP\">PROT_GROWSUP</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#grows\">grows</a> == (<a class=\"id\" href=\"#PROT_GROWSDOWN\">PROT_GROWSDOWN</a>|<a class=\"id\" href=\"#PROT_GROWSUP\">PROT_GROWSUP</a>)) <span class=\"comment\">/* can't be both */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> <= <a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arch_validate_prot\">arch_validate_prot</a>(<a class=\"id\" href=\"#prot\">prot</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reqprot\">reqprot</a> = <a class=\"id\" href=\"#prot\">prot</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Does the application expect PROT_READ to imply PROT_EXEC:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#prot\">prot</a> &amp; <a class=\"id\" href=\"#PROT_READ\">PROT_READ</a>) && (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#personality\">personality</a> &amp; <a class=\"id\" href=\"#READ_IMPLIES_EXEC\">READ_IMPLIES_EXEC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a> |= <a class=\"id\" href=\"#PROT_EXEC\">PROT_EXEC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vm_flags\">vm_flags</a> = <a class=\"id\" href=\"#calc_vm_prot_bits\">calc_vm_prot_bits</a>(<a class=\"id\" href=\"#prot\">prot</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#find_vma_prev\">find_vma_prev</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#start\">start</a>, &amp;<a class=\"id\" href=\"#prev\">prev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#grows\">grows</a> &amp; <a class=\"id\" href=\"#PROT_GROWSDOWN\">PROT_GROWSDOWN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_GROWSDOWN\">VM_GROWSDOWN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> &gt; <a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#grows\">grows</a> &amp; <a class=\"id\" href=\"#PROT_GROWSUP\">PROT_GROWSUP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_GROWSUP\">VM_GROWSUP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> &gt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#nstart\">nstart</a> = <a class=\"id\" href=\"#start\">start</a> ; ; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#newflags\">newflags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Here we know that  vma-&gt;vm_start &lt;= nstart &lt; vma-&gt;vm_end. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newflags\">newflags</a> = <a class=\"id\" href=\"#vm_flags\">vm_flags</a> | (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; ~(<a class=\"id\" href=\"#VM_READ\">VM_READ</a> | <a class=\"id\" href=\"#VM_WRITE\">VM_WRITE</a> | <a class=\"id\" href=\"#VM_EXEC\">VM_EXEC</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* newflags &gt;&gt; 4 shift VM_MAY% in place of VM_% */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#newflags\">newflags</a> &amp; ~(<a class=\"id\" href=\"#newflags\">newflags</a> >> 4)) &amp; (<a class=\"id\" href=\"#VM_READ\">VM_READ</a> | <a class=\"id\" href=\"#VM_WRITE\">VM_WRITE</a> | <a class=\"id\" href=\"#VM_EXEC\">VM_EXEC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_file_mprotect\">security_file_mprotect</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#reqprot\">reqprot</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> &gt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mprotect_fixup\">mprotect_fixup</a>(<a class=\"id\" href=\"#vma\">vma</a>, &amp;<a class=\"id\" href=\"#prev\">prev</a>, <a class=\"id\" href=\"#nstart\">nstart</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#newflags\">newflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perf_event_mmap\">perf_event_mmap</a>(<a class=\"id\" href=\"#vma\">vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nstart\">nstart</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nstart\">nstart</a> &lt; <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nstart\">nstart</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nstart\">nstart</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a> || <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> != <a class=\"id\" href=\"#nstart\">nstart</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
];
xr_frag_insert('l/1a/3ba562018da118f0c554119b39a6375db50046.xr', __xr_tmp);
