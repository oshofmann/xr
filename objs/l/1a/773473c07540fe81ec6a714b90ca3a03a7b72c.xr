var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>IPv4 FIB: lookup engine and maintenance routines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Alexey Kuznetsov, &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netlink\">netlink</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip_fib\">ip_fib</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"fib_lookup.h\"", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#fn_hash_kmem\">fn_hash_kmem</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#fn_alias_kmem\">fn_alias_kmem</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"struct <a class=\"id\" href=\"#fib_node\">fib_node</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a><span class=\"ts\"/><a class=\"id\" href=\"#fn_hash\">fn_hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#fn_alias\">fn_alias</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn_key\">fn_key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a>        <a class=\"id\" href=\"#fn_embedded_alias\">fn_embedded_alias</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#fz_next\">fz_next</a>;<span class=\"ts\"/><span class=\"comment\">/* Next not empty zone<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#fz_hash\">fz_hash</a>;<span class=\"ts\"/><span class=\"comment\">/* Hash table pointer<span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz_nent\">fz_nent</a>;<span class=\"ts\"/><span class=\"comment\">/* Number of entries<span class=\"ts\"/>*/</span>", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a>;<span class=\"ts\"/><span class=\"comment\">/* Hash divisor<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz_hashmask\">fz_hashmask</a>;<span class=\"ts\"/><span class=\"comment\">/* (fz_divisor - 1)<span class=\"ts\"/>*/</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FZ_HASHMASK\">FZ_HASHMASK</a>(<a class=\"id\" href=\"#fz\">fz</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#fz\">fz</a>)-><a class=\"id\" href=\"#fz_hashmask\">fz_hashmask</a>)", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz_order\">fz_order</a>;<span class=\"ts\"/><span class=\"comment\">/* Zone order<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz_mask\">fz_mask</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FZ_MASK\">FZ_MASK</a>(<a class=\"id\" href=\"#fz\">fz</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#fz\">fz</a>)-><a class=\"id\" href=\"#fz_mask\">fz_mask</a>)", 
"};", 
"", 
"<span class=\"comment\">/* NOTE. On fast computers evaluation of fz_hashmask and fz_mask</span>", 
"<span class=\"comment\"> * can be cheaper than memory lookup, so that FZ_* macros are used.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a><span class=\"ts\"/>*<a class=\"id\" href=\"#fn_zones\">fn_zones</a>[33];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a><span class=\"ts\"/>*<a class=\"id\" href=\"#fn_zone_list\">fn_zone_list</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fn_hash\">fn_hash</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#key\">key</a>, struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#key\">key</a>)>>(32 - <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_order\">fz_order</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> ^= (<a class=\"id\" href=\"#h\">h</a>>>20);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> ^= (<a class=\"id\" href=\"#h\">h</a>>>10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> ^= (<a class=\"id\" href=\"#h\">h</a>>>5);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> &= <a class=\"id\" href=\"#FZ_HASHMASK\">FZ_HASHMASK</a>(<a class=\"id\" href=\"#fz\">fz</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#h\">h</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#fz_key\">fz_key</a>(<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#dst\">dst</a>, struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a> &amp; <a class=\"id\" href=\"#FZ_MASK\">FZ_MASK</a>(<a class=\"id\" href=\"#fz\">fz</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"static unsigned int <a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FZ_MAX_DIVISOR\">FZ_MAX_DIVISOR</a> ((<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a><<<a class=\"id\" href=\"#MAX_ORDER\">MAX_ORDER</a>) / sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a>))", 
"", 
"static struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#fz_hash_alloc\">fz_hash_alloc</a>(int <a class=\"id\" href=\"#divisor\">divisor</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#divisor\">divisor</a> * sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* The fib hash lock must be held when this is called. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fn_rebuild_zone\">fn_rebuild_zone</a>(struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#old_ht\">old_ht</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#old_divisor\">old_divisor</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#old_divisor\">old_divisor</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#old_ht\">old_ht</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#new_head\">new_head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_hash\">fn_hash</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_head\">new_head</a> = &amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[<a class=\"id\" href=\"#fn_hash\">fn_hash</a>(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_key\">fn_key</a>, <a class=\"id\" href=\"#fz\">fz</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_hash\">fn_hash</a>, <a class=\"id\" href=\"#new_head\">new_head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fz_hash_free\">fz_hash_free</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#hash\">hash</a>, int <a class=\"id\" href=\"#divisor\">divisor</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#divisor\">divisor</a> * sizeof(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_pages\">free_pages</a>((unsigned long)<a class=\"id\" href=\"#hash\">hash</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fn_rehash_zone\">fn_rehash_zone</a>(struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#ht\">ht</a>, *<a class=\"id\" href=\"#old_ht\">old_ht</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#old_divisor\">old_divisor</a>, <a class=\"id\" href=\"#new_divisor\">new_divisor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#new_hashmask\">new_hashmask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_divisor\">old_divisor</a> = <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#old_divisor\">old_divisor</a>) {", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_divisor\">new_divisor</a> = 256;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 256:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_divisor\">new_divisor</a> = 1024;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#old_divisor\">old_divisor</a> << 1) &gt; <a class=\"id\" href=\"#FZ_MAX_DIVISOR\">FZ_MAX_DIVISOR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"route.c: bad divisor %d!\\n\", <a class=\"id\" href=\"#old_divisor\">old_divisor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_divisor\">new_divisor</a> = (<a class=\"id\" href=\"#old_divisor\">old_divisor</a> << 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_hashmask\">new_hashmask</a> = (<a class=\"id\" href=\"#new_divisor\">new_divisor</a> - 1);", 
"", 
"#if <a class=\"id\" href=\"#RT_CACHE_DEBUG\">RT_CACHE_DEBUG</a> >= 2", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"fn_rehash_zone: hash for zone %d grows from %d\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_order\">fz_order</a>, <a class=\"id\" href=\"#old_divisor\">old_divisor</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ht\">ht</a> = <a class=\"id\" href=\"#fz_hash_alloc\">fz_hash_alloc</a>(<a class=\"id\" href=\"#new_divisor\">new_divisor</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ht\">ht</a>)<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_ht\">old_ht</a> = <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a> = <a class=\"id\" href=\"#ht\">ht</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hashmask\">fz_hashmask</a> = <a class=\"id\" href=\"#new_hashmask\">new_hashmask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a> = <a class=\"id\" href=\"#new_divisor\">new_divisor</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn_rebuild_zone\">fn_rebuild_zone</a>(<a class=\"id\" href=\"#fz\">fz</a>, <a class=\"id\" href=\"#old_ht\">old_ht</a>, <a class=\"id\" href=\"#old_divisor\">old_divisor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz_hash_free\">fz_hash_free</a>(<a class=\"id\" href=\"#old_ht\">old_ht</a>, <a class=\"id\" href=\"#old_divisor\">old_divisor</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fn_free_node\">fn_free_node</a>(struct <a class=\"id\" href=\"#fib_node\">fib_node</a> * <a class=\"id\" href=\"#f\">f</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#fn_hash_kmem\">fn_hash_kmem</a>, <a class=\"id\" href=\"#f\">f</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fn_free_alias\">fn_free_alias</a>(struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>, struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_release_info\">fib_release_info</a>(<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a> == &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_embedded_alias\">fn_embedded_alias</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#fn_alias_kmem\">fn_alias_kmem</a>, <a class=\"id\" href=\"#fa\">fa</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *", 
"<a class=\"id\" href=\"#fn_new_zone\">fn_new_zone</a>(struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#table\">table</a>, int <a class=\"id\" href=\"#z\">z</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fz\">fz</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#z\">z</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a> = 16;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hashmask\">fz_hashmask</a> = (<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a> = <a class=\"id\" href=\"#fz_hash_alloc\">fz_hash_alloc</a>(<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#fz\">fz</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_order\">fz_order</a> = <a class=\"id\" href=\"#z\">z</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_mask\">fz_mask</a> = <a class=\"id\" href=\"#inet_make_mask\">inet_make_mask</a>(<a class=\"id\" href=\"#z\">z</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find the first not empty zone with more specific mask */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=<a class=\"id\" href=\"#z\">z</a>+1; <a class=\"id\" href=\"#i\">i</a><=32; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zones\">fn_zones</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>&gt;32) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No more specific masks, we are the first. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_next\">fz_next</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zone_list\">fn_zone_list</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zone_list\">fn_zone_list</a> = <a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_next\">fz_next</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zones\">fn_zones</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#fz_next\">fz_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zones\">fn_zones</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#fz_next\">fz_next</a> = <a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zones\">fn_zones</a>[<a class=\"id\" href=\"#z\">z</a>] = <a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fz\">fz</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_table_lookup\">fib_table_lookup</a>(struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#flp\">flp</a>, struct <a class=\"id\" href=\"#fib_result\">fib_result</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#t\">t</a> = (struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *)<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#fn_zone_list\">fn_zone_list</a>; <a class=\"id\" href=\"#fz\">fz</a>; <a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_next\">fz_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#k\">k</a> = <a class=\"id\" href=\"#fz_key\">fz_key</a>(<a class=\"id\" href=\"#flp\">flp</a>-><a class=\"id\" href=\"#fl4_dst\">fl4_dst</a>, <a class=\"id\" href=\"#fz\">fz</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[<a class=\"id\" href=\"#fn_hash\">fn_hash</a>(<a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#fz\">fz</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_key\">fn_key</a> != <a class=\"id\" href=\"#k\">k</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#fib_semantic_match\">fib_semantic_match</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#flp\">flp</a>, <a class=\"id\" href=\"#res\">res</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_order\">fz_order</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 1;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#fib_table_select_default\">fib_table_select_default</a>(struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const struct <a class=\"id\" href=\"#flowi\">flowi</a> *<a class=\"id\" href=\"#flp\">flp</a>, struct <a class=\"id\" href=\"#fib_result\">fib_result</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#order\">order</a>, <a class=\"id\" href=\"#last_idx\">last_idx</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#last_resort\">last_resort</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#t\">t</a> = (struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *)<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#fn_zones\">fn_zones</a>[0];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fz\">fz</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_idx\">last_idx</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_resort\">last_resort</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[0], <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#next_fi\">next_fi</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a> != <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#scope\">scope</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a> != <a class=\"id\" href=\"#RTN_UNICAST\">RTN_UNICAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#next_fi\">next_fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a> &gt; <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#next_fi\">next_fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>[0].<a class=\"id\" href=\"#nh_gw\">nh_gw</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#next_fi\">next_fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>[0].<a class=\"id\" href=\"#nh_scope\">nh_scope</a> != <a class=\"id\" href=\"#RT_SCOPE_LINK\">RT_SCOPE_LINK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_state\">fa_state</a> |= <a class=\"id\" href=\"#FA_S_ACCESSED\">FA_S_ACCESSED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#next_fi\">next_fi</a> != <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#fi\">fi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#fib_detect_death\">fib_detect_death</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#last_resort\">last_resort</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#last_idx\">last_idx</a>, <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_default\">tb_default</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_result_assign\">fib_result_assign</a>(<a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_default\">tb_default</a> = <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#next_fi\">next_fi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#order\">order</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#order\">order</a> <= 0 || <a class=\"id\" href=\"#fi\">fi</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_default\">tb_default</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fib_detect_death\">fib_detect_death</a>(<a class=\"id\" href=\"#fi\">fi</a>, <a class=\"id\" href=\"#order\">order</a>, &amp;<a class=\"id\" href=\"#last_resort\">last_resort</a>, &amp;<a class=\"id\" href=\"#last_idx\">last_idx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_default\">tb_default</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_result_assign\">fib_result_assign</a>(<a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_default\">tb_default</a> = <a class=\"id\" href=\"#order\">order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_idx\">last_idx</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_result_assign\">fib_result_assign</a>(<a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#last_resort\">last_resort</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_default\">tb_default</a> = <a class=\"id\" href=\"#last_idx\">last_idx</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Insert node F to FZ. */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#fib_insert_node\">fib_insert_node</a>(struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>, struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[<a class=\"id\" href=\"#fn_hash\">fn_hash</a>(<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_key\">fn_key</a>, <a class=\"id\" href=\"#fz\">fz</a>)];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_hash\">fn_hash</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Return the node in FZ matching KEY. */</span>", 
"static struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#fib_find_node\">fib_find_node</a>(struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[<a class=\"id\" href=\"#fn_hash\">fn_hash</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fz\">fz</a>)];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_key\">fn_key</a> == <a class=\"id\" href=\"#key\">key</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_table_insert\">fib_table_insert</a>(struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>, struct <a class=\"id\" href=\"#fib_config\">fib_config</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#table\">table</a> = (struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *) <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#new_f\">new_f</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>, *<a class=\"id\" href=\"#new_fa\">new_fa</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tos\">tos</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_tos\">fc_tos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a> &gt; 32)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zones\">fn_zones</a>[<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a>];", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fz\">fz</a> && !(<a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#fn_new_zone\">fn_new_zone</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a> &amp; ~<a class=\"id\" href=\"#FZ_MASK\">FZ_MASK</a>(<a class=\"id\" href=\"#fz\">fz</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#fz_key\">fz_key</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a>, <a class=\"id\" href=\"#fz\">fz</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#fib_create_info\">fib_create_info</a>(<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#fi\">fi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_nent\">fz_nent</a> &gt; (<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a><<1) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a> &lt; <a class=\"id\" href=\"#FZ_MAX_DIVISOR\">FZ_MAX_DIVISOR</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a> == 32 ||", 
"<span class=\"ts\"/>     (1 << <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a>) &gt; <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn_rehash_zone\">fn_rehash_zone</a>(<a class=\"id\" href=\"#fz\">fz</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#fib_find_node\">fib_find_node</a>(<a class=\"id\" href=\"#fz\">fz</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#f\">f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fib_find_alias\">fib_find_alias</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#tos\">tos</a>, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now fa, if non-NULL, points to the first fib alias</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with the same keys [prefix,tos,priority], if such key already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * exists or to the node before which we will insert new one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If fa is NULL, we will need to allocate a new one and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * insert to the head of f.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If f is NULL, no fib node matched the destination key</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and we need to allocate a new one of those as well.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a> && <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> == <a class=\"id\" href=\"#tos\">tos</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a> == <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa_first\">fa_first</a>, *<a class=\"id\" href=\"#fa_match\">fa_match</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlflags\">fc_nlflags</a> &amp; <a class=\"id\" href=\"#NLM_F_EXCL\">NLM_F_EXCL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We have 2 goals:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 1. Find exact match for type, scope, fib_info to avoid</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * duplicate routes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 2. Find next 'fa' (or head), NLM_F_APPEND inserts before it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa_match\">fa_match</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa_first\">fa_first</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_list\">fa_list</a>.<a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_continue\">list_for_each_entry_continue</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> != <a class=\"id\" href=\"#tos\">tos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a> != <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a> == <a class=\"id\" href=\"#fi\">fi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa_match\">fa_match</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlflags\">fc_nlflags</a> &amp; <a class=\"id\" href=\"#NLM_F_REPLACE\">NLM_F_REPLACE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi_drop\">fi_drop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa_first\">fa_first</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa_match\">fa_match</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a> == <a class=\"id\" href=\"#fa_match\">fa_match</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fi_drop\">fi_drop</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a> = <a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_state\">fa_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_state\">fa_state</a> &= ~<a class=\"id\" href=\"#FA_S_ACCESSED\">FA_S_ACCESSED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_release_info\">fib_release_info</a>(<a class=\"id\" href=\"#fi_drop\">fi_drop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#FA_S_ACCESSED\">FA_S_ACCESSED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_cache_flush\">rt_cache_flush</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_fib\">rtmsg_fib</a>(<a class=\"id\" href=\"#RTM_NEWROUTE\">RTM_NEWROUTE</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a>, <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_id\">tb_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>, <a class=\"id\" href=\"#NLM_F_REPLACE\">NLM_F_REPLACE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Error if we find a perfect match which</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * uses the same scope, type, and nexthop</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * information.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa_match\">fa_match</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlflags\">fc_nlflags</a> &amp; <a class=\"id\" href=\"#NLM_F_APPEND\">NLM_F_APPEND</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa_first\">fa_first</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlflags\">fc_nlflags</a> &amp; <a class=\"id\" href=\"#NLM_F_CREATE\">NLM_F_CREATE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#f\">f</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_f\">new_f</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#fn_hash_kmem\">fn_hash_kmem</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_f\">new_f</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_HLIST_NODE\">INIT_HLIST_NODE</a>(&amp;<a class=\"id\" href=\"#new_f\">new_f</a>-><a class=\"id\" href=\"#fn_hash\">fn_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#new_f\">new_f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_f\">new_f</a>-><a class=\"id\" href=\"#fn_key\">fn_key</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#new_f\">new_f</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fa\">new_fa</a> = &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_embedded_alias\">fn_embedded_alias</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_fa\">new_fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_fa\">new_fa</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#fn_alias_kmem\">fn_alias_kmem</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_fa\">new_fa</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fa\">new_fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a> = <a class=\"id\" href=\"#fi\">fi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fa\">new_fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> = <a class=\"id\" href=\"#tos\">tos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fa\">new_fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fa\">new_fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a> = <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_fa\">new_fa</a>-><a class=\"id\" href=\"#fa_state\">fa_state</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Insert new entry to the list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_f\">new_f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_insert_node\">fib_insert_node</a>(<a class=\"id\" href=\"#fz\">fz</a>, <a class=\"id\" href=\"#new_f\">new_f</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#new_fa\">new_fa</a>-><a class=\"id\" href=\"#fa_list\">fa_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#fa\">fa</a> ? &amp;<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_list\">fa_list</a> : &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_f\">new_f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_nent\">fz_nent</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_cache_flush\">rt_cache_flush</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a>, -1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_fib\">rtmsg_fib</a>(<a class=\"id\" href=\"#RTM_NEWROUTE\">RTM_NEWROUTE</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#new_fa\">new_fa</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a>, <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_id\">tb_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_f\">new_f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#fn_hash_kmem\">fn_hash_kmem</a>, <a class=\"id\" href=\"#new_f\">new_f</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fib_release_info\">fib_release_info</a>(<a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_table_delete\">fib_table_delete</a>(struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>, struct <a class=\"id\" href=\"#fib_config\">fib_config</a> *<a class=\"id\" href=\"#cfg\">cfg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#table\">table</a> = (struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *)<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>, *<a class=\"id\" href=\"#fa_to_delete\">fa_to_delete</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#key\">key</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a> &gt; 32)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#fz\">fz</a>  = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zones\">fn_zones</a>[<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a>]) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a> &amp; ~<a class=\"id\" href=\"#FZ_MASK\">FZ_MASK</a>(<a class=\"id\" href=\"#fz\">fz</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#fz_key\">fz_key</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst\">fc_dst</a>, <a class=\"id\" href=\"#fz\">fz</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#fib_find_node\">fib_find_node</a>(<a class=\"id\" href=\"#fz\">fz</a>, <a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#f\">f</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fib_find_alias\">fib_find_alias</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_tos\">fc_tos</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fa\">fa</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fa_to_delete\">fa_to_delete</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_list\">fa_list</a>.<a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_continue\">list_for_each_entry_continue</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a> != <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_tos\">fc_tos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_type\">fc_type</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a> == <a class=\"id\" href=\"#RT_SCOPE_NOWHERE\">RT_SCOPE_NOWHERE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_scope\">fc_scope</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_protocol\">fc_protocol</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_protocol\">fib_protocol</a> == <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_protocol\">fc_protocol</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#fib_nh_match\">fib_nh_match</a>(<a class=\"id\" href=\"#cfg\">cfg</a>, <a class=\"id\" href=\"#fi\">fi</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa_to_delete\">fa_to_delete</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fa_to_delete\">fa_to_delete</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#kill_fn\">kill_fn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa_to_delete\">fa_to_delete</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtmsg_fib\">rtmsg_fib</a>(<a class=\"id\" href=\"#RTM_DELROUTE\">RTM_DELROUTE</a>, <a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_id\">tb_id</a>, &amp;<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fn\">kill_fn</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_list\">fa_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_hash\">fn_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fn\">kill_fn</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_state\">fa_state</a> &amp; <a class=\"id\" href=\"#FA_S_ACCESSED\">FA_S_ACCESSED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_cache_flush\">rt_cache_flush</a>(<a class=\"id\" href=\"#cfg\">cfg</a>-><a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn_free_alias\">fn_free_alias</a>(<a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#f\">f</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kill_fn\">kill_fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn_free_node\">fn_free_node</a>(<a class=\"id\" href=\"#f\">f</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_nent\">fz_nent</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fn_flush_list\">fn_flush_list</a>(struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>, int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[<a class=\"id\" href=\"#idx\">idx</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_safe\">hlist_for_each_entry_safe</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>, *<a class=\"id\" href=\"#fa_node\">fa_node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#kill_f\">kill_f</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_f\">kill_f</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#fa_node\">fa_node</a>, &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a> = <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a> && (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_flags\">fib_flags</a>&amp;<a class=\"id\" href=\"#RTNH_F_DEAD\">RTNH_F_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_list\">fa_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_del\">hlist_del</a>(&amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_hash\">fn_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_f\">kill_f</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn_free_alias\">fn_free_alias</a>(<a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#f\">f</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kill_f\">kill_f</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn_free_node\">fn_free_node</a>(<a class=\"id\" href=\"#f\">f</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_nent\">fz_nent</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_table_flush\">fib_table_flush</a>(struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#table\">table</a> = (struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *) <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zone_list\">fn_zone_list</a>; <a class=\"id\" href=\"#fz\">fz</a>; <a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_next\">fz_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a> - 1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> += <a class=\"id\" href=\"#fn_flush_list\">fn_flush_list</a>(<a class=\"id\" href=\"#fz\">fz</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#fn_hash_dump_bucket\">fn_hash_dump_bucket</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#s_i\">s_i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_i\">s_i</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#s_i\">s_i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fib_dump_info\">fib_dump_info</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NETLINK_CB\">NETLINK_CB</a>(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#skb\">skb</a>).<a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#nlh\">nlh</a>-><a class=\"id\" href=\"#nlmsg_seq\">nlmsg_seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#RTM_NEWROUTE\">RTM_NEWROUTE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_id\">tb_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_scope\">fa_scope</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_key\">fn_key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_order\">fz_order</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_tos\">fa_tos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#NLM_F_MULTI\">NLM_F_MULTI</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4] = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4] = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#fn_hash_dump_zone\">fn_hash_dump_zone</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#s_h\">s_h</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_h\">s_h</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[3];", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#s_h\">s_h</a>; <a class=\"id\" href=\"#h\">h</a> &lt; <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a>; <a class=\"id\" href=\"#h\">h</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[<a class=\"id\" href=\"#h\">h</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn_hash_dump_bucket\">fn_hash_dump_bucket</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cb\">cb</a>, <a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#fz\">fz</a>, &amp;<a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>[<a class=\"id\" href=\"#h\">h</a>]) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[3] = <a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[4], 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>) - 4*sizeof(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0]));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[3] = <a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#fib_table_dump\">fib_table_dump</a>(struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#netlink_callback\">netlink_callback</a> *<a class=\"id\" href=\"#cb\">cb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#s_m\">s_m</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a> *<a class=\"id\" href=\"#fz\">fz</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#table\">table</a> = (struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *)<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s_m\">s_m</a> = <a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zone_list\">fn_zone_list</a>, <a class=\"id\" href=\"#m\">m</a>=0; <a class=\"id\" href=\"#fz\">fz</a>; <a class=\"id\" href=\"#fz\">fz</a> = <a class=\"id\" href=\"#fz\">fz</a>-><a class=\"id\" href=\"#fz_next\">fz_next</a>, <a class=\"id\" href=\"#m\">m</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a> &lt; <a class=\"id\" href=\"#s_m\">s_m</a>) continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#fn_hash_dump_zone\">fn_hash_dump_zone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#cb\">cb</a>, <a class=\"id\" href=\"#tb\">tb</a>, <a class=\"id\" href=\"#fz\">fz</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2] = <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[3], 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>) - 3*sizeof(<a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[0]));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cb\">cb</a>-><a class=\"id\" href=\"#args\">args</a>[2] = <a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#fib_hash_init\">fib_hash_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn_hash_kmem\">fn_hash_kmem</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"ip_fib_hash\", sizeof(struct <a class=\"id\" href=\"#fib_node\">fib_node</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 0, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn_alias_kmem\">fn_alias_kmem</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"ip_fib_alias\", sizeof(struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  0, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"}", 
"", 
"struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#fib_hash_table\">fib_hash_table</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#tb\">tb</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#fib_table\">fib_table</a>) + sizeof(struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tb\">tb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_id\">tb_id</a> = <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_default\">tb_default</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#tb\">tb</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>, 0, sizeof(struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tb\">tb</a>;", 
"}", 
"", 
"<span class=\"comment\">/* ------------------------------------------------------------------------ */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"", 
"struct <a class=\"id\" href=\"#fib_iter_state\">fib_iter_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_zone\">fn_zone</a><span class=\"ts\"/>*<a class=\"id\" href=\"#zone\">zone</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bucket\">bucket</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#hash_head\">hash_head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#genid\">genid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#valid\">valid</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fib_get_first\">fib_get_first</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_iter_state\">fib_iter_state</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_table\">fib_table</a> *<a class=\"id\" href=\"#main_table\">main_table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#main_table\">main_table</a> = <a class=\"id\" href=\"#fib_get_table\">fib_get_table</a>(<a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>), <a class=\"id\" href=\"#RT_TABLE_MAIN\">RT_TABLE_MAIN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = (struct <a class=\"id\" href=\"#fn_hash\">fn_hash</a> *)<a class=\"id\" href=\"#main_table\">main_table</a>-><a class=\"id\" href=\"#tb_data\">tb_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bucket\">bucket</a>    = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a>        = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a>        = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#pos\">pos</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#genid\">genid</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#valid\">valid</a><span class=\"ts\"/>= 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#fn_zone_list\">fn_zone_list</a>; <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#fz_next\">fz_next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#maxslot\">maxslot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#fz_nent\">fz_nent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maxslot\">maxslot</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = 0; <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bucket\">bucket</a> &lt; <a class=\"id\" href=\"#maxslot\">maxslot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>     ++<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bucket\">bucket</a>, ++<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fib_get_next\">fib_get_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_iter_state\">fib_iter_state</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Advance FA, if any. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_continue\">list_for_each_entry_continue</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Advance FN. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fn\">fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a> = &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_hash\">fn_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_continue\">hlist_for_each_entry_continue</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Advance hash chain. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#maxslot\">maxslot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#maxslot\">maxslot</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#fz_divisor\">fz_divisor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (++<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bucket\">bucket</a> &lt; <a class=\"id\" href=\"#maxslot\">maxslot</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#fz_next\">fz_next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#bucket\">bucket</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#fz_hash\">fz_hash</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#hash_head\">hash_head</a>, <a class=\"id\" href=\"#fn_hash\">fn_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#fa\">fa</a>, &amp;<a class=\"id\" href=\"#fn\">fn</a>-><a class=\"id\" href=\"#fn_alias\">fn_alias</a>, <a class=\"id\" href=\"#fa_list\">fa_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#pos\">pos</a>++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fa\">fa</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fib_get_idx\">fib_get_idx</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_iter_state\">fib_iter_state</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#valid\">valid</a> && <a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#pos\">pos</a> && <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#genid\">genid</a> == <a class=\"id\" href=\"#fib_hash_genid\">fib_hash_genid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a>   = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> -= <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fib_get_first\">fib_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fa\">fa</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pos\">pos</a> && (<a class=\"id\" href=\"#fa\">fa</a> = <a class=\"id\" href=\"#fib_get_next\">fib_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>--<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#NULL\">NULL</a> : <a class=\"id\" href=\"#fa\">fa</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#fib_seq_start\">fib_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fib_get_table\">fib_get_table</a>(<a class=\"id\" href=\"#seq_file_net\">seq_file_net</a>(<a class=\"id\" href=\"#seq\">seq</a>), <a class=\"id\" href=\"#RT_TABLE_MAIN\">RT_TABLE_MAIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = *<a class=\"id\" href=\"#pos\">pos</a> ? <a class=\"id\" href=\"#fib_get_idx\">fib_get_idx</a>(<a class=\"id\" href=\"#seq\">seq</a>, *<a class=\"id\" href=\"#pos\">pos</a> - 1) : <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#fib_seq_next\">fib_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a> ? <a class=\"id\" href=\"#fib_get_first\">fib_get_first</a>(<a class=\"id\" href=\"#seq\">seq</a>) : <a class=\"id\" href=\"#fib_get_next\">fib_get_next</a>(<a class=\"id\" href=\"#seq\">seq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fib_seq_stop\">fib_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#fib_hash_lock\">fib_hash_lock</a>);", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#fib_flag_trans\">fib_flag_trans</a>(int <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#mask\">mask</a>, struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>)", 
"{", 
"<span class=\"ts\"/>static const unsigned <a class=\"id\" href=\"#type2flags\">type2flags</a>[<a class=\"id\" href=\"#RTN_MAX\">RTN_MAX</a> + 1] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>[7] = <a class=\"id\" href=\"#RTF_REJECT\">RTF_REJECT</a>, [8] = <a class=\"id\" href=\"#RTF_REJECT\">RTF_REJECT</a>,", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#type2flags\">type2flags</a>[<a class=\"id\" href=\"#type\">type</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a> && <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#RTF_GATEWAY\">RTF_GATEWAY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mask\">mask</a> == <a class=\"id\" href=\"#htonl\">htonl</a>(0xFFFFFFFF))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#RTF_HOST\">RTF_HOST</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#RTF_UP\">RTF_UP</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This outputs /proc/net/route.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>It always works in backward compatibility mode.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The format of the file is not supposed to be changed.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#fib_seq_show\">fib_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_iter_state\">fib_iter_state</a> *<a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_node\">fib_node</a> *<a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_alias\">fib_alias</a> *<a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib_info\">fib_info</a> *<a class=\"id\" href=\"#fi\">fi</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a> == <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%-127s\\n\", \"Iface\\tDestination\\tGateway \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"\\tFlags\\tRefCnt\\tUse\\tMetric\\tMask\\t\\tMTU\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"\\tWindow\\tIRTT\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq\">seq</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a><span class=\"ts\"/>= <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fa\">fa</a><span class=\"ts\"/>= <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#fa\">fa</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fi\">fi</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_info\">fa_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prefix\">prefix</a><span class=\"ts\"/>= <a class=\"id\" href=\"#f\">f</a>-><a class=\"id\" href=\"#fn_key\">fn_key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#FZ_MASK\">FZ_MASK</a>(<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#zone\">zone</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#fib_flag_trans\">fib_flag_trans</a>(<a class=\"id\" href=\"#fa\">fa</a>-><a class=\"id\" href=\"#fa_type\">fa_type</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#fi\">fi</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fi\">fi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%s\\t%08X\\t%08X\\t%04X\\t%d\\t%u\\t%d\\t%08X\\t%d\\t%u\\t%u%n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_dev\">fib_dev</a> ? <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_dev\">fib_dev</a>-><a class=\"id\" href=\"#name\">name</a> : \"*\", <a class=\"id\" href=\"#prefix\">prefix</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_nh\">fib_nh</a>-><a class=\"id\" href=\"#nh_gw\">nh_gw</a>, <a class=\"id\" href=\"#flags\">flags</a>, 0, 0, <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_priority\">fib_priority</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mask\">mask</a>, (<a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_advmss\">fib_advmss</a> ? <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_advmss\">fib_advmss</a> + 40 : 0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_window\">fib_window</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#fi\">fi</a>-><a class=\"id\" href=\"#fib_rtt\">fib_rtt</a> >> 3, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"*\\t%08X\\t%08X\\t%04X\\t%d\\t%u\\t%d\\t%08X\\t%d\\t%u\\t%u%n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#prefix\">prefix</a>, 0, <a class=\"id\" href=\"#flags\">flags</a>, 0, 0, 0, <a class=\"id\" href=\"#mask\">mask</a>, 0, 0, 0, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>, \"%*s\\n\", 127 - <a class=\"id\" href=\"#len\">len</a>, \"\");", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#fib_seq_ops\">fib_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a>  = <a class=\"id\" href=\"#fib_seq_start\">fib_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a>   = <a class=\"id\" href=\"#fib_seq_next\">fib_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a>   = <a class=\"id\" href=\"#fib_seq_stop\">fib_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a>   = <a class=\"id\" href=\"#fib_seq_show\">fib_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#fib_seq_open\">fib_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open_net\">seq_open_net</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#fib_seq_ops\">fib_seq_ops</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    sizeof(struct <a class=\"id\" href=\"#fib_iter_state\">fib_iter_state</a>));", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#fib_seq_fops\">fib_seq_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a>           = <a class=\"id\" href=\"#fib_seq_open\">fib_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a>           = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a>         = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release_net\">seq_release_net</a>,", 
"};", 
"", 
"int <a class=\"id\" href=\"#__net_init\">__net_init</a> <a class=\"id\" href=\"#fib_proc_init\">fib_proc_init</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_net_fops_create\">proc_net_fops_create</a>(<a class=\"id\" href=\"#net\">net</a>, \"route\", <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>, &amp;<a class=\"id\" href=\"#fib_seq_fops\">fib_seq_fops</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__net_exit\">__net_exit</a> <a class=\"id\" href=\"#fib_proc_exit\">fib_proc_exit</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_net_remove\">proc_net_remove</a>(<a class=\"id\" href=\"#net\">net</a>, \"route\");", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
];
xr_frag_insert('l/1a/773473c07540fe81ec6a714b90ca3a03a7b72c.xr', __xr_tmp);
