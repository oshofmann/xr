var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_APIC_H\">_ASM_X86_APIC_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_APIC_H\">_ASM_X86_APIC_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm\">pm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#alternative\">alternative</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpufeature\">cpufeature</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apicdef\">apicdef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#atomic\">atomic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#fixmap\">fixmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mpspec\">mpspec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ARCH_APICTIMER_STOPS_ON_C3\">ARCH_APICTIMER_STOPS_ON_C3</a><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Debugging macros</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#APIC_QUIET\">APIC_QUIET</a>   0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#APIC_VERBOSE\">APIC_VERBOSE</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#APIC_DEBUG\">APIC_DEBUG</a>   2", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define the default level of output to be very little</span>", 
"<span class=\"comment\"> * This can be turned up by using apic=verbose for more</span>", 
"<span class=\"comment\"> * information and apic=debug for _lots_ of information.</span>", 
"<span class=\"comment\"> * apic_verbosity is defined in apic.c</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#apic_printk\">apic_printk</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#a\">a</a>...) do {       \\", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#v\">v</a>) <= <a class=\"id\" href=\"#apic_verbosity\">apic_verbosity</a>) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#s\">s</a>, ##<a class=\"id\" href=\"#a\">a</a>);    \\", 
"<span class=\"ts\"/>} while (0)", 
"", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>)", 
"extern void <a class=\"id\" href=\"#generic_apic_probe\">generic_apic_probe</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#generic_apic_probe\">generic_apic_probe</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"", 
"extern unsigned int <a class=\"id\" href=\"#apic_verbosity\">apic_verbosity</a>;", 
"extern int <a class=\"id\" href=\"#local_apic_timer_c2_ok\">local_apic_timer_c2_ok</a>;", 
"", 
"extern int <a class=\"id\" href=\"#disable_apic\">disable_apic</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"extern void <a class=\"id\" href=\"#__inquire_remote_apic\">__inquire_remote_apic</a>(int <a class=\"id\" href=\"#apicid\">apicid</a>);", 
"#else <span class=\"comment\">/* CONFIG_SMP */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__inquire_remote_apic\">__inquire_remote_apic</a>(int <a class=\"id\" href=\"#apicid\">apicid</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#default_inquire_remote_apic\">default_inquire_remote_apic</a>(int <a class=\"id\" href=\"#apicid\">apicid</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#apic_verbosity\">apic_verbosity</a> >= <a class=\"id\" href=\"#APIC_DEBUG\">APIC_DEBUG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inquire_remote_apic\">__inquire_remote_apic</a>(<a class=\"id\" href=\"#apicid\">apicid</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * With 82489DX we can't rely on apic feature bit</span>", 
"<span class=\"comment\"> * retrieved via cpuid but still have to deal with</span>", 
"<span class=\"comment\"> * such an apic chip so we assume that SMP configuration</span>", 
"<span class=\"comment\"> * is found from MP table (64bit case uses ACPI mostly</span>", 
"<span class=\"comment\"> * which set smp presence flag as well so we are safe</span>", 
"<span class=\"comment\"> * to use this helper too).</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#apic_from_smp_config\">apic_from_smp_config</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#smp_found_config\">smp_found_config</a> && !<a class=\"id\" href=\"#disable_apic\">disable_apic</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Basic functions accessing APICs.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PARAVIRT\">CONFIG_PARAVIRT</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"extern int <a class=\"id\" href=\"#is_vsmp_box\">is_vsmp_box</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_vsmp_box\">is_vsmp_box</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"extern void <a class=\"id\" href=\"#xapic_wait_icr_idle\">xapic_wait_icr_idle</a>(void);", 
"extern <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#safe_xapic_wait_icr_idle\">safe_xapic_wait_icr_idle</a>(void);", 
"extern void <a class=\"id\" href=\"#xapic_icr_write\">xapic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#u32\">u32</a>);", 
"extern int <a class=\"id\" href=\"#setup_profiling_timer\">setup_profiling_timer</a>(unsigned int);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_apic_mem_write\">native_apic_mem_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>volatile <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#addr\">addr</a> = (volatile <a class=\"id\" href=\"#u32\">u32</a> *)(<a class=\"id\" href=\"#APIC_BASE\">APIC_BASE</a> + <a class=\"id\" href=\"#reg\">reg</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#alternative_io\">alternative_io</a>(\"movl %0, %1\", \"xchgl %0, %1\", <a class=\"id\" href=\"#X86_FEATURE_11AP\">X86_FEATURE_11AP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ASM_OUTPUT2\">ASM_OUTPUT2</a>(\"=r\" (<a class=\"id\" href=\"#v\">v</a>), \"=m\" (*<a class=\"id\" href=\"#addr\">addr</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ASM_OUTPUT2\">ASM_OUTPUT2</a>(\"0\" (<a class=\"id\" href=\"#v\">v</a>), \"m\" (*<a class=\"id\" href=\"#addr\">addr</a>)));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#native_apic_mem_read\">native_apic_mem_read</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/>return *((volatile <a class=\"id\" href=\"#u32\">u32</a> *)(<a class=\"id\" href=\"#APIC_BASE\">APIC_BASE</a> + <a class=\"id\" href=\"#reg\">reg</a>));", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#native_apic_wait_icr_idle\">native_apic_wait_icr_idle</a>(void);", 
"extern <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#native_safe_apic_wait_icr_idle\">native_safe_apic_wait_icr_idle</a>(void);", 
"extern void <a class=\"id\" href=\"#native_apic_icr_write\">native_apic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>);", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#native_apic_icr_read\">native_apic_icr_read</a>(void);", 
"", 
"extern int <a class=\"id\" href=\"#x2apic_mode\">x2apic_mode</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_X2APIC\">CONFIG_X86_X2APIC</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Make previous memory operations globally visible before</span>", 
"<span class=\"comment\"> * sending the IPI through x2apic wrmsr. We need a serializing instruction or</span>", 
"<span class=\"comment\"> * mfence for this.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#x2apic_wrmsr_fence\">x2apic_wrmsr_fence</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile(\"mfence\" : : : \"memory\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_apic_msr_write\">native_apic_msr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a> == <a class=\"id\" href=\"#APIC_DFR\">APIC_DFR</a> || <a class=\"id\" href=\"#reg\">reg</a> == <a class=\"id\" href=\"#APIC_ID\">APIC_ID</a> || <a class=\"id\" href=\"#reg\">reg</a> == <a class=\"id\" href=\"#APIC_LDR\">APIC_LDR</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#reg\">reg</a> == <a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#APIC_BASE_MSR\">APIC_BASE_MSR</a> + (<a class=\"id\" href=\"#reg\">reg</a> >> 4), <a class=\"id\" href=\"#v\">v</a>, 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#native_apic_msr_read\">native_apic_msr_read</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a> == <a class=\"id\" href=\"#APIC_DFR\">APIC_DFR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#APIC_BASE_MSR\">APIC_BASE_MSR</a> + (<a class=\"id\" href=\"#reg\">reg</a> >> 4), <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#low\">low</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_x2apic_wait_icr_idle\">native_x2apic_wait_icr_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* no need to wait for icr idle in x2apic */</span>", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#native_safe_x2apic_wait_icr_idle\">native_safe_x2apic_wait_icr_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* no need to wait for icr idle in x2apic */</span>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#native_x2apic_icr_write\">native_x2apic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsrl\">wrmsrl</a>(<a class=\"id\" href=\"#APIC_BASE_MSR\">APIC_BASE_MSR</a> + (<a class=\"id\" href=\"#APIC_ICR\">APIC_ICR</a> >> 4), ((<a class=\"id\" href=\"#__u64\">__u64</a>) <a class=\"id\" href=\"#id\">id</a>) << 32 | <a class=\"id\" href=\"#low\">low</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#native_x2apic_icr_read\">native_x2apic_icr_read</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#APIC_BASE_MSR\">APIC_BASE_MSR</a> + (<a class=\"id\" href=\"#APIC_ICR\">APIC_ICR</a> >> 4), <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#val\">val</a>;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#x2apic_phys\">x2apic_phys</a>;", 
"extern void <a class=\"id\" href=\"#check_x2apic\">check_x2apic</a>(void);", 
"extern void <a class=\"id\" href=\"#enable_x2apic\">enable_x2apic</a>(void);", 
"extern void <a class=\"id\" href=\"#x2apic_icr_write\">x2apic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#x2apic_enabled\">x2apic_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#msr2\">msr2</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_x2apic\">cpu_has_x2apic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_APICBASE\">MSR_IA32_APICBASE</a>, <a class=\"id\" href=\"#msr\">msr</a>, <a class=\"id\" href=\"#msr2\">msr2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#msr\">msr</a> &amp; <a class=\"id\" href=\"#X2APIC_ENABLE\">X2APIC_ENABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#x2apic_supported\">x2apic_supported</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#cpu_has_x2apic\">cpu_has_x2apic</a>)", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#x2apic_force_phys\">x2apic_force_phys</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x2apic_phys\">x2apic_phys</a> = 1;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#check_x2apic\">check_x2apic</a>(void)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#enable_x2apic\">enable_x2apic</a>(void)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#x2apic_enabled\">x2apic_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#x2apic_force_phys\">x2apic_force_phys</a>(void)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#x2apic_preenabled\">x2apic_preenabled</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#x2apic_supported\">x2apic_supported</a>()<span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern void <a class=\"id\" href=\"#enable_IR_x2apic\">enable_IR_x2apic</a>(void);", 
"", 
"extern int <a class=\"id\" href=\"#get_physical_broadcast\">get_physical_broadcast</a>(void);", 
"", 
"extern void <a class=\"id\" href=\"#apic_disable\">apic_disable</a>(void);", 
"extern int <a class=\"id\" href=\"#lapic_get_maxlvt\">lapic_get_maxlvt</a>(void);", 
"extern void <a class=\"id\" href=\"#clear_local_APIC\">clear_local_APIC</a>(void);", 
"extern void <a class=\"id\" href=\"#connect_bsp_APIC\">connect_bsp_APIC</a>(void);", 
"extern void <a class=\"id\" href=\"#disconnect_bsp_APIC\">disconnect_bsp_APIC</a>(int <a class=\"id\" href=\"#virt_wire_setup\">virt_wire_setup</a>);", 
"extern void <a class=\"id\" href=\"#disable_local_APIC\">disable_local_APIC</a>(void);", 
"extern void <a class=\"id\" href=\"#lapic_shutdown\">lapic_shutdown</a>(void);", 
"extern int <a class=\"id\" href=\"#verify_local_APIC\">verify_local_APIC</a>(void);", 
"extern void <a class=\"id\" href=\"#cache_APIC_registers\">cache_APIC_registers</a>(void);", 
"extern void <a class=\"id\" href=\"#sync_Arb_IDs\">sync_Arb_IDs</a>(void);", 
"extern void <a class=\"id\" href=\"#init_bsp_APIC\">init_bsp_APIC</a>(void);", 
"extern void <a class=\"id\" href=\"#setup_local_APIC\">setup_local_APIC</a>(void);", 
"extern void <a class=\"id\" href=\"#end_local_APIC_setup\">end_local_APIC_setup</a>(void);", 
"extern void <a class=\"id\" href=\"#init_apic_mappings\">init_apic_mappings</a>(void);", 
"extern void <a class=\"id\" href=\"#setup_boot_APIC_clock\">setup_boot_APIC_clock</a>(void);", 
"extern void <a class=\"id\" href=\"#setup_secondary_APIC_clock\">setup_secondary_APIC_clock</a>(void);", 
"extern int <a class=\"id\" href=\"#APIC_init_uniprocessor\">APIC_init_uniprocessor</a>(void);", 
"extern void <a class=\"id\" href=\"#enable_NMI_through_LVT0\">enable_NMI_through_LVT0</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On 32bit this is mach-xxx local</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"extern void <a class=\"id\" href=\"#early_init_lapic_mapping\">early_init_lapic_mapping</a>(void);", 
"extern int <a class=\"id\" href=\"#apic_is_clustered_box\">apic_is_clustered_box</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#apic_is_clustered_box\">apic_is_clustered_box</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#setup_APIC_eilvt_mce\">setup_APIC_eilvt_mce</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#msg_type\">msg_type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#setup_APIC_eilvt_ibs\">setup_APIC_eilvt_ibs</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#vector\">vector</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#msg_type\">msg_type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"", 
"#else <span class=\"comment\">/* !CONFIG_X86_LOCAL_APIC */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#lapic_shutdown\">lapic_shutdown</a>(void) { }", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#local_apic_timer_c2_ok\">local_apic_timer_c2_ok</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#init_apic_mappings\">init_apic_mappings</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#disable_local_APIC\">disable_local_APIC</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#apic_disable\">apic_disable</a>(void) { }", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#setup_boot_APIC_clock\">setup_boot_APIC_clock</a> <a class=\"id\" href=\"#x86_init_noop\">x86_init_noop</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#setup_secondary_APIC_clock\">setup_secondary_APIC_clock</a> <a class=\"id\" href=\"#x86_init_noop\">x86_init_noop</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#SET_APIC_ID\">SET_APIC_ID</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#set_apic_id\">set_apic_id</a>(<a class=\"id\" href=\"#x\">x</a>))", 
"#else", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright 2004 James Cleverdon, IBM.</span>", 
"<span class=\"comment\"> * Subject to the GNU Public License, v.2</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Generic APIC sub-arch data struct.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Hacked for x86-64 by James Cleverdon from i386 architecture code by</span>", 
"<span class=\"comment\"> * Martin Bligh, Andi Kleen, James Bottomley, John Stultz, and</span>", 
"<span class=\"comment\"> * James Cleverdon.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#apic\">apic</a> {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#probe\">probe</a>)(void);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#acpi_madt_oem_check\">acpi_madt_oem_check</a>)(char *<a class=\"id\" href=\"#oem_id\">oem_id</a>, char *<a class=\"id\" href=\"#oem_table_id\">oem_table_id</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#apic_id_registered\">apic_id_registered</a>)(void);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#irq_delivery_mode\">irq_delivery_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#irq_dest_mode\">irq_dest_mode</a>;", 
"", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *(*<a class=\"id\" href=\"#target_cpus\">target_cpus</a>)(void);", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#disable_esr\">disable_esr</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dest_logical\">dest_logical</a>;", 
"<span class=\"ts\"/>unsigned long (*<a class=\"id\" href=\"#check_apicid_used\">check_apicid_used</a>)(<a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> *<a class=\"id\" href=\"#map\">map</a>, int <a class=\"id\" href=\"#apicid\">apicid</a>);", 
"<span class=\"ts\"/>unsigned long (*<a class=\"id\" href=\"#check_apicid_present\">check_apicid_present</a>)(int <a class=\"id\" href=\"#apicid\">apicid</a>);", 
"", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#vector_allocation_domain\">vector_allocation_domain</a>)(int <a class=\"id\" href=\"#cpu\">cpu</a>, struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#retmask\">retmask</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#init_apic_ldr\">init_apic_ldr</a>)(void);", 
"", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#ioapic_phys_id_map\">ioapic_phys_id_map</a>)(<a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> *<a class=\"id\" href=\"#phys_map\">phys_map</a>, <a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> *<a class=\"id\" href=\"#retmap\">retmap</a>);", 
"", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#setup_apic_routing\">setup_apic_routing</a>)(void);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#multi_timer_check\">multi_timer_check</a>)(int <a class=\"id\" href=\"#apic\">apic</a>, int <a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#apicid_to_node\">apicid_to_node</a>)(int <a class=\"id\" href=\"#logical_apicid\">logical_apicid</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cpu_to_logical_apicid\">cpu_to_logical_apicid</a>)(int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#cpu_present_to_apicid\">cpu_present_to_apicid</a>)(int <a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#apicid_to_cpu_present\">apicid_to_cpu_present</a>)(int <a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>, <a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> *<a class=\"id\" href=\"#retmap\">retmap</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#setup_portio_remap\">setup_portio_remap</a>)(void);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#check_phys_apicid_present\">check_phys_apicid_present</a>)(int <a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#enable_apic_mode\">enable_apic_mode</a>)(void);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#phys_pkg_id\">phys_pkg_id</a>)(int <a class=\"id\" href=\"#cpuid_apic\">cpuid_apic</a>, int <a class=\"id\" href=\"#index_msb\">index_msb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When one of the next two hooks returns 1 the apic</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is switched to this. Essentially they are additional</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * probe functions:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#mps_oem_check\">mps_oem_check</a>)(struct <a class=\"id\" href=\"#mpc_table\">mpc_table</a> *<a class=\"id\" href=\"#mpc\">mpc</a>, char *<a class=\"id\" href=\"#oem\">oem</a>, char *<a class=\"id\" href=\"#productid\">productid</a>);", 
"", 
"<span class=\"ts\"/>unsigned int (*<a class=\"id\" href=\"#get_apic_id\">get_apic_id</a>)(unsigned long <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/>unsigned long (*<a class=\"id\" href=\"#set_apic_id\">set_apic_id</a>)(unsigned int <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#apic_id_mask\">apic_id_mask</a>;", 
"", 
"<span class=\"ts\"/>unsigned int (*<a class=\"id\" href=\"#cpu_mask_to_apicid\">cpu_mask_to_apicid</a>)(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>);", 
"<span class=\"ts\"/>unsigned int (*<a class=\"id\" href=\"#cpu_mask_to_apicid_and\">cpu_mask_to_apicid_and</a>)(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#andmask\">andmask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ipi */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#send_IPI_mask\">send_IPI_mask</a>)(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>, int <a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#send_IPI_mask_allbutself\">send_IPI_mask_allbutself</a>)(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> int <a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#send_IPI_allbutself\">send_IPI_allbutself</a>)(int <a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#send_IPI_all\">send_IPI_all</a>)(int <a class=\"id\" href=\"#vector\">vector</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#send_IPI_self\">send_IPI_self</a>)(int <a class=\"id\" href=\"#vector\">vector</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* wakeup_secondary_cpu */</span>", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#wakeup_secondary_cpu\">wakeup_secondary_cpu</a>)(int <a class=\"id\" href=\"#apicid\">apicid</a>, unsigned long <a class=\"id\" href=\"#start_eip\">start_eip</a>);", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#trampoline_phys_low\">trampoline_phys_low</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#trampoline_phys_high\">trampoline_phys_high</a>;", 
"", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#wait_for_init_deassert\">wait_for_init_deassert</a>)(<a class=\"id\" href=\"#atomic_t\">atomic_t</a> *<a class=\"id\" href=\"#deassert\">deassert</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#smp_callin_clear_local_apic\">smp_callin_clear_local_apic</a>)(void);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#inquire_remote_apic\">inquire_remote_apic</a>)(int <a class=\"id\" href=\"#apicid\">apicid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* apic ops */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> (*<a class=\"id\" href=\"#read\">read</a>)(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#write\">write</a>)(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> (*<a class=\"id\" href=\"#icr_read\">icr_read</a>)(void);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#icr_write\">icr_write</a>)(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#high\">high</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#wait_icr_idle\">wait_icr_idle</a>)(void);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> (*<a class=\"id\" href=\"#safe_wait_icr_idle\">safe_wait_icr_idle</a>)(void);", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Pointer to the local APIC driver in use on this system (there's</span>", 
"<span class=\"comment\"> * always just one such driver in use - the kernel decides via an</span>", 
"<span class=\"comment\"> * early probing process which one it picks - and then sticks to it):</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> *<a class=\"id\" href=\"#apic\">apic</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * APIC functionality to boot other CPUs - only used on SMP:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"extern <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#init_deasserted\">init_deasserted</a>;", 
"extern int <a class=\"id\" href=\"#wakeup_secondary_cpu_via_nmi\">wakeup_secondary_cpu_via_nmi</a>(int <a class=\"id\" href=\"#apicid\">apicid</a>, unsigned long <a class=\"id\" href=\"#start_eip\">start_eip</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#reg\">reg</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#apic_icr_read\">apic_icr_read</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#icr_read\">icr_read</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#apic_icr_write\">apic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#high\">high</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#icr_write\">icr_write</a>(<a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#high\">high</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#apic_wait_icr_idle\">apic_wait_icr_idle</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#wait_icr_idle\">wait_icr_idle</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#safe_apic_wait_icr_idle\">safe_apic_wait_icr_idle</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#safe_wait_icr_idle\">safe_wait_icr_idle</a>();", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#apic_icr_read\">apic_icr_read</a>(void) { return 0; }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#apic_icr_write\">apic_icr_write</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#low\">low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#high\">high</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#apic_wait_icr_idle\">apic_wait_icr_idle</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#safe_apic_wait_icr_idle\">safe_apic_wait_icr_idle</a>(void) { return 0; }", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ack_APIC_irq() actually gets compiled as a single instruction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ... yummie.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Docs say use 0 for future compatibility */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_EOI\">APIC_EOI</a>, 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned <a class=\"id\" href=\"#default_get_apic_id\">default_get_apic_id</a>(unsigned long <a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ver\">ver</a> = <a class=\"id\" href=\"#GET_APIC_VERSION\">GET_APIC_VERSION</a>(<a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVR\">APIC_LVR</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#APIC_XAPIC\">APIC_XAPIC</a>(<a class=\"id\" href=\"#ver\">ver</a>) || <a class=\"id\" href=\"#boot_cpu_has\">boot_cpu_has</a>(<a class=\"id\" href=\"#X86_FEATURE_EXTD_APICID\">X86_FEATURE_EXTD_APICID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#x\">x</a> >> 24) &amp; 0xFF;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#x\">x</a> >> 24) &amp; 0x0F;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Warm reset vector default position:</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_TRAMPOLINE_PHYS_LOW\">DEFAULT_TRAMPOLINE_PHYS_LOW</a><span class=\"ts\"/><span class=\"ts\"/>0x467", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFAULT_TRAMPOLINE_PHYS_HIGH\">DEFAULT_TRAMPOLINE_PHYS_HIGH</a><span class=\"ts\"/><span class=\"ts\"/>0x469", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_flat\">apic_flat</a>;", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_physflat\">apic_physflat</a>;", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_x2apic_cluster\">apic_x2apic_cluster</a>;", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_x2apic_phys\">apic_x2apic_phys</a>;", 
"extern int <a class=\"id\" href=\"#default_acpi_madt_oem_check\">default_acpi_madt_oem_check</a>(char *, char *);", 
"", 
"extern void <a class=\"id\" href=\"#apic_send_IPI_self\">apic_send_IPI_self</a>(int <a class=\"id\" href=\"#vector\">vector</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_x2apic_uv_x\">apic_x2apic_uv_x</a>;", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(int, <a class=\"id\" href=\"#x2apic_extra_bits\">x2apic_extra_bits</a>);", 
"", 
"extern int <a class=\"id\" href=\"#default_cpu_present_to_apicid\">default_cpu_present_to_apicid</a>(int <a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>);", 
"extern int <a class=\"id\" href=\"#default_check_phys_apicid_present\">default_check_phys_apicid_present</a>(int <a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#default_wait_for_init_deassert\">default_wait_for_init_deassert</a>(<a class=\"id\" href=\"#atomic_t\">atomic_t</a> *<a class=\"id\" href=\"#deassert\">deassert</a>)", 
"{", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(<a class=\"id\" href=\"#deassert\">deassert</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_relax\">cpu_relax</a>();", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#generic_bigsmp_probe\">generic_bigsmp_probe</a>(void);", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#APIC_DFR_VALUE\">APIC_DFR_VALUE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#APIC_DFR_FLAT\">APIC_DFR_FLAT</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#default_target_cpus\">default_target_cpus</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>;", 
"#else", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<a class=\"id\" href=\"#DECLARE_EARLY_PER_CPU\">DECLARE_EARLY_PER_CPU</a>(<a class=\"id\" href=\"#u16\">u16</a>, <a class=\"id\" href=\"#x86_bios_cpu_apicid\">x86_bios_cpu_apicid</a>);", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int <a class=\"id\" href=\"#read_apic_id\">read_apic_id</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_ID\">APIC_ID</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#apic\">apic</a>-><a class=\"id\" href=\"#get_apic_id\">get_apic_id</a>(<a class=\"id\" href=\"#reg\">reg</a>);", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#default_setup_apic_routing\">default_setup_apic_routing</a>(void);", 
"", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_noop\">apic_noop</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"", 
"extern struct <a class=\"id\" href=\"#apic\">apic</a> <a class=\"id\" href=\"#apic_default\">apic_default</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up the logical destination ID.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Intel recommends to set DFR, LDR and TPR before enabling</span>", 
"<span class=\"comment\"> * an APIC.  See e.g. \"AP-388 82489DX User's Manual\" (Intel</span>", 
"<span class=\"comment\"> * document number 292116).  So here it goes...</span>", 
"<span class=\"comment\"> */</span>", 
"extern void <a class=\"id\" href=\"#default_init_apic_ldr\">default_init_apic_ldr</a>(void);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#default_apic_id_registered\">default_apic_id_registered</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#physid_isset\">physid_isset</a>(<a class=\"id\" href=\"#read_apic_id\">read_apic_id</a>(), <a class=\"id\" href=\"#phys_cpu_present_map\">phys_cpu_present_map</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#default_phys_pkg_id\">default_phys_pkg_id</a>(int <a class=\"id\" href=\"#cpuid_apic\">cpuid_apic</a>, int <a class=\"id\" href=\"#index_msb\">index_msb</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpuid_apic\">cpuid_apic</a> >> <a class=\"id\" href=\"#index_msb\">index_msb</a>;", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#default_apicid_to_node\">default_apicid_to_node</a>(int <a class=\"id\" href=\"#logical_apicid\">logical_apicid</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int", 
"<a class=\"id\" href=\"#default_cpu_mask_to_apicid\">default_cpu_mask_to_apicid</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpumask_bits\">cpumask_bits</a>(<a class=\"id\" href=\"#cpumask\">cpumask</a>)[0] &amp; <a class=\"id\" href=\"#APIC_ALL_CPUS\">APIC_ALL_CPUS</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned int", 
"<a class=\"id\" href=\"#default_cpu_mask_to_apicid_and\">default_cpu_mask_to_apicid_and</a>(const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#cpumask\">cpumask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#andmask\">andmask</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask1\">mask1</a> = <a class=\"id\" href=\"#cpumask_bits\">cpumask_bits</a>(<a class=\"id\" href=\"#cpumask\">cpumask</a>)[0];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask2\">mask2</a> = <a class=\"id\" href=\"#cpumask_bits\">cpumask_bits</a>(<a class=\"id\" href=\"#andmask\">andmask</a>)[0];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask3\">mask3</a> = <a class=\"id\" href=\"#cpumask_bits\">cpumask_bits</a>(<a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>)[0];", 
"", 
"<span class=\"ts\"/>return (unsigned int)(<a class=\"id\" href=\"#mask1\">mask1</a> &amp; <a class=\"id\" href=\"#mask2\">mask2</a> &amp; <a class=\"id\" href=\"#mask3\">mask3</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#default_check_apicid_used\">default_check_apicid_used</a>(<a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> *<a class=\"id\" href=\"#map\">map</a>, int <a class=\"id\" href=\"#apicid\">apicid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#physid_isset\">physid_isset</a>(<a class=\"id\" href=\"#apicid\">apicid</a>, *<a class=\"id\" href=\"#map\">map</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#default_check_apicid_present\">default_check_apicid_present</a>(int <a class=\"id\" href=\"#bit\">bit</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#physid_isset\">physid_isset</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#phys_cpu_present_map\">phys_cpu_present_map</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#default_ioapic_phys_id_map\">default_ioapic_phys_id_map</a>(<a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> *<a class=\"id\" href=\"#phys_map\">phys_map</a>, <a class=\"id\" href=\"#physid_mask_t\">physid_mask_t</a> *<a class=\"id\" href=\"#retmap\">retmap</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#retmap\">retmap</a> = *<a class=\"id\" href=\"#phys_map\">phys_map</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Mapping from cpu number to logical apicid */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#default_cpu_to_logical_apicid\">default_cpu_to_logical_apicid</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return 1 << <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__default_cpu_present_to_apicid\">__default_cpu_present_to_apicid</a>(int <a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mps_cpu\">mps_cpu</a> &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a> && <a class=\"id\" href=\"#cpu_present\">cpu_present</a>(<a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return (int)<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#x86_bios_cpu_apicid\">x86_bios_cpu_apicid</a>, <a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#BAD_APICID\">BAD_APICID</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#__default_check_phys_apicid_present\">__default_check_phys_apicid_present</a>(int <a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#physid_isset\">physid_isset</a>(<a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>, <a class=\"id\" href=\"#phys_cpu_present_map\">phys_cpu_present_map</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#default_cpu_present_to_apicid\">default_cpu_present_to_apicid</a>(int <a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__default_cpu_present_to_apicid\">__default_cpu_present_to_apicid</a>(<a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#default_check_phys_apicid_present\">default_check_phys_apicid_present</a>(int <a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__default_check_phys_apicid_present\">__default_check_phys_apicid_present</a>(<a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>);", 
"}", 
"#else", 
"extern int <a class=\"id\" href=\"#default_cpu_present_to_apicid\">default_cpu_present_to_apicid</a>(int <a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>);", 
"extern int <a class=\"id\" href=\"#default_check_phys_apicid_present\">default_check_phys_apicid_present</a>(int <a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_LOCAL_APIC */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#cpu_2_logical_apicid\">cpu_2_logical_apicid</a>[<a class=\"id\" href=\"#NR_CPUS\">NR_CPUS</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_APIC_H */</span>", 
];
xr_frag_insert('l/1b/3a201fa28fe7e400913fd336f6cc4941fee153.xr', __xr_tmp);
