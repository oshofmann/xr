var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"Why are you trying to register a hotplug slot \"", 
"<span class=\"ts\"/><span class=\"ts\"/>    \"without a proper release function?\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#mod_name\">mod_name</a> = <a class=\"id\" href=\"#mod_name\">mod_name</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#pci_hp_mutex\">pci_hp_mutex</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No problems if we call this interface from both ACPI_PCI_SLOT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * driver and call it here again. If we've already created the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pci_slot, the interface will simply bump the refcount.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_slot\">pci_slot</a> = <a class=\"id\" href=\"#pci_create_slot\">pci_create_slot</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devnr\">devnr</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pci_slot\">pci_slot</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#pci_slot\">pci_slot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#pci_slot\">pci_slot</a> = <a class=\"id\" href=\"#pci_slot\">pci_slot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_slot\">pci_slot</a>-><a class=\"id\" href=\"#hotplug\">hotplug</a> = <a class=\"id\" href=\"#slot\">slot</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#slot_list\">slot_list</a>, &amp;<a class=\"id\" href=\"#pci_hotplug_slot_list\">pci_hotplug_slot_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#fs_add_slot\">fs_add_slot</a>(<a class=\"id\" href=\"#pci_slot\">pci_slot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#pci_slot\">pci_slot</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"Added slot %s to the list\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#pci_hp_mutex\">pci_hp_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_hp_deregister - deregister a hotplug_slot with the PCI hotplug subsystem</span>", 
"<span class=\"comment\"> * @hotplug: pointer to the &amp;struct hotplug_slot to deregister</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The @slot must have been registered with the pci hotplug subsystem</span>", 
"<span class=\"comment\"> * previously with a call to pci_hp_register().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if successful, anything else for an error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_hp_deregister\">pci_hp_deregister</a>(struct <a class=\"id\" href=\"#hotplug_slot\">hotplug_slot</a> *<a class=\"id\" href=\"#hotplug\">hotplug</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hotplug_slot\">hotplug_slot</a> *<a class=\"id\" href=\"#temp\">temp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hotplug\">hotplug</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#pci_hp_mutex\">pci_hp_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> = <a class=\"id\" href=\"#get_slot_from_name\">get_slot_from_name</a>(<a class=\"id\" href=\"#hotplug_slot_name\">hotplug_slot_name</a>(<a class=\"id\" href=\"#hotplug\">hotplug</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#temp\">temp</a> != <a class=\"id\" href=\"#hotplug\">hotplug</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#pci_hp_mutex\">pci_hp_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#hotplug\">hotplug</a>-><a class=\"id\" href=\"#slot_list\">slot_list</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#hotplug\">hotplug</a>-><a class=\"id\" href=\"#pci_slot\">pci_slot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fs_remove_slot\">fs_remove_slot</a>(<a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dbg\">dbg</a>(\"Removed slot %s from the list\\n\", <a class=\"id\" href=\"#hotplug_slot_name\">hotplug_slot_name</a>(<a class=\"id\" href=\"#hotplug\">hotplug</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hotplug\">hotplug</a>-><a class=\"id\" href=\"#release\">release</a>(<a class=\"id\" href=\"#hotplug\">hotplug</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#hotplug\">hotplug</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_destroy_slot\">pci_destroy_slot</a>(<a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#pci_hp_mutex\">pci_hp_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_hp_change_slot_info - changes the slot's information structure in the core</span>", 
"<span class=\"comment\"> * @hotplug: pointer to the slot whose info has changed</span>", 
"<span class=\"comment\"> * @info: pointer to the info copy into the slot's info structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @slot must have been registered with the pci </span>", 
"<span class=\"comment\"> * hotplug subsystem previously with a call to pci_hp_register().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if successful, anything else for an error.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#pci_hp_change_slot_info\">pci_hp_change_slot_info</a>(struct <a class=\"id\" href=\"#hotplug_slot\">hotplug_slot</a> *<a class=\"id\" href=\"#hotplug\">hotplug</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#hotplug_slot_info\">hotplug_slot_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hotplug\">hotplug</a> || !<a class=\"id\" href=\"#info\">info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#hotplug\">hotplug</a>-><a class=\"id\" href=\"#pci_slot\">pci_slot</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#hotplug\">hotplug</a>-><a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#info\">info</a>, sizeof(struct <a class=\"id\" href=\"#hotplug_slot_info\">hotplug_slot_info</a>));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pci_hotplug_init\">pci_hotplug_init</a> (void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#cpci_hotplug_init\">cpci_hotplug_init</a>(<a class=\"id\" href=\"#debug\">debug</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> (\"cpci_hotplug_init with error %d\\n\", <a class=\"id\" href=\"#result\">result</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_cpci\">err_cpci</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a> (<a class=\"id\" href=\"#DRIVER_DESC\">DRIVER_DESC</a> \" version: \" <a class=\"id\" href=\"#DRIVER_VERSION\">DRIVER_VERSION</a> \"\\n\");", 
"", 
"<a class=\"id\" href=\"#err_cpci\">err_cpci</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#pci_hotplug_exit\">pci_hotplug_exit</a> (void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpci_hotplug_exit\">cpci_hotplug_exit</a>();", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#pci_hotplug_init\">pci_hotplug_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#pci_hotplug_exit\">pci_hotplug_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(<a class=\"id\" href=\"#DRIVER_AUTHOR\">DRIVER_AUTHOR</a>);", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(<a class=\"id\" href=\"#DRIVER_DESC\">DRIVER_DESC</a>);", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#debug\">debug</a>, <a class=\"id\" href=\"#bool\">bool</a>, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#debug\">debug</a>, \"Debugging mode enabled or not\");", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__pci_hp_register\">__pci_hp_register</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_hp_deregister\">pci_hp_deregister</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_hp_change_slot_info\">pci_hp_change_slot_info</a>);", 
];
xr_frag_insert('l/1b/7deecdd95b5d3522a3f4200f6d780f87efe84b.xr', __xr_tmp);
