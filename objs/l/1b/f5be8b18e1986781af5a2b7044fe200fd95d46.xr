var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>/<a class=\"id\" href=\"#nf_log\">nf_log</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"nf_internals.h\"", 
"", 
"<span class=\"comment\">/* Internal logging interface, which relies on the real</span>", 
"<span class=\"comment\">   LOG target modules */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NF_LOG_PREFIXLEN\">NF_LOG_PREFIXLEN</a><span class=\"ts\"/><span class=\"ts\"/>128", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NFLOGGER_NAME_LEN\">NFLOGGER_NAME_LEN</a><span class=\"ts\"/><span class=\"ts\"/>64", 
"", 
"static const struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#NFPROTO_NUMPROTO\">NFPROTO_NUMPROTO</a>] <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#nf_loggers_l\">nf_loggers_l</a>[<a class=\"id\" href=\"#NFPROTO_NUMPROTO\">NFPROTO_NUMPROTO</a>] <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"", 
"static struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#__find_logger\">__find_logger</a>(int <a class=\"id\" href=\"#pf\">pf</a>, const char *<a class=\"id\" href=\"#str_logger\">str_logger</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#nf_loggers_l\">nf_loggers_l</a>[<a class=\"id\" href=\"#pf\">pf</a>], <a class=\"id\" href=\"#list\">list</a>[<a class=\"id\" href=\"#pf\">pf</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strnicmp\">strnicmp</a>(<a class=\"id\" href=\"#str_logger\">str_logger</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#name\">name</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* return EEXIST if the same logger is registred, 0 on success. */</span>", 
"int <a class=\"id\" href=\"#nf_log_register\">nf_log_register</a>(<a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>, struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#logger\">logger</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#llog\">llog</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pf\">pf</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#list\">list</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#list\">list</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pf\">pf</a> == <a class=\"id\" href=\"#NFPROTO_UNSPEC\">NFPROTO_UNSPEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#NFPROTO_UNSPEC\">NFPROTO_UNSPEC</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NFPROTO_NUMPROTO\">NFPROTO_NUMPROTO</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;(<a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#list\">list</a>[<a class=\"id\" href=\"#i\">i</a>]), &amp;(<a class=\"id\" href=\"#nf_loggers_l\">nf_loggers_l</a>[<a class=\"id\" href=\"#i\">i</a>]));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* register at end of list to honor first register win */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#list\">list</a>[<a class=\"id\" href=\"#pf\">pf</a>], &amp;<a class=\"id\" href=\"#nf_loggers_l\">nf_loggers_l</a>[<a class=\"id\" href=\"#pf\">pf</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#llog\">llog</a> = <a class=\"id\" href=\"#rcu_dereference_protected\">rcu_dereference_protected</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#pf\">pf</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#lockdep_is_held\">lockdep_is_held</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#llog\">llog</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#pf\">pf</a>], <a class=\"id\" href=\"#logger\">logger</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_log_register\">nf_log_register</a>);", 
"", 
"void <a class=\"id\" href=\"#nf_log_unregister\">nf_log_unregister</a>(struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#logger\">logger</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#c_logger\">c_logger</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c_logger\">c_logger</a> = <a class=\"id\" href=\"#rcu_dereference_protected\">rcu_dereference_protected</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#lockdep_is_held\">lockdep_is_held</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c_logger\">c_logger</a> == <a class=\"id\" href=\"#logger\">logger</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#list\">list</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_log_unregister\">nf_log_unregister</a>);", 
"", 
"int <a class=\"id\" href=\"#nf_log_bind_pf\">nf_log_bind_pf</a>(<a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>, const struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#logger\">logger</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__find_logger\">__find_logger</a>(<a class=\"id\" href=\"#pf\">pf</a>, <a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#name\">name</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#pf\">pf</a>], <a class=\"id\" href=\"#logger\">logger</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_log_bind_pf\">nf_log_bind_pf</a>);", 
"", 
"void <a class=\"id\" href=\"#nf_log_unbind_pf\">nf_log_unbind_pf</a>(<a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#pf\">pf</a>], <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_log_unbind_pf\">nf_log_unbind_pf</a>);", 
"", 
"void <a class=\"id\" href=\"#nf_log_packet\">nf_log_packet</a>(<a class=\"id\" href=\"#u_int8_t\">u_int8_t</a> <a class=\"id\" href=\"#pf\">pf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#hooknum\">hooknum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#in\">in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#out\">out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#nf_loginfo\">nf_loginfo</a> *<a class=\"id\" href=\"#loginfo\">loginfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#prefix\">prefix</a>[<a class=\"id\" href=\"#NF_LOG_PREFIXLEN\">NF_LOG_PREFIXLEN</a>];", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#logger\">logger</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#logger\">logger</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#pf\">pf</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#logger\">logger</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#va_start\">va_start</a>(<a class=\"id\" href=\"#args\">args</a>, <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vsnprintf\">vsnprintf</a>(<a class=\"id\" href=\"#prefix\">prefix</a>, sizeof(<a class=\"id\" href=\"#prefix\">prefix</a>), <a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#va_end\">va_end</a>(<a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#logfn\">logfn</a>(<a class=\"id\" href=\"#pf\">pf</a>, <a class=\"id\" href=\"#hooknum\">hooknum</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#out\">out</a>, <a class=\"id\" href=\"#loginfo\">loginfo</a>, <a class=\"id\" href=\"#prefix\">prefix</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#nf_log_packet\">nf_log_packet</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"static void *<a class=\"id\" href=\"#seq_start\">seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#seq_next\">seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#seq_stop\">seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#seq_show\">seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#s\">s</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#logger\">logger</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#logger\">logger</a> = <a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[*<a class=\"id\" href=\"#pos\">pos</a>];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#logger\">logger</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%2lld NONE (\", *<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%2lld %s (\", *<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#nf_loggers_l\">nf_loggers_l</a>[*<a class=\"id\" href=\"#pos\">pos</a>], <a class=\"id\" href=\"#list\">list</a>[*<a class=\"id\" href=\"#pos\">pos</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%s\", <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#list\">list</a>[*<a class=\"id\" href=\"#pos\">pos</a>] != <a class=\"id\" href=\"#nf_loggers_l\">nf_loggers_l</a>[*<a class=\"id\" href=\"#pos\">pos</a>].<a class=\"id\" href=\"#prev\">prev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \",\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \")\\n\");", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#nflog_seq_ops\">nflog_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_start\">seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_next\">seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_stop\">seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_show\">seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#nflog_open\">nflog_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#nflog_seq_ops\">nflog_seq_ops</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#nflog_file_ops\">nflog_file_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/> = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/> = <a class=\"id\" href=\"#nflog_open\">nflog_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* PROC_FS */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSCTL\">CONFIG_SYSCTL</a>", 
"static struct <a class=\"id\" href=\"#ctl_path\">ctl_path</a> <a class=\"id\" href=\"#nf_log_sysctl_path\">nf_log_sysctl_path</a>[] = {", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#procname\">procname</a> = \"net\", },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#procname\">procname</a> = \"netfilter\", },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#procname\">procname</a> = \"nf_log\", },", 
"<span class=\"ts\"/>{ }", 
"};", 
"", 
"static char <a class=\"id\" href=\"#nf_log_sysctl_fnames\">nf_log_sysctl_fnames</a>[<a class=\"id\" href=\"#NFPROTO_NUMPROTO\">NFPROTO_NUMPROTO</a>-<a class=\"id\" href=\"#NFPROTO_UNSPEC\">NFPROTO_UNSPEC</a>][3];", 
"static struct <a class=\"id\" href=\"#ctl_table\">ctl_table</a> <a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>[<a class=\"id\" href=\"#NFPROTO_NUMPROTO\">NFPROTO_NUMPROTO</a>+1];", 
"static struct <a class=\"id\" href=\"#ctl_table_header\">ctl_table_header</a> *<a class=\"id\" href=\"#nf_log_dir_header\">nf_log_dir_header</a>;", 
"", 
"static int <a class=\"id\" href=\"#nf_log_proc_dostring\">nf_log_proc_dostring</a>(<a class=\"id\" href=\"#ctl_table\">ctl_table</a> *<a class=\"id\" href=\"#table\">table</a>, int <a class=\"id\" href=\"#write\">write</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#nf_logger\">nf_logger</a> *<a class=\"id\" href=\"#logger\">logger</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#NFLOGGER_NAME_LEN\">NFLOGGER_NAME_LEN</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = *<a class=\"id\" href=\"#lenp\">lenp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tindex\">tindex</a> = (unsigned long)<a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#extra1\">extra1</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write\">write</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; sizeof(<a class=\"id\" href=\"#buf\">buf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"NONE\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_unbind_pf\">nf_log_unbind_pf</a>(<a class=\"id\" href=\"#tindex\">tindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logger\">logger</a> = <a class=\"id\" href=\"#__find_logger\">__find_logger</a>(<a class=\"id\" href=\"#tindex\">tindex</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#logger\">logger</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#tindex\">tindex</a>], <a class=\"id\" href=\"#logger\">logger</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#logger\">logger</a> = <a class=\"id\" href=\"#nf_loggers\">nf_loggers</a>[<a class=\"id\" href=\"#tindex\">tindex</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#logger\">logger</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#data\">data</a> = \"NONE\";", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#logger\">logger</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#proc_dostring\">proc_dostring</a>(<a class=\"id\" href=\"#table\">table</a>, <a class=\"id\" href=\"#write\">write</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#lenp\">lenp</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nf_log_mutex\">nf_log_mutex</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#netfilter_log_sysctl_init\">netfilter_log_sysctl_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#NFPROTO_UNSPEC\">NFPROTO_UNSPEC</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NFPROTO_NUMPROTO\">NFPROTO_NUMPROTO</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#nf_log_sysctl_fnames\">nf_log_sysctl_fnames</a>[<a class=\"id\" href=\"#i\">i</a>-<a class=\"id\" href=\"#NFPROTO_UNSPEC\">NFPROTO_UNSPEC</a>], 3, \"%d\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#procname\">procname</a><span class=\"ts\"/>=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_sysctl_fnames\">nf_log_sysctl_fnames</a>[<a class=\"id\" href=\"#i\">i</a>-<a class=\"id\" href=\"#NFPROTO_UNSPEC\">NFPROTO_UNSPEC</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#maxlen\">maxlen</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NFLOGGER_NAME_LEN\">NFLOGGER_NAME_LEN</a> * sizeof(char);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#mode\">mode</a> = 0644;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#proc_handler\">proc_handler</a> = <a class=\"id\" href=\"#nf_log_proc_dostring\">nf_log_proc_dostring</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#extra1\">extra1</a> = (void *)(unsigned long) <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_log_dir_header\">nf_log_dir_header</a> = <a class=\"id\" href=\"#register_sysctl_paths\">register_sysctl_paths</a>(<a class=\"id\" href=\"#nf_log_sysctl_path\">nf_log_sysctl_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#nf_log_sysctl_table\">nf_log_sysctl_table</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nf_log_dir_header\">nf_log_dir_header</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
];
xr_frag_insert('l/1b/f5be8b18e1986781af5a2b7044fe200fd95d46.xr', __xr_tmp);
