var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#need_write_seek\">need_write_seek</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_list_peek\">bio_list_peek</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#write_queue\">write_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a> && (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> == <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#last_write\">last_write</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_write_seek\">need_write_seek</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_write_seek\">need_write_seek</a> && <a class=\"id\" href=\"#reads_queued\">reads_queued</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pending_bios\">pending_bios</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": write, waiting\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_flush_cache\">pkt_flush_cache</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#writing\">writing</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#reads_queued\">reads_queued</a> && <a class=\"id\" href=\"#writes_queued\">writes_queued</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pending_bios\">pending_bios</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": read, waiting\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#writing\">writing</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#writing\">writing</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_list_pop\">bio_list_pop</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#write_queue\">write_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_list_pop\">bio_list_pop</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#read_queue\">read_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#successive_reads\">successive_reads</a> += <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> >> 10;", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#successive_reads\">successive_reads</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#last_write\">last_write</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> + <a class=\"id\" href=\"#bio_sectors\">bio_sectors</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#successive_reads\">successive_reads</a> >= <a class=\"id\" href=\"#HI_SPEED_SWITCH\">HI_SPEED_SWITCH</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a> == <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_speed\">write_speed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a> = <a class=\"id\" href=\"#MAX_SPEED\">MAX_SPEED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_speed\">pkt_set_speed</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_speed\">write_speed</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a> != <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_speed\">write_speed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_speed\">write_speed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_speed\">pkt_set_speed</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_speed\">write_speed</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pending_bios\">pending_bios</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#generic_make_request\">generic_make_request</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Special care is needed if the underlying block device has a small</span>", 
"<span class=\"comment\"> * max_phys_segments value.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_set_segment_merging\">pkt_set_segment_merging</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> << 9) / <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>", 
"<span class=\"ts\"/>    <= <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The cdrom device can handle one segment/frame</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#PACKET_MERGE_SEGS\">PACKET_MERGE_SEGS</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else if ((<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> << 9) / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>   <= <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We can handle this case at the expense of some extra memory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * copies during write operations</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#PACKET_MERGE_SEGS\">PACKET_MERGE_SEGS</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": cdrom max_phys_segments too small\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copy CD_FRAMESIZE bytes from src_bio into a destination page</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pkt_copy_bio_data\">pkt_copy_bio_data</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#src_bio\">src_bio</a>, int <a class=\"id\" href=\"#seg\">seg</a>, int <a class=\"id\" href=\"#offs\">offs</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#dst_page\">dst_page</a>, int <a class=\"id\" href=\"#dst_offs\">dst_offs</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#copy_size\">copy_size</a> = <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#copy_size\">copy_size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#src_bvl\">src_bvl</a> = <a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>(<a class=\"id\" href=\"#src_bio\">src_bio</a>, <a class=\"id\" href=\"#seg\">seg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#vfrom\">vfrom</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> + <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#vto\">vto</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#dst_page\">dst_page</a>) + <a class=\"id\" href=\"#dst_offs\">dst_offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(int, <a class=\"id\" href=\"#copy_size\">copy_size</a>, <a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> - <a class=\"id\" href=\"#offs\">offs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#len\">len</a> &lt; 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#vto\">vto</a>, <a class=\"id\" href=\"#vfrom\">vfrom</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#vfrom\">vfrom</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seg\">seg</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_offs\">dst_offs</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_size\">copy_size</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copy all data for this packet to pkt-&gt;pages[], so that</span>", 
"<span class=\"comment\"> * a) The number of required segments for the write bio is minimized, which</span>", 
"<span class=\"comment\"> *    is necessary for some scsi controllers.</span>", 
"<span class=\"comment\"> * b) The data can be used as cache to avoid read requests if we receive a</span>", 
"<span class=\"comment\"> *    new write request for the same zone.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pkt_make_local_copy\">pkt_make_local_copy</a>(struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>, struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#offs\">offs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy all data to pkt-&gt;pages[] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#f\">f</a> = 0; <a class=\"id\" href=\"#f\">f</a> &lt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>; <a class=\"id\" href=\"#f\">f</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_page\">bv_page</a> != <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#p\">p</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#vfrom\">vfrom</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>) + <a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_offset\">bv_offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#vto\">vto</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#p\">p</a>]) + <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#vto\">vto</a>, <a class=\"id\" href=\"#vfrom\">vfrom</a>, <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#vfrom\">vfrom</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_page\">bv_page</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#p\">p</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_offset\">bv_offset</a> = <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_offset\">bv_offset</a> != <a class=\"id\" href=\"#offs\">offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> += <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offs\">offs</a> >= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_end_io_read\">pkt_end_io_read</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#pd\">pd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_end_io_read: bio=%p sec0=%llx sec=%llx err=%d\\n\", <a class=\"id\" href=\"#bio\">bio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>, (unsigned long long)<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_errors\">io_errors</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_wait\">io_wait</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_bio_finished\">pkt_bio_finished</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_end_io_packet_write\">pkt_end_io_packet_write</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, int <a class=\"id\" href=\"#err\">err</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pd\">pd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#pd\">pd</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_end_io_packet_write: id=%d, err=%d\\n\", <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#pkt_ended\">pkt_ended</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_bio_finished\">pkt_bio_finished</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_wait\">io_wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Schedule reads for the holes in a packet</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pkt_gather_data\">pkt_gather_data</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#frames_read\">frames_read</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#written\">written</a>[<a class=\"id\" href=\"#PACKET_MAX_SIZE\">PACKET_MAX_SIZE</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#bio_list_empty\">bio_list_empty</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#orig_bios\">orig_bios</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_wait\">io_wait</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_errors\">io_errors</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Figure out which frames we need to read before we can write.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#written\">written</a>, 0, sizeof(<a class=\"id\" href=\"#written\">written</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_list_for_each\">bio_list_for_each</a>(<a class=\"id\" href=\"#bio\">bio</a>, &amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#orig_bios\">orig_bios</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#first_frame\">first_frame</a> = (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> - <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>) / (<a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a> >> 9);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#num_frames\">num_frames</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> / <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#secs_w\">secs_w</a> += <a class=\"id\" href=\"#num_frames\">num_frames</a> * (<a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a> >> 9);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#first_frame\">first_frame</a> &lt; 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#first_frame\">first_frame</a> + <a class=\"id\" href=\"#num_frames\">num_frames</a> &gt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#first_frame\">first_frame</a>; <a class=\"id\" href=\"#f\">f</a> &lt; <a class=\"id\" href=\"#first_frame\">first_frame</a> + <a class=\"id\" href=\"#num_frames\">num_frames</a>; <a class=\"id\" href=\"#f\">f</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#written\">written</a>[<a class=\"id\" href=\"#f\">f</a>] = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#cache_valid\">cache_valid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_gather_data: zone %llx cached\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_account\">out_account</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Schedule reads for missing parts of the packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#f\">f</a> = 0; <a class=\"id\" href=\"#f\">f</a> &lt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>; <a class=\"id\" href=\"#f\">f</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#vec\">vec</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#written\">written</a>[<a class=\"id\" href=\"#f\">f</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#r_bios\">r_bios</a>[<a class=\"id\" href=\"#f\">f</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vec\">vec</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_init\">bio_init</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_max_vecs\">bi_max_vecs</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a> + <a class=\"id\" href=\"#f\">f</a> * (<a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a> >> 9);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#pkt_end_io_read\">pkt_end_io_read</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = <a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a> = <a class=\"id\" href=\"#vec\">vec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_destructor\">bi_destructor</a> = <a class=\"id\" href=\"#pkt_bio_destructor\">pkt_bio_destructor</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (<a class=\"id\" href=\"#f\">f</a> * <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>) / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#f\">f</a> * <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>) % <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_gather_data: Adding frame %d, page:%p offs:%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#p\">p</a>], <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_add_page\">bio_add_page</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#p\">p</a>], <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>, <a class=\"id\" href=\"#offset\">offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_wait\">io_wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> = <a class=\"id\" href=\"#READ\">READ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_queue_bio\">pkt_queue_bio</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frames_read\">frames_read</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out_account\">out_account</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_gather_data: need %d frames for zone %llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frames_read\">frames_read</a>, (unsigned long long)<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#pkt_started\">pkt_started</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#stats\">stats</a>.<a class=\"id\" href=\"#secs_rg\">secs_rg</a> += <a class=\"id\" href=\"#frames_read\">frames_read</a> * (<a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a> >> 9);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find a packet matching zone, or the least recently used packet if</span>", 
"<span class=\"comment\"> * there is no match.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt_get_packet_data\">pkt_get_packet_data</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, int <a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_free_list\">pkt_free_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a> == <a class=\"id\" href=\"#zone\">zone</a> || <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a> == &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_free_list\">pkt_free_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del_init\">list_del_init</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a> != <a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#cache_valid\">cache_valid</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_put_packet_data\">pkt_put_packet_data</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#cache_valid\">cache_valid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_free_list\">pkt_free_list</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_free_list\">pkt_free_list</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * recover a failed write, query for relocation if possible</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * returns 1 if recovery is possible, or 0 if not</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_start_recovery\">pkt_start_recovery</a>(struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME. We need help from the file system to implement</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * recovery handling.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return 0;", 
"#if 0", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rq_disk\">rq_disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#pkt_bdev\">pkt_bdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#old_block\">old_block</a>, <a class=\"id\" href=\"#new_block\">new_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#new_sector\">new_sector</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_bdev\">pkt_bdev</a> = <a class=\"id\" href=\"#bdget\">bdget</a>(<a class=\"id\" href=\"#kdev_t_to_nr\">kdev_t_to_nr</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#pkt_dev\">pkt_dev</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt_bdev\">pkt_bdev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#get_super\">get_super</a>(<a class=\"id\" href=\"#pkt_bdev\">pkt_bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bdput\">bdput</a>(<a class=\"id\" href=\"#pkt_bdev\">pkt_bdev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a> || !<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a>-><a class=\"id\" href=\"#relocate_blocks\">relocate_blocks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_block\">old_block</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a> / (<a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a> >> 9);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a>-><a class=\"id\" href=\"#relocate_blocks\">relocate_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#old_block\">old_block</a>, &amp;<a class=\"id\" href=\"#new_block\">new_block</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_sector\">new_sector</a> = <a class=\"id\" href=\"#new_block\">new_block</a> * (<a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a> >> 9);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#new_sector\">new_sector</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> = <a class=\"id\" href=\"#new_sector\">new_sector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_next\">bi_next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a> = 1 << <a class=\"id\" href=\"#BIO_UPTODATE\">BIO_UPTODATE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_idx\">bi_idx</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> != <a class=\"id\" href=\"#REQ_WRITE\">REQ_WRITE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> != <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> != <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a> * <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> != <a class=\"id\" href=\"#pkt_end_io_packet_write\">pkt_end_io_packet_write</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> != <a class=\"id\" href=\"#pkt\">pkt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drop_super\">drop_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drop_super\">drop_super</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>, enum <a class=\"id\" href=\"#packet_data_state\">packet_data_state</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"#if <a class=\"id\" href=\"#PACKET_DEBUG\">PACKET_DEBUG</a> &gt; 1", 
"<span class=\"ts\"/>static const char *<a class=\"id\" href=\"#state_name\">state_name</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>\"IDLE\", \"WAITING\", \"READ_WAIT\", \"WRITE_WAIT\", \"RECOVERY\", \"FINISHED\"", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#packet_data_state\">packet_data_state</a> <a class=\"id\" href=\"#old_state\">old_state</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt %2d : s=%6llx %s -> %s\\n\", <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#id\">id</a>, (unsigned long long)<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state_name\">state_name</a>[<a class=\"id\" href=\"#old_state\">old_state</a>], <a class=\"id\" href=\"#state_name\">state_name</a>[<a class=\"id\" href=\"#state\">state</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#state\">state</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Scan the work queue to see if we can start a new packet.</span>", 
"<span class=\"comment\"> * returns non-zero if any work was done.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_handle_queue\">pkt_handle_queue</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>, *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#zone\">zone</a> = 0; <span class=\"comment\">/* Suppress gcc warning */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pkt_rb_node\">pkt_rb_node</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#first_node\">first_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#wakeup\">wakeup</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"handle_queue\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#scan_queue\">scan_queue</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_free_list\">pkt_free_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"handle_queue: no pkt\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Try to find a zone we are not already working on.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first_node\">first_node</a> = <a class=\"id\" href=\"#pkt_rbtree_find\">pkt_rbtree_find</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#current_sector\">current_sector</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first_node\">first_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue\">bio_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_node\">first_node</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#pkt_rb_node\">pkt_rb_node</a>, <a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#first_node\">first_node</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#ZONE\">ZONE</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>, <a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sector\">sector</a> == <a class=\"id\" href=\"#zone\">zone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#try_next_bio\">try_next_bio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<a class=\"id\" href=\"#try_next_bio\">try_next_bio</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#pkt_rbtree_next\">pkt_rbtree_next</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue\">bio_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#n\">n</a>, struct <a class=\"id\" href=\"#pkt_rb_node\">pkt_rb_node</a>, <a class=\"id\" href=\"#rb_node\">rb_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> == <a class=\"id\" href=\"#first_node\">first_node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"handle_queue: no bio\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a> = <a class=\"id\" href=\"#pkt_get_packet_data\">pkt_get_packet_data</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#zone\">zone</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#current_sector\">current_sector</a> = <a class=\"id\" href=\"#zone\">zone</a> + <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a> = <a class=\"id\" href=\"#zone\">zone</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a> != <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> >> 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#write_size\">write_size</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Scan work queue for bios in the same zone and link them</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to this packet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_handle_queue: looking for zone %llx\\n\", (unsigned long long)<a class=\"id\" href=\"#zone\">zone</a>);", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#pkt_rbtree_find\">pkt_rbtree_find</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#zone\">zone</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_handle_queue: found zone=%llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#ZONE\">ZONE</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>, <a class=\"id\" href=\"#pd\">pd</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ZONE\">ZONE</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>, <a class=\"id\" href=\"#pd\">pd</a>) != <a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_rbtree_erase\">pkt_rbtree_erase</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_list_add\">bio_list_add</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#orig_bios\">orig_bios</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#write_size\">write_size</a> += <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> / <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* check write congestion marks, and if bio_queue_size is</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   below, wake up any waiters */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wakeup\">wakeup</a> = (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_on\">write_congestion_on</a> &gt; 0", 
"<span class=\"ts\"/> <span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bio_queue_size\">bio_queue_size</a> <= <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_congestion_off\">write_congestion_off</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wakeup\">wakeup</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bdi_congested\">clear_bdi_congested</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BLK_RW_ASYNC\">BLK_RW_ASYNC</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#PACKET_WAIT_TIME\">PACKET_WAIT_TIME</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_WAITING_STATE\">PACKET_WAITING_STATE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>, 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Assemble a bio to write one packet and queue the bio for processing</span>", 
"<span class=\"comment\"> * by the underlying block device.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pkt_start_write\">pkt_start_write</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#frames_write\">frames_write</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#f\">f</a> = 0; <a class=\"id\" href=\"#f\">f</a> &lt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>; <a class=\"id\" href=\"#f\">f</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_page\">bv_page</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#pages\">pages</a>[(<a class=\"id\" href=\"#f\">f</a> * <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>) / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_offset\">bv_offset</a> = (<a class=\"id\" href=\"#f\">f</a> * <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>) % <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fill-in bvec with data from orig_bios.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frames_write\">frames_write</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_list_for_each\">bio_list_for_each</a>(<a class=\"id\" href=\"#bio\">bio</a>, &amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#orig_bios\">orig_bios</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#segment\">segment</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_idx\">bi_idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#src_offs\">src_offs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#first_frame\">first_frame</a> = (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> - <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>) / (<a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a> >> 9);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#num_frames\">num_frames</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> / <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#first_frame\">first_frame</a> &lt; 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#first_frame\">first_frame</a> + <a class=\"id\" href=\"#num_frames\">num_frames</a> &gt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#first_frame\">first_frame</a>; <a class=\"id\" href=\"#f\">f</a> &lt; <a class=\"id\" href=\"#first_frame\">first_frame</a> + <a class=\"id\" href=\"#num_frames\">num_frames</a>; <a class=\"id\" href=\"#f\">f</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#src_bvl\">src_bvl</a> = <a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#segment\">segment</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#src_offs\">src_offs</a> >= <a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src_offs\">src_offs</a> -= <a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segment\">segment</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#segment\">segment</a> >= <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src_bvl\">src_bvl</a> = <a class=\"id\" href=\"#bio_iovec_idx\">bio_iovec_idx</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#segment\">segment</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> - <a class=\"id\" href=\"#src_offs\">src_offs</a> >= <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_page\">bv_page</a> = <a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_offset\">bv_offset</a> = <a class=\"id\" href=\"#src_bvl\">src_bvl</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> + <a class=\"id\" href=\"#src_offs\">src_offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_copy_bio_data\">pkt_copy_bio_data</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#segment\">segment</a>, <a class=\"id\" href=\"#src_offs\">src_offs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_offset\">bv_offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src_offs\">src_offs</a> += <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frames_write\">frames_write</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_WRITE_WAIT_STATE\">PACKET_WRITE_WAIT_STATE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_start_write: Writing %d frames for zone %llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frames_write\">frames_write</a>, (unsigned long long)<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#frames_write\">frames_write</a> != <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#write_size\">write_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#PACKET_MERGE_SEGS\">PACKET_MERGE_SEGS</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>) || (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#write_size\">write_size</a> &lt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_make_local_copy\">pkt_make_local_copy</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#bvec\">bvec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#cache_valid\">cache_valid</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#cache_valid\">cache_valid</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start the write request */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_init\">bio_init</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_max_vecs\">bi_max_vecs</a> = <a class=\"id\" href=\"#PACKET_MAX_SIZE\">PACKET_MAX_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sector\">sector</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_end_io\">bi_end_io</a> = <a class=\"id\" href=\"#pkt_end_io_packet_write\">pkt_end_io_packet_write</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = <a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a> = <a class=\"id\" href=\"#bvec\">bvec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_destructor\">bi_destructor</a> = <a class=\"id\" href=\"#pkt_bio_destructor\">pkt_bio_destructor</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#f\">f</a> = 0; <a class=\"id\" href=\"#f\">f</a> &lt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>; <a class=\"id\" href=\"#f\">f</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_add_page\">bio_add_page</a>(<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>, <a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#CD_FRAMESIZE\">CD_FRAMESIZE</a>, <a class=\"id\" href=\"#bvec\">bvec</a>[<a class=\"id\" href=\"#f\">f</a>].<a class=\"id\" href=\"#bv_offset\">bv_offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": vcnt=%d\\n\", <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_wait\">io_wait</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> = <a class=\"id\" href=\"#WRITE\">WRITE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_queue_bio\">pkt_queue_bio</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_finish_packet\">pkt_finish_packet</a>(struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>, int <a class=\"id\" href=\"#uptodate\">uptodate</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#uptodate\">uptodate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#cache_valid\">cache_valid</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Finish all bios corresponding to this packet */</span>", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_list_pop\">bio_list_pop</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#orig_bios\">orig_bios</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_endio\">bio_endio</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#uptodate\">uptodate</a> ? 0 : -<a class=\"id\" href=\"#EIO\">EIO</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_run_state_machine\">pkt_run_state_machine</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#uptodate\">uptodate</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"run_state_machine: pkt %d\\n\", <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PACKET_WAITING_STATE\">PACKET_WAITING_STATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#write_size\">write_size</a> &lt; <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#frames\">frames</a>) && (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> &gt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_gather_data\">pkt_gather_data</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pkt\">pkt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_READ_WAIT_STATE\">PACKET_READ_WAIT_STATE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PACKET_READ_WAIT_STATE\">PACKET_READ_WAIT_STATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_wait\">io_wait</a>) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_errors\">io_errors</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_RECOVERY_STATE\">PACKET_RECOVERY_STATE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_start_write\">pkt_start_write</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pkt\">pkt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PACKET_WRITE_WAIT_STATE\">PACKET_WRITE_WAIT_STATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#io_wait\">io_wait</a>) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#BIO_UPTODATE\">BIO_UPTODATE</a>, &amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_FINISHED_STATE\">PACKET_FINISHED_STATE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_RECOVERY_STATE\">PACKET_RECOVERY_STATE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PACKET_RECOVERY_STATE\">PACKET_RECOVERY_STATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt_start_recovery\">pkt_start_recovery</a>(<a class=\"id\" href=\"#pkt\">pkt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_start_write\">pkt_start_write</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pkt\">pkt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"No recovery possible\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_FINISHED_STATE\">PACKET_FINISHED_STATE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PACKET_FINISHED_STATE\">PACKET_FINISHED_STATE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uptodate\">uptodate</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#BIO_UPTODATE\">BIO_UPTODATE</a>, &amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#w_bio\">w_bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_finish_packet\">pkt_finish_packet</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#uptodate\">uptodate</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_handle_packets\">pkt_handle_packets</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"pkt_handle_packets\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Run state machine for active packets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_run_state_machine\">pkt_run_state_machine</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pkt\">pkt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Move no longer active packets to the free list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#PACKET_FINISHED_STATE\">PACKET_FINISHED_STATE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_put_packet_data\">pkt_put_packet_data</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#pkt\">pkt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_set_state\">pkt_set_state</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, <a class=\"id\" href=\"#PACKET_IDLE_STATE\">PACKET_IDLE_STATE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#scan_queue\">scan_queue</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_count_states\">pkt_count_states</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, int *<a class=\"id\" href=\"#states\">states</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PACKET_NUM_STATES\">PACKET_NUM_STATES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#state\">state</a>]++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#active_list_lock\">active_list_lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * kcdrwd is woken up when writes have been queued for one of our</span>", 
"<span class=\"comment\"> * registered devices</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#kcdrwd\">kcdrwd</a>(void *<a class=\"id\" href=\"#foobar\">foobar</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a> = <a class=\"id\" href=\"#foobar\">foobar</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_data\">packet_data</a> *<a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#min_sleep_time\">min_sleep_time</a>, <a class=\"id\" href=\"#residue\">residue</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_user_nice\">set_user_nice</a>(<a class=\"id\" href=\"#current\">current</a>, -20);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_freezable\">set_freezable</a>();", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Wait until there is something to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if we need to run pkt_handle_queue */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#scan_queue\">scan_queue</a>) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#work_to_do\">work_to_do</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if we need to run the state machine for some packet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>) &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#work_to_do\">work_to_do</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check if we need to process the iosched queues */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#iosched\">iosched</a>.<a class=\"id\" href=\"#attention\">attention</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#work_to_do\">work_to_do</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Otherwise, go to sleep */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PACKET_DEBUG\">PACKET_DEBUG</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#PACKET_NUM_STATES\">PACKET_NUM_STATES</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_count_states\">pkt_count_states</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#states\">states</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"kcdrwd: i:%d ow:%d rw:%d ww:%d rec:%d fin:%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#states\">states</a>[0], <a class=\"id\" href=\"#states\">states</a>[1], <a class=\"id\" href=\"#states\">states</a>[2], <a class=\"id\" href=\"#states\">states</a>[3],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#states\">states</a>[4], <a class=\"id\" href=\"#states\">states</a>[5]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_sleep_time\">min_sleep_time</a> = <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> && <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> &lt; <a class=\"id\" href=\"#min_sleep_time\">min_sleep_time</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_sleep_time\">min_sleep_time</a> = <a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#generic_unplug_device\">generic_unplug_device</a>(<a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#bdev\">bdev</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"kcdrwd: sleeping\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#residue\">residue</a> = <a class=\"id\" href=\"#schedule_timeout\">schedule_timeout</a>(<a class=\"id\" href=\"#min_sleep_time\">min_sleep_time</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"kcdrwd: wake up\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make swsusp happy with our thread */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#try_to_freeze\">try_to_freeze</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#pkt\">pkt</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#cdrw\">cdrw</a>.<a class=\"id\" href=\"#pkt_active_list\">pkt_active_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> -= <a class=\"id\" href=\"#min_sleep_time\">min_sleep_time</a> - <a class=\"id\" href=\"#residue\">residue</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#sleep_time\">sleep_time</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#pkt\">pkt</a>-><a class=\"id\" href=\"#run_sm\">run_sm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kthread_should_stop\">kthread_should_stop</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#work_to_do\">work_to_do</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#wqueue\">wqueue</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kthread_should_stop\">kthread_should_stop</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if pkt_handle_queue returns true, we can queue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * another request.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pkt_handle_queue\">pkt_handle_queue</a>(<a class=\"id\" href=\"#pd\">pd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Handle packet state machine</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_handle_packets\">pkt_handle_packets</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Handle iosched queues</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_iosched_process_queue\">pkt_iosched_process_queue</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pkt_print_settings\">pkt_print_settings</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s packets, \", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#fp\">fp</a> ? \"Fixed\" : \"Variable\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%u blocks, \", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> >> 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Mode-%c disc\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#block_mode\">block_mode</a> == 8 ? '1' : '2');", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_mode_sense\">pkt_mode_sense</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>, int <a class=\"id\" href=\"#page_code\">page_code</a>, int <a class=\"id\" href=\"#page_control\">page_control</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_MODE_SENSE_10\">GPCMD_MODE_SENSE_10</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[2] = <a class=\"id\" href=\"#page_code\">page_code</a> | (<a class=\"id\" href=\"#page_control\">page_control</a> << 6);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_mode_select\">pkt_mode_select</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, struct <a class=\"id\" href=\"#packet_command\">packet_command</a> *<a class=\"id\" href=\"#cgc\">cgc</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>, 0, sizeof(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buffer\">buffer</a>, 0, 2);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_MODE_SELECT_10\">GPCMD_MODE_SELECT_10</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[1] = 0x10;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PF */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[7] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#buflen\">buflen</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>-><a class=\"id\" href=\"#data_direction\">data_direction</a> = <a class=\"id\" href=\"#CGC_DATA_WRITE\">CGC_DATA_WRITE</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_get_disc_info\">pkt_get_disc_info</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#disc_information\">disc_information</a> *<a class=\"id\" href=\"#di\">di</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set up command and get the disc info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#di\">di</a>, sizeof(*<a class=\"id\" href=\"#di\">di</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_DISC_INFO\">GPCMD_READ_DISC_INFO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* not all drives have the same disc_info length, so requeue</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * packet with the length the drive tells us it can supply</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#disc_information_length\">disc_information_length</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     sizeof(<a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#disc_information_length\">disc_information_length</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> &gt; sizeof(<a class=\"id\" href=\"#disc_information\">disc_information</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = sizeof(<a class=\"id\" href=\"#disc_information\">disc_information</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_get_track_info\">pkt_get_track_info</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#__u16\">__u16</a> <a class=\"id\" href=\"#track\">track</a>, <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#track_information\">track_information</a> *<a class=\"id\" href=\"#ti\">ti</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#ti\">ti</a>, 8, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_TRACK_RZONE_INFO\">GPCMD_READ_TRACK_RZONE_INFO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = <a class=\"id\" href=\"#type\">type</a> &amp; 3;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = (<a class=\"id\" href=\"#track\">track</a> &amp; 0xff00) >> 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[5] = <a class=\"id\" href=\"#track\">track</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#be16_to_cpu\">be16_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#track_information_length\">track_information_length</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     sizeof(<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#track_information_length\">track_information_length</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> &gt; sizeof(<a class=\"id\" href=\"#track_information\">track_information</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = sizeof(<a class=\"id\" href=\"#track_information\">track_information</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int <a class=\"id\" href=\"#pkt_get_last_written\">pkt_get_last_written</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>long *<a class=\"id\" href=\"#last_written\">last_written</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disc_information\">disc_information</a> <a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#track_information\">track_information</a> <a class=\"id\" href=\"#ti\">ti</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#last_track\">last_track</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_get_disc_info\">pkt_get_disc_info</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#di\">di</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_track\">last_track</a> = (<a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#last_track_msb\">last_track_msb</a> << 8) | <a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#last_track_lsb\">last_track_lsb</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_get_track_info\">pkt_get_track_info</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#last_track\">last_track</a>, 1, &amp;<a class=\"id\" href=\"#ti\">ti</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if this track is blank, try the previous. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#blank\">blank</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_track\">last_track</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_get_track_info\">pkt_get_track_info</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#last_track\">last_track</a>, 1, &amp;<a class=\"id\" href=\"#ti\">ti</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if last recorded field is valid, return it. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#lra_v\">lra_v</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#last_written\">last_written</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#last_rec_address\">last_rec_address</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* make it up instead */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#last_written\">last_written</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#track_start\">track_start</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#track_size\">track_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#free_blocks\">free_blocks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#last_written\">last_written</a> -= (<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#free_blocks\">free_blocks</a>) + 7);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * write mode select package based on pd-&gt;settings</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int <a class=\"id\" href=\"#pkt_set_write_settings\">pkt_set_write_settings</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sense\">request_sense</a> <a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_param_page\">write_param_page</a> *<a class=\"id\" href=\"#wp\">wp</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[128];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* doesn't apply to DVD+RW or DVD-RAM */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a> == 0x1a) || (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a> == 0x12))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(*<a class=\"id\" href=\"#wp\">wp</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#sense\">sense</a> = &amp;<a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_mode_sense\">pkt_mode_sense</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_WRITE_PARMS_PAGE\">GPMODE_WRITE_PARMS_PAGE</a>, 0))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 2 + ((<a class=\"id\" href=\"#buffer\">buffer</a>[0] << 8) | (<a class=\"id\" href=\"#buffer\">buffer</a>[1] &amp; 0xff));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mode_offset\">mode_offset</a> = (<a class=\"id\" href=\"#buffer\">buffer</a>[6] << 8) | (<a class=\"id\" href=\"#buffer\">buffer</a>[7] &amp; 0xff);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * now get it all</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#sense\">sense</a> = &amp;<a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_mode_sense\">pkt_mode_sense</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_WRITE_PARMS_PAGE\">GPMODE_WRITE_PARMS_PAGE</a>, 0))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * write page is offset header + block descriptor length</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a> = (<a class=\"id\" href=\"#write_param_page\">write_param_page</a> *) &amp;<a class=\"id\" href=\"#buffer\">buffer</a>[sizeof(struct <a class=\"id\" href=\"#mode_page_header\">mode_page_header</a>) + <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mode_offset\">mode_offset</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#fp\">fp</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#fp\">fp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#track_mode\">track_mode</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#track_mode\">track_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#write_type\">write_type</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#write_type\">write_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#data_block_type\">data_block_type</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#block_mode\">block_mode</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#multi_session\">multi_session</a> = 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#PACKET_USE_LS\">PACKET_USE_LS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#link_size\">link_size</a> = 7;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#ls_v\">ls_v</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#data_block_type\">data_block_type</a> == <a class=\"id\" href=\"#PACKET_BLOCK_MODE1\">PACKET_BLOCK_MODE1</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#session_format\">session_format</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#subhdr2\">subhdr2</a> = 0x20;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#data_block_type\">data_block_type</a> == <a class=\"id\" href=\"#PACKET_BLOCK_MODE2\">PACKET_BLOCK_MODE2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#session_format\">session_format</a> = 0x20;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#subhdr2\">subhdr2</a> = 8;", 
"#if 0", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#mcn\">mcn</a>[0] = 0x80;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#mcn\">mcn</a>[1], <a class=\"id\" href=\"#PACKET_MCN\">PACKET_MCN</a>, sizeof(<a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#mcn\">mcn</a>) - 1);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * paranoia</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": write mode wrong %d\\n\", <a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#data_block_type\">data_block_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wp\">wp</a>-><a class=\"id\" href=\"#packet_size\">packet_size</a> = <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> >> 2);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_mode_select\">pkt_mode_select</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_print_settings\">pkt_print_settings</a>(<a class=\"id\" href=\"#pd\">pd</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 1 -- we can write to this track, 0 -- we can't</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_writable_track\">pkt_writable_track</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#track_information\">track_information</a> *<a class=\"id\" href=\"#ti\">ti</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x1a: <span class=\"comment\">/* DVD+RW */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x12: <span class=\"comment\">/* DVD-RAM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The track is always writable on DVD+RW/DVD-RAM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#packet\">packet</a> || !<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#fp\">fp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * \"good\" settings as per Mt Fuji.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#rt\">rt</a> == 0 && <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#blank\">blank</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#rt\">rt</a> == 0 && <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#blank\">blank</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#rt\">rt</a> == 1 && <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#blank\">blank</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": bad state %d-%d-%d\\n\", <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#rt\">rt</a>, <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#blank\">blank</a>, <a class=\"id\" href=\"#ti\">ti</a>-><a class=\"id\" href=\"#packet\">packet</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 1 -- we can write to this disc, 0 -- we can't</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pkt_writable_disc\">pkt_writable_disc</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#disc_information\">disc_information</a> *<a class=\"id\" href=\"#di\">di</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x0a: <span class=\"comment\">/* CD-RW */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0xffff: <span class=\"comment\">/* MMC3 not supported */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x1a: <span class=\"comment\">/* DVD+RW */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x13: <span class=\"comment\">/* DVD-RW */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x12: <span class=\"comment\">/* DVD-RAM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Wrong disc profile (%x)\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for disc type 0xff we should probably reserve a new track.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but i'm not sure, should we leave this to user apps? probably.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#disc_type\">disc_type</a> == 0xff) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Unknown disc. No track?\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#disc_type\">disc_type</a> != 0x20 && <a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#disc_type\">disc_type</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Wrong disc type (%x)\\n\", <a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#disc_type\">disc_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#erasable\">erasable</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Disc not erasable\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#di\">di</a>-><a class=\"id\" href=\"#border_status\">border_status</a> == <a class=\"id\" href=\"#PACKET_SESSION_RESERVED\">PACKET_SESSION_RESERVED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Can't write to last track (reserved)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int <a class=\"id\" href=\"#pkt_probe_settings\">pkt_probe_settings</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buf\">buf</a>[12];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disc_information\">disc_information</a> <a class=\"id\" href=\"#di\">di</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#track_information\">track_information</a> <a class=\"id\" href=\"#ti\">ti</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#track\">track</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_GET_CONFIGURATION\">GPCMD_GET_CONFIGURATION</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a> = <a class=\"id\" href=\"#ret\">ret</a> ? 0xffff : <a class=\"id\" href=\"#buf\">buf</a>[6] << 8 | <a class=\"id\" href=\"#buf\">buf</a>[7];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#di\">di</a>, 0, sizeof(<a class=\"id\" href=\"#disc_information\">disc_information</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ti\">ti</a>, 0, sizeof(<a class=\"id\" href=\"#track_information\">track_information</a>));", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_get_disc_info\">pkt_get_disc_info</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#di\">di</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"failed get_disc\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pkt_writable_disc\">pkt_writable_disc</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#di\">di</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#di\">di</a>.<a class=\"id\" href=\"#erasable\">erasable</a> ? <a class=\"id\" href=\"#PACKET_CDRW\">PACKET_CDRW</a> : <a class=\"id\" href=\"#PACKET_CDR\">PACKET_CDR</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#track\">track</a> = 1; <span class=\"comment\">/* (di.last_track_msb &lt;&lt; 8) | di.last_track_lsb; */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_get_track_info\">pkt_get_track_info</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#track\">track</a>, 1, &amp;<a class=\"id\" href=\"#ti\">ti</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": failed get_track\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pkt_writable_track\">pkt_writable_track</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#ti\">ti</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": can't write to this track\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we keep packet size in 512 byte units, makes it easier to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * deal with request calculations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#fixed_packet_size\">fixed_packet_size</a>) << 2;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": detected zero packet size!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#PACKET_MAX_SECTORS\">PACKET_MAX_SECTORS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": packet size is too big\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#fp\">fp</a> = <a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#fp\">fp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#offset\">offset</a> = (<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#track_start\">track_start</a>) << 2) &amp; (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#size\">size</a> - 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#nwa_v\">nwa_v</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#nwa\">nwa</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#next_writable\">next_writable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#PACKET_NWA_VALID\">PACKET_NWA_VALID</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in theory we could use lra on -RW media as well and just zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * blocks that haven't been written yet, but in practice that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is just a no-go. we'll use that for -R, naturally.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#lra_v\">lra_v</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lra\">lra</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#last_rec_address\">last_rec_address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#PACKET_LRA_VALID\">PACKET_LRA_VALID</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#lra\">lra</a> = 0xffffffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#PACKET_LRA_VALID\">PACKET_LRA_VALID</a>, &amp;<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fine for now</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#link_loss\">link_loss</a> = 7;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#write_type\">write_type</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* packet */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#track_mode\">track_mode</a> = <a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#track_mode\">track_mode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mode1 or mode2 disc</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ti\">ti</a>.<a class=\"id\" href=\"#data_mode\">data_mode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PACKET_MODE1\">PACKET_MODE1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#block_mode\">block_mode</a> = <a class=\"id\" href=\"#PACKET_BLOCK_MODE1\">PACKET_BLOCK_MODE1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#PACKET_MODE2\">PACKET_MODE2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#settings\">settings</a>.<a class=\"id\" href=\"#block_mode\">block_mode</a> = <a class=\"id\" href=\"#PACKET_BLOCK_MODE2\">PACKET_BLOCK_MODE2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": unknown data mode\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * enable/disable write caching on drive</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int <a class=\"id\" href=\"#pkt_write_caching\">pkt_write_caching</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sense\">request_sense</a> <a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#sense\">sense</a> = &amp;<a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mode_offset\">mode_offset</a> + 12;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * caching mode page might not be there, so quiet this command</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#quiet\">quiet</a> = 1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_mode_sense\">pkt_mode_sense</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_WCACHING_PAGE\">GPMODE_WCACHING_PAGE</a>, 0)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mode_offset\">mode_offset</a> + 10] |= (!!<a class=\"id\" href=\"#set\">set</a> << 2);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 2 + ((<a class=\"id\" href=\"#buf\">buf</a>[0] << 8) | (<a class=\"id\" href=\"#buf\">buf</a>[1] &amp; 0xff));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_mode_select\">pkt_mode_select</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": write caching control failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#ret\">ret</a> && <a class=\"id\" href=\"#set\">set</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": enabled write caching on %s\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_lock_door\">pkt_lock_door</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>, int <a class=\"id\" href=\"#lockflag\">lockflag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_PREVENT_ALLOW_MEDIUM_REMOVAL\">GPCMD_PREVENT_ALLOW_MEDIUM_REMOVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[4] = <a class=\"id\" href=\"#lockflag\">lockflag</a> ? 1 : 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns drive maximum write speed</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int <a class=\"id\" href=\"#pkt_get_max_speed\">pkt_get_max_speed</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned *<a class=\"id\" href=\"#write_speed\">write_speed</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sense\">request_sense</a> <a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buf\">buf</a>[256+18];", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#cap_buf\">cap_buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap_buf\">cap_buf</a> = &amp;<a class=\"id\" href=\"#buf\">buf</a>[sizeof(struct <a class=\"id\" href=\"#mode_page_header\">mode_page_header</a>) + <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mode_offset\">mode_offset</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), <a class=\"id\" href=\"#CGC_DATA_UNKNOWN\">CGC_DATA_UNKNOWN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#sense\">sense</a> = &amp;<a class=\"id\" href=\"#sense\">sense</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_mode_sense\">pkt_mode_sense</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_CAPABILITIES_PAGE\">GPMODE_CAPABILITIES_PAGE</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mode_offset\">mode_offset</a> + <a class=\"id\" href=\"#cap_buf\">cap_buf</a>[1] + 2 +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#mode_page_header\">mode_page_header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_mode_sense\">pkt_mode_sense</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#GPMODE_CAPABILITIES_PAGE\">GPMODE_CAPABILITIES_PAGE</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 20;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* Obsoleted field, used by older drives */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cap_buf\">cap_buf</a>[1] >= 28)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 28;<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* Current write speed selected */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cap_buf\">cap_buf</a>[1] >= 30) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the drive reports at least one \"Logical Unit Write</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Speed Performance Descriptor Block\", use the information</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in the first block. (contains the highest speed)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#num_spdb\">num_spdb</a> = (<a class=\"id\" href=\"#cap_buf\">cap_buf</a>[30] << 8) + <a class=\"id\" href=\"#cap_buf\">cap_buf</a>[31];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#num_spdb\">num_spdb</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 34;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#write_speed\">write_speed</a> = (<a class=\"id\" href=\"#cap_buf\">cap_buf</a>[<a class=\"id\" href=\"#offset\">offset</a>] << 8) | <a class=\"id\" href=\"#cap_buf\">cap_buf</a>[<a class=\"id\" href=\"#offset\">offset</a> + 1];", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* These tables from cdrecord - I don't have orange book */</span>", 
"<span class=\"comment\">/* standard speed CD-RW (1-4x) */</span>", 
"static char <a class=\"id\" href=\"#clv_to_speed\">clv_to_speed</a>[16] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 */</span>", 
"<span class=\"ts\"/>   0, 2, 4, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", 
"};", 
"<span class=\"comment\">/* high speed CD-RW (-10x) */</span>", 
"static char <a class=\"id\" href=\"#hs_clv_to_speed\">hs_clv_to_speed</a>[16] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 */</span>", 
"<span class=\"ts\"/>   0, 2, 4, 6, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", 
"};", 
"<span class=\"comment\">/* ultra high speed CD-RW */</span>", 
"static char <a class=\"id\" href=\"#us_clv_to_speed\">us_clv_to_speed</a>[16] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 */</span>", 
"<span class=\"ts\"/>   0, 2, 4, 8, 0, 0,16, 0,24,32,40,48, 0, 0, 0, 0", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * reads the maximum media speed from ATIP</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int <a class=\"id\" href=\"#pkt_media_speed\">pkt_media_speed</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned *<a class=\"id\" href=\"#speed\">speed</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sense\">request_sense</a> <a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#st\">st</a>, <a class=\"id\" href=\"#sp\">sp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, 2, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#sense\">sense</a> = &amp;<a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_TOC_PMA_ATIP\">GPCMD_READ_TOC_PMA_ATIP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = 4; <span class=\"comment\">/* READ ATIP */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = ((unsigned int) <a class=\"id\" href=\"#buf\">buf</a>[0]<<8) + <a class=\"id\" href=\"#buf\">buf</a>[1] + 2;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; sizeof(<a class=\"id\" href=\"#buf\">buf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = sizeof(<a class=\"id\" href=\"#buf\">buf</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#CGC_DATA_READ\">CGC_DATA_READ</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#sense\">sense</a> = &amp;<a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_READ_TOC_PMA_ATIP\">GPCMD_READ_TOC_PMA_ATIP</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = 2;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[2] = 4;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[8] = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#buf\">buf</a>[6] &amp; 0x40)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Disc type is not CD-RW\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#buf\">buf</a>[6] &amp; 0x4)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": A1 values on media are not valid, maybe not CDRW?\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#st\">st</a> = (<a class=\"id\" href=\"#buf\">buf</a>[6] >> 3) &amp; 0x7; <span class=\"comment\">/* disc sub-type */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sp\">sp</a> = <a class=\"id\" href=\"#buf\">buf</a>[16] &amp; 0xf; <span class=\"comment\">/* max speed from ATIP A1 field */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Info from cdrecord */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#st\">st</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0: <span class=\"comment\">/* standard speed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#speed\">speed</a> = <a class=\"id\" href=\"#clv_to_speed\">clv_to_speed</a>[<a class=\"id\" href=\"#sp\">sp</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 1: <span class=\"comment\">/* high speed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#speed\">speed</a> = <a class=\"id\" href=\"#hs_clv_to_speed\">hs_clv_to_speed</a>[<a class=\"id\" href=\"#sp\">sp</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case 2: <span class=\"comment\">/* ultra high speed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#speed\">speed</a> = <a class=\"id\" href=\"#us_clv_to_speed\">us_clv_to_speed</a>[<a class=\"id\" href=\"#sp\">sp</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Unknown disc sub-type %d\\n\",<a class=\"id\" href=\"#st\">st</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#speed\">speed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Max. media speed: %d\\n\",*<a class=\"id\" href=\"#speed\">speed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Unknown speed %d for sub-type %d\\n\",<a class=\"id\" href=\"#sp\">sp</a>,<a class=\"id\" href=\"#st\">st</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline_for_stack\">noinline_for_stack</a> int <a class=\"id\" href=\"#pkt_perform_opc\">pkt_perform_opc</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_command\">packet_command</a> <a class=\"id\" href=\"#cgc\">cgc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sense\">request_sense</a> <a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": Performing OPC\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cdrom_command\">init_cdrom_command</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0, <a class=\"id\" href=\"#CGC_DATA_NONE\">CGC_DATA_NONE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#sense\">sense</a> = &amp;<a class=\"id\" href=\"#sense\">sense</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#timeout\">timeout</a> = 60*<a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[0] = <a class=\"id\" href=\"#GPCMD_SEND_OPC\">GPCMD_SEND_OPC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cgc\">cgc</a>.<a class=\"id\" href=\"#cmd\">cmd</a>[1] = 1;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_generic_packet\">pkt_generic_packet</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#cgc\">cgc</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pkt_dump_sense\">pkt_dump_sense</a>(&amp;<a class=\"id\" href=\"#cgc\">cgc</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pkt_open_write\">pkt_open_write</a>(struct <a class=\"id\" href=\"#pktcdvd_device\">pktcdvd_device</a> *<a class=\"id\" href=\"#pd\">pd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#write_speed\">write_speed</a>, <a class=\"id\" href=\"#media_write_speed\">media_write_speed</a>, <a class=\"id\" href=\"#read_speed\">read_speed</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_probe_settings\">pkt_probe_settings</a>(<a class=\"id\" href=\"#pd\">pd</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s failed probe\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_set_write_settings\">pkt_set_write_settings</a>(<a class=\"id\" href=\"#pd\">pd</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s failed saving write settings\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkt_write_caching\">pkt_write_caching</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#USE_WCACHING\">USE_WCACHING</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_get_max_speed\">pkt_get_max_speed</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#write_speed\">write_speed</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_speed\">write_speed</a> = 16 * 177;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#mmc3_profile\">mmc3_profile</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x13: <span class=\"comment\">/* DVD-RW */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x1a: <span class=\"comment\">/* DVD+RW */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0x12: <span class=\"comment\">/* DVD-RAM */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": write speed %ukB/s\\n\", <a class=\"id\" href=\"#write_speed\">write_speed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_media_speed\">pkt_media_speed</a>(<a class=\"id\" href=\"#pd\">pd</a>, &amp;<a class=\"id\" href=\"#media_write_speed\">media_write_speed</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#media_write_speed\">media_write_speed</a> = 16;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_speed\">write_speed</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#write_speed\">write_speed</a>, <a class=\"id\" href=\"#media_write_speed\">media_write_speed</a> * 177);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": write speed %ux\\n\", <a class=\"id\" href=\"#write_speed\">write_speed</a> / 176);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_speed\">read_speed</a> = <a class=\"id\" href=\"#write_speed\">write_speed</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_set_speed\">pkt_set_speed</a>(<a class=\"id\" href=\"#pd\">pd</a>, <a class=\"id\" href=\"#write_speed\">write_speed</a>, <a class=\"id\" href=\"#read_speed\">read_speed</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(<a class=\"id\" href=\"#DRIVER_NAME\">DRIVER_NAME</a>\": %s couldn't set write speed\\n\", <a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#write_speed\">write_speed</a> = <a class=\"id\" href=\"#write_speed\">write_speed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pd\">pd</a>-><a class=\"id\" href=\"#read_speed\">read_speed</a> = <a class=\"id\" href=\"#read_speed\">read_speed</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pkt_perform_opc\">pkt_perform_opc</a>(<a class=\"id\" href=\"#pd\">pd</a>))) {", 
];
xr_frag_insert('l/1c/12e07db62461c75ea3914dca4941053a0408d3.xr', __xr_tmp);
