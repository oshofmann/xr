var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_FLEX_ARRAY_H\">_FLEX_ARRAY_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_FLEX_ARRAY_H\">_FLEX_ARRAY_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FLEX_ARRAY_PART_SIZE\">FLEX_ARRAY_PART_SIZE</a> <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FLEX_ARRAY_BASE_SIZE\">FLEX_ARRAY_BASE_SIZE</a> <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>", 
"", 
"struct <a class=\"id\" href=\"#flex_array_part\">flex_array_part</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is meant to replace cases where an array-like</span>", 
"<span class=\"comment\"> * structure has gotten too big to fit into kmalloc()</span>", 
"<span class=\"comment\"> * and the developer is getting tempted to use</span>", 
"<span class=\"comment\"> * vmalloc().</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#flex_array\">flex_array</a> {", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#element_size\">element_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#total_nr_elements\">total_nr_elements</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#flex_array_part\">flex_array_part</a> *<a class=\"id\" href=\"#parts\">parts</a>[];", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This little trick makes sure that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sizeof(flex_array) == PAGE_SIZE</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#padding\">padding</a>[<a class=\"id\" href=\"#FLEX_ARRAY_BASE_SIZE\">FLEX_ARRAY_BASE_SIZE</a>];", 
"<span class=\"ts\"/>};", 
"};", 
"", 
"<span class=\"comment\">/* Number of bytes left in base struct flex_array, excluding metadata */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FLEX_ARRAY_BASE_BYTES_LEFT\">FLEX_ARRAY_BASE_BYTES_LEFT</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#FLEX_ARRAY_BASE_SIZE\">FLEX_ARRAY_BASE_SIZE</a> - <a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a>, <a class=\"id\" href=\"#parts\">parts</a>))", 
"", 
"<span class=\"comment\">/* Number of pointers in base to struct flex_array_part pages */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FLEX_ARRAY_NR_BASE_PTRS\">FLEX_ARRAY_NR_BASE_PTRS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#FLEX_ARRAY_BASE_BYTES_LEFT\">FLEX_ARRAY_BASE_BYTES_LEFT</a> / sizeof(struct <a class=\"id\" href=\"#flex_array_part\">flex_array_part</a> *))", 
"", 
"<span class=\"comment\">/* Number of elements of size that fit in struct flex_array_part */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FLEX_ARRAY_ELEMENTS_PER_PART\">FLEX_ARRAY_ELEMENTS_PER_PART</a>(<a class=\"id\" href=\"#size\">size</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#FLEX_ARRAY_PART_SIZE\">FLEX_ARRAY_PART_SIZE</a> / <a class=\"id\" href=\"#size\">size</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Defines a statically allocated flex array and ensures its parameters are</span>", 
"<span class=\"comment\"> * valid.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_FLEX_ARRAY\">DEFINE_FLEX_ARRAY</a>(<a class=\"id\" href=\"#__arrayname\">__arrayname</a>, <a class=\"id\" href=\"#__element_size\">__element_size</a>, <a class=\"id\" href=\"#__total\">__total</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#flex_array\">flex_array</a> <a class=\"id\" href=\"#__arrayname\">__arrayname</a> = { { {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#element_size\">element_size</a> = (<a class=\"id\" href=\"#__element_size\">__element_size</a>),<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#total_nr_elements\">total_nr_elements</a> = (<a class=\"id\" href=\"#__total\">__total</a>),<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} } };<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__arrayname\">__arrayname</a>##<a class=\"id\" href=\"#_invalid_parameter\">_invalid_parameter</a>(void)<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>((<a class=\"id\" href=\"#__total\">__total</a>) &gt; <a class=\"id\" href=\"#FLEX_ARRAY_NR_BASE_PTRS\">FLEX_ARRAY_NR_BASE_PTRS</a> *<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FLEX_ARRAY_ELEMENTS_PER_PART\">FLEX_ARRAY_ELEMENTS_PER_PART</a>(<a class=\"id\" href=\"#__element_size\">__element_size</a>));<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}", 
"", 
"struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#flex_array_alloc\">flex_array_alloc</a>(int <a class=\"id\" href=\"#element_size\">element_size</a>, unsigned int <a class=\"id\" href=\"#total\">total</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"int <a class=\"id\" href=\"#flex_array_prealloc\">flex_array_prealloc</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>, unsigned int <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"void <a class=\"id\" href=\"#flex_array_free\">flex_array_free</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>);", 
"void <a class=\"id\" href=\"#flex_array_free_parts\">flex_array_free_parts</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>);", 
"int <a class=\"id\" href=\"#flex_array_put\">flex_array_put</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>, unsigned int <a class=\"id\" href=\"#element_nr\">element_nr</a>, void *<a class=\"id\" href=\"#src\">src</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>);", 
"int <a class=\"id\" href=\"#flex_array_clear\">flex_array_clear</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>, unsigned int <a class=\"id\" href=\"#element_nr\">element_nr</a>);", 
"void *<a class=\"id\" href=\"#flex_array_get\">flex_array_get</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>, unsigned int <a class=\"id\" href=\"#element_nr\">element_nr</a>);", 
"int <a class=\"id\" href=\"#flex_array_shrink\">flex_array_shrink</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#flex_array_put_ptr\">flex_array_put_ptr</a>(<a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#gfp\">gfp</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flex_array_put\">flex_array_put</a>(<a class=\"id\" href=\"#fa\">fa</a>, <a class=\"id\" href=\"#nr\">nr</a>, &amp;(void *)(<a class=\"id\" href=\"#src\">src</a>), <a class=\"id\" href=\"#gfp\">gfp</a>)", 
"", 
"void *<a class=\"id\" href=\"#flex_array_get_ptr\">flex_array_get_ptr</a>(struct <a class=\"id\" href=\"#flex_array\">flex_array</a> *<a class=\"id\" href=\"#fa\">fa</a>, unsigned int <a class=\"id\" href=\"#element_nr\">element_nr</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _FLEX_ARRAY_H */</span>", 
];
xr_frag_insert('l/1c/226d676f65c3cde8dfef93038862ca6ae1415f.xr', __xr_tmp);
