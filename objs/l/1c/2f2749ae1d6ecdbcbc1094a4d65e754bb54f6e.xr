var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_bh\">old_bh</a> && <a class=\"id\" href=\"#old_bh\">old_bh</a> != <a class=\"id\" href=\"#new_bh\">new_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If there was an old block and we are no longer using it,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * release the old block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_get\">mb_cache_entry_get</a>(<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>, <a class=\"id\" href=\"#old_bh\">old_bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_bh\">old_bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> == <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Free the old block. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>, \"freeing\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_free_blocks\">ext2_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#old_bh\">old_bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We let our caller release old_bh, so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * need to duplicate the buffer before. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bforget\">bforget</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Decrement the refcount only. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_add_cpu\">le32_add_cpu</a>(&amp;<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_block_nodirty\">dquot_free_block_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>, \"refcount now=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#old_bh\">old_bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_delete_inode()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Free extended attribute resources associated with this inode. This</span>", 
"<span class=\"comment\"> * is called immediately before an inode is freed.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#ext2_xattr_delete_inode\">ext2_xattr_delete_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \"ext2_xattr_delete_inode\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %ld: block %d read error\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d\", <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT2_XATTR_MAGIC\">EXT2_XATTR_MAGIC</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \"ext2_xattr_delete_inode\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %ld: bad block %d\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_get\">mb_cache_entry_get</a>(<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> == <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_free_blocks\">ext2_free_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bforget\">bforget</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_add_cpu\">le32_add_cpu</a>(&amp;<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"refcount now=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SYNC\">IS_SYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_dirty_buffer\">sync_dirty_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_block_nodirty\">dquot_free_block_nodirty</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> = 0;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_put_super()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is called when a file system is unmounted.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#ext2_xattr_put_super\">ext2_xattr_put_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_shrink\">mb_cache_shrink</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_cache_insert()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create a new entry in the extended attribute cache, and insert</span>", 
"<span class=\"comment\"> * it unless such an entry is already in the cache.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext2_xattr_cache_insert\">ext2_xattr_cache_insert</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_hash\">h_hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_alloc\">mb_cache_entry_alloc</a>(<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mb_cache_entry_insert\">mb_cache_entry_insert</a>(<a class=\"id\" href=\"#ce\">ce</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"already in cache (%d cache entries)\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>-><a class=\"id\" href=\"#c_entry_count\">c_entry_count</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"inserting [%x] (%d cache entries)\", (int)<a class=\"id\" href=\"#hash\">hash</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>-><a class=\"id\" href=\"#c_entry_count\">c_entry_count</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_cmp()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compare two extended attribute blocks for equality.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if the blocks are equal, 1 if they differ, and</span>", 
"<span class=\"comment\"> * a negative error number on errors.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext2_xattr_cmp\">ext2_xattr_cmp</a>(struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *<a class=\"id\" href=\"#header1\">header1</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *<a class=\"id\" href=\"#header2\">header2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_xattr_entry\">ext2_xattr_entry</a> *<a class=\"id\" href=\"#entry1\">entry1</a>, *<a class=\"id\" href=\"#entry2\">entry2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header1\">header1</a>+1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry2\">entry2</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header2\">header2</a>+1);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry1\">entry1</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry2\">entry2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0 || <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>((char *)<a class=\"id\" href=\"#header1\">header1</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (char *)<a class=\"id\" href=\"#header2\">header2</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a> = <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry1\">entry1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry2\">entry2</a> = <a class=\"id\" href=\"#EXT2_XATTR_NEXT\">EXT2_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry2\">entry2</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry2\">entry2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_cache_find()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Find an identical extended attribute block.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a locked buffer head to the block found, or NULL if such</span>", 
"<span class=\"comment\"> * a block was not found or an error occurred.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *", 
"<a class=\"id\" href=\"#ext2_xattr_cache_find\">ext2_xattr_cache_find</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext2_xattr_header\">ext2_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;  <span class=\"comment\">/* never share */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"looking for cached blocks [%x]\", (int)<a class=\"id\" href=\"#hash\">hash</a>);", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_find_first\">mb_cache_entry_find_first</a>(<a class=\"id\" href=\"#ext2_xattr_cache\">ext2_xattr_cache</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ce\">ce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ce\">ce</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ce\">ce</a>) == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext2_error\">ext2_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, \"ext2_xattr_cache_find\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %ld: block %ld read error\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, (unsigned long) <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT2_XATTR_REFCOUNT_MAX\">EXT2_XATTR_REFCOUNT_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"block %ld refcount %d>%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (unsigned long) <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT2_XATTR_REFCOUNT_MAX\">EXT2_XATTR_REFCOUNT_MAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#ext2_xattr_cmp\">ext2_xattr_cmp</a>(<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#HDR\">HDR</a>(<a class=\"id\" href=\"#bh\">bh</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_find_next\">mb_cache_entry_find_next</a>(<a class=\"id\" href=\"#ce\">ce</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a> 5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a> 16", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2_xattr_hash_entry()</span>", 
];
xr_frag_insert('l/1c/2f2749ae1d6ecdbcbc1094a4d65e754bb54f6e.xr', __xr_tmp);
