var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_MDIO_BITBANG_H\">__LINUX_MDIO_BITBANG_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_MDIO_BITBANG_H\">__LINUX_MDIO_BITBANG_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#phy\">phy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#mdiobb_ctrl\">mdiobb_ctrl</a>;", 
"", 
"struct <a class=\"id\" href=\"#mdiobb_ops\">mdiobb_ops</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the Management Data Clock high if level is one,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * low if level is zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#set_mdc\">set_mdc</a>)(struct <a class=\"id\" href=\"#mdiobb_ctrl\">mdiobb_ctrl</a> *<a class=\"id\" href=\"#ctrl\">ctrl</a>, int <a class=\"id\" href=\"#level\">level</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Configure the Management Data I/O pin as an input if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * \"output\" is zero, or an output if \"output\" is one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#set_mdio_dir\">set_mdio_dir</a>)(struct <a class=\"id\" href=\"#mdiobb_ctrl\">mdiobb_ctrl</a> *<a class=\"id\" href=\"#ctrl\">ctrl</a>, int <a class=\"id\" href=\"#output\">output</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the Management Data I/O pin high if value is one,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * low if \"value\" is zero.  This may only be called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when the MDIO pin is configured as an output.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#set_mdio_data\">set_mdio_data</a>)(struct <a class=\"id\" href=\"#mdiobb_ctrl\">mdiobb_ctrl</a> *<a class=\"id\" href=\"#ctrl\">ctrl</a>, int <a class=\"id\" href=\"#value\">value</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Retrieve the state Management Data I/O pin. */</span>", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_mdio_data\">get_mdio_data</a>)(struct <a class=\"id\" href=\"#mdiobb_ctrl\">mdiobb_ctrl</a> *<a class=\"id\" href=\"#ctrl\">ctrl</a>);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#mdiobb_ctrl\">mdiobb_ctrl</a> {", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#mdiobb_ops\">mdiobb_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"};", 
"", 
"<span class=\"comment\">/* The returned bus is not yet registered with the phy layer. */</span>", 
"struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#alloc_mdio_bitbang\">alloc_mdio_bitbang</a>(struct <a class=\"id\" href=\"#mdiobb_ctrl\">mdiobb_ctrl</a> *<a class=\"id\" href=\"#ctrl\">ctrl</a>);", 
"", 
"<span class=\"comment\">/* The bus must already have been unregistered. */</span>", 
"void <a class=\"id\" href=\"#free_mdio_bitbang\">free_mdio_bitbang</a>(struct <a class=\"id\" href=\"#mii_bus\">mii_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/1c/6017c8150101a5260624877e0c3a345df26c71.xr', __xr_tmp);
