var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * event tracer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2008 Red Hat Inc, Steven Rostedt &lt;srostedt@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  - Added format output of fields of the trace point.</span>", 
"<span class=\"comment\"> *    This was based off of work by Tom Zanussi &lt;tzanussi@gmail.com&gt;.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#debugfs\">debugfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"trace_output.h\"", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#TRACE_SYSTEM\">TRACE_SYSTEM</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_SYSTEM\">TRACE_SYSTEM</a> \"TRACE_SYSTEM\"", 
"", 
"<a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>);", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#ftrace_common_fields\">ftrace_common_fields</a>);", 
"", 
"struct <a class=\"id\" href=\"#list_head\">list_head</a> *", 
"<a class=\"id\" href=\"#trace_get_fields\">trace_get_fields</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#event_call\">event_call</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#event_call\">event_call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#get_fields\">get_fields</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#event_call\">event_call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#fields\">fields</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#event_call\">event_call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#get_fields\">get_fields</a>(<a class=\"id\" href=\"#event_call\">event_call</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__trace_define_field\">__trace_define_field</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>, const char *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#is_signed\">is_signed</a>, int <a class=\"id\" href=\"#filter_type\">filter_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#field\">field</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#field\">field</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filter_type\">filter_type</a> == <a class=\"id\" href=\"#FILTER_OTHER\">FILTER_OTHER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#filter_type\">filter_type</a> = <a class=\"id\" href=\"#filter_assign_type\">filter_assign_type</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#filter_type\">filter_type</a> = <a class=\"id\" href=\"#filter_type\">filter_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#is_signed\">is_signed</a> = <a class=\"id\" href=\"#is_signed\">is_signed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#head\">head</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#field\">field</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#field\">field</a>);", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#trace_define_field\">trace_define_field</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, const char *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#is_signed\">is_signed</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#filter_type\">filter_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#trace_get_fields\">trace_get_fields</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__trace_define_field\">__trace_define_field</a>(<a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#is_signed\">is_signed</a>, <a class=\"id\" href=\"#filter_type\">filter_type</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#trace_define_field\">trace_define_field</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__common_field\">__common_field</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#item\">item</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__trace_define_field\">__trace_define_field</a>(&amp;<a class=\"id\" href=\"#ftrace_common_fields\">ftrace_common_fields</a>, #<a class=\"id\" href=\"#type\">type</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"common_\" #<a class=\"id\" href=\"#item\">item</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#offsetof\">offsetof</a>(<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#ent\">ent</a>), <a class=\"id\" href=\"#item\">item</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(<a class=\"id\" href=\"#ent\">ent</a>.<a class=\"id\" href=\"#item\">item</a>),<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#is_signed_type\">is_signed_type</a>(<a class=\"id\" href=\"#type\">type</a>), <a class=\"id\" href=\"#FILTER_OTHER\">FILTER_OTHER</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"static int <a class=\"id\" href=\"#trace_define_common_fields\">trace_define_common_fields</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_entry\">trace_entry</a> <a class=\"id\" href=\"#ent\">ent</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__common_field\">__common_field</a>(unsigned short, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__common_field\">__common_field</a>(unsigned char, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__common_field\">__common_field</a>(unsigned char, <a class=\"id\" href=\"#preempt_count\">preempt_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__common_field\">__common_field</a>(int, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__common_field\">__common_field</a>(int, <a class=\"id\" href=\"#lock_depth\">lock_depth</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#trace_destroy_fields\">trace_destroy_fields</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#trace_get_fields\">trace_get_fields</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#link\">link</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#field\">field</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#trace_event_raw_init\">trace_event_raw_init</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#register_ftrace_event\">register_ftrace_event</a>(&amp;<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#event\">event</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#trace_event_raw_init\">trace_event_raw_init</a>);", 
"", 
"int <a class=\"id\" href=\"#ftrace_event_reg\">ftrace_event_reg</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, enum <a class=\"id\" href=\"#trace_reg\">trace_reg</a> <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TRACE_REG_REGISTER\">TRACE_REG_REGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tracepoint_probe_register\">tracepoint_probe_register</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#probe\">probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TRACE_REG_UNREGISTER\">TRACE_REG_UNREGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_probe_unregister\">tracepoint_probe_unregister</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#probe\">probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PERF_EVENTS\">CONFIG_PERF_EVENTS</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TRACE_REG_PERF_REGISTER\">TRACE_REG_PERF_REGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#tracepoint_probe_register\">tracepoint_probe_register</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#perf_probe\">perf_probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TRACE_REG_PERF_UNREGISTER\">TRACE_REG_PERF_UNREGISTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracepoint_probe_unregister\">tracepoint_probe_unregister</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#perf_probe\">perf_probe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#ftrace_event_reg\">ftrace_event_reg</a>);", 
"", 
"void <a class=\"id\" href=\"#trace_event_enable_cmd_record\">trace_event_enable_cmd_record</a>(<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#enable\">enable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_start_cmdline_record\">tracing_start_cmdline_record</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TRACE_EVENT_FL_RECORDED_CMD\">TRACE_EVENT_FL_RECORDED_CMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_stop_cmdline_record\">tracing_stop_cmdline_record</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TRACE_EVENT_FL_RECORDED_CMD\">TRACE_EVENT_FL_RECORDED_CMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ftrace_event_enable_disable\">ftrace_event_enable_disable</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#enable\">enable</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_RECORDED_CMD\">TRACE_EVENT_FL_RECORDED_CMD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_stop_cmdline_record\">tracing_stop_cmdline_record</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#TRACE_EVENT_FL_RECORDED_CMD\">TRACE_EVENT_FL_RECORDED_CMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#reg\">reg</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#TRACE_REG_UNREGISTER\">TRACE_REG_UNREGISTER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#trace_flags\">trace_flags</a> &amp; <a class=\"id\" href=\"#TRACE_ITER_RECORD_CMD\">TRACE_ITER_RECORD_CMD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_start_cmdline_record\">tracing_start_cmdline_record</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TRACE_EVENT_FL_RECORDED_CMD\">TRACE_EVENT_FL_RECORDED_CMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#reg\">reg</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#TRACE_REG_REGISTER\">TRACE_REG_REGISTER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tracing_stop_cmdline_record\">tracing_stop_cmdline_record</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"event trace: Could not enable event \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%s\\n\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ftrace_clear_events\">ftrace_clear_events</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_event_enable_disable\">ftrace_event_enable_disable</a>(<a class=\"id\" href=\"#call\">call</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * __ftrace_set_clr_event(NULL, NULL, NULL, set) will set/unset all events.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__ftrace_set_clr_event\">__ftrace_set_clr_event</a>(const char *<a class=\"id\" href=\"#match\">match</a>, const char *<a class=\"id\" href=\"#sub\">sub</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#event\">event</a>, int <a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a> || !<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a> || !<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match\">match</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#match\">match</a>, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>) != 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#match\">match</a>, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sub\">sub</a> && <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#sub\">sub</a>, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> && <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_event_enable_disable\">ftrace_event_enable_disable</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#set\">set</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ftrace_set_clr_event\">ftrace_set_clr_event</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#sub\">sub</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#match\">match</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The buf format can be &lt;subsystem&gt;:&lt;event-name&gt;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  *:&lt;event-name&gt; means any event by that name.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  :&lt;event-name&gt; is the same.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  &lt;subsystem&gt;:* means all events in that subsystem</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  &lt;subsystem&gt;: means the same.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  &lt;name&gt; (no ':') means all events in a subsystem with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  the name &lt;name&gt; or any event that matches &lt;name&gt;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#match\">match</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>, \":\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub\">sub</a> = <a class=\"id\" href=\"#match\">match</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#match\">match</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#sub\">sub</a>) || <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#sub\">sub</a>, \"*\") == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub\">sub</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#event\">event</a>) || <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#event\">event</a>, \"*\") == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ftrace_set_clr_event\">__ftrace_set_clr_event</a>(<a class=\"id\" href=\"#match\">match</a>, <a class=\"id\" href=\"#sub\">sub</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#set\">set</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * trace_set_clr_event - enable or disable an event</span>", 
"<span class=\"comment\"> * @system: system name to match (NULL for any system)</span>", 
"<span class=\"comment\"> * @event: event name to match (NULL for all events, within system)</span>", 
"<span class=\"comment\"> * @set: 1 to enable, 0 to disable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is a way for other parts of the kernel to enable or disable</span>", 
"<span class=\"comment\"> * event recording.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, -EINVAL if the parameters do not match any</span>", 
"<span class=\"comment\"> * registered events.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#trace_set_clr_event\">trace_set_clr_event</a>(const char *<a class=\"id\" href=\"#system\">system</a>, const char *<a class=\"id\" href=\"#event\">event</a>, int <a class=\"id\" href=\"#set\">set</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ftrace_set_clr_event\">__ftrace_set_clr_event</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#set\">set</a>);", 
"}", 
"", 
"<span class=\"comment\">/* 128 should be much more than enough */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVENT_BUF_SIZE\">EVENT_BUF_SIZE</a><span class=\"ts\"/><span class=\"ts\"/>127", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#ftrace_event_write\">ftrace_event_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_parser\">trace_parser</a> <a class=\"id\" href=\"#parser\">parser</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#read\">read</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cnt\">cnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tracing_update_buffers\">tracing_update_buffers</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#trace_parser_get_init\">trace_parser_get_init</a>(&amp;<a class=\"id\" href=\"#parser\">parser</a>, <a class=\"id\" href=\"#EVENT_BUF_SIZE\">EVENT_BUF_SIZE</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#trace_get_user\">trace_get_user</a>(&amp;<a class=\"id\" href=\"#parser\">parser</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read\">read</a> >= 0 && <a class=\"id\" href=\"#trace_parser_loaded\">trace_parser_loaded</a>((&amp;<a class=\"id\" href=\"#parser\">parser</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#set\">set</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#buffer\">buffer</a> == '!')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#idx\">idx</a>] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ftrace_set_clr_event\">ftrace_set_clr_event</a>(<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#buffer\">buffer</a> + !<a class=\"id\" href=\"#set\">set</a>, <a class=\"id\" href=\"#set\">set</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#read\">read</a>;", 
"", 
" <a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_parser_put\">trace_parser_put</a>(&amp;<a class=\"id\" href=\"#parser\">parser</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void *", 
"<a class=\"id\" href=\"#t_next\">t_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_continue\">list_for_each_entry_continue</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The ftrace subsystem is for showing formats only.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * They can not be enabled or disabled via the event files.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a> && <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#t_start\">t_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(&amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#l\">l</a> = 0; <a class=\"id\" href=\"#l\">l</a> <= *<a class=\"id\" href=\"#pos\">pos</a>; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#t_next\">t_next</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#call\">call</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#call\">call</a>;", 
"}", 
"", 
"static void *", 
"<a class=\"id\" href=\"#s_next\">s_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_continue\">list_for_each_entry_continue</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#s_start\">s_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#l\">l</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(&amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#l\">l</a> = 0; <a class=\"id\" href=\"#l\">l</a> <= *<a class=\"id\" href=\"#pos\">pos</a>; ) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#s_next\">s_next</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#call\">call</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#call\">call</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#t_show\">t_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#TRACE_SYSTEM\">TRACE_SYSTEM</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s:\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s\\n\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#t_stop\">t_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ftrace_event_seq_open\">ftrace_event_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *<a class=\"id\" href=\"#seq_ops\">seq_ops</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_TRUNC\">O_TRUNC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_clear_events\">ftrace_clear_events</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_ops\">seq_ops</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_private\">i_private</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#seq_ops\">seq_ops</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#event_enable_read\">event_enable_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = \"1\\n\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = \"0\\n\";", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buf\">buf</a>, 2);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#event_enable_write\">event_enable_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> >= sizeof(<a class=\"id\" href=\"#buf\">buf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tracing_update_buffers\">tracing_update_buffers</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#val\">val</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ftrace_event_enable_disable\">ftrace_event_enable_disable</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> ? <a class=\"id\" href=\"#ret\">ret</a> : <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#system_enable_read\">system_enable_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>const char <a class=\"id\" href=\"#set_to_char\">set_to_char</a>[4] = { '?', '0', '1', 'X' };", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#system\">system</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[2];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#set\">set</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#call\">call</a>, &amp;<a class=\"id\" href=\"#ftrace_events\">ftrace_events</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a> || !<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a> || !<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#system\">system</a> && <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#system\">system</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to find out if all the events are set</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or if all events or cleared, or if we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a mixture.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a> |= (1 << !!(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#TRACE_EVENT_FL_ENABLED\">TRACE_EVENT_FL_ENABLED</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we have a mixture, no need to look further.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#set\">set</a> == 3)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#event_mutex\">event_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[0] = <a class=\"id\" href=\"#set_to_char\">set_to_char</a>[<a class=\"id\" href=\"#set\">set</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[1] = '\\n';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buf\">buf</a>, 2);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#system_enable_write\">system_enable_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#system\">system</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64];", 
];
xr_frag_insert('l/1c/bf100d6948d752073be88c2bee7b621aa9fe3f.xr', __xr_tmp);
