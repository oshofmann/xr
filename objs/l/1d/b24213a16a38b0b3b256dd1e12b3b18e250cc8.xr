var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#valid\">valid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fill_pid\">fill_pid</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#taskstats\">taskstats</a> *<a class=\"id\" href=\"#stats\">stats</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tsk\">tsk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#find_task_by_vpid\">find_task_by_vpid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_task_struct\">get_task_struct</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#stats\">stats</a>, 0, sizeof(*<a class=\"id\" href=\"#stats\">stats</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Each accounting subsystem adds calls to its functions to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fill in relevant parts of struct taskstsats as follows</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>per-task-foo(stats, tsk);</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delayacct_add_tsk\">delayacct_add_tsk</a>(<a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* fill in basic acct fields */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#TASKSTATS_VERSION\">TASKSTATS_VERSION</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#nvcsw\">nvcsw</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#nvcsw\">nvcsw</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#nivcsw\">nivcsw</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#nivcsw\">nivcsw</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bacct_add_tsk\">bacct_add_tsk</a>(<a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* fill in extended acct fields */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xacct_add_tsk\">xacct_add_tsk</a>(<a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Define err: label here if needed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fill_tgid\">fill_tgid</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#tgid\">tgid</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#first\">first</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#taskstats\">taskstats</a> *<a class=\"id\" href=\"#stats\">stats</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Add additional stats from live tasks except zombie thread group</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * leaders who are already counted with the dead tasks</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first\">first</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#find_task_by_vpid\">find_task_by_vpid</a>(<a class=\"id\" href=\"#tgid\">tgid</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#first\">first</a> || !<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#first\">first</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#stats\">stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#first\">first</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#stats\">stats</a>, sizeof(*<a class=\"id\" href=\"#stats\">stats</a>));", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#stats\">stats</a>, 0, sizeof(*<a class=\"id\" href=\"#stats\">stats</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Accounting subsystem can call its functions here to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * fill in relevant parts of struct taskstsats as follows</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>per-task-foo(stats, tsk);</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delayacct_add_tsk\">delayacct_add_tsk</a>(<a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#nvcsw\">nvcsw</a> += <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#nvcsw\">nvcsw</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#nivcsw\">nivcsw</a> += <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#nivcsw\">nivcsw</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#first\">first</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#first\">first</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>-><a class=\"id\" href=\"#version\">version</a> = <a class=\"id\" href=\"#TASKSTATS_VERSION\">TASKSTATS_VERSION</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Accounting subsystems can also add calls here to modify</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fields of taskstats.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#fill_tgid_exit\">fill_tgid_exit</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#stats\">stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Each accounting subsystem calls its functions here to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * accumalate its per-task stats for tsk, into the per-tgid structure</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>per-task-foo(tsk-&gt;signal-&gt;stats, tsk);</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delayacct_add_tsk\">delayacct_add_tsk</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<a class=\"id\" href=\"#ret\">ret</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#add_del_listener\">add_del_listener</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>, const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>, int <a class=\"id\" href=\"#isadd\">isadd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listener_list\">listener_list</a> *<a class=\"id\" href=\"#listeners\">listeners</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listener\">listener</a> *<a class=\"id\" href=\"#s\">s</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpumask_subset\">cpumask_subset</a>(<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#cpu_possible_mask\">cpu_possible_mask</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isadd\">isadd</a> == <a class=\"id\" href=\"#REGISTER\">REGISTER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#kmalloc_node\">kmalloc_node</a>(sizeof(struct <a class=\"id\" href=\"#listener\">listener</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#cpu_to_node\">cpu_to_node</a>(<a class=\"id\" href=\"#cpu\">cpu</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#valid\">valid</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#listeners\">listeners</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#listener_array\">listener_array</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Deregister or cleanup */</span>", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#mask\">mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#listeners\">listeners</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#listener_array\">listener_array</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#pid\">pid</a> == <a class=\"id\" href=\"#pid\">pid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#parse\">parse</a>(struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#na\">na</a>, struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#na\">na</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#nla_len\">nla_len</a>(<a class=\"id\" href=\"#na\">na</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#TASKSTATS_CPUMASK_MAXLEN\">TASKSTATS_CPUMASK_MAXLEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#data\">data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_strlcpy\">nla_strlcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#na\">na</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpulist_parse\">cpulist_parse</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#taskstats\">taskstats</a> *<a class=\"id\" href=\"#mk_reply\">mk_reply</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#na\">na</a>, *<a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#aggr\">aggr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aggr\">aggr</a> = (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#TASKSTATS_TYPE_PID\">TASKSTATS_TYPE_PID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>? <a class=\"id\" href=\"#TASKSTATS_TYPE_AGGR_PID\">TASKSTATS_TYPE_AGGR_PID</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>: <a class=\"id\" href=\"#TASKSTATS_TYPE_AGGR_TGID\">TASKSTATS_TYPE_AGGR_TGID</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#na\">na</a> = <a class=\"id\" href=\"#nla_nest_start\">nla_nest_start</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#aggr\">aggr</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#na\">na</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nla_put\">nla_put</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#type\">type</a>, sizeof(<a class=\"id\" href=\"#pid\">pid</a>), &amp;<a class=\"id\" href=\"#pid\">pid</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#nla_reserve\">nla_reserve</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#TASKSTATS_TYPE_STATS\">TASKSTATS_TYPE_STATS</a>, sizeof(struct <a class=\"id\" href=\"#taskstats\">taskstats</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nla_nest_end\">nla_nest_end</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#na\">na</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cgroupstats_user_cmd\">cgroupstats_user_cmd</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#genl_info\">genl_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#rep_skb\">rep_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cgroupstats\">cgroupstats</a> *<a class=\"id\" href=\"#stats\">stats</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nlattr\">nlattr</a> *<a class=\"id\" href=\"#na\">na</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fd\">fd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#na\">na</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#CGROUPSTATS_CMD_ATTR_FD\">CGROUPSTATS_CMD_ATTR_FD</a>];", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#na\">na</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#nla_get_u32\">nla_get_u32</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#CGROUPSTATS_CMD_ATTR_FD\">CGROUPSTATS_CMD_ATTR_FD</a>]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#cgroupstats\">cgroupstats</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#prepare_reply\">prepare_reply</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#CGROUPSTATS_CMD_NEW\">CGROUPSTATS_CMD_NEW</a>, &amp;<a class=\"id\" href=\"#rep_skb\">rep_skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#na\">na</a> = <a class=\"id\" href=\"#nla_reserve\">nla_reserve</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#CGROUPSTATS_TYPE_CGROUP_STATS\">CGROUPSTATS_TYPE_CGROUP_STATS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#cgroupstats\">cgroupstats</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#nla_data\">nla_data</a>(<a class=\"id\" href=\"#na\">na</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#stats\">stats</a>, 0, sizeof(*<a class=\"id\" href=\"#stats\">stats</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#cgroupstats_build\">cgroupstats_build</a>(<a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_free\">nlmsg_free</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#send_reply\">send_reply</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#taskstats_user_cmd\">taskstats_user_cmd</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#genl_info\">genl_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#rep_skb\">rep_skb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#taskstats\">taskstats</a> *<a class=\"id\" href=\"#stats\">stats</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#alloc_cpumask_var\">alloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#parse\">parse</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_REGISTER_CPUMASK\">TASKSTATS_CMD_ATTR_REGISTER_CPUMASK</a>], <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_return_rc\">free_return_rc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#add_del_listener\">add_del_listener</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#snd_pid\">snd_pid</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#REGISTER\">REGISTER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_return_rc\">free_return_rc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#parse\">parse</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK\">TASKSTATS_CMD_ATTR_DEREGISTER_CPUMASK</a>], <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#free_return_rc\">free_return_rc</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#add_del_listener\">add_del_listener</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#snd_pid\">snd_pid</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#DEREGISTER\">DEREGISTER</a>);", 
"<a class=\"id\" href=\"#free_return_rc\">free_return_rc</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cpumask_var\">free_cpumask_var</a>(<a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Size includes space for nested attributes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(<a class=\"id\" href=\"#u32\">u32</a>)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#taskstats\">taskstats</a>)) + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#prepare_reply\">prepare_reply</a>(<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#TASKSTATS_CMD_NEW\">TASKSTATS_CMD_NEW</a>, &amp;<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_PID\">TASKSTATS_CMD_ATTR_PID</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#nla_get_u32\">nla_get_u32</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_PID\">TASKSTATS_CMD_ATTR_PID</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#mk_reply\">mk_reply</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#TASKSTATS_TYPE_PID\">TASKSTATS_TYPE_PID</a>, <a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#stats\">stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#fill_pid\">fill_pid</a>(<a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#stats\">stats</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_TGID\">TASKSTATS_CMD_ATTR_TGID</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tgid\">tgid</a> = <a class=\"id\" href=\"#nla_get_u32\">nla_get_u32</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#attrs\">attrs</a>[<a class=\"id\" href=\"#TASKSTATS_CMD_ATTR_TGID\">TASKSTATS_CMD_ATTR_TGID</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#mk_reply\">mk_reply</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#TASKSTATS_TYPE_TGID\">TASKSTATS_TYPE_TGID</a>, <a class=\"id\" href=\"#tgid\">tgid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#stats\">stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#fill_tgid\">fill_tgid</a>(<a class=\"id\" href=\"#tgid\">tgid</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#stats\">stats</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#send_reply\">send_reply</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_free\">nlmsg_free</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#taskstats\">taskstats</a> *<a class=\"id\" href=\"#taskstats_tgid_alloc\">taskstats_tgid_alloc</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#signal_struct\">signal_struct</a> *<a class=\"id\" href=\"#sig\">sig</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#taskstats\">taskstats</a> *<a class=\"id\" href=\"#stats\">stats</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#stats\">stats</a> || <a class=\"id\" href=\"#thread_group_empty\">thread_group_empty</a>(<a class=\"id\" href=\"#tsk\">tsk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No problem if kmem_cache_zalloc() fails */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#kmem_cache_zalloc\">kmem_cache_zalloc</a>(<a class=\"id\" href=\"#taskstats_cache\">taskstats_cache</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#stats\">stats</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#stats\">stats</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stats\">stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#taskstats_cache\">taskstats_cache</a>, <a class=\"id\" href=\"#stats\">stats</a>);", 
"<a class=\"id\" href=\"#ret\">ret</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#stats\">stats</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Send pid data out on exit */</span>", 
"void <a class=\"id\" href=\"#taskstats_exit\">taskstats_exit</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, int <a class=\"id\" href=\"#group_dead\">group_dead</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listener_list\">listener_list</a> *<a class=\"id\" href=\"#listeners\">listeners</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#taskstats\">taskstats</a> *<a class=\"id\" href=\"#stats\">stats</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#rep_skb\">rep_skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_thread_group\">is_thread_group</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#family_registered\">family_registered</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Size includes space for nested attributes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(<a class=\"id\" href=\"#u32\">u32</a>)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(sizeof(struct <a class=\"id\" href=\"#taskstats\">taskstats</a>)) + <a class=\"id\" href=\"#nla_total_size\">nla_total_size</a>(0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is_thread_group\">is_thread_group</a> = !!<a class=\"id\" href=\"#taskstats_tgid_alloc\">taskstats_tgid_alloc</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_thread_group\">is_thread_group</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PID + STATS + TGID + STATS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = 2 * <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fill the tsk-&gt;signal-&gt;stats structure */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_tgid_exit\">fill_tgid_exit</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#listeners\">listeners</a> = &amp;<a class=\"id\" href=\"#__raw_get_cpu_var\">__raw_get_cpu_var</a>(<a class=\"id\" href=\"#listener_array\">listener_array</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#listeners\">listeners</a>-><a class=\"id\" href=\"#list\">list</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#prepare_reply\">prepare_reply</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#TASKSTATS_CMD_NEW\">TASKSTATS_CMD_NEW</a>, &amp;<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#mk_reply\">mk_reply</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#TASKSTATS_TYPE_PID\">TASKSTATS_TYPE_PID</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stats\">stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#fill_pid\">fill_pid</a>(-1, <a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#stats\">stats</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doesn't matter if tsk is the leader or the last group member leaving</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_thread_group\">is_thread_group</a> || !<a class=\"id\" href=\"#group_dead\">group_dead</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#send\">send</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a> = <a class=\"id\" href=\"#mk_reply\">mk_reply</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#TASKSTATS_TYPE_TGID\">TASKSTATS_TYPE_TGID</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#tgid\">tgid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stats\">stats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#stats\">stats</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#stats\">stats</a>, sizeof(*<a class=\"id\" href=\"#stats\">stats</a>));", 
"", 
"<a class=\"id\" href=\"#send\">send</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#send_cpu_listeners\">send_cpu_listeners</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>, <a class=\"id\" href=\"#listeners\">listeners</a>);", 
"<span class=\"ts\"/>return;", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nlmsg_free\">nlmsg_free</a>(<a class=\"id\" href=\"#rep_skb\">rep_skb</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> <a class=\"id\" href=\"#taskstats_ops\">taskstats_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cmd\">cmd</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#TASKSTATS_CMD_GET\">TASKSTATS_CMD_GET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#doit\">doit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#taskstats_user_cmd\">taskstats_user_cmd</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#policy\">policy</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#taskstats_cmd_get_policy\">taskstats_cmd_get_policy</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#genl_ops\">genl_ops</a> <a class=\"id\" href=\"#cgroupstats_ops\">cgroupstats_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cmd\">cmd</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#CGROUPSTATS_CMD_GET\">CGROUPSTATS_CMD_GET</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#doit\">doit</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cgroupstats_user_cmd\">cgroupstats_user_cmd</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#policy\">policy</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cgroupstats_cmd_get_policy\">cgroupstats_cmd_get_policy</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Needed early in initialization */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#taskstats_init_early\">taskstats_init_early</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#taskstats_cache\">taskstats_cache</a> = <a class=\"id\" href=\"#KMEM_CACHE\">KMEM_CACHE</a>(<a class=\"id\" href=\"#taskstats\">taskstats</a>, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#listener_array\">listener_array</a>, <a class=\"id\" href=\"#i\">i</a>).<a class=\"id\" href=\"#list\">list</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_rwsem\">init_rwsem</a>(&amp;(<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#listener_array\">listener_array</a>, <a class=\"id\" href=\"#i\">i</a>).<a class=\"id\" href=\"#sem\">sem</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#taskstats_init\">taskstats_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#genl_register_family\">genl_register_family</a>(&amp;<a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#genl_register_ops\">genl_register_ops</a>(&amp;<a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#taskstats_ops\">taskstats_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#genl_register_ops\">genl_register_ops</a>(&amp;<a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#cgroupstats_ops\">cgroupstats_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_cgroup_ops\">err_cgroup_ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#family_registered\">family_registered</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"registered taskstats version %d\\n\", <a class=\"id\" href=\"#TASKSTATS_GENL_VERSION\">TASKSTATS_GENL_VERSION</a>);", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#err_cgroup_ops\">err_cgroup_ops</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unregister_ops\">genl_unregister_ops</a>(&amp;<a class=\"id\" href=\"#family\">family</a>, &amp;<a class=\"id\" href=\"#taskstats_ops\">taskstats_ops</a>);", 
"<a class=\"id\" href=\"#err\">err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#genl_unregister_family\">genl_unregister_family</a>(&amp;<a class=\"id\" href=\"#family\">family</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * late initcall ensures initialization of statistics collection</span>", 
"<span class=\"comment\"> * mechanisms precedes initialization of the taskstats interface</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#taskstats_init\">taskstats_init</a>);", 
];
xr_frag_insert('l/1d/b24213a16a38b0b3b256dd1e12b3b18e250cc8.xr', __xr_tmp);
