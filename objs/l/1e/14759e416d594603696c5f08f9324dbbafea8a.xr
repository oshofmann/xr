var __xr_tmp = [
"<span class=\"comment\">/* Copyright (C) 2009 Red Hat, Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * See ../COPYING for licensing terms.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * use_mm</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Makes the calling kernel thread take on the specified</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>mm context.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Called by the retry thread execute retries within the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>iocb issuer's mm context, so that copy_from/to_user</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>operations work seamlessly for aio.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(Note: this routine is intended to be called only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>from a kernel thread context)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#use_mm\">use_mm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#active_mm\">active_mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#active_mm\">active_mm</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#active_mm\">active_mm</a> != <a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mm_count\">mm_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#active_mm\">active_mm</a> = <a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#switch_mm\">switch_mm</a>(<a class=\"id\" href=\"#active_mm\">active_mm</a>, <a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#active_mm\">active_mm</a> != <a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmdrop\">mmdrop</a>(<a class=\"id\" href=\"#active_mm\">active_mm</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#use_mm\">use_mm</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * unuse_mm</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Reverses the effect of use_mm, i.e. releases the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>specified mm context which was earlier taken on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>by the calling kernel thread</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(Note: this routine is intended to be called only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>from a kernel thread context)</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#unuse_mm\">unuse_mm</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sync_mm_rss\">sync_mm_rss</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* active_mm is still 'mm' */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enter_lazy_tlb\">enter_lazy_tlb</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unuse_mm\">unuse_mm</a>);", 
];
xr_frag_insert('l/1e/14759e416d594603696c5f08f9324dbbafea8a.xr', __xr_tmp);
