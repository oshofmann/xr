var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * system.c - a driver for reserving pnp system resources</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Some code is based on pnpbios_core.c</span>", 
"<span class=\"comment\"> * Copyright 2002 Adam Belay &lt;ambx1@neo.rr.com&gt;</span>", 
"<span class=\"comment\"> * (c) Copyright 2007 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Bjorn Helgaas &lt;bjorn.helgaas@hp.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pnp\">pnp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static const struct <a class=\"id\" href=\"#pnp_device_id\">pnp_device_id</a> <a class=\"id\" href=\"#pnp_dev_table\">pnp_dev_table</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* General ID for reserving resources */</span>", 
"<span class=\"ts\"/>{\"PNP0c02\", 0},", 
"<span class=\"ts\"/><span class=\"comment\">/* memory controller */</span>", 
"<span class=\"ts\"/>{\"PNP0c01\", 0},", 
"<span class=\"ts\"/>{\"\", 0}", 
"};", 
"", 
"static void <a class=\"id\" href=\"#reserve_range\">reserve_range</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#r\">r</a>, int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#regionid\">regionid</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#pnpid\">pnpid</a> = <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#regionid\">regionid</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(16, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#regionid\">regionid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#regionid\">regionid</a>, 16, \"pnp %s\", <a class=\"id\" href=\"#pnpid\">pnpid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#port\">port</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#request_region\">request_region</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a> + 1, <a class=\"id\" href=\"#regionid\">regionid</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#request_mem_region\">request_mem_region</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a> + 1, <a class=\"id\" href=\"#regionid\">regionid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#regionid\">regionid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Failures at this point are usually harmless. pci quirks for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * example do reserve stuff they know about too, so we may well</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have double reservations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%pR %s reserved\\n\", <a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#res\">res</a> ? \"has been\" : \"could not be\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#reserve_resources_of_dev\">reserve_resources_of_dev</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; (<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#pnp_get_resource\">pnp_get_resource</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>, <a class=\"id\" href=\"#i\">i</a>)); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_DISABLED\">IORESOURCE_DISABLED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;<span class=\"ts\"/><span class=\"comment\">/* disabled */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> &lt; 0x100)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Below 0x100 is only standard PC hardware</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (pics, kbd, timer, dma, ...)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We should not get resource conflicts there,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * and the kernel reserves these anyway</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (see arch/i386/kernel/setup.c).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * So, do nothing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;<span class=\"ts\"/><span class=\"comment\">/* invalid */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_range\">reserve_range</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#res\">res</a>, 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; (<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#pnp_get_resource\">pnp_get_resource</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>, <a class=\"id\" href=\"#i\">i</a>)); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_DISABLED\">IORESOURCE_DISABLED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_range\">reserve_range</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#res\">res</a>, 0);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#system_pnp_probe\">system_pnp_probe</a>(struct <a class=\"id\" href=\"#pnp_dev\">pnp_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#pnp_device_id\">pnp_device_id</a> *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_resources_of_dev\">reserve_resources_of_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pnp_driver\">pnp_driver</a> <a class=\"id\" href=\"#system_pnp_driver\">system_pnp_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a>     = \"system\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a> = <a class=\"id\" href=\"#pnp_dev_table\">pnp_dev_table</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a>    = <a class=\"id\" href=\"#PNP_DRIVER_RES_DO_NOT_CHANGE\">PNP_DRIVER_RES_DO_NOT_CHANGE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a>    = <a class=\"id\" href=\"#system_pnp_probe\">system_pnp_probe</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pnp_system_init\">pnp_system_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pnp_register_driver\">pnp_register_driver</a>(&amp;<a class=\"id\" href=\"#system_pnp_driver\">system_pnp_driver</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * Reserve motherboard resources after PCI claim BARs,</span>", 
"<span class=\"comment\"> * but before PCI assign resources for uninitialized PCI devices</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#pnp_system_init\">pnp_system_init</a>);", 
];
xr_frag_insert('l/1e/285417cb5dcde42d646769942702363ab083ff.xr', __xr_tmp);
