var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a> == <a class=\"id\" href=\"#ACPI_WAIT_FOREVER\">ACPI_WAIT_FOREVER</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies\">jiffies</a> = <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jiffies\">jiffies</a> = <a class=\"id\" href=\"#msecs_to_jiffies\">msecs_to_jiffies</a>(<a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#down_timeout\">down_timeout</a>(<a class=\"id\" href=\"#sem\">sem</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_TIME\">AE_TIME</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Failed to acquire semaphore[%p|%d|%d], %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#units\">units</a>, <a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_format_exception\">acpi_format_exception</a>(<a class=\"id\" href=\"#status\">status</a>)));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Acquired semaphore[%p|%d|%d]\", <a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#units\">units</a>, <a class=\"id\" href=\"#timeout\">timeout</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * TODO: Support for units &gt; 1?</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_signal_semaphore\">acpi_os_signal_semaphore</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#units\">units</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#semaphore\">semaphore</a> *<a class=\"id\" href=\"#sem\">sem</a> = (struct <a class=\"id\" href=\"#semaphore\">semaphore</a> *)<a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sem\">sem</a> || (<a class=\"id\" href=\"#units\">units</a> &lt; 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#units\">units</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_SUPPORT\">AE_SUPPORT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>, \"Signaling semaphore[%p|%d]\\n\", <a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#units\">units</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up\">up</a>(<a class=\"id\" href=\"#sem\">sem</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_FUTURE_USAGE\">ACPI_FUTURE_USAGE</a>", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#acpi_os_get_line\">acpi_os_get_line</a>(char *<a class=\"id\" href=\"#buffer\">buffer</a>)", 
"{", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ENABLE_DEBUGGER\">ENABLE_DEBUGGER</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_in_debugger\">acpi_in_debugger</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#chars\">chars</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kdb_read\">kdb_read</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#line_buf\">line_buf</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* remove the CR kdb includes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chars\">chars</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#chars\">chars</a>] = '\\0';", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*  ACPI_FUTURE_USAGE  */</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_signal\">acpi_os_signal</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#function\">function</a>, void *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#function\">function</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_SIGNAL_FATAL\">ACPI_SIGNAL_FATAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Fatal opcode executed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_SIGNAL_BREAKPOINT\">ACPI_SIGNAL_BREAKPOINT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * AML Breakpoint</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ACPI spec. says to treat it as a NOP unless</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * you are debugging.  So if/when we integrate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * AML debugger into the kernel debugger its</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hook will go here.  But until then it is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not useful to print anything on breakpoints.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_os_name_setup\">acpi_os_name_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#acpi_os_name\">acpi_os_name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#ACPI_MAX_OVERRIDE_LEN\">ACPI_MAX_OVERRIDE_LEN</a> - 1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#str\">str</a> || !*<a class=\"id\" href=\"#str\">str</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#count\">count</a>-- && <a class=\"id\" href=\"#str\">str</a> && *<a class=\"id\" href=\"#str\">str</a>; <a class=\"id\" href=\"#str\">str</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#isalnum\">isalnum</a>(*<a class=\"id\" href=\"#str\">str</a>) || *<a class=\"id\" href=\"#str\">str</a> == ' ' || *<a class=\"id\" href=\"#str\">str</a> == ':')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a>++ = *<a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (*<a class=\"id\" href=\"#str\">str</a> == '\\'' || *<a class=\"id\" href=\"#str\">str</a> == '\"')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#p\">p</a> = 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"acpi_os_name=\", <a class=\"id\" href=\"#acpi_os_name_setup\">acpi_os_name_setup</a>);", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#set_osi_linux\">set_osi_linux</a>(unsigned int <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#enable\">enable</a> != <a class=\"id\" href=\"#enable\">enable</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#enable\">enable</a> = <a class=\"id\" href=\"#enable\">enable</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"%sed _OSI(Linux)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enable\">enable</a> ? \"Add\": \"Delet\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_cmdline_osi_linux\">acpi_cmdline_osi_linux</a>(unsigned int <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#cmdline\">cmdline</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* cmdline set the default */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_osi_linux\">set_osi_linux</a>(<a class=\"id\" href=\"#enable\">enable</a>);", 
"", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_dmi_osi_linux\">acpi_dmi_osi_linux</a>(int <a class=\"id\" href=\"#enable\">enable</a>, const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#dmi\">dmi</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* DMI knows that this box asks OSI(Linux) */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"DMI detected: %s\\n\", <a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enable\">enable</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#known\">known</a> = 1;<span class=\"ts\"/><span class=\"comment\">/* DMI knows which OSI(Linux) default needed */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_osi_linux\">set_osi_linux</a>(<a class=\"id\" href=\"#enable\">enable</a>);", 
"", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Modify the list of \"OS Interfaces\" reported to BIOS via _OSI</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * empty string disables _OSI</span>", 
"<span class=\"comment\"> * string starting with '!' disables that string</span>", 
"<span class=\"comment\"> * otherwise string is added to list, augmenting built-in strings</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_osi_setup\">acpi_osi_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#str\">str</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || *<a class=\"id\" href=\"#str\">str</a> == '\\0') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"_OSI method disabled\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_create_osi_method\">acpi_gbl_create_osi_method</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\"!Linux\", <a class=\"id\" href=\"#str\">str</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_cmdline_osi_linux\">acpi_cmdline_osi_linux</a>(0);<span class=\"ts\"/><span class=\"comment\">/* !enable */</span>", 
"<span class=\"ts\"/>} else if (*<a class=\"id\" href=\"#str\">str</a> == '!') {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_osi_invalidate\">acpi_osi_invalidate</a>(++<a class=\"id\" href=\"#str\">str</a>) == <a class=\"id\" href=\"#AE_OK\">AE_OK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Deleted _OSI(%s)\\n\", <a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/>} else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\"Linux\", <a class=\"id\" href=\"#str\">str</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_cmdline_osi_linux\">acpi_cmdline_osi_linux</a>(1);<span class=\"ts\"/><span class=\"comment\">/* enable */</span>", 
"<span class=\"ts\"/>} else if (*<a class=\"id\" href=\"#osi_additional_string\">osi_additional_string</a> == '\\0') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#osi_additional_string\">osi_additional_string</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#OSI_STRING_LENGTH_MAX\">OSI_STRING_LENGTH_MAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Added _OSI(%s)\\n\", <a class=\"id\" href=\"#str\">str</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"acpi_osi=\", <a class=\"id\" href=\"#acpi_osi_setup\">acpi_osi_setup</a>);", 
"", 
"<span class=\"comment\">/* enable serialization to combat AE_ALREADY_EXISTS errors */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_serialize_setup\">acpi_serialize_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"serialize enabled\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_all_methods_serialized\">acpi_gbl_all_methods_serialized</a> = <a class=\"id\" href=\"#TRUE\">TRUE</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"acpi_serialize\", <a class=\"id\" href=\"#acpi_serialize_setup\">acpi_serialize_setup</a>);", 
"", 
"<span class=\"comment\">/* Check of resource interference between native drivers and ACPI</span>", 
"<span class=\"comment\"> * OperationRegions (SystemIO and System Memory only).</span>", 
"<span class=\"comment\"> * IO ports and memory declared in ACPI might be used by the ACPI subsystem</span>", 
"<span class=\"comment\"> * in arbitrary AML code and can interfere with legacy drivers.</span>", 
"<span class=\"comment\"> * acpi_enforce_resources= can be set to:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   - strict (default) (2)</span>", 
"<span class=\"comment\"> *     -&gt; further driver trying to access the resources will not load</span>", 
"<span class=\"comment\"> *   - lax              (1)</span>", 
"<span class=\"comment\"> *     -&gt; further driver trying to access the resources will load, but you</span>", 
"<span class=\"comment\"> *     get a system message that something might go wrong...</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   - no               (0)</span>", 
"<span class=\"comment\"> *     -&gt; ACPI Operation Region resources will not be registered</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENFORCE_RESOURCES_STRICT\">ENFORCE_RESOURCES_STRICT</a> 2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENFORCE_RESOURCES_LAX\">ENFORCE_RESOURCES_LAX</a>    1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENFORCE_RESOURCES_NO\">ENFORCE_RESOURCES_NO</a>     0", 
"", 
"static unsigned int <a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> = <a class=\"id\" href=\"#ENFORCE_RESOURCES_STRICT\">ENFORCE_RESOURCES_STRICT</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#acpi_enforce_resources_setup\">acpi_enforce_resources_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#str\">str</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || *<a class=\"id\" href=\"#str\">str</a> == '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\"strict\", <a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> = <a class=\"id\" href=\"#ENFORCE_RESOURCES_STRICT\">ENFORCE_RESOURCES_STRICT</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\"lax\", <a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> = <a class=\"id\" href=\"#ENFORCE_RESOURCES_LAX\">ENFORCE_RESOURCES_LAX</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\"no\", <a class=\"id\" href=\"#str\">str</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> = <a class=\"id\" href=\"#ENFORCE_RESOURCES_NO\">ENFORCE_RESOURCES_NO</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"acpi_enforce_resources=\", <a class=\"id\" href=\"#acpi_enforce_resources_setup\">acpi_enforce_resources_setup</a>);", 
"", 
"<span class=\"comment\">/* Check for resource conflicts between ACPI OperationRegions and native</span>", 
"<span class=\"comment\"> * drivers */</span>", 
"int <a class=\"id\" href=\"#acpi_check_resource_conflict\">acpi_check_resource_conflict</a>(const struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> *<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ioport\">ioport</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#clash\">clash</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> == <a class=\"id\" href=\"#ENFORCE_RESOURCES_NO\">ENFORCE_RESOURCES_NO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>) && !(<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioport\">ioport</a> = <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acpi_res_lock\">acpi_res_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>, &amp;<a class=\"id\" href=\"#resource_list_head\">resource_list_head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#resource_list\">resource_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ioport\">ioport</a> && (<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#resource_type\">resource_type</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       != <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ioport\">ioport</a> && (<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#resource_type\">resource_type</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!= <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_MEMORY\">ACPI_ADR_SPACE_SYSTEM_MEMORY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#start\">start</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    || <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clash\">clash</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acpi_res_lock\">acpi_res_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#clash\">clash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> != <a class=\"id\" href=\"#ENFORCE_RESOURCES_NO\">ENFORCE_RESOURCES_NO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"ACPI: resource %s %pR\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" conflicts with ACPI region %s %pR\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> == <a class=\"id\" href=\"#ENFORCE_RESOURCES_LAX\">ENFORCE_RESOURCES_LAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> \"ACPI: This conflict may\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" cause random problems and system\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" instability\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ACPI: If an ACPI driver is available\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" for this device, you should use it instead of\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" the native driver\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> == <a class=\"id\" href=\"#ENFORCE_RESOURCES_STRICT\">ENFORCE_RESOURCES_STRICT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_check_resource_conflict\">acpi_check_resource_conflict</a>);", 
"", 
"int <a class=\"id\" href=\"#acpi_check_region\">acpi_check_region</a>(<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#res\">res</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a>   = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#n\">n</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a>  = <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_check_resource_conflict\">acpi_check_resource_conflict</a>(&amp;<a class=\"id\" href=\"#res\">res</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_check_region\">acpi_check_region</a>);", 
"", 
"int <a class=\"id\" href=\"#acpi_check_mem_region\">acpi_check_mem_region</a>(<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#resource_size_t\">resource_size_t</a> <a class=\"id\" href=\"#n\">n</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#res\">res</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a>   = <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#n\">n</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a>  = <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_check_resource_conflict\">acpi_check_resource_conflict</a>(&amp;<a class=\"id\" href=\"#res\">res</a>);", 
"", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_check_mem_region\">acpi_check_mem_region</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Let drivers know whether the resource checks are effective</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#acpi_resources_are_enforced\">acpi_resources_are_enforced</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> == <a class=\"id\" href=\"#ENFORCE_RESOURCES_STRICT\">ENFORCE_RESOURCES_STRICT</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_resources_are_enforced\">acpi_resources_are_enforced</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Acquire a spinlock.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * handle is a pointer to the spinlock_t.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#acpi_cpu_flags\">acpi_cpu_flags</a> <a class=\"id\" href=\"#acpi_os_acquire_lock\">acpi_os_acquire_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> <a class=\"id\" href=\"#lockp\">lockp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_cpu_flags\">acpi_cpu_flags</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(<a class=\"id\" href=\"#lockp\">lockp</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flags\">flags</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Release a spinlock. See above.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_os_release_lock\">acpi_os_release_lock</a>(<a class=\"id\" href=\"#acpi_spinlock\">acpi_spinlock</a> <a class=\"id\" href=\"#lockp\">lockp</a>, <a class=\"id\" href=\"#acpi_cpu_flags\">acpi_cpu_flags</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(<a class=\"id\" href=\"#lockp\">lockp</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#ACPI_USE_LOCAL_CACHE\">ACPI_USE_LOCAL_CACHE</a>", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_os_create_cache</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  name      - Ascii name for the cache</span>", 
"<span class=\"comment\"> *              size      - Size of each cached object</span>", 
"<span class=\"comment\"> *              depth     - Maximum depth of the cache (in objects) &lt;ignored&gt;</span>", 
"<span class=\"comment\"> *              cache     - Where the new cache object is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a cache object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_create_cache\">acpi_os_create_cache</a>(char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> ** <a class=\"id\" href=\"#cache\">cache</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#cache\">cache</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#size\">size</a>, 0, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#cache\">cache</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_ERROR\">AE_ERROR</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_os_purge_cache</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Cache           - Handle to cache object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Free all objects within the requested cache.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_purge_cache\">acpi_os_purge_cache</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_shrink\">kmem_cache_shrink</a>(<a class=\"id\" href=\"#cache\">cache</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_os_delete_cache</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Cache           - Handle to cache object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Free all objects within the requested cache and delete the</span>", 
"<span class=\"comment\"> *              cache object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_delete_cache\">acpi_os_delete_cache</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_destroy\">kmem_cache_destroy</a>(<a class=\"id\" href=\"#cache\">cache</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_os_release_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Cache       - Handle to cache object</span>", 
"<span class=\"comment\"> *              Object      - The object to be released</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Release an object to the specified cache.  If cache is full,</span>", 
"<span class=\"comment\"> *              the object is deleted.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_os_release_object\">acpi_os_release_object</a>(<a class=\"id\" href=\"#acpi_cache_t\">acpi_cache_t</a> * <a class=\"id\" href=\"#cache\">cache</a>, void *<a class=\"id\" href=\"#object\">object</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#cache\">cache</a>, <a class=\"id\" href=\"#object\">object</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_os_validate_interface</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  interface           - Requested interface to be validated</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      AE_OK if interface is supported, AE_SUPPORT otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Match an interface string to the interfaces supported by the</span>", 
"<span class=\"comment\"> *              host. Strings originate from an AML call to the _OSI method.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_validate_interface\">acpi_os_validate_interface</a> (char *<a class=\"id\" href=\"#interface\">interface</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#osi_additional_string\">osi_additional_string</a>, <a class=\"id\" href=\"#interface\">interface</a>, <a class=\"id\" href=\"#OSI_STRING_LENGTH_MAX\">OSI_STRING_LENGTH_MAX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(\"Linux\", <a class=\"id\" href=\"#interface\">interface</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"BIOS _OSI(Linux) query %s%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#enable\">enable</a> ? \"honored\" : \"ignored\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#cmdline\">cmdline</a> ? \" via cmdline\" :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#dmi\">dmi</a> ? \" via DMI\" : \"\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#osi_linux\">osi_linux</a>.<a class=\"id\" href=\"#enable\">enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_SUPPORT\">AE_SUPPORT</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#acpi_res_list_add\">acpi_res_list_add</a>(struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> *<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>, &amp;<a class=\"id\" href=\"#resource_list_head\">resource_list_head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#resource_list\">resource_list</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#resource_type\">resource_type</a> == <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#resource_type\">resource_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> == <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#start\">start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> == <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#end\">end</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The Region(addr,len) already exist in the list,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * just increase the count</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#count\">count</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#resource_list\">resource_list</a>, &amp;<a class=\"id\" href=\"#resource_list_head\">resource_list_head</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#acpi_res_list_del\">acpi_res_list_del</a>(struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> *<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>, &amp;<a class=\"id\" href=\"#resource_list_head\">resource_list_head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#resource_list\">resource_list</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#resource_type\">resource_type</a> == <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#resource_type\">resource_type</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> == <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#start\">start</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> == <a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#end\">end</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If the res count is decreased to 0,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * remove and free it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#count\">count</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>-><a class=\"id\" href=\"#resource_list\">resource_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#res_list_elem\">res_list_elem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_invalidate_address\">acpi_os_invalidate_address</a>(", 
"    <a class=\"id\" href=\"#u8\">u8</a>                   <a class=\"id\" href=\"#space_id\">space_id</a>,", 
"    <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>   <a class=\"id\" href=\"#address\">address</a>,", 
"    <a class=\"id\" href=\"#acpi_size\">acpi_size</a>               <a class=\"id\" href=\"#length\">length</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#space_id\">space_id</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_MEMORY\">ACPI_ADR_SPACE_SYSTEM_MEMORY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only interference checks against SystemIO and SystemMemory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   are needed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#address\">address</a> + <a class=\"id\" href=\"#length\">length</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>.<a class=\"id\" href=\"#resource_type\">resource_type</a> = <a class=\"id\" href=\"#space_id\">space_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acpi_res_lock\">acpi_res_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_res_list_del\">acpi_res_list_del</a>(&amp;<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acpi_res_lock\">acpi_res_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_PCI_CONFIG\">ACPI_ADR_SPACE_PCI_CONFIG</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_EC\">ACPI_ADR_SPACE_EC</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SMBUS\">ACPI_ADR_SPACE_SMBUS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_CMOS\">ACPI_ADR_SPACE_CMOS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_PCI_BAR_TARGET\">ACPI_ADR_SPACE_PCI_BAR_TARGET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_DATA_TABLE\">ACPI_ADR_SPACE_DATA_TABLE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_FIXED_HARDWARE\">ACPI_ADR_SPACE_FIXED_HARDWARE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_os_validate_address</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  space_id             - ACPI space ID</span>", 
"<span class=\"comment\"> *              address             - Physical address</span>", 
"<span class=\"comment\"> *              length              - Address length</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      AE_OK if address/length is valid for the space_id. Otherwise,</span>", 
"<span class=\"comment\"> *              should return AE_AML_ILLEGAL_ADDRESS.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Validate a system address via the host OS. Used to validate</span>", 
"<span class=\"comment\"> *              the addresses accessed by AML operation regions.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_os_validate_address\">acpi_os_validate_address</a> (", 
"    <a class=\"id\" href=\"#u8\">u8</a>                   <a class=\"id\" href=\"#space_id\">space_id</a>,", 
"    <a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a>   <a class=\"id\" href=\"#address\">address</a>,", 
"    <a class=\"id\" href=\"#acpi_size\">acpi_size</a>               <a class=\"id\" href=\"#length\">length</a>,", 
"    char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#added\">added</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_enforce_resources\">acpi_enforce_resources</a> == <a class=\"id\" href=\"#ENFORCE_RESOURCES_NO\">ENFORCE_RESOURCES_NO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#space_id\">space_id</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_MEMORY\">ACPI_ADR_SPACE_SYSTEM_MEMORY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Only interference checks against SystemIO and SystemMemory</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   are needed */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#acpi_res_list\">acpi_res_list</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACPI names are fixed to 4 bytes, still better use strlcpy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name\">name</a>, 5);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#address\">address</a> + <a class=\"id\" href=\"#length\">length</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#resource_type\">resource_type</a> = <a class=\"id\" href=\"#space_id\">space_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acpi_res_lock\">acpi_res_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#added\">added</a> = <a class=\"id\" href=\"#acpi_res_list_add\">acpi_res_list_add</a>(<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acpi_res_lock\">acpi_res_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s %s resource: start: 0x%llx, end: 0x%llx, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"name: %s\\n\", <a class=\"id\" href=\"#added\">added</a> ? \"Added\" : \"Already exist\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#space_id\">space_id</a> == <a class=\"id\" href=\"#ACPI_ADR_SPACE_SYSTEM_IO\">ACPI_ADR_SPACE_SYSTEM_IO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> ? \"SystemIO\" : \"System Memory\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long)<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long long)<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#added\">added</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_PCI_CONFIG\">ACPI_ADR_SPACE_PCI_CONFIG</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_EC\">ACPI_ADR_SPACE_EC</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_SMBUS\">ACPI_ADR_SPACE_SMBUS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_CMOS\">ACPI_ADR_SPACE_CMOS</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_PCI_BAR_TARGET\">ACPI_ADR_SPACE_PCI_BAR_TARGET</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_DATA_TABLE\">ACPI_ADR_SPACE_DATA_TABLE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_ADR_SPACE_FIXED_HARDWARE\">ACPI_ADR_SPACE_FIXED_HARDWARE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/1f/6c56fc5a0eb32c4e9c25f98a0e408e140969ad.xr', __xr_tmp);
