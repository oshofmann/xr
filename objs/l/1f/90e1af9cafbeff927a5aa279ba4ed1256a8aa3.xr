var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/include/linux/jbd.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Stephen C. Tweedie &lt;sct@redhat.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 1998-2000 Red Hat, Inc --- All Rights Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is part of the Linux kernel and is made available under</span>", 
"<span class=\"comment\"> * the terms of the GNU General Public License, version 2, or at your</span>", 
"<span class=\"comment\"> * option, any later version, incorporated herein by reference.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Definitions for transaction data structures for the buffer cache</span>", 
"<span class=\"comment\"> * filesystem journaling support.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_JBD_H\">_LINUX_JBD_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_JBD_H\">_LINUX_JBD_H</a>", 
"", 
"<span class=\"comment\">/* Allow this file to be included directly into e2fsprogs */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> \"jfs_compat.h\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_DEBUG\">JFS_DEBUG</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#jfs_debug\">jfs_debug</a> <a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>", 
"#else", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#journal\">journal</a>-<a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stddef\">stddef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bit_spinlock\">bit_spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#lockdep\">lockdep</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#journal_oom_retry\">journal_oom_retry</a> 1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define JBD_PARANOID_IOFAIL to cause a kernel BUG() if ext3 finds</span>", 
"<span class=\"comment\"> * certain classes of error which can occur due to failed IOs.  Under</span>", 
"<span class=\"comment\"> * normal use we want ext3 to continue after such errors, because</span>", 
"<span class=\"comment\"> * hardware _can_ fail, but for debugging purposes when running tests on</span>", 
"<span class=\"comment\"> * known-good hardware we may want to trap these errors.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#JBD_PARANOID_IOFAIL\">JBD_PARANOID_IOFAIL</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The default maximum commit age, in seconds.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JBD_DEFAULT_MAX_COMMIT_AGE\">JBD_DEFAULT_MAX_COMMIT_AGE</a> 5", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_JBD_DEBUG\">CONFIG_JBD_DEBUG</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define JBD_EXPENSIVE_CHECKING to enable more expensive internal</span>", 
"<span class=\"comment\"> * consistency checks.  By default we don't do this unless</span>", 
"<span class=\"comment\"> * CONFIG_JBD_DEBUG is on.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JBD_EXPENSIVE_CHECKING\">JBD_EXPENSIVE_CHECKING</a>", 
"extern <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#journal_enable_debug\">journal_enable_debug</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#n\">n</a>) <= <a class=\"id\" href=\"#journal_enable_debug\">journal_enable_debug</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"(%s, %d): %s: \",<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__FILE__\">__FILE__</a>, <a class=\"id\" href=\"#__LINE__\">__LINE__</a>, <a class=\"id\" href=\"#__func__\">__func__</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#f\">f</a>, ## <a class=\"id\" href=\"#a\">a</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} while (0)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(<a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#a\">a</a>...)<span class=\"ts\"/><span class=\"comment\">/**/</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#jbd_alloc\">jbd_alloc</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return (void *)<a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#jbd_free\">jbd_free</a>(void *<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_pages\">free_pages</a>((unsigned long)<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_MIN_JOURNAL_BLOCKS\">JFS_MIN_JOURNAL_BLOCKS</a> 1024", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * typedef handle_t - The handle_t type represents a single atomic update being performed by some process.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All filesystem modifications made by the process go</span>", 
"<span class=\"comment\"> * through this handle.  Recursive operations (such as quota operations)</span>", 
"<span class=\"comment\"> * are gathered into a single update.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The buffer credits field is used to account for journaled buffers</span>", 
"<span class=\"comment\"> * being modified by the running process.  To ensure that there is</span>", 
"<span class=\"comment\"> * enough log space for all outstanding operations, we need to limit the</span>", 
"<span class=\"comment\"> * number of outstanding buffers possible at any time.  When the</span>", 
"<span class=\"comment\"> * operation completes, any buffer credits not used are credited back to</span>", 
"<span class=\"comment\"> * the transaction, so that at all times we know how many buffers the</span>", 
"<span class=\"comment\"> * outstanding updates on a transaction might possibly touch.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is an opaque datatype.</span>", 
"<span class=\"comment\"> **/</span>", 
"typedef struct <a class=\"id\" href=\"#handle_s\">handle_s</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a>;<span class=\"ts\"/><span class=\"comment\">/* Atomic operation type */</span>", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * typedef journal_t - The journal_t maintains all of the journaling state information for a single filesystem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * journal_t is linked to from the fs superblock structure.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We use the journal_t to keep track of all outstanding transaction</span>", 
"<span class=\"comment\"> * activity on the filesystem, and to manage the state of the log</span>", 
"<span class=\"comment\"> * writing process.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is an opaque datatype.</span>", 
"<span class=\"comment\"> **/</span>", 
"typedef struct <a class=\"id\" href=\"#journal_s\">journal_s</a><span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a>;<span class=\"ts\"/><span class=\"comment\">/* Journal control structure */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Internal structures used by the logging mechanism:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_MAGIC_NUMBER\">JFS_MAGIC_NUMBER</a> 0xc03b3998U <span class=\"comment\">/* The first 4 bytes of /dev/random! */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On-disk structures</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Descriptor block types:</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_DESCRIPTOR_BLOCK\">JFS_DESCRIPTOR_BLOCK</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_COMMIT_BLOCK\">JFS_COMMIT_BLOCK</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_SUPERBLOCK_V1\">JFS_SUPERBLOCK_V1</a><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_SUPERBLOCK_V2\">JFS_SUPERBLOCK_V2</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_REVOKE_BLOCK\">JFS_REVOKE_BLOCK</a><span class=\"ts\"/>5", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Standard header for all descriptor blocks:</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#journal_header_s\">journal_header_s</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h_magic\">h_magic</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h_blocktype\">h_blocktype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h_sequence\">h_sequence</a>;", 
"} <a class=\"id\" href=\"#journal_header_t\">journal_header_t</a>;", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The block tag: used to describe a single buffer in the journal</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#journal_block_tag_s\">journal_block_tag_s</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_blocknr\">t_blocknr</a>;<span class=\"ts\"/><span class=\"comment\">/* The on-disk block number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_flags\">t_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* See below */</span>", 
"} <a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The revoke descriptor: used on disk to describe a series of blocks to</span>", 
"<span class=\"comment\"> * be revoked from the log</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#journal_revoke_header_s\">journal_revoke_header_s</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_header_t\">journal_header_t</a> <a class=\"id\" href=\"#r_header\">r_header</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#r_count\">r_count</a>;<span class=\"ts\"/><span class=\"comment\">/* Count of bytes used in the block */</span>", 
"} <a class=\"id\" href=\"#journal_revoke_header_t\">journal_revoke_header_t</a>;", 
"", 
"", 
"<span class=\"comment\">/* Definitions for the journal tag flags word: */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_FLAG_ESCAPE\">JFS_FLAG_ESCAPE</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* on-disk block is escaped */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_FLAG_SAME_UUID\">JFS_FLAG_SAME_UUID</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* block has same uuid as previous */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_FLAG_DELETED\">JFS_FLAG_DELETED</a><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* block deleted by this transaction */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_FLAG_LAST_TAG\">JFS_FLAG_LAST_TAG</a><span class=\"ts\"/>8<span class=\"ts\"/><span class=\"comment\">/* last tag in this descriptor block */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The journal superblock.  All fields are in big-endian byte order.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#journal_superblock_s\">journal_superblock_s</a>", 
"{", 
"<span class=\"comment\">/* 0x0000 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_header_t\">journal_header_t</a> <a class=\"id\" href=\"#s_header\">s_header</a>;", 
"", 
"<span class=\"comment\">/* 0x000C */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Static information describing the journal */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* journal device blocksize */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_maxlen\">s_maxlen</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* total blocks in journal file */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_first\">s_first</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* first block of log information */</span>", 
"", 
"<span class=\"comment\">/* 0x0018 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Dynamic information describing the current state of the log */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_sequence\">s_sequence</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* first commit ID expected in log */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_start\">s_start</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* blocknr of start of log */</span>", 
"", 
"<span class=\"comment\">/* 0x0020 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Error value, as set by journal_abort(). */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_errno\">s_errno</a>;", 
"", 
"<span class=\"comment\">/* 0x0024 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* Remaining fields are only valid in a version-2 superblock */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a>;<span class=\"ts\"/><span class=\"comment\">/* compatible feature set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a>;<span class=\"ts\"/><span class=\"comment\">/* incompatible feature set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a>;<span class=\"ts\"/><span class=\"comment\">/* readonly-compatible feature set */</span>", 
"<span class=\"comment\">/* 0x0030 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_uuid\">s_uuid</a>[16];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 128-bit uuid for journal */</span>", 
"", 
"<span class=\"comment\">/* 0x0040 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_nr_users\">s_nr_users</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Nr of filesystems sharing log */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_dynsuper\">s_dynsuper</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Blocknr of dynamic superblock copy*/</span>", 
"", 
"<span class=\"comment\">/* 0x0048 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_max_transaction\">s_max_transaction</a>;<span class=\"ts\"/><span class=\"comment\">/* Limit of journal blocks per trans.*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_max_trans_data\">s_max_trans_data</a>;<span class=\"ts\"/><span class=\"comment\">/* Limit of data blocks per trans. */</span>", 
"", 
"<span class=\"comment\">/* 0x0050 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#s_padding\">s_padding</a>[44];", 
"", 
"<span class=\"comment\">/* 0x0100 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#s_users\">s_users</a>[16*48];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ids of all fs'es sharing the log */</span>", 
"<span class=\"comment\">/* 0x0400 */</span>", 
"} <a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_HAS_COMPAT_FEATURE\">JFS_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#j\">j</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> >= 2 &&<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/> ((<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_feature_compat\">s_feature_compat</a> &amp; <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>((<a class=\"id\" href=\"#mask\">mask</a>))))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_HAS_RO_COMPAT_FEATURE\">JFS_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#j\">j</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> >= 2 &&<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/> ((<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_feature_ro_compat\">s_feature_ro_compat</a> &amp; <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>((<a class=\"id\" href=\"#mask\">mask</a>))))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_HAS_INCOMPAT_FEATURE\">JFS_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#j\">j</a>,<a class=\"id\" href=\"#mask\">mask</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#j_format_version\">j_format_version</a> >= 2 &&<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/> ((<a class=\"id\" href=\"#j\">j</a>)-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_feature_incompat\">s_feature_incompat</a> &amp; <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>((<a class=\"id\" href=\"#mask\">mask</a>))))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_FEATURE_INCOMPAT_REVOKE\">JFS_FEATURE_INCOMPAT_REVOKE</a><span class=\"ts\"/>0x00000001", 
"", 
"<span class=\"comment\">/* Features known to this kernel version: */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_KNOWN_COMPAT_FEATURES\">JFS_KNOWN_COMPAT_FEATURES</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_KNOWN_ROCOMPAT_FEATURES\">JFS_KNOWN_ROCOMPAT_FEATURES</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_KNOWN_INCOMPAT_FEATURES\">JFS_KNOWN_INCOMPAT_FEATURES</a><span class=\"ts\"/><a class=\"id\" href=\"#JFS_FEATURE_INCOMPAT_REVOKE\">JFS_FEATURE_INCOMPAT_REVOKE</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#assert\">assert</a>)<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!(<a class=\"id\" href=\"#assert\">assert</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_ASSERT_BH\">J_ASSERT_BH</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#expr\">expr</a>)<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#expr\">expr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#expr\">expr</a>)<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#expr\">expr</a>)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#JBD_PARANOID_IOFAIL\">JBD_PARANOID_IOFAIL</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_EXPECT\">J_EXPECT</a>(<a class=\"id\" href=\"#expr\">expr</a>, <a class=\"id\" href=\"#why\">why</a>...)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#expr\">expr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_EXPECT_BH\">J_EXPECT_BH</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#expr\">expr</a>, <a class=\"id\" href=\"#why\">why</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_BH\">J_ASSERT_BH</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#expr\">expr</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_EXPECT_JH\">J_EXPECT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#expr\">expr</a>, <a class=\"id\" href=\"#why\">why</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_JH\">J_ASSERT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#expr\">expr</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__journal_expect\">__journal_expect</a>(<a class=\"id\" href=\"#expr\">expr</a>, <a class=\"id\" href=\"#why\">why</a>...)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/>({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a> = (<a class=\"id\" href=\"#expr\">expr</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#val\">val</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"EXT3-fs unexpected failure: %s;\\n\",# <a class=\"id\" href=\"#expr\">expr</a>); \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#why\">why</a> \"\\n\");<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/><span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     \\", 
"<span class=\"ts\"/>})", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_EXPECT\">J_EXPECT</a>(<a class=\"id\" href=\"#expr\">expr</a>, <a class=\"id\" href=\"#why\">why</a>...)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__journal_expect\">__journal_expect</a>(<a class=\"id\" href=\"#expr\">expr</a>, ## <a class=\"id\" href=\"#why\">why</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_EXPECT_BH\">J_EXPECT_BH</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#expr\">expr</a>, <a class=\"id\" href=\"#why\">why</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#__journal_expect\">__journal_expect</a>(<a class=\"id\" href=\"#expr\">expr</a>, ## <a class=\"id\" href=\"#why\">why</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#J_EXPECT_JH\">J_EXPECT_JH</a>(<a class=\"id\" href=\"#jh\">jh</a>, <a class=\"id\" href=\"#expr\">expr</a>, <a class=\"id\" href=\"#why\">why</a>...)<span class=\"ts\"/><a class=\"id\" href=\"#__journal_expect\">__journal_expect</a>(<a class=\"id\" href=\"#expr\">expr</a>, ## <a class=\"id\" href=\"#why\">why</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"enum <a class=\"id\" href=\"#jbd_state_bits\">jbd_state_bits</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_JBD\">BH_JBD</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Has an attached ext3 journal_head */</span>", 
"<span class=\"ts\"/>  = <a class=\"id\" href=\"#BH_PrivateStart\">BH_PrivateStart</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_JWrite\">BH_JWrite</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Being written to log (@@@ DEBUGGING) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Freed\">BH_Freed</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Has been freed (truncated) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Revoked\">BH_Revoked</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Has been revoked from the log */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_RevokeValid\">BH_RevokeValid</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Revoked flag is valid */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_JBDDirty\">BH_JBDDirty</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Is dirty but journaled */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_State\">BH_State</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pins most journal_head state */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_JournalHead\">BH_JournalHead</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Pins bh-&gt;b_private and jh-&gt;b_bh */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BH_Unshadow\">BH_Unshadow</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Dummy bit, for BJ_Shadow wakeup filtering */</span>", 
"};", 
"", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#JBD\">JBD</a>, <a class=\"id\" href=\"#jbd\">jbd</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#JWrite\">JWrite</a>, <a class=\"id\" href=\"#jwrite\">jwrite</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#JBDDirty\">JBDDirty</a>, <a class=\"id\" href=\"#jbddirty\">jbddirty</a>)", 
"<a class=\"id\" href=\"#TAS_BUFFER_FNS\">TAS_BUFFER_FNS</a>(<a class=\"id\" href=\"#JBDDirty\">JBDDirty</a>, <a class=\"id\" href=\"#jbddirty\">jbddirty</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Revoked\">Revoked</a>, <a class=\"id\" href=\"#revoked\">revoked</a>)", 
"<a class=\"id\" href=\"#TAS_BUFFER_FNS\">TAS_BUFFER_FNS</a>(<a class=\"id\" href=\"#Revoked\">Revoked</a>, <a class=\"id\" href=\"#revoked\">revoked</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#RevokeValid\">RevokeValid</a>, <a class=\"id\" href=\"#revokevalid\">revokevalid</a>)", 
"<a class=\"id\" href=\"#TAS_BUFFER_FNS\">TAS_BUFFER_FNS</a>(<a class=\"id\" href=\"#RevokeValid\">RevokeValid</a>, <a class=\"id\" href=\"#revokevalid\">revokevalid</a>)", 
"<a class=\"id\" href=\"#BUFFER_FNS\">BUFFER_FNS</a>(<a class=\"id\" href=\"#Freed\">Freed</a>, <a class=\"id\" href=\"#freed\">freed</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#jh2bh\">jh2bh</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jh\">jh</a>-><a class=\"id\" href=\"#b_bh\">b_bh</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#bh2jh\">bh2jh</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_private\">b_private</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#jbd_lock_bh_state\">jbd_lock_bh_state</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_spin_lock\">bit_spin_lock</a>(<a class=\"id\" href=\"#BH_State\">BH_State</a>, &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#jbd_trylock_bh_state\">jbd_trylock_bh_state</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bit_spin_trylock\">bit_spin_trylock</a>(<a class=\"id\" href=\"#BH_State\">BH_State</a>, &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#jbd_is_locked_bh_state\">jbd_is_locked_bh_state</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bit_spin_is_locked\">bit_spin_is_locked</a>(<a class=\"id\" href=\"#BH_State\">BH_State</a>, &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#jbd_unlock_bh_state\">jbd_unlock_bh_state</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_spin_unlock\">bit_spin_unlock</a>(<a class=\"id\" href=\"#BH_State\">BH_State</a>, &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#jbd_lock_bh_journal_head\">jbd_lock_bh_journal_head</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_spin_lock\">bit_spin_lock</a>(<a class=\"id\" href=\"#BH_JournalHead\">BH_JournalHead</a>, &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#jbd_unlock_bh_journal_head\">jbd_unlock_bh_journal_head</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_spin_unlock\">bit_spin_unlock</a>(<a class=\"id\" href=\"#BH_JournalHead\">BH_JournalHead</a>, &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_state\">b_state</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#jbd_revoke_table_s\">jbd_revoke_table_s</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct handle_s - this is the concrete type associated with handle_t.</span>", 
"<span class=\"comment\"> * @h_transaction: Which compound transaction is this update a part of?</span>", 
"<span class=\"comment\"> * @h_buffer_credits: Number of remaining buffers we are allowed to dirty.</span>", 
"<span class=\"comment\"> * @h_ref: Reference count on this handle</span>", 
"<span class=\"comment\"> * @h_err: Field for caller's use to track errors through large fs operations</span>", 
"<span class=\"comment\"> * @h_sync: flag for sync-on-close</span>", 
"<span class=\"comment\"> * @h_jdata: flag to force data journaling</span>", 
"<span class=\"comment\"> * @h_aborted: flag indicating fatal error on handle</span>", 
"<span class=\"comment\"> * @h_lockdep_map: lockdep info for debugging lock problems</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#handle_s\">handle_s</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Which compound transaction is this update a part of? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#h_transaction\">h_transaction</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of remaining buffers we are allowed to dirty: */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h_buffer_credits\">h_buffer_credits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reference count on this handle */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h_ref\">h_ref</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Field for caller's use to track errors through large fs */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* operations */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h_err\">h_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Flags [no locking] */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#h_sync\">h_sync</a>:<span class=\"ts\"/><span class=\"ts\"/>1;<span class=\"ts\"/><span class=\"comment\">/* sync-on-close */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#h_jdata\">h_jdata</a>:<span class=\"ts\"/>1;<span class=\"ts\"/><span class=\"comment\">/* force data journaling */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#h_aborted\">h_aborted</a>:<span class=\"ts\"/>1;<span class=\"ts\"/><span class=\"comment\">/* fatal error on handle */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_LOCK_ALLOC\">CONFIG_DEBUG_LOCK_ALLOC</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#lockdep_map\">lockdep_map</a><span class=\"ts\"/><a class=\"id\" href=\"#h_lockdep_map\">h_lockdep_map</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"", 
"<span class=\"comment\">/* The transaction_t type is the guts of the journaling mechanism.  It</span>", 
"<span class=\"comment\"> * tracks a compound transaction through its various states:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RUNNING:<span class=\"ts\"/>accepting new updates</span>", 
"<span class=\"comment\"> * LOCKED:<span class=\"ts\"/>Updates still running but we don't accept new ones</span>", 
"<span class=\"comment\"> * RUNDOWN:<span class=\"ts\"/>Updates are tidying up but have finished requesting</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>new buffers to modify (state not used for now)</span>", 
"<span class=\"comment\"> * FLUSH:       All updates complete, but we are still writing to disk</span>", 
"<span class=\"comment\"> * COMMIT:      All data on disk, writing commit record</span>", 
"<span class=\"comment\"> * FINISHED:<span class=\"ts\"/>We still have to keep the transaction for checkpointing.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The transaction keeps track of all of the buffers modified by a</span>", 
"<span class=\"comment\"> * running transaction, and all of the buffers committed but not yet</span>", 
"<span class=\"comment\"> * flushed to home for finished transactions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Lock ranking:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    j_list_lock</span>", 
"<span class=\"comment\"> *      -&gt;jbd_lock_bh_journal_head()<span class=\"ts\"/>(This is \"innermost\")</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    j_state_lock</span>", 
"<span class=\"comment\"> *    -&gt;jbd_lock_bh_state()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    jbd_lock_bh_state()</span>", 
"<span class=\"comment\"> *    -&gt;j_list_lock</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    j_state_lock</span>", 
"<span class=\"comment\"> *    -&gt;t_handle_lock</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    j_state_lock</span>", 
"<span class=\"comment\"> *    -&gt;j_list_lock<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(journal_unmap_buffer)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#transaction_s\">transaction_s</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Pointer to the journal for this transaction. [no locking] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_t\">journal_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#t_journal\">t_journal</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Sequence number for this transaction [no locking] */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_tid\">t_tid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Transaction's current state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [no locking - only kjournald alters this]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_list_lock] guards transition of a transaction into T_FINISHED</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * state and subsequent call of __journal_drop_transaction()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME: needs barriers</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * KLUDGE: [use j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>enum {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#T_RUNNING\">T_RUNNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#T_LOCKED\">T_LOCKED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#T_FLUSH\">T_FLUSH</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#T_COMMIT\">T_COMMIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#T_COMMIT_RECORD\">T_COMMIT_RECORD</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#T_FINISHED\">T_FINISHED</a>", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_state\">t_state</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Where in the log does this transaction's commit start? [no locking]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_log_start\">t_log_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Number of buffers on the t_buffers list [j_list_lock] */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_nr_buffers\">t_nr_buffers</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of all buffers reserved but not yet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * modified by this transaction [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_reserved_list\">t_reserved_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of all buffers under writeout during</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * commit [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_locked_list\">t_locked_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of all metadata buffers owned by this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transaction [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_buffers\">t_buffers</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of all data buffers still to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * flushed before this transaction can be committed [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_sync_datalist\">t_sync_datalist</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of all forget buffers (superseded</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * buffers which we can un-checkpoint once this transaction commits)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_forget\">t_forget</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of all buffers still to be flushed before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this transaction can be checkpointed. [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_checkpoint_list\">t_checkpoint_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of all buffers submitted for IO while</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * checkpointing. [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_checkpoint_io_list\">t_checkpoint_io_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of temporary buffers currently undergoing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * IO in the log [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_iobuf_list\">t_iobuf_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of metadata buffers being shadowed by log</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * IO.  The IO buffers on the iobuf list and the shadow buffers on this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * list match each other one for one at all times. [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_shadow_list\">t_shadow_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Doubly-linked circular list of control buffers being written to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * log. [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#journal_head\">journal_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#t_log_list\">t_log_list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Protects info related to handles</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_handle_lock\">t_handle_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Number of outstanding updates running on this transaction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [t_handle_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_updates\">t_updates</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Number of buffers reserved for use by all handles in this transaction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * handle but not yet modified. [t_handle_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_outstanding_credits\">t_outstanding_credits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Forward and backward links for the circular list of all transactions</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * awaiting checkpoint. [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#t_cpnext\">t_cpnext</a>, *<a class=\"id\" href=\"#t_cpprev\">t_cpprev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When will the transaction expire (become due for commit), in jiffies?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [no locking]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_expires\">t_expires</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * When this transaction started, in nanoseconds [no locking]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t_start_time\">t_start_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * How many handles used this transaction? [t_handle_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#t_handle_count\">t_handle_count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This transaction is being forced and some process is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * waiting for it to finish.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#t_synchronous_commit\">t_synchronous_commit</a>:1;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct journal_s - this is the concrete type associated with journal_t.</span>", 
"<span class=\"comment\"> * @j_flags:  General journaling state flags</span>", 
"<span class=\"comment\"> * @j_errno:  Is there an outstanding uncleared error on the journal (from a</span>", 
"<span class=\"comment\"> *     prior abort)?</span>", 
"<span class=\"comment\"> * @j_sb_buffer: First part of superblock buffer</span>", 
"<span class=\"comment\"> * @j_superblock: Second part of superblock buffer</span>", 
"<span class=\"comment\"> * @j_format_version: Version of the superblock format</span>", 
"<span class=\"comment\"> * @j_state_lock: Protect the various scalars in the journal</span>", 
"<span class=\"comment\"> * @j_barrier_count:  Number of processes waiting to create a barrier lock</span>", 
"<span class=\"comment\"> * @j_barrier: The barrier lock itself</span>", 
"<span class=\"comment\"> * @j_running_transaction: The current running transaction..</span>", 
"<span class=\"comment\"> * @j_committing_transaction: the transaction we are pushing to disk</span>", 
"<span class=\"comment\"> * @j_checkpoint_transactions: a linked circular list of all transactions</span>", 
"<span class=\"comment\"> *  waiting for checkpointing</span>", 
"<span class=\"comment\"> * @j_wait_transaction_locked: Wait queue for waiting for a locked transaction</span>", 
"<span class=\"comment\"> *  to start committing, or for a barrier lock to be released</span>", 
"<span class=\"comment\"> * @j_wait_logspace: Wait queue for waiting for checkpointing to complete</span>", 
"<span class=\"comment\"> * @j_wait_done_commit: Wait queue for waiting for commit to complete</span>", 
"<span class=\"comment\"> * @j_wait_checkpoint:  Wait queue to trigger checkpointing</span>", 
"<span class=\"comment\"> * @j_wait_commit: Wait queue to trigger commit</span>", 
"<span class=\"comment\"> * @j_wait_updates: Wait queue to wait for updates to complete</span>", 
"<span class=\"comment\"> * @j_checkpoint_mutex: Mutex for locking against concurrent checkpoints</span>", 
"<span class=\"comment\"> * @j_head: Journal head - identifies the first unused block in the journal</span>", 
"<span class=\"comment\"> * @j_tail: Journal tail - identifies the oldest still-used block in the</span>", 
"<span class=\"comment\"> *  journal.</span>", 
"<span class=\"comment\"> * @j_free: Journal free - how many free blocks are there in the journal?</span>", 
"<span class=\"comment\"> * @j_first: The block number of the first usable block</span>", 
"<span class=\"comment\"> * @j_last: The block number one beyond the last usable block</span>", 
"<span class=\"comment\"> * @j_dev: Device where we store the journal</span>", 
"<span class=\"comment\"> * @j_blocksize: blocksize for the location where we store the journal.</span>", 
"<span class=\"comment\"> * @j_blk_offset: starting block offset for into the device where we store the</span>", 
"<span class=\"comment\"> *     journal</span>", 
"<span class=\"comment\"> * @j_fs_dev: Device which holds the client fs.  For internal journal this will</span>", 
"<span class=\"comment\"> *     be equal to j_dev</span>", 
"<span class=\"comment\"> * @j_maxlen: Total maximum capacity of the journal region on disk.</span>", 
"<span class=\"comment\"> * @j_list_lock: Protects the buffer lists and internal buffer state.</span>", 
"<span class=\"comment\"> * @j_inode: Optional inode where we store the journal.  If present, all journal</span>", 
"<span class=\"comment\"> *     block numbers are mapped into this inode via bmap().</span>", 
"<span class=\"comment\"> * @j_tail_sequence:  Sequence number of the oldest transaction in the log</span>", 
"<span class=\"comment\"> * @j_transaction_sequence: Sequence number of the next transaction to grant</span>", 
"<span class=\"comment\"> * @j_commit_sequence: Sequence number of the most recently committed</span>", 
"<span class=\"comment\"> *  transaction</span>", 
"<span class=\"comment\"> * @j_commit_request: Sequence number of the most recent transaction wanting</span>", 
"<span class=\"comment\"> *     commit</span>", 
"<span class=\"comment\"> * @j_uuid: Uuid of client object.</span>", 
"<span class=\"comment\"> * @j_task: Pointer to the current commit thread for this journal</span>", 
"<span class=\"comment\"> * @j_max_transaction_buffers:  Maximum number of metadata buffers to allow in a</span>", 
"<span class=\"comment\"> *     single compound commit transaction</span>", 
"<span class=\"comment\"> * @j_commit_interval: What is the maximum transaction lifetime before we begin</span>", 
"<span class=\"comment\"> *  a commit?</span>", 
"<span class=\"comment\"> * @j_commit_timer:  The timer used to wakeup the commit thread</span>", 
"<span class=\"comment\"> * @j_revoke_lock: Protect the revoke table</span>", 
"<span class=\"comment\"> * @j_revoke: The revoke table - maintains the list of revoked blocks in the</span>", 
"<span class=\"comment\"> *     current transaction.</span>", 
"<span class=\"comment\"> * @j_revoke_table: alternate revoke tables for j_revoke</span>", 
"<span class=\"comment\"> * @j_wbuf: array of buffer_heads for journal_commit_transaction</span>", 
"<span class=\"comment\"> * @j_wbufsize: maximum number of buffer_heads allowed in j_wbuf, the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>number that will fit in j_blocksize</span>", 
"<span class=\"comment\"> * @j_last_sync_writer: most recent pid which did a synchronous write</span>", 
"<span class=\"comment\"> * @j_average_commit_time: the average amount of time in nanoseconds it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>takes to commit a transaction to the disk.</span>", 
"<span class=\"comment\"> * @j_private: An opaque pointer to fs-private information.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#journal_s\">journal_s</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* General journaling state flags [j_state_lock] */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_flags\">j_flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Is there an outstanding uncleared error on the journal (from a prior</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * abort)? [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_errno\">j_errno</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The superblock buffer */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a><span class=\"ts\"/>*<a class=\"id\" href=\"#j_sb_buffer\">j_sb_buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a><span class=\"ts\"/>*<a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Version of the superblock format */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_format_version\">j_format_version</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Protect the various scalars in the journal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_state_lock\">j_state_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Number of processes waiting to create a barrier lock [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_barrier_count\">j_barrier_count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The barrier lock itself */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_barrier\">j_barrier</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Transactions: The current running transaction...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_state_lock] [caller holding open handle]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#j_running_transaction\">j_running_transaction</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the transaction we are pushing to disk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_state_lock] [caller holding open handle]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#j_committing_transaction\">j_committing_transaction</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ... and a linked circular list of all transactions waiting for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * checkpointing. [j_list_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#transaction_t\">transaction_t</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#j_checkpoint_transactions\">j_checkpoint_transactions</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait queue for waiting for a locked transaction to start committing,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or for a barrier lock to be released</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#j_wait_transaction_locked\">j_wait_transaction_locked</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait queue for waiting for checkpointing to complete */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#j_wait_logspace\">j_wait_logspace</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait queue for waiting for commit to complete */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#j_wait_done_commit\">j_wait_done_commit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait queue to trigger checkpointing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#j_wait_checkpoint\">j_wait_checkpoint</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait queue to trigger commit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#j_wait_commit\">j_wait_commit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Wait queue to wait for updates to complete */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wait_queue_head_t\">wait_queue_head_t</a><span class=\"ts\"/><a class=\"id\" href=\"#j_wait_updates\">j_wait_updates</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Semaphore for locking against concurrent checkpoints */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_checkpoint_mutex\">j_checkpoint_mutex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Journal head: identifies the first unused block in the journal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_head\">j_head</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Journal tail: identifies the oldest still-used block in the journal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_tail\">j_tail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Journal free: how many free blocks are there in the journal?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_free\">j_free</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Journal start and end: the block numbers of the first usable block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and one beyond the last usable block in the journal. [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_first\">j_first</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_last\">j_last</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Device, blocksize and starting block offset for the location where we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * store the journal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#j_dev\">j_dev</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_blk_offset\">j_blk_offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Device which holds the client fs.  For internal journal this will be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * equal to j_dev.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#j_fs_dev\">j_fs_dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Total maximum capacity of the journal region on disk. */</span>", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Protects the buffer lists and internal buffer state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_list_lock\">j_list_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Optional inode where we store the journal.  If present, all */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* journal block numbers are mapped into this inode via */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* bmap(). */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#j_inode\">j_inode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Sequence number of the oldest transaction in the log [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_tail_sequence\">j_tail_sequence</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Sequence number of the next transaction to grant [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Sequence number of the most recently committed transaction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_state_lock].</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_commit_sequence\">j_commit_sequence</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Sequence number of the most recent transaction wanting commit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_commit_request\">j_commit_request</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Journal uuid: identifies the object (filesystem, LVM volume etc)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * backed by this journal.  This will eventually be replaced by an array</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of uuids, allowing us to index multiple devices within a single</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * journal and to perform atomic updates across them.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_uuid\">j_uuid</a>[16];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Pointer to the current commit thread for this journal */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#j_task\">j_task</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Maximum number of metadata buffers to allow in a single compound</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * commit transaction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_max_transaction_buffers\">j_max_transaction_buffers</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * What is the maximum transaction lifetime before we begin a commit?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_commit_interval\">j_commit_interval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The timer used to wakeup the commit thread: */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_list\">timer_list</a><span class=\"ts\"/><a class=\"id\" href=\"#j_commit_timer\">j_commit_timer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The revoke table: maintains the list of revoked blocks in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * current transaction.  [j_revoke_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_revoke_lock\">j_revoke_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd_revoke_table_s\">jbd_revoke_table_s</a> *<a class=\"id\" href=\"#j_revoke\">j_revoke</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#jbd_revoke_table_s\">jbd_revoke_table_s</a> *<a class=\"id\" href=\"#j_revoke_table\">j_revoke_table</a>[2];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * array of bhs for journal_commit_transaction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a><span class=\"ts\"/>**<a class=\"id\" href=\"#j_wbuf\">j_wbuf</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_wbufsize\">j_wbufsize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this is the pid of the last person to run a synchronous operation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * through the journal.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pid_t\">pid_t</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_last_sync_writer\">j_last_sync_writer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the average amount of time in nanoseconds it takes to commit a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transaction to the disk.  [j_state_lock]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j_average_commit_time\">j_average_commit_time</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * An opaque pointer to fs-private information.  ext3 puts its</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * superblock pointer here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#j_private\">j_private</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Journal flag definitions</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_UNMOUNT\">JFS_UNMOUNT</a><span class=\"ts\"/>0x001<span class=\"ts\"/><span class=\"comment\">/* Journal thread is being destroyed */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_ABORT\">JFS_ABORT</a><span class=\"ts\"/>0x002<span class=\"ts\"/><span class=\"comment\">/* Journaling has been aborted for errors. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_ACK_ERR\">JFS_ACK_ERR</a><span class=\"ts\"/>0x004<span class=\"ts\"/><span class=\"comment\">/* The errno in the sb has been acked */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_FLUSHED\">JFS_FLUSHED</a><span class=\"ts\"/>0x008<span class=\"ts\"/><span class=\"comment\">/* The journal superblock has been flushed */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_LOADED\">JFS_LOADED</a><span class=\"ts\"/>0x010<span class=\"ts\"/><span class=\"comment\">/* The journal superblock has been loaded */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_BARRIER\">JFS_BARRIER</a><span class=\"ts\"/>0x020<span class=\"ts\"/><span class=\"comment\">/* Use IDE barriers */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JFS_ABORT_ON_SYNCDATA_ERR\">JFS_ABORT_ON_SYNCDATA_ERR</a><span class=\"ts\"/>0x040  <span class=\"comment\">/* Abort the journal on file</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* data write error in ordered</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>* mode */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Function declarations for the journaling transaction and buffer</span>", 
"<span class=\"comment\"> * management</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Filing buffers */</span>", 
"extern void <a class=\"id\" href=\"#journal_unfile_buffer\">journal_unfile_buffer</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *);", 
"extern void <a class=\"id\" href=\"#__journal_unfile_buffer\">__journal_unfile_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *);", 
"extern void <a class=\"id\" href=\"#__journal_refile_buffer\">__journal_refile_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *);", 
"extern void <a class=\"id\" href=\"#journal_refile_buffer\">journal_refile_buffer</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *);", 
"extern void <a class=\"id\" href=\"#__journal_file_buffer\">__journal_file_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *, int);", 
"extern void <a class=\"id\" href=\"#__journal_free_buffer\">__journal_free_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"extern void <a class=\"id\" href=\"#journal_file_buffer\">journal_file_buffer</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *, int);", 
"extern void <a class=\"id\" href=\"#__journal_clean_data_list\">__journal_clean_data_list</a>(<a class=\"id\" href=\"#transaction_t\">transaction_t</a> *<a class=\"id\" href=\"#transaction\">transaction</a>);", 
"", 
"<span class=\"comment\">/* Log buffer allocation */</span>", 
"extern struct <a class=\"id\" href=\"#journal_head\">journal_head</a> * <a class=\"id\" href=\"#journal_get_descriptor_buffer\">journal_get_descriptor_buffer</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"int <a class=\"id\" href=\"#journal_next_log_block\">journal_next_log_block</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, unsigned int *);", 
"", 
"<span class=\"comment\">/* Commit management */</span>", 
"extern void <a class=\"id\" href=\"#journal_commit_transaction\">journal_commit_transaction</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"", 
"<span class=\"comment\">/* Checkpoint list management */</span>", 
"int <a class=\"id\" href=\"#__journal_clean_checkpoint_list\">__journal_clean_checkpoint_list</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>);", 
"int <a class=\"id\" href=\"#__journal_remove_checkpoint\">__journal_remove_checkpoint</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *);", 
"void <a class=\"id\" href=\"#__journal_insert_checkpoint\">__journal_insert_checkpoint</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *, <a class=\"id\" href=\"#transaction_t\">transaction_t</a> *);", 
"", 
"<span class=\"comment\">/* Buffer IO */</span>", 
"extern int", 
"<a class=\"id\" href=\"#journal_write_metadata_buffer\">journal_write_metadata_buffer</a>(<a class=\"id\" href=\"#transaction_t\">transaction_t</a><span class=\"ts\"/>  *<a class=\"id\" href=\"#transaction\">transaction</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#journal_head\">journal_head</a>  *<a class=\"id\" href=\"#jh_in\">jh_in</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#journal_head\">journal_head</a> **<a class=\"id\" href=\"#jh_out\">jh_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"", 
"<span class=\"comment\">/* Transaction locking */</span>", 
"extern void<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__wait_on_journal\">__wait_on_journal</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Journal locking.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We need to lock the journal during transaction state changes so that nobody</span>", 
"<span class=\"comment\"> * ever tries to take a handle on the running transaction while we are in the</span>", 
"<span class=\"comment\"> * middle of moving it to the commit phase.  j_state_lock does this.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that the locking is completely interrupt unsafe.  We never touch</span>", 
"<span class=\"comment\"> * journal structures from interrupts.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#journal_current_handle\">journal_current_handle</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#journal_info\">journal_info</a>;", 
"}", 
"", 
"<span class=\"comment\">/* The journaling code user interface:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create and destroy handles</span>", 
"<span class=\"comment\"> * Register buffer modifications against the current transaction.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#journal_start\">journal_start</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, int <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_restart\">journal_restart</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *, int <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_extend\">journal_extend</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *, int <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_get_write_access\">journal_get_write_access</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_get_create_access\">journal_get_create_access</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_get_undo_access\">journal_get_undo_access</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_dirty_data\">journal_dirty_data</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_dirty_metadata\">journal_dirty_metadata</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern void<span class=\"ts\"/> <a class=\"id\" href=\"#journal_release_buffer\">journal_release_buffer</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_forget\">journal_forget</a> (<a class=\"id\" href=\"#handle_t\">handle_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern void<span class=\"ts\"/> <a class=\"id\" href=\"#journal_sync_buffer\">journal_sync_buffer</a> (struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *);", 
"extern void<span class=\"ts\"/> <a class=\"id\" href=\"#journal_invalidatepage\">journal_invalidatepage</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *, unsigned long);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_try_to_free_buffers\">journal_try_to_free_buffers</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, struct <a class=\"id\" href=\"#page\">page</a> *, <a class=\"id\" href=\"#gfp_t\">gfp_t</a>);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_stop\">journal_stop</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *);", 
"extern int<span class=\"ts\"/> <a class=\"id\" href=\"#journal_flush\">journal_flush</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern void<span class=\"ts\"/> <a class=\"id\" href=\"#journal_lock_updates\">journal_lock_updates</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern void<span class=\"ts\"/> <a class=\"id\" href=\"#journal_unlock_updates\">journal_unlock_updates</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"", 
"extern <a class=\"id\" href=\"#journal_t\">journal_t</a> * <a class=\"id\" href=\"#journal_init_dev\">journal_init_dev</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#fs_dev\">fs_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#start\">start</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#bsize\">bsize</a>);", 
"extern <a class=\"id\" href=\"#journal_t\">journal_t</a> * <a class=\"id\" href=\"#journal_init_inode\">journal_init_inode</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_update_format\">journal_update_format</a> (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_check_used_features\">journal_check_used_features</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#journal_t\">journal_t</a> *, unsigned long, unsigned long, unsigned long);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_check_available_features\">journal_check_available_features</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#journal_t\">journal_t</a> *, unsigned long, unsigned long, unsigned long);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_set_features\">journal_set_features</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#journal_t\">journal_t</a> *, unsigned long, unsigned long, unsigned long);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_create\">journal_create</a>     (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_load\">journal_load</a>       (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_destroy\">journal_destroy</a>    (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_recover\">journal_recover</a>    (<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_wipe\">journal_wipe</a>       (<a class=\"id\" href=\"#journal_t\">journal_t</a> *, int);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_skip_recovery\">journal_skip_recovery</a><span class=\"ts\"/>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern void<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_update_superblock\">journal_update_superblock</a><span class=\"ts\"/>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, int);", 
"extern void<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_abort\">journal_abort</a>      (<a class=\"id\" href=\"#journal_t\">journal_t</a> *, int);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_errno\">journal_errno</a>      (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern void<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_ack_err\">journal_ack_err</a>    (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_clear_err\">journal_clear_err</a>  (<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_bmap\">journal_bmap</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, unsigned int, unsigned int *);", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_force_commit\">journal_force_commit</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * journal_head management</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#journal_add_journal_head\">journal_add_journal_head</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#journal_grab_journal_head\">journal_grab_journal_head</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"void <a class=\"id\" href=\"#journal_remove_journal_head\">journal_remove_journal_head</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>);", 
"void <a class=\"id\" href=\"#journal_put_journal_head\">journal_put_journal_head</a>(struct <a class=\"id\" href=\"#journal_head\">journal_head</a> *<a class=\"id\" href=\"#jh\">jh</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * handle management</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#jbd_handle_cache\">jbd_handle_cache</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#jbd_alloc_handle\">jbd_alloc_handle</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#jbd_handle_cache\">jbd_handle_cache</a>, <a class=\"id\" href=\"#gfp_flags\">gfp_flags</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#jbd_free_handle\">jbd_free_handle</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#jbd_handle_cache\">jbd_handle_cache</a>, <a class=\"id\" href=\"#handle\">handle</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Primary revoke support */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#JOURNAL_REVOKE_DEFAULT_HASH\">JOURNAL_REVOKE_DEFAULT_HASH</a> 256", 
"extern int<span class=\"ts\"/>   <a class=\"id\" href=\"#journal_init_revoke\">journal_init_revoke</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, int);", 
];
xr_frag_insert('l/1f/90e1af9cafbeff927a5aa279ba4ed1256a8aa3.xr', __xr_tmp);
