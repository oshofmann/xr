var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#freezer\">freezer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* </span>", 
"<span class=\"comment\"> * Timeout for stopping processes</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TIMEOUT\">TIMEOUT</a><span class=\"ts\"/>(20 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#freezeable\">freezeable</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> * <a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#p\">p</a> == <a class=\"id\" href=\"#current\">current</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_NOFREEZE\">PF_NOFREEZE</a>) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#exit_state\">exit_state</a> != 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#try_to_freeze_tasks\">try_to_freeze_tasks</a>(<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sig_only\">sig_only</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#g\">g</a>, *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_time\">end_time</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#todo\">todo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#wq_busy\">wq_busy</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#elapsed_csecs64\">elapsed_csecs64</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#elapsed_csecs\">elapsed_csecs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(&amp;<a class=\"id\" href=\"#start\">start</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_time\">end_time</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#TIMEOUT\">TIMEOUT</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sig_only\">sig_only</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freeze_workqueues_begin\">freeze_workqueues_begin</a>();", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#true\">true</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#todo\">todo</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_thread\">do_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#frozen\">frozen</a>(<a class=\"id\" href=\"#p\">p</a>) || !<a class=\"id\" href=\"#freezeable\">freezeable</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#freeze_task\">freeze_task</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#sig_only\">sig_only</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Now that we've done set_freeze_flag, don't</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * perturb a task in TASK_STOPPED or TASK_TRACED.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * It is \"frozen enough\".  If the task does wake</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * up, it will immediately call try_to_freeze.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#task_is_stopped_or_traced\">task_is_stopped_or_traced</a>(<a class=\"id\" href=\"#p\">p</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#freezer_should_skip\">freezer_should_skip</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#todo\">todo</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#while_each_thread\">while_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sig_only\">sig_only</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wq_busy\">wq_busy</a> = <a class=\"id\" href=\"#freeze_workqueues_busy\">freeze_workqueues_busy</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#todo\">todo</a> += <a class=\"id\" href=\"#wq_busy\">wq_busy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#todo\">todo</a> || <a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#jiffies\">jiffies</a>, <a class=\"id\" href=\"#end_time\">end_time</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to retry, but first give the freezing tasks some</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * time to enter the regrigerator.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(10);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_gettimeofday\">do_gettimeofday</a>(&amp;<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elapsed_csecs64\">elapsed_csecs64</a> = <a class=\"id\" href=\"#timeval_to_ns\">timeval_to_ns</a>(&amp;<a class=\"id\" href=\"#end\">end</a>) - <a class=\"id\" href=\"#timeval_to_ns\">timeval_to_ns</a>(&amp;<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#elapsed_csecs64\">elapsed_csecs64</a>, <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a> / 100);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elapsed_csecs\">elapsed_csecs</a> = <a class=\"id\" href=\"#elapsed_csecs64\">elapsed_csecs64</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#todo\">todo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* This does not unfreeze processes that are already frozen</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (we have slightly ugly calling convention in that respect,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and caller must call thaw_processes() if something fails),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but it cleans up leftover PF_FREEZE requests.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"Freezing of tasks failed after %d.%02d seconds \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"(%d tasks refusing to freeze, wq_busy=%d):\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#elapsed_csecs\">elapsed_csecs</a> / 100, <a class=\"id\" href=\"#elapsed_csecs\">elapsed_csecs</a> % 100,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#todo\">todo</a> - <a class=\"id\" href=\"#wq_busy\">wq_busy</a>, <a class=\"id\" href=\"#wq_busy\">wq_busy</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thaw_workqueues\">thaw_workqueues</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#tasklist_lock\">tasklist_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_each_thread\">do_each_thread</a>(<a class=\"id\" href=\"#g\">g</a>, <a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#freezing\">freezing</a>(<a class=\"id\" href=\"#p\">p</a>) && !<a class=\"id\" href=\"#freezer_should_skip\">freezer_should_skip</a>(<a class=\"id\" href=\"#p\">p</a>))", 
];
xr_frag_insert('l/20/09de6d77b9a52fe0d03dcd9238d660cec51b37.xr', __xr_tmp);
