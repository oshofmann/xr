var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_TIME_H\">_LINUX_TIME_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_TIME_H\">_LINUX_TIME_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cache\">cache</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seqlock\">seqlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"# <a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#math64\">math64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_STRUCT_TIMESPEC\">_STRUCT_TIMESPEC</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_STRUCT_TIMESPEC\">_STRUCT_TIMESPEC</a>", 
"struct <a class=\"id\" href=\"#timespec\">timespec</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><a class=\"id\" href=\"#tv_sec\">tv_sec</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* seconds */</span>", 
"<span class=\"ts\"/>long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nanoseconds */</span>", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#timeval\">timeval</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_time_t\">__kernel_time_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tv_sec\">tv_sec</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* seconds */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_suseconds_t\">__kernel_suseconds_t</a><span class=\"ts\"/><a class=\"id\" href=\"#tv_usec\">tv_usec</a>;<span class=\"ts\"/><span class=\"comment\">/* microseconds */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#timezone\">timezone</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#tz_minuteswest\">tz_minuteswest</a>;<span class=\"ts\"/><span class=\"comment\">/* minutes west of Greenwich */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#tz_dsttime\">tz_dsttime</a>;<span class=\"ts\"/><span class=\"comment\">/* type of dst correction */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"extern struct <a class=\"id\" href=\"#timezone\">timezone</a> <a class=\"id\" href=\"#sys_tz\">sys_tz</a>;", 
"", 
"<span class=\"comment\">/* Parameters used to convert the timespec values: */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MSEC_PER_SEC\">MSEC_PER_SEC</a><span class=\"ts\"/>1000L", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#USEC_PER_MSEC\">USEC_PER_MSEC</a><span class=\"ts\"/>1000L", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a><span class=\"ts\"/>1000L", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NSEC_PER_MSEC\">NSEC_PER_MSEC</a><span class=\"ts\"/>1000000L", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a><span class=\"ts\"/>1000000L", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a><span class=\"ts\"/>1000000000L", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#FSEC_PER_SEC\">FSEC_PER_SEC</a><span class=\"ts\"/>1000000000000000LL", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TIME_T_MAX\">TIME_T_MAX</a><span class=\"ts\"/>(<a class=\"id\" href=\"#time_t\">time_t</a>)((1UL << ((sizeof(<a class=\"id\" href=\"#time_t\">time_t</a>) << 3) - 1)) - 1)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#timespec_equal\">timespec_equal</a>(const struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"                                 const struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> == <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>) && (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> == <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * lhs &lt; rhs:  return &lt;0</span>", 
"<span class=\"comment\"> * lhs == rhs: return 0</span>", 
"<span class=\"comment\"> * lhs &gt; rhs:  return &gt;0</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#timespec_compare\">timespec_compare</a>(const struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#lhs\">lhs</a>, const struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#rhs\">rhs</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lhs\">lhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> &lt; <a class=\"id\" href=\"#rhs\">rhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lhs\">lhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> &gt; <a class=\"id\" href=\"#rhs\">rhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lhs\">lhs</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> - <a class=\"id\" href=\"#rhs\">rhs</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#timeval_compare\">timeval_compare</a>(const struct <a class=\"id\" href=\"#timeval\">timeval</a> *<a class=\"id\" href=\"#lhs\">lhs</a>, const struct <a class=\"id\" href=\"#timeval\">timeval</a> *<a class=\"id\" href=\"#rhs\">rhs</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lhs\">lhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> &lt; <a class=\"id\" href=\"#rhs\">rhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lhs\">lhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> &gt; <a class=\"id\" href=\"#rhs\">rhs</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lhs\">lhs</a>-><a class=\"id\" href=\"#tv_usec\">tv_usec</a> - <a class=\"id\" href=\"#rhs\">rhs</a>-><a class=\"id\" href=\"#tv_usec\">tv_usec</a>;", 
"}", 
"", 
"extern unsigned long <a class=\"id\" href=\"#mktime\">mktime</a>(const unsigned int <a class=\"id\" href=\"#year\">year</a>, const unsigned int <a class=\"id\" href=\"#mon\">mon</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const unsigned int <a class=\"id\" href=\"#day\">day</a>, const unsigned int <a class=\"id\" href=\"#hour\">hour</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const unsigned int <a class=\"id\" href=\"#min\">min</a>, const unsigned int <a class=\"id\" href=\"#sec\">sec</a>);", 
"", 
"extern void <a class=\"id\" href=\"#set_normalized_timespec\">set_normalized_timespec</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#sec\">sec</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nsec\">nsec</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * timespec_add_safe assumes both values are positive and checks</span>", 
"<span class=\"comment\"> * for overflow. It will return TIME_T_MAX if the reutrn would be</span>", 
"<span class=\"comment\"> * smaller then either of the arguments.</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#timespec_add_safe\">timespec_add_safe</a>(const struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#lhs\">lhs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#rhs\">rhs</a>);", 
"", 
];
xr_frag_insert('l/20/0c8c05919cb91919c51d916a7bc4db3da4fb13.xr', __xr_tmp);
