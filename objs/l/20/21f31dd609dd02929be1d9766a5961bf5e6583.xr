var __xr_tmp = [
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#idle\">idle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sync_bitops\">sync_bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hypercall\">hypercall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hypervisor\">hypervisor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#xen\">xen</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hvm\">hvm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#xen\">xen</a>-<a class=\"id\" href=\"#ops\">ops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#events\">events</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#xen\">xen</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#event_channel\">event_channel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#hvm\">hvm</a>/<a class=\"id\" href=\"#hvm_op\">hvm_op</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#hvm\">hvm</a>/<a class=\"id\" href=\"#params\">params</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This lock protects updates to the following mapping and reference-count</span>", 
"<span class=\"comment\"> * arrays. The lock does not need to be acquired to read the mapping tables.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"comment\">/* IRQ &lt;-&gt; VIRQ mapping. */</span>", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(int [<a class=\"id\" href=\"#NR_VIRQS\">NR_VIRQS</a>], <a class=\"id\" href=\"#virq_to_irq\">virq_to_irq</a>) = {[0 ... <a class=\"id\" href=\"#NR_VIRQS\">NR_VIRQS</a>-1] = -1};", 
"", 
"<span class=\"comment\">/* IRQ &lt;-&gt; IPI mapping */</span>", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(int [<a class=\"id\" href=\"#XEN_NR_IPIS\">XEN_NR_IPIS</a>], <a class=\"id\" href=\"#ipi_to_irq\">ipi_to_irq</a>) = {[0 ... <a class=\"id\" href=\"#XEN_NR_IPIS\">XEN_NR_IPIS</a>-1] = -1};", 
"", 
"<span class=\"comment\">/* Interrupt types. */</span>", 
"enum <a class=\"id\" href=\"#xen_irq_type\">xen_irq_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQT_UNBOUND\">IRQT_UNBOUND</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQT_PIRQ\">IRQT_PIRQ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQT_VIRQ\">IRQT_VIRQ</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQT_IPI\">IRQT_IPI</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQT_EVTCHN\">IRQT_EVTCHN</a>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Packed IRQ information:</span>", 
"<span class=\"comment\"> * type - enum xen_irq_type</span>", 
"<span class=\"comment\"> * event channel - irq-&gt;event channel mapping</span>", 
"<span class=\"comment\"> * cpu - cpu this event channel is bound to</span>", 
"<span class=\"comment\"> * index - type-specific information:</span>", 
"<span class=\"comment\"> *    PIRQ - vector, with MSB being \"needs EIO\"</span>", 
"<span class=\"comment\"> *    VIRQ - virq number</span>", 
"<span class=\"comment\"> *    IPI - IPI vector</span>", 
"<span class=\"comment\"> *    EVTCHN -</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#irq_info\">irq_info</a>", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#xen_irq_type\">xen_irq_type</a> <a class=\"id\" href=\"#type\">type</a>;<span class=\"ts\"/><span class=\"comment\">/* type */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#evtchn\">evtchn</a>;<span class=\"ts\"/><span class=\"comment\">/* event channel */</span>", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#cpu\">cpu</a>;<span class=\"ts\"/><span class=\"comment\">/* cpu bound */</span>", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#virq\">virq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#ipi\">ipi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#gsi\">gsi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#vector\">vector</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} <a class=\"id\" href=\"#pirq\">pirq</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#irq_info\">irq_info</a> <a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#NR_IRQS\">NR_IRQS</a>];", 
"", 
"static int <a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#NR_EVENT_CHANNELS\">NR_EVENT_CHANNELS</a>] = {", 
"<span class=\"ts\"/>[0 ... <a class=\"id\" href=\"#NR_EVENT_CHANNELS\">NR_EVENT_CHANNELS</a>-1] = -1", 
"};", 
"struct <a class=\"id\" href=\"#cpu_evtchn_s\">cpu_evtchn_s</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bits\">bits</a>[<a class=\"id\" href=\"#NR_EVENT_CHANNELS\">NR_EVENT_CHANNELS</a>/<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>];", 
"};", 
"static struct <a class=\"id\" href=\"#cpu_evtchn_s\">cpu_evtchn_s</a> *<a class=\"id\" href=\"#cpu_evtchn_mask_p\">cpu_evtchn_mask_p</a>;", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long *<a class=\"id\" href=\"#cpu_evtchn_mask\">cpu_evtchn_mask</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_evtchn_mask_p\">cpu_evtchn_mask_p</a>[<a class=\"id\" href=\"#cpu\">cpu</a>].<a class=\"id\" href=\"#bits\">bits</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Xen will never allocate port zero for any purpose. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VALID_EVTCHN\">VALID_EVTCHN</a>(<a class=\"id\" href=\"#chn\">chn</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#chn\">chn</a>) != 0)", 
"", 
"static struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#xen_dynamic_chip\">xen_dynamic_chip</a>;", 
"static struct <a class=\"id\" href=\"#irq_chip\">irq_chip</a> <a class=\"id\" href=\"#xen_percpu_chip\">xen_percpu_chip</a>;", 
"", 
"<span class=\"comment\">/* Constructor for packed IRQ information. */</span>", 
"static struct <a class=\"id\" href=\"#irq_info\">irq_info</a> <a class=\"id\" href=\"#mk_unbound_info\">mk_unbound_info</a>(void)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#irq_info\">irq_info</a>) { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#IRQT_UNBOUND\">IRQT_UNBOUND</a> };", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irq_info\">irq_info</a> <a class=\"id\" href=\"#mk_evtchn_info\">mk_evtchn_info</a>(unsigned short <a class=\"id\" href=\"#evtchn\">evtchn</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#irq_info\">irq_info</a>) { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#IRQT_EVTCHN\">IRQT_EVTCHN</a>, .<a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#evtchn\">evtchn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#cpu\">cpu</a> = 0 };", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irq_info\">irq_info</a> <a class=\"id\" href=\"#mk_ipi_info\">mk_ipi_info</a>(unsigned short <a class=\"id\" href=\"#evtchn\">evtchn</a>, enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#ipi\">ipi</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#irq_info\">irq_info</a>) { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#IRQT_IPI\">IRQT_IPI</a>, .<a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#evtchn\">evtchn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#cpu\">cpu</a> = 0, .<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#ipi\">ipi</a> = <a class=\"id\" href=\"#ipi\">ipi</a> };", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irq_info\">irq_info</a> <a class=\"id\" href=\"#mk_virq_info\">mk_virq_info</a>(unsigned short <a class=\"id\" href=\"#evtchn\">evtchn</a>, unsigned short <a class=\"id\" href=\"#virq\">virq</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#irq_info\">irq_info</a>) { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#IRQT_VIRQ\">IRQT_VIRQ</a>, .<a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#evtchn\">evtchn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#cpu\">cpu</a> = 0, .<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#virq\">virq</a> = <a class=\"id\" href=\"#virq\">virq</a> };", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#irq_info\">irq_info</a> <a class=\"id\" href=\"#mk_pirq_info\">mk_pirq_info</a>(unsigned short <a class=\"id\" href=\"#evtchn\">evtchn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned short <a class=\"id\" href=\"#gsi\">gsi</a>, unsigned short <a class=\"id\" href=\"#vector\">vector</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#irq_info\">irq_info</a>) { .<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#IRQT_PIRQ\">IRQT_PIRQ</a>, .<a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#evtchn\">evtchn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#cpu\">cpu</a> = 0, .<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#pirq\">pirq</a> = { .<a class=\"id\" href=\"#gsi\">gsi</a> = <a class=\"id\" href=\"#gsi\">gsi</a>, .<a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#vector\">vector</a> } };", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Accessors for packed IRQ information.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#irq_info\">irq_info</a> *<a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>];", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#evtchn_from_irq\">evtchn_from_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)-><a class=\"id\" href=\"#evtchn\">evtchn</a>;", 
"}", 
"", 
"unsigned <a class=\"id\" href=\"#irq_from_evtchn\">irq_from_evtchn</a>(unsigned int <a class=\"id\" href=\"#evtchn\">evtchn</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>];", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#irq_from_evtchn\">irq_from_evtchn</a>);", 
"", 
"static enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#ipi_from_irq\">ipi_from_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_info\">irq_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#IRQT_IPI\">IRQT_IPI</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#ipi\">ipi</a>;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#virq_from_irq\">virq_from_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_info\">irq_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#IRQT_VIRQ\">IRQT_VIRQ</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#virq\">virq</a>;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#gsi_from_irq\">gsi_from_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_info\">irq_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#IRQT_PIRQ\">IRQT_PIRQ</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#pirq\">pirq</a>.<a class=\"id\" href=\"#gsi\">gsi</a>;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#vector_from_irq\">vector_from_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_info\">irq_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#IRQT_PIRQ\">IRQT_PIRQ</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#pirq\">pirq</a>.<a class=\"id\" href=\"#vector\">vector</a>;", 
"}", 
"", 
"static enum <a class=\"id\" href=\"#xen_irq_type\">xen_irq_type</a> <a class=\"id\" href=\"#type_from_irq\">type_from_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)-><a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#cpu_from_irq\">cpu_from_irq</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)-><a class=\"id\" href=\"#cpu\">cpu</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#cpu_from_evtchn\">cpu_from_evtchn</a>(unsigned int <a class=\"id\" href=\"#evtchn\">evtchn</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>];", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> != -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cpu_from_irq\">cpu_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#active_evtchns\">active_evtchns</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#sh\">sh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#idx\">idx</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>[<a class=\"id\" href=\"#idx\">idx</a>] &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_evtchn_mask\">cpu_evtchn_mask</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)[<a class=\"id\" href=\"#idx\">idx</a>] &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>~<a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_mask\">evtchn_mask</a>[<a class=\"id\" href=\"#idx\">idx</a>]);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bind_evtchn_to_cpu\">bind_evtchn_to_cpu</a>(unsigned int <a class=\"id\" href=\"#chn\">chn</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#chn\">chn</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#irq\">irq</a> == -1);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>)-><a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(<a class=\"id\" href=\"#cpu\">cpu</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clear_bit\">__clear_bit</a>(<a class=\"id\" href=\"#chn\">chn</a>, <a class=\"id\" href=\"#cpu_evtchn_mask\">cpu_evtchn_mask</a>(<a class=\"id\" href=\"#cpu_from_irq\">cpu_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#chn\">chn</a>, <a class=\"id\" href=\"#cpu_evtchn_mask\">cpu_evtchn_mask</a>(<a class=\"id\" href=\"#cpu\">cpu</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>].<a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#init_evtchn_cpu_bindings\">init_evtchn_cpu_bindings</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* By default all event channels notify CPU#0. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_irq_desc\">for_each_irq_desc</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#desc\">desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpumask_copy\">cpumask_copy</a>(<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#affinity\">affinity</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(0));", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#cpu_evtchn_mask\">cpu_evtchn_mask</a>(0), ~0, sizeof(<a class=\"id\" href=\"#cpu_evtchn_mask\">cpu_evtchn_mask</a>(0)));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#clear_evtchn\">clear_evtchn</a>(int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sync_clear_bit\">sync_clear_bit</a>(<a class=\"id\" href=\"#port\">port</a>, &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>[0]);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_evtchn\">set_evtchn</a>(int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sync_set_bit\">sync_set_bit</a>(<a class=\"id\" href=\"#port\">port</a>, &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>[0]);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#test_evtchn\">test_evtchn</a>(int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sync_test_bit\">sync_test_bit</a>(<a class=\"id\" href=\"#port\">port</a>, &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>[0]);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * notify_remote_via_irq - send event to remote end of event channel via irq</span>", 
"<span class=\"comment\"> * @irq: irq of event channel to send event to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Unlike notify_remote_via_evtchn(), this is safe to use across</span>", 
"<span class=\"comment\"> * save/restore. Notifications on a broken connection are silently</span>", 
"<span class=\"comment\"> * dropped.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#notify_remote_via_irq\">notify_remote_via_irq</a>(int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#evtchn_from_irq\">evtchn_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#VALID_EVTCHN\">VALID_EVTCHN</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#notify_remote_via_evtchn\">notify_remote_via_evtchn</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#notify_remote_via_irq\">notify_remote_via_irq</a>);", 
"", 
"static void <a class=\"id\" href=\"#mask_evtchn\">mask_evtchn</a>(int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sync_set_bit\">sync_set_bit</a>(<a class=\"id\" href=\"#port\">port</a>, &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#evtchn_mask\">evtchn_mask</a>[0]);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unmask_evtchn\">unmask_evtchn</a>(int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#get_cpu\">get_cpu</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Slow path (hypercall) if this is a non-local port. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#cpu\">cpu</a> != <a class=\"id\" href=\"#cpu_from_evtchn\">cpu_from_evtchn</a>(<a class=\"id\" href=\"#port\">port</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_unmask\">evtchn_unmask</a> <a class=\"id\" href=\"#unmask\">unmask</a> = { .<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#port\">port</a> };", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#HYPERVISOR_event_channel_op\">HYPERVISOR_event_channel_op</a>(<a class=\"id\" href=\"#EVTCHNOP_unmask\">EVTCHNOP_unmask</a>, &amp;<a class=\"id\" href=\"#unmask\">unmask</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vcpu_info\">vcpu_info</a> *<a class=\"id\" href=\"#vcpu_info\">vcpu_info</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#xen_vcpu\">xen_vcpu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_clear_bit\">sync_clear_bit</a>(<a class=\"id\" href=\"#port\">port</a>, &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#evtchn_mask\">evtchn_mask</a>[0]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The following is basically the equivalent of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 'hw_resend_irq'. Just like a real IO-APIC we 'lose</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the interrupt edge' if the channel is masked.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sync_test_bit\">sync_test_bit</a>(<a class=\"id\" href=\"#port\">port</a>, &amp;<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>[0]) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#sync_test_and_set_bit\">sync_test_and_set_bit</a>(<a class=\"id\" href=\"#port\">port</a> / <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>-><a class=\"id\" href=\"#evtchn_pending_sel\">evtchn_pending_sel</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>-><a class=\"id\" href=\"#evtchn_upcall_pending\">evtchn_upcall_pending</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#find_unbound_irq\">find_unbound_irq</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#irq\">irq</a> = 0; <a class=\"id\" href=\"#irq\">irq</a> &lt; <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>; <a class=\"id\" href=\"#irq\">irq</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only 0-&gt;15 have init'd desc; handle irq &gt; 16 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a> == &amp;<a class=\"id\" href=\"#no_irq_chip\">no_irq_chip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#chip\">chip</a> != &amp;<a class=\"id\" href=\"#xen_dynamic_chip\">xen_dynamic_chip</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>].<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IRQT_UNBOUND\">IRQT_UNBOUND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == <a class=\"id\" href=\"#nr_irqs\">nr_irqs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"No available IRQ to bind to: increase nr_irqs!\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc_alloc_node\">irq_to_desc_alloc_node</a>(<a class=\"id\" href=\"#irq\">irq</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#desc\">desc</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dynamic_irq_init_keep_chip_data\">dynamic_irq_init_keep_chip_data</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#bind_evtchn_to_irq\">bind_evtchn_to_irq</a>(unsigned int <a class=\"id\" href=\"#evtchn\">evtchn</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#find_unbound_irq\">find_unbound_irq</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_irq_chip_and_handler_name\">set_irq_chip_and_handler_name</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#xen_dynamic_chip\">xen_dynamic_chip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#handle_edge_irq\">handle_edge_irq</a>, \"event\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>] = <a class=\"id\" href=\"#mk_evtchn_info\">mk_evtchn_info</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bind_evtchn_to_irq\">bind_evtchn_to_irq</a>);", 
"", 
"static int <a class=\"id\" href=\"#bind_ipi_to_irq\">bind_ipi_to_irq</a>(unsigned int <a class=\"id\" href=\"#ipi\">ipi</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_ipi\">evtchn_bind_ipi</a> <a class=\"id\" href=\"#bind_ipi\">bind_ipi</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#evtchn\">evtchn</a>, <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ipi_to_irq\">ipi_to_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)[<a class=\"id\" href=\"#ipi\">ipi</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#find_unbound_irq\">find_unbound_irq</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_irq_chip_and_handler_name\">set_irq_chip_and_handler_name</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#xen_percpu_chip\">xen_percpu_chip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#handle_percpu_irq\">handle_percpu_irq</a>, \"ipi\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_ipi\">bind_ipi</a>.<a class=\"id\" href=\"#vcpu\">vcpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_event_channel_op\">HYPERVISOR_event_channel_op</a>(<a class=\"id\" href=\"#EVTCHNOP_bind_ipi\">EVTCHNOP_bind_ipi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#bind_ipi\">bind_ipi</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#bind_ipi\">bind_ipi</a>.<a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>] = <a class=\"id\" href=\"#mk_ipi_info\">mk_ipi_info</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>, <a class=\"id\" href=\"#ipi\">ipi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ipi_to_irq\">ipi_to_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)[<a class=\"id\" href=\"#ipi\">ipi</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_evtchn_to_cpu\">bind_evtchn_to_cpu</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#bind_virq_to_irq\">bind_virq_to_irq</a>(unsigned int <a class=\"id\" href=\"#virq\">virq</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_virq\">evtchn_bind_virq</a> <a class=\"id\" href=\"#bind_virq\">bind_virq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#evtchn\">evtchn</a>, <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#virq_to_irq\">virq_to_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)[<a class=\"id\" href=\"#virq\">virq</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_virq\">bind_virq</a>.<a class=\"id\" href=\"#virq\">virq</a> = <a class=\"id\" href=\"#virq\">virq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_virq\">bind_virq</a>.<a class=\"id\" href=\"#vcpu\">vcpu</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_event_channel_op\">HYPERVISOR_event_channel_op</a>(<a class=\"id\" href=\"#EVTCHNOP_bind_virq\">EVTCHNOP_bind_virq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#bind_virq\">bind_virq</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#bind_virq\">bind_virq</a>.<a class=\"id\" href=\"#port\">port</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#find_unbound_irq\">find_unbound_irq</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_irq_chip_and_handler_name\">set_irq_chip_and_handler_name</a>(<a class=\"id\" href=\"#irq\">irq</a>, &amp;<a class=\"id\" href=\"#xen_percpu_chip\">xen_percpu_chip</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#handle_percpu_irq\">handle_percpu_irq</a>, \"virq\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>] = <a class=\"id\" href=\"#mk_virq_info\">mk_virq_info</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>, <a class=\"id\" href=\"#virq\">virq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#virq_to_irq\">virq_to_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)[<a class=\"id\" href=\"#virq\">virq</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_evtchn_to_cpu\">bind_evtchn_to_cpu</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unbind_from_irq\">unbind_from_irq</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_close\">evtchn_close</a> <a class=\"id\" href=\"#close\">close</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#evtchn_from_irq\">evtchn_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#VALID_EVTCHN\">VALID_EVTCHN</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#close\">close</a>.<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#evtchn\">evtchn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HYPERVISOR_event_channel_op\">HYPERVISOR_event_channel_op</a>(<a class=\"id\" href=\"#EVTCHNOP_close\">EVTCHNOP_close</a>, &amp;<a class=\"id\" href=\"#close\">close</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#type_from_irq\">type_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQT_VIRQ\">IRQT_VIRQ</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#virq_to_irq\">virq_to_irq</a>, <a class=\"id\" href=\"#cpu_from_evtchn\">cpu_from_evtchn</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#virq_from_irq\">virq_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)] = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IRQT_IPI\">IRQT_IPI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ipi_to_irq\">ipi_to_irq</a>, <a class=\"id\" href=\"#cpu_from_evtchn\">cpu_from_evtchn</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>[<a class=\"id\" href=\"#ipi_from_irq\">ipi_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>)] = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Closed ports are implicitly re-bound to VCPU0. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_evtchn_to_cpu\">bind_evtchn_to_cpu</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>] = -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>].<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#IRQT_UNBOUND\">IRQT_UNBOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>] = <a class=\"id\" href=\"#mk_unbound_info\">mk_unbound_info</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dynamic_irq_cleanup\">dynamic_irq_cleanup</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#bind_evtchn_to_irqhandler\">bind_evtchn_to_irqhandler</a>(unsigned int <a class=\"id\" href=\"#evtchn\">evtchn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#devname\">devname</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#bind_evtchn_to_irq\">bind_evtchn_to_irq</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#irqflags\">irqflags</a>, <a class=\"id\" href=\"#devname\">devname</a>, <a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irq\">unbind_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bind_evtchn_to_irqhandler\">bind_evtchn_to_irqhandler</a>);", 
"", 
"int <a class=\"id\" href=\"#bind_virq_to_irqhandler\">bind_virq_to_irqhandler</a>(unsigned int <a class=\"id\" href=\"#virq\">virq</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>, const char *<a class=\"id\" href=\"#devname\">devname</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#bind_virq_to_irq\">bind_virq_to_irq</a>(<a class=\"id\" href=\"#virq\">virq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#irqflags\">irqflags</a>, <a class=\"id\" href=\"#devname\">devname</a>, <a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irq\">unbind_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#bind_virq_to_irqhandler\">bind_virq_to_irqhandler</a>);", 
"", 
"int <a class=\"id\" href=\"#bind_ipi_to_irqhandler\">bind_ipi_to_irqhandler</a>(enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#ipi\">ipi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#devname\">devname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#bind_ipi_to_irq\">bind_ipi_to_irq</a>(<a class=\"id\" href=\"#ipi\">ipi</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irqflags\">irqflags</a> |= <a class=\"id\" href=\"#IRQF_NO_SUSPEND\">IRQF_NO_SUSPEND</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#handler\">handler</a>, <a class=\"id\" href=\"#irqflags\">irqflags</a>, <a class=\"id\" href=\"#devname\">devname</a>, <a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irq\">unbind_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_irq\">free_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unbind_from_irq\">unbind_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>);", 
"", 
"void <a class=\"id\" href=\"#xen_send_IPI_one\">xen_send_IPI_one</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#vector\">vector</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#ipi_to_irq\">ipi_to_irq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>)[<a class=\"id\" href=\"#vector\">vector</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#irq\">irq</a> &lt; 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#notify_remote_via_irq\">notify_remote_via_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#xen_debug_interrupt\">xen_debug_interrupt</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#sh\">sh</a> = <a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#debug_lock\">debug_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#debug_lock\">debug_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"vcpu %d\\n  \", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vcpu_info\">vcpu_info</a> *<a class=\"id\" href=\"#v\">v</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#xen_vcpu\">xen_vcpu</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%d: masked=%d pending=%d event_sel %08lx\\n  \", <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#get_irq_regs\">get_irq_regs</a>() && <a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#cpu\">cpu</a>) ? <a class=\"id\" href=\"#xen_irqs_disabled\">xen_irqs_disabled</a>(<a class=\"id\" href=\"#get_irq_regs\">get_irq_regs</a>()) : <a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#evtchn_upcall_mask\">evtchn_upcall_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#evtchn_upcall_pending\">evtchn_upcall_pending</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>-><a class=\"id\" href=\"#evtchn_pending_sel\">evtchn_pending_sel</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"pending:\\n   \");", 
"<span class=\"ts\"/>for(<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>)-1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%08lx%s\", <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> % 8 == 0 ? \"\\n   \" : \" \");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\nmasks:\\n   \");", 
"<span class=\"ts\"/>for(<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_mask\">evtchn_mask</a>)-1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%08lx%s\", <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_mask\">evtchn_mask</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> % 8 == 0 ? \"\\n   \" : \" \");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\nunmasked:\\n   \");", 
"<span class=\"ts\"/>for(<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_mask\">evtchn_mask</a>)-1; <a class=\"id\" href=\"#i\">i</a> >= 0; <a class=\"id\" href=\"#i\">i</a>--)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"%08lx%s\", <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; ~<a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_mask\">evtchn_mask</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> % 8 == 0 ? \"\\n   \" : \" \");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"\\npending list:\\n\");", 
"<span class=\"ts\"/>for(<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NR_EVENT_CHANNELS\">NR_EVENT_CHANNELS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sync_test_bit\">sync_test_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#sh\">sh</a>-><a class=\"id\" href=\"#evtchn_pending\">evtchn_pending</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"  %d: event %d -> irq %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cpu_from_evtchn\">cpu_from_evtchn</a>(<a class=\"id\" href=\"#i\">i</a>), <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#debug_lock\">debug_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(unsigned, <a class=\"id\" href=\"#xed_nesting_count\">xed_nesting_count</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Search the CPUs pending events bitmasks.  For each one found, map</span>", 
"<span class=\"comment\"> * the event number to an irq, and feed it into do_IRQ() for</span>", 
"<span class=\"comment\"> * handling.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Xen uses a two-level bitmap to speed searching.  The first level is</span>", 
"<span class=\"comment\"> * a bitset of words which contain pending event bits.  The second</span>", 
"<span class=\"comment\"> * level is a bitset of pending events themselves.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__xen_evtchn_do_upcall\">__xen_evtchn_do_upcall</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#get_cpu\">get_cpu</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#shared_info\">shared_info</a> *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#HYPERVISOR_shared_info\">HYPERVISOR_shared_info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vcpu_info\">vcpu_info</a> *<a class=\"id\" href=\"#vcpu_info\">vcpu_info</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#xen_vcpu\">xen_vcpu</a>);", 
" <span class=\"ts\"/>unsigned <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pending_words\">pending_words</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>-><a class=\"id\" href=\"#evtchn_upcall_pending\">evtchn_upcall_pending</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#xed_nesting_count\">xed_nesting_count</a>)++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a> <span class=\"comment\">/* No need for a barrier -- XCHG is a barrier on x86. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clear master flag /before/ clearing selector flag. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pending_words\">pending_words</a> = <a class=\"id\" href=\"#xchg\">xchg</a>(&amp;<a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>-><a class=\"id\" href=\"#evtchn_pending_sel\">evtchn_pending_sel</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#pending_words\">pending_words</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pending_bits\">pending_bits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#word_idx\">word_idx</a> = <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#pending_words\">pending_words</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pending_words\">pending_words</a> &= ~(1UL << <a class=\"id\" href=\"#word_idx\">word_idx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#pending_bits\">pending_bits</a> = <a class=\"id\" href=\"#active_evtchns\">active_evtchns</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#word_idx\">word_idx</a>)) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bit_idx\">bit_idx</a> = <a class=\"id\" href=\"#__ffs\">__ffs</a>(<a class=\"id\" href=\"#pending_bits\">pending_bits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#port\">port</a> = (<a class=\"id\" href=\"#word_idx\">word_idx</a> * <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>) + <a class=\"id\" href=\"#bit_idx\">bit_idx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#port\">port</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_desc\">irq_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a> != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#irq_to_desc\">irq_to_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#generic_handle_irq_desc\">generic_handle_irq_desc</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#irqs_disabled\">irqs_disabled</a>());", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#xed_nesting_count\">xed_nesting_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#xed_nesting_count\">xed_nesting_count</a>) = 0;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#count\">count</a> != 1 || <a class=\"id\" href=\"#vcpu_info\">vcpu_info</a>-><a class=\"id\" href=\"#evtchn_upcall_pending\">evtchn_upcall_pending</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu\">put_cpu</a>();", 
"}", 
"", 
"void <a class=\"id\" href=\"#xen_evtchn_do_upcall\">xen_evtchn_do_upcall</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#old_regs\">old_regs</a> = <a class=\"id\" href=\"#set_irq_regs\">set_irq_regs</a>(<a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_idle\">exit_idle</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_enter\">irq_enter</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__xen_evtchn_do_upcall\">__xen_evtchn_do_upcall</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_exit\">irq_exit</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_irq_regs\">set_irq_regs</a>(<a class=\"id\" href=\"#old_regs\">old_regs</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#xen_hvm_evtchn_do_upcall\">xen_hvm_evtchn_do_upcall</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__xen_evtchn_do_upcall\">__xen_evtchn_do_upcall</a>();", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#xen_hvm_evtchn_do_upcall\">xen_hvm_evtchn_do_upcall</a>);", 
"", 
"<span class=\"comment\">/* Rebind a new event channel to an existing irq. */</span>", 
"void <a class=\"id\" href=\"#rebind_evtchn_irq\">rebind_evtchn_irq</a>(int <a class=\"id\" href=\"#evtchn\">evtchn</a>, int <a class=\"id\" href=\"#irq\">irq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irq_info\">irq_info</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#info_for_irq\">info_for_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure the irq is masked, since the new event channel</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   will also be masked. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_irq\">disable_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* After resume the irq&lt;-&gt;evtchn mappings are all cleared out */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>] != -1);", 
"<span class=\"ts\"/><span class=\"comment\">/* Expect irq to have been bound before,</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   so there should be a proper type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#IRQT_UNBOUND\">IRQT_UNBOUND</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evtchn_to_irq\">evtchn_to_irq</a>[<a class=\"id\" href=\"#evtchn\">evtchn</a>] = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_info\">irq_info</a>[<a class=\"id\" href=\"#irq\">irq</a>] = <a class=\"id\" href=\"#mk_evtchn_info\">mk_evtchn_info</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#irq_mapping_update_lock\">irq_mapping_update_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* new event channels are always bound to cpu 0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_set_affinity\">irq_set_affinity</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#cpumask_of\">cpumask_of</a>(0));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unmask the event channel. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_irq\">enable_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Rebind an evtchn so that it gets delivered to a specific cpu */</span>", 
"static int <a class=\"id\" href=\"#rebind_irq_to_cpu\">rebind_irq_to_cpu</a>(unsigned <a class=\"id\" href=\"#irq\">irq</a>, unsigned <a class=\"id\" href=\"#tcpu\">tcpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_bind_vcpu\">evtchn_bind_vcpu</a> <a class=\"id\" href=\"#bind_vcpu\">bind_vcpu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#evtchn\">evtchn</a> = <a class=\"id\" href=\"#evtchn_from_irq\">evtchn_from_irq</a>(<a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* events delivered via platform PCI interrupts are always</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * routed to vcpu 0 */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#VALID_EVTCHN\">VALID_EVTCHN</a>(<a class=\"id\" href=\"#evtchn\">evtchn</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#xen_hvm_domain\">xen_hvm_domain</a>() && !<a class=\"id\" href=\"#xen_have_vector_callback\">xen_have_vector_callback</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Send future instances of this interrupt to other vcpu. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bind_vcpu\">bind_vcpu</a>.<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#evtchn\">evtchn</a>;", 
];
xr_frag_insert('l/20/21f31dd609dd02929be1d9766a5961bf5e6583.xr', __xr_tmp);
