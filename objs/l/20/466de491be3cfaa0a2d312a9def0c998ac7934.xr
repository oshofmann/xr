var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ext2_fs\">ext2_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext2 mount options</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext2_mount_options\">ext2_mount_options</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#s_mount_opt\">s_mount_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#s_resuid\">s_resuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#s_resgid\">s_resgid</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * second extended file system inode data in memory</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext2_inode_info\">ext2_inode_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_data\">i_data</a>[15];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_flags\">i_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_faddr\">i_faddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#i_frag_no\">i_frag_no</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#i_frag_size\">i_frag_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#i_state\">i_state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_dir_acl\">i_dir_acl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_dtime\">i_dtime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i_block_group is the number of the block group which contains</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this file's inode.  Constant across the lifetime of the inode,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it is used for making block allocation decisions - we try to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * place a file's data blocks near its inode block, and new inodes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * near to their parent directory's inode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_block_group\">i_block_group</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* block reservation info */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext2_block_alloc_info\">ext2_block_alloc_info</a> *<a class=\"id\" href=\"#i_block_alloc_info\">i_block_alloc_info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#i_dir_start_lookup\">i_dir_start_lookup</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EXT2_FS_XATTR\">CONFIG_EXT2_FS_XATTR</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Extended attributes can be read independently of the main file</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * data. Taking i_mutex even when reading would cause contention</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * between readers of EAs and writers of regular file data, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instead we synchronize on xattr_sem when reading or changing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EAs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rw_semaphore\">rw_semaphore</a> <a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> <a class=\"id\" href=\"#i_meta_lock\">i_meta_lock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * truncate_mutex is for serialising ext2_truncate() against</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext2_getblock().  It also protects the internals of the inode's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * reservation data structures: ext2_reserve_window and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ext2_reserve_window_node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#truncate_mutex\">truncate_mutex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a><span class=\"ts\"/><a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#i_orphan\">i_orphan</a>;<span class=\"ts\"/><span class=\"comment\">/* unlinked but open inodes */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inode dynamic state flags</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT2_STATE_NEW\">EXT2_STATE_NEW</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x00000001 <span class=\"comment\">/* inode is newly created */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Function prototypes</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ok, these declarations are also in &lt;linux/kernel.h&gt; but none of the</span>", 
"<span class=\"comment\"> * ext2 source programs needs to include it so they are duplicated here.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#ext2_inode_info\">ext2_inode_info</a> *<a class=\"id\" href=\"#EXT2_I\">EXT2_I</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext2_inode_info\">ext2_inode_info</a>, <a class=\"id\" href=\"#vfs_inode\">vfs_inode</a>);", 
"}", 
"", 
"<span class=\"comment\">/* balloc.c */</span>", 
"extern int <a class=\"id\" href=\"#ext2_bg_has_super\">ext2_bg_has_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#group\">group</a>);", 
"extern unsigned long <a class=\"id\" href=\"#ext2_bg_num_gdb\">ext2_bg_num_gdb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#group\">group</a>);", 
"extern <a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a> <a class=\"id\" href=\"#ext2_new_block\">ext2_new_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, unsigned long, int *);", 
"extern <a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a> <a class=\"id\" href=\"#ext2_new_blocks\">ext2_new_blocks</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, unsigned long,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *, int *);", 
"extern void <a class=\"id\" href=\"#ext2_free_blocks\">ext2_free_blocks</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *, unsigned long,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long);", 
"extern unsigned long <a class=\"id\" href=\"#ext2_count_free_blocks\">ext2_count_free_blocks</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern unsigned long <a class=\"id\" href=\"#ext2_count_dirs\">ext2_count_dirs</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern void <a class=\"id\" href=\"#ext2_check_blocks_bitmap\">ext2_check_blocks_bitmap</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern struct <a class=\"id\" href=\"#ext2_group_desc\">ext2_group_desc</a> * <a class=\"id\" href=\"#ext2_get_group_desc\">ext2_get_group_desc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#block_group\">block_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> ** <a class=\"id\" href=\"#bh\">bh</a>);", 
"extern void <a class=\"id\" href=\"#ext2_discard_reservation\">ext2_discard_reservation</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext2_should_retry_alloc\">ext2_should_retry_alloc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int *<a class=\"id\" href=\"#retries\">retries</a>);", 
"extern void <a class=\"id\" href=\"#ext2_init_block_alloc_info\">ext2_init_block_alloc_info</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern void <a class=\"id\" href=\"#ext2_rsv_window_add\">ext2_rsv_window_add</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#ext2_reserve_window_node\">ext2_reserve_window_node</a> *<a class=\"id\" href=\"#rsv\">rsv</a>);", 
"", 
"<span class=\"comment\">/* dir.c */</span>", 
"extern int <a class=\"id\" href=\"#ext2_add_link\">ext2_add_link</a> (struct <a class=\"id\" href=\"#dentry\">dentry</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern <a class=\"id\" href=\"#ino_t\">ino_t</a> <a class=\"id\" href=\"#ext2_inode_by_name\">ext2_inode_by_name</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#qstr\">qstr</a> *);", 
"extern int <a class=\"id\" href=\"#ext2_make_empty\">ext2_make_empty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern struct <a class=\"id\" href=\"#ext2_dir_entry_2\">ext2_dir_entry_2</a> * <a class=\"id\" href=\"#ext2_find_entry\">ext2_find_entry</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *,struct <a class=\"id\" href=\"#qstr\">qstr</a> *, struct <a class=\"id\" href=\"#page\">page</a> **);", 
"extern int <a class=\"id\" href=\"#ext2_delete_entry\">ext2_delete_entry</a> (struct <a class=\"id\" href=\"#ext2_dir_entry_2\">ext2_dir_entry_2</a> *, struct <a class=\"id\" href=\"#page\">page</a> *);", 
"extern int <a class=\"id\" href=\"#ext2_empty_dir\">ext2_empty_dir</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern struct <a class=\"id\" href=\"#ext2_dir_entry_2\">ext2_dir_entry_2</a> * <a class=\"id\" href=\"#ext2_dotdot\">ext2_dotdot</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#page\">page</a> **);", 
"extern void <a class=\"id\" href=\"#ext2_set_link\">ext2_set_link</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#ext2_dir_entry_2\">ext2_dir_entry_2</a> *, struct <a class=\"id\" href=\"#page\">page</a> *, struct <a class=\"id\" href=\"#inode\">inode</a> *, int);", 
"", 
"<span class=\"comment\">/* ialloc.c */</span>", 
"extern struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#ext2_new_inode\">ext2_new_inode</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *, int);", 
"extern void <a class=\"id\" href=\"#ext2_free_inode\">ext2_free_inode</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern unsigned long <a class=\"id\" href=\"#ext2_count_free_inodes\">ext2_count_free_inodes</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern void <a class=\"id\" href=\"#ext2_check_inodes_bitmap\">ext2_check_inodes_bitmap</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"extern unsigned long <a class=\"id\" href=\"#ext2_count_free\">ext2_count_free</a> (struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *, unsigned);", 
"", 
"<span class=\"comment\">/* inode.c */</span>", 
"extern struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ext2_iget\">ext2_iget</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *, unsigned long);", 
"extern int <a class=\"id\" href=\"#ext2_write_inode\">ext2_write_inode</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#writeback_control\">writeback_control</a> *);", 
"extern void <a class=\"id\" href=\"#ext2_evict_inode\">ext2_evict_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext2_sync_inode\">ext2_sync_inode</a> (struct <a class=\"id\" href=\"#inode\">inode</a> *);", 
"extern int <a class=\"id\" href=\"#ext2_get_block\">ext2_get_block</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, <a class=\"id\" href=\"#sector_t\">sector_t</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *, int);", 
"extern int <a class=\"id\" href=\"#ext2_setattr\">ext2_setattr</a> (struct <a class=\"id\" href=\"#dentry\">dentry</a> *, struct <a class=\"id\" href=\"#iattr\">iattr</a> *);", 
"extern void <a class=\"id\" href=\"#ext2_set_inode_flags\">ext2_set_inode_flags</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>);", 
"extern void <a class=\"id\" href=\"#ext2_get_inode_flags\">ext2_get_inode_flags</a>(struct <a class=\"id\" href=\"#ext2_inode_info\">ext2_inode_info</a> *);", 
"extern int <a class=\"id\" href=\"#ext2_fiemap\">ext2_fiemap</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#fiemap_extent_info\">fiemap_extent_info</a> *<a class=\"id\" href=\"#fieinfo\">fieinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"comment\">/* ioctl.c */</span>", 
"extern long <a class=\"id\" href=\"#ext2_ioctl\">ext2_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *, unsigned int, unsigned long);", 
"extern long <a class=\"id\" href=\"#ext2_compat_ioctl\">ext2_compat_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *, unsigned int, unsigned long);", 
"", 
"<span class=\"comment\">/* namei.c */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#ext2_get_parent\">ext2_get_parent</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>);", 
"", 
"<span class=\"comment\">/* super.c */</span>", 
"extern void <a class=\"id\" href=\"#ext2_error\">ext2_error</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *, const char *, const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 3, 4)));", 
"extern void <a class=\"id\" href=\"#ext2_msg\">ext2_msg</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *, const char *, const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 3, 4)));", 
"extern void <a class=\"id\" href=\"#ext2_update_dynamic_rev\">ext2_update_dynamic_rev</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>);", 
"extern void <a class=\"id\" href=\"#ext2_write_super\">ext2_write_super</a> (struct <a class=\"id\" href=\"#super_block\">super_block</a> *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inodes and files operations</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* dir.c */</span>", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ext2_dir_operations\">ext2_dir_operations</a>;", 
"", 
"<span class=\"comment\">/* file.c */</span>", 
"extern int <a class=\"id\" href=\"#ext2_fsync\">ext2_fsync</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, int <a class=\"id\" href=\"#datasync\">datasync</a>);", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext2_file_inode_operations\">ext2_file_inode_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ext2_file_operations\">ext2_file_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ext2_xip_file_operations\">ext2_xip_file_operations</a>;", 
"", 
"<span class=\"comment\">/* inode.c */</span>", 
"extern const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> <a class=\"id\" href=\"#ext2_aops\">ext2_aops</a>;", 
"extern const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> <a class=\"id\" href=\"#ext2_aops_xip\">ext2_aops_xip</a>;", 
"extern const struct <a class=\"id\" href=\"#address_space_operations\">address_space_operations</a> <a class=\"id\" href=\"#ext2_nobh_aops\">ext2_nobh_aops</a>;", 
"", 
"<span class=\"comment\">/* namei.c */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext2_dir_inode_operations\">ext2_dir_inode_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext2_special_inode_operations\">ext2_special_inode_operations</a>;", 
"", 
"<span class=\"comment\">/* symlink.c */</span>", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext2_fast_symlink_inode_operations\">ext2_fast_symlink_inode_operations</a>;", 
"extern const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ext2_symlink_inode_operations\">ext2_symlink_inode_operations</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a>", 
"<a class=\"id\" href=\"#ext2_group_first_block_no\">ext2_group_first_block_no</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, unsigned long <a class=\"id\" href=\"#group_no\">group_no</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#group_no\">group_no</a> * (<a class=\"id\" href=\"#ext2_fsblk_t\">ext2_fsblk_t</a>)<a class=\"id\" href=\"#EXT2_BLOCKS_PER_GROUP\">EXT2_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT2_SB\">EXT2_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>);", 
"}", 
];
xr_frag_insert('l/20/466de491be3cfaa0a2d312a9def0c998ac7934.xr', __xr_tmp);
