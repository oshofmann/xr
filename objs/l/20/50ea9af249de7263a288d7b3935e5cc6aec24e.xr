var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Resizable simple ram filesystem for Linux.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 Linus Torvalds.</span>", 
"<span class=\"comment\"> *               2000 Transmeta Corp.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Usage limits added by David Gibson, Linuxcare Australia.</span>", 
"<span class=\"comment\"> * This file is released under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NOTE! This filesystem is probably most useful</span>", 
"<span class=\"comment\"> * not as a real filesystem, but as an example of</span>", 
"<span class=\"comment\"> * how virtual filesystems can be written.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It doesn't get much simpler than this. Consider</span>", 
"<span class=\"comment\"> * that this file implements the full semantics of</span>", 
"<span class=\"comment\"> * a POSIX-compliant read-write filesystem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note in particular how the filesystem does not</span>", 
"<span class=\"comment\"> * need to implement any data structures of its own</span>", 
"<span class=\"comment\"> * to keep track of the virtual data: using the VFS</span>", 
"<span class=\"comment\"> * caches is sufficient.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#backing\">backing</a>-<a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ramfs\">ramfs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#magic\">magic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAMFS_DEFAULT_MODE\">RAMFS_DEFAULT_MODE</a><span class=\"ts\"/>0755", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#ramfs_ops\">ramfs_ops</a>;", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ramfs_dir_inode_operations\">ramfs_dir_inode_operations</a>;", 
"", 
"static struct <a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> <a class=\"id\" href=\"#ramfs_backing_dev_info\">ramfs_backing_dev_info</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"ramfs\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ra_pages\">ra_pages</a><span class=\"ts\"/>= 0,<span class=\"ts\"/><span class=\"comment\">/* No readahead */</span>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#capabilities\">capabilities</a><span class=\"ts\"/>= <a class=\"id\" href=\"#BDI_CAP_NO_ACCT_AND_WRITEBACK\">BDI_CAP_NO_ACCT_AND_WRITEBACK</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#BDI_CAP_MAP_DIRECT\">BDI_CAP_MAP_DIRECT</a> | <a class=\"id\" href=\"#BDI_CAP_MAP_COPY\">BDI_CAP_MAP_COPY</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#BDI_CAP_READ_MAP\">BDI_CAP_READ_MAP</a> | <a class=\"id\" href=\"#BDI_CAP_WRITE_MAP\">BDI_CAP_WRITE_MAP</a> | <a class=\"id\" href=\"#BDI_CAP_EXEC_MAP\">BDI_CAP_EXEC_MAP</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ramfs_get_inode\">ramfs_get_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#new_inode\">new_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_init_owner\">inode_init_owner</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#a_ops\">a_ops</a> = &amp;<a class=\"id\" href=\"#ramfs_aops\">ramfs_aops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>-><a class=\"id\" href=\"#backing_dev_info\">backing_dev_info</a> = &amp;<a class=\"id\" href=\"#ramfs_backing_dev_info\">ramfs_backing_dev_info</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_gfp_mask\">mapping_set_gfp_mask</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#GFP_HIGHUSER\">GFP_HIGHUSER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapping_set_unevictable\">mapping_set_unevictable</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_special_inode\">init_special_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#ramfs_file_inode_operations\">ramfs_file_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#ramfs_file_operations\">ramfs_file_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#ramfs_dir_inode_operations\">ramfs_dir_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_fop\">i_fop</a> = &amp;<a class=\"id\" href=\"#simple_dir_operations\">simple_dir_operations</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* directory inodes start off with i_nlink == 2 (for \".\" entry) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_nlink\">inc_nlink</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#page_symlink_inode_operations\">page_symlink_inode_operations</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * File creation. Allocate an inode, and we're done..</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/* SMP-safe */</span>", 
"static int", 
"<a class=\"id\" href=\"#ramfs_mknod\">ramfs_mknod</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ramfs_get_inode\">ramfs_get_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);<span class=\"ts\"/><span class=\"comment\">/* Extra count - pin the dentry in core */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ramfs_mkdir\">ramfs_mkdir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#ramfs_mknod\">ramfs_mknod</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a> | <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_nlink\">inc_nlink</a>(<a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ramfs_create\">ramfs_create</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ramfs_mknod\">ramfs_mknod</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a> | <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>, 0);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ramfs_symlink\">ramfs_symlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char * <a class=\"id\" href=\"#symname\">symname</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ramfs_get_inode\">ramfs_get_inode</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a>|<a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#symname\">symname</a>)+1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#page_symlink\">page_symlink</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#symname\">symname</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_instantiate\">d_instantiate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#ramfs_dir_inode_operations\">ramfs_dir_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#create\">create</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ramfs_create\">ramfs_create</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lookup\">lookup</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_lookup\">simple_lookup</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#link\">link</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_link\">simple_link</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlink\">unlink</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_unlink\">simple_unlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#symlink\">symlink</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ramfs_symlink\">ramfs_symlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mkdir\">mkdir</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ramfs_mkdir\">ramfs_mkdir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rmdir\">rmdir</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_rmdir\">simple_rmdir</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mknod\">mknod</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ramfs_mknod\">ramfs_mknod</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#rename\">rename</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_rename\">simple_rename</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#super_operations\">super_operations</a> <a class=\"id\" href=\"#ramfs_ops\">ramfs_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#statfs\">statfs</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#simple_statfs\">simple_statfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#drop_inode\">drop_inode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_delete_inode\">generic_delete_inode</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show_options\">show_options</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_show_options\">generic_show_options</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ramfs_mount_opts\">ramfs_mount_opts</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#umode_t\">umode_t</a> <a class=\"id\" href=\"#mode\">mode</a>;", 
"};", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_mode\">Opt_mode</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Opt_err\">Opt_err</a>", 
"};", 
"", 
"static const <a class=\"id\" href=\"#match_table_t\">match_table_t</a> <a class=\"id\" href=\"#tokens\">tokens</a> = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_mode\">Opt_mode</a>, \"mode=%o\"},", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#Opt_err\">Opt_err</a>, <a class=\"id\" href=\"#NULL\">NULL</a>}", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ramfs_fs_info\">ramfs_fs_info</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ramfs_mount_opts\">ramfs_mount_opts</a> <a class=\"id\" href=\"#mount_opts\">mount_opts</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ramfs_parse_options\">ramfs_parse_options</a>(char *<a class=\"id\" href=\"#data\">data</a>, struct <a class=\"id\" href=\"#ramfs_mount_opts\">ramfs_mount_opts</a> *<a class=\"id\" href=\"#opts\">opts</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#substring_t\">substring_t</a> <a class=\"id\" href=\"#args\">args</a>[<a class=\"id\" href=\"#MAX_OPT_ARGS\">MAX_OPT_ARGS</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#option\">option</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#token\">token</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#RAMFS_DEFAULT_MODE\">RAMFS_DEFAULT_MODE</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#data\">data</a>, \",\")) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#token\">token</a> = <a class=\"id\" href=\"#match_token\">match_token</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#tokens\">tokens</a>, <a class=\"id\" href=\"#args\">args</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#token\">token</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#Opt_mode\">Opt_mode</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#match_octal\">match_octal</a>(&amp;<a class=\"id\" href=\"#args\">args</a>[0], &amp;<a class=\"id\" href=\"#option\">option</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#opts\">opts</a>-><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#option\">option</a> &amp; <a class=\"id\" href=\"#S_IALLUGO\">S_IALLUGO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We might like to report bad mount options here;</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but traditionally ramfs has ignored all mount options,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and as it is used as a !CONFIG_SHMEM simple substitute</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * for tmpfs, better continue to ignore other mount options.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ramfs_fill_super\">ramfs_fill_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, void *<a class=\"id\" href=\"#data\">data</a>, int <a class=\"id\" href=\"#silent\">silent</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ramfs_fs_info\">ramfs_fs_info</a> *<a class=\"id\" href=\"#fsi\">fsi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#save_mount_options\">save_mount_options</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#data\">data</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsi\">fsi</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ramfs_fs_info\">ramfs_fs_info</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_fs_info\">s_fs_info</a> = <a class=\"id\" href=\"#fsi\">fsi</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fsi\">fsi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ramfs_parse_options\">ramfs_parse_options</a>(<a class=\"id\" href=\"#data\">data</a>, &amp;<a class=\"id\" href=\"#fsi\">fsi</a>-><a class=\"id\" href=\"#mount_opts\">mount_opts</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#MAX_LFS_FILESIZE\">MAX_LFS_FILESIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#PAGE_CACHE_SIZE\">PAGE_CACHE_SIZE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a><span class=\"ts\"/>= <a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_magic\">s_magic</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#RAMFS_MAGIC\">RAMFS_MAGIC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ramfs_ops\">ramfs_ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a><span class=\"ts\"/><span class=\"ts\"/>= 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#ramfs_get_inode\">ramfs_get_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a> | <a class=\"id\" href=\"#fsi\">fsi</a>-><a class=\"id\" href=\"#mount_opts\">mount_opts</a>.<a class=\"id\" href=\"#mode\">mode</a>, 0);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#d_alloc_root\">d_alloc_root</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_root\">s_root</a> = <a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#root\">root</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/20/50ea9af249de7263a288d7b3935e5cc6aec24e.xr', __xr_tmp);
