var __xr_tmp = [
"struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a>;", 
"struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a>;", 
"", 
"struct <a class=\"id\" href=\"#tty_operations\">tty_operations</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> * (*<a class=\"id\" href=\"#lookup\">lookup</a>)(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#idx\">idx</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#install\">install</a>)(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#remove\">remove</a>)(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#open\">open</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> * <a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#close\">close</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> * <a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#shutdown\">shutdown</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cleanup\">cleanup</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#write\">write</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> * <a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const unsigned char *<a class=\"id\" href=\"#buf\">buf</a>, int <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#put_char\">put_char</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, unsigned char <a class=\"id\" href=\"#ch\">ch</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#flush_chars\">flush_chars</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#write_room\">write_room</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#chars_in_buffer\">chars_in_buffer</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>int  (*<a class=\"id\" href=\"#ioctl\">ioctl</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>long (*<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#set_termios\">set_termios</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#ktermios\">ktermios</a> * <a class=\"id\" href=\"#old\">old</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#throttle\">throttle</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> * <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#unthrottle\">unthrottle</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> * <a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#stop\">stop</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#start\">start</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#hangup\">hangup</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#break_ctl\">break_ctl</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#set_ldisc\">set_ldisc</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#wait_until_sent\">wait_until_sent</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#send_xchar\">send_xchar</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, char <a class=\"id\" href=\"#ch\">ch</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#tiocmget\">tiocmget</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#tiocmset\">tiocmset</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#set\">set</a>, unsigned int <a class=\"id\" href=\"#clear\">clear</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#resize\">resize</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#winsize\">winsize</a> *<a class=\"id\" href=\"#ws\">ws</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#set_termiox\">set_termiox</a>)(struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> *<a class=\"id\" href=\"#tty\">tty</a>, struct <a class=\"id\" href=\"#termiox\">termiox</a> *<a class=\"id\" href=\"#tnew\">tnew</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CONSOLE_POLL\">CONFIG_CONSOLE_POLL</a>", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#poll_init\">poll_init</a>)(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#line\">line</a>, char *<a class=\"id\" href=\"#options\">options</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#poll_get_char\">poll_get_char</a>)(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#line\">line</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#poll_put_char\">poll_put_char</a>)(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, int <a class=\"id\" href=\"#line\">line</a>, char <a class=\"id\" href=\"#ch\">ch</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#proc_fops\">proc_fops</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#magic\">magic</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* magic number for this structure */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kref\">kref</a> <a class=\"id\" href=\"#kref\">kref</a>;<span class=\"ts\"/><span class=\"comment\">/* Reference management */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cdev\">cdev</a> <a class=\"id\" href=\"#cdev\">cdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a><span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#driver_name\">driver_name</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#name_base\">name_base</a>;<span class=\"ts\"/><span class=\"comment\">/* offset of printed name */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#major\">major</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* major device number */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#minor_start\">minor_start</a>;<span class=\"ts\"/><span class=\"comment\">/* start of minor device number */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#minor_num\">minor_num</a>;<span class=\"ts\"/><span class=\"comment\">/* number of *possible* devices */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of devices allocated */</span>", 
"<span class=\"ts\"/>short<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* type of tty driver */</span>", 
"<span class=\"ts\"/>short<span class=\"ts\"/><a class=\"id\" href=\"#subtype\">subtype</a>;<span class=\"ts\"/><span class=\"comment\">/* subtype of tty driver */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> <a class=\"id\" href=\"#init_termios\">init_termios</a>; <span class=\"comment\">/* Initial termios */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* tty driver flags */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#proc_entry\">proc_entry</a>; <span class=\"comment\">/* /proc fs entry */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#other\">other</a>; <span class=\"comment\">/* only used for the PTY driver */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Pointer to the tty data structures</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tty_struct\">tty_struct</a> **<a class=\"id\" href=\"#ttys\">ttys</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> **<a class=\"id\" href=\"#termios\">termios</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ktermios\">ktermios</a> **<a class=\"id\" href=\"#termios_locked\">termios_locked</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#driver_state\">driver_state</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Driver methods</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tty_operations\">tty_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>;", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#tty_drivers\">tty_drivers</a>;", 
"", 
"extern struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#alloc_tty_driver\">alloc_tty_driver</a>(int <a class=\"id\" href=\"#lines\">lines</a>);", 
"extern void <a class=\"id\" href=\"#put_tty_driver\">put_tty_driver</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>);", 
"extern void <a class=\"id\" href=\"#tty_set_operations\">tty_set_operations</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#tty_operations\">tty_operations</a> *<a class=\"id\" href=\"#op\">op</a>);", 
"extern struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#tty_find_polling_driver\">tty_find_polling_driver</a>(char *<a class=\"id\" href=\"#name\">name</a>, int *<a class=\"id\" href=\"#line\">line</a>);", 
"", 
"extern void <a class=\"id\" href=\"#tty_driver_kref_put\">tty_driver_kref_put</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#tty_driver_kref_get\">tty_driver_kref_get</a>(struct <a class=\"id\" href=\"#tty_driver\">tty_driver</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kref_get\">kref_get</a>(&amp;<a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#kref\">kref</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d\">d</a>;", 
"}", 
"", 
"<span class=\"comment\">/* tty driver magic number */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_MAGIC\">TTY_DRIVER_MAGIC</a><span class=\"ts\"/><span class=\"ts\"/>0x5402", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * tty driver flags</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * TTY_DRIVER_RESET_TERMIOS --- requests the tty layer to reset the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>termios setting when the last process has closed the device.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Used for PTY's, in particular.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * TTY_DRIVER_REAL_RAW --- if set, indicates that the driver will</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>guarantee never not to set any special character handling</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>flags if ((IGNBRK || (!BRKINT &amp;&amp; !PARMRK)) &amp;&amp; (IGNPAR ||</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>!INPCK)).  That is, if there is no reason for the driver to</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>send notifications of parity and break characters up to the</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>line driver, it won't do so.  This allows the line driver to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>optimize for this case if this flag is set.  (Note that there</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>is also a promise, if the above case is true, not to signal</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>overruns, either.)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * TTY_DRIVER_DYNAMIC_DEV --- if set, the individual tty devices need</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to be registered with a call to tty_register_driver() when the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device is found in the system and unregistered with a call to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>tty_unregister_device() so the devices will be show up</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>properly in sysfs.  If not set, driver-&gt;num entries will be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>created by the tty core in sysfs when tty_register_driver() is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>called.  This is to be used by drivers that have tty devices</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that can appear and disappear while the main tty driver is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>registered with the tty core.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * TTY_DRIVER_DEVPTS_MEM -- don't use the standard arrays, instead</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>use dynamic memory keyed through the devpts filesystem.  This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is only applicable to the pty driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * TTY_DRIVER_HARDWARE_BREAK -- hardware handles break signals. Pass</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the requested timeout to the caller instead of using a simple</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on/off interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_INSTALLED\">TTY_DRIVER_INSTALLED</a><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_RESET_TERMIOS\">TTY_DRIVER_RESET_TERMIOS</a><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_REAL_RAW\">TTY_DRIVER_REAL_RAW</a><span class=\"ts\"/><span class=\"ts\"/>0x0004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_DYNAMIC_DEV\">TTY_DRIVER_DYNAMIC_DEV</a><span class=\"ts\"/><span class=\"ts\"/>0x0008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_DEVPTS_MEM\">TTY_DRIVER_DEVPTS_MEM</a><span class=\"ts\"/><span class=\"ts\"/>0x0010", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_HARDWARE_BREAK\">TTY_DRIVER_HARDWARE_BREAK</a><span class=\"ts\"/>0x0020", 
"", 
"<span class=\"comment\">/* tty driver types */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_TYPE_SYSTEM\">TTY_DRIVER_TYPE_SYSTEM</a><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_TYPE_CONSOLE\">TTY_DRIVER_TYPE_CONSOLE</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_TYPE_SERIAL\">TTY_DRIVER_TYPE_SERIAL</a><span class=\"ts\"/><span class=\"ts\"/>0x0003", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_TYPE_PTY\">TTY_DRIVER_TYPE_PTY</a><span class=\"ts\"/><span class=\"ts\"/>0x0004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_TYPE_SCC\">TTY_DRIVER_TYPE_SCC</a><span class=\"ts\"/><span class=\"ts\"/>0x0005<span class=\"ts\"/><span class=\"comment\">/* scc driver */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TTY_DRIVER_TYPE_SYSCONS\">TTY_DRIVER_TYPE_SYSCONS</a><span class=\"ts\"/><span class=\"ts\"/>0x0006", 
"", 
"<span class=\"comment\">/* system subtypes (magic, used by tty_io.c) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYSTEM_TYPE_TTY\">SYSTEM_TYPE_TTY</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYSTEM_TYPE_CONSOLE\">SYSTEM_TYPE_CONSOLE</a><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYSTEM_TYPE_SYSCONS\">SYSTEM_TYPE_SYSCONS</a><span class=\"ts\"/><span class=\"ts\"/>0x0003", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SYSTEM_TYPE_SYSPTMX\">SYSTEM_TYPE_SYSPTMX</a><span class=\"ts\"/><span class=\"ts\"/>0x0004", 
"", 
"<span class=\"comment\">/* pty subtypes (magic, used by tty_io.c) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PTY_TYPE_MASTER\">PTY_TYPE_MASTER</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0001", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PTY_TYPE_SLAVE\">PTY_TYPE_SLAVE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0x0002", 
"", 
"<span class=\"comment\">/* serial subtype definitions */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERIAL_TYPE_NORMAL\">SERIAL_TYPE_NORMAL</a><span class=\"ts\"/>1", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* #ifdef _LINUX_TTY_DRIVER_H */</span>", 
];
xr_frag_insert('l/20/6ff6b315dd245eb97bf024830da63f11e547f3.xr', __xr_tmp);
