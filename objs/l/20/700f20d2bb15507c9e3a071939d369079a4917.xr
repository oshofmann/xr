var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timex\">timex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpufreq\">cpufreq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Get CPU information for use by the procfs.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#show_cpuinfo_core\">show_cpuinfo_core</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_max_cores\">x86_max_cores</a> * <a class=\"id\" href=\"#smp_num_siblings\">smp_num_siblings</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"physical id\\t: %d\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#phys_proc_id\">phys_proc_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"siblings\\t: %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cpumask_weight\">cpumask_weight</a>(<a class=\"id\" href=\"#cpu_core_mask\">cpu_core_mask</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"core id\\t\\t: %d\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpu_core_id\">cpu_core_id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"cpu cores\\t: %d\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#booted_cores\">booted_cores</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"apicid\\t\\t: %d\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#apicid\">apicid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"initial apicid\\t: %d\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#initial_apicid\">initial_apicid</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"static void <a class=\"id\" href=\"#show_cpuinfo_misc\">show_cpuinfo_misc</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We use exception 16 if we have hardware math and we've either seen</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it or the CPU claims it is internal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fpu_exception\">fpu_exception</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#hard_math\">hard_math</a> && (<a class=\"id\" href=\"#ignore_fpu_irq\">ignore_fpu_irq</a> || <a class=\"id\" href=\"#cpu_has_fpu\">cpu_has_fpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"fdiv_bug\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"hlt_bug\\t\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"f00f_bug\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"coma_bug\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"fpu\\t\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"fpu_exception\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"cpuid level\\t: %d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"wp\\t\\t: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#fdiv_bug\">fdiv_bug</a> ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#hlt_works_ok\">hlt_works_ok</a> ? \"no\" : \"yes\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#f00f_bug\">f00f_bug</a> ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#coma_bug\">coma_bug</a> ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#hard_math\">hard_math</a> ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#fpu_exception\">fpu_exception</a> ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpuid_level\">cpuid_level</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#wp_works_ok\">wp_works_ok</a> ? \"yes\" : \"no\");", 
"}", 
"#else", 
"static void <a class=\"id\" href=\"#show_cpuinfo_misc\">show_cpuinfo_misc</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"fpu\\t\\t: yes\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"fpu_exception\\t: yes\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"cpuid level\\t: %d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"wp\\t\\t: yes\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpuid_level\">cpuid_level</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#show_cpuinfo\">show_cpuinfo</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpu_index\">cpu_index</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"processor\\t: %u\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"vendor_id\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"cpu family\\t: %d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"model\\t\\t: %u\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"model name\\t: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_vendor_id\">x86_vendor_id</a>[0] ? <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_vendor_id\">x86_vendor_id</a> : \"unknown\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model_id\">x86_model_id</a>[0] ? <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model_id\">x86_model_id</a> : \"unknown\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_mask\">x86_mask</a> || <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#cpuid_level\">cpuid_level</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"stepping\\t: %d\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_mask\">x86_mask</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"stepping\\t: unknown\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_TSC\">X86_FEATURE_TSC</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq\">freq</a> = <a class=\"id\" href=\"#cpufreq_quick_get\">cpufreq_quick_get</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#freq\">freq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#freq\">freq</a> = <a class=\"id\" href=\"#cpu_khz\">cpu_khz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"cpu MHz\\t\\t: %u.%03u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#freq\">freq</a> / 1000, (<a class=\"id\" href=\"#freq\">freq</a> % 1000));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cache size */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_cache_size\">x86_cache_size</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"cache size\\t: %d KB\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_cache_size\">x86_cache_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#show_cpuinfo_core\">show_cpuinfo_core</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#show_cpuinfo_misc\">show_cpuinfo_misc</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"flags\\t\\t:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 32*<a class=\"id\" href=\"#NCAPINTS\">NCAPINTS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#i\">i</a>) && <a class=\"id\" href=\"#x86_cap_flags\">x86_cap_flags</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" %s\", <a class=\"id\" href=\"#x86_cap_flags\">x86_cap_flags</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\nbogomips\\t: %lu.%02lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#loops_per_jiffy\">loops_per_jiffy</a>/(500000/<a class=\"id\" href=\"#HZ\">HZ</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#loops_per_jiffy\">loops_per_jiffy</a>/(5000/<a class=\"id\" href=\"#HZ\">HZ</a>)) % 100);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_tlbsize\">x86_tlbsize</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"TLB size\\t: %d 4K pages\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_tlbsize\">x86_tlbsize</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"clflush size\\t: %u\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_clflush_size\">x86_clflush_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"cache_alignment\\t: %d\\n\", <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_cache_alignment\">x86_cache_alignment</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"address sizes\\t: %u bits physical, %u bits virtual\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_phys_bits\">x86_phys_bits</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_virt_bits\">x86_virt_bits</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"power management:\");", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 32; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_power\">x86_power</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#x86_power_flags\">x86_power_flags</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#x86_power_flags\">x86_power_flags</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#x86_power_flags\">x86_power_flags</a>[<a class=\"id\" href=\"#i\">i</a>][0] ? \" \" : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#x86_power_flags\">x86_power_flags</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \" [%d]\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\n\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#c_start\">c_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#pos\">pos</a> == 0)<span class=\"ts\"/><span class=\"comment\">/* just in case, cpu 0 is not the first */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#cpumask_first\">cpumask_first</a>(<a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#cpumask_next\">cpumask_next</a>(*<a class=\"id\" href=\"#pos\">pos</a> - 1, <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>);", 
"<span class=\"ts\"/>if ((*<a class=\"id\" href=\"#pos\">pos</a>) &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(*<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#c_next\">c_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#c_start\">c_start</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#c_stop\">c_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#cpuinfo_op\">cpuinfo_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#c_start\">c_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#c_next\">c_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#c_stop\">c_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#show_cpuinfo\">show_cpuinfo</a>,", 
"};", 
];
xr_frag_insert('l/20/700f20d2bb15507c9e3a071939d369079a4917.xr', __xr_tmp);
