var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/fs/jbd2/recovery.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Written by Stephen C. Tweedie &lt;sct@redhat.com&gt;, 1999</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 1999-2000 Red Hat Software --- All Rights Reserved</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is part of the Linux kernel and is made available under</span>", 
"<span class=\"comment\"> * the terms of the GNU General Public License, version 2, or at your</span>", 
"<span class=\"comment\"> * option, any later version, incorporated herein by reference.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Journal recovery routines for the generic filesystem journaling code;</span>", 
"<span class=\"comment\"> * part of the ext2fs journaling system.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> \"jfs_user.h\"", 
"#else", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crc32\">crc32</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maintain information about the progress of the recovery job, so that</span>", 
"<span class=\"comment\"> * the different passes can carry information between them.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#recovery_info\">recovery_info</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_transaction\">start_transaction</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_transaction\">end_transaction</a>;", 
"", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_replays\">nr_replays</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_revokes\">nr_revokes</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_revoke_hits\">nr_revoke_hits</a>;", 
"};", 
"", 
"enum <a class=\"id\" href=\"#passtype\">passtype</a> {<a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a>, <a class=\"id\" href=\"#PASS_REVOKE\">PASS_REVOKE</a>, <a class=\"id\" href=\"#PASS_REPLAY\">PASS_REPLAY</a>};", 
"static int <a class=\"id\" href=\"#do_one_pass\">do_one_pass</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#recovery_info\">recovery_info</a> *<a class=\"id\" href=\"#info\">info</a>, enum <a class=\"id\" href=\"#passtype\">passtype</a> <a class=\"id\" href=\"#pass\">pass</a>);", 
"static int <a class=\"id\" href=\"#scan_revoke_records\">scan_revoke_records</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tid_t\">tid_t</a>, struct <a class=\"id\" href=\"#recovery_info\">recovery_info</a> *);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"<span class=\"comment\">/* Release readahead buffers after use */</span>", 
"static void <a class=\"id\" href=\"#journal_brelse_array\">journal_brelse_array</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#b\">b</a>[], int <a class=\"id\" href=\"#n\">n</a>)", 
"{", 
"<span class=\"ts\"/>while (--<a class=\"id\" href=\"#n\">n</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a> (<a class=\"id\" href=\"#b\">b</a>[<a class=\"id\" href=\"#n\">n</a>]);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * When reading from the journal, we are going through the block device</span>", 
"<span class=\"comment\"> * layer directly and so there is no readahead being done for us.  We</span>", 
"<span class=\"comment\"> * need to implement any readahead ourselves if we want it to happen at</span>", 
"<span class=\"comment\"> * all.  Recovery is basically one long sequential read, so make sure we</span>", 
"<span class=\"comment\"> * do the IO in reasonably large chunks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is not so critical that we need to be enormously clever about</span>", 
"<span class=\"comment\"> * the readahead size, though.  128K is a purely arbitrary, good-enough</span>", 
"<span class=\"comment\"> * fixed value.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAXBUF\">MAXBUF</a> 8", 
"static int <a class=\"id\" href=\"#do_readahead\">do_readahead</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, unsigned int <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#nbufs\">nbufs</a>, <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> * <a class=\"id\" href=\"#bufs\">bufs</a>[<a class=\"id\" href=\"#MAXBUF\">MAXBUF</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do up to 128K of readahead */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#start\">start</a> + (128 * 1024 / <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max\">max</a> &gt; <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do the readahead itself.  We'll submit MAXBUF buffer_heads at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a time to the block device IO layer. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nbufs\">nbufs</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#start\">start</a>; <a class=\"id\" href=\"#next\">next</a> &lt; <a class=\"id\" href=\"#max\">max</a>; <a class=\"id\" href=\"#next\">next</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_bmap\">jbd2_journal_bmap</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: bad block at offset %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#__getblk\">__getblk</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>) && !<a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bufs\">bufs</a>[<a class=\"id\" href=\"#nbufs\">nbufs</a>++] = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nbufs\">nbufs</a> == <a class=\"id\" href=\"#MAXBUF\">MAXBUF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ll_rw_block\">ll_rw_block</a>(<a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#nbufs\">nbufs</a>, <a class=\"id\" href=\"#bufs\">bufs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_brelse_array\">journal_brelse_array</a>(<a class=\"id\" href=\"#bufs\">bufs</a>, <a class=\"id\" href=\"#nbufs\">nbufs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbufs\">nbufs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nbufs\">nbufs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ll_rw_block\">ll_rw_block</a>(<a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#nbufs\">nbufs</a>, <a class=\"id\" href=\"#bufs\">bufs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<a class=\"id\" href=\"#failed\">failed</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nbufs\">nbufs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_brelse_array\">journal_brelse_array</a>(<a class=\"id\" href=\"#bufs\">bufs</a>, <a class=\"id\" href=\"#nbufs\">nbufs</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read a block from the journal</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#jread\">jread</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#bhp\">bhp</a>, <a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#bhp\">bhp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_maxlen\">j_maxlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: corrupted journal superblock\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_bmap\">jbd2_journal_bmap</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#offset\">offset</a>, &amp;<a class=\"id\" href=\"#blocknr\">blocknr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: bad block at offset %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#__getblk\">__getblk</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_dev\">j_dev</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If this is a brand new buffer, start readahead.</span>", 
"<span class=\"comment\">                   Otherwise, we assume we are already reading it.  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_req\">buffer_req</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#do_readahead\">do_readahead</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_buffer\">wait_on_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: Failed to read block at offset %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#bhp\">bhp</a> = <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Count the number of in-use tags in a journal descriptor block.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#count_tags\">count_tags</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>char *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *<span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = 0, <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag_bytes\">tag_bytes</a> = <a class=\"id\" href=\"#journal_tag_bytes\">journal_tag_bytes</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> = &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>[sizeof(<a class=\"id\" href=\"#journal_header_t\">journal_header_t</a>)];", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#tagp\">tagp</a> - <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>) <= <a class=\"id\" href=\"#size\">size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = (<a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *) <a class=\"id\" href=\"#tagp\">tagp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> += <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_flags\">t_flags</a> &amp; <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_FLAG_SAME_UUID\">JBD2_FLAG_SAME_UUID</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> += 16;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_flags\">t_flags</a> &amp; <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_FLAG_LAST_TAG\">JBD2_FLAG_LAST_TAG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr\">nr</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Make sure we wrap around the log correctly! */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#wrap\">wrap</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#var\">var</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#var\">var</a> >= (<a class=\"id\" href=\"#journal\">journal</a>)-><a class=\"id\" href=\"#j_last\">j_last</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var\">var</a> -= ((<a class=\"id\" href=\"#journal\">journal</a>)-><a class=\"id\" href=\"#j_last\">j_last</a> - (<a class=\"id\" href=\"#journal\">journal</a>)-><a class=\"id\" href=\"#j_first\">j_first</a>);<span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * jbd2_journal_recover - recovers a on-disk journal</span>", 
"<span class=\"comment\"> * @journal: the journal to recover</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The primary function for recovering the log contents when mounting a</span>", 
"<span class=\"comment\"> * journaled device.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Recovery is done in three passes.  In the first pass, we look for the</span>", 
"<span class=\"comment\"> * end of the log.  In the second, we assemble the list of revoke</span>", 
"<span class=\"comment\"> * blocks.  In the third and final pass, we replay any un-revoked blocks</span>", 
"<span class=\"comment\"> * in the log.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_recover\">jbd2_journal_recover</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#err2\">err2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#recovery_info\">recovery_info</a><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, 0, sizeof(<a class=\"id\" href=\"#info\">info</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The journal superblock's s_start field (the current log head)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is always zero if, and only if, the journal was cleanly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unmounted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_start\">s_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"No recovery required, last transaction %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_sequence\">s_sequence</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_sequence\">s_sequence</a>) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#do_one_pass\">do_one_pass</a>(<a class=\"id\" href=\"#journal\">journal</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#do_one_pass\">do_one_pass</a>(<a class=\"id\" href=\"#journal\">journal</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#PASS_REVOKE\">PASS_REVOKE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#do_one_pass\">do_one_pass</a>(<a class=\"id\" href=\"#journal\">journal</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#PASS_REPLAY\">PASS_REPLAY</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"JBD: recovery, exit status %d, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"recovered transactions %u to %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#start_transaction\">start_transaction</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#end_transaction\">end_transaction</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"JBD: Replayed %d and revoked %d/%d blocks\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#nr_replays\">nr_replays</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#nr_revoke_hits\">nr_revoke_hits</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#nr_revokes\">nr_revokes</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Restart the log at the next transaction ID, thus invalidating</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any existing commit records in the log. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a> = ++<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#end_transaction\">end_transaction</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_clear_revoke\">jbd2_journal_clear_revoke</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err2\">err2</a> = <a class=\"id\" href=\"#sync_blockdev\">sync_blockdev</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_fs_dev\">j_fs_dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#err2\">err2</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * jbd2_journal_skip_recovery - Start journal and wipe exiting records</span>", 
"<span class=\"comment\"> * @journal: journal to startup</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Locate any valid recovery information from the journal and set up the</span>", 
"<span class=\"comment\"> * journal structures in memory to ignore it (presumably because the</span>", 
"<span class=\"comment\"> * caller has evidence that it is out of date).</span>", 
"<span class=\"comment\"> * This function does'nt appear to be exorted..</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We perform one pass over the journal to allow us to tell the user how</span>", 
"<span class=\"comment\"> * much recovery information is being erased, and to let us initialise</span>", 
"<span class=\"comment\"> * the journal transaction sequence numbers to the next unused ID.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#jbd2_journal_skip_recovery\">jbd2_journal_skip_recovery</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#recovery_info\">recovery_info</a><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a> (&amp;<a class=\"id\" href=\"#info\">info</a>, 0, sizeof(<a class=\"id\" href=\"#info\">info</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#do_one_pass\">do_one_pass</a>(<a class=\"id\" href=\"#journal\">journal</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: error %d scanning journal\\n\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a>;", 
"<span class=\"ts\"/>} else {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_JBD2_DEBUG\">CONFIG_JBD2_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#dropped\">dropped</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#end_transaction\">end_transaction</a> - ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>-><a class=\"id\" href=\"#s_sequence\">s_sequence</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"JBD: ignoring %d transaction%s from the journal.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dropped\">dropped</a>, (<a class=\"id\" href=\"#dropped\">dropped</a> == 1) ? \"\" : \"s\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_transaction_sequence\">j_transaction_sequence</a> = ++<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#end_transaction\">end_transaction</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_tail\">j_tail</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long long <a class=\"id\" href=\"#read_tag_block\">read_tag_block</a>(int <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>, <a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *<a class=\"id\" href=\"#tag\">tag</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_blocknr\">t_blocknr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tag_bytes\">tag_bytes</a> &gt; <a class=\"id\" href=\"#JBD2_TAG_SIZE32\">JBD2_TAG_SIZE32</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> |= (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_blocknr_high\">t_blocknr_high</a>) << 32;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#block\">block</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * calc_chksums calculates the checksums for the blocks described in the</span>", 
"<span class=\"comment\"> * descriptor block.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#calc_chksums\">calc_chksums</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#next_log_block\">next_log_block</a>, <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#num_blks\">num_blks</a>, <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#io_block\">io_block</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#obh\">obh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_blks\">num_blks</a> = <a class=\"id\" href=\"#count_tags\">count_tags</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Calculate checksum of the descriptor block. */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a> = <a class=\"id\" href=\"#crc32_be\">crc32_be</a>(*<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>, (void *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_blks\">num_blks</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_block\">io_block</a> = (*<a class=\"id\" href=\"#next_log_block\">next_log_block</a>)++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrap\">wrap</a>(<a class=\"id\" href=\"#journal\">journal</a>, *<a class=\"id\" href=\"#next_log_block\">next_log_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jread\">jread</a>(&amp;<a class=\"id\" href=\"#obh\">obh</a>, <a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#io_block\">io_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: IO error %d recovering block \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%lu in log\\n\", <a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#io_block\">io_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a> = <a class=\"id\" href=\"#crc32_be\">crc32_be</a>(*<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>, (void *)<a class=\"id\" href=\"#obh\">obh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#obh\">obh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#obh\">obh</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_one_pass\">do_one_pass</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#recovery_info\">recovery_info</a> *<a class=\"id\" href=\"#info\">info</a>, enum <a class=\"id\" href=\"#passtype\">passtype</a> <a class=\"id\" href=\"#pass\">pass</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first_commit_ID\">first_commit_ID</a>, <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_log_block\">next_log_block</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#success\">success</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_superblock_t\">journal_superblock_t</a> *<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#journal_header_t\">journal_header_t</a> *<span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sequence\">sequence</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocktype\">blocktype</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag_bytes\">tag_bytes</a> = <a class=\"id\" href=\"#journal_tag_bytes\">journal_tag_bytes</a>(<a class=\"id\" href=\"#journal\">journal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crc32_sum\">crc32_sum</a> = ~0; <span class=\"comment\">/* Transactional Checksums */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First thing is to establish what we expect to find in the log</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (in terms of transaction IDs), and where (in terms of log</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * block offsets): query the superblock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_superblock\">j_superblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_sequence\">s_sequence</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_log_block\">next_log_block</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_start\">s_start</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#first_commit_ID\">first_commit_ID</a> = <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a> == <a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#start_transaction\">start_transaction</a> = <a class=\"id\" href=\"#first_commit_ID\">first_commit_ID</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"Starting recovery pass %d\\n\", <a class=\"id\" href=\"#pass\">pass</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now we walk through the log, transaction by transaction,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * making sure that each transaction has a commit block in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * expected place.  Each complete transaction gets replayed back</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * into the main filesystem.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *<span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<span class=\"ts\"/><a class=\"id\" href=\"#obh\">obh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<span class=\"ts\"/><a class=\"id\" href=\"#nbh\">nbh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we already know where to stop the log traversal,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * check right now that we haven't gone past the end of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the log. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a> != <a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tid_geq\">tid_geq</a>(<a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(2, \"Scanning for sequence ID %u at %lu/%lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>, <a class=\"id\" href=\"#next_log_block\">next_log_block</a>, <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_last\">j_last</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Skip over each chunk of the transaction looking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * either the next descriptor block or the final commit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * record. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(3, \"JBD: checking block %ld\\n\", <a class=\"id\" href=\"#next_log_block\">next_log_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jread\">jread</a>(&amp;<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#next_log_block\">next_log_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_log_block\">next_log_block</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrap\">wrap</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#next_log_block\">next_log_block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* What kind of buffer is it?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If it is a descriptor block, check that it has the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * expected sequence number.  Otherwise, we're all done</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * here. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = (<a class=\"id\" href=\"#journal_header_t\">journal_header_t</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_MAGIC_NUMBER\">JBD2_MAGIC_NUMBER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocktype\">blocktype</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_blocktype\">h_blocktype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sequence\">sequence</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#h_sequence\">h_sequence</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(3, \"Found magic %d, sequence %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#blocktype\">blocktype</a>, <a class=\"id\" href=\"#sequence\">sequence</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sequence\">sequence</a> != <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* OK, we have a valid descriptor block which matches</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * all of the sequence number checks.  What are we going</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to do with it?  That depends on the pass... */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#blocktype\">blocktype</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#JBD2_DESCRIPTOR_BLOCK\">JBD2_DESCRIPTOR_BLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If it is a valid descriptor block, replay it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * in pass REPLAY; if journal_checksums enabled, then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * calculate checksums in PASS_SCAN, otherwise,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * just skip over the blocks it describes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a> != <a class=\"id\" href=\"#PASS_REPLAY\">PASS_REPLAY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a> == <a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#JBD2_HAS_COMPAT_FEATURE\">JBD2_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#JBD2_FEATURE_COMPAT_CHECKSUM\">JBD2_FEATURE_COMPAT_CHECKSUM</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#calc_chksums\">calc_chksums</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#next_log_block\">next_log_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_log_block\">next_log_block</a> += <a class=\"id\" href=\"#count_tags\">count_tags</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrap\">wrap</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#next_log_block\">next_log_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* A descriptor block: we can now write all of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the data blocks.  Yay, useful work is finally</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * getting done here! */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> = &amp;<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>[sizeof(<a class=\"id\" href=\"#journal_header_t\">journal_header_t</a>)];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#tagp\">tagp</a> - <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <= <a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#io_block\">io_block</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tag\">tag</a> = (<a class=\"id\" href=\"#journal_block_tag_t\">journal_block_tag_t</a> *) <a class=\"id\" href=\"#tagp\">tagp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#tag\">tag</a>-><a class=\"id\" href=\"#t_flags\">t_flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io_block\">io_block</a> = <a class=\"id\" href=\"#next_log_block\">next_log_block</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrap\">wrap</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#next_log_block\">next_log_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jread\">jread</a>(&amp;<a class=\"id\" href=\"#obh\">obh</a>, <a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#io_block\">io_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Recover what we can, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * report failure at the end. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#success\">success</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"JBD: IO error %d recovering \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"block %ld in log\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a>, <a class=\"id\" href=\"#io_block\">io_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT\">J_ASSERT</a>(<a class=\"id\" href=\"#obh\">obh</a> != <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#read_tag_block\">read_tag_block</a>(<a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tag\">tag</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the block has been</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * revoked, then we're all done</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * here. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#jbd2_journal_test_revoke\">jbd2_journal_test_revoke</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#obh\">obh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nr_revoke_hits\">nr_revoke_hits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skip_write\">skip_write</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find a buffer for the new</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * data being restored */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nbh\">nbh</a> = <a class=\"id\" href=\"#__getblk\">__getblk</a>(<a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_fs_dev\">j_fs_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nbh\">nbh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"JBD: Out of memory \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"during recovery.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#obh\">obh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#nbh\">nbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#nbh\">nbh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#obh\">obh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_blocksize\">j_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#JBD2_FLAG_ESCAPE\">JBD2_FLAG_ESCAPE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*((<a class=\"id\" href=\"#__be32\">__be32</a> *)<a class=\"id\" href=\"#nbh\">nbh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_be32\">cpu_to_be32</a>(<a class=\"id\" href=\"#JBD2_MAGIC_NUMBER\">JBD2_MAGIC_NUMBER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#nbh\">nbh</a>, \"marking dirty\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#nbh\">nbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_buffer_dirty\">mark_buffer_dirty</a>(<a class=\"id\" href=\"#nbh\">nbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#nbh\">nbh</a>, \"marking uptodate\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#nr_replays\">nr_replays</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ll_rw_block(WRITE, 1, &amp;nbh); */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#nbh\">nbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#obh\">obh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#nbh\">nbh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skip_write\">skip_write</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> += <a class=\"id\" href=\"#tag_bytes\">tag_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#JBD2_FLAG_SAME_UUID\">JBD2_FLAG_SAME_UUID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tagp\">tagp</a> += 16;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#JBD2_FLAG_LAST_TAG\">JBD2_FLAG_LAST_TAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#JBD2_COMMIT_BLOCK\">JBD2_COMMIT_BLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*     How to differentiate between interrupted commit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *               and journal corruption ?</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * {nth transaction}</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *        Checksum Verification Failed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/> ____________________</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>|<span class=\"ts\"/><span class=\"ts\"/>     |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * <span class=\"ts\"/>async_commit             sync_commit</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *     <span class=\"ts\"/><span class=\"ts\"/>|                    |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>| GO TO NEXT    \"Journal Corruption\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>| TRANSACTION</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * {(n+1)th transanction}</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/>|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * <span class=\"ts\"/> _______|______________</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * <span class=\"ts\"/>|<span class=\"ts\"/> <span class=\"ts\"/>      |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Commit block found<span class=\"ts\"/>Commit block not found</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *      |<span class=\"ts\"/><span class=\"ts\"/>      |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * \"Journal Corruption\"       |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/><span class=\"ts\"/> _____________|_________</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *     <span class=\"ts\"/><span class=\"ts\"/>|<span class=\"ts\"/>           <span class=\"ts\"/>|</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>nth trans corrupt<span class=\"ts\"/>OR   nth trans</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>and (n+1)th interrupted     interrupted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>before commit block</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *      could reach the disk.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>(Cannot find the difference in above</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/> mentioned conditions. Hence assume</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/> \"Interrupted Commit\".)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Found an expected commit block: if checksums</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * are present verify them in PASS_SCAN; else not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * much to do other than move on to the next sequence</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * number. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a> == <a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#JBD2_HAS_COMPAT_FEATURE\">JBD2_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#JBD2_FEATURE_COMPAT_CHECKSUM\">JBD2_FEATURE_COMPAT_CHECKSUM</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#chksum_err\">chksum_err</a>, <a class=\"id\" href=\"#chksum_seen\">chksum_seen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#commit_header\">commit_header</a> *<a class=\"id\" href=\"#cbh\">cbh</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(struct <a class=\"id\" href=\"#commit_header\">commit_header</a> *)<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#found_chksum\">found_chksum</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#cbh\">cbh</a>-><a class=\"id\" href=\"#h_chksum\">h_chksum</a>[0]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chksum_err\">chksum_err</a> = <a class=\"id\" href=\"#chksum_seen\">chksum_seen</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_failed_commit\">j_failed_commit</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#crc32_sum\">crc32_sum</a> == <a class=\"id\" href=\"#found_chksum\">found_chksum</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cbh\">cbh</a>-><a class=\"id\" href=\"#h_chksum_type\">h_chksum_type</a> == <a class=\"id\" href=\"#JBD2_CRC32_CHKSUM\">JBD2_CRC32_CHKSUM</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#cbh\">cbh</a>-><a class=\"id\" href=\"#h_chksum_size\">h_chksum_size</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#JBD2_CRC32_CHKSUM_SIZE\">JBD2_CRC32_CHKSUM_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#chksum_seen\">chksum_seen</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (!(<a class=\"id\" href=\"#cbh\">cbh</a>-><a class=\"id\" href=\"#h_chksum_type\">h_chksum_type</a> == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#cbh\">cbh</a>-><a class=\"id\" href=\"#h_chksum_size\">h_chksum_size</a> == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#found_chksum\">found_chksum</a> == 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#chksum_seen\">chksum_seen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If fs is mounted using an old kernel and then</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * kernel with journal_chksum is used then we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * get a situation where the journal flag has</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * checksum flag set but checksums are not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * present i.e chksum = 0, in the individual</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * commit blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Hence to avoid checksum failures, in this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * situation, this extra check is added.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chksum_err\">chksum_err</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#chksum_err\">chksum_err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a> = <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#JBD2_HAS_INCOMPAT_FEATURE\">JBD2_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT\">JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT</a>)){", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#journal\">journal</a>-><a class=\"id\" href=\"#j_failed_commit\">j_failed_commit</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crc32_sum\">crc32_sum</a> = ~0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#JBD2_REVOKE_BLOCK\">JBD2_REVOKE_BLOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we aren't in the REVOKE pass, then we can</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * just skip over this block. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a> != <a class=\"id\" href=\"#PASS_REVOKE\">PASS_REVOKE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#scan_revoke_records\">scan_revoke_records</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#failed\">failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(3, \"Unrecognised magic %d, end of scan.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#blocktype\">blocktype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We broke out of the log scan loop: either we came to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * known end of the log or we found an unexpected block in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * log.  If the latter happened, then we know that the \"current\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * transaction marks the end of the valid log.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a> == <a class=\"id\" href=\"#PASS_SCAN\">PASS_SCAN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a> = <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It's really bad news if different passes end up at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * different places (but possible due to IO errors). */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a> != <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a> (<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"JBD: recovery pass %d ended at \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"transaction %u, expected %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pass\">pass</a>, <a class=\"id\" href=\"#next_commit_ID\">next_commit_ID</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end_transaction\">end_transaction</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#success\">success</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#success\">success</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#success\">success</a>;", 
"", 
" <a class=\"id\" href=\"#failed\">failed</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Scan a revoke record, marking all blocks mentioned as revoked. */</span>", 
"", 
"static int <a class=\"id\" href=\"#scan_revoke_records\">scan_revoke_records</a>(<a class=\"id\" href=\"#journal_t\">journal_t</a> *<a class=\"id\" href=\"#journal\">journal</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tid_t\">tid_t</a> <a class=\"id\" href=\"#sequence\">sequence</a>, struct <a class=\"id\" href=\"#recovery_info\">recovery_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_revoke_header_t\">jbd2_journal_revoke_header_t</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#record_len\">record_len</a> = 4;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = (<a class=\"id\" href=\"#jbd2_journal_revoke_header_t\">jbd2_journal_revoke_header_t</a> *) <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = sizeof(<a class=\"id\" href=\"#jbd2_journal_revoke_header_t\">jbd2_journal_revoke_header_t</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#r_count\">r_count</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#JBD2_HAS_INCOMPAT_FEATURE\">JBD2_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#JBD2_FEATURE_INCOMPAT_64BIT\">JBD2_FEATURE_INCOMPAT_64BIT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#record_len\">record_len</a> = 8;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#record_len\">record_len</a> <= <a class=\"id\" href=\"#max\">max</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#record_len\">record_len</a> == 4)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(* ((<a class=\"id\" href=\"#__be32\">__be32</a> *) (<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#be64_to_cpu\">be64_to_cpu</a>(* ((<a class=\"id\" href=\"#__be64\">__be64</a> *) (<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>+<a class=\"id\" href=\"#offset\">offset</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#record_len\">record_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#jbd2_journal_set_revoke\">jbd2_journal_set_revoke</a>(<a class=\"id\" href=\"#journal\">journal</a>, <a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#sequence\">sequence</a>);", 
];
xr_frag_insert('l/20/8fd1d4d600c29185d4ca69e750e2ef71c1ec19.xr', __xr_tmp);
