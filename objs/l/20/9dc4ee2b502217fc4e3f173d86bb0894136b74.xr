var __xr_tmp = [
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#previous\">previous</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#previous\">previous</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#previous\">previous</a> || (<a class=\"id\" href=\"#count\">count</a> &&  <a class=\"id\" href=\"#count\">count</a> &lt; 10)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>++<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"audit(:%d): major=%d name_count=%d:\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" freeing multiple contexts (%d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#major\">major</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_free_names\">audit_free_names</a>(<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unroll_tree_refs\">unroll_tree_refs</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_tree_refs\">free_tree_refs</a>(<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_free_aux\">audit_free_aux</a>(<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr\">sockaddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>  = <a class=\"id\" href=\"#previous\">previous</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#context\">context</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> >= 10)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"audit: freed %d contexts\\n\", <a class=\"id\" href=\"#count\">count</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#audit_log_task_context\">audit_log_task_context</a>(struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_task_getsecid\">security_task_getsecid</a>(<a class=\"id\" href=\"#current\">current</a>, &amp;<a class=\"id\" href=\"#sid\">sid</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sid\">sid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_secid_to_secctx\">security_secid_to_secctx</a>(<a class=\"id\" href=\"#sid\">sid</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_path\">error_path</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" subj=%s\", <a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#security_release_secctx\">security_release_secctx</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#error_path\">error_path</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_panic\">audit_panic</a>(\"error in audit_log_task_context\");", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#audit_log_task_context\">audit_log_task_context</a>);", 
"", 
"static void <a class=\"id\" href=\"#audit_log_task_info\">audit_log_task_info</a>(struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[sizeof(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#comm\">comm</a>)];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* tsk == current */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_task_comm\">get_task_comm</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" comm=\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap\">mmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#vma\">vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_EXECUTABLE\">VM_EXECUTABLE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_d_path\">audit_log_d_path</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"exe=\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_file\">vm_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_task_context\">audit_log_task_context</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#audit_log_pid_context\">audit_log_pid_context</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#auid\">auid</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a>, unsigned int <a class=\"id\" href=\"#sessionid\">sessionid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#sid\">sid</a>, char *<a class=\"id\" href=\"#comm\">comm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_OBJ_PID\">AUDIT_OBJ_PID</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"opid=%d oauid=%d ouid=%d oses=%d\", <a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#auid\">auid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#sessionid\">sessionid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#security_secid_to_secctx\">security_secid_to_secctx</a>(<a class=\"id\" href=\"#sid\">sid</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" obj=(none)\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" obj=%s\", <a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_release_secctx\">security_release_secctx</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" ocomm=\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * to_send and len_sent accounting are very loose estimates.  We aren't</span>", 
"<span class=\"comment\"> * really worried about a hard cap to MAX_EXECVE_AUDIT_LEN so much as being</span>", 
"<span class=\"comment\"> * within about 500 bytes (next page boundry)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * why snprintf?  an int is up to 12 digits long.  if we just assumed when</span>", 
"<span class=\"comment\"> * logging that a[%d]= was going to be 16 characters long we would be wasting</span>", 
"<span class=\"comment\"> * space in every audit message.  In one 7500 byte message we can log up to</span>", 
"<span class=\"comment\"> * about 1000 min size arguments.  That comes down to about 50% waste of space</span>", 
"<span class=\"comment\"> * if we didn't do the snprintf to find out how long arg_num_len was.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#audit_log_single_execve_arg\">audit_log_single_execve_arg</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> **<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#arg_num\">arg_num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#len_sent\">len_sent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#arg_num_len_buf\">arg_num_len_buf</a>[12];", 
"<span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#tmp_p\">tmp_p</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* how many digits are in arg_num? 5 is the length of ' a=\"\"' */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#arg_num_len\">arg_num_len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#arg_num_len_buf\">arg_num_len_buf</a>, 12, \"%d\", <a class=\"id\" href=\"#arg_num\">arg_num</a>) + 5;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#len_left\">len_left</a>, <a class=\"id\" href=\"#to_send\">to_send</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#max_execve_audit_len\">max_execve_audit_len</a> = <a class=\"id\" href=\"#MAX_EXECVE_AUDIT_LEN\">MAX_EXECVE_AUDIT_LEN</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#has_cntl\">has_cntl</a> = 0, <a class=\"id\" href=\"#too_long\">too_long</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* strnlen_user includes the null we don't want to send */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len_left\">len_left</a> = <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strnlen_user\">strnlen_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#MAX_ARG_STRLEN\">MAX_ARG_STRLEN</a>) - 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We just created this mm, if we can't find the strings</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we just copied into it something is _very_ wrong. Similar</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for strings that are too long, we should not have created</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#len\">len</a> == -1) || <a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#MAX_ARG_STRLEN\">MAX_ARG_STRLEN</a> - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>, <a class=\"id\" href=\"#current\">current</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* walk the whole argument looking for non-ascii chars */</span>", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len_left\">len_left</a> &gt; <a class=\"id\" href=\"#MAX_EXECVE_AUDIT_LEN\">MAX_EXECVE_AUDIT_LEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_send\">to_send</a> = <a class=\"id\" href=\"#MAX_EXECVE_AUDIT_LEN\">MAX_EXECVE_AUDIT_LEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_send\">to_send</a> = <a class=\"id\" href=\"#len_left\">len_left</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#tmp_p\">tmp_p</a>, <a class=\"id\" href=\"#to_send\">to_send</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * There is no reason for this copy to be short. We just</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * copied them here, and the mm hasn't been exposed to user-</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * space yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>, <a class=\"id\" href=\"#current\">current</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#to_send\">to_send</a>] = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#has_cntl\">has_cntl</a> = <a class=\"id\" href=\"#audit_string_contains_control\">audit_string_contains_control</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#to_send\">to_send</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#has_cntl\">has_cntl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * hex messages get logged as 2 bytes, so we can only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * send half as much in each message</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_execve_audit_len\">max_execve_audit_len</a> = <a class=\"id\" href=\"#MAX_EXECVE_AUDIT_LEN\">MAX_EXECVE_AUDIT_LEN</a> / 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len_left\">len_left</a> -= <a class=\"id\" href=\"#to_send\">to_send</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp_p\">tmp_p</a> += <a class=\"id\" href=\"#to_send\">to_send</a>;", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#len_left\">len_left</a> &gt; 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len_left\">len_left</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#max_execve_audit_len\">max_execve_audit_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#too_long\">too_long</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* rewalk the argument actually logging the message */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#len_left\">len_left</a> &gt; 0; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#room_left\">room_left</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len_left\">len_left</a> &gt; <a class=\"id\" href=\"#max_execve_audit_len\">max_execve_audit_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_send\">to_send</a> = <a class=\"id\" href=\"#max_execve_audit_len\">max_execve_audit_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_send\">to_send</a> = <a class=\"id\" href=\"#len_left\">len_left</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* do we have space left to send this argument in this ab? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#room_left\">room_left</a> = <a class=\"id\" href=\"#MAX_EXECVE_AUDIT_LEN\">MAX_EXECVE_AUDIT_LEN</a> - <a class=\"id\" href=\"#arg_num_len\">arg_num_len</a> - *<a class=\"id\" href=\"#len_sent\">len_sent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#has_cntl\">has_cntl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#room_left\">room_left</a> -= (<a class=\"id\" href=\"#to_send\">to_send</a> * 2);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#room_left\">room_left</a> -= <a class=\"id\" href=\"#to_send\">to_send</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#room_left\">room_left</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len_sent\">len_sent</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(*<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_EXECVE\">AUDIT_EXECVE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * first record needs to say how long the original string was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * so we can be sure nothing was lost.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#i\">i</a> == 0) && (<a class=\"id\" href=\"#too_long\">too_long</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(*<a class=\"id\" href=\"#ab\">ab</a>, \" a%d_len=%zu\", <a class=\"id\" href=\"#arg_num\">arg_num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#has_cntl\">has_cntl</a> ? 2*<a class=\"id\" href=\"#len\">len</a> : <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * normally arguments are small enough to fit and we already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * filled buf above when we checked for control characters</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * so don't bother with another copy_from_user</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> >= <a class=\"id\" href=\"#max_execve_audit_len\">max_execve_audit_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#to_send\">to_send</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>, <a class=\"id\" href=\"#current\">current</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#to_send\">to_send</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* actually log it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(*<a class=\"id\" href=\"#ab\">ab</a>, \" a%d\", <a class=\"id\" href=\"#arg_num\">arg_num</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#too_long\">too_long</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(*<a class=\"id\" href=\"#ab\">ab</a>, \"[%d]\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(*<a class=\"id\" href=\"#ab\">ab</a>, \"=\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#has_cntl\">has_cntl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_n_hex\">audit_log_n_hex</a>(*<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#to_send\">to_send</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_string\">audit_log_string</a>(*<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#to_send\">to_send</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len_left\">len_left</a> -= <a class=\"id\" href=\"#to_send\">to_send</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len_sent\">len_sent</a> += <a class=\"id\" href=\"#arg_num_len\">arg_num_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#has_cntl\">has_cntl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len_sent\">len_sent</a> += <a class=\"id\" href=\"#to_send\">to_send</a> * 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len_sent\">len_sent</a> += <a class=\"id\" href=\"#to_send\">to_send</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* include the null we didn't log */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a> + 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_log_execve_info\">audit_log_execve_info</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> **<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#audit_aux_data_execve\">audit_aux_data_execve</a> *<a class=\"id\" href=\"#axi\">axi</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#len_sent\">len_sent</a> = 0;", 
"<span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#axi\">axi</a>-><a class=\"id\" href=\"#mm\">mm</a> != <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return; <span class=\"comment\">/* execve failed, no additional info */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (const char <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#axi\">axi</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#arg_start\">arg_start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(*<a class=\"id\" href=\"#ab\">ab</a>, \"argc=%d\", <a class=\"id\" href=\"#axi\">axi</a>-><a class=\"id\" href=\"#argc\">argc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we need some kernel buffer to hold the userspace args.  Just</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocate one big one rather than allocating one of the right size</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for every single argument inside audit_log_single_execve_arg()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * should be &lt;8k allocation so should be pretty safe.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#MAX_EXECVE_AUDIT_LEN\">MAX_EXECVE_AUDIT_LEN</a> + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_panic\">audit_panic</a>(\"out of memory for argv string\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#axi\">axi</a>-><a class=\"id\" href=\"#argc\">argc</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#audit_log_single_execve_arg\">audit_log_single_execve_arg</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#len_sent\">len_sent</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>, char *<a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#cap\">cap</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" %s=\", <a class=\"id\" href=\"#prefix\">prefix</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CAP_FOR_EACH_U32\">CAP_FOR_EACH_U32</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"%08x\", <a class=\"id\" href=\"#cap\">cap</a>-><a class=\"id\" href=\"#cap\">cap</a>[(<a class=\"id\" href=\"#_KERNEL_CAPABILITY_U32S\">_KERNEL_CAPABILITY_U32S</a>-1) - <a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_log_fcaps\">audit_log_fcaps</a>(struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>, struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#perm\">perm</a> = &amp;<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_cap_t\">kernel_cap_t</a> *<a class=\"id\" href=\"#inh\">inh</a> = &amp;<a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#log\">log</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap_isclear\">cap_isclear</a>(*<a class=\"id\" href=\"#perm\">perm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"cap_fp\", <a class=\"id\" href=\"#perm\">perm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log\">log</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cap_isclear\">cap_isclear</a>(*<a class=\"id\" href=\"#inh\">inh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"cap_fi\", <a class=\"id\" href=\"#inh\">inh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#log\">log</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#log\">log</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" cap_fe=%d cap_fver=%x\", <a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#fE\">fE</a>, <a class=\"id\" href=\"#name\">name</a>-><a class=\"id\" href=\"#fcap_ver\">fcap_ver</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#show_special\">show_special</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>, int *<a class=\"id\" href=\"#call_panic\">call_panic</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_SOCKETCALL\">AUDIT_SOCKETCALL</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nargs\">nargs</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#socketcall\">socketcall</a>.<a class=\"id\" href=\"#nargs\">nargs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"nargs=%d\", <a class=\"id\" href=\"#nargs\">nargs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nargs\">nargs</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" a%d=%lx\", <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#socketcall\">socketcall</a>.<a class=\"id\" href=\"#args\">args</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>break; }", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_IPC\">AUDIT_IPC</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#osid\">osid</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#osid\">osid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"ouid=%u ogid=%u mode=%#o\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#gid\">gid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#osid\">osid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#security_secid_to_secctx\">security_secid_to_secctx</a>(<a class=\"id\" href=\"#osid\">osid</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" osid=%u\", <a class=\"id\" href=\"#osid\">osid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#call_panic\">call_panic</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" obj=%s\", <a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_release_secctx\">security_release_secctx</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#has_perm\">has_perm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#AUDIT_IPC_SET_PERM\">AUDIT_IPC_SET_PERM</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"qbytes=%lx ouid=%u ogid=%u mode=%#o\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#qbytes\">qbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#perm_uid\">perm_uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#perm_gid\">perm_gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ipc\">ipc</a>.<a class=\"id\" href=\"#perm_mode\">perm_mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break; }", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_MQ_OPEN\">AUDIT_MQ_OPEN</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"oflag=0x%x mode=%#o mq_flags=0x%lx mq_maxmsg=%ld \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"mq_msgsize=%ld mq_curmsgs=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#oflag\">oflag</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#mq_flags\">mq_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#mq_maxmsg\">mq_maxmsg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#mq_msgsize\">mq_msgsize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_open\">mq_open</a>.<a class=\"id\" href=\"#attr\">attr</a>.<a class=\"id\" href=\"#mq_curmsgs\">mq_curmsgs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break; }", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_MQ_SENDRECV\">AUDIT_MQ_SENDRECV</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"mqdes=%d msg_len=%zd msg_prio=%u \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"abs_timeout_sec=%ld abs_timeout_nsec=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#mqdes\">mqdes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#msg_len\">msg_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#msg_prio\">msg_prio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#abs_timeout\">abs_timeout</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_sendrecv\">mq_sendrecv</a>.<a class=\"id\" href=\"#abs_timeout\">abs_timeout</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break; }", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_MQ_NOTIFY\">AUDIT_MQ_NOTIFY</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"mqdes=%d sigev_signo=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_notify\">mq_notify</a>.<a class=\"id\" href=\"#mqdes\">mqdes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_notify\">mq_notify</a>.<a class=\"id\" href=\"#sigev_signo\">sigev_signo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break; }", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_MQ_GETSETATTR\">AUDIT_MQ_GETSETATTR</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#mq_attr\">mq_attr</a> *<a class=\"id\" href=\"#attr\">attr</a> = &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_getsetattr\">mq_getsetattr</a>.<a class=\"id\" href=\"#mqstat\">mqstat</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"mqdes=%d mq_flags=0x%lx mq_maxmsg=%ld mq_msgsize=%ld \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"mq_curmsgs=%ld \",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#mq_getsetattr\">mq_getsetattr</a>.<a class=\"id\" href=\"#mqdes\">mqdes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#mq_flags\">mq_flags</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#mq_maxmsg\">mq_maxmsg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#mq_msgsize\">mq_msgsize</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#mq_curmsgs\">mq_curmsgs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break; }", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_CAPSET\">AUDIT_CAPSET</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"pid=%d\", <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#capset\">capset</a>.<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"cap_pi\", &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#capset\">capset</a>.<a class=\"id\" href=\"#cap\">cap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"cap_pp\", &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#capset\">capset</a>.<a class=\"id\" href=\"#cap\">cap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"cap_pe\", &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#capset\">capset</a>.<a class=\"id\" href=\"#cap\">cap</a>.<a class=\"id\" href=\"#effective\">effective</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break; }", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#audit_log_exit\">audit_log_exit</a>(struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#call_panic\">call_panic</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_buffer\">audit_buffer</a> *<a class=\"id\" href=\"#ab\">ab</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data\">audit_aux_data</a> *<a class=\"id\" href=\"#aux\">aux</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#tty\">tty</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* tsk == current */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ppid\">ppid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ppid\">ppid</a> = <a class=\"id\" href=\"#sys_getppid\">sys_getppid</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#uid\">uid</a>   = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#gid\">gid</a>   = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#gid\">gid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#euid\">euid</a>  = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#suid\">suid</a>  = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#suid\">suid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#egid\">egid</a>  = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sgid\">sgid</a>  = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#sgid\">sgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#personality\">personality</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#personality\">personality</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_SYSCALL\">AUDIT_SYSCALL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* audit_panic has been called */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"arch=%x syscall=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#arch\">arch</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#major\">major</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#personality\">personality</a> != <a class=\"id\" href=\"#PER_LINUX\">PER_LINUX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" per=%lx\", <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#personality\">personality</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#return_valid\">return_valid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" success=%s exit=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#return_valid\">return_valid</a>==<a class=\"id\" href=\"#AUDITSC_SUCCESS\">AUDITSC_SUCCESS</a>)?\"yes\":\"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#return_code\">return_code</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a> && <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a> && <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#tty\">tty</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tty\">tty</a> = \"(none)\";", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" a0=%lx a1=%lx a2=%lx a3=%lx items=%d\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" ppid=%d pid=%d auid=%u uid=%u gid=%u\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" euid=%u suid=%u fsuid=%u\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \" egid=%u sgid=%u fsgid=%u tty=%s ses=%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[1],", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[2],", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[3],", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ppid\">ppid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pid\">pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#loginuid\">loginuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#gid\">gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#euid\">euid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#suid\">suid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fsuid\">fsuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#egid\">egid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sgid\">sgid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fsgid\">fsgid</a>, <a class=\"id\" href=\"#tty\">tty</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sessionid\">sessionid</a>);", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_task_info\">audit_log_task_info</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_key\">audit_log_key</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#aux\">aux</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux\">aux</a>; <a class=\"id\" href=\"#aux\">aux</a>; <a class=\"id\" href=\"#aux\">aux</a> = <a class=\"id\" href=\"#aux\">aux</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#aux\">aux</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue; <span class=\"comment\">/* audit_panic has been called */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#aux\">aux</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_EXECVE\">AUDIT_EXECVE</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data_execve\">audit_aux_data_execve</a> *<a class=\"id\" href=\"#axi\">axi</a> = (void *)<a class=\"id\" href=\"#aux\">aux</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_execve_info\">audit_log_execve_info</a>(<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#axi\">axi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break; }", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_BPRM_FCAPS\">AUDIT_BPRM_FCAPS</a>: {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data_bprm_fcaps\">audit_aux_data_bprm_fcaps</a> *<a class=\"id\" href=\"#axs\">axs</a> = (void *)<a class=\"id\" href=\"#aux\">aux</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"fver=%x\", <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#fcap_ver\">fcap_ver</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"fp\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"fi\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" fe=%d\", <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#fcap\">fcap</a>.<a class=\"id\" href=\"#fE\">fE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"old_pp\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#old_pcap\">old_pcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"old_pi\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#old_pcap\">old_pcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"old_pe\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#old_pcap\">old_pcap</a>.<a class=\"id\" href=\"#effective\">effective</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"new_pp\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#new_pcap\">new_pcap</a>.<a class=\"id\" href=\"#permitted\">permitted</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"new_pi\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#new_pcap\">new_pcap</a>.<a class=\"id\" href=\"#inheritable\">inheritable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_cap\">audit_log_cap</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"new_pe\", &amp;<a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#new_pcap\">new_pcap</a>.<a class=\"id\" href=\"#effective\">effective</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break; }", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#show_special\">show_special</a>(<a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#call_panic\">call_panic</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fds\">fds</a>[0] >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_FD_PAIR\">AUDIT_FD_PAIR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ab\">ab</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"fd0=%d fd1=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fds\">fds</a>[0], <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#fds\">fds</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr_len\">sockaddr_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_SOCKADDR\">AUDIT_SOCKADDR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ab\">ab</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"saddr=\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_n_hex\">audit_log_n_hex</a>(<a class=\"id\" href=\"#ab\">ab</a>, (void *)<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr\">sockaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#sockaddr_len\">sockaddr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#aux\">aux</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#aux_pids\">aux_pids</a>; <a class=\"id\" href=\"#aux\">aux</a>; <a class=\"id\" href=\"#aux\">aux</a> = <a class=\"id\" href=\"#aux\">aux</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_aux_data_pids\">audit_aux_data_pids</a> *<a class=\"id\" href=\"#axs\">axs</a> = (void *)<a class=\"id\" href=\"#aux\">aux</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#pid_count\">pid_count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#audit_log_pid_context\">audit_log_pid_context</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#target_pid\">target_pid</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#target_auid\">target_auid</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#target_uid\">target_uid</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#target_sessionid\">target_sessionid</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#target_sid\">target_sid</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#axs\">axs</a>-><a class=\"id\" href=\"#target_comm\">target_comm</a>[<a class=\"id\" href=\"#i\">i</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_panic\">call_panic</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_pid\">target_pid</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#audit_log_pid_context\">audit_log_pid_context</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_pid\">target_pid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_auid\">target_auid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_uid\">target_uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_sessionid\">target_sessionid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_sid\">target_sid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#target_comm\">target_comm</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_panic\">call_panic</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>.<a class=\"id\" href=\"#dentry\">dentry</a> && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>.<a class=\"id\" href=\"#mnt\">mnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_CWD\">AUDIT_CWD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ab\">ab</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_d_path\">audit_log_d_path</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"cwd=\", &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_names\">audit_names</a> *<a class=\"id\" href=\"#n\">n</a> = &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#names\">names</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_PATH\">AUDIT_PATH</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue; <span class=\"comment\">/* audit_panic has been called */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"item=%d\", <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name_len\">name_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#AUDIT_NAME_FULL\">AUDIT_NAME_FULL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* log the full path */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" name=\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_untrustedstring\">audit_log_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* name was specified as a relative path and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * directory component is the cwd */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_d_path\">audit_log_d_path</a>(<a class=\"id\" href=\"#ab\">ab</a>, \"name=\", &amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#pwd\">pwd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* log the name's directory component */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" name=\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_n_untrustedstring\">audit_log_n_untrustedstring</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" name=(null)\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ino\">ino</a> != (unsigned long)-1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" inode=%lu\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" dev=%02x:%02x mode=%#o\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \" ouid=%u ogid=%u rdev=%02x:%02x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#ino\">ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#gid\">gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#MAJOR\">MAJOR</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rdev\">rdev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#rdev\">rdev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#osid\">osid</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#security_secid_to_secctx\">security_secid_to_secctx</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#osid\">osid</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>, &amp;<a class=\"id\" href=\"#len\">len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" osid=%u\", <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#osid\">osid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#call_panic\">call_panic</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_format\">audit_log_format</a>(<a class=\"id\" href=\"#ab\">ab</a>, \" obj=%s\", <a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#security_release_secctx\">security_release_secctx</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_fcaps\">audit_log_fcaps</a>(<a class=\"id\" href=\"#ab\">ab</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Send end of event record to help user space know we are finished */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ab\">ab</a> = <a class=\"id\" href=\"#audit_log_start\">audit_log_start</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#AUDIT_EOE\">AUDIT_EOE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ab\">ab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_end\">audit_log_end</a>(<a class=\"id\" href=\"#ab\">ab</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#call_panic\">call_panic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_panic\">audit_panic</a>(\"error converting sid to string\");", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_free - free a per-task audit context</span>", 
"<span class=\"comment\"> * @tsk: task whose audit context block to free</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Called from copy_process and do_exit</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#audit_free\">audit_free</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#audit_get_context\">audit_get_context</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, 0, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(!<a class=\"id\" href=\"#context\">context</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for system calls that do not go through the exit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * function (e.g., exit_group), then free context block.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We use GFP_ATOMIC here because we might be doing this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in the context of the idle thread */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* that can happen only if we are called from do_exit() */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a> && <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#current_state\">current_state</a> == <a class=\"id\" href=\"#AUDIT_RECORD_CONTEXT\">AUDIT_RECORD_CONTEXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_log_exit\">audit_log_exit</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#tsk\">tsk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#killed_trees\">killed_trees</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_kill_trees\">audit_kill_trees</a>(&amp;<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#killed_trees\">killed_trees</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_free_context\">audit_free_context</a>(<a class=\"id\" href=\"#context\">context</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_syscall_entry - fill in an audit record at syscall entry</span>", 
"<span class=\"comment\"> * @arch: architecture type</span>", 
"<span class=\"comment\"> * @major: major syscall type (function)</span>", 
"<span class=\"comment\"> * @a1: additional syscall register 1</span>", 
"<span class=\"comment\"> * @a2: additional syscall register 2</span>", 
"<span class=\"comment\"> * @a3: additional syscall register 3</span>", 
"<span class=\"comment\"> * @a4: additional syscall register 4</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fill in audit context at syscall entry.  This only happens if the</span>", 
"<span class=\"comment\"> * audit context was created when the task was created and the state or</span>", 
"<span class=\"comment\"> * filters demand the audit context be built.  If the state from the</span>", 
"<span class=\"comment\"> * per-task filter or from the per-syscall filter is AUDIT_RECORD_CONTEXT,</span>", 
"<span class=\"comment\"> * then the record will be written at syscall exit time (otherwise, it</span>", 
"<span class=\"comment\"> * will only be written if another part of the kernel requests that it</span>", 
"<span class=\"comment\"> * be written).</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#audit_syscall_entry\">audit_syscall_entry</a>(int <a class=\"id\" href=\"#arch\">arch</a>, int <a class=\"id\" href=\"#major\">major</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#a1\">a1</a>, unsigned long <a class=\"id\" href=\"#a2\">a2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#a3\">a3</a>, unsigned long <a class=\"id\" href=\"#a4\">a4</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#context\">context</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#audit_state\">audit_state</a>     <a class=\"id\" href=\"#state\">state</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#context\">context</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This happens only on certain architectures that make system</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * calls in kernel_thread via the entry.S interface, instead of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with direct calls.  (If you are porting to a new</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * architecture, hitting this condition can indicate that you</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * got the _exit/_leave calls backward in entry.S.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i386     no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * x86_64   no</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ppc64    yes (see arch/powerpc/platforms/iseries/misc.S)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This also happens with vm86 emulation in a non-nested manner</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (entries without exits), so this case must be caught.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#newctx\">newctx</a>;", 
"", 
"#if <a class=\"id\" href=\"#AUDIT_DEBUG\">AUDIT_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"audit(:%d) pid=%d in syscall=%d;\"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \" entering syscall=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#serial\">serial</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#pid\">pid</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#major\">major</a>, <a class=\"id\" href=\"#major\">major</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newctx\">newctx</a> = <a class=\"id\" href=\"#audit_alloc_context\">audit_alloc_context</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newctx\">newctx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newctx\">newctx</a>-><a class=\"id\" href=\"#previous\">previous</a>   = <a class=\"id\" href=\"#context\">context</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a><span class=\"ts\"/><span class=\"ts\"/>   = <a class=\"id\" href=\"#newctx\">newctx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a> = <a class=\"id\" href=\"#newctx\">newctx</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we can't alloc a new context, the best we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * can do is to leak memory (any pending putname</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * will be lost).  The only other alternative is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to abandon auditing. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_zero_context\">audit_zero_context</a>(<a class=\"id\" href=\"#context\">context</a>, <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a> || <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#name_count\">name_count</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#audit_enabled\">audit_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#arch\">arch</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#arch\">arch</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#major\">major</a>      = <a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[0]    = <a class=\"id\" href=\"#a1\">a1</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[1]    = <a class=\"id\" href=\"#a2\">a2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[2]    = <a class=\"id\" href=\"#a3\">a3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#argv\">argv</a>[3]    = <a class=\"id\" href=\"#a4\">a4</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#dummy\">dummy</a> = !<a class=\"id\" href=\"#audit_n_rules\">audit_n_rules</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#dummy\">dummy</a> && <a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#AUDIT_BUILD_CONTEXT\">AUDIT_BUILD_CONTEXT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#prio\">prio</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#audit_filter_syscall\">audit_filter_syscall</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#context\">context</a>, &amp;<a class=\"id\" href=\"#audit_filter_list\">audit_filter_list</a>[<a class=\"id\" href=\"#AUDIT_FILTER_ENTRY\">AUDIT_FILTER_ENTRY</a>]);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#AUDIT_DISABLED\">AUDIT_DISABLED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#serial\">serial</a>     = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ctime\">ctime</a>      = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#current_state\">current_state</a>  = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#context\">context</a>-><a class=\"id\" href=\"#ppid\">ppid</a>       = 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#audit_finish_fork\">audit_finish_fork</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#audit_context\">audit_context</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#audit_context\">audit_context</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a> || !<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a> || <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#AUDIT_RECORD_CONTEXT\">AUDIT_RECORD_CONTEXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#arch\">arch</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#arch\">arch</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#major\">major</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#major\">major</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#argv\">argv</a>, sizeof(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#argv\">argv</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ctime\">ctime</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#ctime\">ctime</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#dummy\">dummy</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#in_syscall\">in_syscall</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#filterkey\">filterkey</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#ppid\">ppid</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#pid\">pid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prio\">prio</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#current_state\">current_state</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * audit_syscall_exit - deallocate audit context after a system call</span>", 
"<span class=\"comment\"> * @valid: success/failure flag</span>", 
"<span class=\"comment\"> * @return_code: syscall return value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Tear down after system call.  If the audit context has been marked as</span>", 
"<span class=\"comment\"> * auditable (either because of the AUDIT_RECORD_CONTEXT state from</span>", 
"<span class=\"comment\"> * filtering, or because some other part of the kernel write an audit</span>", 
"<span class=\"comment\"> * message), then write out the syscall information.  In call cases,</span>", 
];
xr_frag_insert('l/20/9dc4ee2b502217fc4e3f173d86bb0894136b74.xr', __xr_tmp);
