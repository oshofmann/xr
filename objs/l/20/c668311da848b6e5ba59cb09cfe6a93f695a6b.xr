var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>linux/kernel/resource.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1999<span class=\"ts\"/>Linus Torvalds</span>", 
"<span class=\"comment\"> * Copyright (C) 1999<span class=\"ts\"/>Martin Mares &lt;mj@ucw.cz&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Arbitrary resource management.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pfn\">pfn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#ioport_resource\">ioport_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"PCI IO\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IO_SPACE_LIMIT\">IO_SPACE_LIMIT</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ioport_resource\">ioport_resource</a>);", 
"", 
"struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#iomem_resource\">iomem_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"PCI mem\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/>= -1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>);", 
"", 
"static <a class=\"id\" href=\"#DEFINE_RWLOCK\">DEFINE_RWLOCK</a>(<a class=\"id\" href=\"#resource_lock\">resource_lock</a>);", 
"", 
"static void *<a class=\"id\" href=\"#r_next\">r_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sibling\">sibling</a> && <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sibling\">sibling</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"", 
"enum { <a class=\"id\" href=\"#MAX_IORES_LEVEL\">MAX_IORES_LEVEL</a> = 5 };", 
"", 
"static void *<a class=\"id\" href=\"#r_start\">r_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__acquires\">__acquires</a>(<a class=\"id\" href=\"#resource_lock\">resource_lock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#l\">l</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#resource_lock\">resource_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#child\">child</a>; <a class=\"id\" href=\"#p\">p</a> && <a class=\"id\" href=\"#l\">l</a> &lt; *<a class=\"id\" href=\"#pos\">pos</a>; <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#r_next\">r_next</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#l\">l</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#r_stop\">r_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__releases\">__releases</a>(<a class=\"id\" href=\"#resource_lock\">resource_lock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#resource_lock\">resource_lock</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#r_show\">r_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#v\">v</a>, *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#width\">width</a> = <a class=\"id\" href=\"#root\">root</a>-><a class=\"id\" href=\"#end\">end</a> &lt; 0x10000 ? 4 : 8;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#depth\">depth</a> = 0, <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#r\">r</a>; <a class=\"id\" href=\"#depth\">depth</a> &lt; <a class=\"id\" href=\"#MAX_IORES_LEVEL\">MAX_IORES_LEVEL</a>; <a class=\"id\" href=\"#depth\">depth</a>++, <a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#root\">root</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%*s%0*llx-%0*llx : %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> * 2, \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#width\">width</a>, (unsigned long long) <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#width\">width</a>, (unsigned long long) <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#name\">name</a> ? <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#name\">name</a> : \"<BAD>\");", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#resource_op\">resource_op</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#r_start\">r_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#r_next\">r_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#r_stop\">r_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#r_show\">r_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ioports_open\">ioports_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#resource_op\">resource_op</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = &amp;<a class=\"id\" href=\"#ioport_resource\">ioport_resource</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#iomem_open\">iomem_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#resource_op\">resource_op</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = &amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_ioports_operations\">proc_ioports_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ioports_open\">ioports_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_iomem_operations\">proc_iomem_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#iomem_open\">iomem_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ioresources_init\">ioresources_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"ioports\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_ioports_operations\">proc_ioports_operations</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_create\">proc_create</a>(\"iomem\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#proc_iomem_operations\">proc_iomem_operations</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#__initcall\">__initcall</a>(<a class=\"id\" href=\"#ioresources_init\">ioresources_init</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_PROC_FS */</span>", 
"", 
"<span class=\"comment\">/* Return the conflict entry if you can't request it */</span>", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> * <a class=\"id\" href=\"#__request_resource\">__request_resource</a>(struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#root\">root</a>, struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#new\">new</a>)", 
"{", 
];
xr_frag_insert('l/20/c668311da848b6e5ba59cb09cfe6a93f695a6b.xr', __xr_tmp);
