var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>] &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>] >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>] +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a> + <a class=\"id\" href=\"#temp\">temp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a> - 1 && <a class=\"id\" href=\"#enc\">enc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> += <a class=\"id\" href=\"#authsize\">authsize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#q\">q</a>) + <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>[<a class=\"id\" href=\"#n\">n</a>] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#k\">k</a>], <a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> += <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_aead_setauthsize\">crypto_aead_setauthsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#authsize\">authsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: Failed to set \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"authsize to %u on chunk test %d for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s\\n\", <a class=\"id\" href=\"#authsize\">authsize</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#enc\">enc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#k\">k</a> - 1].<a class=\"id\" href=\"#offset\">offset</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#k\">k</a> - 1].<a class=\"id\" href=\"#length\">length</a> + <a class=\"id\" href=\"#authsize\">authsize</a> &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#k\">k</a> - 1].<a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#authsize\">authsize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#asg\">asg</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#anp\">anp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0, <a class=\"id\" href=\"#temp\">temp</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#anp\">anp</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#atap\">atap</a>[<a class=\"id\" href=\"#k\">k</a>] &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#asg\">asg</a>[<a class=\"id\" href=\"#k\">k</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#axbuf\">axbuf</a>[<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>] >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>] +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#assoc\">assoc</a> + <a class=\"id\" href=\"#temp\">temp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#atap\">atap</a>[<a class=\"id\" href=\"#k\">k</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#atap\">atap</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> += <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#atap\">atap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aead_request_set_crypt\">aead_request_set_crypt</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#iv\">iv</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#aead_request_set_assoc\">aead_request_set_assoc</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#asg\">asg</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#alen\">alen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#enc\">enc</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_encrypt\">crypto_aead_encrypt</a>(<a class=\"id\" href=\"#req\">req</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_aead_decrypt\">crypto_aead_decrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#novrfy\">novrfy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* verification was supposed to fail */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: %s failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on chunk test %d for %s: ret \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"was 0, expected -EBADMSG\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* so really, we got a bad message */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADMSG\">EBADMSG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_completion_interruptible\">wait_for_completion_interruptible</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && !(<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_COMPLETION\">INIT_COMPLETION</a>(<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EBADMSG\">EBADMSG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#novrfy\">novrfy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* verification failure was expected */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: %s failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"chunk test %d for %s: ret=%d\\n\", <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0, <a class=\"id\" href=\"#temp\">temp</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>] >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>] +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> += <a class=\"id\" href=\"#enc\">enc</a> ? <a class=\"id\" href=\"#authsize\">authsize</a> : -<a class=\"id\" href=\"#authsize\">authsize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#result\">result</a> + <a class=\"id\" href=\"#temp\">temp</a>, <a class=\"id\" href=\"#n\">n</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: Chunk \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d failed on %s at page \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%u for %s\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> += <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#k\">k</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a> - 1 && !<a class=\"id\" href=\"#enc\">enc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#temp\">temp</a> + <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#authsize\">authsize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#authsize\">authsize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#q\">q</a> + <a class=\"id\" href=\"#n\">n</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#q\">q</a>[<a class=\"id\" href=\"#n\">n</a>]; <a class=\"id\" href=\"#n\">n</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: Result \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"buffer corruption in chunk \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d on %s at page %u for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s: %u bytes:\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> += <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#aead_request_free\">aead_request_free</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#testmgr_free_buf\">testmgr_free_buf</a>(<a class=\"id\" href=\"#axbuf\">axbuf</a>);", 
"<a class=\"id\" href=\"#out_noaxbuf\">out_noaxbuf</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#testmgr_free_buf\">testmgr_free_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>);", 
"<a class=\"id\" href=\"#out_noxbuf\">out_noxbuf</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#test_cipher\">test_cipher</a>(struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, int <a class=\"id\" href=\"#enc\">enc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#cipher_testvec\">cipher_testvec</a> *<a class=\"id\" href=\"#template\">template</a>, unsigned int <a class=\"id\" href=\"#tcount\">tcount</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#algo\">algo</a> = <a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(<a class=\"id\" href=\"#crypto_cipher_tfm\">crypto_cipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#k\">k</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#testmgr_alloc_buf\">testmgr_alloc_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nobuf\">out_nobuf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enc\">enc</a> == <a class=\"id\" href=\"#ENCRYPT\">ENCRYPT</a>)", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#e\">e</a> = \"encryption\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = \"decryption\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_clear_flags\">crypto_cipher_clear_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#wk\">wk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_set_flags\">crypto_cipher_set_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_WEAK_KEY\">CRYPTO_TFM_REQ_WEAK_KEY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_cipher_setkey\">crypto_cipher_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#klen\">klen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#fail\">fail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: cipher: setkey failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on test %d for %s: flags=%x\\n\", <a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#crypto_cipher_get_flags\">crypto_cipher_get_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#k\">k</a> += <a class=\"id\" href=\"#crypto_cipher_blocksize\">crypto_cipher_blocksize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#enc\">enc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_encrypt_one\">crypto_cipher_encrypt_one</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_cipher_decrypt_one\">crypto_cipher_decrypt_one</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a> + <a class=\"id\" href=\"#k\">k</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: cipher: Test %d failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on %s for %s\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#testmgr_free_buf\">testmgr_free_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>);", 
"<a class=\"id\" href=\"#out_nobuf\">out_nobuf</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#test_skcipher\">test_skcipher</a>(struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, int <a class=\"id\" href=\"#enc\">enc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#cipher_testvec\">cipher_testvec</a> *<a class=\"id\" href=\"#template\">template</a>, unsigned int <a class=\"id\" href=\"#tcount\">tcount</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#algo\">algo</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(<a class=\"id\" href=\"#crypto_ablkcipher_tfm\">crypto_ablkcipher_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#temp\">temp</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ablkcipher_request\">ablkcipher_request</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> <a class=\"id\" href=\"#sg\">sg</a>[8];", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#e\">e</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcrypt_result\">tcrypt_result</a> <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#iv\">iv</a>[<a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#XBUFSIZE\">XBUFSIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#testmgr_alloc_buf\">testmgr_alloc_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nobuf\">out_nobuf</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enc\">enc</a> == <a class=\"id\" href=\"#ENCRYPT\">ENCRYPT</a>)", 
"<span class=\"ts\"/>        <a class=\"id\" href=\"#e\">e</a> = \"encryption\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = \"decryption\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_completion\">init_completion</a>(&amp;<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#ablkcipher_request_alloc\">ablkcipher_request_alloc</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#req\">req</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: Failed to allocate request \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"for %s\\n\", <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ablkcipher_request_set_callback\">ablkcipher_request_set_callback</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_MAY_BACKLOG\">CRYPTO_TFM_REQ_MAY_BACKLOG</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcrypt_complete\">tcrypt_complete</a>, &amp;<a class=\"id\" href=\"#result\">result</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#iv\">iv</a>, 0, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_clear_flags\">crypto_ablkcipher_clear_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#wk\">wk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_set_flags\">crypto_ablkcipher_set_flags</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_WEAK_KEY\">CRYPTO_TFM_REQ_WEAK_KEY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_ablkcipher_setkey\">crypto_ablkcipher_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#klen\">klen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#fail\">fail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: setkey failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on test %d for %s: flags=%x\\n\", <a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#crypto_ablkcipher_get_flags\">crypto_ablkcipher_get_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_one\">sg_init_one</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[0], <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ablkcipher_request_set_crypt\">ablkcipher_request_set_crypt</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>, <a class=\"id\" href=\"#iv\">iv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#enc\">enc</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_encrypt\">crypto_ablkcipher_encrypt</a>(<a class=\"id\" href=\"#req\">req</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_decrypt\">crypto_ablkcipher_decrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_completion_interruptible\">wait_for_completion_interruptible</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && !((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#err\">err</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_COMPLETION\">INIT_COMPLETION</a>(<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: %s failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d for %s: ret=%d\\n\", <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: Test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"failed on %s for %s\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#iv\">iv</a>, 0, <a class=\"id\" href=\"#MAX_IVLEN\">MAX_IVLEN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_clear_flags\">crypto_ablkcipher_clear_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#wk\">wk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_set_flags\">crypto_ablkcipher_set_flags</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#CRYPTO_TFM_REQ_WEAK_KEY\">CRYPTO_TFM_REQ_WEAK_KEY</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_ablkcipher_setkey\">crypto_ablkcipher_setkey</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#klen\">klen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> == <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#fail\">fail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: setkey failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on chunk test %d for %s: flags=%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#crypto_ablkcipher_get_flags\">crypto_ablkcipher_get_flags</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_init_table\">sg_init_table</a>(<a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>] &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>] >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>] +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a> + <a class=\"id\" href=\"#temp\">temp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#q\">q</a>) + <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>] &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>[<a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_buf\">sg_set_buf</a>(&amp;<a class=\"id\" href=\"#sg\">sg</a>[<a class=\"id\" href=\"#k\">k</a>], <a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> += <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ablkcipher_request_set_crypt\">ablkcipher_request_set_crypt</a>(<a class=\"id\" href=\"#req\">req</a>, <a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#sg\">sg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#ilen\">ilen</a>, <a class=\"id\" href=\"#iv\">iv</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#enc\">enc</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_encrypt\">crypto_ablkcipher_encrypt</a>(<a class=\"id\" href=\"#req\">req</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crypto_ablkcipher_decrypt\">crypto_ablkcipher_decrypt</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_for_completion_interruptible\">wait_for_completion_interruptible</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a> && !((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#err\">err</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_COMPLETION\">INIT_COMPLETION</a>(<a class=\"id\" href=\"#result\">result</a>.<a class=\"id\" href=\"#completion\">completion</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fall through */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: %s failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"chunk test %d for %s: ret=%d\\n\", <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#j\">j</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#k\">k</a> = 0; <a class=\"id\" href=\"#k\">k</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#np\">np</a>; <a class=\"id\" href=\"#k\">k</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#xbuf\">xbuf</a>[<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>] >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>] +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#IDX\">IDX</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#result\">result</a> + <a class=\"id\" href=\"#temp\">temp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: Chunk \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d failed on %s at page \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%u for %s\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> += <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#offset_in_page\">offset_in_page</a>(<a class=\"id\" href=\"#q\">q</a> + <a class=\"id\" href=\"#n\">n</a>) && <a class=\"id\" href=\"#q\">q</a>[<a class=\"id\" href=\"#n\">n</a>]; <a class=\"id\" href=\"#n\">n</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Result buffer corruption in \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"chunk test %d on %s at page \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%u for %s: %u bytes:\\n\", <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#e\">e</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#k\">k</a>, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> += <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#tap\">tap</a>[<a class=\"id\" href=\"#k\">k</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ablkcipher_request_free\">ablkcipher_request_free</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#testmgr_free_buf\">testmgr_free_buf</a>(<a class=\"id\" href=\"#xbuf\">xbuf</a>);", 
"<a class=\"id\" href=\"#out_nobuf\">out_nobuf</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#test_comp\">test_comp</a>(struct <a class=\"id\" href=\"#crypto_comp\">crypto_comp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, struct <a class=\"id\" href=\"#comp_testvec\">comp_testvec</a> *<a class=\"id\" href=\"#ctemplate\">ctemplate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#comp_testvec\">comp_testvec</a> *<a class=\"id\" href=\"#dtemplate\">dtemplate</a>, int <a class=\"id\" href=\"#ctcount\">ctcount</a>, int <a class=\"id\" href=\"#dtcount\">dtcount</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#algo\">algo</a> = <a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(<a class=\"id\" href=\"#crypto_comp_tfm\">crypto_comp_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ctcount\">ctcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ilen\">ilen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dlen\">dlen</a> = <a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, sizeof (<a class=\"id\" href=\"#result\">result</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ilen\">ilen</a> = <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#inlen\">inlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_comp_compress\">crypto_comp_compress</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>                           <a class=\"id\" href=\"#ilen\">ilen</a>, <a class=\"id\" href=\"#result\">result</a>, &amp;<a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: comp: compression failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on test %d for %s: ret=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dlen\">dlen</a> != <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: comp: Compression test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"failed for %s: output len = %d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#output\">output</a>, <a class=\"id\" href=\"#dlen\">dlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: comp: Compression test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"failed for %s\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dtcount\">dtcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ilen\">ilen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#dlen\">dlen</a> = <a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, sizeof (<a class=\"id\" href=\"#result\">result</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ilen\">ilen</a> = <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#inlen\">inlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#crypto_comp_decompress\">crypto_comp_decompress</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>                             <a class=\"id\" href=\"#ilen\">ilen</a>, <a class=\"id\" href=\"#result\">result</a>, &amp;<a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: comp: decompression failed \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"on test %d for %s: ret=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       -<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dlen\">dlen</a> != <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: comp: Decompression test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"failed for %s: output len = %d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#output\">output</a>, <a class=\"id\" href=\"#dlen\">dlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: comp: Decompression test %d \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"failed for %s\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#dlen\">dlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#test_pcomp\">test_pcomp</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#pcomp_testvec\">pcomp_testvec</a> *<a class=\"id\" href=\"#ctemplate\">ctemplate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#pcomp_testvec\">pcomp_testvec</a> *<a class=\"id\" href=\"#dtemplate\">dtemplate</a>, int <a class=\"id\" href=\"#ctcount\">ctcount</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#dtcount\">dtcount</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#algo\">algo</a> = <a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(<a class=\"id\" href=\"#crypto_pcomp_tfm\">crypto_pcomp_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ctcount\">ctcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#comp_request\">comp_request</a> <a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#produced\">produced</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_compress_setup\">crypto_compress_setup</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#params\">params</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#paramsize\">paramsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: compression setup failed on test \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_compress_init\">crypto_compress_init</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: compression init failed on test \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, sizeof(<a class=\"id\" href=\"#result\">result</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#next_in\">next_in</a> = <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a> = <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#inlen\">inlen</a> / 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#next_out\">next_out</a> = <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a> = <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a> / 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_compress_update\">crypto_compress_update</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, &amp;<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0 && (<a class=\"id\" href=\"#res\">res</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> || <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: compression update failed on test \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> += <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add remaining input data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a> += (<a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#inlen\">inlen</a> + 1) / 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_compress_update\">crypto_compress_update</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, &amp;<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0 && (<a class=\"id\" href=\"#res\">res</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> || <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: compression update failed on test \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> += <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Provide remaining output space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a> += <a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a> - <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a> / 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_compress_final\">crypto_compress_final</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, &amp;<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: compression final failed on test \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> += <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a> - <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a> != <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: comp: Compression test %d failed for %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"output len = %d (expected %d)\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a> - <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#produced\">produced</a> != <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: comp: Compression test %d failed for %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"returned len = %u (expected %d)\\n\", <a class=\"id\" href=\"#i\">i</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#produced\">produced</a>, <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#output\">output</a>, <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: Compression test %d failed for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#ctemplate\">ctemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dtcount\">dtcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#comp_request\">comp_request</a> <a class=\"id\" href=\"#req\">req</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#produced\">produced</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_decompress_setup\">crypto_decompress_setup</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#params\">params</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#paramsize\">paramsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: decompression setup failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_decompress_init\">crypto_decompress_init</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: decompression init failed on test \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, sizeof(<a class=\"id\" href=\"#result\">result</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#next_in\">next_in</a> = <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#input\">input</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a> = <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#inlen\">inlen</a> / 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#next_out\">next_out</a> = <a class=\"id\" href=\"#result\">result</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a> = <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a> / 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_decompress_update\">crypto_decompress_update</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, &amp;<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0 && (<a class=\"id\" href=\"#res\">res</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> || <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: decompression update failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> += <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add remaining input data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a> += (<a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#inlen\">inlen</a> + 1) / 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_decompress_update\">crypto_decompress_update</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, &amp;<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0 && (<a class=\"id\" href=\"#res\">res</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> || <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: decompression update failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> += <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Provide remaining output space */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a> += <a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a> - <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a> / 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#crypto_decompress_final\">crypto_decompress_final</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, &amp;<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &lt; 0 && (<a class=\"id\" href=\"#res\">res</a> != -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> || <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_in\">avail_in</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: decompression final failed on \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"test %d for %s: error=%d\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#produced\">produced</a> += <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a> - <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a> != <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: comp: Decompression test %d failed for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s: output len = %d (expected %d)\\n\", <a class=\"id\" href=\"#i\">i</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#COMP_BUF_SIZE\">COMP_BUF_SIZE</a> - <a class=\"id\" href=\"#req\">req</a>.<a class=\"id\" href=\"#avail_out\">avail_out</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#produced\">produced</a> != <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: comp: Decompression test %d failed for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s: returned len = %u (expected %d)\\n\", <a class=\"id\" href=\"#i\">i</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#algo\">algo</a>, <a class=\"id\" href=\"#produced\">produced</a>, <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#output\">output</a>, <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: Decompression test %d failed for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s\\n\", <a class=\"id\" href=\"#i\">i</a> + 1, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#dtemplate\">dtemplate</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#outlen\">outlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"static int <a class=\"id\" href=\"#test_cprng\">test_cprng</a>(struct <a class=\"id\" href=\"#crypto_rng\">crypto_rng</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, struct <a class=\"id\" href=\"#cprng_testvec\">cprng_testvec</a> *<a class=\"id\" href=\"#template\">template</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#tcount\">tcount</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#algo\">algo</a> = <a class=\"id\" href=\"#crypto_tfm_alg_driver_name\">crypto_tfm_alg_driver_name</a>(<a class=\"id\" href=\"#crypto_rng_tfm\">crypto_rng_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#seedsize\">seedsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#seed\">seed</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#result\">result</a>[32];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seedsize\">seedsize</a> = <a class=\"id\" href=\"#crypto_rng_seedsize\">crypto_rng_seedsize</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seed\">seed</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#seedsize\">seedsize</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#seed\">seed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: cprng: Failed to allocate seed space \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"for %s\\n\", <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tcount\">tcount</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, 32);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#seed\">seed</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vlen\">vlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#seed\">seed</a> + <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#klen\">klen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#seed\">seed</a> + <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vlen\">vlen</a> + <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#klen\">klen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dt\">dt</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#dtlen\">dtlen</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_rng_reset\">crypto_rng_reset</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#seed\">seed</a>, <a class=\"id\" href=\"#seedsize\">seedsize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: cprng: Failed to reset rng \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"for %s\\n\", <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#loops\">loops</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#crypto_rng_get_bytes\">crypto_rng_get_bytes</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#result\">result</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> != <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: cprng: Failed to obtain \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"the correct amount of random data for \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"%s (requested %d, got %d)\\n\", <a class=\"id\" href=\"#algo\">algo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#result\">result</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: cprng: Test %d failed for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#algo\">algo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hexdump\">hexdump</a>(<a class=\"id\" href=\"#result\">result</a>, <a class=\"id\" href=\"#template\">template</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#rlen\">rlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#seed\">seed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#alg_test_aead\">alg_test_aead</a>(const struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const char *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_aead\">crypto_aead</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_alloc_aead\">crypto_alloc_aead</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: aead: Failed to load transform for %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%ld\\n\", <a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#aead\">aead</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#vecs\">vecs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_aead\">test_aead</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#ENCRYPT\">ENCRYPT</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#aead\">aead</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#aead\">aead</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a> && <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#aead\">aead</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#vecs\">vecs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_aead\">test_aead</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#DECRYPT\">DECRYPT</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#aead\">aead</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#aead\">aead</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_aead\">crypto_free_aead</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#alg_test_cipher\">alg_test_cipher</a>(const struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_cipher\">crypto_cipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_alloc_cipher\">crypto_alloc_cipher</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: cipher: Failed to load transform for \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: %ld\\n\", <a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#vecs\">vecs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_cipher\">test_cipher</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#ENCRYPT\">ENCRYPT</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#vecs\">vecs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_cipher\">test_cipher</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#DECRYPT\">DECRYPT</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_cipher\">crypto_free_cipher</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#alg_test_skcipher\">alg_test_skcipher</a>(const struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ablkcipher\">crypto_ablkcipher</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_alloc_ablkcipher\">crypto_alloc_ablkcipher</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: skcipher: Failed to load transform for \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s: %ld\\n\", <a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#vecs\">vecs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_skcipher\">test_skcipher</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#ENCRYPT\">ENCRYPT</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#enc\">enc</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#vecs\">vecs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_skcipher\">test_skcipher</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#DECRYPT\">DECRYPT</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#cipher\">cipher</a>.<a class=\"id\" href=\"#dec\">dec</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_ablkcipher\">crypto_free_ablkcipher</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#alg_test_comp\">alg_test_comp</a>(const struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const char *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_comp\">crypto_comp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_alloc_comp\">crypto_alloc_comp</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: comp: Failed to load transform for %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%ld\\n\", <a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_comp\">test_comp</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#decomp\">decomp</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#decomp\">decomp</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_comp\">crypto_free_comp</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#alg_test_pcomp\">alg_test_pcomp</a>(const struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const char *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_alloc_pcomp\">crypto_alloc_pcomp</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"alg: pcomp: Failed to load transform for %s: %ld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_pcomp\">test_pcomp</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#pcomp\">pcomp</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#pcomp\">pcomp</a>.<a class=\"id\" href=\"#decomp\">decomp</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#pcomp\">pcomp</a>.<a class=\"id\" href=\"#comp\">comp</a>.<a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#pcomp\">pcomp</a>.<a class=\"id\" href=\"#decomp\">decomp</a>.<a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_pcomp\">crypto_free_pcomp</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#alg_test_hash\">alg_test_hash</a>(const struct <a class=\"id\" href=\"#alg_test_desc\">alg_test_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>, const char *<a class=\"id\" href=\"#driver\">driver</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_ahash\">crypto_ahash</a> *<a class=\"id\" href=\"#tfm\">tfm</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tfm\">tfm</a> = <a class=\"id\" href=\"#crypto_alloc_ahash\">crypto_alloc_ahash</a>(<a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"alg: hash: Failed to load transform for %s: \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%ld\\n\", <a class=\"id\" href=\"#driver\">driver</a>, <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_hash\">test_hash</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#test_hash\">test_hash</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#vecs\">vecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#suite\">suite</a>.<a class=\"id\" href=\"#hash\">hash</a>.<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_free_ahash\">crypto_free_ahash</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
];
xr_frag_insert('l/21/abaea418699c296f8417ed6cd0077c25aa0f58.xr', __xr_tmp);
