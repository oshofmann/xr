var __xr_tmp = [
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#TRACE_SYSTEM\">TRACE_SYSTEM</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRACE_SYSTEM\">TRACE_SYSTEM</a> <a class=\"id\" href=\"#irq\">irq</a>", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#_TRACE_IRQ_H\">_TRACE_IRQ_H</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#TRACE_HEADER_MULTI_READ\">TRACE_HEADER_MULTI_READ</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_TRACE_IRQ_H\">_TRACE_IRQ_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tracepoint\">tracepoint</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#sirq\">sirq</a>) { <a class=\"id\" href=\"#sirq\">sirq</a>##<a class=\"id\" href=\"#_SOFTIRQ\">_SOFTIRQ</a>, #<a class=\"id\" href=\"#sirq\">sirq</a> }", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#show_softirq_name\">show_softirq_name</a>(<a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__print_symbolic\">__print_symbolic</a>(<a class=\"id\" href=\"#val\">val</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#HI\">HI</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#TIMER\">TIMER</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#NET_TX\">NET_TX</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#NET_RX\">NET_RX</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#BLOCK\">BLOCK</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#BLOCK_IOPOLL\">BLOCK_IOPOLL</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#TASKLET\">TASKLET</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#SCHED\">SCHED</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#HRTIMER\">HRTIMER</a>),<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#softirq_name\">softirq_name</a>(<a class=\"id\" href=\"#RCU\">RCU</a>))", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * irq_handler_entry - called immediately before the irq action handler</span>", 
"<span class=\"comment\"> * @irq: irq number</span>", 
"<span class=\"comment\"> * @action: pointer to struct irqaction</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The struct irqaction pointed to by @action contains various</span>", 
"<span class=\"comment\"> * information about the handler, including the device name,</span>", 
"<span class=\"comment\"> * @action-&gt;name, and the device id, @action-&gt;dev_id. When used in</span>", 
"<span class=\"comment\"> * conjunction with the irq_handler_exit tracepoint, we can figure</span>", 
"<span class=\"comment\"> * out irq handler latencies.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#TRACE_EVENT\">TRACE_EVENT</a>(<a class=\"id\" href=\"#irq_handler_entry\">irq_handler_entry</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_PROTO\">TP_PROTO</a>(int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_ARGS\">TP_ARGS</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_STRUCT__entry\">TP_STRUCT__entry</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__field\">__field</a>(<span class=\"ts\"/>int,<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/><span class=\"ts\"/>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__string\">__string</a>(<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a>,<span class=\"ts\"/><a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>)", 
"<span class=\"ts\"/>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_fast_assign\">TP_fast_assign</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__assign_str\">__assign_str</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#action\">action</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_printk\">TP_printk</a>(\"irq=%d name=%s\", <a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#__get_str\">__get_str</a>(<a class=\"id\" href=\"#name\">name</a>))", 
");", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * irq_handler_exit - called immediately after the irq action handler returns</span>", 
"<span class=\"comment\"> * @irq: irq number</span>", 
"<span class=\"comment\"> * @action: pointer to struct irqaction</span>", 
"<span class=\"comment\"> * @ret: return value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If the @ret value is set to IRQ_HANDLED, then we know that the corresponding</span>", 
"<span class=\"comment\"> * @action-&gt;handler scuccessully handled this irq. Otherwise, the irq might be</span>", 
"<span class=\"comment\"> * a shared irq line, or the irq was not handled successfully. Can be used in</span>", 
"<span class=\"comment\"> * conjunction with the irq_handler_entry to understand irq handler latencies.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#TRACE_EVENT\">TRACE_EVENT</a>(<a class=\"id\" href=\"#irq_handler_exit\">irq_handler_exit</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_PROTO\">TP_PROTO</a>(int <a class=\"id\" href=\"#irq\">irq</a>, struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#action\">action</a>, int <a class=\"id\" href=\"#ret\">ret</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_ARGS\">TP_ARGS</a>(<a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#action\">action</a>, <a class=\"id\" href=\"#ret\">ret</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_STRUCT__entry\">TP_STRUCT__entry</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__field\">__field</a>(<span class=\"ts\"/>int,<span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__field\">__field</a>(<span class=\"ts\"/>int,<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a><span class=\"ts\"/>)", 
"<span class=\"ts\"/>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_fast_assign\">TP_fast_assign</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#irq\">irq</a><span class=\"ts\"/>= <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#ret\">ret</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_printk\">TP_printk</a>(\"irq=%d ret=%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#ret\">ret</a> ? \"handled\" : \"unhandled\")", 
");", 
"", 
"<a class=\"id\" href=\"#DECLARE_EVENT_CLASS\">DECLARE_EVENT_CLASS</a>(<a class=\"id\" href=\"#softirq\">softirq</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_PROTO\">TP_PROTO</a>(struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#vec\">vec</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_ARGS\">TP_ARGS</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#vec\">vec</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_STRUCT__entry\">TP_STRUCT__entry</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__field\">__field</a>(<span class=\"ts\"/>int,<span class=\"ts\"/><a class=\"id\" href=\"#vec\">vec</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>)", 
"<span class=\"ts\"/>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_fast_assign\">TP_fast_assign</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#vec\">vec</a> = (int)(<a class=\"id\" href=\"#h\">h</a> - <a class=\"id\" href=\"#vec\">vec</a>);", 
"<span class=\"ts\"/>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_printk\">TP_printk</a>(\"vec=%d [action=%s]\", <a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#show_softirq_name\">show_softirq_name</a>(<a class=\"id\" href=\"#__entry\">__entry</a>-><a class=\"id\" href=\"#vec\">vec</a>))", 
");", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * softirq_entry - called immediately before the softirq handler</span>", 
"<span class=\"comment\"> * @h: pointer to struct softirq_action</span>", 
"<span class=\"comment\"> * @vec: pointer to first struct softirq_action in softirq_vec array</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The @h parameter, contains a pointer to the struct softirq_action</span>", 
"<span class=\"comment\"> * which has a pointer to the action handler that is called. By subtracting</span>", 
"<span class=\"comment\"> * the @vec pointer from the @h pointer, we can determine the softirq</span>", 
"<span class=\"comment\"> * number. Also, when used in combination with the softirq_exit tracepoint</span>", 
"<span class=\"comment\"> * we can determine the softirq latency.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#DEFINE_EVENT\">DEFINE_EVENT</a>(<a class=\"id\" href=\"#softirq\">softirq</a>, <a class=\"id\" href=\"#softirq_entry\">softirq_entry</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_PROTO\">TP_PROTO</a>(struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#vec\">vec</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_ARGS\">TP_ARGS</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#vec\">vec</a>)", 
");", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * softirq_exit - called immediately after the softirq handler returns</span>", 
"<span class=\"comment\"> * @h: pointer to struct softirq_action</span>", 
"<span class=\"comment\"> * @vec: pointer to first struct softirq_action in softirq_vec array</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The @h parameter contains a pointer to the struct softirq_action</span>", 
"<span class=\"comment\"> * that has handled the softirq. By subtracting the @vec pointer from</span>", 
"<span class=\"comment\"> * the @h pointer, we can determine the softirq number. Also, when used in</span>", 
"<span class=\"comment\"> * combination with the softirq_entry tracepoint we can determine the softirq</span>", 
"<span class=\"comment\"> * latency.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#DEFINE_EVENT\">DEFINE_EVENT</a>(<a class=\"id\" href=\"#softirq\">softirq</a>, <a class=\"id\" href=\"#softirq_exit\">softirq_exit</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_PROTO\">TP_PROTO</a>(struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#softirq_action\">softirq_action</a> *<a class=\"id\" href=\"#vec\">vec</a>),", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TP_ARGS\">TP_ARGS</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#vec\">vec</a>)", 
");", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/*  _TRACE_IRQ_H */</span>", 
"", 
"<span class=\"comment\">/* This part must be outside protection */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#define_trace\">define_trace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
];
xr_frag_insert('l/22/11dd3fb0626c0bc6700a58ba25cd1d446f4411.xr', __xr_tmp);
