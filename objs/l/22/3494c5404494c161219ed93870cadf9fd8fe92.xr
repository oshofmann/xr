var __xr_tmp = [
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bi_destructor\">bi_destructor</a> = <a class=\"id\" href=\"#bio_fs_destructor\">bio_fs_destructor</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bio_clone\">__bio_clone</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_integrity\">bio_integrity</a>(<a class=\"id\" href=\"#bio\">bio</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#bio_integrity_clone\">bio_integrity_clone</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#fs_bio_set\">fs_bio_set</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#b\">b</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#b\">b</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_clone\">bio_clone</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bio_get_nr_vecs<span class=\"ts\"/><span class=\"ts\"/>- return approx number of vecs</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bdev:  I/O target</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return the approximate number of pages we can send to this target.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>There's no guarantee that you will be able to fit this number of pages</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>into a bio, it does not account for dynamic restrictions that vary</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on offset.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bio_get_nr_vecs\">bio_get_nr_vecs</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = ((<a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#q\">q</a>) << 9) + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_pages\">nr_pages</a> &gt; <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_get_nr_vecs\">bio_get_nr_vecs</a>);", 
"", 
"static int <a class=\"id\" href=\"#__bio_add_page\">__bio_add_page</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#page\">page</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  *<a class=\"id\" href=\"#page\">page</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>, unsigned int <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned short <a class=\"id\" href=\"#max_sectors\">max_sectors</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retried_segments\">retried_segments</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cloned bio must not modify vec list</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#bio_flagged\">bio_flagged</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#BIO_CLONED\">BIO_CLONED</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> + <a class=\"id\" href=\"#len\">len</a>) >> 9) &gt; <a class=\"id\" href=\"#max_sectors\">max_sectors</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For filesystems with a blocksize smaller than the pagesize</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we will often be called with the same page as last time and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a consecutive offset.  Optimize this special case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#prev\">prev</a> = &amp;<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>[<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> - 1];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a> == <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#offset\">offset</a> == <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> + <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#prev_bv_len\">prev_bv_len</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bvec_merge_data\">bvec_merge_data</a> <a class=\"id\" href=\"#bvm\">bvm</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* prev_bvec is already charged in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   bi_size, discharge it in order to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   simulate merging updated prev_bvec</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   as new bvec. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_sector\">bi_sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_size\">bi_size</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> - <a class=\"id\" href=\"#prev_bv_len\">prev_bv_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_rw\">bi_rw</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#bvm\">bvm</a>, <a class=\"id\" href=\"#prev\">prev</a>) &lt; <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> >= <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_max_vecs\">bi_max_vecs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we might lose a segment or two here, but rather that than</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make this too complex.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_phys_segments\">bi_phys_segments</a> >= <a class=\"id\" href=\"#queue_max_segments\">queue_max_segments</a>(<a class=\"id\" href=\"#q\">q</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retried_segments\">retried_segments</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retried_segments\">retried_segments</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blk_recount_segments\">blk_recount_segments</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * setup the new entry, we might clear it again later if we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cannot add the page</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a> = &amp;<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>[<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if queue has other restrictions (eg varying max sector size</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * depending on offset), it can specify a merge_bvec_fn in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queue to get further control</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bvec_merge_data\">bvec_merge_data</a> <a class=\"id\" href=\"#bvm\">bvm</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_sector\">bi_sector</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_sector\">bi_sector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_size\">bi_size</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#bi_rw\">bi_rw</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * merge_bvec_fn() returns number of bytes it can accept</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * at this offset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#merge_bvec_fn\">merge_bvec_fn</a>(<a class=\"id\" href=\"#q\">q</a>, &amp;<a class=\"id\" href=\"#bvm\">bvm</a>, <a class=\"id\" href=\"#bvec\">bvec</a>) &lt; <a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we may be able to merge these biovecs, force a recount */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a> && (<a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-1, <a class=\"id\" href=\"#bvec\">bvec</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a> &= ~(1 << <a class=\"id\" href=\"#BIO_SEG_VALID\">BIO_SEG_VALID</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_phys_segments\">bi_phys_segments</a>++;", 
" <a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_size\">bi_size</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bio_add_pc_page<span class=\"ts\"/>-<span class=\"ts\"/>attempt to add page to bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@q: the target queue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bio: destination bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@page: page to add</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@len: vec entry length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@offset: vec entry offset</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Attempt to add a page to the bio_vec maplist. This can fail for a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>number of reasons, such as the bio being full or target block</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device limitations. The target block device must allow bio's</span>", 
"<span class=\"comment\"> *      smaller than PAGE_SIZE, so it is always possible to add a single</span>", 
"<span class=\"comment\"> *      page to an empty bio. This should only be used by REQ_PC bios.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bio_add_pc_page\">bio_add_pc_page</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#len\">len</a>, unsigned int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__bio_add_page\">__bio_add_page</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#queue_max_hw_sectors\">queue_max_hw_sectors</a>(<a class=\"id\" href=\"#q\">q</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_add_pc_page\">bio_add_pc_page</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bio_add_page<span class=\"ts\"/>-<span class=\"ts\"/>attempt to add page to bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bio: destination bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@page: page to add</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@len: vec entry length</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@offset: vec entry offset</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Attempt to add a page to the bio_vec maplist. This can fail for a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>number of reasons, such as the bio being full or target block</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device limitations. The target block device must allow bio's</span>", 
"<span class=\"comment\"> *      smaller than PAGE_SIZE, so it is always possible to add a single</span>", 
"<span class=\"comment\"> *      page to an empty bio.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bio_add_page\">bio_add_page</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> unsigned int <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a> = <a class=\"id\" href=\"#bdev_get_queue\">bdev_get_queue</a>(<a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__bio_add_page\">__bio_add_page</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#queue_max_sectors\">queue_max_sectors</a>(<a class=\"id\" href=\"#q\">q</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_add_page\">bio_add_page</a>);", 
"", 
"struct <a class=\"id\" href=\"#bio_map_data\">bio_map_data</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#iovecs\">iovecs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *<a class=\"id\" href=\"#sgvecs\">sgvecs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_sgvecs\">nr_sgvecs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_our_pages\">is_our_pages</a>;", 
"};", 
"", 
"static void <a class=\"id\" href=\"#bio_set_map_data\">bio_set_map_data</a>(struct <a class=\"id\" href=\"#bio_map_data\">bio_map_data</a> *<a class=\"id\" href=\"#bmd\">bmd</a>, struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, int <a class=\"id\" href=\"#iov_count\">iov_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#is_our_pages\">is_our_pages</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#iovecs\">iovecs</a>, <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>, sizeof(struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a>) * <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_vcnt\">bi_vcnt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#sgvecs\">sgvecs</a>, <a class=\"id\" href=\"#iov\">iov</a>, sizeof(struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a>) * <a class=\"id\" href=\"#iov_count\">iov_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#nr_sgvecs\">nr_sgvecs</a> = <a class=\"id\" href=\"#iov_count\">iov_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#is_our_pages\">is_our_pages</a> = <a class=\"id\" href=\"#is_our_pages\">is_our_pages</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a> = <a class=\"id\" href=\"#bmd\">bmd</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#bio_free_map_data\">bio_free_map_data</a>(struct <a class=\"id\" href=\"#bio_map_data\">bio_map_data</a> *<a class=\"id\" href=\"#bmd\">bmd</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#iovecs\">iovecs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#sgvecs\">sgvecs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bmd\">bmd</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#bio_map_data\">bio_map_data</a> *<a class=\"id\" href=\"#bio_alloc_map_data\">bio_alloc_map_data</a>(int <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, int <a class=\"id\" href=\"#iov_count\">iov_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_map_data\">bio_map_data</a> *<a class=\"id\" href=\"#bmd\">bmd</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#bmd\">bmd</a>), <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bmd\">bmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#iovecs\">iovecs</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a>) * <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#iovecs\">iovecs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bmd\">bmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#sgvecs\">sgvecs</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a>) * <a class=\"id\" href=\"#iov_count\">iov_count</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#sgvecs\">sgvecs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bmd\">bmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#iovecs\">iovecs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bmd\">bmd</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__bio_copy_iov\">__bio_copy_iov</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>, struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#iovecs\">iovecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, int <a class=\"id\" href=\"#iov_count\">iov_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#to_user\">to_user</a>, int <a class=\"id\" href=\"#from_user\">from_user</a>, int <a class=\"id\" href=\"#do_free_page\">do_free_page</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0, <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#iov_idx\">iov_idx</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#iov_off\">iov_off</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__bio_for_each_segment\">__bio_for_each_segment</a>(<a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>, 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#bv_addr\">bv_addr</a> = <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bv_len\">bv_len</a> = <a class=\"id\" href=\"#iovecs\">iovecs</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#bv_len\">bv_len</a> && <a class=\"id\" href=\"#iov_idx\">iov_idx</a> &lt; <a class=\"id\" href=\"#iov_count\">iov_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#iov_addr\">iov_addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iov_idx\">iov_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a> - <a class=\"id\" href=\"#iov_off\">iov_off</a>, <a class=\"id\" href=\"#bv_len\">bv_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_addr\">iov_addr</a> = <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iov_idx\">iov_idx</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a> + <a class=\"id\" href=\"#iov_off\">iov_off</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#to_user\">to_user</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#iov_addr\">iov_addr</a>, <a class=\"id\" href=\"#bv_addr\">bv_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#from_user\">from_user</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#bv_addr\">bv_addr</a>, <a class=\"id\" href=\"#iov_addr\">iov_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#bytes\">bytes</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bv_len\">bv_len</a> -= <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bv_addr\">bv_addr</a> += <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_addr\">iov_addr</a> += <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_off\">iov_off</a> += <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#iov_idx\">iov_idx</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a> == <a class=\"id\" href=\"#iov_off\">iov_off</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_idx\">iov_idx</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov_off\">iov_off</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#do_free_page\">do_free_page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bio_uncopy_user<span class=\"ts\"/>-<span class=\"ts\"/>finish previously mapped bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bio: bio being terminated</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Free pages allocated from bio_copy_user() and write back data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to user space in case of a read.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#bio_uncopy_user\">bio_uncopy_user</a>(struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_map_data\">bio_map_data</a> *<a class=\"id\" href=\"#bmd\">bmd</a> = <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_private\">bi_private</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio_flagged\">bio_flagged</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#BIO_NULL_MAPPED\">BIO_NULL_MAPPED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__bio_copy_iov\">__bio_copy_iov</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#iovecs\">iovecs</a>, <a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#sgvecs\">sgvecs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#nr_sgvecs\">nr_sgvecs</a>, <a class=\"id\" href=\"#bio_data_dir\">bio_data_dir</a>(<a class=\"id\" href=\"#bio\">bio</a>) == <a class=\"id\" href=\"#READ\">READ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     0, <a class=\"id\" href=\"#bmd\">bmd</a>-><a class=\"id\" href=\"#is_our_pages\">is_our_pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_free_map_data\">bio_free_map_data</a>(<a class=\"id\" href=\"#bmd\">bmd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_uncopy_user\">bio_uncopy_user</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bio_copy_user_iov<span class=\"ts\"/>-<span class=\"ts\"/>copy user data to bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@q: destination block queue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@map_data: pointer to the rq_map_data holding pages (if necessary)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@iov:<span class=\"ts\"/>the iovec.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@iov_count: number of elements in the iovec</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@write_to_vm: bool indicating writing to pages or not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@gfp_mask: memory allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Prepares and returns a bio for indirect user io, bouncing data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to/from kernel pages as necessary. Must be paired with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>call bio_uncopy_user() on io completion.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio_copy_user_iov\">bio_copy_user_iov</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#rq_map_data\">rq_map_data</a> *<a class=\"id\" href=\"#map_data\">map_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, int <a class=\"id\" href=\"#iov_count\">iov_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#write_to_vm\">write_to_vm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_map_data\">bio_map_data</a> *<a class=\"id\" href=\"#bmd\">bmd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#bvec\">bvec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#map_data\">map_data</a> ? <a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#offset\">offset</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a> : 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#iov_count\">iov_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#uaddr\">uaddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#uaddr\">uaddr</a> = (unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#uaddr\">uaddr</a> + <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#uaddr\">uaddr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> += <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bmd\">bmd</a> = <a class=\"id\" href=\"#bio_alloc_map_data\">bio_alloc_map_data</a>(<a class=\"id\" href=\"#nr_pages\">nr_pages</a>, <a class=\"id\" href=\"#iov_count\">iov_count</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bmd\">bmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_kmalloc\">bio_kmalloc</a>(<a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_bmd\">out_bmd</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#write_to_vm\">write_to_vm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> |= <a class=\"id\" href=\"#REQ_WRITE\">REQ_WRITE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map_data\">map_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 1 << <a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#page_order\">page_order</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#offset\">offset</a> / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> -= <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bytes\">bytes</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map_data\">map_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#nr_entries\">nr_entries</a> * <a class=\"id\" href=\"#nr_pages\">nr_pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a> / <a class=\"id\" href=\"#nr_pages\">nr_pages</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> += (<a class=\"id\" href=\"#i\">i</a> % <a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#alloc_page\">alloc_page</a>(<a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#bounce_gfp\">bounce_gfp</a> | <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_add_pc_page\">bio_add_pc_page</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#bytes\">bytes</a>, <a class=\"id\" href=\"#offset\">offset</a>) &lt; <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * success</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#write_to_vm\">write_to_vm</a> && (!<a class=\"id\" href=\"#map_data\">map_data</a> || !<a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#null_mapped\">null_mapped</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#map_data\">map_data</a> && <a class=\"id\" href=\"#map_data\">map_data</a>-><a class=\"id\" href=\"#from_user\">from_user</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__bio_copy_iov\">__bio_copy_iov</a>(<a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_io_vec\">bi_io_vec</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#iov_count\">iov_count</a>, 0, 1, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_set_map_data\">bio_set_map_data</a>(<a class=\"id\" href=\"#bmd\">bmd</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#iov_count\">iov_count</a>, <a class=\"id\" href=\"#map_data\">map_data</a> ? 0 : 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bio\">bio</a>;", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#map_data\">map_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio_for_each_segment\">bio_for_each_segment</a>(<a class=\"id\" href=\"#bvec\">bvec</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__free_page\">__free_page</a>(<a class=\"id\" href=\"#bvec\">bvec</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<a class=\"id\" href=\"#out_bmd\">out_bmd</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_free_map_data\">bio_free_map_data</a>(<a class=\"id\" href=\"#bmd\">bmd</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bio_copy_user<span class=\"ts\"/>-<span class=\"ts\"/>copy user data to bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@q: destination block queue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@map_data: pointer to the rq_map_data holding pages (if necessary)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@uaddr: start of user address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@len: length in bytes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@write_to_vm: bool indicating writing to pages or not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@gfp_mask: memory allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Prepares and returns a bio for indirect user io, bouncing data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to/from kernel pages as necessary. Must be paired with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>call bio_uncopy_user() on io completion.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio_copy_user\">bio_copy_user</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>, struct <a class=\"id\" href=\"#rq_map_data\">rq_map_data</a> *<a class=\"id\" href=\"#map_data\">map_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#uaddr\">uaddr</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#write_to_vm\">write_to_vm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> <a class=\"id\" href=\"#iov\">iov</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>.<a class=\"id\" href=\"#iov_base\">iov_base</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#uaddr\">uaddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>.<a class=\"id\" href=\"#iov_len\">iov_len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bio_copy_user_iov\">bio_copy_user_iov</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#map_data\">map_data</a>, &amp;<a class=\"id\" href=\"#iov\">iov</a>, 1, <a class=\"id\" href=\"#write_to_vm\">write_to_vm</a>, <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#bio_copy_user\">bio_copy_user</a>);", 
"", 
"static struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#__bio_map_user_iov\">__bio_map_user_iov</a>(struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#q\">q</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sg_iovec\">sg_iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, int <a class=\"id\" href=\"#iov_count\">iov_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#write_to_vm\">write_to_vm</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#pages\">pages</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio\">bio</a> *<a class=\"id\" href=\"#bio\">bio</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cur_page\">cur_page</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#iov_count\">iov_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#uaddr\">uaddr</a> = (unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#uaddr\">uaddr</a> + <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#uaddr\">uaddr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_pages\">nr_pages</a> += <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * buffer must be aligned to at least hardsector size for now</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uaddr\">uaddr</a> &amp; <a class=\"id\" href=\"#queue_dma_alignment\">queue_dma_alignment</a>(<a class=\"id\" href=\"#q\">q</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#nr_pages\">nr_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a> = <a class=\"id\" href=\"#bio_kmalloc\">bio_kmalloc</a>(<a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bio\">bio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a> = <a class=\"id\" href=\"#kcalloc\">kcalloc</a>(<a class=\"id\" href=\"#nr_pages\">nr_pages</a>, sizeof(struct <a class=\"id\" href=\"#page\">page</a> *), <a class=\"id\" href=\"#gfp_mask\">gfp_mask</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pages\">pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#iov_count\">iov_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#uaddr\">uaddr</a> = (unsigned long)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#uaddr\">uaddr</a> + <a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#uaddr\">uaddr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const int <a class=\"id\" href=\"#local_nr_pages\">local_nr_pages</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const int <a class=\"id\" href=\"#page_limit\">page_limit</a> = <a class=\"id\" href=\"#cur_page\">cur_page</a> + <a class=\"id\" href=\"#local_nr_pages\">local_nr_pages</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_user_pages_fast\">get_user_pages_fast</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#local_nr_pages\">local_nr_pages</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_to_vm\">write_to_vm</a>, &amp;<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#cur_page\">cur_page</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#local_nr_pages\">local_nr_pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unmap\">out_unmap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#uaddr\">uaddr</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = <a class=\"id\" href=\"#cur_page\">cur_page</a>; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#page_limit\">page_limit</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bytes\">bytes</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes\">bytes</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * sorry...</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bio_add_pc_page\">bio_add_pc_page</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#bio\">bio</a>, <a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#j\">j</a>], <a class=\"id\" href=\"#bytes\">bytes</a>, <a class=\"id\" href=\"#offset\">offset</a>) &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#bytes\">bytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#bytes\">bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cur_page\">cur_page</a> = <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * release the pages we didn't map into the bio, if any</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#page_limit\">page_limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#j\">j</a>++]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pages\">pages</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set data direction, and check if mapped pages need bouncing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#write_to_vm\">write_to_vm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_rw\">bi_rw</a> |= <a class=\"id\" href=\"#REQ_WRITE\">REQ_WRITE</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_bdev\">bi_bdev</a> = <a class=\"id\" href=\"#bdev\">bdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio\">bio</a>-><a class=\"id\" href=\"#bi_flags\">bi_flags</a> |= (1 << <a class=\"id\" href=\"#BIO_USER_MAPPED\">BIO_USER_MAPPED</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bio\">bio</a>;", 
"", 
" <a class=\"id\" href=\"#out_unmap\">out_unmap</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_pages\">nr_pages</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if(!<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#pages\">pages</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bio_put\">bio_put</a>(<a class=\"id\" href=\"#bio\">bio</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bio_map_user<span class=\"ts\"/>-<span class=\"ts\"/>map user address into bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@q: the struct request_queue for the bio</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bdev: destination block device</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@uaddr: start of user address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@len: length in bytes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@write_to_vm: bool indicating writing to pages or not</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@gfp_mask: memory allocation flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Map the user space address into a bio suitable for io to a block</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device. Returns an error pointer in case of error.</span>", 
];
xr_frag_insert('l/22/3494c5404494c161219ed93870cadf9fd8fe92.xr', __xr_tmp);
