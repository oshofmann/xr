var __xr_tmp = [
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#nice\">nice</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Setpriority might change our priority at the same moment.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We don't have to worry. Conceptually one call occurs first</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and we have a single winner.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#increment\">increment</a> &lt; -40)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#increment\">increment</a> = -40;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#increment\">increment</a> &gt; 40)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#increment\">increment</a> = 40;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nice\">nice</a> = <a class=\"id\" href=\"#TASK_NICE\">TASK_NICE</a>(<a class=\"id\" href=\"#current\">current</a>) + <a class=\"id\" href=\"#increment\">increment</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nice\">nice</a> &lt; -20)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nice\">nice</a> = -20;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nice\">nice</a> &gt; 19)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nice\">nice</a> = 19;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#increment\">increment</a> &lt; 0 && !<a class=\"id\" href=\"#can_nice\">can_nice</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#nice\">nice</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#security_task_setnice\">security_task_setnice</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#nice\">nice</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_user_nice\">set_user_nice</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#nice\">nice</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * task_prio - return the priority value of a given task.</span>", 
"<span class=\"comment\"> * @p: the task in question.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the priority value as seen by users in /proc.</span>", 
"<span class=\"comment\"> * RT tasks are offset by -200. Normal tasks are centered</span>", 
"<span class=\"comment\"> * around 0, value goes from -16 to +15.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#task_prio\">task_prio</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prio\">prio</a> - <a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * task_nice - return the nice value of a given task.</span>", 
"<span class=\"comment\"> * @p: the task in question.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#task_nice\">task_nice</a>(const struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#TASK_NICE\">TASK_NICE</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#task_nice\">task_nice</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * idle_cpu - is a given cpu idle currently?</span>", 
"<span class=\"comment\"> * @cpu: the processor in question.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#idle_cpu\">idle_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_curr\">cpu_curr</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) == <a class=\"id\" href=\"#cpu_rq\">cpu_rq</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#idle\">idle</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * idle_task - return the idle task for a given cpu.</span>", 
"<span class=\"comment\"> * @cpu: the processor in question.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#idle_task\">idle_task</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_rq\">cpu_rq</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#idle\">idle</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * find_process_by_pid - find a process with a matching PID value.</span>", 
"<span class=\"comment\"> * @pid: the pid in question.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#find_process_by_pid\">find_process_by_pid</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pid\">pid</a> ? <a class=\"id\" href=\"#find_task_by_vpid\">find_task_by_vpid</a>(<a class=\"id\" href=\"#pid\">pid</a>) : <a class=\"id\" href=\"#current\">current</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Actually do priority change: must hold rq lock. */</span>", 
"static void", 
"<a class=\"id\" href=\"#__setscheduler\">__setscheduler</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#policy\">policy</a>, int <a class=\"id\" href=\"#prio\">prio</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#on_rq\">on_rq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#rt_priority\">rt_priority</a> = <a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#normal_prio\">normal_prio</a> = <a class=\"id\" href=\"#normal_prio\">normal_prio</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* we are holding p-&gt;pi_lock already */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prio\">prio</a> = <a class=\"id\" href=\"#rt_mutex_getprio\">rt_mutex_getprio</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_prio\">rt_prio</a>(<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prio\">prio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_class\">sched_class</a> = &amp;<a class=\"id\" href=\"#rt_sched_class\">rt_sched_class</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_class\">sched_class</a> = &amp;<a class=\"id\" href=\"#fair_sched_class\">fair_sched_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_load_weight\">set_load_weight</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * check the target process has a UID that matches the current process's</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#check_same_owner\">check_same_owner</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>(), *<a class=\"id\" href=\"#pcred\">pcred</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#match\">match</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcred\">pcred</a> = <a class=\"id\" href=\"#__task_cred\">__task_cred</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#match\">match</a> = (<a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a> == <a class=\"id\" href=\"#pcred\">pcred</a>-><a class=\"id\" href=\"#euid\">euid</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a> == <a class=\"id\" href=\"#pcred\">pcred</a>-><a class=\"id\" href=\"#uid\">uid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#match\">match</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__sched_setscheduler\">__sched_setscheduler</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_param\">sched_param</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#user\">user</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>, <a class=\"id\" href=\"#oldprio\">oldprio</a>, <a class=\"id\" href=\"#oldpolicy\">oldpolicy</a> = -1, <a class=\"id\" href=\"#on_rq\">on_rq</a>, <a class=\"id\" href=\"#running\">running</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#sched_class\">sched_class</a> *<a class=\"id\" href=\"#prev_class\">prev_class</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reset_on_fork\">reset_on_fork</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* may grab non-irq protected spin_locks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#in_interrupt\">in_interrupt</a>());", 
"<a class=\"id\" href=\"#recheck\">recheck</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* double check policy once rq lock held */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_on_fork\">reset_on_fork</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_reset_on_fork\">sched_reset_on_fork</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#oldpolicy\">oldpolicy</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policy\">policy</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_on_fork\">reset_on_fork</a> = !!(<a class=\"id\" href=\"#policy\">policy</a> &amp; <a class=\"id\" href=\"#SCHED_RESET_ON_FORK\">SCHED_RESET_ON_FORK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> &= ~<a class=\"id\" href=\"#SCHED_RESET_ON_FORK\">SCHED_RESET_ON_FORK</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a> != <a class=\"id\" href=\"#SCHED_FIFO\">SCHED_FIFO</a> && <a class=\"id\" href=\"#policy\">policy</a> != <a class=\"id\" href=\"#SCHED_RR\">SCHED_RR</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> != <a class=\"id\" href=\"#SCHED_NORMAL\">SCHED_NORMAL</a> && <a class=\"id\" href=\"#policy\">policy</a> != <a class=\"id\" href=\"#SCHED_BATCH\">SCHED_BATCH</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> != <a class=\"id\" href=\"#SCHED_IDLE\">SCHED_IDLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Valid priorities for SCHED_FIFO and SCHED_RR are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1..MAX_USER_RT_PRIO-1, valid priority for SCHED_NORMAL,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * SCHED_BATCH and SCHED_IDLE is 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#sched_priority\">sched_priority</a> &lt; 0 ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#mm\">mm</a> && <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#sched_priority\">sched_priority</a> &gt; <a class=\"id\" href=\"#MAX_USER_RT_PRIO\">MAX_USER_RT_PRIO</a>-1) ||", 
"<span class=\"ts\"/>    (!<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#mm\">mm</a> && <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#sched_priority\">sched_priority</a> &gt; <a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a>-1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_policy\">rt_policy</a>(<a class=\"id\" href=\"#policy\">policy</a>) != (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#sched_priority\">sched_priority</a> != 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow unprivileged RT tasks to decrease priority:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#user\">user</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_NICE\">CAP_SYS_NICE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_policy\">rt_policy</a>(<a class=\"id\" href=\"#policy\">policy</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rlim_rtprio\">rlim_rtprio</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_rlimit\">task_rlimit</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#RLIMIT_RTPRIO\">RLIMIT_RTPRIO</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't set/change the rt policy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#policy\">policy</a> != <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policy\">policy</a> && !<a class=\"id\" href=\"#rlim_rtprio\">rlim_rtprio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't increase priority */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#sched_priority\">sched_priority</a> &gt; <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#rt_priority\">rt_priority</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#sched_priority\">sched_priority</a> &gt; <a class=\"id\" href=\"#rlim_rtprio\">rlim_rtprio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Like positive nice levels, dont allow tasks to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * move out of SCHED_IDLE either:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policy\">policy</a> == <a class=\"id\" href=\"#SCHED_IDLE\">SCHED_IDLE</a> && <a class=\"id\" href=\"#policy\">policy</a> != <a class=\"id\" href=\"#SCHED_IDLE\">SCHED_IDLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can't change other user's priorities */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_same_owner\">check_same_owner</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Normal users shall not reset the sched_reset_on_fork flag */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_reset_on_fork\">sched_reset_on_fork</a> && !<a class=\"id\" href=\"#reset_on_fork\">reset_on_fork</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#user\">user</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#security_task_setscheduler\">security_task_setscheduler</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure no PI-waiters arrive (or leave) while we are</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changing the priority of the task:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pi_lock\">pi_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To be able to change p-&gt;policy safely, the apropriate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * runqueue lock must be held.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#__task_rq_lock\">__task_rq_lock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RT_GROUP_SCHED\">CONFIG_RT_GROUP_SCHED</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#user\">user</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Do not allow realtime tasks into groups that have no runtime</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * assigned.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_bandwidth_enabled\">rt_bandwidth_enabled</a>() && <a class=\"id\" href=\"#rt_policy\">rt_policy</a>(<a class=\"id\" href=\"#policy\">policy</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_group\">task_group</a>(<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a>.<a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__task_rq_unlock\">__task_rq_unlock</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pi_lock\">pi_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* recheck policy now with rq lock held */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#oldpolicy\">oldpolicy</a> != -1 && <a class=\"id\" href=\"#oldpolicy\">oldpolicy</a> != <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#policy\">policy</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#oldpolicy\">oldpolicy</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__task_rq_unlock\">__task_rq_unlock</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pi_lock\">pi_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#recheck\">recheck</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#on_rq\">on_rq</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#on_rq\">on_rq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#running\">running</a> = <a class=\"id\" href=\"#task_current\">task_current</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#on_rq\">on_rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#deactivate_task\">deactivate_task</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#p\">p</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#running\">running</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_class\">sched_class</a>-><a class=\"id\" href=\"#put_prev_task\">put_prev_task</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_reset_on_fork\">sched_reset_on_fork</a> = <a class=\"id\" href=\"#reset_on_fork\">reset_on_fork</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldprio\">oldprio</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev_class\">prev_class</a> = <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_class\">sched_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__setscheduler\">__setscheduler</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#sched_priority\">sched_priority</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#running\">running</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#sched_class\">sched_class</a>-><a class=\"id\" href=\"#set_curr_task\">set_curr_task</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#on_rq\">on_rq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#activate_task\">activate_task</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#p\">p</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#check_class_changed\">check_class_changed</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#prev_class\">prev_class</a>, <a class=\"id\" href=\"#oldprio\">oldprio</a>, <a class=\"id\" href=\"#running\">running</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__task_rq_unlock\">__task_rq_unlock</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pi_lock\">pi_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_mutex_adjust_pi\">rt_mutex_adjust_pi</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sched_setscheduler - change the scheduling policy and/or RT priority of a thread.</span>", 
"<span class=\"comment\"> * @p: the task in question.</span>", 
"<span class=\"comment\"> * @policy: new policy.</span>", 
"<span class=\"comment\"> * @param: structure containing the new RT priority.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE that the task may be already dead.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sched_setscheduler\">sched_setscheduler</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#sched_param\">sched_param</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__sched_setscheduler\">__sched_setscheduler</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#true\">true</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#sched_setscheduler\">sched_setscheduler</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sched_setscheduler_nocheck - change the scheduling policy and/or RT priority of a thread from kernelspace.</span>", 
"<span class=\"comment\"> * @p: the task in question.</span>", 
"<span class=\"comment\"> * @policy: new policy.</span>", 
"<span class=\"comment\"> * @param: structure containing the new RT priority.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Just like sched_setscheduler, only don't bother checking if the</span>", 
"<span class=\"comment\"> * current context has permission.  For example, this is needed in</span>", 
"<span class=\"comment\"> * stop_machine(): we create temporary high priority worker threads,</span>", 
"<span class=\"comment\"> * but our caller might not have that capability.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sched_setscheduler_nocheck\">sched_setscheduler_nocheck</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#sched_param\">sched_param</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__sched_setscheduler\">__sched_setscheduler</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#do_sched_setscheduler\">do_sched_setscheduler</a>(<a class=\"id\" href=\"#pid_t\">pid_t</a> <a class=\"id\" href=\"#pid\">pid</a>, int <a class=\"id\" href=\"#policy\">policy</a>, struct <a class=\"id\" href=\"#sched_param\">sched_param</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_param\">sched_param</a> <a class=\"id\" href=\"#lparam\">lparam</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#param\">param</a> || <a class=\"id\" href=\"#pid\">pid</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#lparam\">lparam</a>, <a class=\"id\" href=\"#param\">param</a>, sizeof(struct <a class=\"id\" href=\"#sched_param\">sched_param</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#find_process_by_pid\">find_process_by_pid</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#sched_setscheduler\">sched_setscheduler</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#policy\">policy</a>, &amp;<a class=\"id\" href=\"#lparam\">lparam</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sys_sched_setscheduler - set/change the scheduler policy and RT priority</span>", 
"<span class=\"comment\"> * @pid: the pid in question.</span>", 
"<span class=\"comment\"> * @policy: new policy.</span>", 
"<span class=\"comment\"> * @param: structure containing the new RT priority.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#sched_setscheduler\">sched_setscheduler</a>, <a class=\"id\" href=\"#pid_t\">pid_t</a>, <a class=\"id\" href=\"#pid\">pid</a>, int, <a class=\"id\" href=\"#policy\">policy</a>,", 
];
xr_frag_insert('l/22/60c24e3bb2f70c698bffd63a60eed49373f3c5.xr', __xr_tmp);
