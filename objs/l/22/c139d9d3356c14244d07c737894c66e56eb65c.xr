var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * blk-integrity.c - Block layer data integrity extensions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2007, 2008 Oracle Corporation</span>", 
"<span class=\"comment\"> * Written by: Martin K. Petersen &lt;martin.petersen@oracle.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License version</span>", 
"<span class=\"comment\"> * 2 as published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> * General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; see the file COPYING.  If not, write to</span>", 
"<span class=\"comment\"> * the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139,</span>", 
"<span class=\"comment\"> * USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mempool\">mempool</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bio\">bio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#scatterlist\">scatterlist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"blk.h\"", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#integrity_cachep\">integrity_cachep</a>;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_rq_count_integrity_sg - Count number of integrity scatterlist elements</span>", 
"<span class=\"comment\"> * @rq:<span class=\"ts\"/><span class=\"ts\"/>request with integrity metadata attached</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Returns the number of elements required in a</span>", 
"<span class=\"comment\"> * scatterlist corresponding to the integrity metadata in a request.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_rq_count_integrity_sg\">blk_rq_count_integrity_sg</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#iv\">iv</a>, *<a class=\"id\" href=\"#ivprv\">ivprv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#req_iterator\">req_iterator</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#segments\">segments</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ivprv\">ivprv</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segments\">segments</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq_for_each_integrity_segment\">rq_for_each_integrity_segment</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#iter\">iter</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ivprv\">ivprv</a> || !<a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#ivprv\">ivprv</a>, <a class=\"id\" href=\"#iv\">iv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segments\">segments</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ivprv\">ivprv</a> = <a class=\"id\" href=\"#iv\">iv</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#segments\">segments</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_rq_count_integrity_sg\">blk_rq_count_integrity_sg</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_rq_map_integrity_sg - Map integrity metadata into a scatterlist</span>", 
"<span class=\"comment\"> * @rq:<span class=\"ts\"/><span class=\"ts\"/>request with integrity metadata attached</span>", 
"<span class=\"comment\"> * @sglist:<span class=\"ts\"/>target scatterlist</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Map the integrity vectors in request into a</span>", 
"<span class=\"comment\"> * scatterlist.  The scatterlist must be big enough to hold all</span>", 
"<span class=\"comment\"> * elements.  I.e. sized using blk_rq_count_integrity_sg().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_rq_map_integrity_sg\">blk_rq_map_integrity_sg</a>(struct <a class=\"id\" href=\"#request\">request</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sglist\">sglist</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#bio_vec\">bio_vec</a> *<a class=\"id\" href=\"#iv\">iv</a>, *<a class=\"id\" href=\"#ivprv\">ivprv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#req_iterator\">req_iterator</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scatterlist\">scatterlist</a> *<a class=\"id\" href=\"#sg\">sg</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#segments\">segments</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ivprv\">ivprv</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segments\">segments</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rq_for_each_integrity_segment\">rq_for_each_integrity_segment</a>(<a class=\"id\" href=\"#iv\">iv</a>, <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#iter\">iter</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ivprv\">ivprv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#BIOVEC_PHYS_MERGEABLE\">BIOVEC_PHYS_MERGEABLE</a>(<a class=\"id\" href=\"#ivprv\">ivprv</a>, <a class=\"id\" href=\"#iv\">iv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#new_segment\">new_segment</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#length\">length</a> += <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<a class=\"id\" href=\"#new_segment\">new_segment</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sg\">sg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#sglist\">sglist</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a>-><a class=\"id\" href=\"#page_link\">page_link</a> &= ~0x02;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg\">sg</a> = <a class=\"id\" href=\"#sg_next\">sg_next</a>(<a class=\"id\" href=\"#sg\">sg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_set_page\">sg_set_page</a>(<a class=\"id\" href=\"#sg\">sg</a>, <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_page\">bv_page</a>, <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_len\">bv_len</a>, <a class=\"id\" href=\"#iv\">iv</a>-><a class=\"id\" href=\"#bv_offset\">bv_offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segments\">segments</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ivprv\">ivprv</a> = <a class=\"id\" href=\"#iv\">iv</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sg\">sg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sg_mark_end\">sg_mark_end</a>(<a class=\"id\" href=\"#sg\">sg</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#segments\">segments</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_rq_map_integrity_sg\">blk_rq_map_integrity_sg</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_integrity_compare - Compare integrity profile of two disks</span>", 
"<span class=\"comment\"> * @gd1:<span class=\"ts\"/>Disk to compare</span>", 
"<span class=\"comment\"> * @gd2:<span class=\"ts\"/>Disk to compare</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Meta-devices like DM and MD need to verify that all</span>", 
"<span class=\"comment\"> * sub-devices use the same integrity format before advertising to</span>", 
"<span class=\"comment\"> * upper layers that they can send/receive integrity metadata.  This</span>", 
"<span class=\"comment\"> * function can be used to check whether two gendisk devices have</span>", 
"<span class=\"comment\"> * compatible integrity formats.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_integrity_compare\">blk_integrity_compare</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#gd1\">gd1</a>, struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#gd2\">gd2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#b1\">b1</a> = <a class=\"id\" href=\"#gd1\">gd1</a>-><a class=\"id\" href=\"#integrity\">integrity</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#b2\">b2</a> = <a class=\"id\" href=\"#gd2\">gd2</a>-><a class=\"id\" href=\"#integrity\">integrity</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#b1\">b1</a> && !<a class=\"id\" href=\"#b2\">b2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#b1\">b1</a> || !<a class=\"id\" href=\"#b2\">b2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> != <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: %s/%s sector sz %u != %u\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gd1\">gd1</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#gd2\">gd2</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>, <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a> != <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: %s/%s tuple sz %u != %u\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gd1\">gd1</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#gd2\">gd2</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>, <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a> && <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a> && (<a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a> != <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: %s/%s tag sz %u != %u\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gd1\">gd1</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#gd2\">gd2</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a>, <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: %s/%s type %s != %s\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#gd1\">gd1</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, <a class=\"id\" href=\"#gd2\">gd2</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#b1\">b1</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_integrity_compare\">blk_integrity_compare</a>);", 
"", 
"struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#attribute\">attribute</a> <a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#show\">show</a>)(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *, char *);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> (*<a class=\"id\" href=\"#store\">store</a>)(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *, const char *, <a class=\"id\" href=\"#size_t\">size_t</a>);", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_attr_show\">integrity_attr_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   char *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a>, <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#attr\">attr</a>, struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#show\">show</a>(<a class=\"id\" href=\"#bi\">bi</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_attr_store\">integrity_attr_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, const char *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a>, <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a> *<a class=\"id\" href=\"#entry\">entry</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#attr\">attr</a>, struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#store\">store</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#store\">store</a>(<a class=\"id\" href=\"#bi\">bi</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_format_show\">integrity_format_show</a>(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>, char *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bi\">bi</a> != <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#name\">name</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#page\">page</a>, \"%s\\n\", <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#page\">page</a>, \"none\\n\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_tag_size_show\">integrity_tag_size_show</a>(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>, char *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bi\">bi</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#page\">page</a>, \"%u\\n\", <a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#page\">page</a>, \"0\\n\");", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_read_store\">integrity_read_store</a>(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a> = (char *) <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#p\">p</a>, 10);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#INTEGRITY_FLAG_READ\">INTEGRITY_FLAG_READ</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#INTEGRITY_FLAG_READ\">INTEGRITY_FLAG_READ</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_read_show\">integrity_read_show</a>(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>, char *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#page\">page</a>, \"%d\\n\", (<a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#INTEGRITY_FLAG_READ\">INTEGRITY_FLAG_READ</a>) != 0);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_write_store\">integrity_write_store</a>(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a> = (char *) <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#p\">p</a>, 10);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#INTEGRITY_FLAG_WRITE\">INTEGRITY_FLAG_WRITE</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#INTEGRITY_FLAG_WRITE\">INTEGRITY_FLAG_WRITE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#integrity_write_show\">integrity_write_show</a>(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>, char *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#page\">page</a>, \"%d\\n\", (<a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#INTEGRITY_FLAG_WRITE\">INTEGRITY_FLAG_WRITE</a>) != 0);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a> <a class=\"id\" href=\"#integrity_format_entry\">integrity_format_entry</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = { .<a class=\"id\" href=\"#name\">name</a> = \"format\", .<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a> = <a class=\"id\" href=\"#integrity_format_show\">integrity_format_show</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a> <a class=\"id\" href=\"#integrity_tag_size_entry\">integrity_tag_size_entry</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = { .<a class=\"id\" href=\"#name\">name</a> = \"tag_size\", .<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a> = <a class=\"id\" href=\"#integrity_tag_size_show\">integrity_tag_size_show</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a> <a class=\"id\" href=\"#integrity_read_entry\">integrity_read_entry</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = { .<a class=\"id\" href=\"#name\">name</a> = \"read_verify\", .<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a> },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a> = <a class=\"id\" href=\"#integrity_read_show\">integrity_read_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a> = <a class=\"id\" href=\"#integrity_read_store\">integrity_read_store</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#integrity_sysfs_entry\">integrity_sysfs_entry</a> <a class=\"id\" href=\"#integrity_write_entry\">integrity_write_entry</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = { .<a class=\"id\" href=\"#name\">name</a> = \"write_generate\", .<a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a> },", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a> = <a class=\"id\" href=\"#integrity_write_show\">integrity_write_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a> = <a class=\"id\" href=\"#integrity_write_store\">integrity_write_store</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#integrity_attrs\">integrity_attrs</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#integrity_format_entry\">integrity_format_entry</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#integrity_tag_size_entry\">integrity_tag_size_entry</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#integrity_read_entry\">integrity_read_entry</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#integrity_write_entry\">integrity_write_entry</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a> <a class=\"id\" href=\"#integrity_ops\">integrity_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#integrity_attr_show\">integrity_attr_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#store\">store</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#integrity_attr_store\">integrity_attr_store</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#blk_dev_integrity_init\">blk_dev_integrity_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#integrity_cachep\">integrity_cachep</a> = <a class=\"id\" href=\"#kmem_cache_create\">kmem_cache_create</a>(\"blkdev_integrity\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     0, <a class=\"id\" href=\"#SLAB_PANIC\">SLAB_PANIC</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#blk_dev_integrity_init\">blk_dev_integrity_init</a>);", 
"", 
"static void <a class=\"id\" href=\"#blk_integrity_release\">blk_integrity_release</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a>, <a class=\"id\" href=\"#kobj\">kobj</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#integrity_cachep\">integrity_cachep</a>, <a class=\"id\" href=\"#bi\">bi</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kobj_type\">kobj_type</a> <a class=\"id\" href=\"#integrity_ktype\">integrity_ktype</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#default_attrs\">default_attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#integrity_attrs\">integrity_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#sysfs_ops\">sysfs_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#integrity_ops\">integrity_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#blk_integrity_release\">blk_integrity_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_integrity_register - Register a gendisk as being integrity-capable</span>", 
"<span class=\"comment\"> * @disk:<span class=\"ts\"/>struct gendisk pointer to make integrity-aware</span>", 
"<span class=\"comment\"> * @template:<span class=\"ts\"/>optional integrity profile to register</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: When a device needs to advertise itself as being able</span>", 
"<span class=\"comment\"> * to send/receive integrity metadata it must use this function to</span>", 
"<span class=\"comment\"> * register the capability with the block layer.  The template is a</span>", 
"<span class=\"comment\"> * blk_integrity struct with values appropriate for the underlying</span>", 
"<span class=\"comment\"> * hardware.  If template is NULL the new profile is allocated but</span>", 
"<span class=\"comment\"> * not filled out. See Documentation/block/data-integrity.txt.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#blk_integrity_register\">blk_integrity_register</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#template\">template</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#disk\">disk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#integrity_cachep\">integrity_cachep</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bi\">bi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kobject_init_and_add\">kobject_init_and_add</a>(&amp;<a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#integrity_ktype\">integrity_ktype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#disk\">disk</a>)-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%s\", \"integrity\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#integrity_cachep\">integrity_cachep</a>, <a class=\"id\" href=\"#bi\">bi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_ADD\">KOBJ_ADD</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#INTEGRITY_FLAG_READ\">INTEGRITY_FLAG_READ</a> | <a class=\"id\" href=\"#INTEGRITY_FLAG_WRITE\">INTEGRITY_FLAG_WRITE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#sector_size\">sector_size</a> = <a class=\"id\" href=\"#queue_logical_block_size\">queue_logical_block_size</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a> = <a class=\"id\" href=\"#bi\">bi</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Use the provided profile as template */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#template\">template</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#template\">template</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#generate_fn\">generate_fn</a> = <a class=\"id\" href=\"#template\">template</a>-><a class=\"id\" href=\"#generate_fn\">generate_fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#verify_fn\">verify_fn</a> = <a class=\"id\" href=\"#template\">template</a>-><a class=\"id\" href=\"#verify_fn\">verify_fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a> = <a class=\"id\" href=\"#template\">template</a>-><a class=\"id\" href=\"#tuple_size\">tuple_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#set_tag_fn\">set_tag_fn</a> = <a class=\"id\" href=\"#template\">template</a>-><a class=\"id\" href=\"#set_tag_fn\">set_tag_fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#get_tag_fn\">get_tag_fn</a> = <a class=\"id\" href=\"#template\">template</a>-><a class=\"id\" href=\"#get_tag_fn\">get_tag_fn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a> = <a class=\"id\" href=\"#template\">template</a>-><a class=\"id\" href=\"#tag_size\">tag_size</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#name\">name</a> = \"unsupported\";", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_integrity_register\">blk_integrity_register</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * blk_integrity_unregister - Remove block integrity profile</span>", 
"<span class=\"comment\"> * @disk:<span class=\"ts\"/>disk whose integrity profile to deallocate</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: This function frees all memory used by the block</span>", 
"<span class=\"comment\"> * integrity profile.  To be called at device teardown.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#blk_integrity_unregister\">blk_integrity_unregister</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#bi\">bi</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#disk\">disk</a> || !<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bi\">bi</a> = <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_REMOVE\">KOBJ_REMOVE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_del\">kobject_del</a>(&amp;<a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_put\">kobject_put</a>(&amp;<a class=\"id\" href=\"#bi\">bi</a>-><a class=\"id\" href=\"#kobj\">kobj</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#integrity_cachep\">integrity_cachep</a>, <a class=\"id\" href=\"#bi\">bi</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#integrity\">integrity</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#blk_integrity_unregister\">blk_integrity_unregister</a>);", 
];
xr_frag_insert('l/22/c139d9d3356c14244d07c737894c66e56eb65c.xr', __xr_tmp);
