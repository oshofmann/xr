var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_FB_DRAW_H\">_FB_DRAW_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_FB_DRAW_H\">_FB_DRAW_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fb\">fb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"    <span class=\"comment\">/*</span>", 
"<span class=\"comment\">     *  Compose two values, using a bitmask as decision value</span>", 
"<span class=\"comment\">     *  This is equivalent to (a &amp; mask) | (b &amp; ~mask)</span>", 
"<span class=\"comment\">     */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#comp\">comp</a>(unsigned long <a class=\"id\" href=\"#a\">a</a>, unsigned long <a class=\"id\" href=\"#b\">b</a>, unsigned long <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"    return ((<a class=\"id\" href=\"#a\">a</a> ^ <a class=\"id\" href=\"#b\">b</a>) &amp; <a class=\"id\" href=\"#mask\">mask</a>) ^ <a class=\"id\" href=\"#b\">b</a>;", 
"}", 
"", 
"    <span class=\"comment\">/*</span>", 
"<span class=\"comment\">     *  Create a pattern with the given pixel's color</span>", 
"<span class=\"comment\">     */</span>", 
"", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 64", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#pixel_to_pat\">pixel_to_pat</a>( <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bpp\">bpp</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pixel\">pixel</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#bpp\">bpp</a>) {", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0xfffffffffffffffful*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x5555555555555555ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x1111111111111111ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x0101010101010101ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 12:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x1001001001001001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x0001000100010001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 24:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x0001000001000001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 32:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x0000000100000001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"pixel_to_pat(): unsupported pixelformat\\n\");", 
"    }", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long", 
"<a class=\"id\" href=\"#pixel_to_pat\">pixel_to_pat</a>( <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bpp\">bpp</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pixel\">pixel</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#bpp\">bpp</a>) {", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0xfffffffful*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 2:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x55555555ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 4:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x11111111ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 8:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x01010101ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 12:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x01001001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 16:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x00010001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 24:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x01000001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>case 32:", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0x00000001ul*<a class=\"id\" href=\"#pixel\">pixel</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"pixel_to_pat(): unsupported pixelformat\\n\");", 
"    }", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FB_CFB_REV_PIXELS_IN_BYTE\">CONFIG_FB_CFB_REV_PIXELS_IN_BYTE</a>", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REV_PIXELS_MASK1\">REV_PIXELS_MASK1</a> 0x5555555555555555ul", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REV_PIXELS_MASK2\">REV_PIXELS_MASK2</a> 0x3333333333333333ul", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REV_PIXELS_MASK4\">REV_PIXELS_MASK4</a> 0x0f0f0f0f0f0f0f0ful", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REV_PIXELS_MASK1\">REV_PIXELS_MASK1</a> 0x55555555ul", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REV_PIXELS_MASK2\">REV_PIXELS_MASK2</a> 0x33333333ul", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REV_PIXELS_MASK4\">REV_PIXELS_MASK4</a> 0x0f0f0f0ful", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#fb_rev_pixels_in_long\">fb_rev_pixels_in_long</a>(unsigned long <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bswapmask\">bswapmask</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bswapmask\">bswapmask</a> &amp; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#comp\">comp</a>(<a class=\"id\" href=\"#val\">val</a> >> 1, <a class=\"id\" href=\"#val\">val</a> << 1, <a class=\"id\" href=\"#REV_PIXELS_MASK1\">REV_PIXELS_MASK1</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bswapmask\">bswapmask</a> &amp; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#comp\">comp</a>(<a class=\"id\" href=\"#val\">val</a> >> 2, <a class=\"id\" href=\"#val\">val</a> << 2, <a class=\"id\" href=\"#REV_PIXELS_MASK2\">REV_PIXELS_MASK2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bswapmask\">bswapmask</a> &amp; 3)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#comp\">comp</a>(<a class=\"id\" href=\"#val\">val</a> >> 4, <a class=\"id\" href=\"#val\">val</a> << 4, <a class=\"id\" href=\"#REV_PIXELS_MASK4\">REV_PIXELS_MASK4</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#val\">val</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fb_shifted_pixels_mask_u32\">fb_shifted_pixels_mask_u32</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bswapmask\">bswapmask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bswapmask\">bswapmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, ~(<a class=\"id\" href=\"#u32\">u32</a>)0, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = 0xff << <a class=\"id\" href=\"#FB_LEFT_POS\">FB_LEFT_POS</a>(<a class=\"id\" href=\"#p\">p</a>, 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FB_SHIFT_LOW\">FB_SHIFT_LOW</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#index\">index</a> &amp; (<a class=\"id\" href=\"#bswapmask\">bswapmask</a>)) &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#index\">index</a> &amp; ~(<a class=\"id\" href=\"#bswapmask\">bswapmask</a>));", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__i386__\">__i386__</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__x86_64__\">__x86_64__</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Shift argument is limited to 0 - 31 on x86 based CPU's */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#index\">index</a> + <a class=\"id\" href=\"#bswapmask\">bswapmask</a> &lt; 32)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, ~(<a class=\"id\" href=\"#u32\">u32</a>)0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#index\">index</a> + <a class=\"id\" href=\"#bswapmask\">bswapmask</a>) &amp; ~(<a class=\"id\" href=\"#bswapmask\">bswapmask</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#fb_shifted_pixels_mask_long\">fb_shifted_pixels_mask_long</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bswapmask\">bswapmask</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bswapmask\">bswapmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, ~0UL, <a class=\"id\" href=\"#index\">index</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = 0xff << <a class=\"id\" href=\"#FB_LEFT_POS\">FB_LEFT_POS</a>(<a class=\"id\" href=\"#p\">p</a>, 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FB_SHIFT_LOW\">FB_SHIFT_LOW</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#index\">index</a> &amp; (<a class=\"id\" href=\"#bswapmask\">bswapmask</a>)) &amp; <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#mask\">mask</a>, <a class=\"id\" href=\"#index\">index</a> &amp; ~(<a class=\"id\" href=\"#bswapmask\">bswapmask</a>));", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__i386__\">__i386__</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__x86_64__\">__x86_64__</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Shift argument is limited to 0 - 31 on x86 based CPU's */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#index\">index</a> + <a class=\"id\" href=\"#bswapmask\">bswapmask</a> &lt; <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>(<a class=\"id\" href=\"#p\">p</a>, ~0UL,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#index\">index</a> + <a class=\"id\" href=\"#bswapmask\">bswapmask</a>) &amp; ~(<a class=\"id\" href=\"#bswapmask\">bswapmask</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#fb_compute_bswapmask\">fb_compute_bswapmask</a>(struct <a class=\"id\" href=\"#fb_info\">fb_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bswapmask\">bswapmask</a> = 0;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#bpp\">bpp</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#bits_per_pixel\">bits_per_pixel</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#bpp\">bpp</a> &lt; 8) && (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#var\">var</a>.<a class=\"id\" href=\"#nonstd\">nonstd</a> &amp; <a class=\"id\" href=\"#FB_NONSTD_REV_PIX_IN_B\">FB_NONSTD_REV_PIX_IN_B</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Reversed order of pixel layout in bytes</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * works only for 1, 2 and 4 bpp</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bswapmask\">bswapmask</a> = 7 - <a class=\"id\" href=\"#bpp\">bpp</a> + 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bswapmask\">bswapmask</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_FB_CFB_REV_PIXELS_IN_BYTE */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#fb_rev_pixels_in_long\">fb_rev_pixels_in_long</a>(unsigned long <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#bswapmask\">bswapmask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#val\">val</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fb_shifted_pixels_mask_u32\">fb_shifted_pixels_mask_u32</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#b\">b</a>) <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>((<a class=\"id\" href=\"#p\">p</a>), ~(<a class=\"id\" href=\"#u32\">u32</a>)0, (<a class=\"id\" href=\"#i\">i</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fb_shifted_pixels_mask_long\">fb_shifted_pixels_mask_long</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#b\">b</a>) <a class=\"id\" href=\"#FB_SHIFT_HIGH\">FB_SHIFT_HIGH</a>((<a class=\"id\" href=\"#p\">p</a>), ~0UL, (<a class=\"id\" href=\"#i\">i</a>))", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#fb_compute_bswapmask\">fb_compute_bswapmask</a>(...) 0", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/* CONFIG_FB_CFB_REV_PIXELS_IN_BYTE */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpu_to_le_long\">cpu_to_le_long</a> <a class=\"id\" href=\"#_cpu_to_le_long\">_cpu_to_le_long</a>(<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_cpu_to_le_long\">_cpu_to_le_long</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#__cpu_to_le_long\">__cpu_to_le_long</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__cpu_to_le_long\">__cpu_to_le_long</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#cpu_to_le\">cpu_to_le</a>##<a class=\"id\" href=\"#x\">x</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#le_long_to_cpu\">le_long_to_cpu</a> <a class=\"id\" href=\"#_le_long_to_cpu\">_le_long_to_cpu</a>(<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_le_long_to_cpu\">_le_long_to_cpu</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#__le_long_to_cpu\">__le_long_to_cpu</a>(<a class=\"id\" href=\"#x\">x</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__le_long_to_cpu\">__le_long_to_cpu</a>(<a class=\"id\" href=\"#x\">x</a>) <a class=\"id\" href=\"#le\">le</a>##<a class=\"id\" href=\"#x\">x</a>##<a class=\"id\" href=\"#_to_cpu\">_to_cpu</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#rolx\">rolx</a>(unsigned long <a class=\"id\" href=\"#word\">word</a>, unsigned int <a class=\"id\" href=\"#shift\">shift</a>, unsigned int <a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#word\">word</a> << <a class=\"id\" href=\"#shift\">shift</a>) | (<a class=\"id\" href=\"#word\">word</a> >> (<a class=\"id\" href=\"#x\">x</a> - <a class=\"id\" href=\"#shift\">shift</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* FB_DRAW_H */</span>", 
];
xr_frag_insert('l/23/a06b6be644d3ec74963267b0744a14c8fa0019.xr', __xr_tmp);
