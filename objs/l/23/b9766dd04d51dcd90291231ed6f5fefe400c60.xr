var __xr_tmp = [
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fasync_helper\">fasync_helper</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#on\">on</a>, &amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#fasync\">fasync</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#evdev_flush\">evdev_flush</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fl_owner_t\">fl_owner_t</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#input_flush_device\">input_flush_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#evdev_free\">evdev_free</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#evdev\">evdev</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_put_device\">input_put_device</a>(<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Grabs an event device (along with underlying input device).</span>", 
"<span class=\"comment\"> * This function is called with evdev-&gt;mutex taken.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#evdev_grab\">evdev_grab</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>, struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#grab\">grab</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#input_grab_device\">input_grab_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#grab\">grab</a>, <a class=\"id\" href=\"#client\">client</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#evdev_ungrab\">evdev_ungrab</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>, struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#grab\">grab</a> != <a class=\"id\" href=\"#client\">client</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return  -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#grab\">grab</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_release_device\">input_release_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#evdev_attach_client\">evdev_attach_client</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_lock\">client_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail_rcu\">list_add_tail_rcu</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_list\">client_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_lock\">client_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"}", 
"", 
"static void <a class=\"id\" href=\"#evdev_detach_client\">evdev_detach_client</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_lock\">client_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del_rcu\">list_del_rcu</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_lock\">client_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#evdev_open_device\">evdev_open_device</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#open\">open</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#input_open_device\">input_open_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#open\">open</a>--;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#evdev_close_device\">evdev_close_device</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a> && !--<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#open\">open</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input_close_device\">input_close_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Wake up users waiting for IO so they can disconnect from</span>", 
"<span class=\"comment\"> * dead device.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#evdev_hangup\">evdev_hangup</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_lock\">client_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#client\">client</a>, &amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_list\">client_list</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kill_fasync\">kill_fasync</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#fasync\">fasync</a>, <a class=\"id\" href=\"#SIGIO\">SIGIO</a>, <a class=\"id\" href=\"#POLL_HUP\">POLL_HUP</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_lock\">client_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#evdev_release\">evdev_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#grab\">grab</a> == <a class=\"id\" href=\"#client\">client</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#evdev_ungrab\">evdev_ungrab</a>(<a class=\"id\" href=\"#evdev\">evdev</a>, <a class=\"id\" href=\"#client\">client</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_detach_client\">evdev_detach_client</a>(<a class=\"id\" href=\"#evdev\">evdev</a>, <a class=\"id\" href=\"#client\">client</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#client\">client</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_close_device\">evdev_close_device</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#evdev_compute_buffer_size\">evdev_compute_buffer_size</a>(struct <a class=\"id\" href=\"#input_dev\">input_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n_events\">n_events</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hint_events_per_packet\">hint_events_per_packet</a> * <a class=\"id\" href=\"#EVDEV_BUF_PACKETS\">EVDEV_BUF_PACKETS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#EVDEV_MIN_BUFFER_SIZE\">EVDEV_MIN_BUFFER_SIZE</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#roundup_pow_of_two\">roundup_pow_of_two</a>(<a class=\"id\" href=\"#n_events\">n_events</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#evdev_open\">evdev_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#iminor\">iminor</a>(<a class=\"id\" href=\"#inode\">inode</a>) - <a class=\"id\" href=\"#EVDEV_MINOR_BASE\">EVDEV_MINOR_BASE</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#bufsize\">bufsize</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#EVDEV_MINORS\">EVDEV_MINORS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#evdev_table_mutex\">evdev_table_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#evdev_table\">evdev_table</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_device\">get_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev_table_mutex\">evdev_table_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bufsize\">bufsize</a> = <a class=\"id\" href=\"#evdev_compute_buffer_size\">evdev_compute_buffer_size</a>(<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>.<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bufsize\">bufsize</a> * sizeof(struct <a class=\"id\" href=\"#input_event\">input_event</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#client\">client</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_put_evdev\">err_put_evdev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#bufsize\">bufsize</a> = <a class=\"id\" href=\"#bufsize\">bufsize</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#buffer_lock\">buffer_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_attach_client\">evdev_attach_client</a>(<a class=\"id\" href=\"#evdev\">evdev</a>, <a class=\"id\" href=\"#client\">client</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#evdev_open_device\">evdev_open_device</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_client\">err_free_client</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#client\">client</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nonseekable_open\">nonseekable_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_free_client\">err_free_client</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_detach_client\">evdev_detach_client</a>(<a class=\"id\" href=\"#evdev\">evdev</a>, <a class=\"id\" href=\"#client\">client</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#client\">client</a>);", 
" <a class=\"id\" href=\"#err_put_evdev\">err_put_evdev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#evdev_write\">evdev_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_event\">input_event</a> <a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#retval\">retval</a> &lt; <a class=\"id\" href=\"#count\">count</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#input_event_from_user\">input_event_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#retval\">retval</a>, &amp;<a class=\"id\" href=\"#event\">event</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input_inject_event\">input_inject_event</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#code\">code</a>, <a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> += <a class=\"id\" href=\"#input_event_size\">input_event_size</a>();", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#evdev_fetch_next_event\">evdev_fetch_next_event</a>(struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#input_event\">input_event</a> *<a class=\"id\" href=\"#event\">event</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#have_event\">have_event</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#buffer_lock\">buffer_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#have_event\">have_event</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#tail\">tail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#have_event\">have_event</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#event\">event</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#tail\">tail</a>++];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#tail\">tail</a> &= <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#bufsize\">bufsize</a> - 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#buffer_lock\">buffer_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#have_event\">have_event</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#evdev_read\">evdev_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_event\">input_event</a> <a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#input_event_size\">input_event_size</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#head\">head</a> == <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#tail\">tail</a> && <a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#wait_event_interruptible\">wait_event_interruptible</a>(<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#wait\">wait</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#tail\">tail</a> || !<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#retval\">retval</a> + <a class=\"id\" href=\"#input_event_size\">input_event_size</a>() <= <a class=\"id\" href=\"#count\">count</a> &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#evdev_fetch_next_event\">evdev_fetch_next_event</a>(<a class=\"id\" href=\"#client\">client</a>, &amp;<a class=\"id\" href=\"#event\">event</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#input_event_to_user\">input_event_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a> + <a class=\"id\" href=\"#retval\">retval</a>, &amp;<a class=\"id\" href=\"#event\">event</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> += <a class=\"id\" href=\"#input_event_size\">input_event_size</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/* No kernel lock - fine */</span>", 
"static unsigned int <a class=\"id\" href=\"#evdev_poll\">evdev_poll</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#poll_table\">poll_table</a> *<a class=\"id\" href=\"#wait\">wait</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#poll_wait\">poll_wait</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a> ? <a class=\"id\" href=\"#POLLOUT\">POLLOUT</a> | <a class=\"id\" href=\"#POLLWRNORM\">POLLWRNORM</a> : <a class=\"id\" href=\"#POLLHUP\">POLLHUP</a> | <a class=\"id\" href=\"#POLLERR\">POLLERR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= <a class=\"id\" href=\"#POLLIN\">POLLIN</a> | <a class=\"id\" href=\"#POLLRDNORM\">POLLRDNORM</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mask\">mask</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITS_PER_LONG_COMPAT\">BITS_PER_LONG_COMPAT</a> (sizeof(<a class=\"id\" href=\"#compat_long_t\">compat_long_t</a>) * 8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BITS_TO_LONGS_COMPAT\">BITS_TO_LONGS_COMPAT</a>(<a class=\"id\" href=\"#x\">x</a>) ((((<a class=\"id\" href=\"#x\">x</a>) - 1) / <a class=\"id\" href=\"#BITS_PER_LONG_COMPAT\">BITS_PER_LONG_COMPAT</a>) + 1)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__BIG_ENDIAN\">__BIG_ENDIAN</a>", 
"static int <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(unsigned long *<a class=\"id\" href=\"#bits\">bits</a>, unsigned int <a class=\"id\" href=\"#maxbit\">maxbit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#maxlen\">maxlen</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#compat\">compat</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#compat\">compat</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#BITS_TO_LONGS_COMPAT\">BITS_TO_LONGS_COMPAT</a>(<a class=\"id\" href=\"#maxbit\">maxbit</a>) * sizeof(<a class=\"id\" href=\"#compat_long_t\">compat_long_t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#maxlen\">maxlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#len\">len</a> / sizeof(<a class=\"id\" href=\"#compat_long_t\">compat_long_t</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>((<a class=\"id\" href=\"#compat_long_t\">compat_long_t</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#p\">p</a> + <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#compat_long_t\">compat_long_t</a> *) <a class=\"id\" href=\"#bits\">bits</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> + 1 - ((<a class=\"id\" href=\"#i\">i</a> % 2) << 1),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> sizeof(<a class=\"id\" href=\"#compat_long_t\">compat_long_t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#maxbit\">maxbit</a>) * sizeof(long);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#maxlen\">maxlen</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"#else", 
"static int <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(unsigned long *<a class=\"id\" href=\"#bits\">bits</a>, unsigned int <a class=\"id\" href=\"#maxbit\">maxbit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#maxlen\">maxlen</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#compat\">compat</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#compat\">compat</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BITS_TO_LONGS_COMPAT\">BITS_TO_LONGS_COMPAT</a>(<a class=\"id\" href=\"#maxbit\">maxbit</a>) * sizeof(<a class=\"id\" href=\"#compat_long_t\">compat_long_t</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#maxbit\">maxbit</a>) * sizeof(long);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#maxlen\">maxlen</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#len\">len</a>) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __BIG_ENDIAN */</span>", 
"", 
"#else", 
"", 
"static int <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(unsigned long *<a class=\"id\" href=\"#bits\">bits</a>, unsigned int <a class=\"id\" href=\"#maxbit\">maxbit</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#maxlen\">maxlen</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#compat\">compat</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#maxbit\">maxbit</a>) * sizeof(long);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#maxlen\">maxlen</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#len\">len</a>) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_COMPAT */</span>", 
"", 
"static int <a class=\"id\" href=\"#str_to_user\">str_to_user</a>(const char *<a class=\"id\" href=\"#str\">str</a>, unsigned int <a class=\"id\" href=\"#maxlen\">maxlen</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#str\">str</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#str\">str</a>) + 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#maxlen\">maxlen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#maxlen\">maxlen</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#len\">len</a>) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OLD_KEY_MAX\">OLD_KEY_MAX</a><span class=\"ts\"/>0x1ff", 
"static int <a class=\"id\" href=\"#handle_eviocgbit\">handle_eviocgbit</a>(struct <a class=\"id\" href=\"#input_dev\">input_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#type\">type</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#compat_mode\">compat_mode</a>)", 
"{", 
"<span class=\"ts\"/>static unsigned long <a class=\"id\" href=\"#keymax_warn_time\">keymax_warn_time</a>;", 
"<span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"", 
"<span class=\"ts\"/>case      0: <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#evbit\">evbit</a>;  <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#EV_MAX\">EV_MAX</a>;  break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_KEY\">EV_KEY</a>: <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#keybit\">keybit</a>; <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#KEY_MAX\">KEY_MAX</a>; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_REL\">EV_REL</a>: <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#relbit\">relbit</a>; <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#REL_MAX\">REL_MAX</a>; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_ABS\">EV_ABS</a>: <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#absbit\">absbit</a>; <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#ABS_MAX\">ABS_MAX</a>; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_MSC\">EV_MSC</a>: <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mscbit\">mscbit</a>; <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#MSC_MAX\">MSC_MAX</a>; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_LED\">EV_LED</a>: <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ledbit\">ledbit</a>; <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#LED_MAX\">LED_MAX</a>; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_SND\">EV_SND</a>: <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sndbit\">sndbit</a>; <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#SND_MAX\">SND_MAX</a>; break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_FF\">EV_FF</a>:  <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ffbit\">ffbit</a>;  <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#FF_MAX\">FF_MAX</a>;  break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EV_SW\">EV_SW</a>:  <a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#swbit\">swbit</a>;  <a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#SW_MAX\">SW_MAX</a>;  break;", 
"<span class=\"ts\"/>default: return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Work around bugs in userspace programs that like to do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EVIOCGBIT(EV_KEY, KEY_MAX) and not realize that 'len'</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * should be in bytes, not in bits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#EV_KEY\">EV_KEY</a> && <a class=\"id\" href=\"#size\">size</a> == <a class=\"id\" href=\"#OLD_KEY_MAX\">OLD_KEY_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#OLD_KEY_MAX\">OLD_KEY_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#printk_timed_ratelimit\">printk_timed_ratelimit</a>(&amp;<a class=\"id\" href=\"#keymax_warn_time\">keymax_warn_time</a>, 10 * 1000))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"evdev.c(EVIOCGBIT): Suspicious buffer size %u, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"limiting output to %zu bytes. See \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"http://userweb.kernel.org/~dtor/eviocgbit-bug.html\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#OLD_KEY_MAX\">OLD_KEY_MAX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BITS_TO_LONGS\">BITS_TO_LONGS</a>(<a class=\"id\" href=\"#OLD_KEY_MAX\">OLD_KEY_MAX</a>) * sizeof(long));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(<a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#compat_mode\">compat_mode</a>);", 
"}", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#OLD_KEY_MAX\">OLD_KEY_MAX</a>", 
"", 
"static long <a class=\"id\" href=\"#evdev_do_ioctl\">evdev_do_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#compat_mode\">compat_mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_dev\">input_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>.<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_absinfo\">input_absinfo</a> <a class=\"id\" href=\"#abs\">abs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a> <a class=\"id\" href=\"#effect\">effect</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ip\">ip</a> = (int <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#u\">u</a>, <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First we check for fixed-length commands */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGVERSION\">EVIOCGVERSION</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#EV_VERSION\">EV_VERSION</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGID\">EVIOCGID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>, sizeof(struct <a class=\"id\" href=\"#input_id\">input_id</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGREP\">EVIOCGREP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EV_REP\">EV_REP</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#evbit\">evbit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rep\">rep</a>[<a class=\"id\" href=\"#REP_DELAY\">REP_DELAY</a>], <a class=\"id\" href=\"#ip\">ip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rep\">rep</a>[<a class=\"id\" href=\"#REP_PERIOD\">REP_PERIOD</a>], <a class=\"id\" href=\"#ip\">ip</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCSREP\">EVIOCSREP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EV_REP\">EV_REP</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#evbit\">evbit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#u\">u</a>, <a class=\"id\" href=\"#ip\">ip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#ip\">ip</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input_inject_event\">input_inject_event</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EV_REP\">EV_REP</a>, <a class=\"id\" href=\"#REP_DELAY\">REP_DELAY</a>, <a class=\"id\" href=\"#u\">u</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input_inject_event\">input_inject_event</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EV_REP\">EV_REP</a>, <a class=\"id\" href=\"#REP_PERIOD\">REP_PERIOD</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGKEYCODE\">EVIOCGKEYCODE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#ip\">ip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#input_get_keycode\">input_get_keycode</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#ip\">ip</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCSKEYCODE\">EVIOCSKEYCODE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#ip\">ip</a>) || <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#ip\">ip</a> + 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#input_set_keycode\">input_set_keycode</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#v\">v</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCRMFF\">EVIOCRMFF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#input_ff_erase\">input_ff_erase</a>(<a class=\"id\" href=\"#dev\">dev</a>, (int)(unsigned long) <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGEFFECTS\">EVIOCGEFFECTS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#EV_FF\">EV_FF</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#evbit\">evbit</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ff\">ff</a>-><a class=\"id\" href=\"#max_effects\">max_effects</a> : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ip\">ip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGRAB\">EVIOCGRAB</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#evdev_grab\">evdev_grab</a>(<a class=\"id\" href=\"#evdev\">evdev</a>, <a class=\"id\" href=\"#client\">client</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#evdev_ungrab\">evdev_ungrab</a>(<a class=\"id\" href=\"#evdev\">evdev</a>, <a class=\"id\" href=\"#client\">client</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#_IOC_SIZE\">_IOC_SIZE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Now check variable-length commands */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EVIOC_MASK_SIZE\">EVIOC_MASK_SIZE</a>(<a class=\"id\" href=\"#nr\">nr</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#nr\">nr</a>) &amp; ~(<a class=\"id\" href=\"#_IOC_SIZEMASK\">_IOC_SIZEMASK</a> << <a class=\"id\" href=\"#_IOC_SIZESHIFT\">_IOC_SIZESHIFT</a>))", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#EVIOC_MASK_SIZE\">EVIOC_MASK_SIZE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>)) {", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGKEY\">EVIOCGKEY</a>(0):", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#KEY_MAX\">KEY_MAX</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#compat_mode\">compat_mode</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGLED\">EVIOCGLED</a>(0):", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#led\">led</a>, <a class=\"id\" href=\"#LED_MAX\">LED_MAX</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#compat_mode\">compat_mode</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGSND\">EVIOCGSND</a>(0):", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#snd\">snd</a>, <a class=\"id\" href=\"#SND_MAX\">SND_MAX</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#compat_mode\">compat_mode</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGSW\">EVIOCGSW</a>(0):", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bits_to_user\">bits_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sw\">sw</a>, <a class=\"id\" href=\"#SW_MAX\">SW_MAX</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#compat_mode\">compat_mode</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGNAME\">EVIOCGNAME</a>(0):", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#str_to_user\">str_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGPHYS\">EVIOCGPHYS</a>(0):", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#str_to_user\">str_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOCGUNIQ\">EVIOCGUNIQ</a>(0):", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#str_to_user\">str_to_user</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#uniq\">uniq</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#EVIOC_MASK_SIZE\">EVIOC_MASK_SIZE</a>(<a class=\"id\" href=\"#EVIOCSFF\">EVIOCSFF</a>):", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#input_ff_effect_from_user\">input_ff_effect_from_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#size\">size</a>, &amp;<a class=\"id\" href=\"#effect\">effect</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#input_ff_upload\">input_ff_upload</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#effect\">effect</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#effect\">effect</a>.<a class=\"id\" href=\"#id\">id</a>, &amp;(((struct <a class=\"id\" href=\"#ff_effect\">ff_effect</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#p\">p</a>)-><a class=\"id\" href=\"#id\">id</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Multi-number variable-length handlers */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_IOC_TYPE\">_IOC_TYPE</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) != 'E')", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_IOC_DIR\">_IOC_DIR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) == <a class=\"id\" href=\"#_IOC_READ\">_IOC_READ</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; ~<a class=\"id\" href=\"#EV_MAX\">EV_MAX</a>) == <a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#EVIOCGBIT\">EVIOCGBIT</a>(0, 0)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#handle_eviocgbit\">handle_eviocgbit</a>(<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; <a class=\"id\" href=\"#EV_MAX\">EV_MAX</a>, <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#compat_mode\">compat_mode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; ~<a class=\"id\" href=\"#ABS_MAX\">ABS_MAX</a>) == <a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#EVIOCGABS\">EVIOCGABS</a>(0))) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#absinfo\">absinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; <a class=\"id\" href=\"#ABS_MAX\">ABS_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#abs\">abs</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#absinfo\">absinfo</a>[<a class=\"id\" href=\"#t\">t</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#abs\">abs</a>, <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#size_t\">size_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>, sizeof(struct <a class=\"id\" href=\"#input_absinfo\">input_absinfo</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_IOC_DIR\">_IOC_DIR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) == <a class=\"id\" href=\"#_IOC_WRITE\">_IOC_WRITE</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; ~<a class=\"id\" href=\"#ABS_MAX\">ABS_MAX</a>) == <a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#EVIOCSABS\">EVIOCSABS</a>(0))) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#absinfo\">absinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#_IOC_NR\">_IOC_NR</a>(<a class=\"id\" href=\"#cmd\">cmd</a>) &amp; <a class=\"id\" href=\"#ABS_MAX\">ABS_MAX</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#abs\">abs</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#size_t\">size_t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a>, sizeof(struct <a class=\"id\" href=\"#input_absinfo\">input_absinfo</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &lt; sizeof(struct <a class=\"id\" href=\"#input_absinfo\">input_absinfo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#abs\">abs</a>.<a class=\"id\" href=\"#resolution\">resolution</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We can't change number of reserved MT slots */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a> == <a class=\"id\" href=\"#ABS_MT_SLOT\">ABS_MT_SLOT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Take event lock to ensure that we are not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * changing device parameters in the middle</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * of event.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#event_lock\">event_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#absinfo\">absinfo</a>[<a class=\"id\" href=\"#t\">t</a>] = <a class=\"id\" href=\"#abs\">abs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#event_lock\">event_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#evdev_ioctl_handler\">evdev_ioctl_handler</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>, int <a class=\"id\" href=\"#compat_mode\">compat_mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev_client\">evdev_client</a> *<a class=\"id\" href=\"#client\">client</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#client\">client</a>-><a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#mutex_lock_interruptible\">mutex_lock_interruptible</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#evdev_do_ioctl\">evdev_do_ioctl</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#compat_mode\">compat_mode</a>);", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#evdev_ioctl\">evdev_ioctl</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#evdev_ioctl_handler\">evdev_ioctl_handler</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#arg\">arg</a>, 0);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"static long <a class=\"id\" href=\"#evdev_ioctl_compat\">evdev_ioctl_compat</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#evdev_ioctl_handler\">evdev_ioctl_handler</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#arg\">arg</a>), 1);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#evdev_fops\">evdev_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_read\">evdev_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_write\">evdev_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_poll\">evdev_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_open\">evdev_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_release\">evdev_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#unlocked_ioctl\">unlocked_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_ioctl\">evdev_ioctl</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_ioctl_compat\">evdev_ioctl_compat</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fasync\">fasync</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_fasync\">evdev_fasync</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flush\">flush</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_flush\">evdev_flush</a>", 
"};", 
"", 
"static int <a class=\"id\" href=\"#evdev_install_chrdev\">evdev_install_chrdev</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No need to do any locking here as calls to connect and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * disconnect are serialized by the input core</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_table\">evdev_table</a>[<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#minor\">minor</a>] = <a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#evdev_remove_chrdev\">evdev_remove_chrdev</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Lock evdev table to prevent race with evdev_open()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#evdev_table_mutex\">evdev_table_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_table\">evdev_table</a>[<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#minor\">minor</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev_table_mutex\">evdev_table_mutex</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mark device non-existent. This disables writes, ioctls and</span>", 
"<span class=\"comment\"> * prevents new users from opening the device. Already posted</span>", 
"<span class=\"comment\"> * blocking reads will stay, however new ones will fail.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#evdev_mark_dead\">evdev_mark_dead</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#evdev_cleanup\">evdev_cleanup</a>(struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#input_handle\">input_handle</a> *<a class=\"id\" href=\"#handle\">handle</a> = &amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_mark_dead\">evdev_mark_dead</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_hangup\">evdev_hangup</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_remove_chrdev\">evdev_remove_chrdev</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* evdev is marked dead so no one else accesses evdev-&gt;open */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#open\">open</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input_flush_device\">input_flush_device</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#input_close_device\">input_close_device</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create new evdev device. Note that input core serializes calls</span>", 
"<span class=\"comment\"> * to connect and disconnect so we don't need to lock evdev_table here.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#evdev_connect\">evdev_connect</a>(struct <a class=\"id\" href=\"#input_handler\">input_handler</a> *<a class=\"id\" href=\"#handler\">handler</a>, struct <a class=\"id\" href=\"#input_dev\">input_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#input_device_id\">input_device_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#minor\">minor</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#minor\">minor</a> = 0; <a class=\"id\" href=\"#minor\">minor</a> &lt; <a class=\"id\" href=\"#EVDEV_MINORS\">EVDEV_MINORS</a>; <a class=\"id\" href=\"#minor\">minor</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev_table\">evdev_table</a>[<a class=\"id\" href=\"#minor\">minor</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#minor\">minor</a> == <a class=\"id\" href=\"#EVDEV_MINORS\">EVDEV_MINORS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"evdev: no more free evdev devices\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENFILE\">ENFILE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#evdev\">evdev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#evdev\">evdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_list\">client_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#client_lock\">client_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"event%d\", <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#exist\">exist</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#minor\">minor</a> = <a class=\"id\" href=\"#minor\">minor</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>.<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#input_get_device\">input_get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>.<a class=\"id\" href=\"#handler\">handler</a> = <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>.<a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#evdev\">evdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#devt\">devt</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#INPUT_MAJOR\">INPUT_MAJOR</a>, <a class=\"id\" href=\"#EVDEV_MINOR_BASE\">EVDEV_MINOR_BASE</a> + <a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#class\">class</a> = &amp;<a class=\"id\" href=\"#input_class\">input_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#evdev_free\">evdev_free</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_initialize\">device_initialize</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#input_register_handle\">input_register_handle</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_free_evdev\">err_free_evdev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#evdev_install_chrdev\">evdev_install_chrdev</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_unregister_handle\">err_unregister_handle</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_add\">device_add</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_cleanup_evdev\">err_cleanup_evdev</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#err_cleanup_evdev\">err_cleanup_evdev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_cleanup\">evdev_cleanup</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
" <a class=\"id\" href=\"#err_unregister_handle\">err_unregister_handle</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_unregister_handle\">input_unregister_handle</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#handle\">handle</a>);", 
" <a class=\"id\" href=\"#err_free_evdev\">err_free_evdev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#evdev_disconnect\">evdev_disconnect</a>(struct <a class=\"id\" href=\"#input_handle\">input_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evdev\">evdev</a> *<a class=\"id\" href=\"#evdev\">evdev</a> = <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_del\">device_del</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#evdev_cleanup\">evdev_cleanup</a>(<a class=\"id\" href=\"#evdev\">evdev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_unregister_handle\">input_unregister_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#evdev\">evdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#input_device_id\">input_device_id</a> <a class=\"id\" href=\"#evdev_ids\">evdev_ids</a>[] = {", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#driver_info\">driver_info</a> = 1 },<span class=\"ts\"/><span class=\"comment\">/* Matches all devices */</span>", 
"<span class=\"ts\"/>{ },<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Terminating zero entry */</span>", 
"};", 
"", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#input\">input</a>, <a class=\"id\" href=\"#evdev_ids\">evdev_ids</a>);", 
"", 
"static struct <a class=\"id\" href=\"#input_handler\">input_handler</a> <a class=\"id\" href=\"#evdev_handler\">evdev_handler</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#event\">event</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_event\">evdev_event</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#connect\">connect</a><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_connect\">evdev_connect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#disconnect\">disconnect</a><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_disconnect\">evdev_disconnect</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#fops\">fops</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#evdev_fops\">evdev_fops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#minor\">minor</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#EVDEV_MINOR_BASE\">EVDEV_MINOR_BASE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"evdev\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a><span class=\"ts\"/>= <a class=\"id\" href=\"#evdev_ids\">evdev_ids</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#evdev_init\">evdev_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#input_register_handler\">input_register_handler</a>(&amp;<a class=\"id\" href=\"#evdev_handler\">evdev_handler</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#evdev_exit\">evdev_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#input_unregister_handler\">input_unregister_handler</a>(&amp;<a class=\"id\" href=\"#evdev_handler\">evdev_handler</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#evdev_init\">evdev_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#evdev_exit\">evdev_exit</a>);", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Vojtech Pavlik <vojtech@ucw.cz>\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"Input driver event char devices\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/23/b9766dd04d51dcd90291231ed6f5fefe400c60.xr', __xr_tmp);
