var __xr_tmp = [
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a> = <a class=\"id\" href=\"#ext3_raw_inode\">ext3_raw_inode</a>(&amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#end\">end</a> = (void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> + <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_test_inode_state\">ext3_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_XATTR\">EXT3_STATE_XATTR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_check_names\">ext3_xattr_check_names</a>(<a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>), <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find the named attribute. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_find_entry\">ext3_xattr_find_entry</a>(&amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#here\">here</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#end\">end</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (void *)<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#base\">base</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a> = <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext3_xattr_ibody_set\">ext3_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext3_xattr_info\">ext3_xattr_info</a> *<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext3_xattr_ibody_find\">ext3_xattr_ibody_find</a> *<a class=\"id\" href=\"#is\">is</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_ibody_header\">ext3_xattr_ibody_header</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_search\">ext3_xattr_search</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_set_entry\">ext3_xattr_set_entry</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext3_raw_inode\">ext3_raw_inode</a>(&amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT3_XATTR_MAGIC\">EXT3_XATTR_MAGIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_set_inode_state\">ext3_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_XATTR\">EXT3_STATE_XATTR</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_clear_inode_state\">ext3_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_XATTR\">EXT3_STATE_XATTR</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_set_handle()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create, replace or remove an extended attribute for this inode. Buffer</span>", 
"<span class=\"comment\"> * is NULL to remove an existing extended attribute, and non-NULL to</span>", 
"<span class=\"comment\"> * either replace an existing extended attribute, or create a new extended</span>", 
"<span class=\"comment\"> * attribute. The flags XATTR_REPLACE and XATTR_CREATE</span>", 
"<span class=\"comment\"> * specify that an extended attribute must exist and must not exist</span>", 
"<span class=\"comment\"> * previous to the call, respectively.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext3_xattr_set_handle\">ext3_xattr_set_handle</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#name\">name</a>, const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#value_len\">value_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_info\">ext3_xattr_info</a> <a class=\"id\" href=\"#i\">i</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name_index\">name_index</a> = <a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#value_len\">value_len</a> = <a class=\"id\" href=\"#value_len\">value_len</a>,", 
"", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_ibody_find\">ext3_xattr_ibody_find</a> <a class=\"id\" href=\"#is\">is</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#s\">s</a> = { .<a class=\"id\" href=\"#not_found\">not_found</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>, },", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_block_find\">ext3_xattr_block_find</a> <a class=\"id\" href=\"#bs\">bs</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#s\">s</a> = { .<a class=\"id\" href=\"#not_found\">not_found</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>, },", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>) &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_get_inode_loc\">ext3_get_inode_loc</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_journal_get_write_access\">ext3_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_test_inode_state\">ext3_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_NEW\">EXT3_STATE_NEW</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_inode\">ext3_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a> = <a class=\"id\" href=\"#ext3_raw_inode\">ext3_raw_inode</a>(&amp;<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, 0, <a class=\"id\" href=\"#EXT3_SB\">EXT3_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_clear_inode_state\">ext3_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_STATE_NEW\">EXT3_STATE_NEW</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_ibody_find\">ext3_xattr_ibody_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_block_find\">ext3_xattr_block_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a> && <a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XATTR_REPLACE\">XATTR_REPLACE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XATTR_CREATE\">XATTR_CREATE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_ibody_set\">ext3_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_block_set\">ext3_xattr_block_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_ibody_set\">ext3_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && !<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_block_set\">ext3_xattr_block_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> && !<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#base\">base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_block_find\">ext3_xattr_block_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_block_set\">ext3_xattr_block_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_ibody_set\">ext3_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_update_super_block\">ext3_xattr_update_super_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME_SEC\">CURRENT_TIME_SEC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_mark_iloc_dirty\">ext3_mark_iloc_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The bh is consumed by ext3_mark_iloc_dirty, even with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * error != 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SYNC\">IS_SYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#h_sync\">h_sync</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_set()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Like ext3_xattr_set_handle, but start from an inode. This extended</span>", 
"<span class=\"comment\"> * attribute modification is a filesystem transaction by itself.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext3_xattr_set\">ext3_xattr_set</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/>       const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#value_len\">value_len</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#retries\">retries</a> = 0;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext3_journal_start\">ext3_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT3_DATA_TRANS_BLOCKS\">EXT3_DATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error2\">error2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext3_xattr_set_handle\">ext3_xattr_set_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#value_len\">value_len</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error2\">error2</a> = <a class=\"id\" href=\"#ext3_journal_stop\">ext3_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext3_should_retry_alloc\">ext3_should_retry_alloc</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, &amp;<a class=\"id\" href=\"#retries\">retries</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_delete_inode()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Free extended attribute resources associated with this inode. This</span>", 
"<span class=\"comment\"> * is called immediately before an inode is freed. We have exclusive</span>", 
"<span class=\"comment\"> * access to the inode.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#ext3_xattr_delete_inode\">ext3_xattr_delete_inode</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %lu: block \"<a class=\"id\" href=\"#E3FSBLK\">E3FSBLK</a>\" read error\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT3_XATTR_MAGIC\">EXT3_XATTR_MAGIC</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %lu: bad block \"<a class=\"id\" href=\"#E3FSBLK\">E3FSBLK</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_release_block\">ext3_xattr_release_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT3_I\">EXT3_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> = 0;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_put_super()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is called when a file system is unmounted.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#ext3_xattr_put_super\">ext3_xattr_put_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_shrink\">mb_cache_shrink</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_cache_insert()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create a new entry in the extended attribute cache, and insert</span>", 
"<span class=\"comment\"> * it unless such an entry is already in the cache.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#ext3_xattr_cache_insert\">ext3_xattr_cache_insert</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_hash\">h_hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_alloc\">mb_cache_entry_alloc</a>(<a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ce\">ce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"out of memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mb_cache_entry_insert\">mb_cache_entry_insert</a>(<a class=\"id\" href=\"#ce\">ce</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"already in cache\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"inserting [%x]\", (int)<a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_cmp()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compare two extended attribute blocks for equality.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if the blocks are equal, 1 if they differ, and</span>", 
"<span class=\"comment\"> * a negative error number on errors.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext3_xattr_cmp\">ext3_xattr_cmp</a>(struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *<a class=\"id\" href=\"#header1\">header1</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *<a class=\"id\" href=\"#header2\">header2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry1\">entry1</a>, *<a class=\"id\" href=\"#entry2\">entry2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header1\">header1</a>+1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry2\">entry2</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header2\">header2</a>+1);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry1\">entry1</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry2\">entry2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0 || <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>((char *)<a class=\"id\" href=\"#header1\">header1</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (char *)<a class=\"id\" href=\"#header2\">header2</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a> = <a class=\"id\" href=\"#EXT3_XATTR_NEXT\">EXT3_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry1\">entry1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry2\">entry2</a> = <a class=\"id\" href=\"#EXT3_XATTR_NEXT\">EXT3_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry2\">entry2</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry2\">entry2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_cache_find()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Find an identical extended attribute block.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a pointer to the block found, or NULL if such a block was</span>", 
"<span class=\"comment\"> * not found or an error occurred.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *", 
"<a class=\"id\" href=\"#ext3_xattr_cache_find\">ext3_xattr_cache_find</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> **<a class=\"id\" href=\"#pce\">pce</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;  <span class=\"comment\">/* never share */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"looking for cached blocks [%x]\", (int)<a class=\"id\" href=\"#hash\">hash</a>);", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_find_first\">mb_cache_entry_find_first</a>(<a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ce\">ce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ce\">ce</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ce\">ce</a>) == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext3_error\">ext3_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"inode %lu: block %lu read error\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, (unsigned long) <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>) >=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT3_XATTR_REFCOUNT_MAX\">EXT3_XATTR_REFCOUNT_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"block %lu refcount %d>=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (unsigned long) <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT3_XATTR_REFCOUNT_MAX\">EXT3_XATTR_REFCOUNT_MAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ext3_xattr_cmp\">ext3_xattr_cmp</a>(<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pce\">pce</a> = <a class=\"id\" href=\"#ce\">ce</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_find_next\">mb_cache_entry_find_next</a>(<a class=\"id\" href=\"#ce\">ce</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a> 5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a> 16", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_hash_entry()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compute the hash of an extended attribute.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext3_xattr_hash_entry\">ext3_xattr_hash_entry</a>(struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = 0;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name\">e_name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a>=0; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>; <a class=\"id\" href=\"#n\">n</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = (<a class=\"id\" href=\"#hash\">hash</a> << <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#hash\">hash</a> >> (8*sizeof(<a class=\"id\" href=\"#hash\">hash</a>) - <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a>)) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       *<a class=\"id\" href=\"#name\">name</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> == 0 && <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#value\">value</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)((char *)<a class=\"id\" href=\"#header\">header</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#EXT3_XATTR_ROUND\">EXT3_XATTR_ROUND</a>) >> <a class=\"id\" href=\"#EXT3_XATTR_PAD_BITS\">EXT3_XATTR_PAD_BITS</a>; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#n\">n</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = (<a class=\"id\" href=\"#hash\">hash</a> << <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#hash\">hash</a> >> (8*sizeof(<a class=\"id\" href=\"#hash\">hash</a>) - <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a>)) ^", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(*<a class=\"id\" href=\"#value\">value</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a>", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a> 16", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext3_xattr_rehash()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Re-compute the extended attribute hash value after an entry has changed.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext3_xattr_rehash\">ext3_xattr_rehash</a>(struct <a class=\"id\" href=\"#ext3_xattr_header\">ext3_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext3_xattr_entry\">ext3_xattr_entry</a> *<a class=\"id\" href=\"#here\">here</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_hash_entry\">ext3_xattr_hash_entry</a>(<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>+1);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#here\">here</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Block is not shared if an entry's hash value == 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = (<a class=\"id\" href=\"#hash\">hash</a> << <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#hash\">hash</a> >> (8*sizeof(<a class=\"id\" href=\"#hash\">hash</a>) - <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a>)) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#EXT3_XATTR_NEXT\">EXT3_XATTR_NEXT</a>(<a class=\"id\" href=\"#here\">here</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a>", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#init_ext3_xattr\">init_ext3_xattr</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a> = <a class=\"id\" href=\"#mb_cache_create\">mb_cache_create</a>(\"ext3_xattr\", 6);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void", 
"<a class=\"id\" href=\"#exit_ext3_xattr\">exit_ext3_xattr</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_destroy\">mb_cache_destroy</a>(<a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext3_xattr_cache\">ext3_xattr_cache</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
];
xr_frag_insert('l/24/08649435c31a9397a601508d70469f6282f669.xr', __xr_tmp);
