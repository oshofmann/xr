var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#required_params_current\">required_params_current</a> = <a class=\"id\" href=\"#predefined\">predefined</a>-><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#param_count\">param_count</a> &amp; 0x0F;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#required_params_old\">required_params_old</a> = <a class=\"id\" href=\"#predefined\">predefined</a>-><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#param_count\">param_count</a> >> 4;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#user_param_count\">user_param_count</a> != <a class=\"id\" href=\"#ACPI_UINT32_MAX\">ACPI_UINT32_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#user_param_count\">user_param_count</a> != <a class=\"id\" href=\"#required_params_current\">required_params_current</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#user_param_count\">user_param_count</a> != <a class=\"id\" href=\"#required_params_old\">required_params_old</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#pathname\">pathname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ACPI_WARN_ALWAYS\">ACPI_WARN_ALWAYS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Parameter count mismatch - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"caller passed %u, ACPI requires %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#user_param_count\">user_param_count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#required_params_current\">required_params_current</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check that the ASL-defined parameter count is what is expected for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this predefined name (parameter count as defined by the ACPI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * specification)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#param_count\">param_count</a> != <a class=\"id\" href=\"#required_params_current\">required_params_current</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#param_count\">param_count</a> != <a class=\"id\" href=\"#required_params_old\">required_params_old</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Parameter count mismatch - ASL declared %u, ACPI requires %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#param_count\">param_count</a>, <a class=\"id\" href=\"#required_params_current\">required_params_current</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_check_for_predefined_name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Node            - Namespace node for the method/object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Pointer to entry in predefined table. NULL indicates not found.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Check an object name against the predefined object list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"const union <a class=\"id\" href=\"#acpi_predefined_info\">acpi_predefined_info</a> *<a class=\"id\" href=\"#acpi_ns_check_for_predefined_name\">acpi_ns_check_for_predefined_name</a>(struct", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    *<a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>const union <a class=\"id\" href=\"#acpi_predefined_info\">acpi_predefined_info</a> *<a class=\"id\" href=\"#this_name\">this_name</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Quick check for a predefined name, first character must be underscore */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#ascii\">ascii</a>[0] != '_') {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Search info table for a predefined method/object name */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_name\">this_name</a> = <a class=\"id\" href=\"#predefined_names\">predefined_names</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#this_name\">this_name</a>-><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#name\">name</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_COMPARE_NAME\">ACPI_COMPARE_NAME</a>(<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#ascii\">ascii</a>, <a class=\"id\" href=\"#this_name\">this_name</a>-><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#this_name\">this_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Skip next entry in the table if this name returns a Package</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (next entry contains the package info)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_name\">this_name</a>-><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_PACKAGE\">ACPI_RTYPE_PACKAGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_name\">this_name</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_name\">this_name</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#NULL\">NULL</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not found */</span>", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_check_package</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data            - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              return_object_ptr - Pointer to the object returned from the</span>", 
"<span class=\"comment\"> *                                evaluation of a method or object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Check a returned package object for the correct count and</span>", 
"<span class=\"comment\"> *              correct type of all sub-objects.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_check_package\">acpi_ns_check_package</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#return_object\">return_object</a> = *<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>;", 
"<span class=\"ts\"/>const union <a class=\"id\" href=\"#acpi_predefined_info\">acpi_predefined_info</a> *<a class=\"id\" href=\"#package\">package</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#expected_count\">expected_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ns_check_package\">ns_check_package</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The package info for this name is in the next table entry */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#package\">package</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#predefined\">predefined</a> + 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_NAMES\">ACPI_DB_NAMES</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s Validating return Package of Type %X, Count %X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For variable-length Packages, we can safely remove all embedded</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and trailing NULL package elements</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ns_remove_null_elements\">acpi_ns_remove_null_elements</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#return_object\">return_object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Extract package count and elements array */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a> = <a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The package must have at least one element, else invalid */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Return Package has no elements (empty)\"));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_VALUE\">AE_AML_OPERAND_VALUE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Decode the type of the expected package contents</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PTYPE1 packages contain no subpackages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PTYPE2 packages contain sub-packages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE1_FIXED\">ACPI_PTYPE1_FIXED</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The package count is fixed and there are no sub-packages</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If package is too small, exit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If package is larger than expected, issue warning but continue</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#count1\">count1</a> + <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#count2\">count2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#expected_count\">expected_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#expected_count\">expected_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_REPAIR\">ACPI_DB_REPAIR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s: Return Package is larger than needed - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"found %u, expected %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#expected_count\">expected_count</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Validate all elements of the returned package */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_package_elements\">acpi_ns_check_package_elements</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#elements\">elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#object_type1\">object_type1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count1\">count1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#object_type2\">object_type2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count2\">count2</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE1_VAR\">ACPI_PTYPE1_VAR</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The package count is variable, there are no sub-packages, and all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * elements must be of the same type</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#elements\">elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#object_type1\">object_type1</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE1_OPTION\">ACPI_PTYPE1_OPTION</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The package count is variable, there are no sub-packages. There are</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a fixed number of required elements, and a variable number of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * optional elements.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Check if package is at least as large as the minimum required</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> = <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info3\">ret_info3</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#expected_count\">expected_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Variable number of sub-objects */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info3\">ret_info3</a>.<a class=\"id\" href=\"#count\">count</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* These are the required package elements (0, 1, or 2) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#elements\">elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#package\">package</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ret_info3\">ret_info3</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#object_type\">object_type</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* These are the optional package elements */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#elements\">elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#package\">package</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ret_info3\">ret_info3</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#tail_object_type\">tail_object_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_REV_FIXED\">ACPI_PTYPE2_REV_FIXED</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* First element is the (Integer) revision */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#elements\">elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_RTYPE_INTEGER\">ACPI_RTYPE_INTEGER</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Examine the sub-packages */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_package_list\">acpi_ns_check_package_list</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#package\">package</a>, <a class=\"id\" href=\"#elements\">elements</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_PKG_COUNT\">ACPI_PTYPE2_PKG_COUNT</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* First element is the (Integer) count of sub-packages to follow */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#elements\">elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_RTYPE_INTEGER\">ACPI_RTYPE_INTEGER</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Count cannot be larger than the parent package length, but allow it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to be smaller. The &gt;= accounts for the Integer above.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> = (<a class=\"id\" href=\"#u32\">u32</a>) (*<a class=\"id\" href=\"#elements\">elements</a>)-><a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_count\">expected_count</a> >= <a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#expected_count\">expected_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Examine the sub-packages */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_package_list\">acpi_ns_check_package_list</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#package\">package</a>, <a class=\"id\" href=\"#elements\">elements</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2\">ACPI_PTYPE2</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_FIXED\">ACPI_PTYPE2_FIXED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_MIN\">ACPI_PTYPE2_MIN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_COUNT\">ACPI_PTYPE2_COUNT</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * These types all return a single Package that consists of a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * variable number of sub-Packages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * First, ensure that the first element is a sub-Package. If not,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the BIOS may have incorrectly returned the object as a single</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * package instead of a Package of Packages (a common error if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * there is only one entry). We may be able to repair this by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * wrapping the returned Package with a new outer Package.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#elements\">elements</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    && ((*<a class=\"id\" href=\"#elements\">elements</a>)-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Create the new outer package and populate it */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_repair_package_list\">acpi_ns_repair_package_list</a>(<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Update locals to point to the new package (of 1 element) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_object\">return_object</a> = *<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a> = <a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Examine the sub-packages */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_package_list\">acpi_ns_check_package_list</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#package\">package</a>, <a class=\"id\" href=\"#elements\">elements</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Should not get here if predefined info table is correct */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Invalid internal return type in table entry: %X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#type\">type</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<a class=\"id\" href=\"#package_too_small\">package_too_small</a>:", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Error exit for the case with an incorrect package count */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Return Package is too small - found %u elements, expected %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#expected_count\">expected_count</a>));", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_VALUE\">AE_AML_OPERAND_VALUE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_check_package_list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data            - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              Package         - Pointer to package-specific info for method</span>", 
"<span class=\"comment\"> *              Elements        - Element list of parent package. All elements</span>", 
"<span class=\"comment\"> *                                of this list should be of type Package.</span>", 
"<span class=\"comment\"> *              Count           - Count of subpackages</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Examine a list of subpackages</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_check_package_list\">acpi_ns_check_package_list</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const union <a class=\"id\" href=\"#acpi_predefined_info\">acpi_predefined_info</a> *<a class=\"id\" href=\"#package\">package</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#elements\">elements</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#sub_package\">sub_package</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#sub_elements\">sub_elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#expected_count\">expected_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Validate each sub-Package in the parent Package</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: assumes list of sub-packages contains no NULL elements.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Any NULL elements should have been removed by earlier call</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to acpi_ns_remove_null_elements.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_package\">sub_package</a> = *<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sub_elements\">sub_elements</a> = <a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#parent_package\">parent_package</a> = <a class=\"id\" href=\"#sub_package\">sub_package</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Each sub-object must be of type Package */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, &amp;<a class=\"id\" href=\"#sub_package\">sub_package</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_RTYPE_PACKAGE\">ACPI_RTYPE_PACKAGE</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Examine the different types of expected sub-packages */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#parent_package\">parent_package</a> = <a class=\"id\" href=\"#sub_package\">sub_package</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2\">ACPI_PTYPE2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_PKG_COUNT\">ACPI_PTYPE2_PKG_COUNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_REV_FIXED\">ACPI_PTYPE2_REV_FIXED</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Each subpackage has a fixed number of elements */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#count1\">count1</a> + <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#count2\">count2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#expected_count\">expected_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_package_elements\">acpi_ns_check_package_elements</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sub_elements\">sub_elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#object_type1\">object_type1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#count1\">count1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#object_type2\">object_type2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#count2\">count2</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_FIXED\">ACPI_PTYPE2_FIXED</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Each sub-package has a fixed length */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> = <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info2\">ret_info2</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#expected_count\">expected_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check the type of each sub-package element */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#j\">j</a> &lt; <a class=\"id\" href=\"#expected_count\">expected_count</a>; <a class=\"id\" href=\"#j\">j</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#sub_elements\">sub_elements</a>[<a class=\"id\" href=\"#j\">j</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#package\">package</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ret_info2\">ret_info2</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#object_type\">object_type</a>[<a class=\"id\" href=\"#j\">j</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_MIN\">ACPI_PTYPE2_MIN</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Each sub-package has a variable but minimum length */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> = <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#count1\">count1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#expected_count\">expected_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check the type of each sub-package element */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_package_elements\">acpi_ns_check_package_elements</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sub_elements\">sub_elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#object_type1\">object_type1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#count\">count</a>, 0, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_COUNT\">ACPI_PTYPE2_COUNT</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * First element is the (Integer) count of elements, including</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the count field (the ACPI name is num_elements)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#sub_elements\">sub_elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_RTYPE_INTEGER\">ACPI_RTYPE_INTEGER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Make sure package is large enough for the Count and is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * is as large as the minimum size</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> = (<a class=\"id\" href=\"#u32\">u32</a>)(*<a class=\"id\" href=\"#sub_elements\">sub_elements</a>)-><a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#expected_count\">expected_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#count1\">count1</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> = <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.<a class=\"id\" href=\"#count1\">count1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#package_too_small\">package_too_small</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_count\">expected_count</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Either the num_entries element was originally zero or it was</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * a NULL element and repaired to an Integer of value zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * In either case, repair it by setting num_entries to be the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * actual size of the subpackage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expected_count\">expected_count</a> = <a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#sub_elements\">sub_elements</a>)-><a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#expected_count\">expected_count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check the type of each sub-package element */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_check_package_elements\">acpi_ns_check_package_elements</a>(<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#sub_elements\">sub_elements</a> + 1),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#package\">package</a>-><a class=\"id\" href=\"#ret_info\">ret_info</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#object_type1\">object_type1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#expected_count\">expected_count</a> - 1),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   0, 0, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:<span class=\"ts\"/><span class=\"comment\">/* Should not get here, type was validated by caller */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"", 
"<a class=\"id\" href=\"#package_too_small\">package_too_small</a>:", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The sub-package count was smaller than required */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Return Sub-Package[%u] is too small - found %u elements, expected %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#sub_package\">sub_package</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#expected_count\">expected_count</a>));", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_VALUE\">AE_AML_OPERAND_VALUE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_check_package_elements</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data            - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              Elements        - Pointer to the package elements array</span>", 
"<span class=\"comment\"> *              Type1           - Object type for first group</span>", 
"<span class=\"comment\"> *              Count1          - Count for first group</span>", 
"<span class=\"comment\"> *              Type2           - Object type for second group</span>", 
"<span class=\"comment\"> *              Count2          - Count for second group</span>", 
"<span class=\"comment\"> *              start_index     - Start of the first group of elements</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Check that all elements of a package are of the correct object</span>", 
"<span class=\"comment\"> *              type. Supports up to two groups of different object types.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_check_package_elements\">acpi_ns_check_package_elements</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#elements\">elements</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type1\">type1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count1\">count1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type2\">type2</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count2\">count2</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start_index\">start_index</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#this_element\">this_element</a> = <a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Up to two groups of package elements are supported by the data</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * structure. All elements in each group must be of the same type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The second group can have a count of zero.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count1\">count1</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#this_element\">this_element</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#type1\">type1</a>, <a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#start_index\">start_index</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_element\">this_element</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count2\">count2</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#this_element\">this_element</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#type2\">type2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#count1\">count1</a> + <a class=\"id\" href=\"#start_index\">start_index</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_element\">this_element</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_check_object_type</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data            - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              return_object_ptr - Pointer to the object returned from the</span>", 
"<span class=\"comment\"> *                                evaluation of a method or object</span>", 
"<span class=\"comment\"> *              expected_btypes - Bitmap of expected return type(s)</span>", 
"<span class=\"comment\"> *              package_index   - Index of object within parent package (if</span>", 
"<span class=\"comment\"> *                                applicable - ACPI_NOT_PACKAGE_ELEMENT</span>", 
"<span class=\"comment\"> *                                otherwise)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Check the type of the return object against the expected object</span>", 
"<span class=\"comment\"> *              type(s). Use of Btype allows multiple expected object types.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_check_object_type\">acpi_ns_check_object_type</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#package_index\">package_index</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#return_object\">return_object</a> = *<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#return_btype\">return_btype</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type_buffer\">type_buffer</a>[48];<span class=\"ts\"/><span class=\"comment\">/* Room for 5 types */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we get a NULL return_object here, it is a NULL package element.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Since all extraneous NULL package elements were removed earlier by a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * call to acpi_ns_remove_null_elements, this is an unexpected NULL element.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We will attempt to repair it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#return_object\">return_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_repair_null_element\">acpi_ns_repair_null_element</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#package_index\">package_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);<span class=\"ts\"/><span class=\"comment\">/* Repair was successful */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#type_error_exit\">type_error_exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* A Namespace node should not get here, but make sure */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#return_object\">return_object</a>) == <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Invalid return type - Found a Namespace node [%4.4s] type %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#node\">node</a>.<a class=\"id\" href=\"#name\">name</a>.<a class=\"id\" href=\"#ascii\">ascii</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_ut_get_type_name\">acpi_ut_get_type_name</a>(<a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#node\">node</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#type\">type</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Convert the object type (ACPI_TYPE_xxx) to a bitmapped object type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The bitmapped type allows multiple possible return types.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note, the cases below must handle all of the possible types returned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from all of the predefined names (including elements of returned</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * packages)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_btype\">return_btype</a> = <a class=\"id\" href=\"#ACPI_RTYPE_INTEGER\">ACPI_RTYPE_INTEGER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_btype\">return_btype</a> = <a class=\"id\" href=\"#ACPI_RTYPE_BUFFER\">ACPI_RTYPE_BUFFER</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_btype\">return_btype</a> = <a class=\"id\" href=\"#ACPI_RTYPE_STRING\">ACPI_RTYPE_STRING</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_btype\">return_btype</a> = <a class=\"id\" href=\"#ACPI_RTYPE_PACKAGE\">ACPI_RTYPE_PACKAGE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_btype\">return_btype</a> = <a class=\"id\" href=\"#ACPI_RTYPE_REFERENCE\">ACPI_RTYPE_REFERENCE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not one of the supported objects, must be incorrect */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#type_error_exit\">type_error_exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Is the object one of the expected types? */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#return_btype\">return_btype</a> &amp; <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* For reference objects, check that the reference type is correct */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_check_reference\">acpi_ns_check_reference</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#return_object\">return_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Type mismatch -- attempt repair of the returned object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_repair_object\">acpi_ns_repair_object</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#package_index\">package_index</a>, <a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);<span class=\"ts\"/><span class=\"comment\">/* Repair was successful */</span>", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#type_error_exit\">type_error_exit</a>:", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create a string with all expected types for this predefined object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ns_get_expected_types\">acpi_ns_get_expected_types</a>(<a class=\"id\" href=\"#type_buffer\">type_buffer</a>, <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#package_index\">package_index</a> == <a class=\"id\" href=\"#ACPI_NOT_PACKAGE_ELEMENT\">ACPI_NOT_PACKAGE_ELEMENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Return type mismatch - found %s, expected %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#return_object\">return_object</a>), <a class=\"id\" href=\"#type_buffer\">type_buffer</a>));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Return Package type mismatch at index %u - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"found %s, expected %s\", <a class=\"id\" href=\"#package_index\">package_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#return_object\">return_object</a>), <a class=\"id\" href=\"#type_buffer\">type_buffer</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_check_reference</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data            - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              return_object   - Object returned from the evaluation of a</span>", 
"<span class=\"comment\"> *                                method or object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Check a returned reference object for the correct reference</span>", 
"<span class=\"comment\"> *              type. The only reference type that can be returned from a</span>", 
"<span class=\"comment\"> *              predefined method is a named reference. All others are invalid.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_check_reference\">acpi_ns_check_reference</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#return_object\">return_object</a>)", 
"{", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check the reference object for the correct reference type (opcode).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The only type of reference that can be converted to an union acpi_object is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a reference to a named object (reference class: NAME)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ACPI_REFCLASS_NAME\">ACPI_REFCLASS_NAME</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_WARN_PREDEFINED\">ACPI_WARN_PREDEFINED</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#node_flags\">node_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"Return type mismatch - unexpected reference object type [%s] %2.2X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#acpi_ut_get_reference_name\">acpi_ut_get_reference_name</a>(<a class=\"id\" href=\"#return_object\">return_object</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>));", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_get_expected_types</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Buffer          - Pointer to where the string is returned</span>", 
"<span class=\"comment\"> *              expected_btypes - Bitmap of expected return type(s)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Buffer is populated with type names.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Translate the expected types bitmap into a string of ascii</span>", 
"<span class=\"comment\"> *              names of expected types, for use in warning messages.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#acpi_ns_get_expected_types\">acpi_ns_get_expected_types</a>(char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#this_rtype\">this_rtype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[0] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_rtype\">this_rtype</a> = <a class=\"id\" href=\"#ACPI_RTYPE_INTEGER\">ACPI_RTYPE_INTEGER</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ACPI_NUM_RTYPES\">ACPI_NUM_RTYPES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If one of the expected types, concatenate the name of this type */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#this_rtype\">this_rtype</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_STRCAT\">ACPI_STRCAT</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, &amp;<a class=\"id\" href=\"#acpi_rtype_names\">acpi_rtype_names</a>[<a class=\"id\" href=\"#i\">i</a>][<a class=\"id\" href=\"#j\">j</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* Use name separator from now on */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_rtype\">this_rtype</a> <<= 1;<span class=\"ts\"/><span class=\"comment\">/* Next Rtype */</span>", 
"<span class=\"ts\"/>}", 
"}", 
];
xr_frag_insert('l/24/6dd5a6ab54c7c8ff8cf202ce76c6b7acc22e64.xr', __xr_tmp);
