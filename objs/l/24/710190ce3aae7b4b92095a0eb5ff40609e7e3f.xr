var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>PACKET - implements raw packet sockets.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;gw4pts@gw4pts.ampr.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>verify_area() now used correctly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>new skbuff lists, look ma no backlogs!</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>tidied skbuff lists.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Now uses generic datagram routines I</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>added. Also fixed the peek/read crash</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>from all old Linux datagram code.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Uses the improved datagram code.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Added NULL's for socket options.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Re-commented the code.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Use new kernel side addressing</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Rob Janssen<span class=\"ts\"/>:<span class=\"ts\"/>Correct MTU usage.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Dave Platt<span class=\"ts\"/>:<span class=\"ts\"/>Counter leaks caused by incorrect</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>interrupt locking and some slightly</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>dubious gcc output. Can you read</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>compiler: it said _VOLATILE_</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Richard Kooijman<span class=\"ts\"/>:<span class=\"ts\"/>Timestamp fixes.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>New buffers. Use sk-&gt;mac.raw.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>sendmsg/recvmsg support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Protocol setting support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Alexey Kuznetsov<span class=\"ts\"/>:<span class=\"ts\"/>Untied from IPv4 stack.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Cyrus Durgin<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Fixed kerneld for kmod.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Michal Ostrowski        :       Module initialization cleanup.</span>", 
"<span class=\"comment\"> *         Ulises Alonso        :       Frame number limit removal and</span>", 
"<span class=\"comment\"> *                                      packet_set_ring memory leak.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Eric Biederman<span class=\"ts\"/>:<span class=\"ts\"/>Allow for &gt; 8 byte hardware addresses.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>The convention is that longer addresses</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>will simply extend the hardware address</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>byte arrays at the end of sockaddr_ll</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and packet_mreq.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Johann Baudy<span class=\"ts\"/>:<span class=\"ts\"/>Added TX RING.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_packet\">if_packet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wireless\">wireless</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kmod\">kmod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ioctls\">ioctls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cacheflush\">cacheflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io\">io</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_vlan\">if_vlan</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#virtio_net\">virtio_net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errqueue\">errqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net_tstamp\">net_tstamp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INET\">CONFIG_INET</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">   Assumptions:</span>", 
"<span class=\"comment\">   - if device has no dev-&gt;hard_header routine, it adds and removes ll header</span>", 
"<span class=\"comment\">     inside itself. In this case ll header is invisible outside of device,</span>", 
"<span class=\"comment\">     but higher levels still should reserve dev-&gt;hard_header_len.</span>", 
"<span class=\"comment\">     Some devices are enough clever to reallocate skb, when header</span>", 
"<span class=\"comment\">     will not fit to reserved space (tunnel), another ones are silly</span>", 
"<span class=\"comment\">     (PPP).</span>", 
"<span class=\"comment\">   - packet socket receives packets with pulled ll header,</span>", 
"<span class=\"comment\">     so that SOCK_RAW should push it back.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">On receive:</span>", 
"<span class=\"comment\">-----------</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">Incoming, dev-&gt;hard_header!=NULL</span>", 
"<span class=\"comment\">   mac_header -&gt; ll header</span>", 
"<span class=\"comment\">   data       -&gt; data</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">Outgoing, dev-&gt;hard_header!=NULL</span>", 
"<span class=\"comment\">   mac_header -&gt; ll header</span>", 
"<span class=\"comment\">   data       -&gt; ll header</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">Incoming, dev-&gt;hard_header==NULL</span>", 
"<span class=\"comment\">   mac_header -&gt; UNKNOWN position. It is very likely, that it points to ll</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> header.  PPP makes it, that is wrong, because introduce</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> assymetry between rx and tx paths.</span>", 
"<span class=\"comment\">   data       -&gt; data</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">Outgoing, dev-&gt;hard_header==NULL</span>", 
"<span class=\"comment\">   mac_header -&gt; data. ll header is still not built!</span>", 
"<span class=\"comment\">   data       -&gt; data</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">Resume</span>", 
"<span class=\"comment\">  If dev-&gt;hard_header==NULL we are unlikely to restore sensible ll header.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">On transmit:</span>", 
"<span class=\"comment\">------------</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">dev-&gt;hard_header != NULL</span>", 
"<span class=\"comment\">   mac_header -&gt; ll header</span>", 
"<span class=\"comment\">   data       -&gt; ll header</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">dev-&gt;hard_header == NULL (ll header is added by device, we cannot control it)</span>", 
"<span class=\"comment\">   mac_header -&gt; data</span>", 
"<span class=\"comment\">   data       -&gt; data</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   We should set nh.raw on output to correct posistion,</span>", 
"<span class=\"comment\">   packet classifier depends on it.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Private packet socket structures. */</span>", 
"", 
"struct <a class=\"id\" href=\"#packet_mclist\">packet_mclist</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_mclist\">packet_mclist</a><span class=\"ts\"/>*<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alen\">alen</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>[<a class=\"id\" href=\"#MAX_ADDR_LEN\">MAX_ADDR_LEN</a>];", 
"};", 
"<span class=\"comment\">/* identical to struct packet_mreq except it has</span>", 
"<span class=\"comment\"> * a longer address field.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#packet_mreq_max\">packet_mreq_max</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mr_ifindex\">mr_ifindex</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#mr_type\">mr_type</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#mr_alen\">mr_alen</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#mr_address\">mr_address</a>[<a class=\"id\" href=\"#MAX_ADDR_LEN\">MAX_ADDR_LEN</a>];", 
"};", 
"", 
"static int <a class=\"id\" href=\"#packet_set_ring\">packet_set_ring</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#tpacket_req\">tpacket_req</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#closing\">closing</a>, int <a class=\"id\" href=\"#tx_ring\">tx_ring</a>);", 
"", 
"struct <a class=\"id\" href=\"#packet_ring_buffer\">packet_ring_buffer</a> {", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>**<a class=\"id\" href=\"#pg_vec\">pg_vec</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frames_per_block\">frames_per_block</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frame_size\">frame_size</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#frame_max\">frame_max</a>;", 
"", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_vec_order\">pg_vec_order</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_vec_pages\">pg_vec_pages</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_vec_len\">pg_vec_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pending\">pending</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a>;", 
"static int <a class=\"id\" href=\"#tpacket_snd\">tpacket_snd</a>(struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *<a class=\"id\" href=\"#po\">po</a>, struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>);", 
"", 
"static void <a class=\"id\" href=\"#packet_flush_mclist\">packet_flush_mclist</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* struct sock has to be the first member of packet_sock */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tpacket_stats\">tpacket_stats</a><span class=\"ts\"/><a class=\"id\" href=\"#stats\">stats</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_ring_buffer\">packet_ring_buffer</a><span class=\"ts\"/><a class=\"id\" href=\"#rx_ring\">rx_ring</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_ring_buffer\">packet_ring_buffer</a><span class=\"ts\"/><a class=\"id\" href=\"#tx_ring\">tx_ring</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_thresh\">copy_thresh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bind_lock\">bind_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pg_vec_lock\">pg_vec_lock</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#running\">running</a>:1,<span class=\"ts\"/><span class=\"comment\">/* prot_hook is attached*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#auxdata\">auxdata</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#origdev\">origdev</a>:1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#has_vnet_hdr\">has_vnet_hdr</a>:1;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifindex\">ifindex</a>;<span class=\"ts\"/><span class=\"comment\">/* bound device<span class=\"ts\"/><span class=\"ts\"/>*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_mclist\">packet_mclist</a><span class=\"ts\"/>*<a class=\"id\" href=\"#mclist\">mclist</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapped\">mapped</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#tpacket_versions\">tpacket_versions</a><span class=\"ts\"/><a class=\"id\" href=\"#tp_version\">tp_version</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp_hdrlen\">tp_hdrlen</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp_reserve\">tp_reserve</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp_loss\">tp_loss</a>:1;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp_tstamp\">tp_tstamp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_type\">packet_type</a><span class=\"ts\"/><a class=\"id\" href=\"#prot_hook\">prot_hook</a> <a class=\"id\" href=\"#____cacheline_aligned_in_smp\">____cacheline_aligned_in_smp</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#packet_skb_cb\">packet_skb_cb</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#origlen\">origlen</a>;", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_pkt\">sockaddr_pkt</a> <a class=\"id\" href=\"#pkt\">pkt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_ll\">sockaddr_ll</a> <a class=\"id\" href=\"#ll\">ll</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#sa\">sa</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PACKET_SKB_CB\">PACKET_SKB_CB</a>(<a class=\"id\" href=\"#__skb\">__skb</a>)<span class=\"ts\"/>((struct <a class=\"id\" href=\"#packet_skb_cb\">packet_skb_cb</a> *)((<a class=\"id\" href=\"#__skb\">__skb</a>)-><a class=\"id\" href=\"#cb\">cb</a>))", 
"", 
"static void <a class=\"id\" href=\"#__packet_set_status\">__packet_set_status</a>(struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *<a class=\"id\" href=\"#po\">po</a>, void *<a class=\"id\" href=\"#frame\">frame</a>, int <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tpacket_hdr\">tpacket_hdr</a> *<a class=\"id\" href=\"#h1\">h1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tpacket2_hdr\">tpacket2_hdr</a> *<a class=\"id\" href=\"#h2\">h2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#raw\">raw</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#raw\">raw</a> = <a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#po\">po</a>-><a class=\"id\" href=\"#tp_version\">tp_version</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TPACKET_V1\">TPACKET_V1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h1\">h1</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a> = <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(&amp;<a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h1\">h1</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TPACKET_V2\">TPACKET_V2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h2\">h2</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a> = <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(&amp;<a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h2\">h2</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"TPACKET version not supported\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_wmb\">smp_wmb</a>();", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__packet_get_status\">__packet_get_status</a>(struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *<a class=\"id\" href=\"#po\">po</a>, void *<a class=\"id\" href=\"#frame\">frame</a>)", 
"{", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tpacket_hdr\">tpacket_hdr</a> *<a class=\"id\" href=\"#h1\">h1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tpacket2_hdr\">tpacket2_hdr</a> *<a class=\"id\" href=\"#h2\">h2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#raw\">raw</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_rmb\">smp_rmb</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#raw\">raw</a> = <a class=\"id\" href=\"#frame\">frame</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#po\">po</a>-><a class=\"id\" href=\"#tp_version\">tp_version</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TPACKET_V1\">TPACKET_V1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(&amp;<a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h1\">h1</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h1\">h1</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#TPACKET_V2\">TPACKET_V2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_dcache_page\">flush_dcache_page</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(&amp;<a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h2\">h2</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#h2\">h2</a>-><a class=\"id\" href=\"#tp_status\">tp_status</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"TPACKET version not supported\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#packet_lookup_frame\">packet_lookup_frame</a>(struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *<a class=\"id\" href=\"#po\">po</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_ring_buffer\">packet_ring_buffer</a> *<a class=\"id\" href=\"#rb\">rb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#position\">position</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pg_vec_pos\">pg_vec_pos</a>, <a class=\"id\" href=\"#frame_offset\">frame_offset</a>;", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tpacket_hdr\">tpacket_hdr</a> *<a class=\"id\" href=\"#h1\">h1</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#tpacket2_hdr\">tpacket2_hdr</a> *<a class=\"id\" href=\"#h2\">h2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#raw\">raw</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_vec_pos\">pg_vec_pos</a> = <a class=\"id\" href=\"#position\">position</a> / <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#frames_per_block\">frames_per_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#frame_offset\">frame_offset</a> = <a class=\"id\" href=\"#position\">position</a> % <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#frames_per_block\">frames_per_block</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#raw\">raw</a> = <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#pg_vec\">pg_vec</a>[<a class=\"id\" href=\"#pg_vec_pos\">pg_vec_pos</a>] + (<a class=\"id\" href=\"#frame_offset\">frame_offset</a> * <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#frame_size\">frame_size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#__packet_get_status\">__packet_get_status</a>(<a class=\"id\" href=\"#po\">po</a>, <a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#raw\">raw</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#h\">h</a>.<a class=\"id\" href=\"#raw\">raw</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#packet_current_frame\">packet_current_frame</a>(struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *<a class=\"id\" href=\"#po\">po</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_ring_buffer\">packet_ring_buffer</a> *<a class=\"id\" href=\"#rb\">rb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#packet_lookup_frame\">packet_lookup_frame</a>(<a class=\"id\" href=\"#po\">po</a>, <a class=\"id\" href=\"#rb\">rb</a>, <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#packet_previous_frame\">packet_previous_frame</a>(struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *<a class=\"id\" href=\"#po\">po</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#packet_ring_buffer\">packet_ring_buffer</a> *<a class=\"id\" href=\"#rb\">rb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#previous\">previous</a> = <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#head\">head</a> ? <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#head\">head</a> - 1 : <a class=\"id\" href=\"#rb\">rb</a>-><a class=\"id\" href=\"#frame_max\">frame_max</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#packet_lookup_frame\">packet_lookup_frame</a>(<a class=\"id\" href=\"#po\">po</a>, <a class=\"id\" href=\"#rb\">rb</a>, <a class=\"id\" href=\"#previous\">previous</a>, <a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#packet_increment_head\">packet_increment_head</a>(struct <a class=\"id\" href=\"#packet_ring_buffer\">packet_ring_buffer</a> *<a class=\"id\" href=\"#buff\">buff</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#head\">head</a> != <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#frame_max\">frame_max</a> ? <a class=\"id\" href=\"#buff\">buff</a>-><a class=\"id\" href=\"#head\">head</a>+1 : 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *<a class=\"id\" href=\"#pkt_sk\">pkt_sk</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#packet_sock\">packet_sock</a> *)<a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#packet_sock_destruct\">packet_sock_destruct</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_purge\">skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_queue\">sk_error_queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>));", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"Attempt to release alive packet socket: %p\\n\", <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_refcnt_debug_dec\">sk_refcnt_debug_dec</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#packet_ops\">packet_ops</a>;", 
"", 
"static const struct <a class=\"id\" href=\"#proto_ops\">proto_ops</a> <a class=\"id\" href=\"#packet_ops_spkt\">packet_ops_spkt</a>;", 
"", 
"static int <a class=\"id\" href=\"#packet_rcv_spkt\">packet_rcv_spkt</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#packet_type\">packet_type</a> *<a class=\"id\" href=\"#pt\">pt</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#orig_dev\">orig_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_pkt\">sockaddr_pkt</a> *<a class=\"id\" href=\"#spkt\">spkt</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>When we registered the protocol we saved the socket in the data</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>field for just this event.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#pt\">pt</a>-><a class=\"id\" href=\"#af_packet_priv\">af_packet_priv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Yank back the headers [hope the device set this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>right or kerboom...]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Incoming packets have ll header pulled,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>push it back.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>For outgoing ones skb-&gt;data == skb_mac_header(skb)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>so that this procedure is noop.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#pkt_type\">pkt_type</a> == <a class=\"id\" href=\"#PACKET_LOOPBACK\">PACKET_LOOPBACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_share_check\">skb_share_check</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#oom\">oom</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* drop any routing info */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_drop\">skb_dst_drop</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* drop conntrack reference */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spkt\">spkt</a> = &amp;<a class=\"id\" href=\"#PACKET_SKB_CB\">PACKET_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#sa\">sa</a>.<a class=\"id\" href=\"#pkt\">pkt</a>;", 
];
xr_frag_insert('l/24/710190ce3aae7b4b92095a0eb5ff40609e7e3f.xr', __xr_tmp);
