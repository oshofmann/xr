var __xr_tmp = [
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NETLABEL */</span>", 
"", 
"int <a class=\"id\" href=\"#ebitmap_contains\">ebitmap_contains</a>(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e1\">e1</a>, struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e2\">e2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#n1\">n1</a>, *<a class=\"id\" href=\"#n2\">n2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e1\">e1</a>-><a class=\"id\" href=\"#highbit\">highbit</a> &lt; <a class=\"id\" href=\"#e2\">e2</a>-><a class=\"id\" href=\"#highbit\">highbit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n1\">n1</a> = <a class=\"id\" href=\"#e1\">e1</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n2\">n2</a> = <a class=\"id\" href=\"#e2\">e2</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n1\">n1</a> && <a class=\"id\" href=\"#n2\">n2</a> && (<a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#startbit\">startbit</a> <= <a class=\"id\" href=\"#n2\">n2</a>-><a class=\"id\" href=\"#startbit\">startbit</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#startbit\">startbit</a> &lt; <a class=\"id\" href=\"#n2\">n2</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n1\">n1</a> = <a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#EBITMAP_UNIT_NUMS\">EBITMAP_UNIT_NUMS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#maps\">maps</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; <a class=\"id\" href=\"#n2\">n2</a>-><a class=\"id\" href=\"#maps\">maps</a>[<a class=\"id\" href=\"#i\">i</a>]) != <a class=\"id\" href=\"#n2\">n2</a>-><a class=\"id\" href=\"#maps\">maps</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n1\">n1</a> = <a class=\"id\" href=\"#n1\">n1</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n2\">n2</a> = <a class=\"id\" href=\"#n2\">n2</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n2\">n2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ebitmap_get_bit\">ebitmap_get_bit</a>(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e\">e</a>, unsigned long <a class=\"id\" href=\"#bit\">bit</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> &lt; <a class=\"id\" href=\"#bit\">bit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a> && (<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a> <= <a class=\"id\" href=\"#bit\">bit</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>) &gt; <a class=\"id\" href=\"#bit\">bit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ebitmap_node_get_bit\">ebitmap_node_get_bit</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ebitmap_set_bit\">ebitmap_set_bit</a>(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e\">e</a>, unsigned long <a class=\"id\" href=\"#bit\">bit</a>, int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#n\">n</a>, *<a class=\"id\" href=\"#prev\">prev</a>, *<a class=\"id\" href=\"#new\">new</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a> && <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a> <= <a class=\"id\" href=\"#bit\">bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>) &gt; <a class=\"id\" href=\"#bit\">bit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_node_set_bit\">ebitmap_node_set_bit</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#s\">s</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_node_clr_bit\">ebitmap_node_clr_bit</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#find_first_bit\">find_first_bit</a>(<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#maps\">maps</a>, <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a> &lt; <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* drop this node from the bitmap */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * this was the highest map</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * within the bitmap</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#startbit\">startbit</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     + <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#new\">new</a>), <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#startbit\">startbit</a> = <a class=\"id\" href=\"#bit\">bit</a> - (<a class=\"id\" href=\"#bit\">bit</a> % <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_node_set_bit\">ebitmap_node_set_bit</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this node will be the highest map within the bitmap */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prev\">prev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prev\">prev</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#n\">n</a>, *<a class=\"id\" href=\"#temp\">temp</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#temp\">temp</a> = <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#temp\">temp</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ebitmap_read\">ebitmap_read</a>(struct <a class=\"id\" href=\"#ebitmap\">ebitmap</a> *<a class=\"id\" href=\"#e\">e</a>, void *<a class=\"id\" href=\"#fp\">fp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mapunit\">mapunit</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#startbit\">startbit</a>, <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#buf\">buf</a>[3];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_init\">ebitmap_init</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mapunit\">mapunit</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[0]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[1]);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#buf\">buf</a>[2]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mapunit\">mapunit</a> != sizeof(<a class=\"id\" href=\"#u64\">u64</a>) * 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: ebitmap: map size %u does not \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"match my size %Zd (high bit was %d)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#mapunit\">mapunit</a>, sizeof(<a class=\"id\" href=\"#u64\">u64</a>) * 8, <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* round up e-&gt;highbit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> += <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> -= (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> % <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ok\">ok</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(&amp;<a class=\"id\" href=\"#startbit\">startbit</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u32\">u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: ebitmap: truncated map\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#startbit\">startbit</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#startbit\">startbit</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#startbit\">startbit</a> &amp; (<a class=\"id\" href=\"#mapunit\">mapunit</a> - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: ebitmap start bit (%d) is \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"not a multiple of the map unit size (%u)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#startbit\">startbit</a>, <a class=\"id\" href=\"#mapunit\">mapunit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#startbit\">startbit</a> &gt; <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> - <a class=\"id\" href=\"#mapunit\">mapunit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: ebitmap start bit (%d) is \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"beyond the end of the bitmap (%u)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#startbit\">startbit</a>, (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#highbit\">highbit</a> - <a class=\"id\" href=\"#mapunit\">mapunit</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#n\">n</a> || <a class=\"id\" href=\"#startbit\">startbit</a> >= <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a> + <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ebitmap_node\">ebitmap_node</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#tmp\">tmp</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmp\">tmp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"SELinux: ebitmap: out of memory\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* round down */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#startbit\">startbit</a> = <a class=\"id\" href=\"#startbit\">startbit</a> - (<a class=\"id\" href=\"#startbit\">startbit</a> % <a class=\"id\" href=\"#EBITMAP_SIZE\">EBITMAP_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#startbit\">startbit</a> <= <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: ebitmap: start bit %d\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" comes after start bit %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#startbit\">startbit</a>, <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>(&amp;<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#fp\">fp</a>, sizeof(<a class=\"id\" href=\"#u64\">u64</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"SELinux: ebitmap: truncated map\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#le64_to_cpu\">le64_to_cpu</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = (<a class=\"id\" href=\"#startbit\">startbit</a> - <a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#startbit\">startbit</a>) / <a class=\"id\" href=\"#EBITMAP_UNIT_SIZE\">EBITMAP_UNIT_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#map\">map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a>-><a class=\"id\" href=\"#maps\">maps</a>[<a class=\"id\" href=\"#index\">index</a>++] = <a class=\"id\" href=\"#map\">map</a> &amp; (-1UL);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a> = <a class=\"id\" href=\"#EBITMAP_SHIFT_UNIT_SIZE\">EBITMAP_SHIFT_UNIT_SIZE</a>(<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#ok\">ok</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ebitmap_destroy\">ebitmap_destroy</a>(<a class=\"id\" href=\"#e\">e</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
];
xr_frag_insert('l/24/9519d8fb52fa5bb0ae5c0889454ee232acac5e.xr', __xr_tmp);
