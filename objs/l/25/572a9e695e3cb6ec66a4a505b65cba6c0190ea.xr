var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>RAW sockets for IPv6</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Linux INET6 implementation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pedro Roque<span class=\"ts\"/><span class=\"ts\"/>&lt;roque@di.fc.ul.pt&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Adapted from linux/net/ipv4/raw.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Hideaki YOSHIFUJI<span class=\"ts\"/>:<span class=\"ts\"/>sin6_scope_id support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>YOSHIFUJI,H.@USAGI<span class=\"ts\"/>:<span class=\"ts\"/>raw checksum (RFC2292(bis) compliance)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Kazunori MIYAZAWA @USAGI:<span class=\"ts\"/>change process style to use ip6_append_data</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in6\">in6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#if_arp\">if_arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmpv6\">icmpv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter\">netfilter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv6\">netfilter_ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ioctls\">ioctls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#snmp\">snmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ndisc\">ndisc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_route\">ip6_route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip6_checksum\">ip6_checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#addrconf\">addrconf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#transp_v6\">transp_v6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp_states\">tcp_states</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#mip6\">mip6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute6\">mroute6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#raw\">raw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#rawv6\">rawv6</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#raw_hashinfo\">raw_hashinfo</a> <a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#__RW_LOCK_UNLOCKED\">__RW_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#lock\">lock</a>),", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#__raw_v6_lookup\">__raw_v6_lookup</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#num\">num</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#loc_addr\">loc_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>, int <a class=\"id\" href=\"#dif\">dif</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_multicast\">is_multicast</a> = <a class=\"id\" href=\"#ipv6_addr_is_multicast\">ipv6_addr_is_multicast</a>(<a class=\"id\" href=\"#loc_addr\">loc_addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_for_each_from\">sk_for_each_from</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> == <a class=\"id\" href=\"#num\">num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> != <a class=\"id\" href=\"#dif\">dif</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>, <a class=\"id\" href=\"#loc_addr\">loc_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_multicast\">is_multicast</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inet6_mc_check\">inet6_mc_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#loc_addr\">loc_addr</a>, <a class=\"id\" href=\"#rmt_addr\">rmt_addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#found\">found</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<a class=\"id\" href=\"#found\">found</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0 - deliver</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1 - block</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__inline__\">__inline__</a> int <a class=\"id\" href=\"#icmpv6_filter\">icmpv6_filter</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *<a class=\"id\" href=\"#icmph\">icmph</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#raw6_sock\">raw6_sock</a> *<a class=\"id\" href=\"#rp\">rp</a> = <a class=\"id\" href=\"#raw6_sk\">raw6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pskb_may_pull\">pskb_may_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, sizeof(struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#data\">data</a> = &amp;<a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#filter\">filter</a>.<a class=\"id\" href=\"#data\">data</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bit_nr\">bit_nr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#icmph\">icmph</a> = (struct <a class=\"id\" href=\"#icmp6hdr\">icmp6hdr</a> *) <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_nr\">bit_nr</a> = <a class=\"id\" href=\"#icmph\">icmph</a>-><a class=\"id\" href=\"#icmp6_type\">icmp6_type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#bit_nr\">bit_nr</a> >> 5] &amp; (1 << (<a class=\"id\" href=\"#bit_nr\">bit_nr</a> &amp; 31))) != 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"static int (*<a class=\"id\" href=\"#mh_filter\">mh_filter</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"int <a class=\"id\" href=\"#rawv6_mh_filter_register\">rawv6_mh_filter_register</a>(int (*<a class=\"id\" href=\"#filter\">filter</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>))", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#mh_filter\">mh_filter</a>, <a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rawv6_mh_filter_register\">rawv6_mh_filter_register</a>);", 
"", 
"int <a class=\"id\" href=\"#rawv6_mh_filter_unregister\">rawv6_mh_filter_unregister</a>(int (*<a class=\"id\" href=\"#filter\">filter</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>))", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#mh_filter\">mh_filter</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#synchronize_rcu\">synchronize_rcu</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#rawv6_mh_filter_unregister\">rawv6_mh_filter_unregister</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>demultiplex raw sockets.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(should consider queueing the skb in the sock receive_queue</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>without calling rawv6.c)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Caller owns SKB so we must make clones.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ipv6_raw_deliver\">ipv6_raw_deliver</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#nexthdr\">nexthdr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delivered\">delivered</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#saddr\">saddr</a> + 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_head\">sk_head</a>(&amp;<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#ht\">ht</a>[<a class=\"id\" href=\"#hash\">hash</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#__raw_v6_lookup\">__raw_v6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#iif\">iif</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#filtered\">filtered</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delivered\">delivered</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#nexthdr\">nexthdr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_ICMPV6\">IPPROTO_ICMPV6</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filtered\">filtered</a> = <a class=\"id\" href=\"#icmpv6_filter\">icmpv6_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_MIP6_MODULE\">CONFIG_IPV6_MIP6_MODULE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPPROTO_MH\">IPPROTO_MH</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XXX: To validate MH only once for each packet,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * this is placed here. It should be after checking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * xfrm policy, however it doesn't. The checking xfrm</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * policy is placed in rawv6_rcv() because it is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * required for each socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#filter\">filter</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#mh_filter\">mh_filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filtered\">filtered</a> = <a class=\"id\" href=\"#filter\">filter</a> ? <a class=\"id\" href=\"#filter\">filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>) : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filtered\">filtered</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filtered\">filtered</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#filtered\">filtered</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#clone\">clone</a> = <a class=\"id\" href=\"#skb_clone\">skb_clone</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not releasing hash table! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#clone\">clone</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nf_reset\">nf_reset</a>(<a class=\"id\" href=\"#clone\">clone</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rawv6_rcv\">rawv6_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#clone\">clone</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#__raw_v6_lookup\">__raw_v6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sk_next\">sk_next</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#iif\">iif</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#delivered\">delivered</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#raw6_local_deliver\">raw6_local_deliver</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#nexthdr\">nexthdr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#raw_sk\">raw_sk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_sk\">raw_sk</a> = <a class=\"id\" href=\"#sk_head\">sk_head</a>(&amp;<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#ht\">ht</a>[<a class=\"id\" href=\"#nexthdr\">nexthdr</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1)]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#raw_sk\">raw_sk</a> && !<a class=\"id\" href=\"#ipv6_raw_deliver\">ipv6_raw_deliver</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_sk\">raw_sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#raw_sk\">raw_sk</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/* This cleans up af_inet6 a bit. -DaveM */</span>", 
"static int <a class=\"id\" href=\"#rawv6_bind\">rawv6_bind</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#addr\">addr</a> = (struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *) <a class=\"id\" href=\"#uaddr\">uaddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#v4addr\">v4addr</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> &lt; <a class=\"id\" href=\"#SIN6_LEN_RFC2133\">SIN6_LEN_RFC2133</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Raw sockets are IPv6 only */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if the address belongs to the host. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> != <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> >= sizeof(struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Override any existing binding, if another</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * one is supplied by user.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> = <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Binding to link-local address requires an interface */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_index_rcu\">dev_get_by_index_rcu</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ipv4 addr of the socket is invalid.  Only the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * unspecified and mapped address have a v4 equivalent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v4addr\">v4addr</a> = <a class=\"id\" href=\"#LOOPBACK4_IPV6\">LOOPBACK4_IPV6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>))<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_chk_addr\">ipv6_chk_addr</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dev\">dev</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a> = <a class=\"id\" href=\"#v4addr\">v4addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rcv_saddr\">rcv_saddr</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#rawv6_err\">rawv6_err</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#inet6_skb_parm\">inet6_skb_parm</a> *<a class=\"id\" href=\"#opt\">opt</a>,", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#harderr\">harderr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Report error on raw socket, if:</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   1. User requested recverr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   2. Socket is connected (otherwise the error indication</span>", 
"<span class=\"comment\"><span class=\"ts\"/>      is useless without recverr and error is hard.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#recverr\">recverr</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_ESTABLISHED\">TCP_ESTABLISHED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#harderr\">harderr</a> = <a class=\"id\" href=\"#icmpv6_err_convert\">icmpv6_err_convert</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#code\">code</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ICMPV6_PKT_TOOBIG\">ICMPV6_PKT_TOOBIG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#harderr\">harderr</a> = (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> == <a class=\"id\" href=\"#IPV6_PMTUDISC_DO\">IPV6_PMTUDISC_DO</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#recverr\">recverr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#hdrincl\">hdrincl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_icmp_error\">ipv6_icmp_error</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#err\">err</a>, 0, <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#info\">info</a>), <a class=\"id\" href=\"#payload\">payload</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#recverr\">recverr</a> || <a class=\"id\" href=\"#harderr\">harderr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err\">sk_err</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_report\">sk_error_report</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#raw6_icmp_error\">raw6_icmp_error</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#nexthdr\">nexthdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#code\">code</a>, int <a class=\"id\" href=\"#inner_offset\">inner_offset</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>, *<a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#nexthdr\">nexthdr</a> &amp; (<a class=\"id\" href=\"#RAW_HTABLE_SIZE\">RAW_HTABLE_SIZE</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock\">read_lock</a>(&amp;<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_head\">sk_head</a>(&amp;<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#ht\">ht</a>[<a class=\"id\" href=\"#hash\">hash</a>]);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note: ipv6_hdr(skb) != skb-&gt;data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *<a class=\"id\" href=\"#ip6h\">ip6h</a> = (struct <a class=\"id\" href=\"#ipv6hdr\">ipv6hdr</a> *)<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#saddr\">saddr</a> = &amp;<a class=\"id\" href=\"#ip6h\">ip6h</a>-><a class=\"id\" href=\"#saddr\">saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#daddr\">daddr</a> = &amp;<a class=\"id\" href=\"#ip6h\">ip6h</a>-><a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#__raw_v6_lookup\">__raw_v6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#nexthdr\">nexthdr</a>, <a class=\"id\" href=\"#saddr\">saddr</a>, <a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#iif\">iif</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rawv6_err\">rawv6_err</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#code\">code</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inner_offset\">inner_offset</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_next\">sk_next</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock\">read_unlock</a>(&amp;<a class=\"id\" href=\"#raw_v6_hashinfo\">raw_v6_hashinfo</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rawv6_rcv_skb\">rawv6_rcv_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> * <a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> * <a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#raw6_sk\">raw6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#checksum\">checksum</a> || <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_filter\">sk_filter</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#skb_checksum_complete\">skb_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NET_RX_DROP\">NET_RX_DROP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Charge it to the socket. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ip_queue_rcv_skb\">ip_queue_rcv_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NET_RX_DROP\">NET_RX_DROP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is next to useless...</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if we demultiplex in network layer we don't need the extra call</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>just to queue the skb...</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>maybe we could have the network decide upon a hint if it</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>should call raw_rcv for demultiplexing</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#rawv6_rcv\">rawv6_rcv</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#raw6_sock\">raw6_sock</a> *<a class=\"id\" href=\"#rp\">rp</a> = <a class=\"id\" href=\"#raw6_sk\">raw6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#xfrm6_policy_check\">xfrm6_policy_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#XFRM_POLICY_IN\">XFRM_POLICY_IN</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NET_RX_DROP\">NET_RX_DROP</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rp\">rp</a>-><a class=\"id\" href=\"#checksum\">checksum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_UNNECESSARY\">CHECKSUM_UNNECESSARY</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_COMPLETE\">CHECKSUM_COMPLETE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_postpull_rcsum\">skb_postpull_rcsum</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#skb_network_header_len\">skb_network_header_len</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> = <a class=\"id\" href=\"#CHECKSUM_UNNECESSARY\">CHECKSUM_UNNECESSARY</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = ~<a class=\"id\" href=\"#csum_unfold\">csum_unfold</a>(<a class=\"id\" href=\"#csum_ipv6_magic\">csum_ipv6_magic</a>(&amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#daddr\">daddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>, 0));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#hdrincl\">hdrincl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_checksum_complete\">skb_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NET_RX_DROP\">NET_RX_DROP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rawv6_rcv_skb\">rawv6_rcv_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This should be easy, if there is something there</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>we return it, otherwise we block.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#rawv6_recvmsg\">rawv6_recvmsg</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#msghdr\">msghdr</a> *<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#noblock\">noblock</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int *<a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_pinfo\">ipv6_pinfo</a> *<a class=\"id\" href=\"#np\">np</a> = <a class=\"id\" href=\"#inet6_sk\">inet6_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *<a class=\"id\" href=\"#sin6\">sin6</a> = (struct <a class=\"id\" href=\"#sockaddr_in6\">sockaddr_in6</a> *)<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_name\">msg_name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_OOB\">MSG_OOB</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#addr_len\">addr_len</a>=sizeof(*<a class=\"id\" href=\"#sin6\">sin6</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_ERRQUEUE\">MSG_ERRQUEUE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_recv_error\">ipv6_recv_error</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxpmtu\">rxpmtu</a> && <a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#bits\">bits</a>.<a class=\"id\" href=\"#rxpmtu\">rxpmtu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ipv6_recv_rxpmtu\">ipv6_recv_rxpmtu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_recv_datagram\">skb_recv_datagram</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#noblock\">noblock</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copied\">copied</a> &gt; <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_flags\">msg_flags</a> |= <a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_copy_datagram_iovec\">skb_copy_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>, <a class=\"id\" href=\"#copied\">copied</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_flags\">msg_flags</a>&amp;<a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__skb_checksum_complete\">__skb_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#csum_copy_err\">csum_copy_err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_copy_datagram_iovec\">skb_copy_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>, <a class=\"id\" href=\"#copied\">copied</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_copy_and_csum_datagram_iovec\">skb_copy_and_csum_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#msg\">msg</a>-><a class=\"id\" href=\"#msg_iov\">msg_iov</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#csum_copy_err\">csum_copy_err</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy the address. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sin6\">sin6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_family\">sin6_family</a> = <a class=\"id\" href=\"#AF_INET6\">AF_INET6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_port\">sin6_port</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>, &amp;<a class=\"id\" href=\"#ipv6_hdr\">ipv6_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#saddr\">saddr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_flowinfo\">sin6_flowinfo</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_addr\">sin6_addr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin6\">sin6</a>-><a class=\"id\" href=\"#sin6_scope_id\">sin6_scope_id</a> = <a class=\"id\" href=\"#IP6CB\">IP6CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#iif\">iif</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_recv_ts_and_drops\">sock_recv_ts_and_drops</a>(<a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#np\">np</a>-><a class=\"id\" href=\"#rxopt\">rxopt</a>.<a class=\"id\" href=\"#all\">all</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datagram_recv_ctl\">datagram_recv_ctl</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#msg\">msg</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#MSG_TRUNC\">MSG_TRUNC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_free_datagram\">skb_free_datagram</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#csum_copy_err\">csum_copy_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_kill_datagram\">skb_kill_datagram</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Error for blocking case is chosen to masquerade</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   as some normal condition.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = (<a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#MSG_DONTWAIT\">MSG_DONTWAIT</a>) ? -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> : -<a class=\"id\" href=\"#EHOSTUNREACH\">EHOSTUNREACH</a>;", 
];
xr_frag_insert('l/25/572a9e695e3cb6ec66a4a505b65cba6c0190ea.xr', __xr_tmp);
