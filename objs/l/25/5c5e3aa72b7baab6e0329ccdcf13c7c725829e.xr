var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  thermal.h  ($Revision: 0 $)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2008  Intel Corp</span>", 
"<span class=\"comment\"> *  Copyright (C) 2008  Zhang Rui &lt;rui.zhang@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2008  Sujith Thomas &lt;sujith.thomas@intel.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; version 2 of the License.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> *  WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> *  General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License along</span>", 
"<span class=\"comment\"> *  with this program; if not, write to the Free Software Foundation, Inc.,</span>", 
"<span class=\"comment\"> *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__THERMAL_H__\">__THERMAL_H__</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__THERMAL_H__\">__THERMAL_H__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#idr\">idr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a>;", 
"struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a>;", 
"", 
"enum <a class=\"id\" href=\"#thermal_device_mode\">thermal_device_mode</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_DEVICE_DISABLED\">THERMAL_DEVICE_DISABLED</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_DEVICE_ENABLED\">THERMAL_DEVICE_ENABLED</a>,", 
"};", 
"", 
"enum <a class=\"id\" href=\"#thermal_trip_type\">thermal_trip_type</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_TRIP_ACTIVE\">THERMAL_TRIP_ACTIVE</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_TRIP_PASSIVE\">THERMAL_TRIP_PASSIVE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_TRIP_HOT\">THERMAL_TRIP_HOT</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_TRIP_CRITICAL\">THERMAL_TRIP_CRITICAL</a>,", 
"};", 
"", 
"struct <a class=\"id\" href=\"#thermal_zone_device_ops\">thermal_zone_device_ops</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#bind\">bind</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#unbind\">unbind</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_temp\">get_temp</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *, unsigned long *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_mode\">get_mode</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#thermal_device_mode\">thermal_device_mode</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#set_mode\">set_mode</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#thermal_device_mode\">thermal_device_mode</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_trip_type\">get_trip_type</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *, int,", 
"<span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#thermal_trip_type\">thermal_trip_type</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_trip_temp\">get_trip_temp</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *, int,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_crit_temp\">get_crit_temp</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *, unsigned long *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#notify\">notify</a>) (struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> *, int,", 
"<span class=\"ts\"/><span class=\"ts\"/>       enum <a class=\"id\" href=\"#thermal_trip_type\">thermal_trip_type</a>);", 
"};", 
"", 
"struct <a class=\"id\" href=\"#thermal_cooling_device_ops\">thermal_cooling_device_ops</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_max_state\">get_max_state</a>) (struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *, unsigned long *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#get_cur_state\">get_cur_state</a>) (struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *, unsigned long *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#set_cur_state\">set_cur_state</a>) (struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> *, unsigned long);", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#THERMAL_TRIPS_NONE\">THERMAL_TRIPS_NONE</a> -1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#THERMAL_MAX_TRIPS\">THERMAL_MAX_TRIPS</a> 12", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#THERMAL_NAME_LENGTH\">THERMAL_NAME_LENGTH</a> 20", 
"struct <a class=\"id\" href=\"#thermal_cooling_device\">thermal_cooling_device</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#THERMAL_NAME_LENGTH\">THERMAL_NAME_LENGTH</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> <a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#devdata\">devdata</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thermal_cooling_device_ops\">thermal_cooling_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KELVIN_TO_CELSIUS\">KELVIN_TO_CELSIUS</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>(long)(((long)<a class=\"id\" href=\"#t\">t</a>-2732 >= 0) ?<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((long)<a class=\"id\" href=\"#t\">t</a>-2732+5)/10 : ((long)<a class=\"id\" href=\"#t\">t</a>-2732-5)/10)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CELSIUS_TO_KELVIN\">CELSIUS_TO_KELVIN</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#t\">t</a>)*10+2732)", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_THERMAL_HWMON\">CONFIG_THERMAL_HWMON</a>)", 
"<span class=\"comment\">/* thermal zone devices with the same type share one hwmon device */</span>", 
"struct <a class=\"id\" href=\"#thermal_hwmon_device\">thermal_hwmon_device</a> {", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#THERMAL_NAME_LENGTH\">THERMAL_NAME_LENGTH</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#tz_list\">tz_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#thermal_hwmon_attr\">thermal_hwmon_attr</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> <a class=\"id\" href=\"#attr\">attr</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#name\">name</a>[16];", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"struct <a class=\"id\" href=\"#thermal_zone_device\">thermal_zone_device</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#THERMAL_NAME_LENGTH\">THERMAL_NAME_LENGTH</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> <a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#devdata\">devdata</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#trips\">trips</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tc1\">tc1</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tc2\">tc2</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#passive_delay\">passive_delay</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#polling_delay\">polling_delay</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#last_temperature\">last_temperature</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#passive\">passive</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#forced_passive\">forced_passive</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thermal_zone_device_ops\">thermal_zone_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#cooling_devices\">cooling_devices</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#idr\">idr</a> <a class=\"id\" href=\"#idr\">idr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#lock\">lock</a>;<span class=\"ts\"/><span class=\"comment\">/* protect cooling devices list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> <a class=\"id\" href=\"#poll_queue\">poll_queue</a>;", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_THERMAL_HWMON\">CONFIG_THERMAL_HWMON</a>)", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#hwmon_node\">hwmon_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thermal_hwmon_device\">thermal_hwmon_device</a> *<a class=\"id\" href=\"#hwmon\">hwmon</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thermal_hwmon_attr\">thermal_hwmon_attr</a> <a class=\"id\" href=\"#temp_input\">temp_input</a>;<span class=\"ts\"/><span class=\"comment\">/* hwmon sys attr */</span>", 
];
xr_frag_insert('l/25/5c5e3aa72b7baab6e0329ccdcf13c7c725829e.xr', __xr_tmp);
