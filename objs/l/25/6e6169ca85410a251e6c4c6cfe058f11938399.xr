var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Definitions for the RAW-IP module.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Version:<span class=\"ts\"/>@(#)raw.h<span class=\"ts\"/>1.0.2<span class=\"ts\"/>05/07/93</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author:<span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_RAW_H\">_RAW_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_RAW_H\">_RAW_H</a>", 
"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern struct <a class=\"id\" href=\"#proto\">proto</a> <a class=\"id\" href=\"#raw_prot\">raw_prot</a>;", 
"", 
"void <a class=\"id\" href=\"#raw_icmp_error\">raw_icmp_error</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, int, <a class=\"id\" href=\"#u32\">u32</a>);", 
"int <a class=\"id\" href=\"#raw_local_deliver\">raw_local_deliver</a>(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *, int);", 
"", 
"extern int <span class=\"ts\"/><a class=\"id\" href=\"#raw_rcv\">raw_rcv</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAW_HTABLE_SIZE\">RAW_HTABLE_SIZE</a><span class=\"ts\"/><a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a>", 
"", 
"struct <a class=\"id\" href=\"#raw_hashinfo\">raw_hashinfo</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_t\">rwlock_t</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> <a class=\"id\" href=\"#ht\">ht</a>[<a class=\"id\" href=\"#RAW_HTABLE_SIZE\">RAW_HTABLE_SIZE</a>];", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROC_FS\">CONFIG_PROC_FS</a>", 
"extern int  <a class=\"id\" href=\"#raw_proc_init\">raw_proc_init</a>(void);", 
"extern void <a class=\"id\" href=\"#raw_proc_exit\">raw_proc_exit</a>(void);", 
"", 
"struct <a class=\"id\" href=\"#raw_iter_state\">raw_iter_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_net_private\">seq_net_private</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bucket\">bucket</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#raw_hashinfo\">raw_hashinfo</a> *<a class=\"id\" href=\"#h\">h</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#raw_seq_private\">raw_seq_private</a>(<a class=\"id\" href=\"#seq\">seq</a>) ((struct <a class=\"id\" href=\"#raw_iter_state\">raw_iter_state</a> *)(<a class=\"id\" href=\"#seq\">seq</a>)-><a class=\"id\" href=\"#private\">private</a>)", 
"void *<a class=\"id\" href=\"#raw_seq_start\">raw_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>);", 
"void *<a class=\"id\" href=\"#raw_seq_next\">raw_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>);", 
"void <a class=\"id\" href=\"#raw_seq_stop\">raw_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"int <a class=\"id\" href=\"#raw_seq_open\">raw_seq_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#ino\">ino</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#raw_hashinfo\">raw_hashinfo</a> *<a class=\"id\" href=\"#h\">h</a>, const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *<a class=\"id\" href=\"#ops\">ops</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#raw_hash_sk\">raw_hash_sk</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"void <a class=\"id\" href=\"#raw_unhash_sk\">raw_unhash_sk</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"struct <a class=\"id\" href=\"#raw_sock\">raw_sock</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* inet_sock has to be the first member */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a>   <a class=\"id\" href=\"#inet\">inet</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#icmp_filter\">icmp_filter</a> <a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ipmr_table\">ipmr_table</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#raw_sock\">raw_sock</a> *<a class=\"id\" href=\"#raw_sk\">raw_sk</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>return (struct <a class=\"id\" href=\"#raw_sock\">raw_sock</a> *)<a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _RAW_H */</span>", 
];
xr_frag_insert('l/25/6e6169ca85410a251e6c4c6cfe058f11938399.xr', __xr_tmp);
