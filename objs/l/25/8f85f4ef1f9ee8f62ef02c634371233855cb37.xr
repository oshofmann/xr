var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: nsrepair - Repair for objects returned by predefined methods</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acpredef.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_NAMESPACE\">ACPI_NAMESPACE</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"nsrepair\")", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This module attempts to repair or convert objects returned by the</span>", 
"<span class=\"comment\"> * predefined methods to an object type that is expected, as per the ACPI</span>", 
"<span class=\"comment\"> * specification. The need for this code is dictated by the many machines that</span>", 
"<span class=\"comment\"> * return incorrect types for the standard predefined methods. Performing these</span>", 
"<span class=\"comment\"> * conversions here, in one place, eliminates the need for individual ACPI</span>", 
"<span class=\"comment\"> * device drivers to do the same. Note: Most of these conversions are different</span>", 
"<span class=\"comment\"> * than the internal object conversion routines used for implicit object</span>", 
"<span class=\"comment\"> * conversion.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The following conversions can be performed as necessary:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Integer -&gt; String</span>", 
"<span class=\"comment\"> * Integer -&gt; Buffer</span>", 
"<span class=\"comment\"> * String  -&gt; Integer</span>", 
"<span class=\"comment\"> * String  -&gt; Buffer</span>", 
"<span class=\"comment\"> * Buffer  -&gt; Integer</span>", 
"<span class=\"comment\"> * Buffer  -&gt; String</span>", 
"<span class=\"comment\"> * Buffer  -&gt; Package of Integers</span>", 
"<span class=\"comment\"> * Package -&gt; Package of one Package</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Additional possible repairs:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Optional/unnecessary NULL package elements removed</span>", 
"<span class=\"comment\"> * Required package elements that are NULL replaced by Integer/String/Buffer</span>", 
"<span class=\"comment\"> * Incorrect standalone package wrapped with required outer package</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_integer\">acpi_ns_convert_to_integer</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>);", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_string\">acpi_ns_convert_to_string</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>);", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_buffer\">acpi_ns_convert_to_buffer</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>);", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_package\">acpi_ns_convert_to_package</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_repair_object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data                - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              expected_btypes     - Object types expected</span>", 
"<span class=\"comment\"> *              package_index       - Index of object within parent package (if</span>", 
"<span class=\"comment\"> *                                    applicable - ACPI_NOT_PACKAGE_ELEMENT</span>", 
"<span class=\"comment\"> *                                    otherwise)</span>", 
"<span class=\"comment\"> *              return_object_ptr   - Pointer to the object returned from the</span>", 
"<span class=\"comment\"> *                                    evaluation of a method or object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status. AE_OK if repair was successful.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Attempt to repair/convert a return object of a type that was</span>", 
"<span class=\"comment\"> *              not expected.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_repair_object\">acpi_ns_repair_object</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#package_index\">package_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#return_object\">return_object</a> = *<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ns_repair_object\">ns_repair_object</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * At this point, we know that the type of the returned object was not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * one of the expected types for this predefined name. Attempt to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * repair the object by converting it to one of the expected object</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * types for this predefined name.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_INTEGER\">ACPI_RTYPE_INTEGER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_convert_to_integer\">acpi_ns_convert_to_integer</a>(<a class=\"id\" href=\"#return_object\">return_object</a>, &amp;<a class=\"id\" href=\"#new_object\">new_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#object_repaired\">object_repaired</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_STRING\">ACPI_RTYPE_STRING</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_convert_to_string\">acpi_ns_convert_to_string</a>(<a class=\"id\" href=\"#return_object\">return_object</a>, &amp;<a class=\"id\" href=\"#new_object\">new_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#object_repaired\">object_repaired</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_BUFFER\">ACPI_RTYPE_BUFFER</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_convert_to_buffer\">acpi_ns_convert_to_buffer</a>(<a class=\"id\" href=\"#return_object\">return_object</a>, &amp;<a class=\"id\" href=\"#new_object\">new_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#object_repaired\">object_repaired</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_PACKAGE\">ACPI_RTYPE_PACKAGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ns_convert_to_package\">acpi_ns_convert_to_package</a>(<a class=\"id\" href=\"#return_object\">return_object</a>, &amp;<a class=\"id\" href=\"#new_object\">new_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#object_repaired\">object_repaired</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We cannot repair this object */</span>", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"", 
"      <a class=\"id\" href=\"#object_repaired\">object_repaired</a>:", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Object was successfully repaired */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the original object is a package element, we need to:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1. Set the reference count of the new object to match the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *    reference count of the old object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2. Decrement the reference count of the original object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#package_index\">package_index</a> != <a class=\"id\" href=\"#ACPI_NOT_PACKAGE_ELEMENT\">ACPI_NOT_PACKAGE_ELEMENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_object\">return_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_REPAIR\">ACPI_DB_REPAIR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s: Converted %s to expected %s at index %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#return_object\">return_object</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#new_object\">new_object</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#package_index\">package_index</a>));", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_REPAIR\">ACPI_DB_REPAIR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s: Converted %s to expected %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#return_object\">return_object</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#new_object\">new_object</a>)));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete old object, install the new return object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#return_object\">return_object</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a> = <a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ACPI_OBJECT_REPAIRED\">ACPI_OBJECT_REPAIRED</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_convert_to_integer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  original_object     - Object to be converted</span>", 
"<span class=\"comment\"> *              return_object       - Where the new converted object is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status. AE_OK if conversion was successful.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Attempt to convert a String/Buffer object to an Integer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_integer\">acpi_ns_convert_to_integer</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#value\">value</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* String-to-Integer conversion */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_strtoul64\">acpi_ut_strtoul64</a>(<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_ANY_BASE\">ACPI_ANY_BASE</a>, &amp;<a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Buffer-to-Integer conversion. Max buffer size is 64 bits. */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> &gt; 8) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Extract each buffer byte to create the integer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#u64\">u64</a>) <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#pointer\">pointer</a>[<a class=\"id\" href=\"#i\">i</a>] << (<a class=\"id\" href=\"#i\">i</a> * 8));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_integer_object\">acpi_ut_create_integer_object</a>(<a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_object\">new_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_object\">return_object</a> = <a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_convert_to_string</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  original_object     - Object to be converted</span>", 
"<span class=\"comment\"> *              return_object       - Where the new converted object is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status. AE_OK if conversion was successful.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Attempt to convert a Integer/Buffer object to a String.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_string\">acpi_ns_convert_to_string</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_size\">acpi_size</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Integer-to-String conversion. Commonly, convert</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * an integer of value 0 to a NULL string. The last element of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * _BIF and _BIX packages occasionally need this fix.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> == 0) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allocate a new NULL string object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_string_object\">acpi_ut_create_string_object</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_object\">new_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_convert_to_string\">acpi_ex_convert_to_string</a>(<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#new_object\">new_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ACPI_IMPLICIT_CONVERT_HEX\">ACPI_IMPLICIT_CONVERT_HEX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Buffer-to-String conversion. Use a to_string</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * conversion, no transform performed on the buffer data. The best</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * example of this is the _BIF method, where the string data from</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the battery is often (incorrectly) returned as buffer object(s).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#length\">length</a> &lt; <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>[<a class=\"id\" href=\"#length\">length</a>])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allocate a new string object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_string_object\">acpi_ut_create_string_object</a>(<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_object\">new_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Copy the raw buffer data with no transform. String is already NULL</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * terminated at Length+1.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#new_object\">new_object</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_object\">return_object</a> = <a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_convert_to_buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  original_object     - Object to be converted</span>", 
"<span class=\"comment\"> *              return_object       - Where the new converted object is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status. AE_OK if conversion was successful.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Attempt to convert a Integer/String/Package object to a Buffer.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_buffer\">acpi_ns_convert_to_buffer</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#dword_buffer\">dword_buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Integer-to-Buffer conversion.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Convert the Integer to a packed-byte buffer. _MAT and other</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * objects need this sometimes, if a read has been performed on a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Field object that is less than or equal to the global integer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * size (32 or 64 bits).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_convert_to_buffer\">acpi_ex_convert_to_buffer</a>(<a class=\"id\" href=\"#original_object\">original_object</a>, &amp;<a class=\"id\" href=\"#new_object\">new_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_STRING\">ACPI_TYPE_STRING</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* String-to-Buffer conversion. Simple data copy */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_create_buffer_object\">acpi_ut_create_buffer_object</a>(<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#string\">string</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_object\">new_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#new_object\">new_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This case is often seen for predefined names that must return a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Buffer object with multiple DWORD integers within. For example,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * _FDE and _GTM. The Package can be converted to a Buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All elements of the Package must be integers */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a> = <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((!*<a class=\"id\" href=\"#elements\">elements</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((*<a class=\"id\" href=\"#elements\">elements</a>)-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Create the new buffer object to replace the Package */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_buffer_object\">acpi_ut_create_buffer_object</a>(<a class=\"id\" href=\"#ACPI_MUL_4\">ACPI_MUL_4</a>(<a class=\"id\" href=\"#count\">count</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_object\">new_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Copy the package elements (integers) to the buffer as DWORDs */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a> = <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dword_buffer\">dword_buffer</a> = <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#new_object\">new_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dword_buffer\">dword_buffer</a> = (<a class=\"id\" href=\"#u32\">u32</a>) (*<a class=\"id\" href=\"#elements\">elements</a>)-><a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dword_buffer\">dword_buffer</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_object\">return_object</a> = <a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_convert_to_package</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  original_object     - Object to be converted</span>", 
"<span class=\"comment\"> *              return_object       - Where the new converted object is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status. AE_OK if conversion was successful.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Attempt to convert a Buffer object to a Package. Each byte of</span>", 
"<span class=\"comment\"> *              the buffer is converted to a single integer package element.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_convert_to_package\">acpi_ns_convert_to_package</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#original_object\">original_object</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object\">return_object</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Buffer-to-Package conversion */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_package_object\">acpi_ut_create_package_object</a>(<a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_object\">new_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Convert each buffer byte to an integer package element */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a> = <a class=\"id\" href=\"#new_object\">new_object</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#original_object\">original_object</a>-><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#length\">length</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#elements\">elements</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_create_integer_object\">acpi_ut_create_integer_object</a>((<a class=\"id\" href=\"#u64\">u64</a>) *<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#elements\">elements</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#new_object\">new_object</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#elements\">elements</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_object\">return_object</a> = <a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_repair_null_element</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data                - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              expected_btypes     - Object types expected</span>", 
"<span class=\"comment\"> *              package_index       - Index of object within parent package (if</span>", 
"<span class=\"comment\"> *                                    applicable - ACPI_NOT_PACKAGE_ELEMENT</span>", 
"<span class=\"comment\"> *                                    otherwise)</span>", 
"<span class=\"comment\"> *              return_object_ptr   - Pointer to the object returned from the</span>", 
"<span class=\"comment\"> *                                    evaluation of a method or object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status. AE_OK if repair was successful.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Attempt to repair a NULL element of a returned Package object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_repair_null_element\">acpi_ns_repair_null_element</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#expected_btypes\">expected_btypes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#package_index\">package_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#return_object\">return_object</a> = *<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#new_object\">new_object</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ns_repair_null_element\">ns_repair_null_element</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No repair needed if return object is non-NULL */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#return_object\">return_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Attempt to repair a NULL element of a Package object. This applies to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * predefined names that return a fixed-length package and each element</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is required. It does not apply to variable-length packages where NULL</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * elements are allowed, especially at the end of the package.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_INTEGER\">ACPI_RTYPE_INTEGER</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Need an Integer - create a zero-value integer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_integer_object\">acpi_ut_create_integer_object</a>((<a class=\"id\" href=\"#u64\">u64</a>)0);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_STRING\">ACPI_RTYPE_STRING</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Need a String - create a NULL string */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_string_object\">acpi_ut_create_string_object</a>(0);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#expected_btypes\">expected_btypes</a> &amp; <a class=\"id\" href=\"#ACPI_RTYPE_BUFFER\">ACPI_RTYPE_BUFFER</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Need a Buffer - create a zero-length buffer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a> = <a class=\"id\" href=\"#acpi_ut_create_buffer_object\">acpi_ut_create_buffer_object</a>(0);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Error for all other expected types */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_object\">new_object</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the reference count according to the parent Package object */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_object\">new_object</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#parent_package\">parent_package</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#reference_count\">reference_count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_REPAIR\">ACPI_DB_REPAIR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s: Converted NULL package element to expected %s at index %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_object_type_name\">acpi_ut_get_object_type_name</a>(<a class=\"id\" href=\"#new_object\">new_object</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#package_index\">package_index</a>));", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_object_ptr\">return_object_ptr</a> = <a class=\"id\" href=\"#new_object\">new_object</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ACPI_OBJECT_REPAIRED\">ACPI_OBJECT_REPAIRED</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_remove_null_elements</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data                - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              package_type        - An acpi_return_package_types value</span>", 
"<span class=\"comment\"> *              obj_desc            - A Package object</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Remove all NULL package elements from packages that contain</span>", 
"<span class=\"comment\"> *              a variable number of sub-packages. For these types of</span>", 
"<span class=\"comment\"> *              packages, NULL elements can be safely removed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"void", 
"<a class=\"id\" href=\"#acpi_ns_remove_null_elements\">acpi_ns_remove_null_elements</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#package_type\">package_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#dest\">dest</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#new_count\">new_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ns_remove_null_elements\">ns_remove_null_elements</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PTYPE1 packages contain no subpackages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PTYPE2 packages contain a variable number of sub-packages. We can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * safely remove all NULL elements from the PTYPE2 packages.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#package_type\">package_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE1_FIXED\">ACPI_PTYPE1_FIXED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE1_VAR\">ACPI_PTYPE1_VAR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE1_OPTION\">ACPI_PTYPE1_OPTION</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2\">ACPI_PTYPE2</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_COUNT\">ACPI_PTYPE2_COUNT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_PKG_COUNT\">ACPI_PTYPE2_PKG_COUNT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_FIXED\">ACPI_PTYPE2_FIXED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_MIN\">ACPI_PTYPE2_MIN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_PTYPE2_REV_FIXED\">ACPI_PTYPE2_REV_FIXED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_count\">new_count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#source\">source</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a> = <a class=\"id\" href=\"#source\">source</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Examine all elements of the package object, remove nulls */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#source\">source</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_count\">new_count</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dest\">dest</a> = *<a class=\"id\" href=\"#source\">source</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest\">dest</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#source\">source</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update parent package if any null elements were removed */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_count\">new_count</a> &lt; <a class=\"id\" href=\"#count\">count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_REPAIR\">ACPI_DB_REPAIR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s: Found and removed %u NULL elements\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>, (<a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#new_count\">new_count</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NULL terminate list and update the package count */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dest\">dest</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#new_count\">new_count</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ns_repair_package_list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Data                - Pointer to validation data structure</span>", 
"<span class=\"comment\"> *              obj_desc_ptr        - Pointer to the object to repair. The new</span>", 
"<span class=\"comment\"> *                                    package object is returned here,</span>", 
"<span class=\"comment\"> *                                    overwriting the old object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status, new object in *obj_desc_ptr</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Repair a common problem with objects that are defined to return</span>", 
"<span class=\"comment\"> *              a variable-length Package of Packages. If the variable-length</span>", 
"<span class=\"comment\"> *              is one, some BIOS code mistakenly simply declares a single</span>", 
"<span class=\"comment\"> *              Package instead of a Package with one sub-Package. This</span>", 
"<span class=\"comment\"> *              function attempts to repair this error by wrapping a Package</span>", 
"<span class=\"comment\"> *              object around the original Package, creating the correct</span>", 
"<span class=\"comment\"> *              Package with one sub-Package.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *              Names that can be repaired in this manner include:</span>", 
"<span class=\"comment\"> *              _ALR, _CSD, _HPX, _MLS, _PRT, _PSS, _TRT, TSS</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ns_repair_package_list\">acpi_ns_repair_package_list</a>(struct <a class=\"id\" href=\"#acpi_predefined_data\">acpi_predefined_data</a> *<a class=\"id\" href=\"#data\">data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#obj_desc_ptr\">obj_desc_ptr</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#pkg_obj_desc\">pkg_obj_desc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ns_repair_package_list\">ns_repair_package_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Create the new outer package and populate it. The new package will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have a single element, the lone subpackage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkg_obj_desc\">pkg_obj_desc</a> = <a class=\"id\" href=\"#acpi_ut_create_package_object\">acpi_ut_create_package_object</a>(1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pkg_obj_desc\">pkg_obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pkg_obj_desc\">pkg_obj_desc</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[0] = *<a class=\"id\" href=\"#obj_desc_ptr\">obj_desc_ptr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return the new object in the object pointer */</span>", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#obj_desc_ptr\">obj_desc_ptr</a> = <a class=\"id\" href=\"#pkg_obj_desc\">pkg_obj_desc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ACPI_OBJECT_REPAIRED\">ACPI_OBJECT_REPAIRED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_REPAIR\">ACPI_DB_REPAIR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s: Repaired incorrectly formed Package\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#pathname\">pathname</a>));", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
];
xr_frag_insert('l/25/8f85f4ef1f9ee8f62ef02c634371233855cb37.xr', __xr_tmp);
