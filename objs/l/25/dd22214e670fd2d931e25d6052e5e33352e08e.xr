var __xr_tmp = [
"", 
"<a class=\"id\" href=\"#err_unlock\">err_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Process a futex-list entry, check whether it's owned by the</span>", 
"<span class=\"comment\"> * dying task, and do notification if so:</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#handle_futex_death\">handle_futex_death</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a>, int <a class=\"id\" href=\"#pi\">pi</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#uval\">uval</a>, <a class=\"id\" href=\"#nval\">nval</a>, <a class=\"id\" href=\"#mval\">mval</a>;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#uval\">uval</a>, <a class=\"id\" href=\"#uaddr\">uaddr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#uval\">uval</a> &amp; <a class=\"id\" href=\"#FUTEX_TID_MASK\">FUTEX_TID_MASK</a>) == <a class=\"id\" href=\"#task_pid_vnr\">task_pid_vnr</a>(<a class=\"id\" href=\"#curr\">curr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ok, this dying thread is truly holding a futex</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of interest. Set the OWNER_DIED bit atomically</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * via cmpxchg, and if the value had FUTEX_WAITERS</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * set, wake up a waiter (if any). (We have to do a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * futex_wake() even if OWNER_DIED is already set -</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to handle the rare but possible case of recursive</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * thread-death.) The rest of the cleanup is done in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * userspace.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mval\">mval</a> = (<a class=\"id\" href=\"#uval\">uval</a> &amp; <a class=\"id\" href=\"#FUTEX_WAITERS\">FUTEX_WAITERS</a>) | <a class=\"id\" href=\"#FUTEX_OWNER_DIED\">FUTEX_OWNER_DIED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nval\">nval</a> = <a class=\"id\" href=\"#futex_atomic_cmpxchg_inatomic\">futex_atomic_cmpxchg_inatomic</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#uval\">uval</a>, <a class=\"id\" href=\"#mval\">mval</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nval\">nval</a> == -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nval\">nval</a> != <a class=\"id\" href=\"#uval\">uval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Wake robust non-PI futexes here. The wakeup of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * PI futexes happens in exit_pi_state():</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pi\">pi</a> && (<a class=\"id\" href=\"#uval\">uval</a> &amp; <a class=\"id\" href=\"#FUTEX_WAITERS\">FUTEX_WAITERS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#futex_wake\">futex_wake</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, 1, 1, <a class=\"id\" href=\"#FUTEX_BITSET_MATCH_ANY\">FUTEX_BITSET_MATCH_ANY</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fetch a robust-list pointer. Bit 0 signals PI futexes:</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#fetch_robust_entry\">fetch_robust_entry</a>(struct <a class=\"id\" href=\"#robust_list\">robust_list</a> <a class=\"id\" href=\"#__user\">__user</a> **<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#robust_list\">robust_list</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int *<a class=\"id\" href=\"#pi\">pi</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#uentry\">uentry</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#uentry\">uentry</a>, (unsigned long <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#head\">head</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#entry\">entry</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)(<a class=\"id\" href=\"#uentry\">uentry</a> &amp; ~1UL);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#pi\">pi</a> = <a class=\"id\" href=\"#uentry\">uentry</a> &amp; 1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Walk curr-&gt;robust_list (very carefully, it's a userspace list!)</span>", 
"<span class=\"comment\"> * and mark any locks found there dead, and notify any waiters.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We silently return on any sign of list-walking problem.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#exit_robust_list\">exit_robust_list</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#robust_list_head\">robust_list_head</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#robust_list\">robust_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#robust_list\">robust_list</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#entry\">entry</a>, *<a class=\"id\" href=\"#next_entry\">next_entry</a>, *<a class=\"id\" href=\"#pending\">pending</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#ROBUST_LIST_LIMIT\">ROBUST_LIST_LIMIT</a>, <a class=\"id\" href=\"#pi\">pi</a>, <a class=\"id\" href=\"#next_pi\">next_pi</a>, <a class=\"id\" href=\"#pip\">pip</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#futex_offset\">futex_offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#futex_cmpxchg_enabled\">futex_cmpxchg_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fetch the list head (which was registered earlier, via</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sys_set_robust_list()):</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fetch_robust_entry\">fetch_robust_entry</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#pi\">pi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fetch the relative futex offset:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#futex_offset\">futex_offset</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#futex_offset\">futex_offset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Fetch any possibly pending lock-add first, and handle it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if it exists:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fetch_robust_entry\">fetch_robust_entry</a>(&amp;<a class=\"id\" href=\"#pending\">pending</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#list_op_pending\">list_op_pending</a>, &amp;<a class=\"id\" href=\"#pip\">pip</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_entry\">next_entry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;<span class=\"ts\"/><span class=\"comment\">/* avoid warning with gcc */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#entry\">entry</a> != &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Fetch the next entry in the list before calling</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * handle_futex_death:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#fetch_robust_entry\">fetch_robust_entry</a>(&amp;<a class=\"id\" href=\"#next_entry\">next_entry</a>, &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#next_pi\">next_pi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * A pending lock might already be on the list, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * don't process it twice:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a> != <a class=\"id\" href=\"#pending\">pending</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#handle_futex_death\">handle_futex_death</a>((void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#entry\">entry</a> + <a class=\"id\" href=\"#futex_offset\">futex_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curr\">curr</a>, <a class=\"id\" href=\"#pi\">pi</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#next_entry\">next_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a> = <a class=\"id\" href=\"#next_pi\">next_pi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Avoid excessively long or circular lists:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!--<a class=\"id\" href=\"#limit\">limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cond_resched\">cond_resched</a>();", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pending\">pending</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle_futex_death\">handle_futex_death</a>((void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#pending\">pending</a> + <a class=\"id\" href=\"#futex_offset\">futex_offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#curr\">curr</a>, <a class=\"id\" href=\"#pip\">pip</a>);", 
"}", 
"", 
"long <a class=\"id\" href=\"#do_futex\">do_futex</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#ktime_t\">ktime_t</a> *<a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uaddr2\">uaddr2</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val2\">val2</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val3\">val3</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#clockrt\">clockrt</a>, <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#op\">op</a> &amp; <a class=\"id\" href=\"#FUTEX_CMD_MASK\">FUTEX_CMD_MASK</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fshared\">fshared</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#op\">op</a> &amp; <a class=\"id\" href=\"#FUTEX_PRIVATE_FLAG\">FUTEX_PRIVATE_FLAG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fshared\">fshared</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clockrt\">clockrt</a> = <a class=\"id\" href=\"#op\">op</a> &amp; <a class=\"id\" href=\"#FUTEX_CLOCK_REALTIME\">FUTEX_CLOCK_REALTIME</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#clockrt\">clockrt</a> && <a class=\"id\" href=\"#cmd\">cmd</a> != <a class=\"id\" href=\"#FUTEX_WAIT_BITSET\">FUTEX_WAIT_BITSET</a> && <a class=\"id\" href=\"#cmd\">cmd</a> != <a class=\"id\" href=\"#FUTEX_WAIT_REQUEUE_PI\">FUTEX_WAIT_REQUEUE_PI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_WAIT\">FUTEX_WAIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val3\">val3</a> = <a class=\"id\" href=\"#FUTEX_BITSET_MATCH_ANY\">FUTEX_BITSET_MATCH_ANY</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_WAIT_BITSET\">FUTEX_WAIT_BITSET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_wait\">futex_wait</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#val3\">val3</a>, <a class=\"id\" href=\"#clockrt\">clockrt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_WAKE\">FUTEX_WAKE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val3\">val3</a> = <a class=\"id\" href=\"#FUTEX_BITSET_MATCH_ANY\">FUTEX_BITSET_MATCH_ANY</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_WAKE_BITSET\">FUTEX_WAKE_BITSET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_wake\">futex_wake</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#val3\">val3</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_REQUEUE\">FUTEX_REQUEUE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_requeue\">futex_requeue</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#uaddr2\">uaddr2</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#val2\">val2</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE\">FUTEX_CMP_REQUEUE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_requeue\">futex_requeue</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#uaddr2\">uaddr2</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#val2\">val2</a>, &amp;<a class=\"id\" href=\"#val3\">val3</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_WAKE_OP\">FUTEX_WAKE_OP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_wake_op\">futex_wake_op</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#uaddr2\">uaddr2</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#val2\">val2</a>, <a class=\"id\" href=\"#val3\">val3</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_LOCK_PI\">FUTEX_LOCK_PI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#futex_cmpxchg_enabled\">futex_cmpxchg_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_lock_pi\">futex_lock_pi</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#timeout\">timeout</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_UNLOCK_PI\">FUTEX_UNLOCK_PI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#futex_cmpxchg_enabled\">futex_cmpxchg_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_unlock_pi\">futex_unlock_pi</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_TRYLOCK_PI\">FUTEX_TRYLOCK_PI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#futex_cmpxchg_enabled\">futex_cmpxchg_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_lock_pi\">futex_lock_pi</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, 0, <a class=\"id\" href=\"#timeout\">timeout</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_WAIT_REQUEUE_PI\">FUTEX_WAIT_REQUEUE_PI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val3\">val3</a> = <a class=\"id\" href=\"#FUTEX_BITSET_MATCH_ANY\">FUTEX_BITSET_MATCH_ANY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_wait_requeue_pi\">futex_wait_requeue_pi</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#val3\">val3</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#clockrt\">clockrt</a>, <a class=\"id\" href=\"#uaddr2\">uaddr2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE_PI\">FUTEX_CMP_REQUEUE_PI</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#futex_requeue\">futex_requeue</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#fshared\">fshared</a>, <a class=\"id\" href=\"#uaddr2\">uaddr2</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#val2\">val2</a>, &amp;<a class=\"id\" href=\"#val3\">val3</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    1);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE6\">SYSCALL_DEFINE6</a>(<a class=\"id\" href=\"#futex\">futex</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uaddr\">uaddr</a>, int, <a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#utime\">utime</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#uaddr2\">uaddr2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#val3\">val3</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#t\">t</a>, *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#val2\">val2</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cmd\">cmd</a> = <a class=\"id\" href=\"#op\">op</a> &amp; <a class=\"id\" href=\"#FUTEX_CMD_MASK\">FUTEX_CMD_MASK</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#utime\">utime</a> && (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_WAIT\">FUTEX_WAIT</a> || <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_LOCK_PI\">FUTEX_LOCK_PI</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_WAIT_BITSET\">FUTEX_WAIT_BITSET</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_WAIT_REQUEUE_PI\">FUTEX_WAIT_REQUEUE_PI</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#utime\">utime</a>, sizeof(<a class=\"id\" href=\"#ts\">ts</a>)) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#timespec_valid\">timespec_valid</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#timespec_to_ktime\">timespec_to_ktime</a>(<a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_WAIT\">FUTEX_WAIT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#ktime_add_safe\">ktime_add_safe</a>(<a class=\"id\" href=\"#ktime_get\">ktime_get</a>(), <a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a> = &amp;<a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * requeue parameter in 'utime' if cmd == FUTEX_*_REQUEUE_*.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * number of waiters to wake in 'utime' if cmd == FUTEX_WAKE_OP.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_REQUEUE\">FUTEX_REQUEUE</a> || <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE\">FUTEX_CMP_REQUEUE</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_CMP_REQUEUE_PI\">FUTEX_CMP_REQUEUE_PI</a> || <a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#FUTEX_WAKE_OP\">FUTEX_WAKE_OP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val2\">val2</a> = (<a class=\"id\" href=\"#u32\">u32</a>) (unsigned long) <a class=\"id\" href=\"#utime\">utime</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_futex\">do_futex</a>(<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#op\">op</a>, <a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#uaddr2\">uaddr2</a>, <a class=\"id\" href=\"#val2\">val2</a>, <a class=\"id\" href=\"#val3\">val3</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#futex_init\">futex_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#curval\">curval</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This will fail and we want it. Some arch implementations do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * runtime detection of the futex_atomic_cmpxchg_inatomic()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * functionality. We want to know that before we call in any</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of the complex code paths. Also we want to prevent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * registration of robust lists in that case. NULL is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * guaranteed to fault and we get -EFAULT on functional</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * implementation, the non functional ones will return</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * -ENOSYS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curval\">curval</a> = <a class=\"id\" href=\"#cmpxchg_futex_value_locked\">cmpxchg_futex_value_locked</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, 0, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#curval\">curval</a> == -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#futex_cmpxchg_enabled\">futex_cmpxchg_enabled</a> = 1;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#futex_queues\">futex_queues</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#plist_head_init\">plist_head_init</a>(&amp;<a class=\"id\" href=\"#futex_queues\">futex_queues</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#chain\">chain</a>, &amp;<a class=\"id\" href=\"#futex_queues\">futex_queues</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#futex_queues\">futex_queues</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#__initcall\">__initcall</a>(<a class=\"id\" href=\"#futex_init\">futex_init</a>);", 
];
xr_frag_insert('l/25/dd22214e670fd2d931e25d6052e5e33352e08e.xr', __xr_tmp);
