var __xr_tmp = [
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_TRIGGER_FALLING\">IRQF_TRIGGER_FALLING</a><span class=\"ts\"/>0x00000002", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_TRIGGER_HIGH\">IRQF_TRIGGER_HIGH</a><span class=\"ts\"/>0x00000004", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_TRIGGER_LOW\">IRQF_TRIGGER_LOW</a><span class=\"ts\"/>0x00000008", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_TRIGGER_MASK\">IRQF_TRIGGER_MASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IRQF_TRIGGER_HIGH\">IRQF_TRIGGER_HIGH</a> | <a class=\"id\" href=\"#IRQF_TRIGGER_LOW\">IRQF_TRIGGER_LOW</a> | \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IRQF_TRIGGER_RISING\">IRQF_TRIGGER_RISING</a> | <a class=\"id\" href=\"#IRQF_TRIGGER_FALLING\">IRQF_TRIGGER_FALLING</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_TRIGGER_PROBE\">IRQF_TRIGGER_PROBE</a><span class=\"ts\"/>0x00000010", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These flags used only by the kernel as part of the</span>", 
"<span class=\"comment\"> * irq handling routines.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IRQF_DISABLED - keep irqs disabled when calling the action handler.</span>", 
"<span class=\"comment\"> *                 DEPRECATED. This flag is a NOOP and scheduled to be removed</span>", 
"<span class=\"comment\"> * IRQF_SAMPLE_RANDOM - irq is used to feed the random generator</span>", 
"<span class=\"comment\"> * IRQF_SHARED - allow sharing the irq among several devices</span>", 
"<span class=\"comment\"> * IRQF_PROBE_SHARED - set by callers when they expect sharing mismatches to occur</span>", 
"<span class=\"comment\"> * IRQF_TIMER - Flag to mark this interrupt as timer interrupt</span>", 
"<span class=\"comment\"> * IRQF_PERCPU - Interrupt is per cpu</span>", 
"<span class=\"comment\"> * IRQF_NOBALANCING - Flag to exclude this interrupt from irq balancing</span>", 
"<span class=\"comment\"> * IRQF_IRQPOLL - Interrupt is used for polling (only the interrupt that is</span>", 
"<span class=\"comment\"> *                registered first in an shared interrupt is considered for</span>", 
"<span class=\"comment\"> *                performance reasons)</span>", 
"<span class=\"comment\"> * IRQF_ONESHOT - Interrupt is not reenabled after the hardirq handler finished.</span>", 
"<span class=\"comment\"> *                Used by threaded interrupts which need to keep the</span>", 
"<span class=\"comment\"> *                irq line disabled until the threaded handler has been run.</span>", 
"<span class=\"comment\"> * IRQF_NO_SUSPEND - Do not disable this IRQ during suspend</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_DISABLED\">IRQF_DISABLED</a><span class=\"ts\"/><span class=\"ts\"/>0x00000020", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_SAMPLE_RANDOM\">IRQF_SAMPLE_RANDOM</a><span class=\"ts\"/>0x00000040", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_SHARED\">IRQF_SHARED</a><span class=\"ts\"/><span class=\"ts\"/>0x00000080", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_PROBE_SHARED\">IRQF_PROBE_SHARED</a><span class=\"ts\"/>0x00000100", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__IRQF_TIMER\">__IRQF_TIMER</a><span class=\"ts\"/><span class=\"ts\"/>0x00000200", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_PERCPU\">IRQF_PERCPU</a><span class=\"ts\"/><span class=\"ts\"/>0x00000400", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_NOBALANCING\">IRQF_NOBALANCING</a><span class=\"ts\"/>0x00000800", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_IRQPOLL\">IRQF_IRQPOLL</a><span class=\"ts\"/><span class=\"ts\"/>0x00001000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_ONESHOT\">IRQF_ONESHOT</a><span class=\"ts\"/><span class=\"ts\"/>0x00002000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_NO_SUSPEND\">IRQF_NO_SUSPEND</a><span class=\"ts\"/><span class=\"ts\"/>0x00004000", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IRQF_TIMER\">IRQF_TIMER</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#__IRQF_TIMER\">__IRQF_TIMER</a> | <a class=\"id\" href=\"#IRQF_NO_SUSPEND\">IRQF_NO_SUSPEND</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Bits used by threaded handlers:</span>", 
"<span class=\"comment\"> * IRQTF_RUNTHREAD - signals that the interrupt handler thread should run</span>", 
"<span class=\"comment\"> * IRQTF_DIED      - handler thread died</span>", 
"<span class=\"comment\"> * IRQTF_WARNED    - warning \"IRQ_WAKE_THREAD w/o thread_fn\" has been printed</span>", 
"<span class=\"comment\"> * IRQTF_AFFINITY  - irq thread is requested to adjust affinity</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQTF_RUNTHREAD\">IRQTF_RUNTHREAD</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQTF_DIED\">IRQTF_DIED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQTF_WARNED\">IRQTF_WARNED</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQTF_AFFINITY\">IRQTF_AFFINITY</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These values can be returned by request_any_context_irq() and</span>", 
"<span class=\"comment\"> * describe the context the interrupt will be run in.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IRQC_IS_HARDIRQ - interrupt runs in hardirq context</span>", 
"<span class=\"comment\"> * IRQC_IS_NESTED - interrupt runs in a nested threaded context</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQC_IS_HARDIRQ\">IRQC_IS_HARDIRQ</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IRQC_IS_NESTED\">IRQC_IS_NESTED</a>,", 
"};", 
"", 
"typedef <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> (*<a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a>)(int, void *);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct irqaction - per interrupt action descriptor</span>", 
"<span class=\"comment\"> * @handler:<span class=\"ts\"/>interrupt handler function</span>", 
"<span class=\"comment\"> * @flags:<span class=\"ts\"/>flags (see IRQF_* above)</span>", 
"<span class=\"comment\"> * @name:<span class=\"ts\"/>name of the device</span>", 
"<span class=\"comment\"> * @dev_id:<span class=\"ts\"/>cookie to identify the device</span>", 
"<span class=\"comment\"> * @next:<span class=\"ts\"/>pointer to the next irqaction for shared interrupts</span>", 
"<span class=\"comment\"> * @irq:<span class=\"ts\"/>interrupt number</span>", 
"<span class=\"comment\"> * @dir:<span class=\"ts\"/>pointer to the proc/irq/NN/name entry</span>", 
"<span class=\"comment\"> * @thread_fn:<span class=\"ts\"/>interupt handler function for threaded interrupts</span>", 
"<span class=\"comment\"> * @thread:<span class=\"ts\"/>thread pointer for threaded interrupts</span>", 
"<span class=\"comment\"> * @thread_flags:<span class=\"ts\"/>flags related to @thread</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#irqaction\">irqaction</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#dev_id\">dev_id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#irqaction\">irqaction</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#dir\">dir</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#thread_fn\">thread_fn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#thread\">thread</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#thread_flags\">thread_flags</a>;", 
"};", 
"", 
"extern <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#no_action\">no_action</a>(int <a class=\"id\" href=\"#cpl\">cpl</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_GENERIC_HARDIRQS\">CONFIG_GENERIC_HARDIRQS</a>", 
"extern int <a class=\"id\" href=\"#__must_check\">__must_check</a>", 
];
xr_frag_insert('l/25/f8365ec5628b74e343076cb2d3a198df5ee3a8.xr', __xr_tmp);
