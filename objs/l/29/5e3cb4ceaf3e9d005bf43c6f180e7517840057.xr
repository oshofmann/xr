var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 1995  Linus Torvalds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Support of BIGMEM added by Gerhard Wichert, Siemens AG, July 1999</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Memory region support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>David Parsons &lt;orc@pell.chi.il.us&gt;, July-August 1999</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Added E820 sanitization routine (removes overlapping memory regions);</span>", 
"<span class=\"comment\"> *  Brian Moyle &lt;bmoyle@mvista.com&gt;, February 2001</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Moved CPU detection code to cpu/${cpu}.c</span>", 
"<span class=\"comment\"> *    Patrick Mochel &lt;mochel@osdl.org&gt;, March 2002</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Provisions for empty E820 memory regions (reported by certain BIOSes).</span>", 
"<span class=\"comment\"> *  Alex Achenbach &lt;xela@slit.de&gt;, December 2002.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This file handles the architecture-dependent parts of initialization</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sfi\">sfi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#apm_bios\">apm_bios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#initrd\">initrd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#console\">console</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mca\">mca</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#root_dev\">root_dev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#iscsi_ibft\">iscsi_ibft</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nodemask\">nodemask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kexec\">kexec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmi\">dmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pfn\">pfn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#direct\">direct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init_ohci1394_dma\">init_ohci1394_dma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kvm_para\">kvm_para</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stddef\">stddef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#user\">user</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kallsyms\">kallsyms</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpufreq\">cpufreq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ctype\">ctype</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crash_dump\">crash_dump</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tboot\">tboot</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#video\">video</a>/<a class=\"id\" href=\"#edid\">edid</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mtrr\">mtrr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#trampoline\">trampoline</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mpspec\">mpspec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup\">setup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#efi\">efi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#i8259\">i8259</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sections\">sections</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#dmi\">dmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#io_apic\">io_apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#ist\">ist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vmi\">vmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#setup_arch\">setup_arch</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bios_ebda\">bios_ebda</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cacheflush\">cacheflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bugs\">bugs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vsyscall\">vsyscall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#desc\">desc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#iommu\">iommu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#gart\">gart</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#paravirt\">paravirt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hypervisor\">hypervisor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#olpc_ofw\">olpc_ofw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#topology\">topology</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apicdef\">apicdef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#k8\">k8</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#numa_64\">numa_64</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mce\">mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * end_pfn only includes RAM, while max_pfn_mapped includes all e820 entries.</span>", 
"<span class=\"comment\"> * The direct mapping extends to max_pfn_mapped, so that we can directly access</span>", 
"<span class=\"comment\"> * apertures, ACPI and other tables without having to play with fixmaps.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long <a class=\"id\" href=\"#max_low_pfn_mapped\">max_low_pfn_mapped</a>;", 
"unsigned long <a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DMI\">CONFIG_DMI</a>", 
"<a class=\"id\" href=\"#RESERVE_BRK\">RESERVE_BRK</a>(<a class=\"id\" href=\"#dmi_alloc\">dmi_alloc</a>, 65536);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"unsigned int <a class=\"id\" href=\"#boot_cpu_id\">boot_cpu_id</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"static <a class=\"id\" href=\"#__initdata\">__initdata</a> unsigned long <a class=\"id\" href=\"#_brk_start\">_brk_start</a> = (unsigned long)<a class=\"id\" href=\"#__brk_base\">__brk_base</a>;", 
"unsigned long <a class=\"id\" href=\"#_brk_end\">_brk_end</a> = (unsigned long)<a class=\"id\" href=\"#__brk_base\">__brk_base</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"int <a class=\"id\" href=\"#default_cpu_present_to_apicid\">default_cpu_present_to_apicid</a>(int <a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__default_cpu_present_to_apicid\">__default_cpu_present_to_apicid</a>(<a class=\"id\" href=\"#mps_cpu\">mps_cpu</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#default_check_phys_apicid_present\">default_check_phys_apicid_present</a>(int <a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__default_check_phys_apicid_present\">__default_check_phys_apicid_present</a>(<a class=\"id\" href=\"#phys_apicid\">phys_apicid</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_BOOT_PARAMS\">CONFIG_DEBUG_BOOT_PARAMS</a>", 
"struct <a class=\"id\" href=\"#boot_params\">boot_params</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#boot_params\">boot_params</a>;", 
"#else", 
"struct <a class=\"id\" href=\"#boot_params\">boot_params</a> <a class=\"id\" href=\"#boot_params\">boot_params</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Machine setup..</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#data_resource\">data_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"Kernel data\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#code_resource\">code_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"Kernel code\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#bss_resource\">bss_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"Kernel bss\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"comment\">/* cpu data as detected by the assembly code in head.S */</span>", 
"struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> <a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> = {0, 0, 0, 0, -1, 1, 0, 0, -1};", 
"<span class=\"comment\">/* common cpu data for all cpus */</span>", 
"struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {0, 0, 0, 0, -1, 1, 0, 0, -1};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>);", 
"static void <a class=\"id\" href=\"#set_mca_bus\">set_mca_bus</a>(int <a class=\"id\" href=\"#x\">x</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MCA\">CONFIG_MCA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MCA_bus\">MCA_bus</a> = <a class=\"id\" href=\"#x\">x</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#def_to_bigsmp\">def_to_bigsmp</a>;", 
"", 
"<span class=\"comment\">/* for MCA, but anyone else can use it if they want */</span>", 
"unsigned int <a class=\"id\" href=\"#machine_id\">machine_id</a>;", 
"unsigned int <a class=\"id\" href=\"#machine_submodel_id\">machine_submodel_id</a>;", 
"unsigned int <a class=\"id\" href=\"#BIOS_revision\">BIOS_revision</a>;", 
"", 
"struct <a class=\"id\" href=\"#apm_info\">apm_info</a> <a class=\"id\" href=\"#apm_info\">apm_info</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#apm_info\">apm_info</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_SPEEDSTEP_SMI\">CONFIG_X86_SPEEDSTEP_SMI</a>) || \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_SPEEDSTEP_SMI_MODULE\">CONFIG_X86_SPEEDSTEP_SMI_MODULE</a>)", 
"struct <a class=\"id\" href=\"#ist_info\">ist_info</a> <a class=\"id\" href=\"#ist_info\">ist_info</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ist_info\">ist_info</a>);", 
"#else", 
"struct <a class=\"id\" href=\"#ist_info\">ist_info</a> <a class=\"id\" href=\"#ist_info\">ist_info</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#else", 
"struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#x86_phys_bits\">x86_phys_bits</a> = <a class=\"id\" href=\"#MAX_PHYSMEM_BITS\">MAX_PHYSMEM_BITS</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_PAE\">CONFIG_X86_PAE</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>)", 
"unsigned long <a class=\"id\" href=\"#mmu_cr4_features\">mmu_cr4_features</a>;", 
"#else", 
"unsigned long <a class=\"id\" href=\"#mmu_cr4_features\">mmu_cr4_features</a> = <a class=\"id\" href=\"#X86_CR4_PAE\">X86_CR4_PAE</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* Boot loader ID and version as integers, for the benefit of proc_dointvec */</span>", 
"int <a class=\"id\" href=\"#bootloader_type\">bootloader_type</a>, <a class=\"id\" href=\"#bootloader_version\">bootloader_version</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Setup options</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#screen_info\">screen_info</a> <a class=\"id\" href=\"#screen_info\">screen_info</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#screen_info\">screen_info</a>);", 
"struct <a class=\"id\" href=\"#edid_info\">edid_info</a> <a class=\"id\" href=\"#edid_info\">edid_info</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#edid_info\">edid_info</a>);", 
"", 
"extern int <a class=\"id\" href=\"#root_mountflags\">root_mountflags</a>;", 
"", 
"unsigned long <a class=\"id\" href=\"#saved_video_mode\">saved_video_mode</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAMDISK_IMAGE_START_MASK\">RAMDISK_IMAGE_START_MASK</a><span class=\"ts\"/>0x07FF", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAMDISK_PROMPT_FLAG\">RAMDISK_PROMPT_FLAG</a><span class=\"ts\"/><span class=\"ts\"/>0x8000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RAMDISK_LOAD_FLAG\">RAMDISK_LOAD_FLAG</a><span class=\"ts\"/><span class=\"ts\"/>0x4000", 
"", 
"static char <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#command_line\">command_line</a>[<a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>];", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CMDLINE_BOOL\">CONFIG_CMDLINE_BOOL</a>", 
"static char <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#builtin_cmdline\">builtin_cmdline</a>[<a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>] = <a class=\"id\" href=\"#CONFIG_CMDLINE\">CONFIG_CMDLINE</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EDD\">CONFIG_EDD</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_EDD_MODULE\">CONFIG_EDD_MODULE</a>)", 
"struct <a class=\"id\" href=\"#edd\">edd</a> <a class=\"id\" href=\"#edd\">edd</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EDD_MODULE\">CONFIG_EDD_MODULE</a>", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#edd\">edd</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * copy_edd() - Copy the BIOS EDD information</span>", 
"<span class=\"comment\"> *              from boot_params into a safe place.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#copy_edd\">copy_edd</a>(void)", 
"{", 
"     <a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#mbr_signature\">mbr_signature</a>, <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#edd_mbr_sig_buffer\">edd_mbr_sig_buffer</a>,", 
"<span class=\"ts\"/>    sizeof(<a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#mbr_signature\">mbr_signature</a>));", 
"     <a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#edd_info\">edd_info</a>, <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#eddbuf\">eddbuf</a>, sizeof(<a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#edd_info\">edd_info</a>));", 
"     <a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#mbr_signature_nr\">mbr_signature_nr</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#edd_mbr_sig_buf_entries\">edd_mbr_sig_buf_entries</a>;", 
"     <a class=\"id\" href=\"#edd\">edd</a>.<a class=\"id\" href=\"#edd_info_nr\">edd_info_nr</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#eddbuf_entries\">eddbuf_entries</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#copy_edd\">copy_edd</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#extend_brk\">extend_brk</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#align\">align</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#align\">align</a> - 1;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#_brk_start\">_brk_start</a> == 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#align\">align</a> &amp; <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_brk_end\">_brk_end</a> = (<a class=\"id\" href=\"#_brk_end\">_brk_end</a> + <a class=\"id\" href=\"#mask\">mask</a>) &amp; ~<a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>((char *)(<a class=\"id\" href=\"#_brk_end\">_brk_end</a> + <a class=\"id\" href=\"#size\">size</a>) &gt; <a class=\"id\" href=\"#__brk_limit\">__brk_limit</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (void *)<a class=\"id\" href=\"#_brk_end\">_brk_end</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_brk_end\">_brk_end</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#ret\">ret</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_gbpages\">init_gbpages</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#direct_gbpages\">direct_gbpages</a> && <a class=\"id\" href=\"#cpu_has_gbpages\">cpu_has_gbpages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Using GB pages for direct mapping\\n\");", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#direct_gbpages\">direct_gbpages</a> = 0;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#init_gbpages\">init_gbpages</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_brk\">reserve_brk</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_brk_end\">_brk_end</a> &gt; <a class=\"id\" href=\"#_brk_start\">_brk_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#_brk_start\">_brk_start</a>), <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#_brk_end\">_brk_end</a>), \"BRK\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark brk area as locked down and no longer taking any</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   new allocations */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#_brk_start\">_brk_start</a> = 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_INITRD\">CONFIG_BLK_DEV_INITRD</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_MAP_CHUNK\">MAX_MAP_CHUNK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#NR_FIX_BTMAPS\">NR_FIX_BTMAPS</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#relocate_initrd\">relocate_initrd</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Assume only end is not page aligned */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>  = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#area_size\">area_size</a>     = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end_of_lowmem\">end_of_lowmem</a> = <a class=\"id\" href=\"#max_low_pfn_mapped\">max_low_pfn_mapped</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#slop\">slop</a>, <a class=\"id\" href=\"#clen\">clen</a>, <a class=\"id\" href=\"#mapaddr\">mapaddr</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#p\">p</a>, *<a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need to move the initrd down into lowmem */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a> = <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(0, <a class=\"id\" href=\"#end_of_lowmem\">end_of_lowmem</a>, <a class=\"id\" href=\"#area_size\">area_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a> == -1ULL)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Cannot find place for new RAMDISK of size %lld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Note: this includes all the lowmem currently occupied by</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   the initrd, we rely on that fact to keep the data intact. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a>, <a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a> + <a class=\"id\" href=\"#area_size\">area_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"NEW RAMDISK\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initrd_start\">initrd_start</a> = <a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a> + <a class=\"id\" href=\"#PAGE_OFFSET\">PAGE_OFFSET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initrd_end\">initrd_end</a>   = <a class=\"id\" href=\"#initrd_start\">initrd_start</a> + <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Allocated new RAMDISK: %08llx - %08llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a>, <a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a> + <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = (char *)<a class=\"id\" href=\"#initrd_start\">initrd_start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy any lowmem portion of the initrd */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> &lt; <a class=\"id\" href=\"#end_of_lowmem\">end_of_lowmem</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clen\">clen</a> = <a class=\"id\" href=\"#end_of_lowmem\">end_of_lowmem</a> - <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (char *)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#clen\">clen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> += <a class=\"id\" href=\"#clen\">clen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> += <a class=\"id\" href=\"#clen\">clen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>  -= <a class=\"id\" href=\"#clen\">clen</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy the highmem portion of the initrd */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slop\">slop</a> = <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clen\">clen</a> = <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#clen\">clen</a> &gt; <a class=\"id\" href=\"#MAX_MAP_CHUNK\">MAX_MAP_CHUNK</a>-<a class=\"id\" href=\"#slop\">slop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clen\">clen</a> = <a class=\"id\" href=\"#MAX_MAP_CHUNK\">MAX_MAP_CHUNK</a>-<a class=\"id\" href=\"#slop\">slop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mapaddr\">mapaddr</a> = <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#early_memremap\">early_memremap</a>(<a class=\"id\" href=\"#mapaddr\">mapaddr</a>, <a class=\"id\" href=\"#clen\">clen</a>+<a class=\"id\" href=\"#slop\">slop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#q\">q</a>, <a class=\"id\" href=\"#p\">p</a>+<a class=\"id\" href=\"#slop\">slop</a>, <a class=\"id\" href=\"#clen\">clen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#clen\">clen</a>+<a class=\"id\" href=\"#slop\">slop</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> += <a class=\"id\" href=\"#clen\">clen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> += <a class=\"id\" href=\"#clen\">clen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>  -= <a class=\"id\" href=\"#clen\">clen</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* high pages is not converted by early_res_to_bootmem */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>  = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Move RAMDISK from %016llx - %016llx to\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\" %08llx - %08llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>, <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> + <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a>, <a class=\"id\" href=\"#ramdisk_here\">ramdisk_here</a> + <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a> - 1);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_initrd\">reserve_initrd</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Assume only end is not page aligned */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>  = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ramdisk_end\">ramdisk_end</a>   = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> + <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end_of_lowmem\">end_of_lowmem</a> = <a class=\"id\" href=\"#max_low_pfn_mapped\">max_low_pfn_mapped</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#type_of_loader\">type_of_loader</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> || !<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No initrd provided by bootloader */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initrd_start\">initrd_start</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a> >= (<a class=\"id\" href=\"#end_of_lowmem\">end_of_lowmem</a>>>1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_early\">free_early</a>(<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>, <a class=\"id\" href=\"#ramdisk_end\">ramdisk_end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"initrd too large to handle, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"disabling initrd\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"RAMDISK: %08llx - %08llx\\n\", <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ramdisk_end\">ramdisk_end</a>);", 
"", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ramdisk_end\">ramdisk_end</a> <= <a class=\"id\" href=\"#end_of_lowmem\">end_of_lowmem</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All in lowmem, easy case */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * don't need to reserve again, already reserved early</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in i386_start_kernel</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#initrd_start\">initrd_start</a> = <a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a> + <a class=\"id\" href=\"#PAGE_OFFSET\">PAGE_OFFSET</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#initrd_end\">initrd_end</a> = <a class=\"id\" href=\"#initrd_start\">initrd_start</a> + <a class=\"id\" href=\"#ramdisk_size\">ramdisk_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#relocate_initrd\">relocate_initrd</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_early\">free_early</a>(<a class=\"id\" href=\"#ramdisk_image\">ramdisk_image</a>, <a class=\"id\" href=\"#ramdisk_end\">ramdisk_end</a>);", 
"}", 
"#else", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_initrd\">reserve_initrd</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_BLK_DEV_INITRD */</span>", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_setup_data\">parse_setup_data</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#setup_data\">setup_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pa_data\">pa_data</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#version\">version</a> &lt; 0x0209)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pa_data\">pa_data</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#setup_data\">setup_data</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pa_data\">pa_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#early_memremap\">early_memremap</a>(<a class=\"id\" href=\"#pa_data\">pa_data</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SETUP_E820_EXT\">SETUP_E820_EXT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parse_e820_ext\">parse_e820_ext</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#pa_data\">pa_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_data\">pa_data</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#e820_reserve_setup_data\">e820_reserve_setup_data</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#setup_data\">setup_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pa_data\">pa_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#version\">version</a> &lt; 0x0209)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pa_data\">pa_data</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#setup_data\">setup_data</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pa_data\">pa_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#early_memremap\">early_memremap</a>(<a class=\"id\" href=\"#pa_data\">pa_data</a>, sizeof(*<a class=\"id\" href=\"#data\">data</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(<a class=\"id\" href=\"#pa_data\">pa_data</a>, sizeof(*<a class=\"id\" href=\"#data\">data</a>)+<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, <a class=\"id\" href=\"#E820_RESERVED_KERN\">E820_RESERVED_KERN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_data\">pa_data</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#data\">data</a>, sizeof(*<a class=\"id\" href=\"#data\">data</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#e820_saved\">e820_saved</a>, &amp;<a class=\"id\" href=\"#e820\">e820</a>, sizeof(struct <a class=\"id\" href=\"#e820map\">e820map</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"extended physical RAM map:\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_print_map\">e820_print_map</a>(\"reserve setup_data\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_early_setup_data\">reserve_early_setup_data</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#setup_data\">setup_data</a> *<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#pa_data\">pa_data</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[32];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#version\">version</a> &lt; 0x0209)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pa_data\">pa_data</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#setup_data\">setup_data</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pa_data\">pa_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#early_memremap\">early_memremap</a>(<a class=\"id\" href=\"#pa_data\">pa_data</a>, sizeof(*<a class=\"id\" href=\"#data\">data</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"setup data %x\", <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#pa_data\">pa_data</a>, <a class=\"id\" href=\"#pa_data\">pa_data</a>+sizeof(*<a class=\"id\" href=\"#data\">data</a>)+<a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pa_data\">pa_data</a> = <a class=\"id\" href=\"#data\">data</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#data\">data</a>, sizeof(*<a class=\"id\" href=\"#data\">data</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * --------- Crashkernel reservation ------------------------------</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEXEC\">CONFIG_KEXEC</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long long <a class=\"id\" href=\"#get_total_mem\">get_total_mem</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#total\">total</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> = <a class=\"id\" href=\"#max_pfn\">max_pfn</a> - <a class=\"id\" href=\"#min_low_pfn\">min_low_pfn</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#total\">total</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_crashkernel\">reserve_crashkernel</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#total_mem\">total_mem</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#crash_size\">crash_size</a>, <a class=\"id\" href=\"#crash_base\">crash_base</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_mem\">total_mem</a> = <a class=\"id\" href=\"#get_total_mem\">get_total_mem</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#parse_crashkernel\">parse_crashkernel</a>(<a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>, <a class=\"id\" href=\"#total_mem\">total_mem</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#crash_size\">crash_size</a>, &amp;<a class=\"id\" href=\"#crash_base\">crash_base</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 0 || <a class=\"id\" href=\"#crash_size\">crash_size</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 0 means: find the address automatically */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#crash_base\">crash_base</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const unsigned long long <a class=\"id\" href=\"#alignment\">alignment</a> = 16<<20;<span class=\"ts\"/><span class=\"comment\">/* 16M */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crash_base\">crash_base</a> = <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(<a class=\"id\" href=\"#alignment\">alignment</a>, <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>, <a class=\"id\" href=\"#crash_size\">crash_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#alignment\">alignment</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#crash_base\">crash_base</a> == -1ULL) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"crashkernel reservation failed - No suitable area found.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(<a class=\"id\" href=\"#crash_base\">crash_base</a>, <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>, <a class=\"id\" href=\"#crash_size\">crash_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 1<<20);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#start\">start</a> != <a class=\"id\" href=\"#crash_base\">crash_base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"crashkernel reservation failed - memory is in use.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#crash_base\">crash_base</a>, <a class=\"id\" href=\"#crash_base\">crash_base</a> + <a class=\"id\" href=\"#crash_size\">crash_size</a>, \"CRASH KERNEL\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Reserving %ldMB of memory at %ldMB \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"for crashkernel (System RAM: %ldMB)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)(<a class=\"id\" href=\"#crash_size\">crash_size</a> >> 20),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)(<a class=\"id\" href=\"#crash_base\">crash_base</a> >> 20),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)(<a class=\"id\" href=\"#total_mem\">total_mem</a> >> 20));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crashk_res\">crashk_res</a>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#crash_base\">crash_base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crashk_res\">crashk_res</a>.<a class=\"id\" href=\"#end\">end</a>   = <a class=\"id\" href=\"#crash_base\">crash_base</a> + <a class=\"id\" href=\"#crash_size\">crash_size</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, &amp;<a class=\"id\" href=\"#crashk_res\">crashk_res</a>);", 
"}", 
"#else", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_crashkernel\">reserve_crashkernel</a>(void)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#standard_io_resources\">standard_io_resources</a>[] = {", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"dma1\", .<a class=\"id\" href=\"#start\">start</a> = 0x00, .<a class=\"id\" href=\"#end\">end</a> = 0x1f,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"pic1\", .<a class=\"id\" href=\"#start\">start</a> = 0x20, .<a class=\"id\" href=\"#end\">end</a> = 0x21,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"timer0\", .<a class=\"id\" href=\"#start\">start</a> = 0x40, .<a class=\"id\" href=\"#end\">end</a> = 0x43,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"timer1\", .<a class=\"id\" href=\"#start\">start</a> = 0x50, .<a class=\"id\" href=\"#end\">end</a> = 0x53,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"keyboard\", .<a class=\"id\" href=\"#start\">start</a> = 0x60, .<a class=\"id\" href=\"#end\">end</a> = 0x60,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"keyboard\", .<a class=\"id\" href=\"#start\">start</a> = 0x64, .<a class=\"id\" href=\"#end\">end</a> = 0x64,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"dma page reg\", .<a class=\"id\" href=\"#start\">start</a> = 0x80, .<a class=\"id\" href=\"#end\">end</a> = 0x8f,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"pic2\", .<a class=\"id\" href=\"#start\">start</a> = 0xa0, .<a class=\"id\" href=\"#end\">end</a> = 0xa1,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"dma2\", .<a class=\"id\" href=\"#start\">start</a> = 0xc0, .<a class=\"id\" href=\"#end\">end</a> = 0xdf,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> },", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#name\">name</a> = \"fpu\", .<a class=\"id\" href=\"#start\">start</a> = 0xf0, .<a class=\"id\" href=\"#end\">end</a> = 0xff,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> }", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_standard_io_resources\">reserve_standard_io_resources</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* request I/O space for devices used on all i[345]86 PCs */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#standard_io_resources\">standard_io_resources</a>); <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_resource\">request_resource</a>(&amp;<a class=\"id\" href=\"#ioport_resource\">ioport_resource</a>, &amp;<a class=\"id\" href=\"#standard_io_resources\">standard_io_resources</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Note: elfcorehdr_addr is not just limited to vmcore. It is also used by</span>", 
"<span class=\"comment\"> * is_kdump_kernel() to determine if we are booting after a panic. Hence</span>", 
"<span class=\"comment\"> * ifdef it under CONFIG_CRASH_DUMP and not CONFIG_PROC_VMCORE.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CRASH_DUMP\">CONFIG_CRASH_DUMP</a>", 
"<span class=\"comment\">/* elfcorehdr= specifies the location of elf core header</span>", 
"<span class=\"comment\"> * stored by the crashed kernel. This option will be passed</span>", 
"<span class=\"comment\"> * by kexec loader to the capture kernel.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_elfcorehdr\">setup_elfcorehdr</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elfcorehdr_addr\">elfcorehdr_addr</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#end\">end</a> &gt; <a class=\"id\" href=\"#arg\">arg</a> ? 0 : -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"elfcorehdr\", <a class=\"id\" href=\"#setup_elfcorehdr\">setup_elfcorehdr</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> void <a class=\"id\" href=\"#reserve_ibft_region\">reserve_ibft_region</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#size\">size</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#find_ibft_region\">find_ibft_region</a>(&amp;<a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserve_early_overlap_ok\">reserve_early_overlap_ok</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#size\">size</a>, \"ibft\");", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_RESERVE_LOW_64K\">CONFIG_X86_RESERVE_LOW_64K</a>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#dmi_low_memory_corruption\">dmi_low_memory_corruption</a>(const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_NOTICE\">KERN_NOTICE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>\"%s detected: BIOS may corrupt low RAM, working around it.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(0, 0x10000, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/* List of systems that have known low memory corruption BIOS problems */</span>", 
"static struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#bad_bios_dmi_table\">bad_bios_dmi_table</a>[] = {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_RESERVE_LOW_64K\">CONFIG_X86_RESERVE_LOW_64K</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_low_memory_corruption\">dmi_low_memory_corruption</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"AMI BIOS\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VENDOR\">DMI_BIOS_VENDOR</a>, \"American Megatrends Inc.\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_low_memory_corruption\">dmi_low_memory_corruption</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Phoenix BIOS\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VENDOR\">DMI_BIOS_VENDOR</a>, \"Phoenix Technologies\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_low_memory_corruption\">dmi_low_memory_corruption</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Phoenix/MSC BIOS\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BIOS_VENDOR\">DMI_BIOS_VENDOR</a>, \"Phoenix/MSC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * AMI BIOS with low memory corruption was found on Intel DG45ID and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DG45FC boards.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It has a different DMI_BIOS_VENDOR = \"Intel Corp.\", for now we will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * match only DMI_BOARD_NAME and see if there is more bad products</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with this vendor.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_low_memory_corruption\">dmi_low_memory_corruption</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"AMI BIOS\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"DG45ID\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_low_memory_corruption\">dmi_low_memory_corruption</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"AMI BIOS\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"DG45FC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The Dell Inspiron Mini 1012 has DMI_BIOS_VENDOR = \"Dell Inc.\", so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * match on the product name.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#callback\">callback</a> = <a class=\"id\" href=\"#dmi_low_memory_corruption\">dmi_low_memory_corruption</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Phoenix BIOS\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Inspiron 1012\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>{}", 
"};", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#trim_bios_range\">trim_bios_range</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A special case is the first 4Kb of memory;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is a BIOS owned area, not kernel ram, but generally</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not listed as such in the E820 table.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * special case: Some BIOSen report the PC BIOS</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * area (640-&gt;1Mb) as ram even though it is not.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * take them out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_remove_range\">e820_remove_range</a>(<a class=\"id\" href=\"#BIOS_BEGIN\">BIOS_BEGIN</a>, <a class=\"id\" href=\"#BIOS_END\">BIOS_END</a> - <a class=\"id\" href=\"#BIOS_BEGIN\">BIOS_BEGIN</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Determine if we were loaded by an EFI loader.  If so, then we have also been</span>", 
"<span class=\"comment\"> * passed the efi memmap, systab, etc., so we should use these data structures</span>", 
"<span class=\"comment\"> * for initialization.  Note, the efi init code path is determined by the</span>", 
"<span class=\"comment\"> * global efi_enabled. This allows the same kernel image to be used on existing</span>", 
"<span class=\"comment\"> * systems (with a traditional BIOS) as well as on EFI systems.</span>", 
"<span class=\"comment\"> */</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * setup_arch - architecture-specific boot-time initializations</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: On x86_64, fixmaps are ready for use even before this is called.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#setup_arch\">setup_arch</a>(char **<a class=\"id\" href=\"#cmdline_p\">cmdline_p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#acpi\">acpi</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#k8\">k8</a> = 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>, &amp;<a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a>, sizeof(<a class=\"id\" href=\"#new_cpu_data\">new_cpu_data</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#visws_early_detect\">visws_early_detect</a>();", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Command line: %s\\n\", <a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* VMI may relocate the fixmap; do this before touching ioremap area */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vmi_init\">vmi_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OFW also may relocate the fixmap */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#olpc_ofw_detect\">olpc_ofw_detect</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_trap_init\">early_trap_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_cpu_init\">early_cpu_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_ioremap_init\">early_ioremap_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_olpc_ofw_pgd\">setup_olpc_ofw_pgd</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ROOT_DEV\">ROOT_DEV</a> = <a class=\"id\" href=\"#old_decode_dev\">old_decode_dev</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#root_dev\">root_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#screen_info\">screen_info</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#screen_info\">screen_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#edid_info\">edid_info</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#edid_info\">edid_info</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apm_info\">apm_info</a>.<a class=\"id\" href=\"#bios\">bios</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#apm_bios_info\">apm_bios_info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ist_info\">ist_info</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#ist_info\">ist_info</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#sys_desc_table\">sys_desc_table</a>.<a class=\"id\" href=\"#length\">length</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_mca_bus\">set_mca_bus</a>(<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#sys_desc_table\">sys_desc_table</a>.<a class=\"id\" href=\"#table\">table</a>[3] &amp; 0x2);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#machine_id\">machine_id</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#sys_desc_table\">sys_desc_table</a>.<a class=\"id\" href=\"#table\">table</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#machine_submodel_id\">machine_submodel_id</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#sys_desc_table\">sys_desc_table</a>.<a class=\"id\" href=\"#table\">table</a>[1];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BIOS_revision\">BIOS_revision</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#sys_desc_table\">sys_desc_table</a>.<a class=\"id\" href=\"#table\">table</a>[2];", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#saved_video_mode\">saved_video_mode</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#vid_mode\">vid_mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bootloader_type\">bootloader_type</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#type_of_loader\">type_of_loader</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#bootloader_type\">bootloader_type</a> >> 4) == 0xe) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bootloader_type\">bootloader_type</a> &= 0xf;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bootloader_type\">bootloader_type</a> |= (<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ext_loader_type\">ext_loader_type</a>+0x10) << 4;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bootloader_version\">bootloader_version</a>  = <a class=\"id\" href=\"#bootloader_type\">bootloader_type</a> &amp; 0xf;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bootloader_version\">bootloader_version</a> |= <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ext_loader_ver\">ext_loader_ver</a> << 4;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_RAM\">CONFIG_BLK_DEV_RAM</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rd_image_start\">rd_image_start</a> = <a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ram_size\">ram_size</a> &amp; <a class=\"id\" href=\"#RAMDISK_IMAGE_START_MASK\">RAMDISK_IMAGE_START_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rd_prompt\">rd_prompt</a> = ((<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ram_size\">ram_size</a> &amp; <a class=\"id\" href=\"#RAMDISK_PROMPT_FLAG\">RAMDISK_PROMPT_FLAG</a>) != 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rd_doload\">rd_doload</a> = ((<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#ram_size\">ram_size</a> &amp; <a class=\"id\" href=\"#RAMDISK_LOAD_FLAG\">RAMDISK_LOAD_FLAG</a>) != 0);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EFI\">CONFIG_EFI</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>((char *)&amp;<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#efi_info\">efi_info</a>.<a class=\"id\" href=\"#efi_loader_signature\">efi_loader_signature</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"EL32\",", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"EL64\",", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/> 4)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#efi_enabled\">efi_enabled</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#efi_reserve_early\">efi_reserve_early</a>();", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#oem\">oem</a>.<a class=\"id\" href=\"#arch_setup\">arch_setup</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_memory_map\">setup_memory_map</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parse_setup_data\">parse_setup_data</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* update the e820_saved too */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_reserve_setup_data\">e820_reserve_setup_data</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copy_edd\">copy_edd</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#boot_params\">boot_params</a>.<a class=\"id\" href=\"#hdr\">hdr</a>.<a class=\"id\" href=\"#root_flags\">root_flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#root_mountflags\">root_mountflags</a> &= ~<a class=\"id\" href=\"#MS_RDONLY\">MS_RDONLY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#start_code\">start_code</a> = (unsigned long) <a class=\"id\" href=\"#_text\">_text</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#end_code\">end_code</a> = (unsigned long) <a class=\"id\" href=\"#_etext\">_etext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#end_data\">end_data</a> = (unsigned long) <a class=\"id\" href=\"#_edata\">_edata</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#brk\">brk</a> = <a class=\"id\" href=\"#_brk_end\">_brk_end</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#code_resource\">code_resource</a>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#_text\">_text</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#code_resource\">code_resource</a>.<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#_etext\">_etext</a>)-1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data_resource\">data_resource</a>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#_etext\">_etext</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#data_resource\">data_resource</a>.<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#_edata\">_edata</a>)-1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bss_resource\">bss_resource</a>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(&amp;<a class=\"id\" href=\"#__bss_start\">__bss_start</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bss_resource\">bss_resource</a>.<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(&amp;<a class=\"id\" href=\"#__bss_stop\">__bss_stop</a>)-1;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CMDLINE_BOOL\">CONFIG_CMDLINE_BOOL</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CMDLINE_OVERRIDE\">CONFIG_CMDLINE_OVERRIDE</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>, <a class=\"id\" href=\"#builtin_cmdline\">builtin_cmdline</a>, <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>);", 
"#else", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#builtin_cmdline\">builtin_cmdline</a>[0]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* append boot loader cmdline to builtin */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcat\">strlcat</a>(<a class=\"id\" href=\"#builtin_cmdline\">builtin_cmdline</a>, \" \", <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcat\">strlcat</a>(<a class=\"id\" href=\"#builtin_cmdline\">builtin_cmdline</a>, <a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>, <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>, <a class=\"id\" href=\"#builtin_cmdline\">builtin_cmdline</a>, <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#command_line\">command_line</a>, <a class=\"id\" href=\"#boot_command_line\">boot_command_line</a>, <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#cmdline_p\">cmdline_p</a> = <a class=\"id\" href=\"#command_line\">command_line</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * x86_configure_nx() is called before parse_early_param() to detect</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * whether hardware doesn't support NX (so that the early EHCI debug</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * console setup can safely call set_fixmap()). It may then be called</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * again from within noexec_setup() during parsing early parameters</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to honor the respective command line option.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_configure_nx\">x86_configure_nx</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#parse_early_param\">parse_early_param</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_report_nx\">x86_report_nx</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Must be before kernel pagetables are setup */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vmi_activate\">vmi_activate</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* after early param, so could get panic from serial */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early_setup_data\">reserve_early_setup_data</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_mps_check\">acpi_mps_check</a>()) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_LOCAL_APIC\">CONFIG_X86_LOCAL_APIC</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disable_apic\">disable_apic</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#setup_clear_cpu_cap\">setup_clear_cpu_cap</a>(<a class=\"id\" href=\"#X86_FEATURE_APIC\">X86_FEATURE_APIC</a>);", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_early_dump_regs\">pci_early_dump_regs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#early_dump_pci_devices\">early_dump_pci_devices</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_e820_parsing\">finish_e820_parsing</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#efi_enabled\">efi_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#efi_init\">efi_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_scan_machine\">dmi_scan_machine</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#bad_bios_dmi_table\">bad_bios_dmi_table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * VMware detection requires dmi to be available, so this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * needs to be done after dmi_scan_machine, for the BP.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_hypervisor_platform\">init_hypervisor_platform</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#resources\">resources</a>.<a class=\"id\" href=\"#probe_roms\">probe_roms</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* after parse_early_param, so could debug it */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, &amp;<a class=\"id\" href=\"#code_resource\">code_resource</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, &amp;<a class=\"id\" href=\"#data_resource\">data_resource</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#insert_resource\">insert_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, &amp;<a class=\"id\" href=\"#bss_resource\">bss_resource</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trim_bios_range\">trim_bios_range</a>();", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ppro_with_ram_bug\">ppro_with_ram_bug</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(0x70000000ULL, 0x40000ULL, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#map\">map</a>), &amp;<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#nr_map\">nr_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"fixed physical RAM map:\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e820_print_map\">e820_print_map</a>(\"bad_ppro\");", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_gart_iommu_check\">early_gart_iommu_check</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * partially used pages are not usable - thus</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we are rounding upwards:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_pfn\">max_pfn</a> = <a class=\"id\" href=\"#e820_end_of_ram_pfn\">e820_end_of_ram_pfn</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* preallocate 4k for mptable mpc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_reserve_e820_mpc_new\">early_reserve_e820_mpc_new</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* update e820 for memory not covered by WB MTRRs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_bp_init\">mtrr_bp_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_trim_uncached_memory\">mtrr_trim_uncached_memory</a>(<a class=\"id\" href=\"#max_pfn\">max_pfn</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pfn\">max_pfn</a> = <a class=\"id\" href=\"#e820_end_of_ram_pfn\">e820_end_of_ram_pfn</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* max_low_pfn get updated here */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#find_low_pfn_range\">find_low_pfn_range</a>();", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_physpages\">num_physpages</a> = <a class=\"id\" href=\"#max_pfn\">max_pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#check_x2apic\">check_x2apic</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* How many end-of-memory variables you have, grandma! */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* need this before calling reserve_initrd */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_pfn\">max_pfn</a> &gt; (1UL<<(32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a> = <a class=\"id\" href=\"#e820_end_of_low_ram_pfn\">e820_end_of_low_ram_pfn</a>();", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a> = <a class=\"id\" href=\"#max_pfn\">max_pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#high_memory\">high_memory</a> = (void *)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#max_pfn\">max_pfn</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a> = <a class=\"id\" href=\"#KERNEL_IMAGE_SIZE\">KERNEL_IMAGE_SIZE</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_CHECK_BIOS_CORRUPTION\">CONFIG_X86_CHECK_BIOS_CORRUPTION</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_bios_corruption_check\">setup_bios_corruption_check</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"initial memory mapped : 0 - %08lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_brk\">reserve_brk</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Find and reserve possible boot-time SMP configuration:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#find_smp_config\">find_smp_config</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_ibft_region\">reserve_ibft_region</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_trampoline_memory\">reserve_trampoline_memory</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_SLEEP\">CONFIG_ACPI_SLEEP</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Reserve low memory region for sleep support.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * even before init_memory_mapping</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_reserve_wakeup_memory\">acpi_reserve_wakeup_memory</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_gbpages\">init_gbpages</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* max_pfn_mapped is updated here */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_low_pfn_mapped\">max_low_pfn_mapped</a> = <a class=\"id\" href=\"#init_memory_mapping\">init_memory_mapping</a>(0, <a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a> = <a class=\"id\" href=\"#max_low_pfn_mapped\">max_low_pfn_mapped</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_pfn\">max_pfn</a> &gt; <a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a> = <a class=\"id\" href=\"#init_memory_mapping\">init_memory_mapping</a>(1UL<<32,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#max_pfn\">max_pfn</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* can we preseve max_low_pfn ?*/</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a> = <a class=\"id\" href=\"#max_pfn\">max_pfn</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: On x86-32, only from this point on, fixmaps are ready for use.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PROVIDE_OHCI1394_DMA_INIT\">CONFIG_PROVIDE_OHCI1394_DMA_INIT</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#init_ohci1394_dma_early\">init_ohci1394_dma_early</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_ohci1394_dma_on_all_controllers\">init_ohci1394_dma_on_all_controllers</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_initrd\">reserve_initrd</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_crashkernel\">reserve_crashkernel</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vsmp_init\">vsmp_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_delay_init\">io_delay_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Parse the ACPI tables for possible boot-time SMP configuration.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_boot_table_init\">acpi_boot_table_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_acpi_boot_init\">early_acpi_boot_init</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ACPI_NUMA\">CONFIG_ACPI_NUMA</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Parse SRAT to discover nodes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi\">acpi</a> = <a class=\"id\" href=\"#acpi_numa_init\">acpi_numa_init</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_K8_NUMA\">CONFIG_K8_NUMA</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi\">acpi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#k8\">k8</a> = !<a class=\"id\" href=\"#k8_numa_init\">k8_numa_init</a>(0, <a class=\"id\" href=\"#max_pfn\">max_pfn</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initmem_init\">initmem_init</a>(0, <a class=\"id\" href=\"#max_pfn\">max_pfn</a>, <a class=\"id\" href=\"#acpi\">acpi</a>, <a class=\"id\" href=\"#k8\">k8</a>);", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NO_BOOTMEM\">CONFIG_NO_BOOTMEM</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_res_to_bootmem\">early_res_to_bootmem</a>(0, <a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dma32_reserve_bootmem\">dma32_reserve_bootmem</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KVM_CLOCK\">CONFIG_KVM_CLOCK</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvmclock_init\">kvmclock_init</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#paging\">paging</a>.<a class=\"id\" href=\"#pagetable_setup_start\">pagetable_setup_start</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#paging_init\">paging_init</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#paging\">paging</a>.<a class=\"id\" href=\"#pagetable_setup_done\">pagetable_setup_done</a>(<a class=\"id\" href=\"#swapper_pg_dir\">swapper_pg_dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#setup_trampoline_page_table\">setup_trampoline_page_table</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tboot_probe\">tboot_probe</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map_vsyscall\">map_vsyscall</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#generic_apic_probe\">generic_apic_probe</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_quirks\">early_quirks</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Read APIC and some other early information from ACPI tables.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_boot_init\">acpi_boot_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sfi_init\">sfi_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * get boot-time SMP configuration:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#smp_found_config\">smp_found_config</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_smp_config\">get_smp_config</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prefill_possible_map\">prefill_possible_map</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_cpu_to_node\">init_cpu_to_node</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_apic_mappings\">init_apic_mappings</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ioapic_init_mappings\">ioapic_init_mappings</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* need to wait for io_apic is mapped */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#probe_nr_irqs_gsi\">probe_nr_irqs_gsi</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kvm_guest_init\">kvm_guest_init</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_reserve_resources\">e820_reserve_resources</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_mark_nosave_regions\">e820_mark_nosave_regions</a>(<a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#resources\">resources</a>.<a class=\"id\" href=\"#reserve_resources\">reserve_resources</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_setup_gap\">e820_setup_gap</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_VT\">CONFIG_VT</a>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_VGA_CONSOLE\">CONFIG_VGA_CONSOLE</a>)", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#efi_enabled\">efi_enabled</a> || (<a class=\"id\" href=\"#efi_mem_type\">efi_mem_type</a>(0xa0000) != <a class=\"id\" href=\"#EFI_CONVENTIONAL_MEMORY\">EFI_CONVENTIONAL_MEMORY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#conswitchp\">conswitchp</a> = &amp;<a class=\"id\" href=\"#vga_con\">vga_con</a>;", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DUMMY_CONSOLE\">CONFIG_DUMMY_CONSOLE</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#conswitchp\">conswitchp</a> = &amp;<a class=\"id\" href=\"#dummy_con\">dummy_con</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#oem\">oem</a>.<a class=\"id\" href=\"#banner\">banner</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mcheck_init\">mcheck_init</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"", 
"static struct <a class=\"id\" href=\"#resource\">resource</a> <a class=\"id\" href=\"#video_ram_resource\">video_ram_resource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"Video RAM area\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= 0xa0000,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#end\">end</a><span class=\"ts\"/>= 0xbffff,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#IORESOURCE_BUSY\">IORESOURCE_BUSY</a> | <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>", 
"};", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#i386_reserve_resources\">i386_reserve_resources</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#request_resource\">request_resource</a>(&amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>, &amp;<a class=\"id\" href=\"#video_ram_resource\">video_ram_resource</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_standard_io_resources\">reserve_standard_io_resources</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_X86_32 */</span>", 
];
xr_frag_insert('l/29/5e3cb4ceaf3e9d005bf43c6f180e7517840057.xr', __xr_tmp);
