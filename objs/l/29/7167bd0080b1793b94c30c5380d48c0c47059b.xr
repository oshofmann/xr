var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2007 Casey Schaufler &lt;casey@schaufler-ca.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *      it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *      the Free Software Foundation, version 2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author:</span>", 
"<span class=\"comment\"> *      Casey Schaufler &lt;casey@schaufler-ca.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SECURITY_SMACK_H\">_SECURITY_SMACK_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SECURITY_SMACK_H\">_SECURITY_SMACK_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#netlabel\">netlabel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rculist\">rculist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#lsm_audit\">lsm_audit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Why 23? CIPSO is constrained to 30, so a 32 byte buffer is</span>", 
"<span class=\"comment\"> * bigger than can be used, and 24 is the next lower multiple</span>", 
"<span class=\"comment\"> * of 8, and there are too many issues if there isn't space set</span>", 
"<span class=\"comment\"> * aside for the terminating null byte.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMK_MAXLEN\">SMK_MAXLEN</a><span class=\"ts\"/>23", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMK_LABELLEN\">SMK_LABELLEN</a><span class=\"ts\"/>(<a class=\"id\" href=\"#SMK_MAXLEN\">SMK_MAXLEN</a>+1)", 
"", 
"struct <a class=\"id\" href=\"#superblock_smack\">superblock_smack</a> {", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_root\">smk_root</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_floor\">smk_floor</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_hat\">smk_hat</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_default\">smk_default</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_initialized\">smk_initialized</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><a class=\"id\" href=\"#smk_sblock\">smk_sblock</a>;<span class=\"ts\"/><span class=\"comment\">/* for initialization */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#socket_smack\">socket_smack</a> {", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_out\">smk_out</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* outbound label */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_in\">smk_in</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* inbound label */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_packet\">smk_packet</a>[<a class=\"id\" href=\"#SMK_LABELLEN\">SMK_LABELLEN</a>];<span class=\"ts\"/><span class=\"comment\">/* TCP peer label */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Inode smack data</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#inode_smack\">inode_smack</a> {", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_inode\">smk_inode</a>;<span class=\"ts\"/><span class=\"comment\">/* label of the fso */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a><span class=\"ts\"/><a class=\"id\" href=\"#smk_lock\">smk_lock</a>;<span class=\"ts\"/><span class=\"comment\">/* initialization lock */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_flags\">smk_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* smack inode flags */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#SMK_INODE_INSTANT\">SMK_INODE_INSTANT</a><span class=\"ts\"/>0x01<span class=\"ts\"/><span class=\"comment\">/* inode is instantiated */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A label access rule.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#smack_rule\">smack_rule</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_subject\">smk_subject</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_object\">smk_object</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_access\">smk_access</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * An entry in the table mapping smack values to</span>", 
"<span class=\"comment\"> * CIPSO level/category-set values.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#smack_cipso\">smack_cipso</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#smk_level\">smk_level</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#smk_catset\">smk_catset</a>[<a class=\"id\" href=\"#SMK_LABELLEN\">SMK_LABELLEN</a>];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * An entry in the table identifying hosts.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#smk_netlbladdr\">smk_netlbladdr</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a><span class=\"ts\"/><a class=\"id\" href=\"#smk_host\">smk_host</a>;<span class=\"ts\"/><span class=\"comment\">/* network address */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_addr\">in_addr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_mask\">smk_mask</a>;<span class=\"ts\"/><span class=\"comment\">/* network mask */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_label\">smk_label</a>;<span class=\"ts\"/><span class=\"comment\">/* label */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is the repository for labels seen so that it is</span>", 
"<span class=\"comment\"> * not necessary to keep allocating tiny chuncks of memory</span>", 
"<span class=\"comment\"> * and so that they can be shared.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Labels are never modified in place. Anytime a label</span>", 
"<span class=\"comment\"> * is imported (e.g. xattrset on a file) the list is checked</span>", 
"<span class=\"comment\"> * for it and it is added if it doesn't exist. The address</span>", 
"<span class=\"comment\"> * is passed out in either case. Entries are added, but</span>", 
"<span class=\"comment\"> * never deleted.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Since labels are hanging around anyway it doesn't</span>", 
"<span class=\"comment\"> * hurt to maintain a secid for those awkward situations</span>", 
"<span class=\"comment\"> * where kernel components that ought to use LSM independent</span>", 
"<span class=\"comment\"> * interfaces don't. The secid should go away when all of</span>", 
"<span class=\"comment\"> * these components have been repaired.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If there is a cipso value associated with the label it</span>", 
"<span class=\"comment\"> * gets stored here, too. This will most likely be rare as</span>", 
"<span class=\"comment\"> * the cipso direct mapping in used internally.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#smack_known\">smack_known</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_known\">smk_known</a>[<a class=\"id\" href=\"#SMK_LABELLEN\">SMK_LABELLEN</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_secid\">smk_secid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#smack_cipso\">smack_cipso</a><span class=\"ts\"/>*<a class=\"id\" href=\"#smk_cipso\">smk_cipso</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smk_cipsolock\">smk_cipsolock</a>; <span class=\"comment\">/* for changing cipso map */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Mount options</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMK_FSDEFAULT\">SMK_FSDEFAULT</a><span class=\"ts\"/>\"smackfsdef=\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMK_FSFLOOR\">SMK_FSFLOOR</a><span class=\"ts\"/>\"smackfsfloor=\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMK_FSHAT\">SMK_FSHAT</a><span class=\"ts\"/>\"smackfshat=\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMK_FSROOT\">SMK_FSROOT</a><span class=\"ts\"/>\"smackfsroot=\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_OPTION\">SMACK_CIPSO_OPTION</a> <span class=\"ts\"/>\"-CIPSO\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * How communications on this socket are treated.</span>", 
"<span class=\"comment\"> * Usually it's determined by the underlying netlabel code</span>", 
"<span class=\"comment\"> * but there are certain cases, including single label hosts</span>", 
"<span class=\"comment\"> * and potentially single label interfaces for which the</span>", 
"<span class=\"comment\"> * treatment can not be known in advance.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The possibility of additional labeling schemes being</span>", 
"<span class=\"comment\"> * introduced in the future exists as well.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_UNLABELED_SOCKET\">SMACK_UNLABELED_SOCKET</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_SOCKET\">SMACK_CIPSO_SOCKET</a><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * smackfs magic number</span>", 
"<span class=\"comment\"> * smackfs macic number</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_MAGIC\">SMACK_MAGIC</a><span class=\"ts\"/>0x43415d53 <span class=\"comment\">/* \"SMAC\" */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A limit on the number of entries in the lists</span>", 
"<span class=\"comment\"> * makes some of the list administration easier.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_LIST_MAX\">SMACK_LIST_MAX</a><span class=\"ts\"/>10000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * CIPSO defaults.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_DOI_DEFAULT\">SMACK_CIPSO_DOI_DEFAULT</a><span class=\"ts\"/><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* Historical */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_DOI_INVALID\">SMACK_CIPSO_DOI_INVALID</a><span class=\"ts\"/><span class=\"ts\"/>-1<span class=\"ts\"/><span class=\"comment\">/* Not a DOI */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_DIRECT_DEFAULT\">SMACK_CIPSO_DIRECT_DEFAULT</a><span class=\"ts\"/>250<span class=\"ts\"/><span class=\"comment\">/* Arbitrary */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_MAXCATVAL\">SMACK_CIPSO_MAXCATVAL</a><span class=\"ts\"/><span class=\"ts\"/>63<span class=\"ts\"/><span class=\"comment\">/* Bigger gets harder */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_MAXLEVEL\">SMACK_CIPSO_MAXLEVEL</a>            255     <span class=\"comment\">/* CIPSO 2.2 standard */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_CIPSO_MAXCATNUM\">SMACK_CIPSO_MAXCATNUM</a>           239     <span class=\"comment\">/* CIPSO 2.2 standard */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Just to make the common cases easier to deal with</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAY_ANY\">MAY_ANY</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#MAY_READ\">MAY_READ</a> | <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a> | <a class=\"id\" href=\"#MAY_APPEND\">MAY_APPEND</a> | <a class=\"id\" href=\"#MAY_EXEC\">MAY_EXEC</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAY_ANYREAD\">MAY_ANYREAD</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MAY_READ\">MAY_READ</a> | <a class=\"id\" href=\"#MAY_EXEC\">MAY_EXEC</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAY_ANYWRITE\">MAY_ANYWRITE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a> | <a class=\"id\" href=\"#MAY_APPEND\">MAY_APPEND</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAY_READWRITE\">MAY_READWRITE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#MAY_READ\">MAY_READ</a> | <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAY_NOT\">MAY_NOT</a><span class=\"ts\"/><span class=\"ts\"/>0", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Number of access types used by Smack (rwxa)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMK_NUM_ACCESS_TYPE\">SMK_NUM_ACCESS_TYPE</a> 4", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Smack audit data; is empty if CONFIG_AUDIT not set</span>", 
"<span class=\"comment\"> * to save some stack</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDIT\">CONFIG_AUDIT</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#common_audit_data\">common_audit_data</a> <a class=\"id\" href=\"#a\">a</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These functions are in smack_lsm.c</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#inode_smack\">inode_smack</a> *<a class=\"id\" href=\"#new_inode_smack\">new_inode_smack</a>(char *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These functions are in smack_access.c</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#smk_access\">smk_access</a>(char *, char *, int, struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *);", 
"int <a class=\"id\" href=\"#smk_curacc\">smk_curacc</a>(char *, <a class=\"id\" href=\"#u32\">u32</a>, struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *);", 
"int <a class=\"id\" href=\"#smack_to_cipso\">smack_to_cipso</a>(const char *, struct <a class=\"id\" href=\"#smack_cipso\">smack_cipso</a> *);", 
"void <a class=\"id\" href=\"#smack_from_cipso\">smack_from_cipso</a>(<a class=\"id\" href=\"#u32\">u32</a>, char *, char *);", 
"char *<a class=\"id\" href=\"#smack_from_secid\">smack_from_secid</a>(const <a class=\"id\" href=\"#u32\">u32</a>);", 
"char *<a class=\"id\" href=\"#smk_import\">smk_import</a>(const char *, int);", 
"struct <a class=\"id\" href=\"#smack_known\">smack_known</a> *<a class=\"id\" href=\"#smk_import_entry\">smk_import_entry</a>(const char *, int);", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#smack_to_secid\">smack_to_secid</a>(const char *);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Shared data.</span>", 
"<span class=\"comment\"> */</span>", 
"extern int <a class=\"id\" href=\"#smack_cipso_direct\">smack_cipso_direct</a>;", 
"extern char *<a class=\"id\" href=\"#smack_net_ambient\">smack_net_ambient</a>;", 
"extern char *<a class=\"id\" href=\"#smack_onlycap\">smack_onlycap</a>;", 
"extern const char *<a class=\"id\" href=\"#smack_cipso_option\">smack_cipso_option</a>;", 
"", 
"extern struct <a class=\"id\" href=\"#smack_known\">smack_known</a> <a class=\"id\" href=\"#smack_known_floor\">smack_known_floor</a>;", 
"extern struct <a class=\"id\" href=\"#smack_known\">smack_known</a> <a class=\"id\" href=\"#smack_known_hat\">smack_known_hat</a>;", 
"extern struct <a class=\"id\" href=\"#smack_known\">smack_known</a> <a class=\"id\" href=\"#smack_known_huh\">smack_known_huh</a>;", 
"extern struct <a class=\"id\" href=\"#smack_known\">smack_known</a> <a class=\"id\" href=\"#smack_known_invalid\">smack_known_invalid</a>;", 
"extern struct <a class=\"id\" href=\"#smack_known\">smack_known</a> <a class=\"id\" href=\"#smack_known_star\">smack_known_star</a>;", 
"extern struct <a class=\"id\" href=\"#smack_known\">smack_known</a> <a class=\"id\" href=\"#smack_known_web\">smack_known_web</a>;", 
"", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#smack_known_list\">smack_known_list</a>;", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#smack_rule_list\">smack_rule_list</a>;", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#smk_netlbladdr_list\">smk_netlbladdr_list</a>;", 
"", 
"extern struct <a class=\"id\" href=\"#security_operations\">security_operations</a> <a class=\"id\" href=\"#smack_ops\">smack_ops</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Stricly for CIPSO level manipulation.</span>", 
"<span class=\"comment\"> * Set the category bit number in a smack label sized buffer.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smack_catset_bit\">smack_catset_bit</a>(int <a class=\"id\" href=\"#cat\">cat</a>, char *<a class=\"id\" href=\"#catsetp\">catsetp</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cat\">cat</a> &gt; <a class=\"id\" href=\"#SMK_LABELLEN\">SMK_LABELLEN</a> * 8)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#catsetp\">catsetp</a>[(<a class=\"id\" href=\"#cat\">cat</a> - 1) / 8] |= 0x80 >> ((<a class=\"id\" href=\"#cat\">cat</a> - 1) % 8);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Present a pointer to the smack label in an inode blob.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> char *<a class=\"id\" href=\"#smk_of_inode\">smk_of_inode</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#isp\">isp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode_smack\">inode_smack</a> *<a class=\"id\" href=\"#sip\">sip</a> = <a class=\"id\" href=\"#isp\">isp</a>-><a class=\"id\" href=\"#i_security\">i_security</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sip\">sip</a>-><a class=\"id\" href=\"#smk_inode\">smk_inode</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * logging functions</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_AUDIT_DENIED\">SMACK_AUDIT_DENIED</a> 0x1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SMACK_AUDIT_ACCEPT\">SMACK_AUDIT_ACCEPT</a> 0x2", 
"extern int <a class=\"id\" href=\"#log_policy\">log_policy</a>;", 
"", 
"void <a class=\"id\" href=\"#smack_log\">smack_log</a>(char *<a class=\"id\" href=\"#subject_label\">subject_label</a>, char *<a class=\"id\" href=\"#object_label\">object_label</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#request\">request</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a>, struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#auditdata\">auditdata</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDIT\">CONFIG_AUDIT</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * some inline functions to set up audit data</span>", 
"<span class=\"comment\"> * they do nothing if CONFIG_AUDIT is not set</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_init\">smk_ad_init</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>, const char *<a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       char <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#a\">a</a>, 0, sizeof(*<a class=\"id\" href=\"#a\">a</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#smack_audit_data\">smack_audit_data</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#func\">func</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_tsk\">smk_ad_setfield_u_tsk</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_path_dentry\">smk_ad_setfield_u_fs_path_dentry</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#d\">d</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_path_mnt\">smk_ad_setfield_u_fs_path_mnt</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#m\">m</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_inode\">smk_ad_setfield_u_fs_inode</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_path\">smk_ad_setfield_u_fs_path</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_net_sk\">smk_ad_setfield_u_net_sk</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk\">sk</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* no AUDIT */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_init\">smk_ad_init</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>, const char *<a class=\"id\" href=\"#func\">func</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       char <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_tsk\">smk_ad_setfield_u_tsk</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_path_dentry\">smk_ad_setfield_u_fs_path_dentry</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d\">d</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_path_mnt\">smk_ad_setfield_u_fs_path_mnt</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_inode\">smk_ad_setfield_u_fs_inode</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_fs_path\">smk_ad_setfield_u_fs_path</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#smk_ad_setfield_u_net_sk\">smk_ad_setfield_u_net_sk</a>(struct <a class=\"id\" href=\"#smk_audit_info\">smk_audit_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/* _SECURITY_SMACK_H */</span>", 
];
xr_frag_insert('l/29/7167bd0080b1793b94c30c5380d48c0c47059b.xr', __xr_tmp);
