var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#anon_vma_unlock\">anon_vma_unlock</a>(<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#mapcount\">mapcount</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#search_new_forks\">search_new_forks</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#referenced\">referenced</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#try_to_unmap_ksm\">try_to_unmap_ksm</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, enum <a class=\"id\" href=\"#ttu_flags\">ttu_flags</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stable_node\">stable_node</a> *<a class=\"id\" href=\"#stable_node\">stable_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#hlist\">hlist</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rmap_item\">rmap_item</a> *<a class=\"id\" href=\"#rmap_item\">rmap_item</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#SWAP_AGAIN\">SWAP_AGAIN</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#search_new_forks\">search_new_forks</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageKsm\">PageKsm</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stable_node\">stable_node</a> = <a class=\"id\" href=\"#page_stable_node\">page_stable_node</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stable_node\">stable_node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#SWAP_FAIL\">SWAP_FAIL</a>;", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#rmap_item\">rmap_item</a>, <a class=\"id\" href=\"#hlist\">hlist</a>, &amp;<a class=\"id\" href=\"#stable_node\">stable_node</a>-><a class=\"id\" href=\"#hlist\">hlist</a>, <a class=\"id\" href=\"#hlist\">hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#anon_vma\">anon_vma</a> *<a class=\"id\" href=\"#anon_vma\">anon_vma</a> = <a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#anon_vma\">anon_vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#anon_vma_chain\">anon_vma_chain</a> *<a class=\"id\" href=\"#vmac\">vmac</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#anon_vma_lock\">anon_vma_lock</a>(<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#vmac\">vmac</a>, &amp;<a class=\"id\" href=\"#anon_vma\">anon_vma</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#same_anon_vma\">same_anon_vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vmac\">vmac</a>-><a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#address\">address</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#address\">address</a> >= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Initially we examine only the vma which covers this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * rmap_item; but later, if there is still work to do,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we examine covering vmas in other mms: in case they</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * were forked from the original since ksmd passed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>) == <a class=\"id\" href=\"#search_new_forks\">search_new_forks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#try_to_unmap_one\">try_to_unmap_one</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#vma\">vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#SWAP_AGAIN\">SWAP_AGAIN</a> || !<a class=\"id\" href=\"#page_mapped\">page_mapped</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#anon_vma_unlock\">anon_vma_unlock</a>(<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#anon_vma_unlock\">anon_vma_unlock</a>(<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#search_new_forks\">search_new_forks</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MIGRATION\">CONFIG_MIGRATION</a>", 
"int <a class=\"id\" href=\"#rmap_walk_ksm\">rmap_walk_ksm</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, int (*<a class=\"id\" href=\"#rmap_one\">rmap_one</a>)(struct <a class=\"id\" href=\"#page\">page</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *, unsigned long, void *), void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stable_node\">stable_node</a> *<a class=\"id\" href=\"#stable_node\">stable_node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#hlist\">hlist</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rmap_item\">rmap_item</a> *<a class=\"id\" href=\"#rmap_item\">rmap_item</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#SWAP_AGAIN\">SWAP_AGAIN</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#search_new_forks\">search_new_forks</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageKsm\">PageKsm</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stable_node\">stable_node</a> = <a class=\"id\" href=\"#page_stable_node\">page_stable_node</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stable_node\">stable_node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#rmap_item\">rmap_item</a>, <a class=\"id\" href=\"#hlist\">hlist</a>, &amp;<a class=\"id\" href=\"#stable_node\">stable_node</a>-><a class=\"id\" href=\"#hlist\">hlist</a>, <a class=\"id\" href=\"#hlist\">hlist</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#anon_vma\">anon_vma</a> *<a class=\"id\" href=\"#anon_vma\">anon_vma</a> = <a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#anon_vma\">anon_vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#anon_vma_chain\">anon_vma_chain</a> *<a class=\"id\" href=\"#vmac\">vmac</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#anon_vma_lock\">anon_vma_lock</a>(<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#vmac\">vmac</a>, &amp;<a class=\"id\" href=\"#anon_vma\">anon_vma</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#same_anon_vma\">same_anon_vma</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#vmac\">vmac</a>-><a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#address\">address</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#address\">address</a> >= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Initially we examine only the vma which covers this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * rmap_item; but later, if there is still work to do,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * we examine covering vmas in other mms: in case they</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * were forked from the original since ksmd passed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#mm\">mm</a> == <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>) == <a class=\"id\" href=\"#search_new_forks\">search_new_forks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#rmap_one\">rmap_one</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#rmap_item\">rmap_item</a>-><a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#SWAP_AGAIN\">SWAP_AGAIN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#anon_vma_unlock\">anon_vma_unlock</a>(<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#anon_vma_unlock\">anon_vma_unlock</a>(<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#search_new_forks\">search_new_forks</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#ksm_migrate_page\">ksm_migrate_page</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#newpage\">newpage</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#oldpage\">oldpage</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stable_node\">stable_node</a> *<a class=\"id\" href=\"#stable_node\">stable_node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#oldpage\">oldpage</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#newpage\">newpage</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#newpage\">newpage</a>-><a class=\"id\" href=\"#mapping\">mapping</a> != <a class=\"id\" href=\"#oldpage\">oldpage</a>-><a class=\"id\" href=\"#mapping\">mapping</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stable_node\">stable_node</a> = <a class=\"id\" href=\"#page_stable_node\">page_stable_node</a>(<a class=\"id\" href=\"#newpage\">newpage</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#stable_node\">stable_node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#stable_node\">stable_node</a>-><a class=\"id\" href=\"#kpfn\">kpfn</a> != <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#oldpage\">oldpage</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stable_node\">stable_node</a>-><a class=\"id\" href=\"#kpfn\">kpfn</a> = <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#newpage\">newpage</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MIGRATION */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMORY_HOTREMOVE\">CONFIG_MEMORY_HOTREMOVE</a>", 
"static struct <a class=\"id\" href=\"#stable_node\">stable_node</a> *<a class=\"id\" href=\"#ksm_check_stable_tree\">ksm_check_stable_tree</a>(unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#root_stable_tree\">root_stable_tree</a>); <a class=\"id\" href=\"#node\">node</a>; <a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_next\">rb_next</a>(<a class=\"id\" href=\"#node\">node</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#stable_node\">stable_node</a> *<a class=\"id\" href=\"#stable_node\">stable_node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stable_node\">stable_node</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#stable_node\">stable_node</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#stable_node\">stable_node</a>-><a class=\"id\" href=\"#kpfn\">kpfn</a> >= <a class=\"id\" href=\"#start_pfn\">start_pfn</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#stable_node\">stable_node</a>-><a class=\"id\" href=\"#kpfn\">kpfn</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#stable_node\">stable_node</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ksm_memory_callback\">ksm_memory_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#memory_notify\">memory_notify</a> *<a class=\"id\" href=\"#mn\">mn</a> = <a class=\"id\" href=\"#arg\">arg</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#stable_node\">stable_node</a> *<a class=\"id\" href=\"#stable_node\">stable_node</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_GOING_OFFLINE\">MEM_GOING_OFFLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Keep it very simple for now: just lock out ksmd and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * MADV_UNMERGEABLE while any memory is going offline.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ksm_thread_mutex\">ksm_thread_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_OFFLINE\">MEM_OFFLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Most of the work is done by page migration; but there might</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * be a few stable_nodes left over, still pointing to struct</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pages which have been offlined: prune those from the tree.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#stable_node\">stable_node</a> = <a class=\"id\" href=\"#ksm_check_stable_tree\">ksm_check_stable_tree</a>(<a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#start_pfn\">start_pfn</a> + <a class=\"id\" href=\"#mn\">mn</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#remove_node_from_stable_tree\">remove_node_from_stable_tree</a>(<a class=\"id\" href=\"#stable_node\">stable_node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fallthrough */</span>", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#MEM_CANCEL_OFFLINE\">MEM_CANCEL_OFFLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ksm_thread_mutex\">ksm_thread_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MEMORY_HOTREMOVE */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS\">CONFIG_SYSFS</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This all compiles without CONFIG_SYSFS, but is a waste of space.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KSM_ATTR_RO\">KSM_ATTR_RO</a>(<a class=\"id\" href=\"#_name\">_name</a>) \\", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> <a class=\"id\" href=\"#_name\">_name</a>##<a class=\"id\" href=\"#_attr\">_attr</a> = <a class=\"id\" href=\"#__ATTR_RO\">__ATTR_RO</a>(<a class=\"id\" href=\"#_name\">_name</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KSM_ATTR\">KSM_ATTR</a>(<a class=\"id\" href=\"#_name\">_name</a>) \\", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> <a class=\"id\" href=\"#_name\">_name</a>##<a class=\"id\" href=\"#_attr\">_attr</a> = \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__ATTR\">__ATTR</a>(<a class=\"id\" href=\"#_name\">_name</a>, 0644, <a class=\"id\" href=\"#_name\">_name</a>##<a class=\"id\" href=\"#_show\">_show</a>, <a class=\"id\" href=\"#_name\">_name</a>##<a class=\"id\" href=\"#_store\">_store</a>)", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sleep_millisecs_show\">sleep_millisecs_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#ksm_thread_sleep_millisecs\">ksm_thread_sleep_millisecs</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sleep_millisecs_store\">sleep_millisecs_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#msecs\">msecs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#msecs\">msecs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> || <a class=\"id\" href=\"#msecs\">msecs</a> &gt; <a class=\"id\" href=\"#UINT_MAX\">UINT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ksm_thread_sleep_millisecs\">ksm_thread_sleep_millisecs</a> = <a class=\"id\" href=\"#msecs\">msecs</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR\">KSM_ATTR</a>(<a class=\"id\" href=\"#sleep_millisecs\">sleep_millisecs</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pages_to_scan_show\">pages_to_scan_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#ksm_thread_pages_to_scan\">ksm_thread_pages_to_scan</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pages_to_scan_store\">pages_to_scan_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> || <a class=\"id\" href=\"#nr_pages\">nr_pages</a> &gt; <a class=\"id\" href=\"#UINT_MAX\">UINT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ksm_thread_pages_to_scan\">ksm_thread_pages_to_scan</a> = <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR\">KSM_ATTR</a>(<a class=\"id\" href=\"#pages_to_scan\">pages_to_scan</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#run_show\">run_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%u\\n\", <a class=\"id\" href=\"#ksm_run\">ksm_run</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#run_store\">run_store</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> || <a class=\"id\" href=\"#flags\">flags</a> &gt; <a class=\"id\" href=\"#UINT_MAX\">UINT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &gt; <a class=\"id\" href=\"#KSM_RUN_UNMERGE\">KSM_RUN_UNMERGE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * KSM_RUN_MERGE sets ksmd running, and 0 stops it running.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * KSM_RUN_UNMERGE stops it running and unmerges all rmap_items,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * breaking COW to free the pages_shared (but leaves mm_slots</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on the list for when ksmd may be set running again).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#ksm_thread_mutex\">ksm_thread_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ksm_run\">ksm_run</a> != <a class=\"id\" href=\"#flags\">flags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ksm_run\">ksm_run</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#KSM_RUN_UNMERGE\">KSM_RUN_UNMERGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PF_OOM_ORIGIN\">PF_OOM_ORIGIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#unmerge_and_remove_all_rmap_items\">unmerge_and_remove_all_rmap_items</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#PF_OOM_ORIGIN\">PF_OOM_ORIGIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ksm_run\">ksm_run</a> = <a class=\"id\" href=\"#KSM_RUN_STOP\">KSM_RUN_STOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#ksm_thread_mutex\">ksm_thread_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#KSM_RUN_MERGE\">KSM_RUN_MERGE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_interruptible\">wake_up_interruptible</a>(&amp;<a class=\"id\" href=\"#ksm_thread_wait\">ksm_thread_wait</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR\">KSM_ATTR</a>(<a class=\"id\" href=\"#run\">run</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pages_shared_show\">pages_shared_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", <a class=\"id\" href=\"#ksm_pages_shared\">ksm_pages_shared</a>);", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR_RO\">KSM_ATTR_RO</a>(<a class=\"id\" href=\"#pages_shared\">pages_shared</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pages_sharing_show\">pages_sharing_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", <a class=\"id\" href=\"#ksm_pages_sharing\">ksm_pages_sharing</a>);", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR_RO\">KSM_ATTR_RO</a>(<a class=\"id\" href=\"#pages_sharing\">pages_sharing</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pages_unshared_show\">pages_unshared_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", <a class=\"id\" href=\"#ksm_pages_unshared\">ksm_pages_unshared</a>);", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR_RO\">KSM_ATTR_RO</a>(<a class=\"id\" href=\"#pages_unshared\">pages_unshared</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#pages_volatile_show\">pages_volatile_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ksm_pages_volatile\">ksm_pages_volatile</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ksm_pages_volatile\">ksm_pages_volatile</a> = <a class=\"id\" href=\"#ksm_rmap_items\">ksm_rmap_items</a> - <a class=\"id\" href=\"#ksm_pages_shared\">ksm_pages_shared</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- <a class=\"id\" href=\"#ksm_pages_sharing\">ksm_pages_sharing</a> - <a class=\"id\" href=\"#ksm_pages_unshared\">ksm_pages_unshared</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It was not worth any locking to calculate that statistic,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * but it might therefore sometimes be negative: conceal that.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ksm_pages_volatile\">ksm_pages_volatile</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ksm_pages_volatile\">ksm_pages_volatile</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%ld\\n\", <a class=\"id\" href=\"#ksm_pages_volatile\">ksm_pages_volatile</a>);", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR_RO\">KSM_ATTR_RO</a>(<a class=\"id\" href=\"#pages_volatile\">pages_volatile</a>);", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#full_scans_show\">full_scans_show</a>(struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#kobj_attribute\">kobj_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\", <a class=\"id\" href=\"#ksm_scan\">ksm_scan</a>.<a class=\"id\" href=\"#seqnr\">seqnr</a>);", 
"}", 
"<a class=\"id\" href=\"#KSM_ATTR_RO\">KSM_ATTR_RO</a>(<a class=\"id\" href=\"#full_scans\">full_scans</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#ksm_attrs\">ksm_attrs</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#sleep_millisecs_attr\">sleep_millisecs_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#pages_to_scan_attr\">pages_to_scan_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#run_attr\">run_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#pages_shared_attr\">pages_shared_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#pages_sharing_attr\">pages_sharing_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#pages_unshared_attr\">pages_unshared_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#pages_volatile_attr\">pages_volatile_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#full_scans_attr\">full_scans_attr</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#ksm_attr_group\">ksm_attr_group</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a> = <a class=\"id\" href=\"#ksm_attrs\">ksm_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"ksm\",", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SYSFS */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ksm_init\">ksm_init</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#ksm_thread\">ksm_thread</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ksm_slab_init\">ksm_slab_init</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ksm_thread\">ksm_thread</a> = <a class=\"id\" href=\"#kthread_run\">kthread_run</a>(<a class=\"id\" href=\"#ksm_scan_thread\">ksm_scan_thread</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, \"ksmd\");", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ksm_thread\">ksm_thread</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"ksm: creating kthread failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ksm_thread\">ksm_thread</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS\">CONFIG_SYSFS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(<a class=\"id\" href=\"#mm_kobj\">mm_kobj</a>, &amp;<a class=\"id\" href=\"#ksm_attr_group\">ksm_attr_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"ksm: register sysfs failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kthread_stop\">kthread_stop</a>(<a class=\"id\" href=\"#ksm_thread\">ksm_thread</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/>}", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ksm_run\">ksm_run</a> = <a class=\"id\" href=\"#KSM_RUN_MERGE\">KSM_RUN_MERGE</a>;<span class=\"ts\"/><span class=\"comment\">/* no way for user to start it */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SYSFS */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMORY_HOTREMOVE\">CONFIG_MEMORY_HOTREMOVE</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Choose a high priority since the callback takes ksm_thread_mutex:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * later callbacks could only be taking locks which nest within that.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hotplug_memory_notifier\">hotplug_memory_notifier</a>(<a class=\"id\" href=\"#ksm_memory_callback\">ksm_memory_callback</a>, 100);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ksm_slab_free\">ksm_slab_free</a>();", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#ksm_init\">ksm_init</a>)", 
];
xr_frag_insert('l/29/a6cd60bf74cd29e7b10781f25264c85b3a82e0.xr', __xr_tmp);
