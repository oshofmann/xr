var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_E820_H\">_ASM_X86_E820_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_E820_H\">_ASM_X86_E820_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820MAP\">E820MAP</a><span class=\"ts\"/>0x2d0<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* our map */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820MAX\">E820MAX</a><span class=\"ts\"/>128<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of entries in E820MAP */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Legacy E820 BIOS limits us to 128 (E820MAX) nodes due to the</span>", 
"<span class=\"comment\"> * constrained space in the zeropage.  If we have more nodes than</span>", 
"<span class=\"comment\"> * that, and if we've booted off EFI firmware, then the EFI tables</span>", 
"<span class=\"comment\"> * passed us from the EFI firmware can list more nodes.  Size our</span>", 
"<span class=\"comment\"> * internal memory map tables to have room for these additional</span>", 
"<span class=\"comment\"> * nodes, based on up to three entries per node for which the</span>", 
"<span class=\"comment\"> * kernel was built: MAX_NUMNODES == (1 &lt;&lt; CONFIG_NODES_SHIFT),</span>", 
"<span class=\"comment\"> * plus E820MAX, allowing space for the possible duplicate E820</span>", 
"<span class=\"comment\"> * entries that might need room in the same arrays, prior to the</span>", 
"<span class=\"comment\"> * call to sanitize_e820_map() to remove duplicates.  The allowance</span>", 
"<span class=\"comment\"> * of three memory map entries per node is \"enough\" entries for</span>", 
"<span class=\"comment\"> * the initial hardware platform motivating this mechanism to make</span>", 
"<span class=\"comment\"> * use of additional EFI map entries.  Future platforms may want</span>", 
"<span class=\"comment\"> * to allow more than three entries per node or otherwise refine</span>", 
"<span class=\"comment\"> * this size.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Odd: 'make headers_check' complains about numa.h if I try</span>", 
"<span class=\"comment\"> * to collapse the next two #ifdef lines to a single line:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>#if defined(__KERNEL__) &amp;&amp; defined(CONFIG_EFI)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EFI\">CONFIG_EFI</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#numa\">numa</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_X_MAX\">E820_X_MAX</a> (<a class=\"id\" href=\"#E820MAX\">E820MAX</a> + 3 * <a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>)", 
"#else<span class=\"ts\"/><span class=\"comment\">/* ! CONFIG_EFI */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_X_MAX\">E820_X_MAX</a> <a class=\"id\" href=\"#E820MAX\">E820MAX</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#else<span class=\"ts\"/><span class=\"comment\">/* ! __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_X_MAX\">E820_X_MAX</a> <a class=\"id\" href=\"#E820MAX\">E820MAX</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820NR\">E820NR</a><span class=\"ts\"/>0x1e8<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # entries in E820MAP */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_ACPI\">E820_ACPI</a><span class=\"ts\"/>3", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_NVS\">E820_NVS</a><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_UNUSABLE\">E820_UNUSABLE</a><span class=\"ts\"/>5", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * reserved RAM used by kernel itself</span>", 
"<span class=\"comment\"> * if CONFIG_INTEL_TXT is enabled, memory of this type will be</span>", 
"<span class=\"comment\"> * included in the S3 integrity calculation and so should not include</span>", 
"<span class=\"comment\"> * any memory that BIOS might alter over the S3 transition</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#E820_RESERVED_KERN\">E820_RESERVED_KERN</a>        128", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"struct <a class=\"id\" href=\"#e820entry\">e820entry</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#addr\">addr</a>;<span class=\"ts\"/><span class=\"comment\">/* start of memory segment */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#size\">size</a>;<span class=\"ts\"/><span class=\"comment\">/* size of memory segment */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#type\">type</a>;<span class=\"ts\"/><span class=\"comment\">/* type of memory segment */</span>", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"struct <a class=\"id\" href=\"#e820map\">e820map</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#nr_map\">nr_map</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#e820entry\">e820entry</a> <a class=\"id\" href=\"#map\">map</a>[<a class=\"id\" href=\"#E820_X_MAX\">E820_X_MAX</a>];", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ISA_START_ADDRESS\">ISA_START_ADDRESS</a><span class=\"ts\"/>0xa0000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ISA_END_ADDRESS\">ISA_END_ADDRESS</a><span class=\"ts\"/><span class=\"ts\"/>0x100000", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIOS_BEGIN\">BIOS_BEGIN</a><span class=\"ts\"/><span class=\"ts\"/>0x000a0000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIOS_END\">BIOS_END</a><span class=\"ts\"/><span class=\"ts\"/>0x00100000", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"<span class=\"comment\">/* see comment in arch/x86/kernel/e820.c */</span>", 
"extern struct <a class=\"id\" href=\"#e820map\">e820map</a> <a class=\"id\" href=\"#e820\">e820</a>;", 
"extern struct <a class=\"id\" href=\"#e820map\">e820map</a> <a class=\"id\" href=\"#e820_saved\">e820_saved</a>;", 
"", 
"extern unsigned long <a class=\"id\" href=\"#pci_mem_start\">pci_mem_start</a>;", 
"extern int <a class=\"id\" href=\"#e820_any_mapped\">e820_any_mapped</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>, unsigned <a class=\"id\" href=\"#type\">type</a>);", 
"extern int <a class=\"id\" href=\"#e820_all_mapped\">e820_all_mapped</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>, unsigned <a class=\"id\" href=\"#type\">type</a>);", 
"extern void <a class=\"id\" href=\"#e820_add_region\">e820_add_region</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#type\">type</a>);", 
"extern void <a class=\"id\" href=\"#e820_print_map\">e820_print_map</a>(char *<a class=\"id\" href=\"#who\">who</a>);", 
"extern int", 
"<a class=\"id\" href=\"#sanitize_e820_map\">sanitize_e820_map</a>(struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#biosmap\">biosmap</a>, int <a class=\"id\" href=\"#max_nr_map\">max_nr_map</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#pnr_map\">pnr_map</a>);", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, unsigned <a class=\"id\" href=\"#old_type\">old_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned <a class=\"id\" href=\"#new_type\">new_type</a>);", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#e820_remove_range\">e820_remove_range</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, unsigned <a class=\"id\" href=\"#old_type\">old_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#checktype\">checktype</a>);", 
"extern void <a class=\"id\" href=\"#update_e820\">update_e820</a>(void);", 
"extern void <a class=\"id\" href=\"#e820_setup_gap\">e820_setup_gap</a>(void);", 
"extern int <a class=\"id\" href=\"#e820_search_gap\">e820_search_gap</a>(unsigned long *<a class=\"id\" href=\"#gapstart\">gapstart</a>, unsigned long *<a class=\"id\" href=\"#gapsize\">gapsize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_addr\">start_addr</a>, unsigned long long <a class=\"id\" href=\"#end_addr\">end_addr</a>);", 
"struct <a class=\"id\" href=\"#setup_data\">setup_data</a>;", 
"extern void <a class=\"id\" href=\"#parse_e820_ext\">parse_e820_ext</a>(struct <a class=\"id\" href=\"#setup_data\">setup_data</a> *<a class=\"id\" href=\"#data\">data</a>, unsigned long <a class=\"id\" href=\"#pa_data\">pa_data</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>) || \\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_HIBERNATION\">CONFIG_HIBERNATION</a>))", 
"extern void <a class=\"id\" href=\"#e820_mark_nosave_regions\">e820_mark_nosave_regions</a>(unsigned long <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#e820_mark_nosave_regions\">e820_mark_nosave_regions</a>(unsigned long <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMTEST\">CONFIG_MEMTEST</a>", 
"extern void <a class=\"id\" href=\"#early_memtest\">early_memtest</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#early_memtest\">early_memtest</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern unsigned long <a class=\"id\" href=\"#end_user_pfn\">end_user_pfn</a>;", 
"", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a>);", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#find_e820_area_size\">find_e820_area_size</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#sizep\">sizep</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a>);", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#early_reserve_e820\">early_reserve_e820</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#startt\">startt</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sizet\">sizet</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#align\">align</a>);", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#early_res\">early_res</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern unsigned long <a class=\"id\" href=\"#e820_end_of_ram_pfn\">e820_end_of_ram_pfn</a>(void);", 
"extern unsigned long <a class=\"id\" href=\"#e820_end_of_low_ram_pfn\">e820_end_of_low_ram_pfn</a>(void);", 
"extern int <a class=\"id\" href=\"#e820_find_active_region\">e820_find_active_region</a>(const struct <a class=\"id\" href=\"#e820entry\">e820entry</a> *<a class=\"id\" href=\"#ei\">ei</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#last_pfn\">last_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long *<a class=\"id\" href=\"#ei_startpfn\">ei_startpfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long *<a class=\"id\" href=\"#ei_endpfn\">ei_endpfn</a>);", 
"extern void <a class=\"id\" href=\"#e820_register_active_regions\">e820_register_active_regions</a>(int <a class=\"id\" href=\"#nid\">nid</a>, unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a>);", 
"extern <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#e820_hole_size\">e820_hole_size</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#end\">end</a>);", 
"extern void <a class=\"id\" href=\"#finish_e820_parsing\">finish_e820_parsing</a>(void);", 
"extern void <a class=\"id\" href=\"#e820_reserve_resources\">e820_reserve_resources</a>(void);", 
"extern void <a class=\"id\" href=\"#e820_reserve_resources_late\">e820_reserve_resources_late</a>(void);", 
"extern void <a class=\"id\" href=\"#setup_memory_map\">setup_memory_map</a>(void);", 
"extern char *<a class=\"id\" href=\"#default_machine_specific_memory_setup\">default_machine_specific_memory_setup</a>(void);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns true iff the specified range [s,e) is completely contained inside</span>", 
"<span class=\"comment\"> * the ISA region.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_ISA_range\">is_ISA_range</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#e\">e</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#s\">s</a> >= <a class=\"id\" href=\"#ISA_START_ADDRESS\">ISA_START_ADDRESS</a> && <a class=\"id\" href=\"#e\">e</a> <= <a class=\"id\" href=\"#ISA_END_ADDRESS\">ISA_END_ADDRESS</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ioport\">ioport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HIGH_MEMORY\">HIGH_MEMORY</a><span class=\"ts\"/>(1024*1024)", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_E820_H */</span>", 
];
xr_frag_insert('l/29/da86a39fa222c32d235fbf0afc7e4109cf6294.xr', __xr_tmp);
