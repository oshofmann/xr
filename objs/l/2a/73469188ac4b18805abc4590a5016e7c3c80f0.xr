var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> == <a class=\"id\" href=\"#nr_meta_pages\">nr_meta_pages</a> + 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#prepare_image\">prepare_image</a>(&amp;<a class=\"id\" href=\"#orig_bm\">orig_bm</a>, &amp;<a class=\"id\" href=\"#copy_bm\">copy_bm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chain_init\">chain_init</a>(&amp;<a class=\"id\" href=\"#ca\">ca</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#PG_SAFE\">PG_SAFE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memory_bm_position_reset\">memory_bm_position_reset</a>(&amp;<a class=\"id\" href=\"#orig_bm\">orig_bm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#restore_pblist\">restore_pblist</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#get_buffer\">get_buffer</a>(&amp;<a class=\"id\" href=\"#orig_bm\">orig_bm</a>, &amp;<a class=\"id\" href=\"#ca\">ca</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#sync_read\">sync_read</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#buffer\">buffer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_last_highmem_page\">copy_last_highmem_page</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#get_buffer\">get_buffer</a>(&amp;<a class=\"id\" href=\"#orig_bm\">orig_bm</a>, &amp;<a class=\"id\" href=\"#ca\">ca</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#buffer\">buffer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#buffer\">buffer</a> != <a class=\"id\" href=\"#buffer\">buffer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#sync_read\">sync_read</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a>++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>snapshot_write_finalize - must be called after the last call to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>snapshot_write_next() in case the last page in the image happens</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to be a highmem page and its contents should be stored in the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>highmem.  Additionally, it releases the memory that will not be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>used any more.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"void <a class=\"id\" href=\"#snapshot_write_finalize\">snapshot_write_finalize</a>(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copy_last_highmem_page\">copy_last_highmem_page</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* Free only if we have loaded the image entirely */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> &gt; 1 && <a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> &gt; <a class=\"id\" href=\"#nr_meta_pages\">nr_meta_pages</a> + <a class=\"id\" href=\"#nr_copy_pages\">nr_copy_pages</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memory_bm_free\">memory_bm_free</a>(&amp;<a class=\"id\" href=\"#orig_bm\">orig_bm</a>, <a class=\"id\" href=\"#PG_UNSAFE_CLEAR\">PG_UNSAFE_CLEAR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_highmem_data\">free_highmem_data</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#snapshot_image_loaded\">snapshot_image_loaded</a>(struct <a class=\"id\" href=\"#snapshot_handle\">snapshot_handle</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>return !(!<a class=\"id\" href=\"#nr_copy_pages\">nr_copy_pages</a> || !<a class=\"id\" href=\"#last_highmem_page_copied\">last_highmem_page_copied</a>() ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a>-><a class=\"id\" href=\"#cur\">cur</a> <= <a class=\"id\" href=\"#nr_meta_pages\">nr_meta_pages</a> + <a class=\"id\" href=\"#nr_copy_pages\">nr_copy_pages</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIGHMEM\">CONFIG_HIGHMEM</a>", 
"<span class=\"comment\">/* Assumes that @buf is ready and points to a \"safe\" page */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#swap_two_pages_data\">swap_two_pages_data</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#p1\">p1</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#p2\">p2</a>, void *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#kaddr1\">kaddr1</a>, *<a class=\"id\" href=\"#kaddr2\">kaddr2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kaddr1\">kaddr1</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#p1\">p1</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kaddr2\">kaddr2</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#p2\">p2</a>, <a class=\"id\" href=\"#KM_USER1\">KM_USER1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#kaddr1\">kaddr1</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#kaddr1\">kaddr1</a>, <a class=\"id\" href=\"#kaddr2\">kaddr2</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#kaddr2\">kaddr2</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#kaddr1\">kaddr1</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#kaddr2\">kaddr2</a>, <a class=\"id\" href=\"#KM_USER1\">KM_USER1</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>restore_highmem - for each highmem page that was allocated before</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the suspend and included in the suspend image, and also has been</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>allocated by the \"resume\" kernel swap its current (ie. \"before</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>resume\") contents with the previous (ie. \"before suspend\") one.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>If the resume eventually fails, we can call this function once</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>again and restore the \"before resume\" highmem state.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#restore_highmem\">restore_highmem</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#highmem_pbe\">highmem_pbe</a> *<a class=\"id\" href=\"#pbe\">pbe</a> = <a class=\"id\" href=\"#highmem_pblist\">highmem_pblist</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pbe\">pbe</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#get_image_page\">get_image_page</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>, <a class=\"id\" href=\"#PG_SAFE\">PG_SAFE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#pbe\">pbe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap_two_pages_data\">swap_two_pages_data</a>(<a class=\"id\" href=\"#pbe\">pbe</a>-><a class=\"id\" href=\"#copy_page\">copy_page</a>, <a class=\"id\" href=\"#pbe\">pbe</a>-><a class=\"id\" href=\"#orig_page\">orig_page</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pbe\">pbe</a> = <a class=\"id\" href=\"#pbe\">pbe</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_image_page\">free_image_page</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PG_UNSAFE_CLEAR\">PG_UNSAFE_CLEAR</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HIGHMEM */</span>", 
];
xr_frag_insert('l/2a/73469188ac4b18805abc4590a5016e7c3c80f0.xr', __xr_tmp);
