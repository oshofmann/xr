var __xr_tmp = [
"<span class=\"comment\"> *         from.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#debugfs_create_x8\">debugfs_create_x8</a>(const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* if there are no write bits set, make read only */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x8_ro\">fops_x8_ro</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* if there are no read bits set, make write only */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x8_wo\">fops_x8_wo</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x8\">fops_x8</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#debugfs_create_x8\">debugfs_create_x8</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * debugfs_create_x16 - create a debugfs file that is used to read and write an unsigned 16-bit value</span>", 
"<span class=\"comment\"> * @name: a pointer to a string containing the name of the file to create.</span>", 
"<span class=\"comment\"> * @mode: the permission that the file should have</span>", 
"<span class=\"comment\"> * @parent: a pointer to the parent dentry for this file.  This should be a</span>", 
"<span class=\"comment\"> *          directory dentry if set.  If this parameter is %NULL, then the</span>", 
"<span class=\"comment\"> *          file will be created in the root of the debugfs filesystem.</span>", 
"<span class=\"comment\"> * @value: a pointer to the variable that the file should read to and write</span>", 
"<span class=\"comment\"> *         from.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#debugfs_create_x16\">debugfs_create_x16</a>(const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* if there are no write bits set, make read only */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x16_ro\">fops_x16_ro</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* if there are no read bits set, make write only */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x16_wo\">fops_x16_wo</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x16\">fops_x16</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#debugfs_create_x16\">debugfs_create_x16</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * debugfs_create_x32 - create a debugfs file that is used to read and write an unsigned 32-bit value</span>", 
"<span class=\"comment\"> * @name: a pointer to a string containing the name of the file to create.</span>", 
"<span class=\"comment\"> * @mode: the permission that the file should have</span>", 
"<span class=\"comment\"> * @parent: a pointer to the parent dentry for this file.  This should be a</span>", 
"<span class=\"comment\"> *          directory dentry if set.  If this parameter is %NULL, then the</span>", 
"<span class=\"comment\"> *          file will be created in the root of the debugfs filesystem.</span>", 
"<span class=\"comment\"> * @value: a pointer to the variable that the file should read to and write</span>", 
"<span class=\"comment\"> *         from.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#debugfs_create_x32\">debugfs_create_x32</a>(const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* if there are no write bits set, make read only */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IWUGO\">S_IWUGO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x32_ro\">fops_x32_ro</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* if there are no read bits set, make write only */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x32_wo\">fops_x32_wo</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x32\">fops_x32</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#debugfs_create_x32\">debugfs_create_x32</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * debugfs_create_x64 - create a debugfs file that is used to read and write an unsigned 64-bit value</span>", 
"<span class=\"comment\"> * @name: a pointer to a string containing the name of the file to create.</span>", 
"<span class=\"comment\"> * @mode: the permission that the file should have</span>", 
"<span class=\"comment\"> * @parent: a pointer to the parent dentry for this file.  This should be a</span>", 
"<span class=\"comment\"> *          directory dentry if set.  If this parameter is %NULL, then the</span>", 
"<span class=\"comment\"> *          file will be created in the root of the debugfs filesystem.</span>", 
"<span class=\"comment\"> * @value: a pointer to the variable that the file should read to and write</span>", 
"<span class=\"comment\"> *         from.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#debugfs_create_x64\">debugfs_create_x64</a>(const char *<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#fops_x64\">fops_x64</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#debugfs_create_x64\">debugfs_create_x64</a>);", 
"", 
"", 
"static int <a class=\"id\" href=\"#debugfs_size_t_set\">debugfs_size_t_set</a>(void *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#size_t\">size_t</a> *)<a class=\"id\" href=\"#data\">data</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static int <a class=\"id\" href=\"#debugfs_size_t_get\">debugfs_size_t_get</a>(void *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#u64\">u64</a> *<a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#val\">val</a> = *(<a class=\"id\" href=\"#size_t\">size_t</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/2a/fd58a2542203dec9ca3658186d508ac76507b7.xr', __xr_tmp);
