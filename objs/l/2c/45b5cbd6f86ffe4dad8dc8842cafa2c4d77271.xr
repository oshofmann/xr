var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up the VMAs to tell the VM about the vDSO.</span>", 
"<span class=\"comment\"> * Copyright 2007 Andi Kleen, SUSE Labs.</span>", 
"<span class=\"comment\"> * Subject to the GPL, v.2</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#elf\">elf</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vsyscall\">vsyscall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vgtod\">vgtod</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#vdso\">vdso</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"vextern.h\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Just for VMAGIC.  */</span>", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#VEXTERN\">VEXTERN</a>", 
"", 
"unsigned int <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> <a class=\"id\" href=\"#vdso_enabled\">vdso_enabled</a> = 1;", 
"", 
"extern char <a class=\"id\" href=\"#vdso_start\">vdso_start</a>[], <a class=\"id\" href=\"#vdso_end\">vdso_end</a>[];", 
"extern unsigned short <a class=\"id\" href=\"#vdso_sync_cpuid\">vdso_sync_cpuid</a>;", 
"", 
"static struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#vdso_pages\">vdso_pages</a>;", 
"static unsigned <a class=\"id\" href=\"#vdso_size\">vdso_size</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#var_ref\">var_ref</a>(void *<a class=\"id\" href=\"#p\">p</a>, char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>if (*(void **)<a class=\"id\" href=\"#p\">p</a> != (void *)<a class=\"id\" href=\"#VMAGIC\">VMAGIC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"VDSO: variable %s broken\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vdso_enabled\">vdso_enabled</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_vdso_vars\">init_vdso_vars</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#npages\">npages</a> = (<a class=\"id\" href=\"#vdso_end\">vdso_end</a> - <a class=\"id\" href=\"#vdso_start\">vdso_start</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#vbase\">vbase</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdso_size\">vdso_size</a> = <a class=\"id\" href=\"#npages\">npages</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdso_pages\">vdso_pages</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#page\">page</a> *) * <a class=\"id\" href=\"#npages\">npages</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vdso_pages\">vdso_pages</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#oom\">oom</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#npages\">npages</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#alloc_page\">alloc_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#oom\">oom</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vdso_pages\">vdso_pages</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy_page\">copy_page</a>(<a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#p\">p</a>), <a class=\"id\" href=\"#vdso_start\">vdso_start</a> + <a class=\"id\" href=\"#i\">i</a>*<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vbase\">vbase</a> = <a class=\"id\" href=\"#vmap\">vmap</a>(<a class=\"id\" href=\"#vdso_pages\">vdso_pages</a>, <a class=\"id\" href=\"#npages\">npages</a>, 0, <a class=\"id\" href=\"#PAGE_KERNEL\">PAGE_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vbase\">vbase</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#oom\">oom</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#vbase\">vbase</a>, \"\\177ELF\", 4)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"VDSO: I'm broken; not ELF\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vdso_enabled\">vdso_enabled</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VEXTERN\">VEXTERN</a>(<a class=\"id\" href=\"#x\">x</a>) \\", 
"<span class=\"ts\"/>*(<a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#__\">__</a> ## <a class=\"id\" href=\"#x\">x</a>) **) <a class=\"id\" href=\"#var_ref\">var_ref</a>(<a class=\"id\" href=\"#VDSO64_SYMBOL\">VDSO64_SYMBOL</a>(<a class=\"id\" href=\"#vbase\">vbase</a>, <a class=\"id\" href=\"#x\">x</a>), #<a class=\"id\" href=\"#x\">x</a>) = &amp;<a class=\"id\" href=\"#__\">__</a> ## <a class=\"id\" href=\"#x\">x</a>;", 
"#<a class=\"id\" href=\"#include\">include</a> \"vextern.h\"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#VEXTERN\">VEXTERN</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vunmap\">vunmap</a>(<a class=\"id\" href=\"#vbase\">vbase</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#oom\">oom</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Cannot allocate vdso\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdso_enabled\">vdso_enabled</a> = 0;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"<a class=\"id\" href=\"#subsys_initcall\">subsys_initcall</a>(<a class=\"id\" href=\"#init_vdso_vars\">init_vdso_vars</a>);", 
"", 
"struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a>;", 
"", 
"<span class=\"comment\">/* Put the vdso above the (randomized) stack with another randomized offset.</span>", 
"<span class=\"comment\">   This way there is no hole in the middle of address space.</span>", 
"<span class=\"comment\">   To save memory make sure it is still in the same PTE as the stack top.</span>", 
"<span class=\"comment\">   This doesn't give that many random bits */</span>", 
"static unsigned long <a class=\"id\" href=\"#vdso_addr\">vdso_addr</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a> - 1) &amp; <a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> >= <a class=\"id\" href=\"#TASK_SIZE_MAX\">TASK_SIZE_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#TASK_SIZE_MAX\">TASK_SIZE_MAX</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* This loses some more bits than a modulo, but is cheaper */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#get_random_int\">get_random_int</a>() &amp; (<a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#start\">start</a> + (<a class=\"id\" href=\"#offset\">offset</a> << <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#addr\">addr</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Setup a VMA at program startup for the vsyscall page.</span>", 
"<span class=\"comment\">   Not called for compat tasks */</span>", 
"int <a class=\"id\" href=\"#arch_setup_additional_pages\">arch_setup_additional_pages</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>, int <a class=\"id\" href=\"#uses_interp\">uses_interp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vdso_enabled\">vdso_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#vdso_addr\">vdso_addr</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#start_stack\">start_stack</a>, <a class=\"id\" href=\"#vdso_size\">vdso_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#get_unmapped_area\">get_unmapped_area</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#vdso_size\">vdso_size</a>, 0, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR_VALUE\">IS_ERR_VALUE</a>(<a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#up_fail\">up_fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#vdso\">vdso</a> = (void *)<a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#install_special_mapping\">install_special_mapping</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#vdso_size\">vdso_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#VM_READ\">VM_READ</a>|<a class=\"id\" href=\"#VM_EXEC\">VM_EXEC</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#VM_MAYREAD\">VM_MAYREAD</a>|<a class=\"id\" href=\"#VM_MAYWRITE\">VM_MAYWRITE</a>|<a class=\"id\" href=\"#VM_MAYEXEC\">VM_MAYEXEC</a>|", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#VM_ALWAYSDUMP\">VM_ALWAYSDUMP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#vdso_pages\">vdso_pages</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#vdso\">vdso</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#up_fail\">up_fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#up_fail\">up_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#vdso_setup\">vdso_setup</a>(char *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vdso_enabled\">vdso_enabled</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"vdso=\", <a class=\"id\" href=\"#vdso_setup\">vdso_setup</a>);", 
];
xr_frag_insert('l/2c/45b5cbd6f86ffe4dad8dc8842cafa2c4d77271.xr', __xr_tmp);
