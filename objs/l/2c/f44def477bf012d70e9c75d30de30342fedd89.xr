var __xr_tmp = [
"", 
"static char * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#unpack_to_rootfs\">unpack_to_rootfs</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#written\">written</a>, <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#decompress_fn\">decompress_fn</a> <a class=\"id\" href=\"#decompress\">decompress</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#compress_name\">compress_name</a>;", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#__initdata\">__initdata</a> char <a class=\"id\" href=\"#msg_buf\">msg_buf</a>[64];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header_buf\">header_buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(110, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#symlink_buf\">symlink_buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#PATH_MAX\">PATH_MAX</a> + <a class=\"id\" href=\"#N_ALIGN\">N_ALIGN</a>(<a class=\"id\" href=\"#PATH_MAX\">PATH_MAX</a>) + 1, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name_buf\">name_buf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#N_ALIGN\">N_ALIGN</a>(<a class=\"id\" href=\"#PATH_MAX\">PATH_MAX</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#header_buf\">header_buf</a> || !<a class=\"id\" href=\"#symlink_buf\">symlink_buf</a> || !<a class=\"id\" href=\"#name_buf\">name_buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"can't allocate buffers\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#Start\">Start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_header\">this_header</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#message\">message</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#message\">message</a> && <a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#saved_offset\">saved_offset</a> = <a class=\"id\" href=\"#this_header\">this_header</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#buf\">buf</a> == '0' && !(<a class=\"id\" href=\"#this_header\">this_header</a> &amp; 3)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#Start\">Start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#written\">written</a> = <a class=\"id\" href=\"#write_buffer\">write_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#written\">written</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#written\">written</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_header\">this_header</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_header\">this_header</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#decompress\">decompress</a> = <a class=\"id\" href=\"#decompress_method\">decompress_method</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, &amp;<a class=\"id\" href=\"#compress_name\">compress_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#decompress\">decompress</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#decompress\">decompress</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#flush_buffer\">flush_buffer</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#my_inptr\">my_inptr</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"decompressor failed\");", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#compress_name\">compress_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#message\">message</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#msg_buf\">msg_buf</a>, sizeof <a class=\"id\" href=\"#msg_buf\">msg_buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"compression method %s not configured\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#compress_name\">compress_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#message\">message</a> = <a class=\"id\" href=\"#msg_buf\">msg_buf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"junk in compressed archive\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#Reset\">Reset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>(\"junk in compressed archive\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_header\">this_header</a> = <a class=\"id\" href=\"#saved_offset\">saved_offset</a> + <a class=\"id\" href=\"#my_inptr\">my_inptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#my_inptr\">my_inptr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#my_inptr\">my_inptr</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dir_utime\">dir_utime</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#name_buf\">name_buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#symlink_buf\">symlink_buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#header_buf\">header_buf</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#message\">message</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#do_retain_initrd\">do_retain_initrd</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#retain_initrd_param\">retain_initrd_param</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#str\">str</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_retain_initrd\">do_retain_initrd</a> = 1;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"retain_initrd\", <a class=\"id\" href=\"#retain_initrd_param\">retain_initrd_param</a>);", 
"", 
"extern char <a class=\"id\" href=\"#__initramfs_start\">__initramfs_start</a>[], <a class=\"id\" href=\"#__initramfs_end\">__initramfs_end</a>[];", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#initrd\">initrd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kexec\">kexec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#free_initrd\">free_initrd</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEXEC\">CONFIG_KEXEC</a>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#crashk_start\">crashk_start</a> = (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#crashk_res\">crashk_res</a>.<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#crashk_end\">crashk_end</a>   = (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#crashk_res\">crashk_res</a>.<a class=\"id\" href=\"#end\">end</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_retain_initrd\">do_retain_initrd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#skip\">skip</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_KEXEC\">CONFIG_KEXEC</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the initrd region is overlapped with crashkernel reserved region,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * free only memory that is not part of crashkernel region.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#initrd_start\">initrd_start</a> &lt; <a class=\"id\" href=\"#crashk_end\">crashk_end</a> && <a class=\"id\" href=\"#initrd_end\">initrd_end</a> &gt; <a class=\"id\" href=\"#crashk_start\">crashk_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Initialize initrd memory region since the kexec boot does</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not do.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((void *)<a class=\"id\" href=\"#initrd_start\">initrd_start</a>, 0, <a class=\"id\" href=\"#initrd_end\">initrd_end</a> - <a class=\"id\" href=\"#initrd_start\">initrd_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#initrd_start\">initrd_start</a> &lt; <a class=\"id\" href=\"#crashk_start\">crashk_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_initrd_mem\">free_initrd_mem</a>(<a class=\"id\" href=\"#initrd_start\">initrd_start</a>, <a class=\"id\" href=\"#crashk_start\">crashk_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#initrd_end\">initrd_end</a> &gt; <a class=\"id\" href=\"#crashk_end\">crashk_end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_initrd_mem\">free_initrd_mem</a>(<a class=\"id\" href=\"#crashk_end\">crashk_end</a>, <a class=\"id\" href=\"#initrd_end\">initrd_end</a>);", 
"<span class=\"ts\"/>} else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_initrd_mem\">free_initrd_mem</a>(<a class=\"id\" href=\"#initrd_start\">initrd_start</a>, <a class=\"id\" href=\"#initrd_end\">initrd_end</a>);", 
"<a class=\"id\" href=\"#skip\">skip</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initrd_start\">initrd_start</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initrd_end\">initrd_end</a> = 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLK_DEV_RAM\">CONFIG_BLK_DEV_RAM</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BUF_SIZE\">BUF_SIZE</a> 1024", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#clean_rootfs\">clean_rootfs</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fd\">fd</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_dirent64\">linux_dirent64</a> *<a class=\"id\" href=\"#dirp\">dirp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd\">fd</a> = <a class=\"id\" href=\"#sys_open\">sys_open</a>(\"/\", <a class=\"id\" href=\"#O_RDONLY\">O_RDONLY</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#fd\">fd</a> &lt; 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fd\">fd</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#BUF_SIZE\">BUF_SIZE</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sys_close\">sys_close</a>(<a class=\"id\" href=\"#fd\">fd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dirp\">dirp</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#sys_getdents64\">sys_getdents64</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#dirp\">dirp</a>, <a class=\"id\" href=\"#BUF_SIZE\">BUF_SIZE</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#num\">num</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#num\">num</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#stat\">stat</a> <a class=\"id\" href=\"#st\">st</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
];
xr_frag_insert('l/2c/f44def477bf012d70e9c75d30de30342fedd89.xr', __xr_tmp);
