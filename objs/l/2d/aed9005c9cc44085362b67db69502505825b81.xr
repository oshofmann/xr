var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * processor_perflib.c - ACPI Processor P-States Library ($Revision: 71 $)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Andy Grover &lt;andrew.grover@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001, 2002 Paul Diefenbaugh &lt;paul.s.diefenbaugh@intel.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004       Dominik Brodowski &lt;linux@brodo.de&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004  Anil S Keshavamurthy &lt;anil.s.keshavamurthy@intel.com&gt;</span>", 
"<span class=\"comment\"> *  <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- Added processor hotplug support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2 of the License, or (at</span>", 
"<span class=\"comment\"> *  your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> *  WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span>", 
"<span class=\"comment\"> *  General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License along</span>", 
"<span class=\"comment\"> *  with this program; if not, write to the Free Software Foundation, Inc.,</span>", 
"<span class=\"comment\"> *  59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpufreq\">cpufreq</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cpufeature\">cpufeature</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_bus\">acpi_bus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi_drivers\">acpi_drivers</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"ACPI: \"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_PROCESSOR_CLASS\">ACPI_PROCESSOR_CLASS</a><span class=\"ts\"/><span class=\"ts\"/>\"processor\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_PROCESSOR_FILE_PERFORMANCE\">ACPI_PROCESSOR_FILE_PERFORMANCE</a><span class=\"ts\"/>\"performance\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_PROCESSOR_COMPONENT\">ACPI_PROCESSOR_COMPONENT</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"processor_perflib\");", 
"", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#performance_mutex\">performance_mutex</a>);", 
"", 
"<span class=\"comment\">/* Use cpufreq debug layer for _PPC changes. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#cpufreq_printk\">cpufreq_printk</a>(<a class=\"id\" href=\"#msg\">msg</a>...) <a class=\"id\" href=\"#cpufreq_debug_printk\">cpufreq_debug_printk</a>(<a class=\"id\" href=\"#CPUFREQ_DEBUG_CORE\">CPUFREQ_DEBUG_CORE</a>, \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"cpufreq-core\", <a class=\"id\" href=\"#msg\">msg</a>)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * _PPC support is implemented as a CPUfreq policy notifier:</span>", 
"<span class=\"comment\"> * This means each time a CPUfreq driver registered also with</span>", 
"<span class=\"comment\"> * the ACPI core is asked to change the speed policy, the maximum</span>", 
"<span class=\"comment\"> * value is adjusted so that it is within the platform limit.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Also, when a new platform limit value is detected, the CPUfreq</span>", 
"<span class=\"comment\"> * policy is adjusted accordingly.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* ignore_ppc:</span>", 
"<span class=\"comment\"> * -1 -&gt; cpufreq low level drivers not initialized -&gt; _PSS, etc. not called yet</span>", 
"<span class=\"comment\"> *       ignore _PPC</span>", 
"<span class=\"comment\"> *  0 -&gt; cpufreq low level drivers initialized -&gt; consider _PPC values</span>", 
"<span class=\"comment\"> *  1 -&gt; ignore _PPC totally -&gt; forced by user through boot param</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a> = -1;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a>, \"If the frequency of your machine gets wrongly\" \\", 
"<span class=\"ts\"/><span class=\"ts\"/> \"limited by BIOS, this should help\");", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PPC_REGISTERED\">PPC_REGISTERED</a>   1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PPC_IN_USE\">PPC_IN_USE</a>       2", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_ppc_status\">acpi_processor_ppc_status</a>;", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_ppc_notifier\">acpi_processor_ppc_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#event\">event</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ppc\">ppc</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#CPUFREQ_START\">CPUFREQ_START</a> && <a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> != <a class=\"id\" href=\"#CPUFREQ_INCOMPATIBLE\">CPUFREQ_INCOMPATIBLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#performance_mutex\">performance_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#processors\">processors</a>, <a class=\"id\" href=\"#policy\">policy</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a> || !<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ppc\">ppc</a> = (unsigned int)<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance_platform_limit\">performance_platform_limit</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ppc\">ppc</a> >= <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#state_count\">state_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_verify_within_limits\">cpufreq_verify_within_limits</a>(<a class=\"id\" href=\"#policy\">policy</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#ppc\">ppc</a>].", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#core_frequency\">core_frequency</a> * 1000);", 
"", 
"      <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#performance_mutex\">performance_mutex</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#acpi_ppc_notifier_block\">acpi_ppc_notifier_block</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#acpi_processor_ppc_notifier\">acpi_processor_ppc_notifier</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_platform_limit\">acpi_processor_get_platform_limit</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#ppc\">ppc</a> = 0;", 
"", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * _PPC indicates the maximum state currently supported by the platform</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (e.g. 0 = states 0..n; 1 = states 1..n; etc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_integer\">acpi_evaluate_integer</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_PPC\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#ppc\">ppc</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_ppc_status\">acpi_processor_ppc_status</a> |= <a class=\"id\" href=\"#PPC_IN_USE\">PPC_IN_USE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>) && <a class=\"id\" href=\"#status\">status</a> != <a class=\"id\" href=\"#AE_NOT_FOUND\">AE_NOT_FOUND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _PPC\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_printk\">cpufreq_printk</a>(\"CPU %d: _PPC is %d - frequency %s limited\\n\", <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       (int)<a class=\"id\" href=\"#ppc\">ppc</a>, <a class=\"id\" href=\"#ppc\">ppc</a> ? \"\" : \"not\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance_platform_limit\">performance_platform_limit</a> = (int)<a class=\"id\" href=\"#ppc\">ppc</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_PROCESSOR_NOTIFY_PERFORMANCE\">ACPI_PROCESSOR_NOTIFY_PERFORMANCE</a><span class=\"ts\"/>0x80", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * acpi_processor_ppc_ost: Notify firmware the _PPC evaluation status</span>", 
"<span class=\"comment\"> * @handle: ACPI processor handle</span>", 
"<span class=\"comment\"> * @status: the status code of _PPC evaluation</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>0: success. OSPM is now using the performance state specificed.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>1: failure. OSPM has not changed the number of P-states in use</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#acpi_processor_ppc_ost\">acpi_processor_ppc_ost</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, int <a class=\"id\" href=\"#status\">status</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> <a class=\"id\" href=\"#params\">params</a>[2] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>,},", 
"<span class=\"ts\"/><span class=\"ts\"/>{.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_INTEGER\">ACPI_TYPE_INTEGER</a>,},", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_object_list\">acpi_object_list</a> <a class=\"id\" href=\"#arg_list\">arg_list</a> = {2, <a class=\"id\" href=\"#params\">params</a>};", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#temp\">temp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#params\">params</a>[0].<a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#ACPI_PROCESSOR_NOTIFY_PERFORMANCE\">ACPI_PROCESSOR_NOTIFY_PERFORMANCE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#params\">params</a>[1].<a class=\"id\" href=\"#integer\">integer</a>.<a class=\"id\" href=\"#value\">value</a> =  <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* when there is no _OST , skip it */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>, \"_OST\", &amp;<a class=\"id\" href=\"#temp\">temp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#handle\">handle</a>, \"_OST\", &amp;<a class=\"id\" href=\"#arg_list\">arg_list</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_processor_ppc_has_changed\">acpi_processor_ppc_has_changed</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>, int <a class=\"id\" href=\"#event_flag\">event_flag</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Only when it is notification event, the _OST object</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * will be evaluated. Otherwise it is skipped.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event_flag\">event_flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_ppc_ost\">acpi_processor_ppc_ost</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#acpi_processor_get_platform_limit\">acpi_processor_get_platform_limit</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only when it is notification event, the _OST object</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * will be evaluated. Otherwise it is skipped.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#event_flag\">event_flag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_ppc_ost\">acpi_processor_ppc_ost</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_ppc_ost\">acpi_processor_ppc_ost</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#cpufreq_update_policy\">cpufreq_update_policy</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_processor_get_bios_limit\">acpi_processor_get_bios_limit</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>, unsigned int *<a class=\"id\" href=\"#limit\">limit</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#processors\">processors</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a> || !<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a> || !<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#state_count\">state_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance_platform_limit\">performance_platform_limit</a>].", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#core_frequency\">core_frequency</a> * 1000;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_processor_get_bios_limit\">acpi_processor_get_bios_limit</a>);", 
"", 
"void <a class=\"id\" href=\"#acpi_processor_ppc_init\">acpi_processor_ppc_init</a>(void)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpufreq_register_notifier\">cpufreq_register_notifier</a>", 
"<span class=\"ts\"/>    (&amp;<a class=\"id\" href=\"#acpi_ppc_notifier_block\">acpi_ppc_notifier_block</a>, <a class=\"id\" href=\"#CPUFREQ_POLICY_NOTIFIER\">CPUFREQ_POLICY_NOTIFIER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_ppc_status\">acpi_processor_ppc_status</a> |= <a class=\"id\" href=\"#PPC_REGISTERED\">PPC_REGISTERED</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"Warning: Processor Platform Limit not supported.\\n\");", 
"}", 
"", 
"void <a class=\"id\" href=\"#acpi_processor_ppc_exit\">acpi_processor_ppc_exit</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_processor_ppc_status\">acpi_processor_ppc_status</a> &amp; <a class=\"id\" href=\"#PPC_REGISTERED\">PPC_REGISTERED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpufreq_unregister_notifier\">cpufreq_unregister_notifier</a>(&amp;<a class=\"id\" href=\"#acpi_ppc_notifier_block\">acpi_ppc_notifier_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#CPUFREQ_POLICY_NOTIFIER\">CPUFREQ_POLICY_NOTIFIER</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_processor_ppc_status\">acpi_processor_ppc_status</a> &= ~<a class=\"id\" href=\"#PPC_REGISTERED\">PPC_REGISTERED</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_performance_control\">acpi_processor_get_performance_control</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *<a class=\"id\" href=\"#pct\">pct</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> <a class=\"id\" href=\"#obj\">obj</a> = { 0 };", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_PCT\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _PCT\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pct\">pct</a> = (union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *)<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pct\">pct</a> || (<a class=\"id\" href=\"#pct\">pct</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#pct\">pct</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> != 2)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PCT data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * control_register</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj\">obj</a> = <a class=\"id\" href=\"#pct\">pct</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[0];", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_pct_register\">acpi_pct_register</a>))", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PCT data (control_register)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#control_register\">control_register</a>, <a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#acpi_pct_register\">acpi_pct_register</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * status_register</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#obj\">obj</a> = <a class=\"id\" href=\"#pct\">pct</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[1];", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>)", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> &lt; sizeof(struct <a class=\"id\" href=\"#acpi_pct_register\">acpi_pct_register</a>))", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PCT data (status_register)\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#status_register\">status_register</a>, <a class=\"id\" href=\"#obj\">obj</a>.<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/>       sizeof(struct <a class=\"id\" href=\"#acpi_pct_register\">acpi_pct_register</a>));", 
"", 
"      <a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_performance_states\">acpi_processor_get_performance_states</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#format\">format</a> = { sizeof(\"NNNNNN\"), \"NNNNNN\" };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#state\">state</a> = { 0, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a> *<a class=\"id\" href=\"#pss\">pss</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_PSS\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _PSS\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pss\">pss</a> = <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pss\">pss</a> || (<a class=\"id\" href=\"#pss\">pss</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PSS data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"Found %d performance states\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#pss\">pss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#state_count\">state_count</a> = <a class=\"id\" href=\"#pss\">pss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#states\">states</a> =", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(struct <a class=\"id\" href=\"#acpi_processor_px\">acpi_processor_px</a>) * <a class=\"id\" href=\"#pss\">pss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#states\">states</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#state_count\">state_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_px\">acpi_processor_px</a> *<a class=\"id\" href=\"#px\">px</a> = &amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#states\">states</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#length\">length</a> = sizeof(struct <a class=\"id\" href=\"#acpi_processor_px\">acpi_processor_px</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#px\">px</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"Extracting state %d\\n\", <a class=\"id\" href=\"#i\">i</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_extract_package\">acpi_extract_package</a>(&amp;(<a class=\"id\" href=\"#pss\">pss</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[<a class=\"id\" href=\"#i\">i</a>]),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#format\">format</a>, &amp;<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Invalid _PSS data\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#states\">states</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"State [%d]: core_frequency[%d] power[%d] transition_latency[%d] bus_master_latency[%d] control[0x%x] status[0x%x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#core_frequency\">core_frequency</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#power\">power</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#transition_latency\">transition_latency</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#bus_master_latency\">bus_master_latency</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#control\">control</a>, (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#status\">status</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"> <span class=\"ts\"/><span class=\"ts\"/> * Check that ACPI's u64 MHz will be valid as u32 KHz in cpufreq</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#core_frequency\">core_frequency</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#u32\">u32</a>)(<a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#core_frequency\">core_frequency</a> * 1000) !=", 
"<span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#core_frequency\">core_frequency</a> * 1000))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"Invalid BIOS _PSS frequency: 0x%llx MHz\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#px\">px</a>-><a class=\"id\" href=\"#core_frequency\">core_frequency</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#states\">states</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_performance_info\">acpi_processor_get_performance_info</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a> || !<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a> || !<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_PCT\", &amp;<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"ACPI-based processor performance control unavailable\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_get_performance_control\">acpi_processor_get_performance_control</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#update_bios\">update_bios</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_get_performance_states\">acpi_processor_get_performance_states</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#update_bios\">update_bios</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need to call _PPC once when cpufreq starts */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ignore_ppc\">ignore_ppc</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#acpi_processor_get_platform_limit\">acpi_processor_get_platform_limit</a>(<a class=\"id\" href=\"#pr\">pr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Having _PPC but missing frequencies (_PSS, _PCT) is a very good hint that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the BIOS is older than the CPU and does not know its frequencies</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
" <a class=\"id\" href=\"#update_bios\">update_bios</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86\">CONFIG_X86</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_PPC\", &amp;<a class=\"id\" href=\"#handle\">handle</a>))){", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#boot_cpu_has\">boot_cpu_has</a>(<a class=\"id\" href=\"#X86_FEATURE_EST\">X86_FEATURE_EST</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#FW_BUG\">FW_BUG</a> \"BIOS needs update for CPU \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"frequency support\\n\");", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_processor_notify_smm\">acpi_processor_notify_smm</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#calling_module\">calling_module</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#is_done\">is_done</a> = 0;", 
"", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#acpi_processor_ppc_status\">acpi_processor_ppc_status</a> &amp; <a class=\"id\" href=\"#PPC_REGISTERED\">PPC_REGISTERED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#try_module_get\">try_module_get</a>(<a class=\"id\" href=\"#calling_module\">calling_module</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* is_done is set to negative if an error occurred,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and to postitive if _no_ error occurred, but SMM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * was already notified. This avoids double notification</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which might lead to unexpected results...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_done\">is_done</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#calling_module\">calling_module</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#is_done\">is_done</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#calling_module\">calling_module</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#is_done\">is_done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is_done\">is_done</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Can't write pstate_control to smi_command if either value is zero */</span>", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#smi_command\">smi_command</a>) || (!<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pstate_control\">pstate_control</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"No SMI port or pstate_control\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#calling_module\">calling_module</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Writing pstate_control [0x%x] to smi_command [0x%x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pstate_control\">pstate_control</a>, <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#smi_command\">smi_command</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_os_write_port\">acpi_os_write_port</a>(<a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#smi_command\">smi_command</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#u32\">u32</a>) <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pstate_control\">pstate_control</a>, 8);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Failed to write pstate_control [0x%x] to \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"smi_command [0x%x]\", <a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#pstate_control\">pstate_control</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_FADT\">acpi_gbl_FADT</a>.<a class=\"id\" href=\"#smi_command\">smi_command</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#calling_module\">calling_module</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Success. If there's no _PPC, we need to fear nothing, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we can allow the cpufreq driver to be rmmod'ed. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is_done\">is_done</a> = 1;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#acpi_processor_ppc_status\">acpi_processor_ppc_status</a> &amp; <a class=\"id\" href=\"#PPC_IN_USE\">PPC_IN_USE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#calling_module\">calling_module</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#acpi_processor_notify_smm\">acpi_processor_notify_smm</a>);", 
"", 
"static int <a class=\"id\" href=\"#acpi_processor_get_psd\">acpi_processor_get_psd</a>(struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a><span class=\"ts\"/>*<a class=\"id\" href=\"#pr\">pr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#result\">result</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = {<a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#format\">format</a> = {sizeof(\"NNNNN\"), \"NNNNN\"};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#state\">state</a> = {0, <a class=\"id\" href=\"#NULL\">NULL</a>};", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_object\">acpi_object</a>  *<a class=\"id\" href=\"#psd\">psd</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_psd_package\">acpi_psd_package</a> *<a class=\"id\" href=\"#pdomain\">pdomain</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_evaluate_object\">acpi_evaluate_object</a>(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#handle\">handle</a>, \"_PSD\", <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#psd\">psd</a> = <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#psd\">psd</a> || (<a class=\"id\" href=\"#psd\">psd</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PSD data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#psd\">psd</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#count\">count</a> != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PSD data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdomain\">pdomain</a> = &amp;(<a class=\"id\" href=\"#pr\">pr</a>-><a class=\"id\" href=\"#performance\">performance</a>-><a class=\"id\" href=\"#domain_info\">domain_info</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#length\">length</a> = sizeof(struct <a class=\"id\" href=\"#acpi_psd_package\">acpi_psd_package</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#pdomain\">pdomain</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_extract_package\">acpi_extract_package</a>(&amp;(<a class=\"id\" href=\"#psd\">psd</a>-><a class=\"id\" href=\"#package\">package</a>.<a class=\"id\" href=\"#elements\">elements</a>[0]),", 
"<span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#format\">format</a>, &amp;<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PSD data\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#num_entries\">num_entries</a> != <a class=\"id\" href=\"#ACPI_PSD_REV0_ENTRIES\">ACPI_PSD_REV0_ENTRIES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unknown _PSD:num_entries\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#revision\">revision</a> != <a class=\"id\" href=\"#ACPI_PSD_REV0_REVISION\">ACPI_PSD_REV0_REVISION</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Unknown _PSD:revision\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#coord_type\">coord_type</a> != <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_SW_ALL\">DOMAIN_COORD_TYPE_SW_ALL</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#coord_type\">coord_type</a> != <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_SW_ANY\">DOMAIN_COORD_TYPE_SW_ANY</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdomain\">pdomain</a>-><a class=\"id\" href=\"#coord_type\">coord_type</a> != <a class=\"id\" href=\"#DOMAIN_COORD_TYPE_HW_ALL\">DOMAIN_COORD_TYPE_HW_ALL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"Invalid _PSD:coord_type\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#end\">end</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_processor_preregister_performance\">acpi_processor_preregister_performance</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor_performance\">acpi_processor_performance</a> <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#performance\">performance</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#count_target\">count_target</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_var_t\">cpumask_var_t</a> <a class=\"id\" href=\"#covered_cpus\">covered_cpus</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#pr\">pr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_psd_package\">acpi_psd_package</a> *<a class=\"id\" href=\"#pdomain\">pdomain</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_processor\">acpi_processor</a> *<a class=\"id\" href=\"#match_pr\">match_pr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_psd_package\">acpi_psd_package</a> *<a class=\"id\" href=\"#match_pdomain\">match_pdomain</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#zalloc_cpumask_var\">zalloc_cpumask_var</a>(&amp;<a class=\"id\" href=\"#covered_cpus\">covered_cpus</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#performance_mutex\">performance_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check if another driver has already registered, and abort before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changing pr-&gt;performance if it has. Check input data as well.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr\">pr</a> = <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#processors\">processors</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pr\">pr</a>) {", 
];
xr_frag_insert('l/2d/aed9005c9cc44085362b67db69502505825b81.xr', __xr_tmp);
