var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * resource cgroups</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2007 OpenVZ SWsoft Inc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Pavel Emelianov &lt;xemul@openvz.org&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#parser\">parser</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#res_counter\">res_counter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"void <a class=\"id\" href=\"#res_counter_init\">res_counter_init</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#parent\">parent</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#RESOURCE_MAX\">RESOURCE_MAX</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#soft_limit\">soft_limit</a> = <a class=\"id\" href=\"#RESOURCE_MAX\">RESOURCE_MAX</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#res_counter_charge_locked\">res_counter_charge_locked</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, unsigned long <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a> + <a class=\"id\" href=\"#val\">val</a> &gt; <a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#limit\">limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#failcnt\">failcnt</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a> += <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a> &gt; <a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#max_usage\">max_usage</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#max_usage\">max_usage</a> = <a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#res_counter_charge\">res_counter_charge</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, unsigned long <a class=\"id\" href=\"#val\">val</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#res_counter\">res_counter</a> **<a class=\"id\" href=\"#limit_fail_at\">limit_fail_at</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#c\">c</a>, *<a class=\"id\" href=\"#u\">u</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#limit_fail_at\">limit_fail_at</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#counter\">counter</a>; <a class=\"id\" href=\"#c\">c</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#res_counter_charge_locked\">res_counter_charge_locked</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#limit_fail_at\">limit_fail_at</a> = <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#undo\">undo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<a class=\"id\" href=\"#undo\">undo</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#u\">u</a> = <a class=\"id\" href=\"#counter\">counter</a>; <a class=\"id\" href=\"#u\">u</a> != <a class=\"id\" href=\"#c\">c</a>; <a class=\"id\" href=\"#u\">u</a> = <a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res_counter_uncharge_locked\">res_counter_uncharge_locked</a>(<a class=\"id\" href=\"#u\">u</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#u\">u</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#res_counter_uncharge_locked\">res_counter_uncharge_locked</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, unsigned long <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a> &lt; <a class=\"id\" href=\"#val\">val</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a> -= <a class=\"id\" href=\"#val\">val</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#res_counter_uncharge\">res_counter_uncharge</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, unsigned long <a class=\"id\" href=\"#val\">val</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_save\">local_irq_save</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#counter\">counter</a>; <a class=\"id\" href=\"#c\">c</a> != <a class=\"id\" href=\"#NULL\">NULL</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res_counter_uncharge_locked\">res_counter_uncharge_locked</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_restore\">local_irq_restore</a>(<a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long long *", 
"<a class=\"id\" href=\"#res_counter_member\">res_counter_member</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, int <a class=\"id\" href=\"#member\">member</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#member\">member</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RES_USAGE\">RES_USAGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#usage\">usage</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RES_MAX_USAGE\">RES_MAX_USAGE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#max_usage\">max_usage</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RES_LIMIT\">RES_LIMIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RES_FAILCNT\">RES_FAILCNT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#failcnt\">failcnt</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#RES_SOFT_LIMIT\">RES_SOFT_LIMIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#soft_limit\">soft_limit</a>;", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#res_counter_read\">res_counter_read</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, int <a class=\"id\" href=\"#member\">member</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#userbuf\">userbuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#nbytes\">nbytes</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#read_strategy\">read_strategy</a>)(unsigned long long <a class=\"id\" href=\"#val\">val</a>, char *<a class=\"id\" href=\"#st_buf\">st_buf</a>))", 
"{", 
"<span class=\"ts\"/>unsigned long long *<a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[64], *<a class=\"id\" href=\"#s\">s</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#res_counter_member\">res_counter_member</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#member\">member</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#read_strategy\">read_strategy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> += <a class=\"id\" href=\"#read_strategy\">read_strategy</a>(*<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> += <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%llu\\n\", *<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>((void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#userbuf\">userbuf</a>, <a class=\"id\" href=\"#nbytes\">nbytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#s\">s</a> - <a class=\"id\" href=\"#buf\">buf</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#res_counter_read_u64\">res_counter_read_u64</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, int <a class=\"id\" href=\"#member\">member</a>)", 
"{", 
"<span class=\"ts\"/>return *<a class=\"id\" href=\"#res_counter_member\">res_counter_member</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#member\">member</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#res_counter_memparse_write_strategy\">res_counter_memparse_write_strategy</a>(const char *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long long *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* return RESOURCE_MAX(unlimited) if \"-1\" is specified */</span>", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#buf\">buf</a> == '-') {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#simple_strtoull\">simple_strtoull</a>(<a class=\"id\" href=\"#buf\">buf</a> + 1, &amp;<a class=\"id\" href=\"#end\">end</a>, 10);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#res\">res</a> != 1 || *<a class=\"id\" href=\"#end\">end</a> != '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#RESOURCE_MAX\">RESOURCE_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME - make memparse() take const char* args */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#memparse\">memparse</a>((char *)<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#end\">end</a> != '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>(*<a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#res_counter_write\">res_counter_write</a>(struct <a class=\"id\" href=\"#res_counter\">res_counter</a> *<a class=\"id\" href=\"#counter\">counter</a>, int <a class=\"id\" href=\"#member\">member</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#write_strategy_fn\">write_strategy_fn</a> <a class=\"id\" href=\"#write_strategy\">write_strategy</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned long long <a class=\"id\" href=\"#tmp\">tmp</a>, *<a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#write_strategy\">write_strategy</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#write_strategy\">write_strategy</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#simple_strtoull\">simple_strtoull</a>(<a class=\"id\" href=\"#buf\">buf</a>, &amp;<a class=\"id\" href=\"#end\">end</a>, 10);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#end\">end</a> != '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#res_counter_member\">res_counter_member</a>(<a class=\"id\" href=\"#counter\">counter</a>, <a class=\"id\" href=\"#member\">member</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#counter\">counter</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/2e/4322fa86fa645702b42ce9baccd5538c416660.xr', __xr_tmp);
