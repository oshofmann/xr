var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> * xenbus.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Talks to Xen Store to figure out what devices we have.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 Rusty Russell, IBM Corporation</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 XenSource Ltd.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License version 2</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; or, when distributed</span>", 
"<span class=\"comment\"> * separately from the Linux kernel or incorporated into other</span>", 
"<span class=\"comment\"> * software packages, subject to the following license:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span>", 
"<span class=\"comment\"> * of this source file (the \"Software\"), to deal in the Software without</span>", 
"<span class=\"comment\"> * restriction, including without limitation the rights to use, copy, modify,</span>", 
"<span class=\"comment\"> * merge, publish, distribute, sublicense, and/or sell copies of the Software,</span>", 
"<span class=\"comment\"> * and to permit persons to whom the Software is furnished to do so, subject to</span>", 
"<span class=\"comment\"> * the following conditions:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The above copyright notice and this permission notice shall be included in</span>", 
"<span class=\"comment\"> * all copies or substantial portions of the Software.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>", 
"<span class=\"comment\"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>", 
"<span class=\"comment\"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>", 
"<span class=\"comment\"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>", 
"<span class=\"comment\"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING</span>", 
"<span class=\"comment\"> * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS</span>", 
"<span class=\"comment\"> * IN THE SOFTWARE.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_XEN_XENBUS_H\">_XEN_XENBUS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_XEN_XENBUS_H\">_XEN_XENBUS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#completion\">completion</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#xen\">xen</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#grant_table\">grant_table</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#io\">io</a>/<a class=\"id\" href=\"#xenbus\">xenbus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#io\">io</a>/<a class=\"id\" href=\"#xs_wire\">xs_wire</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Register callback to watch this node. */</span>", 
"struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a>", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Path being watched. */</span>", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Callback (executed in a process context with no locks held). */</span>", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#callback\">callback</a>)(struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char **<a class=\"id\" href=\"#vec\">vec</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>);", 
"};", 
"", 
"", 
"<span class=\"comment\">/* A xenbus device. */</span>", 
"struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#devicetype\">devicetype</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#nodename\">nodename</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#otherend\">otherend</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#otherend_id\">otherend_id</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> <a class=\"id\" href=\"#otherend_watch\">otherend_watch</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#xenbus_state\">xenbus_state</a> <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#completion\">completion</a> <a class=\"id\" href=\"#down\">down</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#to_xenbus_device\">to_xenbus_device</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#xenbus_device_id\">xenbus_device_id</a>", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* .../device/&lt;device_type&gt;/&lt;identifier&gt; */</span>", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#devicetype\">devicetype</a>[32]; <span class=\"ts\"/><span class=\"comment\">/* General class of device. */</span>", 
"};", 
"", 
"<span class=\"comment\">/* A xenbus driver. */</span>", 
"struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#xenbus_device_id\">xenbus_device_id</a> *<a class=\"id\" href=\"#ids\">ids</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#probe\">probe</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     const struct <a class=\"id\" href=\"#xenbus_device_id\">xenbus_device_id</a> *<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#otherend_changed\">otherend_changed</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> enum <a class=\"id\" href=\"#xenbus_state\">xenbus_state</a> <a class=\"id\" href=\"#backend_state\">backend_state</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#remove\">remove</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#suspend\">suspend</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#resume\">resume</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#uevent\">uevent</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *, char **, int, char *, int);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> <a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#read_otherend_details\">read_otherend_details</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#is_ready\">is_ready</a>)(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#to_xenbus_driver\">to_xenbus_driver</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a>, <a class=\"id\" href=\"#driver\">driver</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#__xenbus_register_frontend\">__xenbus_register_frontend</a>(struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#mod_name\">mod_name</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__must_check\">__must_check</a>", 
"<a class=\"id\" href=\"#xenbus_register_frontend\">xenbus_register_frontend</a>(struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#owner\">owner</a> != <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__xenbus_register_frontend\">__xenbus_register_frontend</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, <a class=\"id\" href=\"#KBUILD_MODNAME\">KBUILD_MODNAME</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#__xenbus_register_backend\">__xenbus_register_backend</a>(struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#mod_name\">mod_name</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__must_check\">__must_check</a>", 
"<a class=\"id\" href=\"#xenbus_register_backend\">xenbus_register_backend</a>(struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#owner\">owner</a> != <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__xenbus_register_backend\">__xenbus_register_backend</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, <a class=\"id\" href=\"#KBUILD_MODNAME\">KBUILD_MODNAME</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#xenbus_unregister_driver\">xenbus_unregister_driver</a>(struct <a class=\"id\" href=\"#xenbus_driver\">xenbus_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>);", 
"", 
"struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a>", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#id\">id</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Nil transaction ID. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XBT_NIL\">XBT_NIL</a> ((struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a>) { 0 })", 
"", 
"char **<a class=\"id\" href=\"#xenbus_directory\">xenbus_directory</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>, unsigned int *<a class=\"id\" href=\"#num\">num</a>);", 
"void *<a class=\"id\" href=\"#xenbus_read\">xenbus_read</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>, unsigned int *<a class=\"id\" href=\"#len\">len</a>);", 
"int <a class=\"id\" href=\"#xenbus_write\">xenbus_write</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>, const char *<a class=\"id\" href=\"#string\">string</a>);", 
"int <a class=\"id\" href=\"#xenbus_mkdir\">xenbus_mkdir</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>);", 
"int <a class=\"id\" href=\"#xenbus_exists\">xenbus_exists</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>);", 
"int <a class=\"id\" href=\"#xenbus_rm\">xenbus_rm</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>, const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>);", 
"int <a class=\"id\" href=\"#xenbus_transaction_start\">xenbus_transaction_start</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> *<a class=\"id\" href=\"#t\">t</a>);", 
"int <a class=\"id\" href=\"#xenbus_transaction_end\">xenbus_transaction_end</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>, int <a class=\"id\" href=\"#abort\">abort</a>);", 
"", 
"<span class=\"comment\">/* Single read and scanf: returns -errno or num scanned if &gt; 0. */</span>", 
"int <a class=\"id\" href=\"#xenbus_scanf\">xenbus_scanf</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#format\">format</a>(<a class=\"id\" href=\"#scanf\">scanf</a>, 4, 5)));", 
"", 
"<span class=\"comment\">/* Single printf and write: returns -errno or 0. */</span>", 
"int <a class=\"id\" href=\"#xenbus_printf\">xenbus_printf</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#dir\">dir</a>, const char *<a class=\"id\" href=\"#node\">node</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#format\">format</a>(<a class=\"id\" href=\"#printf\">printf</a>, 4, 5)));", 
"", 
"<span class=\"comment\">/* Generic read function: NULL-terminated triples of name,</span>", 
"<span class=\"comment\"> * sprintf-style type string, and pointer. Returns 0 or errno.*/</span>", 
"int <a class=\"id\" href=\"#xenbus_gather\">xenbus_gather</a>(struct <a class=\"id\" href=\"#xenbus_transaction\">xenbus_transaction</a> <a class=\"id\" href=\"#t\">t</a>, const char *<a class=\"id\" href=\"#dir\">dir</a>, ...);", 
"", 
"<span class=\"comment\">/* notifer routines for when the xenstore comes up */</span>", 
"extern int <a class=\"id\" href=\"#xenstored_ready\">xenstored_ready</a>;", 
"int <a class=\"id\" href=\"#register_xenstore_notifier\">register_xenstore_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"void <a class=\"id\" href=\"#unregister_xenstore_notifier\">unregister_xenstore_notifier</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nb\">nb</a>);", 
"", 
"int <a class=\"id\" href=\"#register_xenbus_watch\">register_xenbus_watch</a>(struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>);", 
"void <a class=\"id\" href=\"#unregister_xenbus_watch\">unregister_xenbus_watch</a>(struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>);", 
"void <a class=\"id\" href=\"#xs_suspend\">xs_suspend</a>(void);", 
"void <a class=\"id\" href=\"#xs_resume\">xs_resume</a>(void);", 
"void <a class=\"id\" href=\"#xs_suspend_cancel\">xs_suspend_cancel</a>(void);", 
"", 
"<span class=\"comment\">/* Used by xenbus_dev to borrow kernel's store connection. */</span>", 
"void *<a class=\"id\" href=\"#xenbus_dev_request_and_reply\">xenbus_dev_request_and_reply</a>(struct <a class=\"id\" href=\"#xsd_sockmsg\">xsd_sockmsg</a> *<a class=\"id\" href=\"#msg\">msg</a>);", 
"", 
"struct <a class=\"id\" href=\"#work_struct\">work_struct</a>;", 
"", 
"<span class=\"comment\">/* Prepare for domain suspend: then resume or cancel the suspend. */</span>", 
"void <a class=\"id\" href=\"#xenbus_suspend\">xenbus_suspend</a>(void);", 
"void <a class=\"id\" href=\"#xenbus_resume\">xenbus_resume</a>(void);", 
"void <a class=\"id\" href=\"#xenbus_probe\">xenbus_probe</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *);", 
"void <a class=\"id\" href=\"#xenbus_suspend_cancel\">xenbus_suspend_cancel</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XENBUS_IS_ERR_READ\">XENBUS_IS_ERR_READ</a>(<a class=\"id\" href=\"#str\">str</a>) ({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#str\">str</a>) && <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#str\">str</a>) == 0) {<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#str\">str</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ERANGE\">ERANGE</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#str\">str</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#XENBUS_EXIST_ERR\">XENBUS_EXIST_ERR</a>(<a class=\"id\" href=\"#err\">err</a>) ((<a class=\"id\" href=\"#err\">err</a>) == -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> || (<a class=\"id\" href=\"#err\">err</a>) == -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>)", 
"", 
"int <a class=\"id\" href=\"#xenbus_watch_path\">xenbus_watch_path</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, const char *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      void (*<a class=\"id\" href=\"#callback\">callback</a>)(struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char **, unsigned int));", 
"int <a class=\"id\" href=\"#xenbus_watch_pathfmt\">xenbus_watch_pathfmt</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *<a class=\"id\" href=\"#watch\">watch</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> void (*<a class=\"id\" href=\"#callback\">callback</a>)(struct <a class=\"id\" href=\"#xenbus_watch\">xenbus_watch</a> *,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char **, unsigned int),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const char *<a class=\"id\" href=\"#pathfmt\">pathfmt</a>, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>, 4, 5)));", 
"", 
"int <a class=\"id\" href=\"#xenbus_switch_state\">xenbus_switch_state</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, enum <a class=\"id\" href=\"#xenbus_state\">xenbus_state</a> <a class=\"id\" href=\"#new_state\">new_state</a>);", 
"int <a class=\"id\" href=\"#xenbus_grant_ring\">xenbus_grant_ring</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned long <a class=\"id\" href=\"#ring_mfn\">ring_mfn</a>);", 
"int <a class=\"id\" href=\"#xenbus_map_ring_valloc\">xenbus_map_ring_valloc</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#gnt_ref\">gnt_ref</a>, void **<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"int <a class=\"id\" href=\"#xenbus_map_ring\">xenbus_map_ring</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#gnt_ref\">gnt_ref</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#grant_handle_t\">grant_handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, void *<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"", 
"int <a class=\"id\" href=\"#xenbus_unmap_ring_vfree\">xenbus_unmap_ring_vfree</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, void *<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"int <a class=\"id\" href=\"#xenbus_unmap_ring\">xenbus_unmap_ring</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#grant_handle_t\">grant_handle_t</a> <a class=\"id\" href=\"#handle\">handle</a>, void *<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"", 
"int <a class=\"id\" href=\"#xenbus_alloc_evtchn\">xenbus_alloc_evtchn</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int *<a class=\"id\" href=\"#port\">port</a>);", 
"int <a class=\"id\" href=\"#xenbus_bind_evtchn\">xenbus_bind_evtchn</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#remote_port\">remote_port</a>, int *<a class=\"id\" href=\"#port\">port</a>);", 
"int <a class=\"id\" href=\"#xenbus_free_evtchn\">xenbus_free_evtchn</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#port\">port</a>);", 
"", 
"enum <a class=\"id\" href=\"#xenbus_state\">xenbus_state</a> <a class=\"id\" href=\"#xenbus_read_driver_state\">xenbus_read_driver_state</a>(const char *<a class=\"id\" href=\"#path\">path</a>);", 
"", 
"void <a class=\"id\" href=\"#xenbus_dev_error\">xenbus_dev_error</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#err\">err</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...);", 
"void <a class=\"id\" href=\"#xenbus_dev_fatal\">xenbus_dev_fatal</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#err\">err</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...);", 
"", 
"const char *<a class=\"id\" href=\"#xenbus_strstate\">xenbus_strstate</a>(enum <a class=\"id\" href=\"#xenbus_state\">xenbus_state</a> <a class=\"id\" href=\"#state\">state</a>);", 
"int <a class=\"id\" href=\"#xenbus_dev_is_online\">xenbus_dev_is_online</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"int <a class=\"id\" href=\"#xenbus_frontend_closed\">xenbus_frontend_closed</a>(struct <a class=\"id\" href=\"#xenbus_device\">xenbus_device</a> *<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _XEN_XENBUS_H */</span>", 
];
xr_frag_insert('l/2e/b8d50ae32b73b6c44c2ec965e01dd90a94332b.xr', __xr_tmp);
