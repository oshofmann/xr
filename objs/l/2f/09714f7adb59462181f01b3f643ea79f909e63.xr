var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RT Mutexes: blocking mutual exclusion locks with PI support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * started by Ingo Molnar and Thomas Gleixner:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2004-2006 Red Hat, Inc., Ingo Molnar &lt;mingo@redhat.com&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006, Timesys Corp., Thomas Gleixner &lt;tglx@timesys.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file contains the public data structure and API definitions.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_RT_MUTEX_H\">__LINUX_RT_MUTEX_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_RT_MUTEX_H\">__LINUX_RT_MUTEX_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#plist\">plist</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock_types\">spinlock_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"extern int <a class=\"id\" href=\"#max_lock_depth\">max_lock_depth</a>; <span class=\"comment\">/* for sysctl */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * The rt_mutex structure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @wait_lock:<span class=\"ts\"/>spinlock to protect the structure</span>", 
"<span class=\"comment\"> * @wait_list:<span class=\"ts\"/>pilist head to enqueue waiters in priority order</span>", 
"<span class=\"comment\"> * @owner:<span class=\"ts\"/>the mutex owner</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spinlock_t\">raw_spinlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_lock\">wait_lock</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#plist_head\">plist_head</a><span class=\"ts\"/><a class=\"id\" href=\"#wait_list\">wait_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#owner\">owner</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_RT_MUTEXES\">CONFIG_DEBUG_RT_MUTEXES</a>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#save_state\">save_state</a>;", 
"<span class=\"ts\"/>const char <span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>, *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#line\">line</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#magic\">magic</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#rt_mutex_waiter\">rt_mutex_waiter</a>;", 
"struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_RT_MUTEXES\">CONFIG_DEBUG_RT_MUTEXES</a>", 
" extern int <a class=\"id\" href=\"#rt_mutex_debug_check_no_locks_freed\">rt_mutex_debug_check_no_locks_freed</a>(const void *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#len\">len</a>);", 
" extern void <a class=\"id\" href=\"#rt_mutex_debug_check_no_locks_held\">rt_mutex_debug_check_no_locks_held</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>);", 
"#else", 
" static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_mutex_debug_check_no_locks_freed\">rt_mutex_debug_check_no_locks_freed</a>(const void *<a class=\"id\" href=\"#from\">from</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#len\">len</a>)", 
" {", 
"<span class=\"ts\"/>return 0;", 
" }", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_mutex_debug_check_no_locks_held\">rt_mutex_debug_check_no_locks_held</a>(<a class=\"id\" href=\"#task\">task</a>)<span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_RT_MUTEXES\">CONFIG_DEBUG_RT_MUTEXES</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__DEBUG_RT_MUTEX_INITIALIZER\">__DEBUG_RT_MUTEX_INITIALIZER</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>) \\", 
"<span class=\"ts\"/>, .<a class=\"id\" href=\"#name\">name</a> = #<a class=\"id\" href=\"#mutexname\">mutexname</a>, .<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#__FILE__\">__FILE__</a>, .<a class=\"id\" href=\"#line\">line</a> = <a class=\"id\" href=\"#__LINE__\">__LINE__</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_mutex_init\">rt_mutex_init</a>(<a class=\"id\" href=\"#mutex\">mutex</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rt_mutex_init\">__rt_mutex_init</a>(<a class=\"id\" href=\"#mutex\">mutex</a>, <a class=\"id\" href=\"#__func__\">__func__</a>)", 
" extern void <a class=\"id\" href=\"#rt_mutex_debug_task_free\">rt_mutex_debug_task_free</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>);", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__DEBUG_RT_MUTEX_INITIALIZER\">__DEBUG_RT_MUTEX_INITIALIZER</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_mutex_init\">rt_mutex_init</a>(<a class=\"id\" href=\"#mutex\">mutex</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__rt_mutex_init\">__rt_mutex_init</a>(<a class=\"id\" href=\"#mutex\">mutex</a>, <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_mutex_debug_task_free\">rt_mutex_debug_task_free</a>(<a class=\"id\" href=\"#t\">t</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>do { } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__RT_MUTEX_INITIALIZER\">__RT_MUTEX_INITIALIZER</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>) \\", 
"<span class=\"ts\"/>{ .<a class=\"id\" href=\"#wait_lock\">wait_lock</a> = <a class=\"id\" href=\"#__RAW_SPIN_LOCK_UNLOCKED\">__RAW_SPIN_LOCK_UNLOCKED</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>.<a class=\"id\" href=\"#wait_lock\">wait_lock</a>) \\", 
"<span class=\"ts\"/>, .<a class=\"id\" href=\"#wait_list\">wait_list</a> = <a class=\"id\" href=\"#PLIST_HEAD_INIT_RAW\">PLIST_HEAD_INIT_RAW</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>.<a class=\"id\" href=\"#wait_list\">wait_list</a>, <a class=\"id\" href=\"#mutexname\">mutexname</a>.<a class=\"id\" href=\"#wait_lock\">wait_lock</a>) \\", 
"<span class=\"ts\"/>, .<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#NULL\">NULL</a> \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__DEBUG_RT_MUTEX_INITIALIZER\">__DEBUG_RT_MUTEX_INITIALIZER</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>)}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFINE_RT_MUTEX\">DEFINE_RT_MUTEX</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>) \\", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> <a class=\"id\" href=\"#mutexname\">mutexname</a> = <a class=\"id\" href=\"#__RT_MUTEX_INITIALIZER\">__RT_MUTEX_INITIALIZER</a>(<a class=\"id\" href=\"#mutexname\">mutexname</a>)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * rt_mutex_is_locked - is the mutex locked</span>", 
"<span class=\"comment\"> * @lock: the mutex to be queried</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 1 if the mutex is locked, 0 if unlocked.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_mutex_is_locked\">rt_mutex_is_locked</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lock\">lock</a>-><a class=\"id\" href=\"#owner\">owner</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#__rt_mutex_init\">__rt_mutex_init</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>, const char *<a class=\"id\" href=\"#name\">name</a>);", 
"extern void <a class=\"id\" href=\"#rt_mutex_destroy\">rt_mutex_destroy</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"extern void <a class=\"id\" href=\"#rt_mutex_lock\">rt_mutex_lock</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>);", 
"extern int <a class=\"id\" href=\"#rt_mutex_lock_interruptible\">rt_mutex_lock_interruptible</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#detect_deadlock\">detect_deadlock</a>);", 
"extern int <a class=\"id\" href=\"#rt_mutex_timed_lock\">rt_mutex_timed_lock</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> *<a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#detect_deadlock\">detect_deadlock</a>);", 
"", 
"extern int <a class=\"id\" href=\"#rt_mutex_trylock\">rt_mutex_trylock</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"extern void <a class=\"id\" href=\"#rt_mutex_unlock\">rt_mutex_unlock</a>(struct <a class=\"id\" href=\"#rt_mutex\">rt_mutex</a> *<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RT_MUTEXES\">CONFIG_RT_MUTEXES</a>", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_RT_MUTEXES\">INIT_RT_MUTEXES</a>(<a class=\"id\" href=\"#tsk\">tsk</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pi_waiters\">pi_waiters</a><span class=\"ts\"/>= <a class=\"id\" href=\"#PLIST_HEAD_INIT\">PLIST_HEAD_INIT</a>(<a class=\"id\" href=\"#tsk\">tsk</a>.<a class=\"id\" href=\"#pi_waiters\">pi_waiters</a>, <a class=\"id\" href=\"#tsk\">tsk</a>.<a class=\"id\" href=\"#pi_lock\">pi_lock</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_RT_MUTEX_DEBUG\">INIT_RT_MUTEX_DEBUG</a>(<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#INIT_RT_MUTEXES\">INIT_RT_MUTEXES</a>(<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/2f/09714f7adb59462181f01b3f643ea79f909e63.xr', __xr_tmp);
