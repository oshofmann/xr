var __xr_tmp = [
"<span class=\"ts\"/><span class=\"comment\">/* the width of sector_t may be narrow for bit-shift */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> = <a class=\"id\" href=\"#sec\">sec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> <<= 9;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_mutex\">bd_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bd_set_size\">bd_set_size</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#sz\">sz</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* let user-space know about the new size */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobject_uevent\">kobject_uevent</a>(&amp;<a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>)-><a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_mutex\">bd_mutex</a>);", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#lo_ioctl\">lo_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>, 1);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_FD\">LOOP_SET_FD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_set_fd\">loop_set_fd</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_CHANGE_FD\">LOOP_CHANGE_FD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_change_fd\">loop_change_fd</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_CLR_FD\">LOOP_CLR_FD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* loop_clr_fd would have unlocked lo_ctl_mutex on success */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_clr_fd\">loop_clr_fd</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlocked\">out_unlocked</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_STATUS\">LOOP_SET_STATUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_set_status_old\">loop_set_status_old</a>(<a class=\"id\" href=\"#lo\">lo</a>, (struct <a class=\"id\" href=\"#loop_info\">loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_GET_STATUS\">LOOP_GET_STATUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_get_status_old\">loop_get_status_old</a>(<a class=\"id\" href=\"#lo\">lo</a>, (struct <a class=\"id\" href=\"#loop_info\">loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_STATUS64\">LOOP_SET_STATUS64</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_set_status64\">loop_set_status64</a>(<a class=\"id\" href=\"#lo\">lo</a>, (struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_GET_STATUS64\">LOOP_GET_STATUS64</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_get_status64\">loop_get_status64</a>(<a class=\"id\" href=\"#lo\">lo</a>, (struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_CAPACITY\">LOOP_SET_CAPACITY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>) || <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_set_capacity\">loop_set_capacity</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#bdev\">bdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a> ? <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#ioctl\">ioctl</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>) : -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"", 
"<a class=\"id\" href=\"#out_unlocked\">out_unlocked</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_number\">lo_number</a>;      <span class=\"comment\">/* ioctl r/o */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_dev_t\">compat_dev_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_device\">lo_device</a>;      <span class=\"comment\">/* ioctl r/o */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_inode\">lo_inode</a>;       <span class=\"comment\">/* ioctl r/o */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_dev_t\">compat_dev_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_rdevice\">lo_rdevice</a>;     <span class=\"comment\">/* ioctl r/o */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_offset\">lo_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_encrypt_type\">lo_encrypt_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_encrypt_key_size\">lo_encrypt_key_size</a>;    <span class=\"comment\">/* ioctl w/o */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_flags\">lo_flags</a>;       <span class=\"comment\">/* ioctl r/o */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_name\">lo_name</a>[<a class=\"id\" href=\"#LO_NAME_SIZE\">LO_NAME_SIZE</a>];", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#lo_encrypt_key\">lo_encrypt_key</a>[<a class=\"id\" href=\"#LO_KEY_SIZE\">LO_KEY_SIZE</a>]; <span class=\"comment\">/* ioctl w/o */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a><span class=\"ts\"/><a class=\"id\" href=\"#lo_init\">lo_init</a>[2];", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reserved\">reserved</a>[4];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transfer 32-bit compatibility structure in userspace to 64-bit loop info</span>", 
"<span class=\"comment\"> * - noinlined to reduce stack space usage in main part of driver</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#noinline\">noinline</a> int", 
"<a class=\"id\" href=\"#loop_info64_from_compat\">loop_info64_from_compat</a>(const struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> *<a class=\"id\" href=\"#info64\">info64</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(<a class=\"id\" href=\"#info\">info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#info64\">info64</a>, 0, sizeof(*<a class=\"id\" href=\"#info64\">info64</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_number\">lo_number</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_number\">lo_number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_device\">lo_device</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_device\">lo_device</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_inode\">lo_inode</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_inode\">lo_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_rdevice\">lo_rdevice</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_rdevice\">lo_rdevice</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_offset\">lo_offset</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_offset\">lo_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_sizelimit\">lo_sizelimit</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_encrypt_type\">lo_encrypt_type</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_type\">lo_encrypt_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_encrypt_key_size\">lo_encrypt_key_size</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_key_size\">lo_encrypt_key_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a> = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_flags\">lo_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_init\">lo_init</a>[0] = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_init\">lo_init</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_init\">lo_init</a>[1] = <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_init\">lo_init</a>[1];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_type\">lo_encrypt_type</a> == <a class=\"id\" href=\"#LO_CRYPT_CRYPTOAPI\">LO_CRYPT_CRYPTOAPI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_crypt_name\">lo_crypt_name</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_name\">lo_name</a>, <a class=\"id\" href=\"#LO_NAME_SIZE\">LO_NAME_SIZE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_file_name\">lo_file_name</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_name\">lo_name</a>, <a class=\"id\" href=\"#LO_NAME_SIZE\">LO_NAME_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_encrypt_key\">lo_encrypt_key</a>, <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_key\">lo_encrypt_key</a>, <a class=\"id\" href=\"#LO_KEY_SIZE\">LO_KEY_SIZE</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transfer 64-bit loop info to 32-bit compatibility structure in userspace</span>", 
"<span class=\"comment\"> * - noinlined to reduce stack space usage in main part of driver</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#noinline\">noinline</a> int", 
"<a class=\"id\" href=\"#loop_info64_to_compat\">loop_info64_to_compat</a>(const struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> *<a class=\"id\" href=\"#info64\">info64</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, 0, sizeof(<a class=\"id\" href=\"#info\">info</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_number\">lo_number</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_number\">lo_number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_device\">lo_device</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_device\">lo_device</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_inode\">lo_inode</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_inode\">lo_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_rdevice\">lo_rdevice</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_rdevice\">lo_rdevice</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_offset\">lo_offset</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_offset\">lo_offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_type\">lo_encrypt_type</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_encrypt_type\">lo_encrypt_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_key_size\">lo_encrypt_key_size</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_encrypt_key_size\">lo_encrypt_key_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_flags\">lo_flags</a> = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_init\">lo_init</a>[0] = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_init\">lo_init</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_init\">lo_init</a>[1] = <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_init\">lo_init</a>[1];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_type\">lo_encrypt_type</a> == <a class=\"id\" href=\"#LO_CRYPT_CRYPTOAPI\">LO_CRYPT_CRYPTOAPI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_name\">lo_name</a>, <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_crypt_name\">lo_crypt_name</a>, <a class=\"id\" href=\"#LO_NAME_SIZE\">LO_NAME_SIZE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_name\">lo_name</a>, <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_file_name\">lo_file_name</a>, <a class=\"id\" href=\"#LO_NAME_SIZE\">LO_NAME_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_encrypt_key\">lo_encrypt_key</a>, <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_encrypt_key\">lo_encrypt_key</a>, <a class=\"id\" href=\"#LO_KEY_SIZE\">LO_KEY_SIZE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* error in case values were truncated */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_device\">lo_device</a> != <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_device\">lo_device</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_rdevice\">lo_rdevice</a> != <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_rdevice\">lo_rdevice</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_inode\">lo_inode</a> != <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_inode\">lo_inode</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_offset\">lo_offset</a> != <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_offset\">lo_offset</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_init\">lo_init</a>[0] != <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_init\">lo_init</a>[0] ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#info\">info</a>.<a class=\"id\" href=\"#lo_init\">lo_init</a>[1] != <a class=\"id\" href=\"#info64\">info64</a>-><a class=\"id\" href=\"#lo_init\">lo_init</a>[1])", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EOVERFLOW\">EOVERFLOW</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, sizeof(<a class=\"id\" href=\"#info\">info</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#loop_set_status_compat\">loop_set_status_compat</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> <a class=\"id\" href=\"#info64\">info64</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#loop_info64_from_compat\">loop_info64_from_compat</a>(<a class=\"id\" href=\"#arg\">arg</a>, &amp;<a class=\"id\" href=\"#info64\">info64</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#loop_set_status\">loop_set_status</a>(<a class=\"id\" href=\"#lo\">lo</a>, &amp;<a class=\"id\" href=\"#info64\">info64</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#loop_get_status_compat\">loop_get_status_compat</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_info64\">loop_info64</a> <a class=\"id\" href=\"#info64\">info64</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_get_status\">loop_get_status</a>(<a class=\"id\" href=\"#lo\">lo</a>, &amp;<a class=\"id\" href=\"#info64\">info64</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_info64_to_compat\">loop_info64_to_compat</a>(&amp;<a class=\"id\" href=\"#info64\">info64</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#lo_compat_ioctl\">lo_compat_ioctl</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#cmd\">cmd</a>, unsigned long <a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_STATUS\">LOOP_SET_STATUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_set_status_compat\">loop_set_status_compat</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>, (const struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_GET_STATUS\">LOOP_GET_STATUS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_get_status_compat\">loop_get_status_compat</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>, (struct <a class=\"id\" href=\"#compat_loop_info\">compat_loop_info</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_CAPACITY\">LOOP_SET_CAPACITY</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_CLR_FD\">LOOP_CLR_FD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_GET_STATUS64\">LOOP_GET_STATUS64</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_STATUS64\">LOOP_SET_STATUS64</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#arg\">arg</a> = (unsigned long) <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_SET_FD\">LOOP_SET_FD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LOOP_CHANGE_FD\">LOOP_CHANGE_FD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#lo_ioctl\">lo_ioctl</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#cmd\">cmd</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOIOCTLCMD\">ENOIOCTLCMD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#lo_open\">lo_open</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_disk\">bd_disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_refcnt\">lo_refcnt</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#lo_release\">lo_release</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#fmode_t\">fmode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (--<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_refcnt\">lo_refcnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_flags\">lo_flags</a> &amp; <a class=\"id\" href=\"#LO_FLAGS_AUTOCLEAR\">LO_FLAGS_AUTOCLEAR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * In autoclear mode, stop the loop thread</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and remove configuration after last close.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#loop_clr_fd\">loop_clr_fd</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlocked\">out_unlocked</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Otherwise keep thread (if running) and config,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but flush possible ongoing bios in thread.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loop_flush\">loop_flush</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<a class=\"id\" href=\"#out_unlocked\">out_unlocked</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> <a class=\"id\" href=\"#lo_fops\">lo_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a> =<span class=\"ts\"/><a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> =<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo_open\">lo_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> =<span class=\"ts\"/><a class=\"id\" href=\"#lo_release\">lo_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ioctl\">ioctl</a> =<span class=\"ts\"/><a class=\"id\" href=\"#lo_ioctl\">lo_ioctl</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_COMPAT\">CONFIG_COMPAT</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#compat_ioctl\">compat_ioctl</a> =<span class=\"ts\"/><a class=\"id\" href=\"#lo_compat_ioctl\">lo_compat_ioctl</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * And now the modules code and kernel interface.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#max_loop\">max_loop</a>;", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#max_loop\">max_loop</a>, int, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#max_loop\">max_loop</a>, \"Maximum number of loop devices\");", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#max_part\">max_part</a>, int, 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#max_part\">max_part</a>, \"Maximum number of partitions per loop device\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_ALIAS_BLOCKDEV_MAJOR\">MODULE_ALIAS_BLOCKDEV_MAJOR</a>(<a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>);", 
"", 
"int <a class=\"id\" href=\"#loop_register_transfer\">loop_register_transfer</a>(struct <a class=\"id\" href=\"#loop_func_table\">loop_func_table</a> *<a class=\"id\" href=\"#funcs\">funcs</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#funcs\">funcs</a>-><a class=\"id\" href=\"#number\">number</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> >= <a class=\"id\" href=\"#MAX_LO_CRYPT\">MAX_LO_CRYPT</a> || <a class=\"id\" href=\"#xfer_funcs\">xfer_funcs</a>[<a class=\"id\" href=\"#n\">n</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfer_funcs\">xfer_funcs</a>[<a class=\"id\" href=\"#n\">n</a>] = <a class=\"id\" href=\"#funcs\">funcs</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#loop_unregister_transfer\">loop_unregister_transfer</a>(int <a class=\"id\" href=\"#number\">number</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_func_table\">loop_func_table</a> *<a class=\"id\" href=\"#xfer\">xfer</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> == 0 || <a class=\"id\" href=\"#n\">n</a> >= <a class=\"id\" href=\"#MAX_LO_CRYPT\">MAX_LO_CRYPT</a> || (<a class=\"id\" href=\"#xfer\">xfer</a> = <a class=\"id\" href=\"#xfer_funcs\">xfer_funcs</a>[<a class=\"id\" href=\"#n\">n</a>]) == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#xfer_funcs\">xfer_funcs</a>[<a class=\"id\" href=\"#n\">n</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#lo\">lo</a>, &amp;<a class=\"id\" href=\"#loop_devices\">loop_devices</a>, <a class=\"id\" href=\"#lo_list\">lo_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_encryption\">lo_encryption</a> == <a class=\"id\" href=\"#xfer\">xfer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loop_release_xfer\">loop_release_xfer</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#loop_register_transfer\">loop_register_transfer</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#loop_unregister_transfer\">loop_unregister_transfer</a>);", 
"", 
"static struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#loop_alloc\">loop_alloc</a>(int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#lo\">lo</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lo\">lo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a> = <a class=\"id\" href=\"#blk_alloc_queue\">blk_alloc_queue</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_dev\">out_free_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a> = <a class=\"id\" href=\"#alloc_disk\">alloc_disk</a>(1 << <a class=\"id\" href=\"#part_shift\">part_shift</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#disk\">disk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_queue\">out_free_queue</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_init\">mutex_init</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_ctl_mutex\">lo_ctl_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_number\">lo_number</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_thread\">lo_thread</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_waitqueue_head\">init_waitqueue_head</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_event\">lo_event</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_lock\">lo_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#major\">major</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#first_minor\">first_minor</a><span class=\"ts\"/>= <a class=\"id\" href=\"#i\">i</a> << <a class=\"id\" href=\"#part_shift\">part_shift</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#fops\">fops</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#lo_fops\">lo_fops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#private_data\">private_data</a><span class=\"ts\"/>= <a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#queue\">queue</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#disk_name\">disk_name</a>, \"loop%d\", <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lo\">lo</a>;", 
"", 
"<a class=\"id\" href=\"#out_free_queue\">out_free_queue</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>);", 
"<a class=\"id\" href=\"#out_free_dev\">out_free_dev</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#loop_free\">loop_free</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_cleanup_queue\">blk_cleanup_queue</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_queue\">lo_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_disk\">put_disk</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_list\">lo_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#loop_init_one\">loop_init_one</a>(int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#lo\">lo</a>, &amp;<a class=\"id\" href=\"#loop_devices\">loop_devices</a>, <a class=\"id\" href=\"#lo_list\">lo_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_number\">lo_number</a> == <a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#loop_alloc\">loop_alloc</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lo\">lo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_disk\">add_disk</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_list\">lo_list</a>, &amp;<a class=\"id\" href=\"#loop_devices\">loop_devices</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lo\">lo</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#loop_del_one\">loop_del_one</a>(struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loop_free\">loop_free</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#loop_probe\">loop_probe</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, int *<a class=\"id\" href=\"#part\">part</a>, void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#loop_devices_mutex\">loop_devices_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#loop_init_one\">loop_init_one</a>(<a class=\"id\" href=\"#dev\">dev</a> &amp; <a class=\"id\" href=\"#MINORMASK\">MINORMASK</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kobj\">kobj</a> = <a class=\"id\" href=\"#lo\">lo</a> ? <a class=\"id\" href=\"#get_disk\">get_disk</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>) : <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#loop_devices_mutex\">loop_devices_mutex</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#part\">part</a> = 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#loop_init\">loop_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range\">range</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * loop module now has a feature to instantiate underlying device</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * structure on-demand, provided that there is an access dev node.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * However, this will not work well with user space tool that doesn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * know about such \"feature\".  In order to not break any existing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tool, we do the following:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (1) if max_loop is specified, create that many upfront, and this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     also becomes a hard limit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (2) if max_loop is not specified, create 8 loop device on module</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     load, user can further extend loop device by create dev node</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     themselves and have kernel automatically instantiate actual</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *     device on-demand.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#part_shift\">part_shift</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_part\">max_part</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#part_shift\">part_shift</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#max_part\">max_part</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_loop\">max_loop</a> &gt; 1UL << (<a class=\"id\" href=\"#MINORBITS\">MINORBITS</a> - <a class=\"id\" href=\"#part_shift\">part_shift</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#max_loop\">max_loop</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#max_loop\">max_loop</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range\">range</a> = <a class=\"id\" href=\"#max_loop\">max_loop</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range\">range</a> = 1UL << (<a class=\"id\" href=\"#MINORBITS\">MINORBITS</a> - <a class=\"id\" href=\"#part_shift\">part_shift</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#register_blkdev\">register_blkdev</a>(<a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>, \"loop\"))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr\">nr</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lo\">lo</a> = <a class=\"id\" href=\"#loop_alloc\">loop_alloc</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#lo\">lo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Enomem\">Enomem</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_list\">lo_list</a>, &amp;<a class=\"id\" href=\"#loop_devices\">loop_devices</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* point of no return */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#lo\">lo</a>, &amp;<a class=\"id\" href=\"#loop_devices\">loop_devices</a>, <a class=\"id\" href=\"#lo_list\">lo_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_disk\">add_disk</a>(<a class=\"id\" href=\"#lo\">lo</a>-><a class=\"id\" href=\"#lo_disk\">lo_disk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_register_region\">blk_register_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>, 0), <a class=\"id\" href=\"#range\">range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>, <a class=\"id\" href=\"#loop_probe\">loop_probe</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"loop: module loaded\\n\");", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#Enomem\">Enomem</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"loop: out of memory\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#loop_devices\">loop_devices</a>, <a class=\"id\" href=\"#lo_list\">lo_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loop_free\">loop_free</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_blkdev\">unregister_blkdev</a>(<a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>, \"loop\");", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#loop_exit\">loop_exit</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range\">range</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#loop_device\">loop_device</a> *<a class=\"id\" href=\"#lo\">lo</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range\">range</a> = <a class=\"id\" href=\"#max_loop\">max_loop</a> ? <a class=\"id\" href=\"#max_loop\">max_loop</a> :  1UL << (<a class=\"id\" href=\"#MINORBITS\">MINORBITS</a> - <a class=\"id\" href=\"#part_shift\">part_shift</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#lo\">lo</a>, <a class=\"id\" href=\"#next\">next</a>, &amp;<a class=\"id\" href=\"#loop_devices\">loop_devices</a>, <a class=\"id\" href=\"#lo_list\">lo_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loop_del_one\">loop_del_one</a>(<a class=\"id\" href=\"#lo\">lo</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_unregister_region\">blk_unregister_region</a>(<a class=\"id\" href=\"#MKDEV\">MKDEV</a>(<a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>, 0), <a class=\"id\" href=\"#range\">range</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_blkdev\">unregister_blkdev</a>(<a class=\"id\" href=\"#LOOP_MAJOR\">LOOP_MAJOR</a>, \"loop\");", 
"}", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#loop_init\">loop_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#loop_exit\">loop_exit</a>);", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#MODULE\">MODULE</a>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#max_loop_setup\">max_loop_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_loop\">max_loop</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"max_loop=\", <a class=\"id\" href=\"#max_loop_setup\">max_loop_setup</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/2f/e2b065ca34405278ca9ee1a2f4e877bf8ce4af.xr', __xr_tmp);
