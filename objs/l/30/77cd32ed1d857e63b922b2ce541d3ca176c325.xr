var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/> * We can't just convert len to max_blocks because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If blocksize = 4096 offset = 3072 and len = 2048</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_blocks\">max_blocks</a> = (<a class=\"id\" href=\"#EXT4_BLOCK_ALIGN\">EXT4_BLOCK_ALIGN</a>(<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#blkbits\">blkbits</a>) >> <a class=\"id\" href=\"#blkbits\">blkbits</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>- <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * credits to insert 1 extent into extent tree</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#credits\">credits</a> = <a class=\"id\" href=\"#ext4_chunk_trans_blocks\">ext4_chunk_trans_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#max_blocks\">max_blocks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#inode_newsize_ok\">inode_newsize_ok</a>(<a class=\"id\" href=\"#inode\">inode</a>, (<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#offset\">offset</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ret\">ret</a> >= 0 && <a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#max_blocks\">max_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> = <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_len\">m_len</a> = <a class=\"id\" href=\"#max_blocks\">max_blocks</a> = <a class=\"id\" href=\"#max_blocks\">max_blocks</a> - <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#credits\">credits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#map\">map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE_UNINIT_EXT\">EXT4_GET_BLOCKS_CREATE_UNINIT_EXT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT4FS_DEBUG\">EXT4FS_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ret\">ret</a> <= 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: ext4_ext_map_blocks \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"returned error inode#%lu, block=%u, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"max_blocks=%u\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#max_blocks\">max_blocks</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret2\">ret2</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#ret\">ret</a>) >= (<a class=\"id\" href=\"#EXT4_BLOCK_ALIGN\">EXT4_BLOCK_ALIGN</a>(<a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blkbits\">blkbits</a>) >> <a class=\"id\" href=\"#blkbits\">blkbits</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_size\">new_size</a> = <a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_size\">new_size</a> = (<a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#ret\">ret</a>) << <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_falloc_update_inode\">ext4_falloc_update_inode</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#new_size\">new_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_flags\">m_flags</a> &amp; <a class=\"id\" href=\"#EXT4_MAP_NEW\">EXT4_MAP_NEW</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret2\">ret2</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret2\">ret2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_should_retry_alloc\">ext4_should_retry_alloc</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, &amp;<a class=\"id\" href=\"#retries\">retries</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> &gt; 0 ? <a class=\"id\" href=\"#ret2\">ret2</a> : <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function convert a range of blocks to written extents</span>", 
"<span class=\"comment\"> * The caller of this function will pass the start offset and the size.</span>", 
"<span class=\"comment\"> * all unwritten extents within this range will be converted to</span>", 
"<span class=\"comment\"> * written extents.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is called from the direct IO end io call back</span>", 
"<span class=\"comment\"> * function, to convert the fallocated extents after IO is completed.</span>", 
"<span class=\"comment\"> * Returns 0 on success.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_convert_unwritten_extents\">ext4_convert_unwritten_extents</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max_blocks\">max_blocks</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret2\">ret2</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> <a class=\"id\" href=\"#map\">map</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#credits\">credits</a>, <a class=\"id\" href=\"#blkbits\">blkbits</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_blkbits\">i_blkbits</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> = <a class=\"id\" href=\"#offset\">offset</a> >> <a class=\"id\" href=\"#blkbits\">blkbits</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can't just convert len to max_blocks because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If blocksize = 4096 offset = 3072 and len = 2048</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_blocks\">max_blocks</a> = ((<a class=\"id\" href=\"#EXT4_BLOCK_ALIGN\">EXT4_BLOCK_ALIGN</a>(<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#blkbits\">blkbits</a>) >> <a class=\"id\" href=\"#blkbits\">blkbits</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * credits to insert 1 extent into extent tree</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#credits\">credits</a> = <a class=\"id\" href=\"#ext4_chunk_trans_blocks\">ext4_chunk_trans_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#max_blocks\">max_blocks</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ret\">ret</a> >= 0 && <a class=\"id\" href=\"#ret\">ret</a> &lt; <a class=\"id\" href=\"#max_blocks\">max_blocks</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_len\">m_len</a> = (<a class=\"id\" href=\"#max_blocks\">max_blocks</a> -= <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#credits\">credits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#map\">map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_GET_BLOCKS_IO_CONVERT_EXT\">EXT4_GET_BLOCKS_IO_CONVERT_EXT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ret\">ret</a> <= 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: ext4_ext_map_blocks \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"returned error inode#%lu, block=%u, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"max_blocks=%u\", <a class=\"id\" href=\"#__func__\">__func__</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#map\">map</a>.<a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_mark_inode_dirty\">ext4_mark_inode_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret2\">ret2</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0 || <a class=\"id\" href=\"#ret2\">ret2</a> )", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a> &gt; 0 ? <a class=\"id\" href=\"#ret2\">ret2</a> : <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Callback function called for each extent to gather FIEMAP information.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_ext_fiemap_cb\">ext4_ext_fiemap_cb</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_ext_cache\">ext4_ext_cache</a> *<a class=\"id\" href=\"#newex\">newex</a>, struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fiemap_extent_info\">fiemap_extent_info</a> *<a class=\"id\" href=\"#fieinfo\">fieinfo</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#blksize_bits\">blksize_bits</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#logical\">logical</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#physical\">physical</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#logical\">logical</a> =  (<a class=\"id\" href=\"#__u64\">__u64</a>)<a class=\"id\" href=\"#newex\">newex</a>-><a class=\"id\" href=\"#ec_block\">ec_block</a> << <a class=\"id\" href=\"#blksize_bits\">blksize_bits</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newex\">newex</a>-><a class=\"id\" href=\"#ec_type\">ec_type</a> == <a class=\"id\" href=\"#EXT4_EXT_CACHE_GAP\">EXT4_EXT_CACHE_GAP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#logical\">logical</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#find_get_page\">find_get_page</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a> || !<a class=\"id\" href=\"#page_has_buffers\">page_has_buffers</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#EXT_CONTINUE\">EXT_CONTINUE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#page_buffers\">page_buffers</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#EXT_CONTINUE\">EXT_CONTINUE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_delay\">buffer_delay</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FIEMAP_EXTENT_DELALLOC\">FIEMAP_EXTENT_DELALLOC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#EXT_CONTINUE\">EXT_CONTINUE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#physical\">physical</a> = (<a class=\"id\" href=\"#__u64\">__u64</a>)<a class=\"id\" href=\"#newex\">newex</a>-><a class=\"id\" href=\"#ec_start\">ec_start</a> << <a class=\"id\" href=\"#blksize_bits\">blksize_bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> =   (<a class=\"id\" href=\"#__u64\">__u64</a>)<a class=\"id\" href=\"#newex\">newex</a>-><a class=\"id\" href=\"#ec_len\">ec_len</a> << <a class=\"id\" href=\"#blksize_bits\">blksize_bits</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex\">ex</a> && <a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FIEMAP_EXTENT_UNWRITTEN\">FIEMAP_EXTENT_UNWRITTEN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this extent reaches EXT_MAX_BLOCK, it must be last.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Or if ext4_ext_next_allocated_block is EXT_MAX_BLOCK,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this also indicates no more allocated blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * XXX this might miss a single-block extent at EXT_MAX_BLOCK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_ext_next_allocated_block\">ext4_ext_next_allocated_block</a>(<a class=\"id\" href=\"#path\">path</a>) == <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#newex\">newex</a>-><a class=\"id\" href=\"#ec_block\">ec_block</a> + <a class=\"id\" href=\"#newex\">newex</a>-><a class=\"id\" href=\"#ec_len\">ec_len</a> - 1 == <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#bs\">bs</a> = <a class=\"id\" href=\"#EXT4_BLOCK_SIZE\">EXT4_BLOCK_SIZE</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FIEMAP_EXTENT_LAST\">FIEMAP_EXTENT_LAST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FIEMAP_EXTENT_DELALLOC\">FIEMAP_EXTENT_DELALLOC</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#logical\">logical</a>+<a class=\"id\" href=\"#length\">length</a> &gt; <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = (<a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#logical\">logical</a> + <a class=\"id\" href=\"#bs\">bs</a> - 1) &amp; ~(<a class=\"id\" href=\"#bs\">bs</a>-1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#fiemap_fill_next_extent\">fiemap_fill_next_extent</a>(<a class=\"id\" href=\"#fieinfo\">fieinfo</a>, <a class=\"id\" href=\"#logical\">logical</a>, <a class=\"id\" href=\"#physical\">physical</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#EXT_BREAK\">EXT_BREAK</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#EXT_CONTINUE\">EXT_CONTINUE</a>;", 
"}", 
"", 
"<span class=\"comment\">/* fiemap flags we can handle specified here */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXT4_FIEMAP_FLAGS\">EXT4_FIEMAP_FLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#FIEMAP_FLAG_SYNC\">FIEMAP_FLAG_SYNC</a>|<a class=\"id\" href=\"#FIEMAP_FLAG_XATTR\">FIEMAP_FLAG_XATTR</a>)", 
"", 
"static int <a class=\"id\" href=\"#ext4_xattr_fiemap\">ext4_xattr_fiemap</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#fiemap_extent_info\">fiemap_extent_info</a> *<a class=\"id\" href=\"#fieinfo\">fieinfo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#physical\">physical</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#FIEMAP_EXTENT_LAST\">FIEMAP_EXTENT_LAST</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#blockbits\">blockbits</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* in-inode? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_test_inode_state\">ext4_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_XATTR\">EXT4_STATE_XATTR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> <a class=\"id\" href=\"#iloc\">iloc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>;<span class=\"ts\"/><span class=\"comment\">/* offset of xattr in inode */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_get_inode_loc\">ext4_get_inode_loc</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#physical\">physical</a> = <a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> << <a class=\"id\" href=\"#blockbits\">blockbits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#physical\">physical</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a> - <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FIEMAP_EXTENT_DATA_INLINE\">FIEMAP_EXTENT_DATA_INLINE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>} else { <span class=\"comment\">/* external block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#physical\">physical</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> << <a class=\"id\" href=\"#blockbits\">blockbits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#physical\">physical</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#fiemap_fill_next_extent\">fiemap_fill_next_extent</a>(<a class=\"id\" href=\"#fieinfo\">fieinfo</a>, 0, <a class=\"id\" href=\"#physical\">physical</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#error\">error</a> &lt; 0 ? <a class=\"id\" href=\"#error\">error</a> : 0);", 
"}", 
"", 
"int <a class=\"id\" href=\"#ext4_fiemap\">ext4_fiemap</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#fiemap_extent_info\">fiemap_extent_info</a> *<a class=\"id\" href=\"#fieinfo\">fieinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#start_blk\">start_blk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* fallback to generic here if not in extents fmt */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#generic_block_fiemap\">generic_block_fiemap</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#fieinfo\">fieinfo</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_block\">ext4_get_block</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fiemap_check_flags\">fiemap_check_flags</a>(<a class=\"id\" href=\"#fieinfo\">fieinfo</a>, <a class=\"id\" href=\"#EXT4_FIEMAP_FLAGS\">EXT4_FIEMAP_FLAGS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADR\">EBADR</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fieinfo\">fieinfo</a>-><a class=\"id\" href=\"#fi_flags\">fi_flags</a> &amp; <a class=\"id\" href=\"#FIEMAP_FLAG_XATTR\">FIEMAP_FLAG_XATTR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_fiemap\">ext4_xattr_fiemap</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#fieinfo\">fieinfo</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#len_blks\">len_blks</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#last_blk\">last_blk</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_blk\">start_blk</a> = <a class=\"id\" href=\"#start\">start</a> >> <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_blk\">last_blk</a> = (<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#len\">len</a> - 1) >> <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#last_blk\">last_blk</a> >= <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_blk\">last_blk</a> = <a class=\"id\" href=\"#EXT_MAX_BLOCK\">EXT_MAX_BLOCK</a>-1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len_blks\">len_blks</a> = ((<a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a>) <a class=\"id\" href=\"#last_blk\">last_blk</a>) - <a class=\"id\" href=\"#start_blk\">start_blk</a> + 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Walk the extent tree gathering extent information.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ext4_ext_fiemap_cb will push extents back to user.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_ext_walk_space\">ext4_ext_walk_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#start_blk\">start_blk</a>, <a class=\"id\" href=\"#len_blks\">len_blks</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ext4_ext_fiemap_cb\">ext4_ext_fiemap_cb</a>, <a class=\"id\" href=\"#fieinfo\">fieinfo</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
];
xr_frag_insert('l/30/77cd32ed1d857e63b922b2ce541d3ca176c325.xr', __xr_tmp);
