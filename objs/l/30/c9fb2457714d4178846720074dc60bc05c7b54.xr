var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_band\">si_band</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_band\">ssi_band</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_fd\">si_fd</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_fd\">ssi_fd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_FAULT\">__SI_FAULT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>((long) <a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_addr\">si_addr</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_addr\">ssi_addr</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_SI_TRAPNO\">__ARCH_SI_TRAPNO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_trapno\">si_trapno</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_trapno\">ssi_trapno</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_CHLD\">__SI_CHLD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_pid\">ssi_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_uid\">ssi_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_status\">si_status</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_status\">ssi_status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_utime\">si_utime</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_utime\">ssi_utime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_stime\">si_stime</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_stime\">ssi_stime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_RT\">__SI_RT</a>: <span class=\"comment\">/* This is not generated by the kernel as of now. */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#__SI_MESGQ\">__SI_MESGQ</a>: <span class=\"comment\">/* But this is */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_pid\">ssi_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_uid\">ssi_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>((long) <a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_ptr\">si_ptr</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_ptr\">ssi_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_int\">si_int</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_int\">ssi_int</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This case catches also the signals queued by sigqueue().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_pid\">si_pid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_pid\">ssi_pid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_uid\">si_uid</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_uid\">ssi_uid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>((long) <a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_ptr\">si_ptr</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_ptr\">ssi_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> |= <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#kinfo\">kinfo</a>-><a class=\"id\" href=\"#si_int\">si_int</a>, &amp;<a class=\"id\" href=\"#uinfo\">uinfo</a>-><a class=\"id\" href=\"#ssi_int\">ssi_int</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>: sizeof(*<a class=\"id\" href=\"#uinfo\">uinfo</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#signalfd_dequeue\">signalfd_dequeue</a>(struct <a class=\"id\" href=\"#signalfd_ctx\">signalfd_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a>, <a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#nonblock\">nonblock</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_WAITQUEUE\">DECLARE_WAITQUEUE</a>(<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dequeue_signal\">dequeue_signal</a>(<a class=\"id\" href=\"#current\">current</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#sigmask\">sigmask</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#nonblock\">nonblock</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_wait_queue\">add_wait_queue</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#signalfd_wqh\">signalfd_wqh</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dequeue_signal\">dequeue_signal</a>(<a class=\"id\" href=\"#current\">current</a>, &amp;<a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#sigmask\">sigmask</a>, <a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTSYS\">ERESTARTSYS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_wait_queue\">remove_wait_queue</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#signalfd_wqh\">signalfd_wqh</a>, &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns a multiple of the size of a \"struct signalfd_siginfo\", or a negative</span>", 
"<span class=\"comment\"> * error code. The \"count\" parameter must be at least the size of a</span>", 
"<span class=\"comment\"> * \"struct signalfd_siginfo\".</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#signalfd_read\">signalfd_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#signalfd_ctx\">signalfd_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#signalfd_siginfo\">signalfd_siginfo</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#siginfo\">siginfo</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nonblock\">nonblock</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#total\">total</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#info\">info</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> /= sizeof(struct <a class=\"id\" href=\"#signalfd_siginfo\">signalfd_siginfo</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo\">siginfo</a> = (struct <a class=\"id\" href=\"#signalfd_siginfo\">signalfd_siginfo</a> <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#signalfd_dequeue\">signalfd_dequeue</a>(<a class=\"id\" href=\"#ctx\">ctx</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#nonblock\">nonblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#ret\">ret</a> <= 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#signalfd_copyinfo\">signalfd_copyinfo</a>(<a class=\"id\" href=\"#siginfo\">siginfo</a>, &amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#siginfo\">siginfo</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total\">total</a> += <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nonblock\">nonblock</a> = 1;", 
"<span class=\"ts\"/>} while (--<a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#total\">total</a> ? <a class=\"id\" href=\"#total\">total</a>: <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#signalfd_fops\">signalfd_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#signalfd_release\">signalfd_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poll\">poll</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#signalfd_poll\">signalfd_poll</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#signalfd_read\">signalfd_read</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#signalfd4\">signalfd4</a>, int, <a class=\"id\" href=\"#ufd\">ufd</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#user_mask\">user_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#sizemask\">sizemask</a>, int, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#sigmask\">sigmask</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#signalfd_ctx\">signalfd_ctx</a> *<a class=\"id\" href=\"#ctx\">ctx</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the SFD_* constants for consistency.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#SFD_CLOEXEC\">SFD_CLOEXEC</a> != <a class=\"id\" href=\"#O_CLOEXEC\">O_CLOEXEC</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>(<a class=\"id\" href=\"#SFD_NONBLOCK\">SFD_NONBLOCK</a> != <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; ~(<a class=\"id\" href=\"#SFD_CLOEXEC\">SFD_CLOEXEC</a> | <a class=\"id\" href=\"#SFD_NONBLOCK\">SFD_NONBLOCK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sizemask\">sizemask</a> != sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#sigmask\">sigmask</a>, <a class=\"id\" href=\"#user_mask\">user_mask</a>, sizeof(<a class=\"id\" href=\"#sigmask\">sigmask</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#sigmask\">sigmask</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>) | <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#signotset\">signotset</a>(&amp;<a class=\"id\" href=\"#sigmask\">sigmask</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ufd\">ufd</a> == -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#ctx\">ctx</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ctx\">ctx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#sigmask\">sigmask</a> = <a class=\"id\" href=\"#sigmask\">sigmask</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * When we call this, the initialization must be complete, since</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * anon_inode_getfd() will install the fd.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ufd\">ufd</a> = <a class=\"id\" href=\"#anon_inode_getfd\">anon_inode_getfd</a>(\"[signalfd]\", &amp;<a class=\"id\" href=\"#signalfd_fops\">signalfd_fops</a>, <a class=\"id\" href=\"#ctx\">ctx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#O_RDWR\">O_RDWR</a> | (<a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#O_CLOEXEC\">O_CLOEXEC</a> | <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ufd\">ufd</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#ctx\">ctx</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget\">fget</a>(<a class=\"id\" href=\"#ufd\">ufd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> != &amp;<a class=\"id\" href=\"#signalfd_fops\">signalfd_fops</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctx\">ctx</a>-><a class=\"id\" href=\"#sigmask\">sigmask</a> = <a class=\"id\" href=\"#sigmask\">sigmask</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#signalfd_wqh\">signalfd_wqh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ufd\">ufd</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#signalfd\">signalfd</a>, int, <a class=\"id\" href=\"#ufd\">ufd</a>, <a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#user_mask\">user_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#sizemask\">sizemask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_signalfd4\">sys_signalfd4</a>(<a class=\"id\" href=\"#ufd\">ufd</a>, <a class=\"id\" href=\"#user_mask\">user_mask</a>, <a class=\"id\" href=\"#sizemask\">sizemask</a>, 0);", 
"}", 
];
xr_frag_insert('l/30/c9fb2457714d4178846720074dc60bc05c7b54.xr', __xr_tmp);
