var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Real-Time Scheduling Class (mapped to the SCHED_FIFO and SCHED_RR</span>", 
"<span class=\"comment\"> * policies)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RT_GROUP_SCHED\">CONFIG_RT_GROUP_SCHED</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_entity_is_task\">rt_entity_is_task</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>) (!(<a class=\"id\" href=\"#rt_se\">rt_se</a>)-><a class=\"id\" href=\"#my_q\">my_q</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#rt_task_of\">rt_task_of</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCHED_DEBUG\">CONFIG_SCHED_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#rt_entity_is_task\">rt_entity_is_task</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>));", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a>, <a class=\"id\" href=\"#rt\">rt</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rq\">rq</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq_of_se\">rt_rq_of_se</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_se\">rt_se</a>-><a class=\"id\" href=\"#rt_rq\">rt_rq</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* CONFIG_RT_GROUP_SCHED */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#rt_entity_is_task\">rt_entity_is_task</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>) (1)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#rt_task_of\">rt_task_of</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a>, <a class=\"id\" href=\"#rt\">rt</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, struct <a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#rt\">rt</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq_of_se\">rt_rq_of_se</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#rt_task_of\">rt_task_of</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#task_rq\">task_rq</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rt\">rt</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_RT_GROUP_SCHED */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_overloaded\">rt_overloaded</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#rto_count\">rto_count</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rt_set_overload\">rt_set_overload</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#online\">online</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_set_cpu\">cpumask_set_cpu</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#rto_mask\">rto_mask</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure the mask is visible before we set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the overload count. That is checked to determine</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if we should look at the mask. It would be a shame</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if we looked at the mask, but the mask was not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * updated yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#rto_count\">rto_count</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#rt_clear_overload\">rt_clear_overload</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#online\">online</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the order here really doesn't matter */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#rto_count\">rto_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpumask_clear_cpu\">cpumask_clear_cpu</a>(<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#rto_mask\">rto_mask</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#update_rt_migration\">update_rt_migration</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_migratory\">rt_nr_migratory</a> && <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_total\">rt_nr_total</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#overloaded\">overloaded</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_set_overload\">rt_set_overload</a>(<a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#overloaded\">overloaded</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#overloaded\">overloaded</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_clear_overload\">rt_clear_overload</a>(<a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#overloaded\">overloaded</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#inc_rt_migration\">inc_rt_migration</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>, struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_entity_is_task\">rt_entity_is_task</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a> = &amp;<a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)-><a class=\"id\" href=\"#rt\">rt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_total\">rt_nr_total</a>++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_se\">rt_se</a>-><a class=\"id\" href=\"#nr_cpus_allowed\">nr_cpus_allowed</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_migratory\">rt_nr_migratory</a>++;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_rt_migration\">update_rt_migration</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dec_rt_migration\">dec_rt_migration</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>, struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_entity_is_task\">rt_entity_is_task</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a> = &amp;<a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)-><a class=\"id\" href=\"#rt\">rt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_total\">rt_nr_total</a>--;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_se\">rt_se</a>-><a class=\"id\" href=\"#nr_cpus_allowed\">nr_cpus_allowed</a> &gt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_migratory\">rt_nr_migratory</a>--;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_rt_migration\">update_rt_migration</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#enqueue_pushable_task\">enqueue_pushable_task</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_del\">plist_del</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>, &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rt\">rt</a>.<a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_node_init\">plist_node_init</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>, <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prio\">prio</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_add\">plist_add</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>, &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rt\">rt</a>.<a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dequeue_pushable_task\">dequeue_pushable_task</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#plist_del\">plist_del</a>(&amp;<a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>, &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rt\">rt</a>.<a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#has_pushable_tasks\">has_pushable_tasks</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#plist_head_empty\">plist_head_empty</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rt\">rt</a>.<a class=\"id\" href=\"#pushable_tasks\">pushable_tasks</a>);", 
"}", 
"", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#enqueue_pushable_task\">enqueue_pushable_task</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#dequeue_pushable_task\">dequeue_pushable_task</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"void <a class=\"id\" href=\"#inc_rt_migration\">inc_rt_migration</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>, struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"void <a class=\"id\" href=\"#dec_rt_migration\">dec_rt_migration</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>, struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#on_rt_rq\">on_rt_rq</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#rt_se\">rt_se</a>-><a class=\"id\" href=\"#run_list\">run_list</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RT_GROUP_SCHED\">CONFIG_RT_GROUP_SCHED</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sched_rt_runtime\">sched_rt_runtime</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#tg\">tg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sched_rt_period\">sched_rt_period</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#tg\">tg</a>-><a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a>.<a class=\"id\" href=\"#rt_period\">rt_period</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_leaf_rt_rq\">for_each_leaf_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, <a class=\"id\" href=\"#rq\">rq</a>) \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#leaf_rt_rq_list\">leaf_rt_rq_list</a>, <a class=\"id\" href=\"#leaf_rt_rq_list\">leaf_rt_rq_list</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_sched_rt_entity\">for_each_sched_rt_entity</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>) \\", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#rt_se\">rt_se</a>; <a class=\"id\" href=\"#rt_se\">rt_se</a> = <a class=\"id\" href=\"#rt_se\">rt_se</a>-><a class=\"id\" href=\"#parent\">parent</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#group_rt_rq\">group_rt_rq</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_se\">rt_se</a>-><a class=\"id\" href=\"#my_q\">my_q</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#enqueue_rt_entity\">enqueue_rt_entity</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#head\">head</a>);", 
"static void <a class=\"id\" href=\"#dequeue_rt_entity\">dequeue_rt_entity</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"", 
"static void <a class=\"id\" href=\"#sched_rt_rq_enqueue\">sched_rt_rq_enqueue</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#this_cpu\">this_cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a> = <a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)-><a class=\"id\" href=\"#curr\">curr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_se\">rt_se</a> = <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#tg\">tg</a>-><a class=\"id\" href=\"#rt_se\">rt_se</a>[<a class=\"id\" href=\"#this_cpu\">this_cpu</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_running\">rt_nr_running</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_se\">rt_se</a> && !<a class=\"id\" href=\"#on_rt_rq\">on_rt_rq</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enqueue_rt_entity\">enqueue_rt_entity</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#curr\">curr</a> &lt; <a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#prio\">prio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resched_task\">resched_task</a>(<a class=\"id\" href=\"#curr\">curr</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sched_rt_rq_dequeue\">sched_rt_rq_dequeue</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#this_cpu\">this_cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_se\">rt_se</a> = <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#tg\">tg</a>-><a class=\"id\" href=\"#rt_se\">rt_se</a>[<a class=\"id\" href=\"#this_cpu\">this_cpu</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_se\">rt_se</a> && <a class=\"id\" href=\"#on_rt_rq\">on_rt_rq</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dequeue_rt_entity\">dequeue_rt_entity</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_rq_throttled\">rt_rq_throttled</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a> && !<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_boosted\">rt_nr_boosted</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#rt_se_boosted\">rt_se_boosted</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a> = <a class=\"id\" href=\"#group_rt_rq\">group_rt_rq</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return !!<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_boosted\">rt_nr_boosted</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#rt_task_of\">rt_task_of</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#prio\">prio</a> != <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#normal_prio\">normal_prio</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#sched_rt_period_mask\">sched_rt_period_mask</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_rq\">cpu_rq</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#span\">span</a>;", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#sched_rt_period_mask\">sched_rt_period_mask</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#sched_rt_period_rt_rq\">sched_rt_period_rt_rq</a>(struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#rt_b\">rt_b</a>, struct <a class=\"id\" href=\"#task_group\">task_group</a>, <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a>)-><a class=\"id\" href=\"#rt_rq\">rt_rq</a>[<a class=\"id\" href=\"#cpu\">cpu</a>];", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#sched_rt_bandwidth\">sched_rt_bandwidth</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#tg\">tg</a>-><a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_RT_GROUP_SCHED */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sched_rt_runtime\">sched_rt_runtime</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sched_rt_period\">sched_rt_period</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#def_rt_bandwidth\">def_rt_bandwidth</a>.<a class=\"id\" href=\"#rt_period\">rt_period</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_leaf_rt_rq\">for_each_leaf_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, <a class=\"id\" href=\"#rq\">rq</a>) \\", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#rt_rq\">rt_rq</a> = &amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rt\">rt</a>; <a class=\"id\" href=\"#rt_rq\">rt_rq</a>; <a class=\"id\" href=\"#rt_rq\">rt_rq</a> = <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#for_each_sched_rt_entity\">for_each_sched_rt_entity</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>) \\", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#rt_se\">rt_se</a>; <a class=\"id\" href=\"#rt_se\">rt_se</a> = <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#group_rt_rq\">group_rt_rq</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sched_rt_rq_enqueue\">sched_rt_rq_enqueue</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_running\">rt_nr_running</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resched_task\">resched_task</a>(<a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)-><a class=\"id\" href=\"#curr\">curr</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sched_rt_rq_dequeue\">sched_rt_rq_dequeue</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_rq_throttled\">rt_rq_throttled</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#sched_rt_period_mask\">sched_rt_period_mask</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a>", 
"struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#sched_rt_period_rt_rq\">sched_rt_period_rt_rq</a>(struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#cpu_rq\">cpu_rq</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)-><a class=\"id\" href=\"#rt\">rt</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#sched_rt_bandwidth\">sched_rt_bandwidth</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#def_rt_bandwidth\">def_rt_bandwidth</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_RT_GROUP_SCHED */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We ran out of runtime, see if we can borrow some from our neighbours.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#do_balance_runtime\">do_balance_runtime</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a> = <a class=\"id\" href=\"#sched_rt_bandwidth\">sched_rt_bandwidth</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#root_domain\">root_domain</a> *<a class=\"id\" href=\"#rd\">rd</a> = <a class=\"id\" href=\"#cpu_rq\">cpu_rq</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>())-><a class=\"id\" href=\"#rd\">rd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#weight\">weight</a>, <a class=\"id\" href=\"#more\">more</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#rt_period\">rt_period</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#weight\">weight</a> = <a class=\"id\" href=\"#cpumask_weight\">cpumask_weight</a>(<a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#span\">span</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rt_period\">rt_period</a> = <a class=\"id\" href=\"#ktime_to_ns\">ktime_to_ns</a>(<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_period\">rt_period</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#span\">span</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#sched_rt_period_rt_rq\">sched_rt_period_rt_rq</a>(<a class=\"id\" href=\"#rt_b\">rt_b</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#diff\">diff</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a> == <a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Either all rqs have inf runtime and there's nothing to steal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or __disable_runtime() below sets a specific rq to inf to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * indicate its been disabled and disalow stealing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * From runqueues with spare time, take 1/n part of their</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * spare time, but no more than our period.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diff\">diff</a> = <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> - <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#diff\">diff</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diff\">diff</a> = <a class=\"id\" href=\"#div_u64\">div_u64</a>((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#diff\">diff</a>, <a class=\"id\" href=\"#weight\">weight</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> + <a class=\"id\" href=\"#diff\">diff</a> &gt; <a class=\"id\" href=\"#rt_period\">rt_period</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diff\">diff</a> = <a class=\"id\" href=\"#rt_period\">rt_period</a> - <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> -= <a class=\"id\" href=\"#diff\">diff</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> += <a class=\"id\" href=\"#diff\">diff</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#more\">more</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == <a class=\"id\" href=\"#rt_period\">rt_period</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#more\">more</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ensure this RQ takes back all the runtime it lend to its neighbours.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__disable_runtime\">__disable_runtime</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#root_domain\">root_domain</a> *<a class=\"id\" href=\"#rd\">rd</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#scheduler_running\">scheduler_running</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_leaf_rt_rq\">for_each_leaf_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, <a class=\"id\" href=\"#rq\">rq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a> = <a class=\"id\" href=\"#sched_rt_bandwidth\">sched_rt_bandwidth</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#want\">want</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Either we're all inf and nobody needs to borrow, or we're</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * already disabled and thus have nothing to do, or we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * exactly the right amount of runtime to take out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == <a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#balanced\">balanced</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Calculate the difference between what we started out with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * and what we current have, that's the amount of runtime</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we lend and now have to reclaim.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#want\">want</a> = <a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> - <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Greedy reclaim, take back as much as we can.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#span\">span</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#iter\">iter</a> = <a class=\"id\" href=\"#sched_rt_period_rt_rq\">sched_rt_period_rt_rq</a>(<a class=\"id\" href=\"#rt_b\">rt_b</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#diff\">diff</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Can't reclaim from ourselves or disabled runqueues.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iter\">iter</a> == <a class=\"id\" href=\"#rt_rq\">rt_rq</a> || <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#want\">want</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#diff\">diff</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#s64\">s64</a>, <a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>, <a class=\"id\" href=\"#want\">want</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> -= <a class=\"id\" href=\"#diff\">diff</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#want\">want</a> -= <a class=\"id\" href=\"#diff\">diff</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> -= <a class=\"id\" href=\"#want\">want</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#want\">want</a> -= <a class=\"id\" href=\"#want\">want</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#iter\">iter</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#want\">want</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We cannot be left wanting - that would mean some runtime</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * leaked out of the system.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#want\">want</a>);", 
"<a class=\"id\" href=\"#balanced\">balanced</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Disable all the borrow logic by pretending we have inf</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * runtime - in which case borrowing doesn't make sense.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> = <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#disable_runtime\">disable_runtime</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__disable_runtime\">__disable_runtime</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__enable_runtime\">__enable_runtime</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#scheduler_running\">scheduler_running</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Reset each runqueue's bandwidth settings</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_leaf_rt_rq\">for_each_leaf_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, <a class=\"id\" href=\"#rq\">rq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a> = <a class=\"id\" href=\"#sched_rt_bandwidth\">sched_rt_bandwidth</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> = <a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#enable_runtime\">enable_runtime</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_irqsave\">raw_spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__enable_runtime\">__enable_runtime</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock_irqrestore\">raw_spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#balance_runtime\">balance_runtime</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#more\">more</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a> &gt; <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#more\">more</a> = <a class=\"id\" href=\"#do_balance_runtime\">do_balance_runtime</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#more\">more</a>;", 
"}", 
"#else <span class=\"comment\">/* !CONFIG_SMP */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#balance_runtime\">balance_runtime</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"static int <a class=\"id\" href=\"#do_sched_rt_period_timer\">do_sched_rt_period_timer</a>(struct <a class=\"id\" href=\"#rt_bandwidth\">rt_bandwidth</a> *<a class=\"id\" href=\"#rt_b\">rt_b</a>, int <a class=\"id\" href=\"#overrun\">overrun</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#idle\">idle</a> = 1;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#span\">span</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_bandwidth_enabled\">rt_bandwidth_enabled</a>() || <a class=\"id\" href=\"#rt_b\">rt_b</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a> == <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#span\">span</a> = <a class=\"id\" href=\"#sched_rt_period_mask\">sched_rt_period_mask</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_cpu\">for_each_cpu</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#span\">span</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#enqueue\">enqueue</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a> = <a class=\"id\" href=\"#sched_rt_period_rt_rq\">sched_rt_period_rt_rq</a>(<a class=\"id\" href=\"#rt_b\">rt_b</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#runtime\">runtime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#balance_runtime\">balance_runtime</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#runtime\">runtime</a> = <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime\">rt_runtime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a> -= <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a>, <a class=\"id\" href=\"#overrun\">overrun</a>*<a class=\"id\" href=\"#runtime\">runtime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a> && <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a> &lt; <a class=\"id\" href=\"#runtime\">runtime</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enqueue\">enqueue</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a> || <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_running\">rt_nr_running</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle\">idle</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_running\">rt_nr_running</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idle\">idle</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#enqueue\">enqueue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sched_rt_rq_enqueue\">sched_rt_rq_enqueue</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idle\">idle</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#rt_se_prio\">rt_se_prio</a>(struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_RT_GROUP_SCHED\">CONFIG_RT_GROUP_SCHED</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a> = <a class=\"id\" href=\"#group_rt_rq\">group_rt_rq</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#curr\">curr</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rt_task_of\">rt_task_of</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>)-><a class=\"id\" href=\"#prio\">prio</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sched_rt_runtime_exceeded\">sched_rt_runtime_exceeded</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#runtime\">runtime</a> = <a class=\"id\" href=\"#sched_rt_runtime\">sched_rt_runtime</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rt_rq_throttled\">rt_rq_throttled</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sched_rt_runtime\">sched_rt_runtime</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>) >= <a class=\"id\" href=\"#sched_rt_period\">sched_rt_period</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#balance_runtime\">balance_runtime</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#runtime\">runtime</a> = <a class=\"id\" href=\"#sched_rt_runtime\">sched_rt_runtime</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#runtime\">runtime</a> == <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a> &gt; <a class=\"id\" href=\"#runtime\">runtime</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_throttled\">rt_throttled</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq_throttled\">rt_rq_throttled</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sched_rt_rq_dequeue\">sched_rt_rq_dequeue</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Update the current task's runtime statistics. Skip current tasks that</span>", 
"<span class=\"comment\"> * are not in our scheduling class.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#update_curr_rt\">update_curr_rt</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#curr\">curr</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#curr\">curr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sched_rt_entity\">sched_rt_entity</a> *<a class=\"id\" href=\"#rt_se\">rt_se</a> = &amp;<a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a> = <a class=\"id\" href=\"#rt_rq_of_se\">rt_rq_of_se</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#delta_exec\">delta_exec</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task_has_rt_policy\">task_has_rt_policy</a>(<a class=\"id\" href=\"#curr\">curr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#delta_exec\">delta_exec</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#clock\">clock</a> - <a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#exec_start\">exec_start</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#s64\">s64</a>)<a class=\"id\" href=\"#delta_exec\">delta_exec</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delta_exec\">delta_exec</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#schedstat_set\">schedstat_set</a>(<a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#statistics\">statistics</a>.<a class=\"id\" href=\"#exec_max\">exec_max</a>, <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#statistics\">statistics</a>.<a class=\"id\" href=\"#exec_max\">exec_max</a>, <a class=\"id\" href=\"#delta_exec\">delta_exec</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#sum_exec_runtime\">sum_exec_runtime</a> += <a class=\"id\" href=\"#delta_exec\">delta_exec</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#account_group_exec_runtime\">account_group_exec_runtime</a>(<a class=\"id\" href=\"#curr\">curr</a>, <a class=\"id\" href=\"#delta_exec\">delta_exec</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curr\">curr</a>-><a class=\"id\" href=\"#se\">se</a>.<a class=\"id\" href=\"#exec_start\">exec_start</a> = <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#clock\">clock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpuacct_charge\">cpuacct_charge</a>(<a class=\"id\" href=\"#curr\">curr</a>, <a class=\"id\" href=\"#delta_exec\">delta_exec</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sched_rt_avg_update\">sched_rt_avg_update</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#delta_exec\">delta_exec</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rt_bandwidth_enabled\">rt_bandwidth_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_sched_rt_entity\">for_each_sched_rt_entity</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a> = <a class=\"id\" href=\"#rt_rq_of_se\">rt_rq_of_se</a>(<a class=\"id\" href=\"#rt_se\">rt_se</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sched_rt_runtime\">sched_rt_runtime</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>) != <a class=\"id\" href=\"#RUNTIME_INF\">RUNTIME_INF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_time\">rt_time</a> += <a class=\"id\" href=\"#delta_exec\">delta_exec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sched_rt_runtime_exceeded\">sched_rt_runtime_exceeded</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#resched_task\">resched_task</a>(<a class=\"id\" href=\"#curr\">curr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_runtime_lock\">rt_runtime_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"", 
"static struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#pick_next_highest_task_rt\">pick_next_highest_task_rt</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#next_prio\">next_prio</a>(struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pick_next_highest_task_rt\">pick_next_highest_task_rt</a>(<a class=\"id\" href=\"#rq\">rq</a>, <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a> && <a class=\"id\" href=\"#rt_prio\">rt_prio</a>(<a class=\"id\" href=\"#next\">next</a>-><a class=\"id\" href=\"#prio\">prio</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#next\">next</a>-><a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#MAX_RT_PRIO\">MAX_RT_PRIO</a>;", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#inc_rt_prio_smp\">inc_rt_prio_smp</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, int <a class=\"id\" href=\"#prio\">prio</a>, int <a class=\"id\" href=\"#prev_prio\">prev_prio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prio\">prio</a> &lt; <a class=\"id\" href=\"#prev_prio\">prev_prio</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the new task is higher in priority than anything on the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * run-queue, we know that the previous high becomes our</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * next-highest.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#prev_prio\">prev_prio</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#online\">online</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpupri_set\">cpupri_set</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#cpupri\">cpupri</a>, <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#prio\">prio</a>);", 
"", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#prio\">prio</a> == <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#curr\">curr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the next task is equal in priority to the highest on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the run-queue, then we implicitly know that the next highest</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * task cannot be any lower than current</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#prio\">prio</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#prio\">prio</a> &lt; <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, we need to recompute next-highest</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#next_prio\">next_prio</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"}", 
"", 
"static void", 
"<a class=\"id\" href=\"#dec_rt_prio_smp\">dec_rt_prio_smp</a>(struct <a class=\"id\" href=\"#rt_rq\">rt_rq</a> *<a class=\"id\" href=\"#rt_rq\">rt_rq</a>, int <a class=\"id\" href=\"#prio\">prio</a>, int <a class=\"id\" href=\"#prev_prio\">prev_prio</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rq\">rq</a> *<a class=\"id\" href=\"#rq\">rq</a> = <a class=\"id\" href=\"#rq_of_rt_rq\">rq_of_rt_rq</a>(<a class=\"id\" href=\"#rt_rq\">rt_rq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#rt_nr_running\">rt_nr_running</a> && (<a class=\"id\" href=\"#prio\">prio</a> <= <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#next\">next</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#next_prio\">next_prio</a>(<a class=\"id\" href=\"#rq\">rq</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#online\">online</a> && <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#curr\">curr</a> != <a class=\"id\" href=\"#prev_prio\">prev_prio</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpupri_set\">cpupri_set</a>(&amp;<a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#rd\">rd</a>-><a class=\"id\" href=\"#cpupri\">cpupri</a>, <a class=\"id\" href=\"#rq\">rq</a>-><a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#rt_rq\">rt_rq</a>-><a class=\"id\" href=\"#highest_prio\">highest_prio</a>.<a class=\"id\" href=\"#curr\">curr</a>);", 
"}", 
];
xr_frag_insert('l/31/0097d24c1f1b3eea9cce244aaba6ca8ab71732.xr', __xr_tmp);
