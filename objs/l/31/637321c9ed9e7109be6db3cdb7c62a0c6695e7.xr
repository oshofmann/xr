var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_UIO_H\">__LINUX_UIO_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_UIO_H\">__LINUX_UIO_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compiler\">compiler</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Berkeley style UIO structures<span class=\"ts\"/>-<span class=\"ts\"/>Alan Cox 1994.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#iovec\">iovec</a>", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#iov_base\">iov_base</a>;<span class=\"ts\"/><span class=\"comment\">/* BSD uses caddr_t (1003.1g requires void *) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kernel_size_t\">__kernel_size_t</a> <a class=\"id\" href=\"#iov_len\">iov_len</a>; <span class=\"comment\">/* Must be size_t (1003.1g) */</span>", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>UIO_MAXIOV shall be at least 16 1003.1g (5.4.1.1)</span>", 
"<span class=\"comment\"> */</span>", 
" ", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UIO_FASTIOV\">UIO_FASTIOV</a><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UIO_MAXIOV\">UIO_MAXIOV</a><span class=\"ts\"/>1024", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"struct <a class=\"id\" href=\"#kvec\">kvec</a> {", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#iov_base\">iov_base</a>; <span class=\"comment\">/* and that should *never* hold a userland pointer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Total number of bytes covered by an iovec.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE that it is not safe to use this function until all the iovec's</span>", 
"<span class=\"comment\"> * segment lengths have been validated.  Because the individual lengths can</span>", 
"<span class=\"comment\"> * overflow a size_t when added together.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#iov_length\">iov_length</a>(const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#seg\">seg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#seg\">seg</a> = 0; <a class=\"id\" href=\"#seg\">seg</a> &lt; <a class=\"id\" href=\"#nr_segs\">nr_segs</a>; <a class=\"id\" href=\"#seg\">seg</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#seg\">seg</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"unsigned long <a class=\"id\" href=\"#iov_shorten\">iov_shorten</a>(struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#to\">to</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/31/637321c9ed9e7109be6db3cdb7c62a0c6695e7.xr', __xr_tmp);
