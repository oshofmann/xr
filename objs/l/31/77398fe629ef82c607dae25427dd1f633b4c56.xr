var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_GENHD_H\">_LINUX_GENHD_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_GENHD_H\">_LINUX_GENHD_H</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>genhd.h Copyright (C) 1992 Drew Eckhardt</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generic hard disk header file by  </span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>Drew Eckhardt</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>&lt;drew@colorado.edu&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kdev_t\">kdev_t</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#rcupdate\">rcupdate</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BLOCK\">CONFIG_BLOCK</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#kobj_to_dev\">kobj_to_dev</a>(<a class=\"id\" href=\"#k\">k</a>)<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>((<a class=\"id\" href=\"#k\">k</a>), struct <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#kobj\">kobj</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dev_to_disk\">dev_to_disk</a>(<a class=\"id\" href=\"#device\">device</a>)<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>((<a class=\"id\" href=\"#device\">device</a>), struct <a class=\"id\" href=\"#gendisk\">gendisk</a>, <a class=\"id\" href=\"#part0\">part0</a>.<a class=\"id\" href=\"#__dev\">__dev</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dev_to_part\">dev_to_part</a>(<a class=\"id\" href=\"#device\">device</a>)<span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>((<a class=\"id\" href=\"#device\">device</a>), struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a>, <a class=\"id\" href=\"#__dev\">__dev</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#disk\">disk</a>)<span class=\"ts\"/>(&amp;(<a class=\"id\" href=\"#disk\">disk</a>)-><a class=\"id\" href=\"#part0\">part0</a>.<a class=\"id\" href=\"#__dev\">__dev</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_to_dev\">part_to_dev</a>(<a class=\"id\" href=\"#part\">part</a>)<span class=\"ts\"/>(&amp;((<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#__dev\">__dev</a>))", 
"", 
"extern struct <a class=\"id\" href=\"#device_type\">device_type</a> <a class=\"id\" href=\"#part_type\">part_type</a>;", 
"extern struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#block_depr\">block_depr</a>;", 
"extern struct <a class=\"id\" href=\"#class\">class</a> <a class=\"id\" href=\"#block_class\">block_class</a>;", 
"", 
"enum {", 
"<span class=\"comment\">/* These three have identical behaviour; use the second one if DOS FDISK gets</span>", 
"<span class=\"comment\">   confused about extended/logical partitions starting past cylinder 1023. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DOS_EXTENDED_PARTITION\">DOS_EXTENDED_PARTITION</a> = 5,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LINUX_EXTENDED_PARTITION\">LINUX_EXTENDED_PARTITION</a> = 0x85,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WIN98_EXTENDED_PARTITION\">WIN98_EXTENDED_PARTITION</a> = 0x0f,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SUN_WHOLE_DISK\">SUN_WHOLE_DISK</a> = <a class=\"id\" href=\"#DOS_EXTENDED_PARTITION\">DOS_EXTENDED_PARTITION</a>,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LINUX_SWAP_PARTITION\">LINUX_SWAP_PARTITION</a> = 0x82,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LINUX_DATA_PARTITION\">LINUX_DATA_PARTITION</a> = 0x83,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LINUX_LVM_PARTITION\">LINUX_LVM_PARTITION</a> = 0x8e,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#LINUX_RAID_PARTITION\">LINUX_RAID_PARTITION</a> = 0xfd,<span class=\"ts\"/><span class=\"comment\">/* autodetect RAID partition */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOLARIS_X86_PARTITION\">SOLARIS_X86_PARTITION</a> =<span class=\"ts\"/><a class=\"id\" href=\"#LINUX_SWAP_PARTITION\">LINUX_SWAP_PARTITION</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NEW_SOLARIS_X86_PARTITION\">NEW_SOLARIS_X86_PARTITION</a> = 0xbf,", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM6_AUX1PARTITION\">DM6_AUX1PARTITION</a> = 0x51,<span class=\"ts\"/><span class=\"comment\">/* no DDO:  use xlated geom */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM6_AUX3PARTITION\">DM6_AUX3PARTITION</a> = 0x53,<span class=\"ts\"/><span class=\"comment\">/* no DDO:  use xlated geom */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DM6_PARTITION\">DM6_PARTITION</a> =<span class=\"ts\"/>0x54,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* has DDO: use xlated geom &amp; offset */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EZD_PARTITION\">EZD_PARTITION</a> =<span class=\"ts\"/>0x55,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* EZ-DRIVE */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FREEBSD_PARTITION\">FREEBSD_PARTITION</a> = 0xa5,<span class=\"ts\"/><span class=\"comment\">/* FreeBSD Partition ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#OPENBSD_PARTITION\">OPENBSD_PARTITION</a> = 0xa6,<span class=\"ts\"/><span class=\"comment\">/* OpenBSD Partition ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NETBSD_PARTITION\">NETBSD_PARTITION</a> = 0xa9,<span class=\"ts\"/><span class=\"comment\">/* NetBSD Partition ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BSDI_PARTITION\">BSDI_PARTITION</a> = 0xb7,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* BSDI Partition ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#MINIX_PARTITION\">MINIX_PARTITION</a> = 0x81,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Minix Partition ID */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#UNIXWARE_PARTITION\">UNIXWARE_PARTITION</a> = 0x63,<span class=\"ts\"/><span class=\"comment\">/* Same as GNU_HURD and SCO Unix */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DISK_MAX_PARTS\">DISK_MAX_PARTS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DISK_NAME_LEN\">DISK_NAME_LEN</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>32", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#major\">major</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#workqueue\">workqueue</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#partition\">partition</a> {", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#boot_ind\">boot_ind</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0x80 - active */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#head\">head</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* starting head */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#sector\">sector</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* starting sector */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#cyl\">cyl</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* starting cylinder */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#sys_ind\">sys_ind</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* What partition type */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#end_head\">end_head</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* end head */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#end_sector\">end_sector</a>;<span class=\"ts\"/><span class=\"comment\">/* end sector */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#end_cyl\">end_cyl</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* end cylinder */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#start_sect\">start_sect</a>;<span class=\"ts\"/><span class=\"comment\">/* starting sector counting from 0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#nr_sects\">nr_sects</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nr of sectors in partition */</span>", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"struct <a class=\"id\" href=\"#disk_stats\">disk_stats</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sectors\">sectors</a>[2];<span class=\"ts\"/><span class=\"comment\">/* READs and WRITEs */</span>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ios\">ios</a>[2];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#merges\">merges</a>[2];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ticks\">ticks</a>[2];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#io_ticks\">io_ticks</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#time_in_queue\">time_in_queue</a>;", 
"};", 
"<span class=\"ts\"/>", 
"struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#start_sect\">start_sect</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#nr_sects\">nr_sects</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#alignment_offset\">alignment_offset</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#discard_alignment\">discard_alignment</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> <a class=\"id\" href=\"#__dev\">__dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#holder_dir\">holder_dir</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#policy\">policy</a>, <a class=\"id\" href=\"#partno\">partno</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FAIL_MAKE_REQUEST\">CONFIG_FAIL_MAKE_REQUEST</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#make_it_fail\">make_it_fail</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#stamp\">stamp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#in_flight\">in_flight</a>[2];", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#disk_stats\">disk_stats</a> <a class=\"id\" href=\"#__percpu\">__percpu</a> *<a class=\"id\" href=\"#dkstats\">dkstats</a>;", 
"#else", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#disk_stats\">disk_stats</a> <a class=\"id\" href=\"#dkstats\">dkstats</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> <a class=\"id\" href=\"#rcu_head\">rcu_head</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENHD_FL_REMOVABLE\">GENHD_FL_REMOVABLE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1", 
"<span class=\"comment\">/* 2 is unused */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENHD_FL_MEDIA_CHANGE_NOTIFY\">GENHD_FL_MEDIA_CHANGE_NOTIFY</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENHD_FL_CD\">GENHD_FL_CD</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENHD_FL_UP\">GENHD_FL_UP</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENHD_FL_SUPPRESS_PARTITION_INFO\">GENHD_FL_SUPPRESS_PARTITION_INFO</a><span class=\"ts\"/>32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENHD_FL_EXT_DEVT\">GENHD_FL_EXT_DEVT</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>64 <span class=\"comment\">/* allow extended devt */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#GENHD_FL_NATIVE_CAPACITY\">GENHD_FL_NATIVE_CAPACITY</a><span class=\"ts\"/><span class=\"ts\"/>128", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_SCSI_MAX_CMDS\">BLK_SCSI_MAX_CMDS</a><span class=\"ts\"/>(256)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLK_SCSI_CMD_PER_LONG\">BLK_SCSI_CMD_PER_LONG</a><span class=\"ts\"/>(<a class=\"id\" href=\"#BLK_SCSI_MAX_CMDS\">BLK_SCSI_MAX_CMDS</a> / (sizeof(long) * 8))", 
"", 
"struct <a class=\"id\" href=\"#blk_scsi_cmd_filter\">blk_scsi_cmd_filter</a> {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#read_ok\">read_ok</a>[<a class=\"id\" href=\"#BLK_SCSI_CMD_PER_LONG\">BLK_SCSI_CMD_PER_LONG</a>];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#write_ok\">write_ok</a>[<a class=\"id\" href=\"#BLK_SCSI_CMD_PER_LONG\">BLK_SCSI_CMD_PER_LONG</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> <a class=\"id\" href=\"#kobj\">kobj</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#disk_part_tbl\">disk_part_tbl</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rcu_head\">rcu_head</a> <a class=\"id\" href=\"#rcu_head\">rcu_head</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#last_lookup\">last_lookup</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>[];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#gendisk\">gendisk</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* major, first_minor and minors are input parameters only,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't use directly.  Use disk_devt() and disk_max_parts().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#major\">major</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* major number of driver */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#first_minor\">first_minor</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#minors\">minors</a>;                     <span class=\"comment\">/* maximum number of minors, =1 for</span>", 
"<span class=\"comment\">                                         * disks that can't be partitioned. */</span>", 
"", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#disk_name\">disk_name</a>[<a class=\"id\" href=\"#DISK_NAME_LEN\">DISK_NAME_LEN</a>];<span class=\"ts\"/><span class=\"comment\">/* name of major driver */</span>", 
"<span class=\"ts\"/>char *(*<a class=\"id\" href=\"#devnode\">devnode</a>)(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#gd\">gd</a>, <a class=\"id\" href=\"#mode_t\">mode_t</a> *<a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Array of pointers to partitions indexed by partno.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Protected with matching bdev lock but stat and other</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * non-critical accesses use RCU.  Always access through</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * helpers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#disk_part_tbl\">disk_part_tbl</a> *<a class=\"id\" href=\"#part_tbl\">part_tbl</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> <a class=\"id\" href=\"#part0\">part0</a>;", 
"", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#block_device_operations\">block_device_operations</a> *<a class=\"id\" href=\"#fops\">fops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_queue\">request_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#driverfs_dev\">driverfs_dev</a>;  <span class=\"comment\">// FIXME: remove</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#slave_dir\">slave_dir</a>;", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timer_rand_state\">timer_rand_state</a> *<a class=\"id\" href=\"#random\">random</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#sync_io\">sync_io</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RAID */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#work_struct\">work_struct</a> <a class=\"id\" href=\"#async_notify\">async_notify</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a>  <a class=\"id\" href=\"#CONFIG_BLK_DEV_INTEGRITY\">CONFIG_BLK_DEV_INTEGRITY</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#blk_integrity\">blk_integrity</a> *<a class=\"id\" href=\"#integrity\">integrity</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#node_id\">node_id</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#part_to_disk\">part_to_disk</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#part\">part</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#partno\">partno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_to_disk\">dev_to_disk</a>(<a class=\"id\" href=\"#part_to_dev\">part_to_dev</a>(<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#parent\">parent</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev_to_disk\">dev_to_disk</a>(<a class=\"id\" href=\"#part_to_dev\">part_to_dev</a>(<a class=\"id\" href=\"#part\">part</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#disk_max_parts\">disk_max_parts</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#GENHD_FL_EXT_DEVT\">GENHD_FL_EXT_DEVT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#DISK_MAX_PARTS\">DISK_MAX_PARTS</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#minors\">minors</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#disk_partitionable\">disk_partitionable</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disk_max_parts\">disk_max_parts</a>(<a class=\"id\" href=\"#disk\">disk</a>) &gt; 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#disk_devt\">disk_devt</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disk_to_dev\">disk_to_dev</a>(<a class=\"id\" href=\"#disk\">disk</a>)-><a class=\"id\" href=\"#devt\">devt</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#part_devt\">part_devt</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#part_to_dev\">part_to_dev</a>(<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#devt\">devt</a>;", 
"}", 
"", 
"extern struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#disk_get_part\">disk_get_part</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, int <a class=\"id\" href=\"#partno\">partno</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#disk_put_part\">disk_put_part</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#part\">part</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(<a class=\"id\" href=\"#part_to_dev\">part_to_dev</a>(<a class=\"id\" href=\"#part\">part</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Smarter partition iterator without context limits.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DISK_PITER_REVERSE\">DISK_PITER_REVERSE</a><span class=\"ts\"/>(1 << 0) <span class=\"comment\">/* iterate in the reverse direction */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DISK_PITER_INCL_EMPTY\">DISK_PITER_INCL_EMPTY</a><span class=\"ts\"/>(1 << 1) <span class=\"comment\">/* include 0-sized parts */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DISK_PITER_INCL_PART0\">DISK_PITER_INCL_PART0</a><span class=\"ts\"/>(1 << 2) <span class=\"comment\">/* include partition 0 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DISK_PITER_INCL_EMPTY_PART0\">DISK_PITER_INCL_EMPTY_PART0</a> (1 << 3) <span class=\"comment\">/* include empty partition 0 */</span>", 
"", 
"struct <a class=\"id\" href=\"#disk_part_iter\">disk_part_iter</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#part\">part</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idx\">idx</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"extern void <a class=\"id\" href=\"#disk_part_iter_init\">disk_part_iter_init</a>(struct <a class=\"id\" href=\"#disk_part_iter\">disk_part_iter</a> *<a class=\"id\" href=\"#piter\">piter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#disk_part_iter_next\">disk_part_iter_next</a>(struct <a class=\"id\" href=\"#disk_part_iter\">disk_part_iter</a> *<a class=\"id\" href=\"#piter\">piter</a>);", 
"extern void <a class=\"id\" href=\"#disk_part_iter_exit\">disk_part_iter_exit</a>(struct <a class=\"id\" href=\"#disk_part_iter\">disk_part_iter</a> *<a class=\"id\" href=\"#piter\">piter</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#disk_map_sector_rcu\">disk_map_sector_rcu</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#sector\">sector</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Macros to operate on percpu disk statistics:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * {disk|part|all}_stat_{add|sub|inc|dec}() modify the stat counters</span>", 
"<span class=\"comment\"> * and should be called between disk_stat_lock() and</span>", 
"<span class=\"comment\"> * disk_stat_unlock().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * part_stat_read() can be called at any time.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * part_stat_{add|set_all}() and {init|free}_part_stats are for</span>", 
"<span class=\"comment\"> * internal use only.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a><span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_lock\">part_stat_lock</a>()<span class=\"ts\"/>({ <a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>(); <a class=\"id\" href=\"#get_cpu\">get_cpu</a>(); })", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_unlock\">part_stat_unlock</a>()<span class=\"ts\"/>do { <a class=\"id\" href=\"#put_cpu\">put_cpu</a>(); <a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>(); } while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__part_stat_add\">__part_stat_add</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#part\">part</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#addnd\">addnd</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(<a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>((<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#dkstats\">dkstats</a>, (<a class=\"id\" href=\"#cpu\">cpu</a>))-><a class=\"id\" href=\"#field\">field</a> += (<a class=\"id\" href=\"#addnd\">addnd</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_read\">part_stat_read</a>(<a class=\"id\" href=\"#part\">part</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"({<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>((<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#dkstats\">dkstats</a>-><a class=\"id\" href=\"#field\">field</a>) <a class=\"id\" href=\"#res\">res</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#_cpu\">_cpu</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#_cpu\">_cpu</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> += <a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>((<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#dkstats\">dkstats</a>, <a class=\"id\" href=\"#_cpu\">_cpu</a>)-><a class=\"id\" href=\"#field\">field</a>;<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"})", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#part_stat_set_all\">part_stat_set_all</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>, int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#per_cpu_ptr\">per_cpu_ptr</a>(<a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#dkstats\">dkstats</a>, <a class=\"id\" href=\"#i\">i</a>), <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(struct <a class=\"id\" href=\"#disk_stats\">disk_stats</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#init_part_stats\">init_part_stats</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#dkstats\">dkstats</a> = <a class=\"id\" href=\"#alloc_percpu\">alloc_percpu</a>(struct <a class=\"id\" href=\"#disk_stats\">disk_stats</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#dkstats\">dkstats</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#free_part_stats\">free_part_stats</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_percpu\">free_percpu</a>(<a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#dkstats\">dkstats</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_SMP */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_lock\">part_stat_lock</a>()<span class=\"ts\"/>({ <a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>(); 0; })", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_unlock\">part_stat_unlock</a>()<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>()", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__part_stat_add\">__part_stat_add</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#part\">part</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#addnd\">addnd</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>((<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#dkstats\">dkstats</a>.<a class=\"id\" href=\"#field\">field</a> += <a class=\"id\" href=\"#addnd\">addnd</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_read\">part_stat_read</a>(<a class=\"id\" href=\"#part\">part</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#dkstats\">dkstats</a>.<a class=\"id\" href=\"#field\">field</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#part_stat_set_all\">part_stat_set_all</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>, int <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#dkstats\">dkstats</a>, <a class=\"id\" href=\"#value\">value</a>, sizeof(struct <a class=\"id\" href=\"#disk_stats\">disk_stats</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#init_part_stats\">init_part_stats</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#free_part_stats\">free_part_stats</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_add\">part_stat_add</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#part\">part</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#addnd\">addnd</a>)<span class=\"ts\"/>do {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__part_stat_add\">__part_stat_add</a>((<a class=\"id\" href=\"#cpu\">cpu</a>), (<a class=\"id\" href=\"#part\">part</a>), <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#addnd\">addnd</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#partno\">partno</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__part_stat_add\">__part_stat_add</a>((<a class=\"id\" href=\"#cpu\">cpu</a>), &amp;<a class=\"id\" href=\"#part_to_disk\">part_to_disk</a>((<a class=\"id\" href=\"#part\">part</a>))-><a class=\"id\" href=\"#part0\">part0</a>,<span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#addnd\">addnd</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_dec\">part_stat_dec</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#gendiskp\">gendiskp</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#part_stat_add\">part_stat_add</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#gendiskp\">gendiskp</a>, <a class=\"id\" href=\"#field\">field</a>, -1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_inc\">part_stat_inc</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#gendiskp\">gendiskp</a>, <a class=\"id\" href=\"#field\">field</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#part_stat_add\">part_stat_add</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#gendiskp\">gendiskp</a>, <a class=\"id\" href=\"#field\">field</a>, 1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#part_stat_sub\">part_stat_sub</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#gendiskp\">gendiskp</a>, <a class=\"id\" href=\"#field\">field</a>, <a class=\"id\" href=\"#subnd\">subnd</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#part_stat_add\">part_stat_add</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#gendiskp\">gendiskp</a>, <a class=\"id\" href=\"#field\">field</a>, -<a class=\"id\" href=\"#subnd\">subnd</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#part_inc_in_flight\">part_inc_in_flight</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>, int <a class=\"id\" href=\"#rw\">rw</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[<a class=\"id\" href=\"#rw\">rw</a>]++;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#partno\">partno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#part_to_disk\">part_to_disk</a>(<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#part0\">part0</a>.<a class=\"id\" href=\"#in_flight\">in_flight</a>[<a class=\"id\" href=\"#rw\">rw</a>]++;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#part_dec_in_flight\">part_dec_in_flight</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>, int <a class=\"id\" href=\"#rw\">rw</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[<a class=\"id\" href=\"#rw\">rw</a>]--;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#partno\">partno</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#part_to_disk\">part_to_disk</a>(<a class=\"id\" href=\"#part\">part</a>)-><a class=\"id\" href=\"#part0\">part0</a>.<a class=\"id\" href=\"#in_flight\">in_flight</a>[<a class=\"id\" href=\"#rw\">rw</a>]--;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#part_in_flight\">part_in_flight</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[0] + <a class=\"id\" href=\"#part\">part</a>-><a class=\"id\" href=\"#in_flight\">in_flight</a>[1];", 
"}", 
"", 
"<span class=\"comment\">/* block/blk-core.c */</span>", 
"extern void <a class=\"id\" href=\"#part_round_stats\">part_round_stats</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>, struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>);", 
"", 
"<span class=\"comment\">/* block/genhd.c */</span>", 
"extern void <a class=\"id\" href=\"#add_disk\">add_disk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"extern void <a class=\"id\" href=\"#del_gendisk\">del_gendisk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#gp\">gp</a>);", 
"extern void <a class=\"id\" href=\"#unlink_gendisk\">unlink_gendisk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#gp\">gp</a>);", 
"extern struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#get_gendisk\">get_gendisk</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>, int *<a class=\"id\" href=\"#partno\">partno</a>);", 
"extern struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdget_disk\">bdget_disk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, int <a class=\"id\" href=\"#partno\">partno</a>);", 
"", 
"extern void <a class=\"id\" href=\"#set_device_ro\">set_device_ro</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>, int <a class=\"id\" href=\"#flag\">flag</a>);", 
"extern void <a class=\"id\" href=\"#set_disk_ro\">set_disk_ro</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, int <a class=\"id\" href=\"#flag\">flag</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#get_disk_ro\">get_disk_ro</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#part0\">part0</a>.<a class=\"id\" href=\"#policy\">policy</a>;", 
"}", 
"", 
"<span class=\"comment\">/* drivers/char/random.c */</span>", 
"extern void <a class=\"id\" href=\"#add_disk_randomness\">add_disk_randomness</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"extern void <a class=\"id\" href=\"#rand_initialize_disk\">rand_initialize_disk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#get_start_sect\">get_start_sect</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bdev\">bdev</a>-><a class=\"id\" href=\"#bd_part\">bd_part</a>-><a class=\"id\" href=\"#start_sect\">start_sect</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#get_capacity\">get_capacity</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#part0\">part0</a>.<a class=\"id\" href=\"#nr_sects\">nr_sects</a>;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#set_capacity\">set_capacity</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a>-><a class=\"id\" href=\"#part0\">part0</a>.<a class=\"id\" href=\"#nr_sects\">nr_sects</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SOLARIS_X86_PARTITION\">CONFIG_SOLARIS_X86_PARTITION</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOLARIS_X86_NUMSLICE\">SOLARIS_X86_NUMSLICE</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SOLARIS_X86_VTOC_SANE\">SOLARIS_X86_VTOC_SANE</a><span class=\"ts\"/>(0x600DDEEEUL)", 
"", 
"struct <a class=\"id\" href=\"#solaris_x86_slice\">solaris_x86_slice</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#s_tag\">s_tag</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ID tag of partition */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a> <a class=\"id\" href=\"#s_flag\">s_flag</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* permission flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#s_start\">s_start</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* start sector no of partition */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#s_size\">s_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of blocks in partition */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#solaris_x86_vtoc\">solaris_x86_vtoc</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#v_bootinfo\">v_bootinfo</a>[3];<span class=\"ts\"/><span class=\"comment\">/* info needed by mboot (unsupported) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#v_sanity\">v_sanity</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* to verify vtoc sanity */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> <a class=\"id\" href=\"#v_version\">v_version</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* layout version */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#v_volume\">v_volume</a>[8];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* volume name */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#v_sectorsz\">v_sectorsz</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sector size in bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#v_nparts\">v_nparts</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of partitions */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#v_reserved\">v_reserved</a>[10];<span class=\"ts\"/><span class=\"comment\">/* free space */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#solaris_x86_slice\">solaris_x86_slice</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v_slice\">v_slice</a>[<a class=\"id\" href=\"#SOLARIS_X86_NUMSLICE\">SOLARIS_X86_NUMSLICE</a>]; <span class=\"comment\">/* slice headers */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#timestamp\">timestamp</a>[<a class=\"id\" href=\"#SOLARIS_X86_NUMSLICE\">SOLARIS_X86_NUMSLICE</a>]; <span class=\"comment\">/* timestamp (unsupported) */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#v_asciilabel\">v_asciilabel</a>[128];<span class=\"ts\"/><span class=\"comment\">/* for compatibility */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SOLARIS_X86_PARTITION */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BSD_DISKLABEL\">CONFIG_BSD_DISKLABEL</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * BSD disklabel support by Yossi Gottlieb &lt;yogo@math.tau.ac.il&gt;</span>", 
"<span class=\"comment\"> * updated by Marc Espie &lt;Marc.Espie@openbsd.org&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* check against BSD src/sys/sys/disklabel.h for consistency */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_DISKMAGIC\">BSD_DISKMAGIC</a><span class=\"ts\"/>(0x82564557UL)<span class=\"ts\"/><span class=\"comment\">/* The disk magic number */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_MAXPARTITIONS\">BSD_MAXPARTITIONS</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OPENBSD_MAXPARTITIONS\">OPENBSD_MAXPARTITIONS</a><span class=\"ts\"/>16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_FS_UNUSED\">BSD_FS_UNUSED</a><span class=\"ts\"/><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* disklabel unused partition entry ID */</span>", 
"struct <a class=\"id\" href=\"#bsd_disklabel\">bsd_disklabel</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_magic\">d_magic</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the magic number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_type\">d_type</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* drive type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__s16\">__s16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_subtype\">d_subtype</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* controller/d_type specific */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#d_typename\">d_typename</a>[16];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* type name, e.g. \"eagle\" */</span>", 
"<span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#d_packname\">d_packname</a>[16];<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* pack identifier */</span> ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_secsize\">d_secsize</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of bytes per sector */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_nsectors\">d_nsectors</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of data sectors per track */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_ntracks\">d_ntracks</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of tracks per cylinder */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_ncylinders\">d_ncylinders</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of data cylinders per unit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_secpercyl\">d_secpercyl</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of data sectors per cylinder */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_secperunit\">d_secperunit</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of data sectors per unit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_sparespertrack\">d_sparespertrack</a>;<span class=\"ts\"/><span class=\"comment\">/* # of spare sectors per track */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_sparespercyl\">d_sparespercyl</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of spare sectors per cylinder */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_acylinders\">d_acylinders</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of alt. cylinders per unit */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_rpm\">d_rpm</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* rotational speed */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_interleave\">d_interleave</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* hardware sector interleave */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_trackskew\">d_trackskew</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sector 0 skew, per track */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u16\">__u16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_cylskew\">d_cylskew</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sector 0 skew, per cylinder */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_headswitch\">d_headswitch</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* head switch time, usec */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_trkseek\">d_trkseek</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* track-to-track seek, usec */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_flags\">d_flags</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* generic flags */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NDDATA\">NDDATA</a> 5", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_drivedata\">d_drivedata</a>[<a class=\"id\" href=\"#NDDATA\">NDDATA</a>];<span class=\"ts\"/><span class=\"comment\">/* drive-type specific information */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NSPARE\">NSPARE</a> 5", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_spare\">d_spare</a>[<a class=\"id\" href=\"#NSPARE\">NSPARE</a>];<span class=\"ts\"/><span class=\"comment\">/* reserved for future use */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_magic2\">d_magic2</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the magic number (again) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_checksum\">d_checksum</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* xor of data incl. partitions */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* filesystem and partition information: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#d_npartitions\">d_npartitions</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of partitions in following */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_bbsize\">d_bbsize</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* size of boot area at sn0, bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_sbsize\">d_sbsize</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* max size of fs superblock, bytes */</span>", 
"<span class=\"ts\"/>struct<span class=\"ts\"/><a class=\"id\" href=\"#bsd_partition\">bsd_partition</a> {<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the partition table */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#p_size\">p_size</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of sectors in partition */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#p_offset\">p_offset</a>;<span class=\"ts\"/><span class=\"comment\">/* starting sector */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#p_fsize\">p_fsize</a>;<span class=\"ts\"/><span class=\"comment\">/* filesystem basic fragment size */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#p_fstype\">p_fstype</a>;<span class=\"ts\"/><span class=\"comment\">/* filesystem type, see below */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#p_frag\">p_frag</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* filesystem fragments per block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#p_cpg\">p_cpg</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* filesystem cylinders per group */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#d_partitions\">d_partitions</a>[<a class=\"id\" href=\"#BSD_MAXPARTITIONS\">BSD_MAXPARTITIONS</a>];<span class=\"ts\"/><span class=\"comment\">/* actually may be more */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* CONFIG_BSD_DISKLABEL */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_UNIXWARE_DISKLABEL\">CONFIG_UNIXWARE_DISKLABEL</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Unixware slices support by Andrzej Krzysztofowicz &lt;ankry@mif.pg.gda.pl&gt;</span>", 
"<span class=\"comment\"> * and Krzysztof G. Baranowski &lt;kgb@knm.org.pl&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UNIXWARE_DISKMAGIC\">UNIXWARE_DISKMAGIC</a>     (0xCA5E600DUL)<span class=\"ts\"/><span class=\"comment\">/* The disk magic number */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UNIXWARE_DISKMAGIC2\">UNIXWARE_DISKMAGIC2</a>    (0x600DDEEEUL)<span class=\"ts\"/><span class=\"comment\">/* The slice table magic nr */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UNIXWARE_NUMSLICE\">UNIXWARE_NUMSLICE</a>      16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UNIXWARE_FS_UNUSED\">UNIXWARE_FS_UNUSED</a>     0<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Unused slice entry ID */</span>", 
"", 
"struct <a class=\"id\" href=\"#unixware_slice\">unixware_slice</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>   <a class=\"id\" href=\"#s_label\">s_label</a>;<span class=\"ts\"/><span class=\"comment\">/* label */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a>   <a class=\"id\" href=\"#s_flags\">s_flags</a>;<span class=\"ts\"/><span class=\"comment\">/* permission flags */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#start_sect\">start_sect</a>;<span class=\"ts\"/><span class=\"comment\">/* starting sector */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#nr_sects\">nr_sects</a>;<span class=\"ts\"/><span class=\"comment\">/* number of sectors in slice */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#unixware_disklabel\">unixware_disklabel</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_type\">d_type</a>;               <span class=\"ts\"/><span class=\"comment\">/* drive type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_magic\">d_magic</a>;                <span class=\"comment\">/* the magic number */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_version\">d_version</a>;              <span class=\"comment\">/* version number */</span>", 
"<span class=\"ts\"/>char    <a class=\"id\" href=\"#d_serial\">d_serial</a>[12];           <span class=\"comment\">/* serial number of the device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_ncylinders\">d_ncylinders</a>;           <span class=\"comment\">/* # of data cylinders per device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_ntracks\">d_ntracks</a>;              <span class=\"comment\">/* # of tracks per cylinder */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_nsectors\">d_nsectors</a>;             <span class=\"comment\">/* # of data sectors per track */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_secsize\">d_secsize</a>;              <span class=\"comment\">/* # of bytes per sector */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_part_start\">d_part_start</a>;           <span class=\"comment\">/* # of first sector of this partition */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_unknown1\">d_unknown1</a>[12];         <span class=\"comment\">/* ? */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_alt_tbl\">d_alt_tbl</a>;              <span class=\"comment\">/* byte offset of alternate table */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_alt_len\">d_alt_len</a>;              <span class=\"comment\">/* byte length of alternate table */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_phys_cyl\">d_phys_cyl</a>;             <span class=\"comment\">/* # of physical cylinders per device */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_phys_trk\">d_phys_trk</a>;             <span class=\"comment\">/* # of physical tracks per cylinder */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_phys_sec\">d_phys_sec</a>;             <span class=\"comment\">/* # of physical sectors per track */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_phys_bytes\">d_phys_bytes</a>;           <span class=\"comment\">/* # of physical bytes per sector */</span>", 
" <span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_unknown2\">d_unknown2</a>;             <span class=\"comment\">/* ? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a>   <a class=\"id\" href=\"#d_unknown3\">d_unknown3</a>;             <span class=\"comment\">/* ? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#d_pad\">d_pad</a>[8];               <span class=\"comment\">/* pad */</span>", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#unixware_vtoc\">unixware_vtoc</a> {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#v_magic\">v_magic</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* the magic number */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#v_version\">v_version</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* version number */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>char<span class=\"ts\"/><a class=\"id\" href=\"#v_name\">v_name</a>[8];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* volume name */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#v_nslices\">v_nslices</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* # of slices */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le16\">__le16</a><span class=\"ts\"/><a class=\"id\" href=\"#v_unknown1\">v_unknown1</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a><span class=\"ts\"/><a class=\"id\" href=\"#v_reserved\">v_reserved</a>[10];<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reserved */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#unixware_slice\">unixware_slice</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v_slice\">v_slice</a>[<a class=\"id\" href=\"#UNIXWARE_NUMSLICE\">UNIXWARE_NUMSLICE</a>];<span class=\"ts\"/><span class=\"comment\">/* slice headers */</span>", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#vtoc\">vtoc</a>;", 
"", 
"};  <span class=\"comment\">/* 408 */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_UNIXWARE_DISKLABEL */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MINIX_SUBPARTITION\">CONFIG_MINIX_SUBPARTITION</a>", 
"#   <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MINIX_NR_SUBPARTITIONS\">MINIX_NR_SUBPARTITIONS</a>  4", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MINIX_SUBPARTITION */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADDPART_FLAG_NONE\">ADDPART_FLAG_NONE</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADDPART_FLAG_RAID\">ADDPART_FLAG_RAID</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ADDPART_FLAG_WHOLEDISK\">ADDPART_FLAG_WHOLEDISK</a><span class=\"ts\"/>2", 
"", 
"extern int <a class=\"id\" href=\"#blk_alloc_devt\">blk_alloc_devt</a>(struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> *<a class=\"id\" href=\"#part\">part</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> *<a class=\"id\" href=\"#devt\">devt</a>);", 
"extern void <a class=\"id\" href=\"#blk_free_devt\">blk_free_devt</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a>);", 
"extern <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#blk_lookup_devt\">blk_lookup_devt</a>(const char *<a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#partno\">partno</a>);", 
"extern char *<a class=\"id\" href=\"#disk_name\">disk_name</a> (struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#hd\">hd</a>, int <a class=\"id\" href=\"#partno\">partno</a>, char *<a class=\"id\" href=\"#buf\">buf</a>);", 
"", 
"extern int <a class=\"id\" href=\"#disk_expand_part_tbl\">disk_expand_part_tbl</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, int <a class=\"id\" href=\"#target\">target</a>);", 
"extern int <a class=\"id\" href=\"#rescan_partitions\">rescan_partitions</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>, struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>);", 
"extern struct <a class=\"id\" href=\"#hd_struct\">hd_struct</a> * <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#add_partition\">add_partition</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#partno\">partno</a>, <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#flags\">flags</a>);", 
"extern void <a class=\"id\" href=\"#delete_partition\">delete_partition</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *, int);", 
"extern void <a class=\"id\" href=\"#printk_all_partitions\">printk_all_partitions</a>(void);", 
"", 
"extern struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#alloc_disk_node\">alloc_disk_node</a>(int <a class=\"id\" href=\"#minors\">minors</a>, int <a class=\"id\" href=\"#node_id\">node_id</a>);", 
"extern struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#alloc_disk\">alloc_disk</a>(int <a class=\"id\" href=\"#minors\">minors</a>);", 
"extern struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#get_disk\">get_disk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"extern void <a class=\"id\" href=\"#put_disk\">put_disk</a>(struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>);", 
"extern void <a class=\"id\" href=\"#blk_register_region\">blk_register_region</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a>, unsigned long <a class=\"id\" href=\"#range\">range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#kobject\">kobject</a> *(*<a class=\"id\" href=\"#probe\">probe</a>)(<a class=\"id\" href=\"#dev_t\">dev_t</a>, int *, void *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int (*<a class=\"id\" href=\"#lock\">lock</a>)(<a class=\"id\" href=\"#dev_t\">dev_t</a>, void *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#data\">data</a>);", 
"extern void <a class=\"id\" href=\"#blk_unregister_region\">blk_unregister_region</a>(<a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a>, unsigned long <a class=\"id\" href=\"#range\">range</a>);", 
"", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#part_size_show\">part_size_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#part_stat_show\">part_stat_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#part_inflight_show\">part_inflight_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FAIL_MAKE_REQUEST\">CONFIG_FAIL_MAKE_REQUEST</a>", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#part_fail_show\">part_fail_show</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>);", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#part_fail_store\">part_fail_store</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#device_attribute\">device_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_FAIL_MAKE_REQUEST */</span>", 
"", 
"#else <span class=\"comment\">/* CONFIG_BLOCK */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#printk_all_partitions\">printk_all_partitions</a>(void) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#blk_lookup_devt\">blk_lookup_devt</a>(const char *<a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#partno\">partno</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#devt\">devt</a> = <a class=\"id\" href=\"#MKDEV\">MKDEV</a>(0, 0);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#devt\">devt</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_BLOCK */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_GENHD_H */</span>", 
];
xr_frag_insert('l/31/77398fe629ef82c607dae25427dd1f633b4c56.xr', __xr_tmp);
