var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/attr.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> *  changes by Thomas Schoebel-Theuer</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fsnotify\">fsnotify</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * inode_change_ok - check if attribute changes to an inode are allowed</span>", 
"<span class=\"comment\"> * @inode:<span class=\"ts\"/>inode to check</span>", 
"<span class=\"comment\"> * @attr:<span class=\"ts\"/>attributes to change</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check if we are allowed to change the attributes contained in @attr</span>", 
"<span class=\"comment\"> * in the given inode.  This includes the normal unix access permission</span>", 
"<span class=\"comment\"> * checks, as well as checks for rlimits and others.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Should be called as the first thing in -&gt;setattr implementations,</span>", 
"<span class=\"comment\"> * possibly after taking additional locks.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inode_change_ok\">inode_change_ok</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ia_valid\">ia_valid</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First check size constraints.  These can't be overriden using</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ATTR_FORCE.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_SIZE\">ATTR_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_newsize_ok\">inode_newsize_ok</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_size\">ia_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If force is set do it anyway. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_FORCE\">ATTR_FORCE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure a caller can chown. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_UID\">ATTR_UID</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>() != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> ||", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_uid\">ia_uid</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>) && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_CHOWN\">CAP_CHOWN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure caller can chgrp. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_GID\">ATTR_GID</a>) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>() != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> ||", 
"<span class=\"ts\"/>    (!<a class=\"id\" href=\"#in_group_p\">in_group_p</a>(<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_gid\">ia_gid</a>) && <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_gid\">ia_gid</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>)) &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_CHOWN\">CAP_CHOWN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure a caller can chmod. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_owner_or_cap\">is_owner_or_cap</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Also check the setgid bit! */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_group_p\">in_group_p</a>((<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_GID\">ATTR_GID</a>) ? <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_gid\">ia_gid</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>) && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_FSETID\">CAP_FSETID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_mode\">ia_mode</a> &= ~<a class=\"id\" href=\"#S_ISGID\">S_ISGID</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for setting the inode time. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; (<a class=\"id\" href=\"#ATTR_MTIME_SET\">ATTR_MTIME_SET</a> | <a class=\"id\" href=\"#ATTR_ATIME_SET\">ATTR_ATIME_SET</a> | <a class=\"id\" href=\"#ATTR_TIMES_SET\">ATTR_TIMES_SET</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_owner_or_cap\">is_owner_or_cap</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inode_change_ok\">inode_change_ok</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * inode_newsize_ok - may this inode be truncated to a given size</span>", 
"<span class=\"comment\"> * @inode:<span class=\"ts\"/>the inode to be truncated</span>", 
"<span class=\"comment\"> * @offset:<span class=\"ts\"/>the new size to assign to the inode</span>", 
"<span class=\"comment\"> * @Returns:<span class=\"ts\"/>0 on success, -ve errno on failure</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * inode_newsize_ok must be called with i_mutex held.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * inode_newsize_ok will check filesystem limits and ulimits to check that the</span>", 
"<span class=\"comment\"> * new inode size is within limits. inode_newsize_ok will also send SIGXFSZ</span>", 
"<span class=\"comment\"> * when necessary. Caller must not proceed with inode size change if failure is</span>", 
"<span class=\"comment\"> * returned. @inode must be a file (not directory), with appropriate</span>", 
"<span class=\"comment\"> * permissions to allow truncate (inode_newsize_ok does NOT check these</span>", 
"<span class=\"comment\"> * conditions).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inode_newsize_ok\">inode_newsize_ok</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> &lt; <a class=\"id\" href=\"#offset\">offset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#limit\">limit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = <a class=\"id\" href=\"#rlimit\">rlimit</a>(<a class=\"id\" href=\"#RLIMIT_FSIZE\">RLIMIT_FSIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#limit\">limit</a> != <a class=\"id\" href=\"#RLIM_INFINITY\">RLIM_INFINITY</a> && <a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#limit\">limit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_sig\">out_sig</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_big\">out_big</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * truncation of in-use swapfiles is disallowed - it would</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * cause subsequent swapout to scribble on the now-freed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SWAPFILE\">IS_SWAPFILE</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ETXTBSY\">ETXTBSY</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#out_sig\">out_sig</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#send_sig\">send_sig</a>(<a class=\"id\" href=\"#SIGXFSZ\">SIGXFSZ</a>, <a class=\"id\" href=\"#current\">current</a>, 0);", 
"<a class=\"id\" href=\"#out_big\">out_big</a>:", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inode_newsize_ok\">inode_newsize_ok</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * setattr_copy - copy simple metadata updates into the generic inode</span>", 
"<span class=\"comment\"> * @inode:<span class=\"ts\"/>the inode to be updated</span>", 
"<span class=\"comment\"> * @attr:<span class=\"ts\"/>the new attributes</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * setattr_copy must be called with i_mutex held.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * setattr_copy updates the inode's metadata with that specified</span>", 
"<span class=\"comment\"> * in attr. Noticably missing is inode size update, which is more complex</span>", 
"<span class=\"comment\"> * as it requires pagecache updates.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The inode is not marked as dirty after this operation. The rationale is</span>", 
"<span class=\"comment\"> * that for \"simple\" filesystems, the struct inode is the inode storage.</span>", 
"<span class=\"comment\"> * The caller is free to mark the inode dirty afterwards if needed.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#setattr_copy\">setattr_copy</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, const struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ia_valid\">ia_valid</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_UID\">ATTR_UID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_uid\">ia_uid</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_GID\">ATTR_GID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_gid\">ia_gid</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_ATIME\">ATTR_ATIME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#timespec_trunc\">timespec_trunc</a>(<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_atime\">ia_atime</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MTIME\">ATTR_MTIME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#timespec_trunc\">timespec_trunc</a>(<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_mtime\">ia_mtime</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_CTIME\">ATTR_CTIME</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#timespec_trunc\">timespec_trunc</a>(<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_ctime\">ia_ctime</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_time_gran\">s_time_gran</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#umode_t\">umode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_mode\">ia_mode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_group_p\">in_group_p</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>) && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_FSETID\">CAP_FSETID</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= ~<a class=\"id\" href=\"#S_ISGID\">S_ISGID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> = <a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#setattr_copy\">setattr_copy</a>);", 
"", 
"int <a class=\"id\" href=\"#notify_change\">notify_change</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> * <a class=\"id\" href=\"#attr\">attr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ia_valid\">ia_valid</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; (<a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a> | <a class=\"id\" href=\"#ATTR_UID\">ATTR_UID</a> | <a class=\"id\" href=\"#ATTR_GID\">ATTR_GID</a> | <a class=\"id\" href=\"#ATTR_TIMES_SET\">ATTR_TIMES_SET</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_IMMUTABLE\">IS_IMMUTABLE</a>(<a class=\"id\" href=\"#inode\">inode</a>) || <a class=\"id\" href=\"#IS_APPEND\">IS_APPEND</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#current_fs_time\">current_fs_time</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_ctime\">ia_ctime</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_ATIME_SET\">ATTR_ATIME_SET</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_atime\">ia_atime</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MTIME_SET\">ATTR_MTIME_SET</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_mtime\">ia_mtime</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_KILL_PRIV\">ATTR_KILL_PRIV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &= ~<a class=\"id\" href=\"#ATTR_KILL_PRIV\">ATTR_KILL_PRIV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &= ~<a class=\"id\" href=\"#ATTR_KILL_PRIV\">ATTR_KILL_PRIV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_need_killpriv\">security_inode_need_killpriv</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_killpriv\">security_inode_killpriv</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We now pass ATTR_KILL_S*ID to the lower level setattr function so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that the function has the ability to reinterpret a mode change</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that's due to these bits. This adds an implicit restriction that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * no function will ever call notify_change with both ATTR_MODE and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ATTR_KILL_S*ID set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; (<a class=\"id\" href=\"#ATTR_KILL_SUID\">ATTR_KILL_SUID</a>|<a class=\"id\" href=\"#ATTR_KILL_SGID\">ATTR_KILL_SGID</a>)) &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_KILL_SUID\">ATTR_KILL_SUID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_ISUID\">S_ISUID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ia_valid\">ia_valid</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> |= <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_mode\">ia_mode</a> = (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &amp; ~<a class=\"id\" href=\"#S_ISUID\">S_ISUID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_KILL_SGID\">ATTR_KILL_SGID</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#mode\">mode</a> &amp; (<a class=\"id\" href=\"#S_ISGID\">S_ISGID</a> | <a class=\"id\" href=\"#S_IXGRP\">S_IXGRP</a>)) == (<a class=\"id\" href=\"#S_ISGID\">S_ISGID</a> | <a class=\"id\" href=\"#S_IXGRP\">S_IXGRP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ia_valid\">ia_valid</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> |= <a class=\"id\" href=\"#ATTR_MODE\">ATTR_MODE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_mode\">ia_mode</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_mode\">ia_mode</a> &= ~<a class=\"id\" href=\"#S_ISGID\">S_ISGID</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; ~(<a class=\"id\" href=\"#ATTR_KILL_SUID\">ATTR_KILL_SUID</a> | <a class=\"id\" href=\"#ATTR_KILL_SGID\">ATTR_KILL_SGID</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_setattr\">security_inode_setattr</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_SIZE\">ATTR_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_alloc_sem\">i_alloc_sem</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#setattr\">setattr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#setattr\">setattr</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#simple_setattr\">simple_setattr</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#attr\">attr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_SIZE\">ATTR_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_alloc_sem\">i_alloc_sem</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_change\">fsnotify_change</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#ia_valid\">ia_valid</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#notify_change\">notify_change</a>);", 
];
xr_frag_insert('l/31/9d122eab694a66679ae372814a9fb3f1720154.xr', __xr_tmp);
