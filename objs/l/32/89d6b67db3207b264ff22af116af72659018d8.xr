var __xr_tmp = [
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_ofo_queue\">tcp_ofo_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#dsack_high\">dsack_high</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>)) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#dsack_high\">dsack_high</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#dsack\">dsack</a> = <a class=\"id\" href=\"#dsack_high\">dsack_high</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#dsack_high\">dsack_high</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dsack_high\">dsack_high</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_dsack_extend\">tcp_dsack_extend</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#dsack\">dsack</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, \"ofo packet was already received\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_unlink\">__skb_unlink</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, \"ofo requeuing : rcv_next %X seq %X - %X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_unlink\">__skb_unlink</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fin\">fin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_fin\">tcp_fin</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_prune_ofo_queue\">tcp_prune_ofo_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"static int <a class=\"id\" href=\"#tcp_prune_queue\">tcp_prune_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_try_rmem_schedule\">tcp_try_rmem_schedule</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, unsigned int <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#sk_rmem_schedule\">sk_rmem_schedule</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#size\">size</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_prune_queue\">tcp_prune_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk_rmem_schedule\">sk_rmem_schedule</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#size\">size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_prune_ofo_queue\">tcp_prune_ofo_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk_rmem_schedule\">sk_rmem_schedule</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_data_queue\">tcp_data_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a> = <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#eaten\">eaten</a> = -1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_drop\">skb_dst_drop</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_pull\">__skb_pull</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> * 4);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_accept_cwr\">TCP_ECN_accept_cwr</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#dsack\">dsack</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*  Queue data for delivery to the user.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  Packets in sequence go to the receive queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  Out of sequence packets to the out_of_order_queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_receive_window\">tcp_receive_window</a>(<a class=\"id\" href=\"#tp\">tp</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_of_window\">out_of_window</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Ok. In sequence. In window. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#task\">task</a> == <a class=\"id\" href=\"#current\">current</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>) && !<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#chunk\">chunk</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(unsigned int, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_copy_datagram_iovec\">skb_copy_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, 0, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#chunk\">chunk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> += <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eaten\">eaten</a> = (<a class=\"id\" href=\"#chunk\">chunk</a> == <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> && !<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#fin\">fin</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_rcv_space_adjust\">tcp_rcv_space_adjust</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eaten\">eaten</a> <= 0) {", 
"<a class=\"id\" href=\"#queue_and_out\">queue_and_out</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eaten\">eaten</a> &lt; 0 &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_try_rmem_schedule\">tcp_try_rmem_schedule</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_event_data_recv\">tcp_event_data_recv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#fin\">fin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_fin\">tcp_fin</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#th\">th</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_ofo_queue\">tcp_ofo_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RFC2581. 4.2. SHOULD send immediate ACK, when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * gap in queue is filled.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#pingpong\">pingpong</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#num_sacks\">num_sacks</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sack_remove\">tcp_sack_remove</a>(<a class=\"id\" href=\"#tp\">tp</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_fast_path_check\">tcp_fast_path_check</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#eaten\">eaten</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* A retransmit, 2nd most common case.  Force an immediate ack. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_DELAYEDACKLOST\">LINUX_MIB_DELAYEDACKLOST</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_dsack_set\">tcp_dsack_set</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"", 
"<a class=\"id\" href=\"#out_of_window\">out_of_window</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_quickack_mode\">tcp_enter_quickack_mode</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_schedule_ack\">inet_csk_schedule_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<a class=\"id\" href=\"#drop\">drop</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Out of window. F.e. zero window probe. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> + <a class=\"id\" href=\"#tcp_receive_window\">tcp_receive_window</a>(<a class=\"id\" href=\"#tp\">tp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_of_window\">out_of_window</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_enter_quickack_mode\">tcp_enter_quickack_mode</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Partial packet, seq &lt; rcv_next &lt; end_seq */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, \"partial packet: rcv_next %X seq %X - %X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_dsack_set\">tcp_dsack_set</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If window is closed, drop tail of packet. But after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * remembering D-SACK for its head made in previous line.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_receive_window\">tcp_receive_window</a>(<a class=\"id\" href=\"#tp\">tp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_of_window\">out_of_window</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#queue_and_out\">queue_and_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#TCP_ECN_check_ce\">TCP_ECN_check_ce</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_try_rmem_schedule\">tcp_try_rmem_schedule</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#drop\">drop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable header prediction. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_csk_schedule_ack\">inet_csk_schedule_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, \"out of order segment: rcv_next %X seq %X - %X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Initial out of order segment, build 1 SACK. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_sack\">tcp_is_sack</a>(<a class=\"id\" href=\"#tp\">tp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#num_sacks\">num_sacks</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#selective_acks\">selective_acks</a>[0].<a class=\"id\" href=\"#start_seq\">start_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#selective_acks\">selective_acks</a>[0].<a class=\"id\" href=\"#end_seq\">end_seq</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_head\">__skb_queue_head</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb1\">skb1</a> = <a class=\"id\" href=\"#skb_peek_tail\">skb_peek_tail</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#seq\">seq</a> == <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_after\">__skb_queue_after</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb1\">skb1</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#num_sacks\">num_sacks</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#selective_acks\">selective_acks</a>[0].<a class=\"id\" href=\"#end_seq\">end_seq</a> != <a class=\"id\" href=\"#seq\">seq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_sack\">add_sack</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Common case: data arrive in order after hole. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#selective_acks\">selective_acks</a>[0].<a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find place to insert this segment. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#seq\">seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_is_first\">skb_queue_is_first</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb1\">skb1</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb1\">skb1</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb1\">skb1</a> = <a class=\"id\" href=\"#skb_queue_prev\">skb_queue_prev</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb1\">skb1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do skb overlap to previous one? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb1\">skb1</a> && <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All the bits are present. Drop. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_dsack_set\">tcp_dsack_set</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#add_sack\">add_sack</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#seq\">seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Partial overlap. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_dsack_set\">tcp_dsack_set</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_queue_is_first\">skb_queue_is_first</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#skb1\">skb1</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb1\">skb1</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb1\">skb1</a> = <a class=\"id\" href=\"#skb_queue_prev\">skb_queue_prev</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb1\">skb1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb1\">skb1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_head\">__skb_queue_head</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_after\">__skb_queue_after</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb1\">skb1</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* And clean segments covered by new one as whole. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#skb_queue_is_last\">skb_queue_is_last</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb1\">skb1</a> = <a class=\"id\" href=\"#skb_queue_next\">skb_queue_next</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#seq\">seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_dsack_extend\">tcp_dsack_extend</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_unlink\">__skb_unlink</a>(<a class=\"id\" href=\"#skb1\">skb1</a>, &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_dsack_extend\">tcp_dsack_extend</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb1\">skb1</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb1\">skb1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#add_sack\">add_sack</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_is_sack\">tcp_is_sack</a>(<a class=\"id\" href=\"#tp\">tp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sack_new_ofo_skb\">tcp_sack_new_ofo_skb</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#end_seq\">end_seq</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#tcp_collapse_one\">tcp_collapse_one</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#list\">list</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_is_last\">skb_queue_is_last</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#skb_queue_next\">skb_queue_next</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_unlink\">__skb_unlink</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_TCPRCVCOLLAPSED\">LINUX_MIB_TCPRCVCOLLAPSED</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#next\">next</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Collapse contiguous sequence of skbs head..tail with</span>", 
"<span class=\"comment\"> * sequence numbers start..end.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * If tail is NULL, this means until the end of the list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Segments with FIN/SYN are not collapsed (only because this</span>", 
"<span class=\"comment\"> * simplifies code)</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#tcp_collapse\">tcp_collapse</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#list\">list</a>,", 
"<span class=\"ts\"/>     struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#head\">head</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#tail\">tail</a>,", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#end_of_skbs\">end_of_skbs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First, check that queue is collapsible and find</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the point where collapsing can be useful. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#head\">head</a>;", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end_of_skbs\">end_of_skbs</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_queue_walk_from_safe\">skb_queue_walk_from_safe</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#n\">n</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#tail\">tail</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No new bits? It is possible on ofo queue. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_collapse_one\">tcp_collapse_one</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The first skb to collapse is:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - not SYN/FIN and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * - bloated or contains data before \"start\" or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   overlaps to the next one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#syn\">syn</a> && !<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fin\">fin</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#tcp_win_from_space\">tcp_win_from_space</a>(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>) &gt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#start\">start</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_of_skbs\">end_of_skbs</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_is_last\">skb_queue_is_last</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#skb_queue_next\">skb_queue_next</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a> != <a class=\"id\" href=\"#tail\">tail</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> != <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#next\">next</a>)-><a class=\"id\" href=\"#seq\">seq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end_of_skbs\">end_of_skbs</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Decided to skip this, advance start seq. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_of_skbs\">end_of_skbs</a> || <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#syn\">syn</a> || <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fin\">fin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#nskb\">nskb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#skb_headroom\">skb_headroom</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#SKB_MAX_ORDER\">SKB_MAX_ORDER</a>(<a class=\"id\" href=\"#header\">header</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Too big header? This can happen with IPv6. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy\">copy</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a> &lt; <a class=\"id\" href=\"#copy\">copy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nskb\">nskb</a> = <a class=\"id\" href=\"#alloc_skb\">alloc_skb</a>(<a class=\"id\" href=\"#copy\">copy</a> + <a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#nskb\">nskb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_mac_header\">skb_set_mac_header</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, <a class=\"id\" href=\"#skb_mac_header\">skb_mac_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) - <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_network_header\">skb_set_network_header</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, (<a class=\"id\" href=\"#skb_network_header\">skb_network_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_transport_header\">skb_set_transport_header</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, (<a class=\"id\" href=\"#skb_transport_header\">skb_transport_header</a>(<a class=\"id\" href=\"#skb\">skb</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_reserve\">skb_reserve</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, <a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#nskb\">nskb</a>-><a class=\"id\" href=\"#cb\">cb</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#cb\">cb</a>, sizeof(<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#cb\">cb</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#seq\">seq</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> = <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_before\">__skb_queue_before</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#nskb\">nskb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Copy data, releasing collapsed skbs. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#copy\">copy</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#start\">start</a> - <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> - <a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#offset\">offset</a> &lt; 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#copy\">copy</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_copy_bits\">skb_copy_bits</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#skb_put\">skb_put</a>(<a class=\"id\" href=\"#nskb\">nskb</a>, <a class=\"id\" href=\"#size\">size</a>), <a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#nskb\">nskb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copy\">copy</a> -= <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#tcp_collapse_one\">tcp_collapse_one</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#tail\">tail</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#syn\">syn</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#fin\">fin</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Collapse ofo queue. Algorithm: select contiguous sequence of skbs</span>", 
"<span class=\"comment\"> * and tcp_collapse() them until all the queue is collapsed.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_collapse_ofo_queue\">tcp_collapse_ofo_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_is_last\">skb_queue_is_last</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#skb_queue_next\">skb_queue_next</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Segment is terminated when we see gap or when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we are at the end of all the queue. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#end\">end</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#start\">start</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_collapse\">tcp_collapse</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#head\">head</a>, <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#skb\">skb</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb\">skb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Start new segment */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#start\">start</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>, <a class=\"id\" href=\"#end\">end</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Purge the out-of-order queue.</span>", 
"<span class=\"comment\"> * Return true if queue was pruned.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_prune_ofo_queue\">tcp_prune_ofo_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_OFOPRUNED\">LINUX_MIB_OFOPRUNED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reset SACK state.  A conforming SACK implementation will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * do the same at a timeout based retransmit.  When a connection</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is in a sad state like this, we care only about integrity</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of the connection not performance.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#sack_ok\">sack_ok</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_sack_reset\">tcp_sack_reset</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_reclaim\">sk_mem_reclaim</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Reduce allocated memory if we can, trying to get</span>", 
"<span class=\"comment\"> * the socket within its memory limits again.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return less than zero if we should start dropping frames</span>", 
"<span class=\"comment\"> * until the socket owning process reads some of the data</span>", 
"<span class=\"comment\"> * to stabilize the situation.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_prune_queue\">tcp_prune_queue</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SOCK_DEBUG\">SOCK_DEBUG</a>(<a class=\"id\" href=\"#sk\">sk</a>, \"prune_queue: c=%x\\n\", <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_PRUNECALLED\">LINUX_MIB_PRUNECALLED</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) >= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_clamp_window\">tcp_clamp_window</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#tcp_memory_pressure\">tcp_memory_pressure</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_ssthresh\">rcv_ssthresh</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_ssthresh\">rcv_ssthresh</a>, 4U * <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#advmss\">advmss</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_collapse_ofo_queue\">tcp_collapse_ofo_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#skb_queue_empty\">skb_queue_empty</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_collapse\">tcp_collapse</a>(<a class=\"id\" href=\"#sk\">sk</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_reclaim\">sk_mem_reclaim</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) <= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Collapsing did not help, destructive actions follow.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This must not ever occur. */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_prune_ofo_queue\">tcp_prune_ofo_queue</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) <= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are really being abused, tell the caller to silently</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * drop receive data on the floor.  It will get retransmitted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and hopefully then we'll have sufficient space.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_RCVPRUNED\">LINUX_MIB_RCVPRUNED</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Massive buffer overcommit. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> = 0;", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"<span class=\"comment\">/* RFC2861, slow part. Adjust cwnd, after it was not full during one rto.</span>", 
"<span class=\"comment\"> * As additional protections, we do not touch cwnd in retransmission phases,</span>", 
"<span class=\"comment\"> * and if application hit its sndbuf limit recently.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#tcp_cwnd_application_limited\">tcp_cwnd_application_limited</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ca_state\">icsk_ca_state</a> == <a class=\"id\" href=\"#TCP_CA_Open\">TCP_CA_Open</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a> && !<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#SOCK_NOSPACE\">SOCK_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Limited by application or receiver window. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#init_win\">init_win</a> = <a class=\"id\" href=\"#tcp_init_cwnd\">tcp_init_cwnd</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#win_used\">win_used</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_used\">snd_cwnd_used</a>, <a class=\"id\" href=\"#init_win\">init_win</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#win_used\">win_used</a> &lt; <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_ssthresh\">snd_ssthresh</a> = <a class=\"id\" href=\"#tcp_current_ssthresh\">tcp_current_ssthresh</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> = (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a> + <a class=\"id\" href=\"#win_used\">win_used</a>) >> 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_used\">snd_cwnd_used</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_stamp\">snd_cwnd_stamp</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_should_expand_sndbuf\">tcp_should_expand_sndbuf</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the user specified a specific send buffer setting, do</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not modify it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> &amp; <a class=\"id\" href=\"#SOCK_SNDBUF_LOCK\">SOCK_SNDBUF_LOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are under global TCP memory pressure, do not expand.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_memory_pressure\">tcp_memory_pressure</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are under soft global TCP memory pressure, do not expand.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#tcp_memory_allocated\">tcp_memory_allocated</a>) >= <a class=\"id\" href=\"#sysctl_tcp_mem\">sysctl_tcp_mem</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we filled the congestion window, do not expand.  */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#packets_out\">packets_out</a> >= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* When incoming ACK allowed to free some skb from write_queue,</span>", 
"<span class=\"comment\"> * we remember this event in flag SOCK_QUEUE_SHRUNK and wake up socket</span>", 
"<span class=\"comment\"> * on the exit from tcp input handler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PROBLEM: sndbuf expansion does not work well with largesend.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#tcp_new_space\">tcp_new_space</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_should_expand_sndbuf\">tcp_should_expand_sndbuf</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#sndmem\">sndmem</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#mss_clamp\">mss_clamp</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#mss_cache\">mss_cache</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MAX_TCP_HEADER\">MAX_TCP_HEADER</a> + 16 + sizeof(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#demanded\">demanded</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(unsigned int, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd\">snd_cwnd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#reordering\">reordering</a> + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sndmem\">sndmem</a> *= 2 * <a class=\"id\" href=\"#demanded\">demanded</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sndmem\">sndmem</a> &gt; <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#sndmem\">sndmem</a>, <a class=\"id\" href=\"#sysctl_tcp_wmem\">sysctl_tcp_wmem</a>[2]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#snd_cwnd_stamp\">snd_cwnd_stamp</a> = <a class=\"id\" href=\"#tcp_time_stamp\">tcp_time_stamp</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_space\">sk_write_space</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#tcp_check_space\">tcp_check_space</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_QUEUE_SHRUNK\">SOCK_QUEUE_SHRUNK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_QUEUE_SHRUNK\">SOCK_QUEUE_SHRUNK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#SOCK_NOSPACE\">SOCK_NOSPACE</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_socket\">sk_socket</a>-><a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_new_space\">tcp_new_space</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_data_snd_check\">tcp_data_snd_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_push_pending_frames\">tcp_push_pending_frames</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tcp_check_space\">tcp_check_space</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check if sending an ack is needed.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__tcp_ack_snd_check\">__tcp_ack_snd_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#ofo_possible\">ofo_possible</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>    <span class=\"comment\">/* More than one full frame received... */</span>", 
"<span class=\"ts\"/>if (((<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a> - <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wup\">rcv_wup</a>) &gt; <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#icsk_ack\">icsk_ack</a>.<a class=\"id\" href=\"#rcv_mss\">rcv_mss</a> &&", 
"<span class=\"ts\"/>     <span class=\"comment\">/* ... and right edge of window advances far enough.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>      * (tcp_recvmsg() will send ACK otherwise). Or...</span>", 
"<span class=\"comment\"><span class=\"ts\"/>      */</span>", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#__tcp_select_window\">__tcp_select_window</a>(<a class=\"id\" href=\"#sk\">sk</a>) >= <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>) ||", 
"<span class=\"ts\"/>    <span class=\"comment\">/* We ACK each frame or... */</span>", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_in_quickack_mode\">tcp_in_quickack_mode</a>(<a class=\"id\" href=\"#sk\">sk</a>) ||", 
"<span class=\"ts\"/>    <span class=\"comment\">/* We have out of order data. */</span>", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ofo_possible\">ofo_possible</a> && <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#out_of_order_queue\">out_of_order_queue</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Then ack it now */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_send_ack\">tcp_send_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Else, send delayed ack. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_send_delayed_ack\">tcp_send_delayed_ack</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#tcp_ack_snd_check\">tcp_ack_snd_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_csk_ack_scheduled\">inet_csk_ack_scheduled</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We sent a data segment already. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__tcp_ack_snd_check\">__tcp_ack_snd_check</a>(<a class=\"id\" href=\"#sk\">sk</a>, 1);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This routine is only called when we have urgent data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>signaled. Its the 'slow' part of tcp_urg. It could be</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>moved inline now as tcp_urg is only called from one</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>place. We handle URGent data wrong. We have to - as</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>BSD still doesn't use the correction from RFC961.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For 1003.1g we should support a new option TCP_STDURG to permit</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>either form (or just set the sysctl tcp_stdurg).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void <a class=\"id\" href=\"#tcp_check_urg\">tcp_check_urg</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#urg_ptr\">urg_ptr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a> && !<a class=\"id\" href=\"#sysctl_tcp_stdurg\">sysctl_tcp_stdurg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a>--;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> += <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#seq\">seq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ignore urgent data that we've already seen and read. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>, <a class=\"id\" href=\"#ptr\">ptr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do not replay urg ptr.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: interesting situation not covered by specs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Misbehaving sender may send urg ptr, pointing to segment,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which we already have in ofo queue. We are not able to fetch</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * such data and will stay in TCP_URG_NOTYET until will be eaten</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by recvmsg(). Seems, we are not obliged to handle such wicked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * situations. But it is worth to think about possibility of some</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * DoSes using some hypothetical application level deadlock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do we already have a newer (or duplicate) urgent pointer? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a> && !<a class=\"id\" href=\"#after\">after</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_seq\">urg_seq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Tell the world about our new urgent pointer. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_send_sigurg\">sk_send_sigurg</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We may be adding urgent data when the last byte read was</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * urgent. To do this requires some care. We cannot just ignore</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * tp-&gt;copied_seq since we would read the last urgent byte again</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as data, nor can we alter copied_seq until this data arrives</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or we break the semantics of SIOCATMARK (and thus sockatmark())</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE. Double Dutch. Rendering to plain English: author of comment</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * above did something sort of <span class=\"ts\"/>send(\"A\", MSG_OOB); send(\"B\", MSG_OOB);</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and expect that both A and B disappear from stream. This is _wrong_.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Though this happens in BSD with high probability, this is occasional.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Any application relying on this is buggy. Note also, that fix \"works\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only in this artificial test. Insert some normal data between A and B and we will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * decline of BSD again. Verdict: it is better to remove to trap</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * buggy users.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_seq\">urg_seq</a> == <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_URGINLINE\">SOCK_URGINLINE</a>) && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> != <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rcv_nxt\">rcv_nxt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a> = <a class=\"id\" href=\"#skb_peek\">skb_peek</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a> && !<a class=\"id\" href=\"#before\">before</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__skb_unlink\">__skb_unlink</a>(<a class=\"id\" href=\"#skb\">skb</a>, &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__kfree_skb\">__kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a> = <a class=\"id\" href=\"#TCP_URG_NOTYET\">TCP_URG_NOTYET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_seq\">urg_seq</a> = <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable header prediction. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#pred_flags\">pred_flags</a> = 0;", 
"}", 
"", 
"<span class=\"comment\">/* This is the 'fast' part of urgent handling. */</span>", 
"static void <a class=\"id\" href=\"#tcp_urg\">tcp_urg</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we get a new urgent pointer - normally not. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#urg\">urg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_check_urg\">tcp_check_urg</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#th\">th</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do we wait for any urgent data? - normally not... */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a> == <a class=\"id\" href=\"#TCP_URG_NOTYET\">TCP_URG_NOTYET</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_seq\">urg_seq</a> - <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#seq\">seq</a>) + (<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#doff\">doff</a> * 4) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#syn\">syn</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Is the urgent pointer pointing into this packet? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a> &lt; <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_copy_bits\">skb_copy_bits</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>, 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#urg_data\">urg_data</a> = <a class=\"id\" href=\"#TCP_URG_VALID\">TCP_URG_VALID</a> | <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#tcp_copy_to_iovec\">tcp_copy_to_iovec</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, int <a class=\"id\" href=\"#hlen\">hlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#chunk\">chunk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#hlen\">hlen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_copy_datagram_iovec\">skb_copy_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>, <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#chunk\">chunk</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#skb_copy_and_csum_datagram_iovec\">skb_copy_and_csum_datagram_iovec</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#iov\">iov</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> += <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_rcv_space_adjust\">tcp_rcv_space_adjust</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#__tcp_checksum_complete_user\">__tcp_checksum_complete_user</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__sum16\">__sum16</a> <a class=\"id\" href=\"#result\">result</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#__tcp_checksum_complete\">__tcp_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#__tcp_checksum_complete\">__tcp_checksum_complete</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#tcp_checksum_complete_user\">tcp_checksum_complete_user</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>) &&", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#__tcp_checksum_complete_user\">__tcp_checksum_complete_user</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_DMA\">CONFIG_NET_DMA</a>", 
"static int <a class=\"id\" href=\"#tcp_dma_try_early_copy\">tcp_dma_try_early_copy</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  int <a class=\"id\" href=\"#hlen\">hlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#chunk\">chunk</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a> - <a class=\"id\" href=\"#hlen\">hlen</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dma_cookie\">dma_cookie</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied_early\">copied_early</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#wakeup\">wakeup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a> && <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#pinned_list\">pinned_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a> = <a class=\"id\" href=\"#dma_find_channel\">dma_find_channel</a>(<a class=\"id\" href=\"#DMA_MEMCPY\">DMA_MEMCPY</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a> && <a class=\"id\" href=\"#skb_csum_unnecessary\">skb_csum_unnecessary</a>(<a class=\"id\" href=\"#skb\">skb</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> = <a class=\"id\" href=\"#dma_skb_copy_datagram_iovec\">dma_skb_copy_datagram_iovec</a>(<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_chan\">dma_chan</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#hlen\">hlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#chunk\">chunk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#pinned_list\">pinned_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#dma_cookie\">dma_cookie</a> = <a class=\"id\" href=\"#dma_cookie\">dma_cookie</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied_early\">copied_early</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#copied_seq\">copied_seq</a> += <a class=\"id\" href=\"#chunk\">chunk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_rcv_space_adjust\">tcp_rcv_space_adjust</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#len\">len</a> == 0) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#tcp_flag_word\">tcp_flag_word</a>(<a class=\"id\" href=\"#tcp_hdr\">tcp_hdr</a>(<a class=\"id\" href=\"#skb\">skb</a>)) &amp; <a class=\"id\" href=\"#TCP_FLAG_PSH\">TCP_FLAG_PSH</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) &gt; (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> >> 1))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#wakeup\">wakeup</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#chunk\">chunk</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#ucopy\">ucopy</a>.<a class=\"id\" href=\"#wakeup\">wakeup</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copied_early\">copied_early</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NET_DMA */</span>", 
"", 
"<span class=\"comment\">/* Does PAWS and seqno based validation of an incoming segment, flags will</span>", 
"<span class=\"comment\"> * play significant role here.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tcp_validate_incoming\">tcp_validate_incoming</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#tcphdr\">tcphdr</a> *<a class=\"id\" href=\"#th\">th</a>, int <a class=\"id\" href=\"#syn_inerr\">syn_inerr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#hash_location\">hash_location</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tcp_sock\">tcp_sock</a> *<a class=\"id\" href=\"#tp\">tp</a> = <a class=\"id\" href=\"#tcp_sk\">tcp_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* RFC1323: H1. Apply PAWS check first. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tcp_fast_parse_options\">tcp_fast_parse_options</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#th\">th</a>, <a class=\"id\" href=\"#tp\">tp</a>, &amp;<a class=\"id\" href=\"#hash_location\">hash_location</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tp\">tp</a>-><a class=\"id\" href=\"#rx_opt\">rx_opt</a>.<a class=\"id\" href=\"#saw_tstamp\">saw_tstamp</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tcp_paws_discard\">tcp_paws_discard</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#LINUX_MIB_PAWSESTABREJECTED\">LINUX_MIB_PAWSESTABREJECTED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_send_dupack\">tcp_send_dupack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Reset is accepted even if it did not pass PAWS. */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Step 1: check sequence number */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tcp_sequence\">tcp_sequence</a>(<a class=\"id\" href=\"#tp\">tp</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#seq\">seq</a>, <a class=\"id\" href=\"#TCP_SKB_CB\">TCP_SKB_CB</a>(<a class=\"id\" href=\"#skb\">skb</a>)-><a class=\"id\" href=\"#end_seq\">end_seq</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* RFC793, page 37: \"In all states except SYN-SENT, all reset</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (RST) segments are validated by checking their SEQ-fields.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * And page 69: \"If an incoming segment is not acceptable,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * an acknowledgment should be sent in reply (unless the RST</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bit is set, if so drop the segment and return)\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#th\">th</a>-><a class=\"id\" href=\"#rst\">rst</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_send_dupack\">tcp_send_dupack</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard\">discard</a>;", 
"<span class=\"ts\"/>}", 
"", 
];
xr_frag_insert('l/32/89d6b67db3207b264ff22af116af72659018d8.xr', __xr_tmp);
