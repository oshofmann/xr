var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * SHA transform algorithm, originally taken from code written by</span>", 
"<span class=\"comment\"> * Peter Gutmann, and placed in the public domain.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cryptohash\">cryptohash</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* The SHA f()-functions.  */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#f1\">f1</a>(<a class=\"id\" href=\"#x\">x</a>,<a class=\"id\" href=\"#y\">y</a>,<a class=\"id\" href=\"#z\">z</a>)   (<a class=\"id\" href=\"#z\">z</a> ^ (<a class=\"id\" href=\"#x\">x</a> &amp; (<a class=\"id\" href=\"#y\">y</a> ^ <a class=\"id\" href=\"#z\">z</a>)))<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* x ? y : z */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#f2\">f2</a>(<a class=\"id\" href=\"#x\">x</a>,<a class=\"id\" href=\"#y\">y</a>,<a class=\"id\" href=\"#z\">z</a>)   (<a class=\"id\" href=\"#x\">x</a> ^ <a class=\"id\" href=\"#y\">y</a> ^ <a class=\"id\" href=\"#z\">z</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* XOR */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#f3\">f3</a>(<a class=\"id\" href=\"#x\">x</a>,<a class=\"id\" href=\"#y\">y</a>,<a class=\"id\" href=\"#z\">z</a>)   ((<a class=\"id\" href=\"#x\">x</a> &amp; <a class=\"id\" href=\"#y\">y</a>) + (<a class=\"id\" href=\"#z\">z</a> &amp; (<a class=\"id\" href=\"#x\">x</a> ^ <a class=\"id\" href=\"#y\">y</a>)))<span class=\"ts\"/><span class=\"comment\">/* majority */</span>", 
"", 
"<span class=\"comment\">/* The SHA Mysterious Constants */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K1\">K1</a>  0x5A827999L<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rounds  0-19: sqrt(2) * 2^30 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K2\">K2</a>  0x6ED9EBA1L<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rounds 20-39: sqrt(3) * 2^30 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K3\">K3</a>  0x8F1BBCDCL<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rounds 40-59: sqrt(5) * 2^30 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#K4\">K4</a>  0xCA62C1D6L<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rounds 60-79: sqrt(10) * 2^30 */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sha_transform - single block SHA1 transform</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @digest: 160 bit digest to update</span>", 
"<span class=\"comment\"> * @data:   512 bits of data to hash</span>", 
"<span class=\"comment\"> * @W:      80 words of workspace (see note)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function generates a SHA1 digest for a single 512-bit block.</span>", 
"<span class=\"comment\"> * Be warned, it does not handle padding and message digest, do not</span>", 
"<span class=\"comment\"> * confuse it with the full FIPS 180-1 digest algorithm for variable</span>", 
"<span class=\"comment\"> * length messages.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note: If the hash is security sensitive, the caller should be sure</span>", 
"<span class=\"comment\"> * to clear the workspace. This is left to the caller to avoid</span>", 
"<span class=\"comment\"> * unnecessary clears between chained hashing operations.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#sha_transform\">sha_transform</a>(<a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#digest\">digest</a>, const char *<a class=\"id\" href=\"#in\">in</a>, <a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#W\">W</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#d\">d</a>, <a class=\"id\" href=\"#e\">e</a>, <a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 16; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#be32_to_cpu\">be32_to_cpu</a>(((const <a class=\"id\" href=\"#__be32\">__be32</a> *)<a class=\"id\" href=\"#in\">in</a>)[<a class=\"id\" href=\"#i\">i</a>]);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 64; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>+16] = <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>+13] ^ <a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>+8] ^ <a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>+2] ^ <a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>], 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#digest\">digest</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#digest\">digest</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#digest\">digest</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#digest\">digest</a>[3];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#digest\">digest</a>[4];", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 20; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#f1\">f1</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#d\">d</a>) + <a class=\"id\" href=\"#K1\">K1</a> + <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#a\">a</a>, 5) + <a class=\"id\" href=\"#e\">e</a> + <a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#d\">d</a>; <a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#c\">c</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#b\">b</a>, 30); <a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#a\">a</a>; <a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#i\">i</a> &lt; 40; <a class=\"id\" href=\"#i\">i</a> ++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#f2\">f2</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#d\">d</a>) + <a class=\"id\" href=\"#K2\">K2</a> + <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#a\">a</a>, 5) + <a class=\"id\" href=\"#e\">e</a> + <a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#d\">d</a>; <a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#c\">c</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#b\">b</a>, 30); <a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#a\">a</a>; <a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#i\">i</a> &lt; 60; <a class=\"id\" href=\"#i\">i</a> ++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#f3\">f3</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#d\">d</a>) + <a class=\"id\" href=\"#K3\">K3</a> + <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#a\">a</a>, 5) + <a class=\"id\" href=\"#e\">e</a> + <a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#d\">d</a>; <a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#c\">c</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#b\">b</a>, 30); <a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#a\">a</a>; <a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#i\">i</a> &lt; 80; <a class=\"id\" href=\"#i\">i</a> ++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#f2\">f2</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#d\">d</a>) + <a class=\"id\" href=\"#K4\">K4</a> + <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#a\">a</a>, 5) + <a class=\"id\" href=\"#e\">e</a> + <a class=\"id\" href=\"#W\">W</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = <a class=\"id\" href=\"#d\">d</a>; <a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#c\">c</a>; <a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#rol32\">rol32</a>(<a class=\"id\" href=\"#b\">b</a>, 30); <a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#a\">a</a>; <a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#digest\">digest</a>[0] += <a class=\"id\" href=\"#a\">a</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#digest\">digest</a>[1] += <a class=\"id\" href=\"#b\">b</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#digest\">digest</a>[2] += <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#digest\">digest</a>[3] += <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#digest\">digest</a>[4] += <a class=\"id\" href=\"#e\">e</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sha_transform\">sha_transform</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sha_init - initialize the vectors for a SHA1 digest</span>", 
"<span class=\"comment\"> * @buf: vector to initialize</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#sha_init\">sha_init</a>(<a class=\"id\" href=\"#__u32\">__u32</a> *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[0] = 0x67452301;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[1] = 0xefcdab89;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[2] = 0x98badcfe;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[3] = 0x10325476;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[4] = 0xc3d2e1f0;", 
"}", 
"", 
];
xr_frag_insert('l/32/a781e028875d291f82f841b9b6d88ab04ec3b0.xr', __xr_tmp);
