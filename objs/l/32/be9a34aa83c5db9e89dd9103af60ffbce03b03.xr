var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_SEQ_FILE_H\">_LINUX_SEQ_FILE_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_SEQ_FILE_H\">_LINUX_SEQ_FILE_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mutex\">mutex</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpumask\">cpumask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nodemask\">nodemask</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a>;", 
"struct <a class=\"id\" href=\"#file\">file</a>;", 
"struct <a class=\"id\" href=\"#path\">path</a>;", 
"struct <a class=\"id\" href=\"#inode\">inode</a>;", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"struct <a class=\"id\" href=\"#seq_file\">seq_file</a> {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#read_pos\">read_pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#version\">version</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#lock\">lock</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *<a class=\"id\" href=\"#op\">op</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#private\">private</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> {", 
"<span class=\"ts\"/>void * (*<a class=\"id\" href=\"#start\">start</a>) (struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#stop\">stop</a>) (struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"<span class=\"ts\"/>void * (*<a class=\"id\" href=\"#next\">next</a>) (struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#show\">show</a>) (struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>);", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEQ_SKIP\">SEQ_SKIP</a> 1", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * seq_get_buf - get buffer to write arbitrary data to</span>", 
"<span class=\"comment\"> * @m: the seq_file handle</span>", 
"<span class=\"comment\"> * @bufp: the beginning of the buffer is stored here</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return the number of bytes available in the buffer, or zero if</span>", 
"<span class=\"comment\"> * there's no space.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#seq_get_buf\">seq_get_buf</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, char **<a class=\"id\" href=\"#bufp\">bufp</a>)", 
"{", 
];
xr_frag_insert('l/32/be9a34aa83c5db9e89dd9103af60ffbce03b03.xr', __xr_tmp);
