var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mtrr.h\"", 
"", 
"struct <a class=\"id\" href=\"#var_mtrr_range_state\">var_mtrr_range_state</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#base_pfn\">base_pfn</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#size_pfn\">size_pfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_type\">mtrr_type</a><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#var_mtrr_state\">var_mtrr_state</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#range_startk\">range_startk</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#range_sizek\">range_sizek</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a>;", 
"};", 
"", 
"<span class=\"comment\">/* Should be related to MTRR_VAR_RANGES nums */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>256", 
"", 
"static struct <a class=\"id\" href=\"#range\">range</a> <a class=\"id\" href=\"#__initdata\">__initdata</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>];", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a>;", 
"", 
"static struct <a class=\"id\" href=\"#var_mtrr_range_state\">var_mtrr_range_state</a> <a class=\"id\" href=\"#__initdata\">__initdata</a><span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>];", 
"", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#debug_print\">debug_print</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#Dprintk\">Dprintk</a>(<a class=\"id\" href=\"#x\">x</a>...) do { if (<a class=\"id\" href=\"#debug_print\">debug_print</a>) <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> <a class=\"id\" href=\"#x\">x</a>); } while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BIOS_BUG_MSG\">BIOS_BUG_MSG</a> <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \\", 
"<span class=\"ts\"/>\"WARNING: BIOS bug: VAR MTRR %d contains strange UC entry under 1M, check with your system vendor!\\n\"", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#x86_get_mtrr_mem_range\">x86_get_mtrr_mem_range</a>(struct <a class=\"id\" href=\"#range\">range</a> *<a class=\"id\" href=\"#range\">range</a>, int <a class=\"id\" href=\"#nr_range\">nr_range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#extra_remove_base\">extra_remove_base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#extra_remove_size\">extra_remove_size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#add_range_with_merge\">add_range_with_merge</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_print\">debug_print</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"After WB checking\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"MTRR MAP PFN: %016llx - %016llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Take out UC ranges: */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#MTRR_TYPE_WRPROT\">MTRR_TYPE_WRPROT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> &lt; (1<<(20-<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)) && <a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#have_fixed\">have_fixed</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mtrr_state\">mtrr_state</a>.<a class=\"id\" href=\"#enabled\">enabled</a> &amp; 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Var MTRR contains UC entry below 1M? Skip it: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#BIOS_BUG_MSG\">BIOS_BUG_MSG</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#size\">size</a> <= (1<<(20-<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> -= (1<<(20-<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>)) - <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = 1<<(20-<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#extra_remove_size\">extra_remove_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subtract_range\">subtract_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#extra_remove_base\">extra_remove_base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#extra_remove_base\">extra_remove_base</a> + <a class=\"id\" href=\"#extra_remove_size\">extra_remove_size</a>);", 
"", 
"<span class=\"ts\"/>if  (<a class=\"id\" href=\"#debug_print\">debug_print</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"After UC checking\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"MTRR MAP PFN: %016llx - %016llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* sort the ranges */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#clean_sort_range\">clean_sort_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>);", 
"<span class=\"ts\"/>if  (<a class=\"id\" href=\"#debug_print\">debug_print</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"After sorting\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"MTRR MAP PFN: %016llx - %016llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr_range\">nr_range</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MTRR_SANITIZER\">CONFIG_MTRR_SANITIZER</a>", 
"", 
"static unsigned long <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#sum_ranges\">sum_ranges</a>(struct <a class=\"id\" href=\"#range\">range</a> *<a class=\"id\" href=\"#range\">range</a>, int <a class=\"id\" href=\"#nr_range\">nr_range</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sum\">sum</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sum\">sum</a> += <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sum\">sum</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#enable_mtrr_cleanup\">enable_mtrr_cleanup</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT\">CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#disable_mtrr_cleanup_setup\">disable_mtrr_cleanup_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_mtrr_cleanup\">enable_mtrr_cleanup</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"disable_mtrr_cleanup\", <a class=\"id\" href=\"#disable_mtrr_cleanup_setup\">disable_mtrr_cleanup_setup</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#enable_mtrr_cleanup_setup\">enable_mtrr_cleanup_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#enable_mtrr_cleanup\">enable_mtrr_cleanup</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"enable_mtrr_cleanup\", <a class=\"id\" href=\"#enable_mtrr_cleanup_setup\">enable_mtrr_cleanup_setup</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_cleanup_debug_setup\">mtrr_cleanup_debug_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#debug_print\">debug_print</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"mtrr_cleanup_debug\", <a class=\"id\" href=\"#mtrr_cleanup_debug_setup\">mtrr_cleanup_debug_setup</a>);", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#set_var_mtrr\">set_var_mtrr</a>(unsigned int <a class=\"id\" href=\"#reg\">reg</a>, unsigned long <a class=\"id\" href=\"#basek\">basek</a>, unsigned long <a class=\"id\" href=\"#sizek\">sizek</a>,", 
"<span class=\"ts\"/>     unsigned char <a class=\"id\" href=\"#type\">type</a>, unsigned int <a class=\"id\" href=\"#address_bits\">address_bits</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#base_hi\">base_hi</a>, <a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#mask_hi\">mask_hi</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#mask\">mask</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sizek\">sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_mtrr_var_range\">fill_mtrr_var_range</a>(<a class=\"id\" href=\"#reg\">reg</a>, 0, 0, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (1ULL << <a class=\"id\" href=\"#address_bits\">address_bits</a>) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> &= ~((((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#sizek\">sizek</a>) << 10) - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#basek\">basek</a>) << 10;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> |= <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> |= 0x800;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base_lo\">base_lo</a> = <a class=\"id\" href=\"#base\">base</a> &amp; ((1ULL<<32) - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base_hi\">base_hi</a> = <a class=\"id\" href=\"#base\">base</a> >> 32;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask_lo\">mask_lo</a> = <a class=\"id\" href=\"#mask\">mask</a> &amp; ((1ULL<<32) - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask_hi\">mask_hi</a> = <a class=\"id\" href=\"#mask\">mask</a> >> 32;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_mtrr_var_range\">fill_mtrr_var_range</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#base_lo\">base_lo</a>, <a class=\"id\" href=\"#base_hi\">base_hi</a>, <a class=\"id\" href=\"#mask_lo\">mask_lo</a>, <a class=\"id\" href=\"#mask_hi\">mask_hi</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#save_var_mtrr\">save_var_mtrr</a>(unsigned int <a class=\"id\" href=\"#reg\">reg</a>, unsigned long <a class=\"id\" href=\"#basek\">basek</a>, unsigned long <a class=\"id\" href=\"#sizek\">sizek</a>,", 
"<span class=\"ts\"/>      unsigned char <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#reg\">reg</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a> = <a class=\"id\" href=\"#basek\">basek</a> >> (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#reg\">reg</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a> = <a class=\"id\" href=\"#sizek\">sizek</a> >> (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#reg\">reg</a>].<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#set_var_mtrr_all\">set_var_mtrr_all</a>(unsigned int <a class=\"id\" href=\"#address_bits\">address_bits</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#basek\">basek</a>, <a class=\"id\" href=\"#sizek\">sizek</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#reg\">reg</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#reg\">reg</a> = 0; <a class=\"id\" href=\"#reg\">reg</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#reg\">reg</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#basek\">basek</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#reg\">reg</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sizek\">sizek</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#reg\">reg</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#reg\">reg</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_var_mtrr\">set_var_mtrr</a>(<a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#basek\">basek</a>, <a class=\"id\" href=\"#sizek\">sizek</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#address_bits\">address_bits</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(unsigned long <a class=\"id\" href=\"#sizek\">sizek</a>, char *<a class=\"id\" href=\"#factorp\">factorp</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#sizek\">sizek</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#factor\">factor</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> &amp; ((1<<10) - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Not MB-aligned: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#factor\">factor</a> = 'K';", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#base\">base</a> &amp; ((1<<20) - 1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#factor\">factor</a> = 'M';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> >>= 10;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#factor\">factor</a> = 'G';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> >>= 20;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#factorp\">factorp</a> = <a class=\"id\" href=\"#factor\">factor</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#base\">base</a>;", 
"}", 
"", 
"static unsigned int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#range_to_mtrr\">range_to_mtrr</a>(unsigned int <a class=\"id\" href=\"#reg\">reg</a>, unsigned long <a class=\"id\" href=\"#range_startk\">range_startk</a>,", 
"<span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#range_sizek\">range_sizek</a>, unsigned char <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#range_sizek\">range_sizek</a> || (<a class=\"id\" href=\"#reg\">reg</a> >= <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#reg\">reg</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#range_sizek\">range_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_align\">max_align</a>, <a class=\"id\" href=\"#align\">align</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sizek\">sizek</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Compute the maximum size with which we can make a range: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#range_startk\">range_startk</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_align\">max_align</a> = <a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#range_startk\">range_startk</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_align\">max_align</a> = 32;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#align\">align</a> = <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#range_sizek\">range_sizek</a>) - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#align\">align</a> &gt; <a class=\"id\" href=\"#max_align\">max_align</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#align\">align</a> = <a class=\"id\" href=\"#max_align\">max_align</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sizek\">sizek</a> = 1 << <a class=\"id\" href=\"#align\">align</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_print\">debug_print</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char <a class=\"id\" href=\"#start_factor\">start_factor</a> = 'K', <a class=\"id\" href=\"#size_factor\">size_factor</a> = 'K';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_base\">start_base</a>, <a class=\"id\" href=\"#size_base\">size_base</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_base\">start_base</a> = <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(<a class=\"id\" href=\"#range_startk\">range_startk</a>, &amp;<a class=\"id\" href=\"#start_factor\">start_factor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_base\">size_base</a> = <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(<a class=\"id\" href=\"#sizek\">sizek</a>, &amp;<a class=\"id\" href=\"#size_factor\">size_factor</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Dprintk\">Dprintk</a>(\"Setting variable MTRR %d, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"base: %ld%cB, range: %ld%cB, type %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#start_base\">start_base</a>, <a class=\"id\" href=\"#start_factor\">start_factor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_base\">size_base</a>, <a class=\"id\" href=\"#size_factor\">size_factor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>) ? \"UC\" :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   ((<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>) ? \"WB\" : \"Other\")", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#save_var_mtrr\">save_var_mtrr</a>(<a class=\"id\" href=\"#reg\">reg</a>++, <a class=\"id\" href=\"#range_startk\">range_startk</a>, <a class=\"id\" href=\"#sizek\">sizek</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_startk\">range_startk</a> += <a class=\"id\" href=\"#sizek\">sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_sizek\">range_sizek</a> -= <a class=\"id\" href=\"#sizek\">sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reg\">reg</a> >= <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#reg\">reg</a>;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#range_to_mtrr_with_hole\">range_to_mtrr_with_hole</a>(struct <a class=\"id\" href=\"#var_mtrr_state\">var_mtrr_state</a> *<a class=\"id\" href=\"#state\">state</a>, unsigned long <a class=\"id\" href=\"#basek\">basek</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sizek\">sizek</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#hole_basek\">hole_basek</a>, <a class=\"id\" href=\"#hole_sizek\">hole_sizek</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#second_basek\">second_basek</a>, <a class=\"id\" href=\"#second_sizek\">second_sizek</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range0_basek\">range0_basek</a>, <a class=\"id\" href=\"#range0_sizek\">range0_sizek</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range_basek\">range_basek</a>, <a class=\"id\" href=\"#range_sizek\">range_sizek</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hole_basek\">hole_basek</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hole_sizek\">hole_sizek</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_basek\">second_basek</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#second_sizek\">second_sizek</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gran_sizek\">gran_sizek</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Align with gran size, prevent small block used up MTRRs: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_basek\">range_basek</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_startk\">range_startk</a>, <a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#range_basek\">range_basek</a> &gt; <a class=\"id\" href=\"#basek\">basek</a>) && <a class=\"id\" href=\"#basek\">basek</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#second_sizek\">second_sizek</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a> -= (<a class=\"id\" href=\"#range_basek\">range_basek</a> - <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_startk\">range_startk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_sizek\">range_sizek</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>, <a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#range_sizek\">range_sizek</a> &gt; <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_sizek\">range_sizek</a> -= <a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#range_sizek\">range_sizek</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a> = <a class=\"id\" href=\"#range_sizek\">range_sizek</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to append some small hole: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range0_basek\">range0_basek</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_startk\">range_startk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>, <a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No increase: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> == <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Dprintk\">Dprintk</a>(\"rangeX: %016lx - %016lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range0_basek\">range0_basek</a><<10,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#range0_basek\">range0_basek</a> + <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>)<<10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#range_to_mtrr\">range_to_mtrr</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#range0_basek\">range0_basek</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>, <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only cut back when it is not the last: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sizek\">sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#range0_basek\">range0_basek</a> + <a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> &gt; (<a class=\"id\" href=\"#basek\">basek</a> + <a class=\"id\" href=\"#sizek\">sizek</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> >= <a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> -= <a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#range0_sizek\">range0_sizek</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#second_try\">second_try</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_basek\">range_basek</a> = <a class=\"id\" href=\"#range0_basek\">range0_basek</a> + <a class=\"id\" href=\"#range0_sizek\">range0_sizek</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* One hole in the middle: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range_basek\">range_basek</a> &gt; <a class=\"id\" href=\"#basek\">basek</a> && <a class=\"id\" href=\"#range_basek\">range_basek</a> <= (<a class=\"id\" href=\"#basek\">basek</a> + <a class=\"id\" href=\"#sizek\">sizek</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_sizek\">second_sizek</a> = <a class=\"id\" href=\"#range_basek\">range_basek</a> - <a class=\"id\" href=\"#basek\">basek</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> &gt; <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* One hole in middle or at the end: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hole_sizek\">hole_sizek</a> = <a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> - <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a> - <a class=\"id\" href=\"#second_sizek\">second_sizek</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Hole size should be less than half of range0 size: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hole_sizek\">hole_sizek</a> >= (<a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> >> 1) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> >= <a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> -= <a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_sizek\">second_sizek</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hole_sizek\">hole_sizek</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#second_try\">second_try</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range0_sizek\">range0_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Dprintk\">Dprintk</a>(\"range0: %016lx - %016lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range0_basek\">range0_basek</a><<10,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#range0_basek\">range0_basek</a> + <a class=\"id\" href=\"#range0_sizek\">range0_sizek</a>)<<10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#range_to_mtrr\">range_to_mtrr</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#range0_basek\">range0_basek</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range0_sizek\">range0_sizek</a>, <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range0_sizek\">range0_sizek</a> &lt; <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Need to handle left over range: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_sizek\">range_sizek</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a> - <a class=\"id\" href=\"#range0_sizek\">range0_sizek</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Dprintk\">Dprintk</a>(\"range: %016lx - %016lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#range_basek\">range_basek</a><<10,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#range_basek\">range_basek</a> + <a class=\"id\" href=\"#range_sizek\">range_sizek</a>)<<10);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#range_to_mtrr\">range_to_mtrr</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#range_basek\">range_basek</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#range_sizek\">range_sizek</a>, <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hole_sizek\">hole_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hole_basek\">hole_basek</a> = <a class=\"id\" href=\"#range_basek\">range_basek</a> - <a class=\"id\" href=\"#hole_sizek\">hole_sizek</a> - <a class=\"id\" href=\"#second_sizek\">second_sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#Dprintk\">Dprintk</a>(\"hole: %016lx - %016lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hole_basek\">hole_basek</a><<10,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#hole_basek\">hole_basek</a> + <a class=\"id\" href=\"#hole_sizek\">hole_sizek</a>)<<10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#range_to_mtrr\">range_to_mtrr</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a>, <a class=\"id\" href=\"#hole_basek\">hole_basek</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hole_sizek\">hole_sizek</a>, <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#second_sizek\">second_sizek</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#set_var_mtrr_range\">set_var_mtrr_range</a>(struct <a class=\"id\" href=\"#var_mtrr_state\">var_mtrr_state</a> *<a class=\"id\" href=\"#state\">state</a>, unsigned long <a class=\"id\" href=\"#base_pfn\">base_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#size_pfn\">size_pfn</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#basek\">basek</a>, <a class=\"id\" href=\"#sizek\">sizek</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#second_sizek\">second_sizek</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#reg\">reg</a> >= <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#basek\">basek</a> = <a class=\"id\" href=\"#base_pfn\">base_pfn</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sizek\">sizek</a> = <a class=\"id\" href=\"#size_pfn\">size_pfn</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* See if I can merge with the last range: */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#basek\">basek</a> <= 1024) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_startk\">range_startk</a> + <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a> == <a class=\"id\" href=\"#basek\">basek</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#endk\">endk</a> = <a class=\"id\" href=\"#basek\">basek</a> + <a class=\"id\" href=\"#sizek\">sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a> = <a class=\"id\" href=\"#endk\">endk</a> - <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_startk\">range_startk</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Write the range mtrrs: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#second_sizek\">second_sizek</a> = <a class=\"id\" href=\"#range_to_mtrr_with_hole\">range_to_mtrr_with_hole</a>(<a class=\"id\" href=\"#state\">state</a>, <a class=\"id\" href=\"#basek\">basek</a>, <a class=\"id\" href=\"#sizek\">sizek</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate an msr: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_startk\">range_startk</a> = <a class=\"id\" href=\"#basek\">basek</a> + <a class=\"id\" href=\"#second_sizek\">second_sizek</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#range_sizek\">range_sizek</a>  = <a class=\"id\" href=\"#sizek\">sizek</a> - <a class=\"id\" href=\"#second_sizek\">second_sizek</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Mininum size of mtrr block that can take hole: */</span>", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mtrr_chunk_size\">mtrr_chunk_size</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> = (256ULL<<20);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_mtrr_chunk_size_opt\">parse_mtrr_chunk_size_opt</a>(char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_chunk_size\">mtrr_chunk_size</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"mtrr_chunk_size\", <a class=\"id\" href=\"#parse_mtrr_chunk_size_opt\">parse_mtrr_chunk_size_opt</a>);", 
"", 
"<span class=\"comment\">/* Granularity of mtrr of block: */</span>", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mtrr_gran_size\">mtrr_gran_size</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_mtrr_gran_size_opt\">parse_mtrr_gran_size_opt</a>(char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_gran_size\">mtrr_gran_size</a> = <a class=\"id\" href=\"#memparse\">memparse</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"mtrr_gran_size\", <a class=\"id\" href=\"#parse_mtrr_gran_size_opt\">parse_mtrr_gran_size_opt</a>);", 
"", 
"static unsigned long <a class=\"id\" href=\"#nr_mtrr_spare_reg\">nr_mtrr_spare_reg</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT\">CONFIG_MTRR_SANITIZER_SPARE_REG_NR_DEFAULT</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_mtrr_spare_reg\">parse_mtrr_spare_reg</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#arg\">arg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_mtrr_spare_reg\">nr_mtrr_spare_reg</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#arg\">arg</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"mtrr_spare_reg_nr\", <a class=\"id\" href=\"#parse_mtrr_spare_reg\">parse_mtrr_spare_reg</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#x86_setup_var_mtrrs\">x86_setup_var_mtrrs</a>(struct <a class=\"id\" href=\"#range\">range</a> *<a class=\"id\" href=\"#range\">range</a>, int <a class=\"id\" href=\"#nr_range\">nr_range</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#chunk_size\">chunk_size</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#gran_size\">gran_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#var_mtrr_state\">var_mtrr_state</a> <a class=\"id\" href=\"#var_state\">var_state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_reg\">num_reg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#range_startk\">range_startk</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#range_sizek\">range_sizek</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#reg\">reg</a><span class=\"ts\"/><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a><span class=\"ts\"/>= <a class=\"id\" href=\"#chunk_size\">chunk_size</a> >> 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#gran_sizek\">gran_sizek</a><span class=\"ts\"/>= <a class=\"id\" href=\"#gran_size\">gran_size</a> >> 10;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range_state\">range_state</a>, 0, sizeof(<a class=\"id\" href=\"#range_state\">range_state</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Write the range: */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_var_mtrr_range\">set_var_mtrr_range</a>(&amp;<a class=\"id\" href=\"#var_state\">var_state</a>, <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Write the last range: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#range_sizek\">range_sizek</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_to_mtrr_with_hole\">range_to_mtrr_with_hole</a>(&amp;<a class=\"id\" href=\"#var_state\">var_state</a>, 0, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_reg\">num_reg</a> = <a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#reg\">reg</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Clear out the extra MTRR's: */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#reg\">reg</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#save_var_mtrr\">save_var_mtrr</a>(<a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#reg\">reg</a>, 0, 0, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#var_state\">var_state</a>.<a class=\"id\" href=\"#reg\">reg</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#num_reg\">num_reg</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#mtrr_cleanup_result\">mtrr_cleanup_result</a> {", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#lose_cover_sizek\">lose_cover_sizek</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#num_reg\">num_reg</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bad\">bad</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * gran_size: 64K, 128K, 256K, 512K, 1M, 2M, ..., 2G</span>", 
"<span class=\"comment\"> * chunk size: gran_size, ..., 2G</span>", 
"<span class=\"comment\"> * so we need (1+16)*8</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NUM_RESULT\">NUM_RESULT</a><span class=\"ts\"/>136", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PSHIFT\">PSHIFT</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10)", 
"", 
"static struct <a class=\"id\" href=\"#mtrr_cleanup_result\">mtrr_cleanup_result</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#NUM_RESULT\">NUM_RESULT</a>];", 
"static unsigned long <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#min_loss_pfn\">min_loss_pfn</a>[<a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>];", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#print_out_mtrr_range_state\">print_out_mtrr_range_state</a>(void)", 
"{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#start_factor\">start_factor</a> = 'K', <a class=\"id\" href=\"#size_factor\">size_factor</a> = 'K';", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start_base\">start_base</a>, <a class=\"id\" href=\"#size_base\">size_base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_base\">size_base</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#size_base\">size_base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_base\">size_base</a> = <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(<a class=\"id\" href=\"#size_base\">size_base</a>, &amp;<a class=\"id\" href=\"#size_factor\">size_factor</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_base\">start_base</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> - 10);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start_base\">start_base</a> = <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(<a class=\"id\" href=\"#start_base\">start_base</a>, &amp;<a class=\"id\" href=\"#start_factor\">start_factor</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"reg %d, base: %ld%cB, range: %ld%cB, type %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#start_base\">start_base</a>, <a class=\"id\" href=\"#start_factor\">start_factor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_base\">size_base</a>, <a class=\"id\" href=\"#size_factor\">size_factor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>) ? \"UC\" :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ((<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRPROT\">MTRR_TYPE_WRPROT</a>) ? \"WP\" :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     ((<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>) ? \"WB\" : \"Other\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_need_cleanup\">mtrr_need_cleanup</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Extra one for all 0: */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a> + 1];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check entries number: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#num\">num</a>, 0, sizeof(<a class=\"id\" href=\"#num\">num</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#type\">type</a>]++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we got UC entries: */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we only had WB and UC */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>] + <a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>] !=", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a> - <a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#range_sums\">range_sums</a>;", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#mtrr_calc_range_state\">mtrr_calc_range_state</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#chunk_size\">chunk_size</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#gran_size\">gran_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#x_remove_base\">x_remove_base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#x_remove_size\">x_remove_size</a>, int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#range\">range</a> <a class=\"id\" href=\"#range_new\">range_new</a>[<a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#range_sums_new\">range_sums_new</a>;", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#nr_range_new\">nr_range_new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_reg\">num_reg</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert ranges to var ranges state: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_reg\">num_reg</a> = <a class=\"id\" href=\"#x86_setup_var_mtrrs\">x86_setup_var_mtrrs</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#chunk_size\">chunk_size</a>, <a class=\"id\" href=\"#gran_size\">gran_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We got new setting in range_state, check it: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range_new\">range_new</a>, 0, sizeof(<a class=\"id\" href=\"#range_new\">range_new</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range_new\">nr_range_new</a> = <a class=\"id\" href=\"#x86_get_mtrr_mem_range\">x86_get_mtrr_mem_range</a>(<a class=\"id\" href=\"#range_new\">range_new</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x_remove_base\">x_remove_base</a>, <a class=\"id\" href=\"#x_remove_size\">x_remove_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_sums_new\">range_sums_new</a> = <a class=\"id\" href=\"#sum_ranges\">sum_ranges</a>(<a class=\"id\" href=\"#range_new\">range_new</a>, <a class=\"id\" href=\"#nr_range_new\">nr_range_new</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a> = <a class=\"id\" href=\"#chunk_size\">chunk_size</a> >> 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#gran_sizek\">gran_sizek</a> = <a class=\"id\" href=\"#gran_size\">gran_size</a> >> 10;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#num_reg\">num_reg</a> = <a class=\"id\" href=\"#num_reg\">num_reg</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range_sums\">range_sums</a> &lt; <a class=\"id\" href=\"#range_sums_new\">range_sums_new</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lose_cover_sizek\">lose_cover_sizek</a> = (<a class=\"id\" href=\"#range_sums_new\">range_sums_new</a> - <a class=\"id\" href=\"#range_sums\">range_sums</a>) << <a class=\"id\" href=\"#PSHIFT\">PSHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lose_cover_sizek\">lose_cover_sizek</a> = (<a class=\"id\" href=\"#range_sums\">range_sums</a> - <a class=\"id\" href=\"#range_sums_new\">range_sums_new</a>) << <a class=\"id\" href=\"#PSHIFT\">PSHIFT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Double check it: */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a> && !<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lose_cover_sizek\">lose_cover_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_range_new\">nr_range_new</a> != <a class=\"id\" href=\"#nr_range\">nr_range</a> || <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#range_new\">range_new</a>, sizeof(<a class=\"id\" href=\"#range\">range</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a> && (<a class=\"id\" href=\"#range_sums\">range_sums</a> - <a class=\"id\" href=\"#range_sums_new\">range_sums_new</a> &lt; <a class=\"id\" href=\"#min_loss_pfn\">min_loss_pfn</a>[<a class=\"id\" href=\"#num_reg\">num_reg</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_loss_pfn\">min_loss_pfn</a>[<a class=\"id\" href=\"#num_reg\">num_reg</a>] = <a class=\"id\" href=\"#range_sums\">range_sums</a> - <a class=\"id\" href=\"#range_sums_new\">range_sums_new</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_print_out_one_result\">mtrr_print_out_one_result</a>(int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#gran_base\">gran_base</a>, <a class=\"id\" href=\"#chunk_base\">chunk_base</a>, <a class=\"id\" href=\"#lose_base\">lose_base</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#gran_factor\">gran_factor</a>, <a class=\"id\" href=\"#chunk_factor\">chunk_factor</a>, <a class=\"id\" href=\"#lose_factor\">lose_factor</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gran_base\">gran_base</a> = <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>, &amp;<a class=\"id\" href=\"#gran_factor\">gran_factor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chunk_base\">chunk_base</a> = <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>, &amp;<a class=\"id\" href=\"#chunk_factor\">chunk_factor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lose_base\">lose_base</a> = <a class=\"id\" href=\"#to_size_factor\">to_size_factor</a>(<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lose_cover_sizek\">lose_cover_sizek</a>, &amp;<a class=\"id\" href=\"#lose_factor\">lose_factor</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"%sgran_size: %ld%c \\tchunk_size: %ld%c \\t\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a> ? \"*BAD*\" : \" \",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gran_base\">gran_base</a>, <a class=\"id\" href=\"#gran_factor\">gran_factor</a>, <a class=\"id\" href=\"#chunk_base\">chunk_base</a>, <a class=\"id\" href=\"#chunk_factor\">chunk_factor</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_cont\">pr_cont</a>(\"num_reg: %d  \\tlose cover RAM: %s%ld%c\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#num_reg\">num_reg</a>, <a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a> ? \"-\" : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lose_base\">lose_base</a>, <a class=\"id\" href=\"#lose_factor\">lose_factor</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_search_optimal_index\">mtrr_search_optimal_index</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num_reg_good\">num_reg_good</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index_good\">index_good</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_mtrr_spare_reg\">nr_mtrr_spare_reg</a> >= <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_mtrr_spare_reg\">nr_mtrr_spare_reg</a> = <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a> - 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#num_reg_good\">num_reg_good</a> = -1;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a> - <a class=\"id\" href=\"#nr_mtrr_spare_reg\">nr_mtrr_spare_reg</a>; <a class=\"id\" href=\"#i\">i</a> &gt; 0; <a class=\"id\" href=\"#i\">i</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#min_loss_pfn\">min_loss_pfn</a>[<a class=\"id\" href=\"#i\">i</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_reg_good\">num_reg_good</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index_good\">index_good</a> = -1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num_reg_good\">num_reg_good</a> != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RESULT\">NUM_RESULT</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#num_reg\">num_reg</a> == <a class=\"id\" href=\"#num_reg_good\">num_reg_good</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#lose_cover_sizek\">lose_cover_sizek</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index_good\">index_good</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#index_good\">index_good</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_cleanup\">mtrr_cleanup</a>(unsigned <a class=\"id\" href=\"#address_bits\">address_bits</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#x_remove_base\">x_remove_base</a>, <a class=\"id\" href=\"#x_remove_size\">x_remove_size</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#def\">def</a>, <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#chunk_size\">chunk_size</a>, <a class=\"id\" href=\"#gran_size\">gran_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index_good\">index_good</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_cpu\">is_cpu</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>) || <a class=\"id\" href=\"#enable_mtrr_cleanup\">enable_mtrr_cleanup</a> &lt; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRdefType\">MSR_MTRRdefType</a>, <a class=\"id\" href=\"#def\">def</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def\">def</a> &= 0xff;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def\">def</a> != <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get it and store it aside: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range_state\">range_state</a>, 0, sizeof(<a class=\"id\" href=\"#range_state\">range_state</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_if\">mtrr_if</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#base\">base</a>, &amp;<a class=\"id\" href=\"#size\">size</a>, &amp;<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we need handle it and can handle it: */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mtrr_need_cleanup\">mtrr_need_cleanup</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Print original var MTRRs at first, for debugging: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"original variable MTRRs\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_out_mtrr_range_state\">print_out_mtrr_range_state</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range\">range</a>, 0, sizeof(<a class=\"id\" href=\"#range\">range</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x_remove_size\">x_remove_size</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x_remove_base\">x_remove_base</a> = 1 << (32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x_remove_size\">x_remove_size</a> = (<a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>) - <a class=\"id\" href=\"#x_remove_base\">x_remove_base</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#x86_get_mtrr_mem_range\">x86_get_mtrr_mem_range</a>(<a class=\"id\" href=\"#range\">range</a>, 0, <a class=\"id\" href=\"#x_remove_base\">x_remove_base</a>, <a class=\"id\" href=\"#x_remove_size\">x_remove_size</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [0, 1M) should always be covered by var mtrr with WB</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and fixed mtrrs should take effect before var mtrr for it:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#add_range_with_merge\">add_range_with_merge</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#RANGE_NUM\">RANGE_NUM</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>1ULL<<(20 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/* Sort the ranges: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sort_range\">sort_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#range_sums\">range_sums</a> = <a class=\"id\" href=\"#sum_ranges\">sum_ranges</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"total RAM covered: %ldM\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#range_sums\">range_sums</a> >> (20 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_chunk_size\">mtrr_chunk_size</a> && <a class=\"id\" href=\"#mtrr_gran_size\">mtrr_gran_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_calc_range_state\">mtrr_calc_range_state</a>(<a class=\"id\" href=\"#mtrr_chunk_size\">mtrr_chunk_size</a>, <a class=\"id\" href=\"#mtrr_gran_size\">mtrr_gran_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#x_remove_base\">x_remove_base</a>, <a class=\"id\" href=\"#x_remove_size\">x_remove_size</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_print_out_one_result\">mtrr_print_out_one_result</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#bad\">bad</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_var_mtrr_all\">set_var_mtrr_all</a>(<a class=\"id\" href=\"#address_bits\">address_bits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"New variable MTRRs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_out_mtrr_range_state\">print_out_mtrr_range_state</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"invalid mtrr_gran_size or mtrr_chunk_size, \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"will find optimal one\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#min_loss_pfn\">min_loss_pfn</a>, 0xff, sizeof(<a class=\"id\" href=\"#min_loss_pfn\">min_loss_pfn</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#result\">result</a>, 0, sizeof(<a class=\"id\" href=\"#result\">result</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#gran_size\">gran_size</a> = (1ULL<<16); <a class=\"id\" href=\"#gran_size\">gran_size</a> &lt; (1ULL<<32); <a class=\"id\" href=\"#gran_size\">gran_size</a> <<= 1) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#chunk_size\">chunk_size</a> = <a class=\"id\" href=\"#gran_size\">gran_size</a>; <a class=\"id\" href=\"#chunk_size\">chunk_size</a> &lt; (1ULL<<32);", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#chunk_size\">chunk_size</a> <<= 1) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#NUM_RESULT\">NUM_RESULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_calc_range_state\">mtrr_calc_range_state</a>(<a class=\"id\" href=\"#chunk_size\">chunk_size</a>, <a class=\"id\" href=\"#gran_size\">gran_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#x_remove_base\">x_remove_base</a>, <a class=\"id\" href=\"#x_remove_size\">x_remove_size</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_print\">debug_print</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_print_out_one_result\">mtrr_print_out_one_result</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to find the optimal index: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index_good\">index_good</a> = <a class=\"id\" href=\"#mtrr_search_optimal_index\">mtrr_search_optimal_index</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#index_good\">index_good</a> != -1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Found optimal setting for mtrr clean up\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#index_good\">index_good</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_print_out_one_result\">mtrr_print_out_one_result</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Convert ranges to var ranges state: */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chunk_size\">chunk_size</a> = <a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#chunk_sizek\">chunk_sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#chunk_size\">chunk_size</a> <<= 10;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gran_size\">gran_size</a> = <a class=\"id\" href=\"#result\">result</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#gran_sizek\">gran_sizek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gran_size\">gran_size</a> <<= 10;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x86_setup_var_mtrrs\">x86_setup_var_mtrrs</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, <a class=\"id\" href=\"#chunk_size\">chunk_size</a>, <a class=\"id\" href=\"#gran_size\">gran_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_var_mtrr_all\">set_var_mtrr_all</a>(<a class=\"id\" href=\"#address_bits\">address_bits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"New variable MTRRs\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_out_mtrr_range_state\">print_out_mtrr_range_state</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* print out all */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_RESULT\">NUM_RESULT</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_print_out_one_result\">mtrr_print_out_one_result</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"mtrr_cleanup: can not find optimal value\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"please specify mtrr_gran_size/mtrr_chunk_size\\n\");", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#else", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_cleanup\">mtrr_cleanup</a>(unsigned <a class=\"id\" href=\"#address_bits\">address_bits</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#disable_mtrr_trim\">disable_mtrr_trim</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#disable_mtrr_trim_setup\">disable_mtrr_trim_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#disable_mtrr_trim\">disable_mtrr_trim</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"disable_mtrr_trim\", <a class=\"id\" href=\"#disable_mtrr_trim_setup\">disable_mtrr_trim_setup</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Newer AMD K8s and later CPUs have a special magic MSR way to force WB</span>", 
"<span class=\"comment\"> * for memory &gt;4GB. Check for that here.</span>", 
"<span class=\"comment\"> * Note this won't check if the MTRRs &lt; 4GB where the magic bit doesn't</span>", 
"<span class=\"comment\"> * apply to are wrong, but so far we don't know of any such case in the wild.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#Tom2Enabled\">Tom2Enabled</a><span class=\"ts\"/><span class=\"ts\"/>(1U << 21)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#Tom2ForceMemTypeWB\">Tom2ForceMemTypeWB</a><span class=\"ts\"/>(1U << 22)", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#amd_special_default_mtrr\">amd_special_default_mtrr</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86_vendor\">x86_vendor</a> != <a class=\"id\" href=\"#X86_VENDOR_AMD\">X86_VENDOR_AMD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> &lt; 0xf || <a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>.<a class=\"id\" href=\"#x86\">x86</a> &gt; 0x11)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* In case some hypervisor doesn't pass SYSCFG through: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rdmsr_safe\">rdmsr_safe</a>(<a class=\"id\" href=\"#MSR_K8_SYSCFG\">MSR_K8_SYSCFG</a>, &amp;<a class=\"id\" href=\"#l\">l</a>, &amp;<a class=\"id\" href=\"#h\">h</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Memory between 4GB and top of mem is forced WB by this magic bit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Reserved before K8RevF, but should be zero there.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#l\">l</a> &amp; (<a class=\"id\" href=\"#Tom2Enabled\">Tom2Enabled</a> | <a class=\"id\" href=\"#Tom2ForceMemTypeWB\">Tom2ForceMemTypeWB</a>)) ==", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#Tom2Enabled\">Tom2Enabled</a> | <a class=\"id\" href=\"#Tom2ForceMemTypeWB\">Tom2ForceMemTypeWB</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#real_trim_memory\">real_trim_memory</a>(unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, unsigned long <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#trim_start\">trim_start</a>, <a class=\"id\" href=\"#trim_size\">trim_size</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trim_start\">trim_start</a> = <a class=\"id\" href=\"#start_pfn\">start_pfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trim_start\">trim_start</a> <<= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trim_size\">trim_size</a> = <a class=\"id\" href=\"#limit_pfn\">limit_pfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trim_size\">trim_size</a> <<= <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trim_size\">trim_size</a> -= <a class=\"id\" href=\"#trim_start\">trim_start</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#e820_update_range\">e820_update_range</a>(<a class=\"id\" href=\"#trim_start\">trim_start</a>, <a class=\"id\" href=\"#trim_size\">trim_size</a>, <a class=\"id\" href=\"#E820_RAM\">E820_RAM</a>, <a class=\"id\" href=\"#E820_RESERVED\">E820_RESERVED</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * mtrr_trim_uncached_memory - trim RAM not covered by MTRRs</span>", 
"<span class=\"comment\"> * @end_pfn: ending page frame number</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Some buggy BIOSes don't setup the MTRRs properly for systems with certain</span>", 
"<span class=\"comment\"> * memory configurations.  This routine checks that the highest MTRR matches</span>", 
"<span class=\"comment\"> * the end of memory, to make sure the MTRRs having a write back type cover</span>", 
"<span class=\"comment\"> * all of the memory the kernel is intending to use.  If not, it'll trim any</span>", 
"<span class=\"comment\"> * memory off the end by adjusting end_pfn, removing it from the kernel's</span>", 
"<span class=\"comment\"> * allocation pools, warning the user with an obnoxious message.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mtrr_trim_uncached_memory\">mtrr_trim_uncached_memory</a>(unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#highest_pfn\">highest_pfn</a> = 0, <a class=\"id\" href=\"#def\">def</a>, <a class=\"id\" href=\"#dummy\">dummy</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mtrr_type\">mtrr_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#total_trim_size\">total_trim_size</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* extra one for all 0 */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a> + 1];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make sure we only trim uncachable memory on machines that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * support the Intel MTRR architecture:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_cpu\">is_cpu</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>) || <a class=\"id\" href=\"#disable_mtrr_trim\">disable_mtrr_trim</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_MTRRdefType\">MSR_MTRRdefType</a>, <a class=\"id\" href=\"#def\">def</a>, <a class=\"id\" href=\"#dummy\">dummy</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#def\">def</a> &= 0xff;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#def\">def</a> != <a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get it and store it aside: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range_state\">range_state</a>, 0, sizeof(<a class=\"id\" href=\"#range_state\">range_state</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mtrr_if\">mtrr_if</a>-><a class=\"id\" href=\"#get\">get</a>(<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#base\">base</a>, &amp;<a class=\"id\" href=\"#size\">size</a>, &amp;<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find highest cached pfn: */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#base_pfn\">base_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#highest_pfn\">highest_pfn</a> &lt; <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#highest_pfn\">highest_pfn</a> = <a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* kvm/qemu doesn't have mtrr set right, don't trim them all: */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#highest_pfn\">highest_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPU MTRRs all blank - virtualized system.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check entries number: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#num\">num</a>, 0, sizeof(<a class=\"id\" href=\"#num\">num</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> >= <a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#range_state\">range_state</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#size_pfn\">size_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#type\">type</a>]++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No entry for WB? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if we only had WB and UC: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_TYPE_WRBACK\">MTRR_TYPE_WRBACK</a>] + <a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_TYPE_UNCACHABLE\">MTRR_TYPE_UNCACHABLE</a>] !=", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num_var_ranges\">num_var_ranges</a> - <a class=\"id\" href=\"#num\">num</a>[<a class=\"id\" href=\"#MTRR_NUM_TYPES\">MTRR_NUM_TYPES</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#range\">range</a>, 0, sizeof(<a class=\"id\" href=\"#range\">range</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#nr_range\">nr_range</a>].<a class=\"id\" href=\"#start\">start</a> = (1ULL<<(32 - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#nr_range\">nr_range</a>].<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#mtrr_tom2\">mtrr_tom2</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#highest_pfn\">highest_pfn</a> &lt; <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#nr_range\">nr_range</a>].<a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#highest_pfn\">highest_pfn</a> = <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#nr_range\">nr_range</a>].<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_range\">nr_range</a> = <a class=\"id\" href=\"#x86_get_mtrr_mem_range\">x86_get_mtrr_mem_range</a>(<a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#nr_range\">nr_range</a>, 0, 0);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the head: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_trim_size\">total_trim_size</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range\">range</a>[0].<a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_trim_size\">total_trim_size</a> += <a class=\"id\" href=\"#real_trim_memory\">real_trim_memory</a>(0, <a class=\"id\" href=\"#range\">range</a>[0].<a class=\"id\" href=\"#start\">start</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the holes: */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_range\">nr_range</a> - 1; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>+1].<a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_trim_size\">total_trim_size</a> += <a class=\"id\" href=\"#real_trim_memory\">real_trim_memory</a>(<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>+1].<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check the top: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#nr_range\">nr_range</a> - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a> &lt; <a class=\"id\" href=\"#end_pfn\">end_pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_trim_size\">total_trim_size</a> += <a class=\"id\" href=\"#real_trim_memory\">real_trim_memory</a>(<a class=\"id\" href=\"#range\">range</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#end_pfn\">end_pfn</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#total_trim_size\">total_trim_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"WARNING: BIOS bug: CPU MTRRs don't cover all of memory, losing %lluMB of RAM.\\n\", <a class=\"id\" href=\"#total_trim_size\">total_trim_size</a> >> 20);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#changed_by_mtrr_cleanup\">changed_by_mtrr_cleanup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"update e820 for mtrr\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_e820\">update_e820</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/32/c40743e76de9e3e3387f5d2e5a999926af0b05.xr', __xr_tmp);
