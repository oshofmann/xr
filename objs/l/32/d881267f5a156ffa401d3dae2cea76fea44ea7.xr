var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_XEN_EVENTS_H\">_XEN_EVENTS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_XEN_EVENTS_H\">_XEN_EVENTS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#interface\">interface</a>/<a class=\"id\" href=\"#event_channel\">event_channel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hypercall\">hypercall</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#events\">events</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#bind_evtchn_to_irq\">bind_evtchn_to_irq</a>(unsigned int <a class=\"id\" href=\"#evtchn\">evtchn</a>);", 
"int <a class=\"id\" href=\"#bind_evtchn_to_irqhandler\">bind_evtchn_to_irqhandler</a>(unsigned int <a class=\"id\" href=\"#evtchn\">evtchn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>, const char *<a class=\"id\" href=\"#devname\">devname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"int <a class=\"id\" href=\"#bind_virq_to_irqhandler\">bind_virq_to_irqhandler</a>(unsigned int <a class=\"id\" href=\"#virq\">virq</a>, unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>, const char *<a class=\"id\" href=\"#devname\">devname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"int <a class=\"id\" href=\"#bind_ipi_to_irqhandler\">bind_ipi_to_irqhandler</a>(enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#ipi\">ipi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#devname\">devname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Common unbind function for all event sources. Takes IRQ to unbind from.</span>", 
"<span class=\"comment\"> * Automatically closes the underlying event channel (even for bindings</span>", 
"<span class=\"comment\"> * made with bind_evtchn_to_irqhandler()).</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#unbind_from_irqhandler\">unbind_from_irqhandler</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#dev_id\">dev_id</a>);", 
"", 
"void <a class=\"id\" href=\"#xen_send_IPI_one\">xen_send_IPI_one</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, enum <a class=\"id\" href=\"#ipi_vector\">ipi_vector</a> <a class=\"id\" href=\"#vector\">vector</a>);", 
"int <a class=\"id\" href=\"#resend_irq_on_evtchn\">resend_irq_on_evtchn</a>(unsigned int <a class=\"id\" href=\"#irq\">irq</a>);", 
"void <a class=\"id\" href=\"#rebind_evtchn_irq\">rebind_evtchn_irq</a>(int <a class=\"id\" href=\"#evtchn\">evtchn</a>, int <a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#notify_remote_via_evtchn\">notify_remote_via_evtchn</a>(int <a class=\"id\" href=\"#port\">port</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#evtchn_send\">evtchn_send</a> <a class=\"id\" href=\"#send\">send</a> = { .<a class=\"id\" href=\"#port\">port</a> = <a class=\"id\" href=\"#port\">port</a> };", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#HYPERVISOR_event_channel_op\">HYPERVISOR_event_channel_op</a>(<a class=\"id\" href=\"#EVTCHNOP_send\">EVTCHNOP_send</a>, &amp;<a class=\"id\" href=\"#send\">send</a>);", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#notify_remote_via_irq\">notify_remote_via_irq</a>(int <a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"extern void <a class=\"id\" href=\"#xen_irq_resume\">xen_irq_resume</a>(void);", 
"", 
"<span class=\"comment\">/* Clear an irq's pending state, in preparation for polling on it */</span>", 
"void <a class=\"id\" href=\"#xen_clear_irq_pending\">xen_clear_irq_pending</a>(int <a class=\"id\" href=\"#irq\">irq</a>);", 
"void <a class=\"id\" href=\"#xen_set_irq_pending\">xen_set_irq_pending</a>(int <a class=\"id\" href=\"#irq\">irq</a>);", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#xen_test_irq_pending\">xen_test_irq_pending</a>(int <a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"comment\">/* Poll waiting for an irq to become pending.  In the usual case, the</span>", 
"<span class=\"comment\">   irq will be disabled so it won't deliver an interrupt. */</span>", 
"void <a class=\"id\" href=\"#xen_poll_irq\">xen_poll_irq</a>(int <a class=\"id\" href=\"#irq\">irq</a>);", 
"", 
"<span class=\"comment\">/* Determine the IRQ which is bound to an event channel */</span>", 
"unsigned <a class=\"id\" href=\"#irq_from_evtchn\">irq_from_evtchn</a>(unsigned int <a class=\"id\" href=\"#evtchn\">evtchn</a>);", 
"", 
"<span class=\"comment\">/* Xen HVM evtchn vector callback */</span>", 
"extern void <a class=\"id\" href=\"#xen_hvm_callback_vector\">xen_hvm_callback_vector</a>(void);", 
"extern int <a class=\"id\" href=\"#xen_have_vector_callback\">xen_have_vector_callback</a>;", 
"int <a class=\"id\" href=\"#xen_set_callback_via\">xen_set_callback_via</a>(<a class=\"id\" href=\"#uint64_t\">uint64_t</a> <a class=\"id\" href=\"#via\">via</a>);", 
"void <a class=\"id\" href=\"#xen_evtchn_do_upcall\">xen_evtchn_do_upcall</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"void <a class=\"id\" href=\"#xen_hvm_evtchn_do_upcall\">xen_hvm_evtchn_do_upcall</a>(void);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _XEN_EVENTS_H */</span>", 
];
xr_frag_insert('l/32/d881267f5a156ffa401d3dae2cea76fea44ea7.xr', __xr_tmp);
