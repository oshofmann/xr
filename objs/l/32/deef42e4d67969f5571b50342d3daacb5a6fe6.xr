var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>PF_INET protocol family socket handler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Florian La Roche, &lt;flla@stud.uni-sb.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;A.Cox@swansea.ac.uk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Changes (see also sock.c)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>piggy,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Karl Knutson<span class=\"ts\"/>:<span class=\"ts\"/>Socket protocol table</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>A.N.Kuznetsov<span class=\"ts\"/>:<span class=\"ts\"/>Socket death error in accept().</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>John Richardson :<span class=\"ts\"/>Fix non blocking error in connect()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>so sockets that fail to connect</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>don't return -EINPROGRESS.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Asynchronous I/O support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Keep correct socket pointer on sock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>structures</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>when accept() ed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Semantics of SO_LINGER aren't state</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>moved to close when you look carefully.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>With this fixed and the accept bug fixed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>some RPC stuff seems happier.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Niibe Yutaka<span class=\"ts\"/>:<span class=\"ts\"/>4.4BSD style write async I/O</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Tony Gale <span class=\"ts\"/>:<span class=\"ts\"/>Fixed reuse semantics.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>bind() shouldn't abort existing but dead</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sockets. Stops FTP netin:.. I hope.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>bind() works correctly for RAW sockets.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Note that FreeBSD at least was broken</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>in this respect so be careful with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>compatibility tests...</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>routing cache support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>memzero the socket structure for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>compactness.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Matt Day<span class=\"ts\"/>:<span class=\"ts\"/>nonblock connect error handler</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Allow large numbers of pending sockets</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(eg for big web sites), but only if</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>specifically application requested.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>New buffering throughout IP. Used</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>dumbly.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>New buffering now used smartly.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>BSD rather than common sense</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>interpretation of listen.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Germano Caronni<span class=\"ts\"/>:<span class=\"ts\"/>Assorted small races.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>sendmsg/recvmsg basic support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Only sendmsg/recvmsg now supported.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Locked down bind (see security list).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Loosened bind a little.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Mike McLagan<span class=\"ts\"/>:<span class=\"ts\"/>ADD/DEL DLCI Ioctls</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Willy Konynenberg<span class=\"ts\"/>:<span class=\"ts\"/>Transparent proxying support.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>David S. Miller<span class=\"ts\"/>:<span class=\"ts\"/>New socket lookup architecture.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Some other random speedups.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Cyrus Durgin<span class=\"ts\"/>:<span class=\"ts\"/>Cleaned up file for kmod hacks.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen<span class=\"ts\"/>:<span class=\"ts\"/>Fix inet_stream_connect TCP race.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netfilter_ipv4\">netfilter_ipv4</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#igmp\">igmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inetdevice\">inetdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#checksum\">checksum</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip\">ip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#arp\">arp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#route\">route</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ip_fib\">ip_fib</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udp\">udp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#udplite\">udplite</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#raw\">raw</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#icmp\">icmp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#ipip\">ipip</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#inet_common\">inet_common</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IP_MROUTE\">CONFIG_IP_MROUTE</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mroute\">mroute</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"<span class=\"comment\">/* The inetsw table contains everything that inet_create needs to</span>", 
"<span class=\"comment\"> * build a new socket.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#inetsw\">inetsw</a>[<a class=\"id\" href=\"#SOCK_MAX\">SOCK_MAX</a>];", 
"static <a class=\"id\" href=\"#DEFINE_SPINLOCK\">DEFINE_SPINLOCK</a>(<a class=\"id\" href=\"#inetsw_lock\">inetsw_lock</a>);", 
"", 
"struct <a class=\"id\" href=\"#ipv4_config\">ipv4_config</a> <a class=\"id\" href=\"#ipv4_config\">ipv4_config</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv4_config\">ipv4_config</a>);", 
"", 
"<span class=\"comment\">/* New destruction routine */</span>", 
"", 
"void <a class=\"id\" href=\"#inet_sock_destruct\">inet_sock_destruct</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_purge\">__skb_queue_purge</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_error_queue\">sk_error_queue</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_mem_reclaim\">sk_mem_reclaim</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_type\">sk_type</a> == <a class=\"id\" href=\"#SOCK_STREAM\">SOCK_STREAM</a> && <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"Attempt to release TCP socket in state %d %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"Attempt to release alive inet socket %p\\n\", <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_alloc\">sk_wmem_alloc</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_wmem_queued\">sk_wmem_queued</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_forward_alloc\">sk_forward_alloc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#opt\">opt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#rcu_dereference_check\">rcu_dereference_check</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_dst_cache\">sk_dst_cache</a>, 1));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_refcnt_debug_dec\">sk_refcnt_debug_dec</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_sock_destruct\">inet_sock_destruct</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The routines beyond this point handle the behaviour of an AF_INET</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>socket object. Mostly it punts to the subprotocols of IP to do</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the work.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Automatically bind an unbound socket.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#inet_autobind\">inet_autobind</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* We may need to bind the socket. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#get_port\">get_port</a>(<a class=\"id\" href=\"#sk\">sk</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Move a socket into listening state.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inet_listen\">inet_listen</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#backlog\">backlog</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#old_state\">old_state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> != <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a> || <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_STREAM\">SOCK_STREAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_state\">old_state</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>;", 
"<span class=\"ts\"/>if (!((1 << <a class=\"id\" href=\"#old_state\">old_state</a>) &amp; (<a class=\"id\" href=\"#TCPF_CLOSE\">TCPF_CLOSE</a> | <a class=\"id\" href=\"#TCPF_LISTEN\">TCPF_LISTEN</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Really, if the socket is already in listen state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we can only allow the backlog to be adjusted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_state\">old_state</a> != <a class=\"id\" href=\"#TCP_LISTEN\">TCP_LISTEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#inet_csk_listen_start\">inet_csk_listen_start</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#backlog\">backlog</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_max_ack_backlog\">sk_max_ack_backlog</a> = <a class=\"id\" href=\"#backlog\">backlog</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_listen\">inet_listen</a>);", 
"", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#inet_ehash_secret\">inet_ehash_secret</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_ehash_secret\">inet_ehash_secret</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * inet_ehash_secret must be set exactly once</span>", 
"<span class=\"comment\"> * Instead of using a dedicated spinlock, we (ab)use inetsw_lock</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#build_ehash_secret\">build_ehash_secret</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rnd\">rnd</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#rnd\">rnd</a>, sizeof(<a class=\"id\" href=\"#rnd\">rnd</a>));", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#rnd\">rnd</a> == 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw_lock\">inetsw_lock</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_ehash_secret\">inet_ehash_secret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_ehash_secret\">inet_ehash_secret</a> = <a class=\"id\" href=\"#rnd\">rnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#inetsw_lock\">inetsw_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#build_ehash_secret\">build_ehash_secret</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#inet_netns_ok\">inet_netns_ok</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_protocol\">net_protocol</a> *<a class=\"id\" href=\"#ipprot\">ipprot</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#init_net\">init_net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#protocol\">protocol</a> &amp; (<a class=\"id\" href=\"#MAX_INET_PROTOS\">MAX_INET_PROTOS</a> - 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipprot\">ipprot</a> = <a class=\"id\" href=\"#rcu_dereference\">rcu_dereference</a>(<a class=\"id\" href=\"#inet_protos\">inet_protos</a>[<a class=\"id\" href=\"#hash\">hash</a>]);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipprot\">ipprot</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* raw IP is OK */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ipprot\">ipprot</a>-><a class=\"id\" href=\"#netns_ok\">netns_ok</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Create an inet socket.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static int <a class=\"id\" href=\"#inet_create\">inet_create</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#protocol\">protocol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#kern\">kern</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_protosw\">inet_protosw</a> *<a class=\"id\" href=\"#answer\">answer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proto\">proto</a> *<a class=\"id\" href=\"#answer_prot\">answer_prot</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#answer_flags\">answer_flags</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#answer_no_check\">answer_no_check</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#try_loading_module\">try_loading_module</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#inet_ehash_secret\">inet_ehash_secret</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> && <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#SOCK_DGRAM\">SOCK_DGRAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#build_ehash_secret\">build_ehash_secret</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Look for the requested type/protocol pair. */</span>", 
"<a class=\"id\" href=\"#lookup_protocol\">lookup_protocol</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ESOCKTNOSUPPORT\">ESOCKTNOSUPPORT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#answer\">answer</a>, &amp;<a class=\"id\" href=\"#inetsw\">inetsw</a>[<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a>], <a class=\"id\" href=\"#list\">list</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check the non-wild match. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> == <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#protocol\">protocol</a> != <a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for the two wild cases. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a> == <a class=\"id\" href=\"#protocol\">protocol</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IPPROTO_IP\">IPPROTO_IP</a> == <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#protocol\">protocol</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPROTONOSUPPORT\">EPROTONOSUPPORT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#err\">err</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#try_loading_module\">try_loading_module</a> &lt; 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Be more specific, e.g. net-pf-2-proto-132-type-1</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (net-pf-PF_INET-proto-IPPROTO_SCTP-type-SOCK_STREAM)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (++<a class=\"id\" href=\"#try_loading_module\">try_loading_module</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"net-pf-%d-proto-%d-type-%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PF_INET\">PF_INET</a>, <a class=\"id\" href=\"#protocol\">protocol</a>, <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Fall back to generic, e.g. net-pf-2-proto-132</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (net-pf-PF_INET-proto-IPPROTO_SCTP)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#request_module\">request_module</a>(\"net-pf-%d-proto-%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#PF_INET\">PF_INET</a>, <a class=\"id\" href=\"#protocol\">protocol</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#lookup_protocol\">lookup_protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> && !<a class=\"id\" href=\"#kern\">kern</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_RAW\">CAP_NET_RAW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EAFNOSUPPORT\">EAFNOSUPPORT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_netns_ok\">inet_netns_ok</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#protocol\">protocol</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer_prot\">answer_prot</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#prot\">prot</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer_no_check\">answer_no_check</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#no_check\">no_check</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#answer_flags\">answer_flags</a> = <a class=\"id\" href=\"#answer\">answer</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#answer_prot\">answer_prot</a>-><a class=\"id\" href=\"#slab\">slab</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sk_alloc\">sk_alloc</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#PF_INET\">PF_INET</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>, <a class=\"id\" href=\"#answer_prot\">answer_prot</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_no_check\">sk_no_check</a> = <a class=\"id\" href=\"#answer_no_check\">answer_no_check</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#INET_PROTOSW_REUSE\">INET_PROTOSW_REUSE</a> &amp; <a class=\"id\" href=\"#answer_flags\">answer_flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#is_icsk\">is_icsk</a> = (<a class=\"id\" href=\"#INET_PROTOSW_ICSK\">INET_PROTOSW_ICSK</a> &amp; <a class=\"id\" href=\"#answer_flags\">answer_flags</a>) != 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#nodefrag\">nodefrag</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#SOCK_RAW\">SOCK_RAW</a> == <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a> = <a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IPPROTO_RAW\">IPPROTO_RAW</a> == <a class=\"id\" href=\"#protocol\">protocol</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#hdrincl\">hdrincl</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv4_config\">ipv4_config</a>.<a class=\"id\" href=\"#no_pmtu_disc\">no_pmtu_disc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> = <a class=\"id\" href=\"#IP_PMTUDISC_DONT\">IP_PMTUDISC_DONT</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#pmtudisc\">pmtudisc</a> = <a class=\"id\" href=\"#IP_PMTUDISC_WANT\">IP_PMTUDISC_WANT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_id\">inet_id</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_init_data\">sock_init_data</a>(<a class=\"id\" href=\"#sock\">sock</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_destruct\">sk_destruct</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#inet_sock_destruct\">inet_sock_destruct</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#protocol\">protocol</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#backlog_rcv\">backlog_rcv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#uc_ttl\">uc_ttl</a><span class=\"ts\"/>= -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_loop\">mc_loop</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_ttl\">mc_ttl</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_all\">mc_all</a><span class=\"ts\"/>= 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_index\">mc_index</a><span class=\"ts\"/>= 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#mc_list\">mc_list</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_refcnt_debug_inc\">sk_refcnt_debug_inc</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* It assumes that any protocol which allows</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the user to assign a number at socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * creation time automatically</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * shares.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add to protocol hash chains. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#hash\">hash</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#init\">init</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#init\">init</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_common_release\">sk_common_release</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<a class=\"id\" href=\"#out_rcu_unlock\">out_rcu_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The peer socket should always be NULL (or else). When we call this</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>function we are destroying the object and from then on nobody</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>should refer to it.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inet_release\">inet_release</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>long <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_rps_reset_flow\">sock_rps_reset_flow</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Applications forget to leave groups before exiting */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip_mc_drop_socket\">ip_mc_drop_socket</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If linger is set, we don't return until the close</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is complete.  Otherwise we return immediately. The</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * actually closing is done the same either way.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If the close is due to the process exiting, we never</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * linger..</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_LINGER\">SOCK_LINGER</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PF_EXITING\">PF_EXITING</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lingertime\">sk_lingertime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#close\">close</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_release\">inet_release</a>);", 
"", 
"<span class=\"comment\">/* It is off by default, see below. */</span>", 
"int <a class=\"id\" href=\"#sysctl_ip_nonlocal_bind\">sysctl_ip_nonlocal_bind</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sysctl_ip_nonlocal_bind\">sysctl_ip_nonlocal_bind</a>);", 
"", 
"int <a class=\"id\" href=\"#inet_bind\">inet_bind</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>, int <a class=\"id\" href=\"#addr_len\">addr_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *<a class=\"id\" href=\"#addr\">addr</a> = (struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *)<a class=\"id\" href=\"#uaddr\">uaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#snum\">snum</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the socket has its own bind function then use it. (RAW) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#bind\">bind</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#bind\">bind</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> &lt; sizeof(struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> = <a class=\"id\" href=\"#inet_addr_type\">inet_addr_type</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Not specified by any standard per-se, however it breaks too</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * many applications when removed.  It is unfortunate since</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allowing applications to make a non-local bind solves</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * several problems with systems using dynamic addressing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (ie. your servers still start up even if your ISDN link</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  is temporarily down)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sysctl_ip_nonlocal_bind\">sysctl_ip_nonlocal_bind</a> &&", 
"<span class=\"ts\"/>    !(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#freebind\">freebind</a> || <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#transparent\">transparent</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> != <a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#INADDR_ANY\">INADDR_ANY</a>) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> != <a class=\"id\" href=\"#RTN_LOCAL\">RTN_LOCAL</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> != <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> != <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snum\">snum</a> = <a class=\"id\" href=\"#ntohs\">ntohs</a>(<a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snum\">snum</a> && <a class=\"id\" href=\"#snum\">snum</a> &lt; <a class=\"id\" href=\"#PROT_SOCK\">PROT_SOCK</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_BIND_SERVICE\">CAP_NET_BIND_SERVICE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*      We keep a pair of addresses. rcv_saddr is the one</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      used by hash lookups, and saddr is used for transmit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      In the BSD API these are the same except where it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      would be illegal to use them (multicast/broadcast) in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *      which case the sending device address is used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check these errors (active socket, double bind). */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a> || <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release_sock\">out_release_sock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a> = <a class=\"id\" href=\"#addr\">addr</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> == <a class=\"id\" href=\"#RTN_MULTICAST\">RTN_MULTICAST</a> || <a class=\"id\" href=\"#chk_addr_ret\">chk_addr_ret</a> == <a class=\"id\" href=\"#RTN_BROADCAST\">RTN_BROADCAST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a> = 0;  <span class=\"comment\">/* Use device */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Make sure we are allowed to bind here. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#get_port\">get_port</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#snum\">snum</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRINUSE\">EADDRINUSE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release_sock\">out_release_sock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> |= <a class=\"id\" href=\"#SOCK_BINDADDR_LOCK\">SOCK_BINDADDR_LOCK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#snum\">snum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> |= <a class=\"id\" href=\"#SOCK_BINDPORT_LOCK\">SOCK_BINDPORT_LOCK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a> = <a class=\"id\" href=\"#htons\">htons</a>(<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_dst_reset\">sk_dst_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#out_release_sock\">out_release_sock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_bind\">inet_bind</a>);", 
"", 
"int <a class=\"id\" href=\"#inet_dgram_connect\">inet_dgram_connect</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> * <a class=\"id\" href=\"#uaddr\">uaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#addr_len\">addr_len</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> &lt; sizeof(<a class=\"id\" href=\"#uaddr\">uaddr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uaddr\">uaddr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a> == <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#disconnect\">disconnect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>)-><a class=\"id\" href=\"#inet_num\">inet_num</a> && <a class=\"id\" href=\"#inet_autobind\">inet_autobind</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#connect\">connect</a>(<a class=\"id\" href=\"#sk\">sk</a>, (struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *)<a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_dgram_connect\">inet_dgram_connect</a>);", 
"", 
"static long <a class=\"id\" href=\"#inet_wait_for_connect\">inet_wait_for_connect</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, long <a class=\"id\" href=\"#timeo\">timeo</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DEFINE_WAIT\">DEFINE_WAIT</a>(<a class=\"id\" href=\"#wait\">wait</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Basic assumption: if someone sets sk-&gt;sk_err, he _must_</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * change state of the socket from TCP_SYN_*.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Connect() does not allow to get error notifications</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * without closing the socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while ((1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp; (<a class=\"id\" href=\"#TCPF_SYN_SENT\">TCPF_SYN_SENT</a> | <a class=\"id\" href=\"#TCPF_SYN_RECV\">TCPF_SYN_RECV</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#schedule_timeout\">schedule_timeout</a>(<a class=\"id\" href=\"#timeo\">timeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>) || !<a class=\"id\" href=\"#timeo\">timeo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prepare_to_wait\">prepare_to_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>, <a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#finish_wait\">finish_wait</a>(<a class=\"id\" href=\"#sk_sleep\">sk_sleep</a>(<a class=\"id\" href=\"#sk\">sk</a>), &amp;<a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#timeo\">timeo</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Connect to a remote host. There is regrettably still a little</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>TCP 'magic' in here.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inet_stream_connect\">inet_stream_connect</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#addr_len\">addr_len</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#timeo\">timeo</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_len\">addr_len</a> &lt; sizeof(<a class=\"id\" href=\"#uaddr\">uaddr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uaddr\">uaddr</a>-><a class=\"id\" href=\"#sa_family\">sa_family</a> == <a class=\"id\" href=\"#AF_UNSPEC\">AF_UNSPEC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#disconnect\">disconnect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#err\">err</a> ? <a class=\"id\" href=\"#SS_DISCONNECTING\">SS_DISCONNECTING</a> : <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SS_CONNECTED\">SS_CONNECTED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EISCONN\">EISCONN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SS_CONNECTING\">SS_CONNECTING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EALREADY\">EALREADY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Fall out of switch with err, set for this state */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EISCONN\">EISCONN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> != <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#connect\">connect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#uaddr\">uaddr</a>, <a class=\"id\" href=\"#addr_len\">addr_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_CONNECTING\">SS_CONNECTING</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Just entered SS_CONNECTING state; the only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * difference is that return value in non-blocking</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * case is EINPROGRESS, rather than EALREADY.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINPROGRESS\">EINPROGRESS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeo\">timeo</a> = <a class=\"id\" href=\"#sock_sndtimeo\">sock_sndtimeo</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>);", 
"", 
"<span class=\"ts\"/>if ((1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp; (<a class=\"id\" href=\"#TCPF_SYN_SENT\">TCPF_SYN_SENT</a> | <a class=\"id\" href=\"#TCPF_SYN_RECV\">TCPF_SYN_RECV</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Error code is set above */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#timeo\">timeo</a> || !<a class=\"id\" href=\"#inet_wait_for_connect\">inet_wait_for_connect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#timeo\">timeo</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_intr_errno\">sock_intr_errno</a>(<a class=\"id\" href=\"#timeo\">timeo</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Connection was closed by RST, timeout, ICMP error</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or another process disconnected us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a> == <a class=\"id\" href=\"#TCP_CLOSE\">TCP_CLOSE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#sock_error\">sock_error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* sk-&gt;sk_err may be not zero now, if RECVERR was ordered by user</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and error was received after socket entered established state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Hence, it is handled normally after connect() return successfully.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_CONNECTED\">SS_CONNECTED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<a class=\"id\" href=\"#sock_error\">sock_error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sock_error\">sock_error</a>(<a class=\"id\" href=\"#sk\">sk</a>) ? : -<a class=\"id\" href=\"#ECONNABORTED\">ECONNABORTED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_UNCONNECTED\">SS_UNCONNECTED</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#disconnect\">disconnect</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flags\">flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_DISCONNECTING\">SS_DISCONNECTING</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_stream_connect\">inet_stream_connect</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Accept a pending connection. The TCP layer now gives BSD semantics.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#inet_accept\">inet_accept</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#newsock\">newsock</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk1\">sk1</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk2\">sk2</a> = <a class=\"id\" href=\"#sk1\">sk1</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>-><a class=\"id\" href=\"#accept\">accept</a>(<a class=\"id\" href=\"#sk1\">sk1</a>, <a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk2\">sk2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#do_err\">do_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!((1 << <a class=\"id\" href=\"#sk2\">sk2</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>  (<a class=\"id\" href=\"#TCPF_ESTABLISHED\">TCPF_ESTABLISHED</a> | <a class=\"id\" href=\"#TCPF_CLOSE_WAIT\">TCPF_CLOSE_WAIT</a> | <a class=\"id\" href=\"#TCPF_CLOSE\">TCPF_CLOSE</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_graft\">sock_graft</a>(<a class=\"id\" href=\"#sk2\">sk2</a>, <a class=\"id\" href=\"#newsock\">newsock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newsock\">newsock</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#SS_CONNECTED\">SS_CONNECTED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk2\">sk2</a>);", 
"<a class=\"id\" href=\"#do_err\">do_err</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_accept\">inet_accept</a>);", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This does both peername and sockname.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inet_getname\">inet_getname</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a> *<a class=\"id\" href=\"#uaddr\">uaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int *<a class=\"id\" href=\"#uaddr_len\">uaddr_len</a>, int <a class=\"id\" href=\"#peer\">peer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a><span class=\"ts\"/>= <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_SOCKADDR\">DECLARE_SOCKADDR</a>(struct <a class=\"id\" href=\"#sockaddr_in\">sockaddr_in</a> *, <a class=\"id\" href=\"#sin\">sin</a>, <a class=\"id\" href=\"#uaddr\">uaddr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_family\">sin_family</a> = <a class=\"id\" href=\"#AF_INET\">AF_INET</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#peer\">peer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (((1 << <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_state\">sk_state</a>) &amp; (<a class=\"id\" href=\"#TCPF_CLOSE\">TCPF_CLOSE</a> | <a class=\"id\" href=\"#TCPF_SYN_SENT\">TCPF_SYN_SENT</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#peer\">peer</a> == 1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTCONN\">ENOTCONN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_port\">sin_port</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sin\">sin</a>-><a class=\"id\" href=\"#sin_addr\">sin_addr</a>.<a class=\"id\" href=\"#s_addr\">s_addr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#addr\">addr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_saddr\">inet_saddr</a>;", 
];
xr_frag_insert('l/32/deef42e4d67969f5571b50342d3daacb5a6fe6.xr', __xr_tmp);
