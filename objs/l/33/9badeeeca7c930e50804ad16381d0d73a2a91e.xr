var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  ahci.c - AHCI SATA support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Maintained by:  Jeff Garzik &lt;jgarzik@pobox.com&gt;</span>", 
"<span class=\"comment\"> *    <span class=\"ts\"/><span class=\"ts\"/>    Please ALWAYS copy linux-ide@vger.kernel.org</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>    on emails.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright 2004-2005 Red Hat, Inc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *  the Free Software Foundation; either version 2, or (at your option)</span>", 
"<span class=\"comment\"> *  any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> *  GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> *  along with this program; see the file COPYING.  If not, write to</span>", 
"<span class=\"comment\"> *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * libata documentation is available via 'make {ps|pdf}docs',</span>", 
"<span class=\"comment\"> * as Documentation/DocBook/libata.*</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * AHCI hardware documentation:</span>", 
"<span class=\"comment\"> * http://www.intel.com/technology/serialata/pdf/rev1_0.pdf</span>", 
"<span class=\"comment\"> * http://www.intel.com/technology/serialata/pdf/rev1_1.pdf</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#delay\">delay</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#device\">device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dmi\">dmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_cmnd\">scsi_cmnd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#libata\">libata</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ahci.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a><span class=\"ts\"/>\"ahci\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a><span class=\"ts\"/>\"3.0\"", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a><span class=\"ts\"/><span class=\"ts\"/>= 5,", 
"};", 
"", 
"enum <a class=\"id\" href=\"#board_ids\">board_ids</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* board IDs by feature in alphabetical order */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci\">board_ahci</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_ign_iferr\">board_ahci_ign_iferr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_nosntf\">board_ahci_nosntf</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_yes_fbs\">board_ahci_yes_fbs</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* board IDs for specific chipsets in alphabetical order */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mv\">board_ahci_mv</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_sb600\">board_ahci_sb600</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a>,<span class=\"ts\"/><span class=\"comment\">/* for SB700 and SB800 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_vt8251\">board_ahci_vt8251</a>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* aliases */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a><span class=\"ts\"/>= <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a><span class=\"ts\"/>= <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a><span class=\"ts\"/>= <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a><span class=\"ts\"/>= <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#ahci_init_one\">ahci_init_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ent\">ent</a>);", 
"static int <a class=\"id\" href=\"#ahci_sb600_softreset\">ahci_sb600_softreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"static int <a class=\"id\" href=\"#ahci_vt8251_hardreset\">ahci_vt8251_hardreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"static int <a class=\"id\" href=\"#ahci_p5wdh_hardreset\">ahci_p5wdh_hardreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"static int <a class=\"id\" href=\"#ahci_pci_device_suspend\">ahci_pci_device_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#mesg\">mesg</a>);", 
"static int <a class=\"id\" href=\"#ahci_pci_device_resume\">ahci_pci_device_resume</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#scsi_host_template\">scsi_host_template</a> <a class=\"id\" href=\"#ahci_sht\">ahci_sht</a> = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AHCI_SHT\">AHCI_SHT</a>(\"ahci\"),", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ahci_vt8251_ops\">ahci_vt8251_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hardreset\">hardreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_vt8251_hardreset\">ahci_vt8251_hardreset</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ahci_p5wdh_ops\">ahci_p5wdh_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#hardreset\">hardreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_p5wdh_hardreset\">ahci_p5wdh_hardreset</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#ata_port_operations\">ata_port_operations</a> <a class=\"id\" href=\"#ahci_sb600_ops\">ahci_sb600_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#inherits\">inherits</a><span class=\"ts\"/><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#softreset\">softreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_sb600_softreset\">ahci_sb600_softreset</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pmp_softreset\">pmp_softreset</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_sb600_softreset\">ahci_sb600_softreset</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a>(<a class=\"id\" href=\"#flags\">flags</a>)<span class=\"ts\"/>.<a class=\"id\" href=\"#private_data\">private_data</a><span class=\"ts\"/>= (void *)(<a class=\"id\" href=\"#flags\">flags</a>)", 
"", 
"static const struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> <a class=\"id\" href=\"#ahci_port_info\">ahci_port_info</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* by features */</span>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci\">board_ahci</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_ign_iferr\">board_ahci_ign_iferr</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_IGN_IRQ_IF_ERR\">AHCI_HFLAG_IGN_IRQ_IF_ERR</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_nosntf\">board_ahci_nosntf</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_NO_SNTF\">AHCI_HFLAG_NO_SNTF</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_yes_fbs\">board_ahci_yes_fbs</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_YES_FBS\">AHCI_HFLAG_YES_FBS</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"comment\">/* by chipsets */</span>", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_NO_FPDMA_AA\">AHCI_HFLAG_NO_FPDMA_AA</a> | <a class=\"id\" href=\"#AHCI_HFLAG_NO_PMP\">AHCI_HFLAG_NO_PMP</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#AHCI_HFLAG_YES_NCQ\">AHCI_HFLAG_YES_NCQ</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_NO_FPDMA_AA\">AHCI_HFLAG_NO_FPDMA_AA</a> | <a class=\"id\" href=\"#AHCI_HFLAG_NO_PMP\">AHCI_HFLAG_NO_PMP</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_NO_FPDMA_AA\">AHCI_HFLAG_NO_FPDMA_AA</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_mv\">board_ahci_mv</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_NO_NCQ\">AHCI_HFLAG_NO_NCQ</a> | <a class=\"id\" href=\"#AHCI_HFLAG_NO_MSI\">AHCI_HFLAG_NO_MSI</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#AHCI_HFLAG_MV_PATA\">AHCI_HFLAG_MV_PATA</a> | <a class=\"id\" href=\"#AHCI_HFLAG_NO_PMP\">AHCI_HFLAG_NO_PMP</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_FLAG_SATA\">ATA_FLAG_SATA</a> | <a class=\"id\" href=\"#ATA_FLAG_NO_LEGACY\">ATA_FLAG_NO_LEGACY</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ATA_FLAG_MMIO\">ATA_FLAG_MMIO</a> | <a class=\"id\" href=\"#ATA_FLAG_PIO_DMA\">ATA_FLAG_PIO_DMA</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_ops\">ahci_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_sb600\">board_ahci_sb600</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_IGN_SERR_INTERNAL\">AHCI_HFLAG_IGN_SERR_INTERNAL</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#AHCI_HFLAG_NO_MSI\">AHCI_HFLAG_NO_MSI</a> | <a class=\"id\" href=\"#AHCI_HFLAG_SECT255\">AHCI_HFLAG_SECT255</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#AHCI_HFLAG_32BIT_ONLY\">AHCI_HFLAG_32BIT_ONLY</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_sb600_ops\">ahci_sb600_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a>] =<span class=\"ts\"/><span class=\"comment\">/* for SB700 and SB800 */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_IGN_SERR_INTERNAL\">AHCI_HFLAG_IGN_SERR_INTERNAL</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_sb600_ops\">ahci_sb600_ops</a>,", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>[<a class=\"id\" href=\"#board_ahci_vt8251\">board_ahci_vt8251</a>] =", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#AHCI_HFLAGS\">AHCI_HFLAGS</a><span class=\"ts\"/>(<a class=\"id\" href=\"#AHCI_HFLAG_NO_NCQ\">AHCI_HFLAG_NO_NCQ</a> | <a class=\"id\" href=\"#AHCI_HFLAG_NO_PMP\">AHCI_HFLAG_NO_PMP</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#AHCI_FLAG_COMMON\">AHCI_FLAG_COMMON</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#pio_mask\">pio_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_PIO4\">ATA_PIO4</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#udma_mask\">udma_mask</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATA_UDMA6\">ATA_UDMA6</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#port_ops\">port_ops</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#ahci_vt8251_ops\">ahci_vt8251_ops</a>,", 
"<span class=\"ts\"/>},", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> <a class=\"id\" href=\"#ahci_pci_tbl\">ahci_pci_tbl</a>[] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* Intel */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2652), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH6 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2653), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH6M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x27c1), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH7 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x27c5), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH7M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x27c3), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH7R */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#AL\">AL</a>, 0x5288), <a class=\"id\" href=\"#board_ahci_ign_iferr\">board_ahci_ign_iferr</a> }, <span class=\"comment\">/* ULi M5288 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2681), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ESB2 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2682), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ESB2 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2683), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ESB2 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x27c6), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH7-M DH */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2821), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH8 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2822), <a class=\"id\" href=\"#board_ahci_nosntf\">board_ahci_nosntf</a> }, <span class=\"comment\">/* ICH8 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2824), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH8 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2829), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH8M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x282a), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH8M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2922), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2923), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2924), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2925), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2927), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x2929), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x292a), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x292b), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x292c), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x292f), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x294d), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x294e), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH9M */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x502a), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* Tolapai */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x502b), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* Tolapai */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3a05), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH10 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3a22), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH10 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3a25), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* ICH10 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b22), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b23), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b24), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b25), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b29), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b2b), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b2c), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x3b2f), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PCH AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1c02), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* CPT AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1c03), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* CPT AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1c04), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* CPT RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1c05), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* CPT RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1c06), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* CPT RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1c07), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* CPT RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1d02), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PBG AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1d04), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PBG RAID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#INTEL\">INTEL</a>, 0x1d06), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* PBG RAID */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* JMicron 360/1/3/5/6, match class to avoid IDE function */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>,", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#PCI_CLASS_STORAGE_SATA_AHCI\">PCI_CLASS_STORAGE_SATA_AHCI</a>, 0xffffff, <a class=\"id\" href=\"#board_ahci_ign_iferr\">board_ahci_ign_iferr</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ATI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#ATI\">ATI</a>, 0x4380), <a class=\"id\" href=\"#board_ahci_sb600\">board_ahci_sb600</a> }, <span class=\"comment\">/* ATI SB600 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#ATI\">ATI</a>, 0x4390), <a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a> }, <span class=\"comment\">/* ATI SB700/800 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#ATI\">ATI</a>, 0x4391), <a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a> }, <span class=\"comment\">/* ATI SB700/800 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#ATI\">ATI</a>, 0x4392), <a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a> }, <span class=\"comment\">/* ATI SB700/800 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#ATI\">ATI</a>, 0x4393), <a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a> }, <span class=\"comment\">/* ATI SB700/800 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#ATI\">ATI</a>, 0x4394), <a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a> }, <span class=\"comment\">/* ATI SB700/800 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#ATI\">ATI</a>, 0x4395), <a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a> }, <span class=\"comment\">/* ATI SB700/800 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* AMD */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#AMD\">AMD</a>, 0x7800), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> }, <span class=\"comment\">/* AMD Hudson-2 */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* AMD is using RAID class only for ahci controllers */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VENDOR_ID_AMD\">PCI_VENDOR_ID_AMD</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>,", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#PCI_CLASS_STORAGE_RAID\">PCI_CLASS_STORAGE_RAID</a> << 8, 0xffffff, <a class=\"id\" href=\"#board_ahci\">board_ahci</a> },", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* VIA */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#VIA\">VIA</a>, 0x3349), <a class=\"id\" href=\"#board_ahci_vt8251\">board_ahci_vt8251</a> }, <span class=\"comment\">/* VIA VT8251 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#VIA\">VIA</a>, 0x6287), <a class=\"id\" href=\"#board_ahci_vt8251\">board_ahci_vt8251</a> }, <span class=\"comment\">/* VIA VT8251 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NVIDIA */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x044c), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x044d), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x044e), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x044f), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x045c), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x045d), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x045e), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x045f), <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP65 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0550), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0551), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0552), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0553), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0554), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0555), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0556), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0557), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0558), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0559), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x055a), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x055b), <a class=\"id\" href=\"#board_ahci_mcp67\">board_ahci_mcp67</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP67 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0580), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0581), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0582), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0583), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0584), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0585), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0586), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0587), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0588), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0589), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x058a), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x058b), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x058c), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x058d), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x058e), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x058f), <a class=\"id\" href=\"#board_ahci_mcp_linux\">board_ahci_mcp_linux</a> },<span class=\"ts\"/><span class=\"comment\">/* Linux ID */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f0), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f1), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f2), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f3), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f4), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f5), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f6), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f7), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f8), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07f9), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07fa), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x07fb), <a class=\"id\" href=\"#board_ahci_mcp73\">board_ahci_mcp73</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP73 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad0), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad1), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad2), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad3), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad4), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad5), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad6), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad7), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad8), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ad9), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ada), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0adb), <a class=\"id\" href=\"#board_ahci_mcp77\">board_ahci_mcp77</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP77 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ab4), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ab5), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ab6), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ab7), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ab8), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0ab9), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0aba), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0abb), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0abc), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0abd), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0abe), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0abf), <a class=\"id\" href=\"#board_ahci_mcp79\">board_ahci_mcp79</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP79 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d84), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d85), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d86), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d87), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d88), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d89), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d8a), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d8b), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d8c), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d8d), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d8e), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#NVIDIA\">NVIDIA</a>, 0x0d8f), <a class=\"id\" href=\"#board_ahci_mcp89\">board_ahci_mcp89</a> },<span class=\"ts\"/><span class=\"comment\">/* MCP89 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SiS */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#SI\">SI</a>, 0x1184), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> },<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SiS 966 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#SI\">SI</a>, 0x1185), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> },<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SiS 968 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#SI\">SI</a>, 0x0186), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> },<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* SiS 968 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Marvell */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#MARVELL\">MARVELL</a>, 0x6145), <a class=\"id\" href=\"#board_ahci_mv\">board_ahci_mv</a> },<span class=\"ts\"/><span class=\"comment\">/* 6145 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#MARVELL\">MARVELL</a>, 0x6121), <a class=\"id\" href=\"#board_ahci_mv\">board_ahci_mv</a> },<span class=\"ts\"/><span class=\"comment\">/* 6121 */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_DEVICE\">PCI_DEVICE</a>(0x1b4b, 0x9123),", 
"<span class=\"ts\"/>  .<a class=\"id\" href=\"#driver_data\">driver_data</a> = <a class=\"id\" href=\"#board_ahci_yes_fbs\">board_ahci_yes_fbs</a> },<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 88se9128 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Promise */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_VDEVICE\">PCI_VDEVICE</a>(<a class=\"id\" href=\"#PROMISE\">PROMISE</a>, 0x3f20), <a class=\"id\" href=\"#board_ahci\">board_ahci</a> },<span class=\"ts\"/><span class=\"comment\">/* PDC42819 */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Generic, PCI class code for AHCI */</span>", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>,", 
"<span class=\"ts\"/>  <a class=\"id\" href=\"#PCI_CLASS_STORAGE_SATA_AHCI\">PCI_CLASS_STORAGE_SATA_AHCI</a>, 0xffffff, <a class=\"id\" href=\"#board_ahci\">board_ahci</a> },", 
"", 
"<span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"};", 
"", 
"", 
"static struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> <a class=\"id\" href=\"#ahci_pci_driver\">ahci_pci_driver</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id_table\">id_table</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_pci_tbl\">ahci_pci_tbl</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#probe\">probe</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_init_one\">ahci_init_one</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#remove\">remove</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ata_pci_remove_one\">ata_pci_remove_one</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_pci_device_suspend\">ahci_pci_device_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ahci_pci_device_resume\">ahci_pci_device_resume</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PATA_MARVELL\">CONFIG_PATA_MARVELL</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PATA_MARVELL_MODULE\">CONFIG_PATA_MARVELL_MODULE</a>)", 
"static int <a class=\"id\" href=\"#marvell_enable\">marvell_enable</a>;", 
"#else", 
"static int <a class=\"id\" href=\"#marvell_enable\">marvell_enable</a> = 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<a class=\"id\" href=\"#module_param\">module_param</a>(<a class=\"id\" href=\"#marvell_enable\">marvell_enable</a>, int, 0644);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#marvell_enable\">marvell_enable</a>, \"Marvell SATA via AHCI (1 = enabled)\");", 
"", 
"", 
"static void <a class=\"id\" href=\"#ahci_pci_save_initial_config\">ahci_pci_save_initial_config</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ahci_host_priv\">ahci_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#force_port_map\">force_port_map</a> = 0;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#mask_port_map\">mask_port_map</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_JMICRON\">PCI_VENDOR_ID_JMICRON</a> && <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == 0x2361) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"JMB361 has only one port\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#force_port_map\">force_port_map</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Temporary Marvell 6145 hack: PATA port presence</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is asserted through the standard AHCI port</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * presence register, as bit 4 (counting from 0)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AHCI_HFLAG_MV_PATA\">AHCI_HFLAG_MV_PATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == 0x6121)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_port_map\">mask_port_map</a> = 0x3;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask_port_map\">mask_port_map</a> = 0xf;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Disabling your PATA port. Use the boot option 'ahci.marvell_enable=0' to avoid this.\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_save_initial_config\">ahci_save_initial_config</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#hpriv\">hpriv</a>, <a class=\"id\" href=\"#force_port_map\">force_port_map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#mask_port_map\">mask_port_map</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ahci_pci_reset_controller\">ahci_pci_reset_controller</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_reset_controller\">ahci_reset_controller</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ahci_host_priv\">ahci_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#tmp16\">tmp16</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* configure PCS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x92, &amp;<a class=\"id\" href=\"#tmp16\">tmp16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tmp16\">tmp16</a> &amp; <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#port_map\">port_map</a>) != <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#port_map\">port_map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp16\">tmp16</a> |= <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#port_map\">port_map</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x92, <a class=\"id\" href=\"#tmp16\">tmp16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ahci_pci_init_controller\">ahci_pci_init_controller</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ahci_host_priv\">ahci_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#port_mmio\">port_mmio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#mv\">mv</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AHCI_HFLAG_MV_PATA\">AHCI_HFLAG_MV_PATA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == 0x6121)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mv\">mv</a> = 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mv\">mv</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#port_mmio\">port_mmio</a> = <a class=\"id\" href=\"#__ahci_port_base\">__ahci_port_base</a>(<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#mv\">mv</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(0, <a class=\"id\" href=\"#port_mmio\">port_mmio</a> + <a class=\"id\" href=\"#PORT_IRQ_MASK\">PORT_IRQ_MASK</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* clear port IRQ */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#port_mmio\">port_mmio</a> + <a class=\"id\" href=\"#PORT_IRQ_STAT\">PORT_IRQ_STAT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"PORT_IRQ_STAT 0x%x\\n\", <a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#port_mmio\">port_mmio</a> + <a class=\"id\" href=\"#PORT_IRQ_STAT\">PORT_IRQ_STAT</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_init_controller\">ahci_init_controller</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ahci_sb600_check_ready\">ahci_sb600_check_ready</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#port_mmio\">port_mmio</a> = <a class=\"id\" href=\"#ahci_port_base\">ahci_port_base</a>(<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#port_mmio\">port_mmio</a> + <a class=\"id\" href=\"#PORT_TFDATA\">PORT_TFDATA</a>) &amp; 0xFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#irq_status\">irq_status</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#port_mmio\">port_mmio</a> + <a class=\"id\" href=\"#PORT_IRQ_STAT\">PORT_IRQ_STAT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * There is no need to check TFDATA if BAD PMP is found due to HW bug,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which can save timeout delay.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_status\">irq_status</a> &amp; <a class=\"id\" href=\"#PORT_IRQ_BAD_PMP\">PORT_IRQ_BAD_PMP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_check_ready\">ata_check_ready</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ahci_sb600_softreset\">ahci_sb600_softreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#port_mmio\">port_mmio</a> = <a class=\"id\" href=\"#ahci_port_base\">ahci_port_base</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pmp\">pmp</a> = <a class=\"id\" href=\"#sata_srst_pmp\">sata_srst_pmp</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#irq_sts\">irq_sts</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ENTER\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ahci_do_softreset\">ahci_do_softreset</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#pmp\">pmp</a>, <a class=\"id\" href=\"#deadline\">deadline</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ahci_sb600_check_ready\">ahci_sb600_check_ready</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Soft reset fails on some ATI chips with IPMS set when PMP</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is enabled but SATA HDD/ODD is connected to SATA port,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * do soft reset again to port 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#EIO\">EIO</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq_sts\">irq_sts</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#port_mmio\">port_mmio</a> + <a class=\"id\" href=\"#PORT_IRQ_STAT\">PORT_IRQ_STAT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#irq_sts\">irq_sts</a> &amp; <a class=\"id\" href=\"#PORT_IRQ_BAD_PMP\">PORT_IRQ_BAD_PMP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_link_printk\">ata_link_printk</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"applying SB600 PMP SRST workaround \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"and retrying\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ahci_do_softreset\">ahci_do_softreset</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#class\">class</a>, 0, <a class=\"id\" href=\"#deadline\">deadline</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ahci_check_ready\">ahci_check_ready</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ahci_vt8251_hardreset\">ahci_vt8251_hardreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#online\">online</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"ENTER\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_stop_engine\">ahci_stop_engine</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_link_hardreset\">sata_link_hardreset</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#sata_ehc_deb_timing\">sata_ehc_deb_timing</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_context\">eh_context</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#deadline\">deadline</a>, &amp;<a class=\"id\" href=\"#online\">online</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_start_engine\">ahci_start_engine</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DPRINTK\">DPRINTK</a>(\"EXIT, rc=%d, class=%u\\n\", <a class=\"id\" href=\"#rc\">rc</a>, *<a class=\"id\" href=\"#class\">class</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* vt8251 doesn't clear BSY on signature FIS reception,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * request follow-up softreset.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#online\">online</a> ? -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a> : <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ahci_p5wdh_hardreset\">ahci_p5wdh_hardreset</a>(struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>, unsigned int *<a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#deadline\">deadline</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#ap\">ap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ahci_port_priv\">ahci_port_priv</a> *<a class=\"id\" href=\"#pp\">pp</a> = <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#d2h_fis\">d2h_fis</a> = <a class=\"id\" href=\"#pp\">pp</a>-><a class=\"id\" href=\"#rx_fis\">rx_fis</a> + <a class=\"id\" href=\"#RX_FIS_D2H_REG\">RX_FIS_D2H_REG</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_taskfile\">ata_taskfile</a> <a class=\"id\" href=\"#tf\">tf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#online\">online</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_stop_engine\">ahci_stop_engine</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear D2H reception area to properly wait for D2H FIS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_tf_init\">ata_tf_init</a>(<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#device\">device</a>, &amp;<a class=\"id\" href=\"#tf\">tf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tf\">tf</a>.<a class=\"id\" href=\"#command\">command</a> = 0x80;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_tf_to_fis\">ata_tf_to_fis</a>(&amp;<a class=\"id\" href=\"#tf\">tf</a>, 0, 0, <a class=\"id\" href=\"#d2h_fis\">d2h_fis</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sata_link_hardreset\">sata_link_hardreset</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#sata_ehc_deb_timing\">sata_ehc_deb_timing</a>(&amp;<a class=\"id\" href=\"#link\">link</a>-><a class=\"id\" href=\"#eh_context\">eh_context</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#deadline\">deadline</a>, &amp;<a class=\"id\" href=\"#online\">online</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_start_engine\">ahci_start_engine</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The pseudo configuration device on SIMG4726 attached to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ASUS P5W-DH Deluxe doesn't send signature FIS after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hardreset if no device is attached to the first downstream</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * port &amp;&amp; the pseudo device locks up on SRST w/ PMP==0.  To</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * work around this, wait for !BSY only briefly.  If BSY isn't</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cleared, perform CLO and proceed to IDENTIFY (achieved by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ATA_LFLAG_NO_SRST and ATA_LFLAG_ASSUME_ATA).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wait for two seconds.  Devices attached to downstream port</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * which can't process the following IDENTIFY after this will</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * have to be reset again.  For most cases, this should</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * suffice while making probing snappish enough.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#online\">online</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_wait_after_reset\">ata_wait_after_reset</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + 2 * <a class=\"id\" href=\"#HZ\">HZ</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ahci_check_ready\">ahci_check_ready</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ahci_kick_engine\">ahci_kick_engine</a>(<a class=\"id\" href=\"#ap\">ap</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM\">CONFIG_PM</a>", 
"static int <a class=\"id\" href=\"#ahci_pci_device_suspend\">ahci_pci_device_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#mesg\">mesg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ahci_host_priv\">ahci_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#mmio\">mmio</a> = <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#mmio\">mmio</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ctl\">ctl</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mesg\">mesg</a>.<a class=\"id\" href=\"#event\">event</a> &amp; <a class=\"id\" href=\"#PM_EVENT_SUSPEND\">PM_EVENT_SUSPEND</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AHCI_HFLAG_NO_SUSPEND\">AHCI_HFLAG_NO_SUSPEND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"BIOS update required for suspend/resume\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mesg\">mesg</a>.<a class=\"id\" href=\"#event\">event</a> &amp; <a class=\"id\" href=\"#PM_EVENT_SLEEP\">PM_EVENT_SLEEP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* AHCI spec rev1.1 section 8.3.3:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Software must disable interrupts prior to requesting a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * transition of the HBA to D3 state.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#mmio\">mmio</a> + <a class=\"id\" href=\"#HOST_CTL\">HOST_CTL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctl\">ctl</a> &= ~<a class=\"id\" href=\"#HOST_IRQ_EN\">HOST_IRQ_EN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#ctl\">ctl</a>, <a class=\"id\" href=\"#mmio\">mmio</a> + <a class=\"id\" href=\"#HOST_CTL\">HOST_CTL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#mmio\">mmio</a> + <a class=\"id\" href=\"#HOST_CTL\">HOST_CTL</a>); <span class=\"comment\">/* flush */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_pci_device_suspend\">ata_pci_device_suspend</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#mesg\">mesg</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ahci_pci_device_resume\">ahci_pci_device_resume</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ata_pci_device_do_resume\">ata_pci_device_do_resume</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#power\">power</a>.<a class=\"id\" href=\"#power_state\">power_state</a>.<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#PM_EVENT_SUSPEND\">PM_EVENT_SUSPEND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ahci_pci_reset_controller\">ahci_pci_reset_controller</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ahci_pci_init_controller\">ahci_pci_init_controller</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ata_host_resume\">ata_host_resume</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ahci_configure_dma_masks\">ahci_configure_dma_masks</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, int <a class=\"id\" href=\"#using_dac\">using_dac</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#using_dac\">using_dac</a> &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#pci_set_dma_mask\">pci_set_dma_mask</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(64))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_set_consistent_dma_mask\">pci_set_consistent_dma_mask</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(64));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_set_consistent_dma_mask\">pci_set_consistent_dma_mask</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(32));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"64-bit DMA enable failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_set_dma_mask\">pci_set_dma_mask</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(32));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"32-bit DMA enable failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pci_set_consistent_dma_mask\">pci_set_consistent_dma_mask</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#DMA_BIT_MASK\">DMA_BIT_MASK</a>(32));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"32-bit consistent DMA enable failed\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ahci_pci_print_info\">ahci_pci_print_info</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cc\">cc</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#scc_s\">scc_s</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 0x0a, &amp;<a class=\"id\" href=\"#cc\">cc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cc\">cc</a> == <a class=\"id\" href=\"#PCI_CLASS_STORAGE_IDE\">PCI_CLASS_STORAGE_IDE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scc_s\">scc_s</a> = \"IDE\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#cc\">cc</a> == <a class=\"id\" href=\"#PCI_CLASS_STORAGE_SATA\">PCI_CLASS_STORAGE_SATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scc_s\">scc_s</a> = \"SATA\";", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#cc\">cc</a> == <a class=\"id\" href=\"#PCI_CLASS_STORAGE_RAID\">PCI_CLASS_STORAGE_RAID</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scc_s\">scc_s</a> = \"RAID\";", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scc_s\">scc_s</a> = \"unknown\";", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_print_info\">ahci_print_info</a>(<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#scc_s\">scc_s</a>);", 
"}", 
"", 
"<span class=\"comment\">/* On ASUS P5W DH Deluxe, the second port of PCI device 00:1f.2 is</span>", 
"<span class=\"comment\"> * hardwired to on-board SIMG 4726.  The chipset is ICH8 and doesn't</span>", 
"<span class=\"comment\"> * support PMP and the 4726 either directly exports the device</span>", 
"<span class=\"comment\"> * attached to the first downstream port or acts as a hardware storage</span>", 
"<span class=\"comment\"> * controller and emulate a single ATA device (can be RAID 0/1 or some</span>", 
"<span class=\"comment\"> * other configuration).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * When there's no device attached to the first downstream port of the</span>", 
"<span class=\"comment\"> * 4726, \"Config Disk\" appears, which is a pseudo ATA device to</span>", 
"<span class=\"comment\"> * configure the 4726.  However, ATA emulation of the device is very</span>", 
"<span class=\"comment\"> * lame.  It doesn't send signature D2H Reg FIS after the initial</span>", 
"<span class=\"comment\"> * hardreset, pukes on SRST w/ PMP==0 and has bunch of other issues.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The following function works around the problem by always using</span>", 
"<span class=\"comment\"> * hardreset on the port and not depending on receiving signature FIS</span>", 
"<span class=\"comment\"> * afterward.  If signature FIS isn't received soon, ATA class is</span>", 
"<span class=\"comment\"> * assumed without follow-up softreset.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ahci_p5wdh_workaround\">ahci_p5wdh_workaround</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#sysids\">sysids</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"P5W DH Deluxe\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"ASUSTEK COMPUTER INC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"P5W DH Deluxe\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> == 0 && <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a> == <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0x1f, 2) &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#sysids\">sysids</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[1];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"enabling ASUS P5W DH \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Deluxe on-board SIMG4726 workaround\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#ahci_p5wdh_ops\">ahci_p5wdh_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_LFLAG_NO_SRST\">ATA_LFLAG_NO_SRST</a> | <a class=\"id\" href=\"#ATA_LFLAG_ASSUME_ATA\">ATA_LFLAG_ASSUME_ATA</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* only some SB600 ahci controllers can do 64bit DMA */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ahci_sb600_enable_64bit\">ahci_sb600_enable_64bit</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#sysids\">sysids</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The oldest version known to be broken is 0901 and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * working is 1501 which was released on 2007-10-26.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Enable 64bit DMA on 1501 and anything newer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Please read bko#9412 for more info.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"ASUS M2A-VM\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"ASUSTeK Computer INC.\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"M2A-VM\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = \"20071026\",<span class=\"ts\"/><span class=\"comment\">/* yyyymmdd */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * All BIOS versions for the MSI K9A2 Platinum (MS-7376)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * support 64bit DMA.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * BIOS versions earlier than 1.5 had the Manufacturer DMI</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * fields as \"MICRO-STAR INTERANTIONAL CO.,LTD\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This spelling mistake was fixed in BIOS version 1.5, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 1.5 and later have the Manufacturer as</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"MICRO-STAR INTERNATIONAL CO.,LTD\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * So try to match on DMI_BOARD_VENDOR of \"MICRO-STAR INTER\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * BIOS versions earlier than 1.9 had a Board Product Name</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * DMI field of \"MS-7376\". This was changed to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"K9A2 Platinum (MS-7376)\" in version 1.9, but we can still</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * match on DMI_BOARD_NAME of \"MS-7376\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"MSI K9A2 Platinum\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"MICRO-STAR INTER\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"MS-7376\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#match\">match</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#year\">year</a>, <a class=\"id\" href=\"#month\">month</a>, <a class=\"id\" href=\"#date\">date</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[9];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#match\">match</a> = <a class=\"id\" href=\"#dmi_first_match\">dmi_first_match</a>(<a class=\"id\" href=\"#sysids\">sysids</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> != 0 || <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a> != <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0x12, 0) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#match\">match</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#enable_64bit\">enable_64bit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_get_date\">dmi_get_date</a>(<a class=\"id\" href=\"#DMI_BIOS_DATE\">DMI_BIOS_DATE</a>, &amp;<a class=\"id\" href=\"#year\">year</a>, &amp;<a class=\"id\" href=\"#month\">month</a>, &amp;<a class=\"id\" href=\"#date\">date</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), \"%04d%02d%02d\", <a class=\"id\" href=\"#year\">year</a>, <a class=\"id\" href=\"#month\">month</a>, <a class=\"id\" href=\"#date\">date</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>) >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#enable_64bit\">enable_64bit</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s: BIOS too old, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"forcing 32bit DMA, update BIOS\\n\", <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#enable_64bit\">enable_64bit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%s: enabling 64bit DMA\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#match\">match</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ahci_broken_system_poweroff\">ahci_broken_system_poweroff</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#broken_systems\">broken_systems</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP Compaq nx6310\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq nx6310\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PCI slot number of the controller */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = (void *)0x1FUL,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP Compaq 6720s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"HP Compaq 6720s\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* PCI slot number of the controller */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = (void *)0x1FUL,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#dmi\">dmi</a> = <a class=\"id\" href=\"#dmi_first_match\">dmi_first_match</a>(<a class=\"id\" href=\"#broken_systems\">broken_systems</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dmi\">dmi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#slot\">slot</a> = (unsigned long)<a class=\"id\" href=\"#dmi\">dmi</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* apply the quirk only to on-board controllers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#slot\">slot</a> == <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ahci_broken_suspend\">ahci_broken_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#sysids\">sysids</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * On HP dv[4-6] and HDX18 with earlier BIOSen, link</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to the harddisk doesn't become online after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * resuming from STR.  Warn and fail suspend.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * http://bugzilla.kernel.org/show_bug.cgi?id=12276</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Use dates instead of versions to match as HP is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * apparently recycling both product and version</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * strings.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * http://bugzilla.kernel.org/show_bug.cgi?id=15462</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"dv4\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"HP Pavilion dv4 Notebook PC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = \"20090105\",<span class=\"ts\"/><span class=\"comment\">/* F.30 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"dv5\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"HP Pavilion dv5 Notebook PC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = \"20090506\",<span class=\"ts\"/><span class=\"comment\">/* F.16 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"dv6\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"HP Pavilion dv6 Notebook PC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = \"20090423\",<span class=\"ts\"/><span class=\"comment\">/* F.21 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HDX18\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"HP HDX18 Notebook PC\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = \"20090430\",<span class=\"ts\"/><span class=\"comment\">/* F.23 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Acer eMachines G725 has the same problem.  BIOS</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * V1.03 is known to be broken.  V3.04 is known to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * work.  Inbetween, there are V1.06, V2.06 and V3.03</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that we don't have much idea about.  For now,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * blacklist anything older than V3.04.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * http://bugzilla.kernel.org/show_bug.cgi?id=15104</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"G725\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"eMachines\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"eMachines G725\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = \"20091216\",<span class=\"ts\"/><span class=\"comment\">/* V3.04 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#dmi\">dmi</a> = <a class=\"id\" href=\"#dmi_first_match\">dmi_first_match</a>(<a class=\"id\" href=\"#sysids\">sysids</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#year\">year</a>, <a class=\"id\" href=\"#month\">month</a>, <a class=\"id\" href=\"#date\">date</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[9];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dmi\">dmi</a> || <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> || <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a> != <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>(0x1f, 2))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_get_date\">dmi_get_date</a>(<a class=\"id\" href=\"#DMI_BIOS_DATE\">DMI_BIOS_DATE</a>, &amp;<a class=\"id\" href=\"#year\">year</a>, &amp;<a class=\"id\" href=\"#month\">month</a>, &amp;<a class=\"id\" href=\"#date\">date</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, sizeof(<a class=\"id\" href=\"#buf\">buf</a>), \"%04d%02d%02d\", <a class=\"id\" href=\"#year\">year</a>, <a class=\"id\" href=\"#month\">month</a>, <a class=\"id\" href=\"#date\">date</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#dmi\">dmi</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>) &lt; 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ahci_broken_online\">ahci_broken_online</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ENCODE_BUSDEVFN\">ENCODE_BUSDEVFN</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#slot\">slot</a>, <a class=\"id\" href=\"#func\">func</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>(void *)(unsigned long)(((<a class=\"id\" href=\"#bus\">bus</a>) << 8) | <a class=\"id\" href=\"#PCI_DEVFN\">PCI_DEVFN</a>((<a class=\"id\" href=\"#slot\">slot</a>), (<a class=\"id\" href=\"#func\">func</a>)))", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#sysids\">sysids</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * There are several gigabyte boards which use</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * SIMG5723s configured as hardware RAID.  Certain</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * 5723 firmware revisions shipped there keep the link</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * online but fail to answer properly to SRST or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * IDENTIFY when no device is attached downstream</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * causing libata to retry quite a few times leading</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to excessive detection delay.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * As these firmwares respond to the second reset try</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * with invalid device signature, considering unknown</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sig as offline works around the problem acceptably.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"EP45-DQ6\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Gigabyte Technology Co., Ltd.\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"EP45-DQ6\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = <a class=\"id\" href=\"#ENCODE_BUSDEVFN\">ENCODE_BUSDEVFN</a>(0x0a, 0x00, 0),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"EP45-DS5\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_VENDOR\">DMI_BOARD_VENDOR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Gigabyte Technology Co., Ltd.\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"EP45-DS5\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = <a class=\"id\" href=\"#ENCODE_BUSDEVFN\">ENCODE_BUSDEVFN</a>(0x03, 0x00, 0),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }<span class=\"ts\"/><span class=\"comment\">/* terminate list */</span>", 
"<span class=\"ts\"/>};", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#ENCODE_BUSDEVFN\">ENCODE_BUSDEVFN</a>", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#dmi\">dmi</a> = <a class=\"id\" href=\"#dmi_first_match\">dmi_first_match</a>(<a class=\"id\" href=\"#sysids\">sysids</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#val\">val</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dmi\">dmi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = (unsigned long)<a class=\"id\" href=\"#dmi\">dmi</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> == (<a class=\"id\" href=\"#val\">val</a> >> 8) && <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#devfn\">devfn</a> == (<a class=\"id\" href=\"#val\">val</a> &amp; 0xff);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ATA_ACPI\">CONFIG_ATA_ACPI</a>", 
"static void <a class=\"id\" href=\"#ahci_gtf_filter_workaround\">ahci_gtf_filter_workaround</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{", 
"<span class=\"ts\"/>static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#sysids\">sysids</a>[] = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Aspire 3810T issues a bunch of SATA enable commands</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * via _GTF including an invalid one and one which is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * rejected by the device.  Among the successful ones</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is FPDMA non-zero offset enable which when enabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * only on the drive side leads to NCQ command</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * failures.  Filter it out.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Aspire 3810T\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Acer\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"Aspire 3810T\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = (void *)<a class=\"id\" href=\"#ATA_ACPI_FILTER_FPDMA_OFFSET\">ATA_ACPI_FILTER_FPDMA_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/><span class=\"ts\"/>{ }", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#dmi\">dmi</a> = <a class=\"id\" href=\"#dmi_first_match\">dmi_first_match</a>(<a class=\"id\" href=\"#sysids\">sysids</a>);", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dmi\">dmi</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filter\">filter</a> = (unsigned long)<a class=\"id\" href=\"#dmi\">dmi</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   \"applying extra ACPI _GTF filter 0x%x for %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#filter\">filter</a>, <a class=\"id\" href=\"#dmi\">dmi</a>-><a class=\"id\" href=\"#ident\">ident</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#n_ports\">n_ports</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_link\">ata_link</a> *<a class=\"id\" href=\"#link\">link</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_device\">ata_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_link\">ata_for_each_link</a>(<a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#EDGE\">EDGE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_for_each_dev\">ata_for_each_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#ALL\">ALL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#gtf_filter\">gtf_filter</a> |= <a class=\"id\" href=\"#filter\">filter</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ahci_gtf_filter_workaround\">ahci_gtf_filter_workaround</a>(struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>)", 
"{}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#ahci_init_one\">ahci_init_one</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ent\">ent</a>)", 
"{", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#printed_version\">printed_version</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#board_id\">board_id</a> = <a class=\"id\" href=\"#ent\">ent</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> <a class=\"id\" href=\"#pi\">pi</a> = <a class=\"id\" href=\"#ahci_port_info\">ahci_port_info</a>[<a class=\"id\" href=\"#board_id\">board_id</a>];", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#ata_port_info\">ata_port_info</a> *<a class=\"id\" href=\"#ppi\">ppi</a>[] = { &amp;<a class=\"id\" href=\"#pi\">pi</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ahci_host_priv\">ahci_host_priv</a> *<a class=\"id\" href=\"#hpriv\">hpriv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_host\">ata_host</a> *<a class=\"id\" href=\"#host\">host</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n_ports\">n_ports</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VPRINTK\">VPRINTK</a>(\"ENTER\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>((int)<a class=\"id\" href=\"#ATA_MAX_QUEUE\">ATA_MAX_QUEUE</a> &gt; <a class=\"id\" href=\"#AHCI_MAX_CMDS\">AHCI_MAX_CMDS</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#printed_version\">printed_version</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"version \" <a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a> \"\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The AHCI driver can only drive the SATA ports, the PATA driver</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   can drive them all so if both drivers are selected make sure</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   AHCI stays out of the way */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_MARVELL\">PCI_VENDOR_ID_MARVELL</a> && !<a class=\"id\" href=\"#marvell_enable\">marvell_enable</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For some reason, MCP89 on MacBook 7,1 doesn't work with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ahci, use ata_generic instead.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_NVIDIA\">PCI_VENDOR_ID_NVIDIA</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#PCI_DEVICE_ID_NVIDIA_NFORCE_MCP89_SATA\">PCI_DEVICE_ID_NVIDIA_NFORCE_MCP89_SATA</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_APPLE\">PCI_VENDOR_ID_APPLE</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a> == 0xcb89)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Promise's PDC42819 is a SAS/SATA controller that has an AHCI mode.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * At the moment, we can only use the AHCI mode. Let the users know</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that for SAS drives they're out of luck.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_PROMISE\">PCI_VENDOR_ID_PROMISE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"PDC42819 \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"can only drive SATA devices with this driver\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* acquire resources */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pcim_enable_device\">pcim_enable_device</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* AHCI controllers often implement SFF compatible interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Grab all PCI BARs just in case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#pcim_iomap_regions_request_all\">pcim_iomap_regions_request_all</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 1 << <a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a>, <a class=\"id\" href=\"#DRV_NAME\">DRV_NAME</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcim_pin_device\">pcim_pin_device</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#PCI_VENDOR_ID_INTEL\">PCI_VENDOR_ID_INTEL</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == 0x2652 || <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#device\">device</a> == 0x2653)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#map\">map</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ICH6s share the same PCI ID for both piix and ahci</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * modes.  Enabling ahci mode while MAP indicates</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * combined mode is a bad idea.  Yield to ata_piix.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#ICH_MAP\">ICH_MAP</a>, &amp;<a class=\"id\" href=\"#map\">map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a> &amp; 0x3) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"controller is in \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"combined mode, can't enable AHCI mode\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a> = <a class=\"id\" href=\"#devm_kzalloc\">devm_kzalloc</a>(<a class=\"id\" href=\"#dev\">dev</a>, sizeof(*<a class=\"id\" href=\"#hpriv\">hpriv</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpriv\">hpriv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> |= (unsigned long)<a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* MCP65 revision A1 and A2 can't do MSI */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#board_id\">board_id</a> == <a class=\"id\" href=\"#board_ahci_mcp65\">board_ahci_mcp65</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#revision\">revision</a> == 0xa1 || <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#revision\">revision</a> == 0xa2))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AHCI_HFLAG_NO_MSI\">AHCI_HFLAG_NO_MSI</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SB800 does NOT need the workaround to ignore SERR_INTERNAL */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#board_id\">board_id</a> == <a class=\"id\" href=\"#board_ahci_sb700\">board_ahci_sb700</a> && <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#revision\">revision</a> >= 0x40)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#AHCI_HFLAG_IGN_SERR_INTERNAL\">AHCI_HFLAG_IGN_SERR_INTERNAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* only some SB600s can do 64bit DMA */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ahci_sb600_enable_64bit\">ahci_sb600_enable_64bit</a>(<a class=\"id\" href=\"#pdev\">pdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#AHCI_HFLAG_32BIT_ONLY\">AHCI_HFLAG_32BIT_ONLY</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AHCI_HFLAG_NO_MSI\">AHCI_HFLAG_NO_MSI</a>) || <a class=\"id\" href=\"#pci_enable_msi\">pci_enable_msi</a>(<a class=\"id\" href=\"#pdev\">pdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_intx\">pci_intx</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#mmio\">mmio</a> = <a class=\"id\" href=\"#pcim_iomap_table\">pcim_iomap_table</a>(<a class=\"id\" href=\"#pdev\">pdev</a>)[<a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* save initial config */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_pci_save_initial_config\">ahci_pci_save_initial_config</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#hpriv\">hpriv</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* prepare host */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#cap\">cap</a> &amp; <a class=\"id\" href=\"#HOST_CAP_NCQ\">HOST_CAP_NCQ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_FLAG_NCQ\">ATA_FLAG_NCQ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Auto-activate optimization is supposed to be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * supported on all AHCI controllers indicating NCQ</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * capability, but it seems to be broken on some</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * chipsets including NVIDIAs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AHCI_HFLAG_NO_FPDMA_AA\">AHCI_HFLAG_NO_FPDMA_AA</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_FLAG_FPDMA_AA\">ATA_FLAG_FPDMA_AA</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#cap\">cap</a> &amp; <a class=\"id\" href=\"#HOST_CAP_PMP\">HOST_CAP_PMP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_FLAG_PMP\">ATA_FLAG_PMP</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_set_em_messages\">ahci_set_em_messages</a>(<a class=\"id\" href=\"#hpriv\">hpriv</a>, &amp;<a class=\"id\" href=\"#pi\">pi</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ahci_broken_system_poweroff\">ahci_broken_system_poweroff</a>(<a class=\"id\" href=\"#pdev\">pdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_FLAG_NO_POWEROFF_SPINDOWN\">ATA_FLAG_NO_POWEROFF_SPINDOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"quirky BIOS, skipping spindown on poweroff\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ahci_broken_suspend\">ahci_broken_suspend</a>(<a class=\"id\" href=\"#pdev\">pdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AHCI_HFLAG_NO_SUSPEND\">AHCI_HFLAG_NO_SUSPEND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>, &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"BIOS update required for suspend/resume\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ahci_broken_online\">ahci_broken_online</a>(<a class=\"id\" href=\"#pdev\">pdev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AHCI_HFLAG_SRST_TOUT_IS_OFFLINE\">AHCI_HFLAG_SRST_TOUT_IS_OFFLINE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"online status unreliable, applying workaround\\n\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* CAP.NP sometimes indicate the index of the last enabled</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * port, at other times, that of the last possible port, so</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * determining the maximum port number requires looking at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * both CAP.NP and port_map.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#n_ports\">n_ports</a> = <a class=\"id\" href=\"#max\">max</a>(<a class=\"id\" href=\"#ahci_nr_ports\">ahci_nr_ports</a>(<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#cap\">cap</a>), <a class=\"id\" href=\"#fls\">fls</a>(<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#port_map\">port_map</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a> = <a class=\"id\" href=\"#ata_host_alloc_pinfo\">ata_host_alloc_pinfo</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ppi\">ppi</a>, <a class=\"id\" href=\"#n_ports\">n_ports</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#host\">host</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = <a class=\"id\" href=\"#hpriv\">hpriv</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#cap\">cap</a> &amp; <a class=\"id\" href=\"#HOST_CAP_SSS\">HOST_CAP_SSS</a>) || <a class=\"id\" href=\"#ahci_ignore_sss\">ahci_ignore_sss</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#ATA_HOST_PARALLEL_SCAN\">ATA_HOST_PARALLEL_SCAN</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"ahci: SSS flag set, parallel bus scan disabled\\n\");", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pi\">pi</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_EM\">ATA_FLAG_EM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ahci_reset_em\">ahci_reset_em</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#n_ports\">n_ports</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ata_port\">ata_port</a> *<a class=\"id\" href=\"#ap\">ap</a> = <a class=\"id\" href=\"#host\">host</a>-><a class=\"id\" href=\"#ports\">ports</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_pbar_desc\">ata_port_pbar_desc</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a>, -1, \"abar\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ata_port_pbar_desc\">ata_port_pbar_desc</a>(<a class=\"id\" href=\"#ap\">ap</a>, <a class=\"id\" href=\"#AHCI_PCI_BAR\">AHCI_PCI_BAR</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   0x100 + <a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#port_no\">port_no</a> * 0x80, \"port\");", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set initial link pm policy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#pm_policy\">pm_policy</a> = <a class=\"id\" href=\"#NOT_AVAILABLE\">NOT_AVAILABLE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* set enclosure management message type */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ATA_FLAG_EM\">ATA_FLAG_EM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#em_message_type\">em_message_type</a> = <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#em_msg_type\">em_msg_type</a>;", 
"", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* disabled/not-implemented port */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#port_map\">port_map</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ap\">ap</a>-><a class=\"id\" href=\"#ops\">ops</a> = &amp;<a class=\"id\" href=\"#ata_dummy_port_ops\">ata_dummy_port_ops</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* apply workaround for ASUS P5W DH Deluxe mainboard */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_p5wdh_workaround\">ahci_p5wdh_workaround</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* apply gtf filter quirk */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_gtf_filter_workaround\">ahci_gtf_filter_workaround</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initialize adapter */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ahci_configure_dma_masks\">ahci_configure_dma_masks</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#hpriv\">hpriv</a>-><a class=\"id\" href=\"#cap\">cap</a> &amp; <a class=\"id\" href=\"#HOST_CAP_64\">HOST_CAP_64</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ahci_pci_reset_controller\">ahci_pci_reset_controller</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_pci_init_controller\">ahci_pci_init_controller</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ahci_pci_print_info\">ahci_pci_print_info</a>(<a class=\"id\" href=\"#host\">host</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_master\">pci_set_master</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ata_host_activate\">ata_host_activate</a>(<a class=\"id\" href=\"#host\">host</a>, <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#ahci_interrupt\">ahci_interrupt</a>, <a class=\"id\" href=\"#IRQF_SHARED\">IRQF_SHARED</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#ahci_sht\">ahci_sht</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#ahci_init\">ahci_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_register_driver\">pci_register_driver</a>(&amp;<a class=\"id\" href=\"#ahci_pci_driver\">ahci_pci_driver</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#ahci_exit\">ahci_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_unregister_driver\">pci_unregister_driver</a>(&amp;<a class=\"id\" href=\"#ahci_pci_driver\">ahci_pci_driver</a>);", 
"}", 
"", 
"", 
"<a class=\"id\" href=\"#MODULE_AUTHOR\">MODULE_AUTHOR</a>(\"Jeff Garzik\");", 
"<a class=\"id\" href=\"#MODULE_DESCRIPTION\">MODULE_DESCRIPTION</a>(\"AHCI SATA low-level driver\");", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
"<a class=\"id\" href=\"#MODULE_DEVICE_TABLE\">MODULE_DEVICE_TABLE</a>(<a class=\"id\" href=\"#pci\">pci</a>, <a class=\"id\" href=\"#ahci_pci_tbl\">ahci_pci_tbl</a>);", 
"<a class=\"id\" href=\"#MODULE_VERSION\">MODULE_VERSION</a>(<a class=\"id\" href=\"#DRV_VERSION\">DRV_VERSION</a>);", 
"", 
"<a class=\"id\" href=\"#module_init\">module_init</a>(<a class=\"id\" href=\"#ahci_init\">ahci_init</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#ahci_exit\">ahci_exit</a>);", 
];
xr_frag_insert('l/33/9badeeeca7c930e50804ad16381d0d73a2a91e.xr', __xr_tmp);
