var __xr_tmp = [
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct debug_obj - representaion of an tracked object</span>", 
"<span class=\"comment\"> * @node:<span class=\"ts\"/>hlist node to link the object into the tracker list</span>", 
"<span class=\"comment\"> * @state:<span class=\"ts\"/>tracked object state</span>", 
"<span class=\"comment\"> * @astate:<span class=\"ts\"/>current active state</span>", 
"<span class=\"comment\"> * @object:<span class=\"ts\"/>pointer to the real object</span>", 
"<span class=\"comment\"> * @descr:<span class=\"ts\"/>pointer to an object type specific debug description structure</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#debug_obj\">debug_obj</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#debug_obj_state\">debug_obj_state</a><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#astate\">astate</a>;", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a><span class=\"ts\"/>*<a class=\"id\" href=\"#descr\">descr</a>;", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct debug_obj_descr - object type specific debug description structure</span>", 
"<span class=\"comment\"> * @name:<span class=\"ts\"/><span class=\"ts\"/>name of the object typee</span>", 
"<span class=\"comment\"> * @fixup_init:<span class=\"ts\"/><span class=\"ts\"/>fixup function, which is called when the init check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>fails</span>", 
"<span class=\"comment\"> * @fixup_activate:<span class=\"ts\"/>fixup function, which is called when the activate check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>fails</span>", 
"<span class=\"comment\"> * @fixup_destroy:<span class=\"ts\"/>fixup function, which is called when the destroy check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>fails</span>", 
"<span class=\"comment\"> * @fixup_free:<span class=\"ts\"/><span class=\"ts\"/>fixup function, which is called when the free check</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>fails</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#fixup_init\">fixup_init</a>)<span class=\"ts\"/>(void *<a class=\"id\" href=\"#addr\">addr</a>, enum <a class=\"id\" href=\"#debug_obj_state\">debug_obj_state</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#fixup_activate\">fixup_activate</a>)<span class=\"ts\"/>(void *<a class=\"id\" href=\"#addr\">addr</a>, enum <a class=\"id\" href=\"#debug_obj_state\">debug_obj_state</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#fixup_destroy\">fixup_destroy</a>)<span class=\"ts\"/>(void *<a class=\"id\" href=\"#addr\">addr</a>, enum <a class=\"id\" href=\"#debug_obj_state\">debug_obj_state</a> <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#fixup_free\">fixup_free</a>)<span class=\"ts\"/>(void *<a class=\"id\" href=\"#addr\">addr</a>, enum <a class=\"id\" href=\"#debug_obj_state\">debug_obj_state</a> <a class=\"id\" href=\"#state\">state</a>);", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_OBJECTS\">CONFIG_DEBUG_OBJECTS</a>", 
"extern void <a class=\"id\" href=\"#debug_object_init\">debug_object_init</a>      (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>);", 
"extern void", 
"<a class=\"id\" href=\"#debug_object_init_on_stack\">debug_object_init_on_stack</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>);", 
"extern void <a class=\"id\" href=\"#debug_object_activate\">debug_object_activate</a>  (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>);", 
"extern void <a class=\"id\" href=\"#debug_object_deactivate\">debug_object_deactivate</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>);", 
"extern void <a class=\"id\" href=\"#debug_object_destroy\">debug_object_destroy</a>   (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>);", 
"extern void <a class=\"id\" href=\"#debug_object_free\">debug_object_free</a>      (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Active state:</span>", 
"<span class=\"comment\"> * - Set at 0 upon initialization.</span>", 
"<span class=\"comment\"> * - Must return to 0 before deactivation.</span>", 
"<span class=\"comment\"> */</span>", 
"extern void", 
"<a class=\"id\" href=\"#debug_object_active_state\">debug_object_active_state</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#expect\">expect</a>, unsigned int <a class=\"id\" href=\"#next\">next</a>);", 
"", 
"extern void <a class=\"id\" href=\"#debug_objects_early_init\">debug_objects_early_init</a>(void);", 
"extern void <a class=\"id\" href=\"#debug_objects_mem_init\">debug_objects_mem_init</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_object_init\">debug_object_init</a>      (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_object_init_on_stack\">debug_object_init_on_stack</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_object_activate\">debug_object_activate</a>  (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_object_deactivate\">debug_object_deactivate</a>(void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_object_destroy\">debug_object_destroy</a>   (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_object_free\">debug_object_free</a>      (void *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#debug_obj_descr\">debug_obj_descr</a> *<a class=\"id\" href=\"#descr\">descr</a>) { }", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#debug_objects_early_init\">debug_objects_early_init</a>(void) { }", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#debug_objects_mem_init\">debug_objects_mem_init</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_OBJECTS_FREE\">CONFIG_DEBUG_OBJECTS_FREE</a>", 
"extern void <a class=\"id\" href=\"#debug_check_no_obj_freed\">debug_check_no_obj_freed</a>(const void *<a class=\"id\" href=\"#address\">address</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void", 
"<a class=\"id\" href=\"#debug_check_no_obj_freed\">debug_check_no_obj_freed</a>(const void *<a class=\"id\" href=\"#address\">address</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/33/f752e87b0618d3404ed98fb8ec43828170d2c2.xr', __xr_tmp);
