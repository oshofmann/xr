var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_SETUP_H\">_ASM_X86_SETUP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_SETUP_H\">_ASM_X86_SETUP_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#COMMAND_LINE_SIZE\">COMMAND_LINE_SIZE</a> 2048", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__i386__\">__i386__</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pfn\">pfn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reserved space for vmalloc and iomap - defined in asm/page.h</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAXMEM_PFN\">MAXMEM_PFN</a><span class=\"ts\"/><a class=\"id\" href=\"#PFN_DOWN\">PFN_DOWN</a>(<a class=\"id\" href=\"#MAXMEM\">MAXMEM</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_NONPAE_PFN\">MAX_NONPAE_PFN</a><span class=\"ts\"/>(1 << 20)", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __i386__ */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PARAM_SIZE\">PARAM_SIZE</a> 4096<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* sizeof(struct boot_params) */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OLD_CL_MAGIC\">OLD_CL_MAGIC</a><span class=\"ts\"/><span class=\"ts\"/>0xA33F", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#OLD_CL_ADDRESS\">OLD_CL_ADDRESS</a><span class=\"ts\"/><span class=\"ts\"/>0x020<span class=\"ts\"/><span class=\"comment\">/* Relative to real mode data */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NEW_CL_POINTER\">NEW_CL_POINTER</a><span class=\"ts\"/><span class=\"ts\"/>0x228<span class=\"ts\"/><span class=\"comment\">/* Relative to real mode data */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ASSEMBLY__\">__ASSEMBLY__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bootparam\">bootparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* Interrupt control for vSMPowered x86_64 systems */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_64\">CONFIG_X86_64</a>", 
"void <a class=\"id\" href=\"#vsmp_init\">vsmp_init</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#vsmp_init\">vsmp_init</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#setup_bios_corruption_check\">setup_bios_corruption_check</a>(void);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_VISWS\">CONFIG_X86_VISWS</a>", 
"extern void <a class=\"id\" href=\"#visws_early_detect\">visws_early_detect</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#visws_early_detect\">visws_early_detect</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern unsigned long <a class=\"id\" href=\"#saved_video_mode\">saved_video_mode</a>;", 
"", 
"extern void <a class=\"id\" href=\"#reserve_standard_io_resources\">reserve_standard_io_resources</a>(void);", 
"extern void <a class=\"id\" href=\"#i386_reserve_resources\">i386_reserve_resources</a>(void);", 
"extern void <a class=\"id\" href=\"#setup_default_timer_irq\">setup_default_timer_irq</a>(void);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_MRST\">CONFIG_X86_MRST</a>", 
"extern void <a class=\"id\" href=\"#x86_mrst_early_setup\">x86_mrst_early_setup</a>(void);", 
"#else", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#x86_mrst_early_setup\">x86_mrst_early_setup</a>(void) { }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SETUP\">_SETUP</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is set up by the setup-routine at boot-time</span>", 
"<span class=\"comment\"> */</span>", 
"extern struct <a class=\"id\" href=\"#boot_params\">boot_params</a> <a class=\"id\" href=\"#boot_params\">boot_params</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Do NOT EVER look at the BIOS memory size location.</span>", 
"<span class=\"comment\"> * It does not work on many machines.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LOWMEMSIZE\">LOWMEMSIZE</a>()<span class=\"ts\"/>(0x9f000)", 
"", 
"<span class=\"comment\">/* exceedingly early brk-like allocator */</span>", 
"extern unsigned long <a class=\"id\" href=\"#_brk_end\">_brk_end</a>;", 
"void *<a class=\"id\" href=\"#extend_brk\">extend_brk</a>(<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#align\">align</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reserve space in the brk section.  The name must be unique within</span>", 
"<span class=\"comment\"> * the file, and somewhat descriptive.  The size is in bytes.  Must be</span>", 
"<span class=\"comment\"> * used at file scope.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (This uses a temp function to wrap the asm so we can pass it the</span>", 
"<span class=\"comment\"> * size parameter; otherwise we wouldn't be able to.  We can't use a</span>", 
"<span class=\"comment\"> * \"section\" attribute on a normal variable because it always ends up</span>", 
"<span class=\"comment\"> * being @progbits, which ends up allocating space in the vmlinux</span>", 
"<span class=\"comment\"> * executable.)</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESERVE_BRK\">RESERVE_BRK</a>(<a class=\"id\" href=\"#name\">name</a>,<a class=\"id\" href=\"#sz\">sz</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>static void <a class=\"id\" href=\"#__section\">__section</a>(.<a class=\"id\" href=\"#discard\">discard</a>.<a class=\"id\" href=\"#text\">text</a>) <a class=\"id\" href=\"#__used\">__used</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__brk_reservation_fn_\">__brk_reservation_fn_</a>##<a class=\"id\" href=\"#name\">name</a>##<a class=\"id\" href=\"#__\">__</a>(void) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#asm\">asm</a> volatile (<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\".pushsection .brk_reservation,\\\"aw\\\",@nobits;\" \\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\".brk.\" #<a class=\"id\" href=\"#name\">name</a> \":\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" 1:.skip %c0;\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" .size .brk.\" #<a class=\"id\" href=\"#name\">name</a> \", . - 1b;\"<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\" .popsection\"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>: : \"i\" (<a class=\"id\" href=\"#sz\">sz</a>));<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__i386__\">__i386__</a>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#i386_start_kernel\">i386_start_kernel</a>(void);", 
"extern void <a class=\"id\" href=\"#probe_roms\">probe_roms</a>(void);", 
"", 
"#else", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#x86_64_start_kernel\">x86_64_start_kernel</a>(char *<a class=\"id\" href=\"#real_mode\">real_mode</a>);", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#x86_64_start_reservations\">x86_64_start_reservations</a>(char *<a class=\"id\" href=\"#real_mode_data\">real_mode_data</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __i386__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _SETUP */</span>", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#RESERVE_BRK\">RESERVE_BRK</a>(<a class=\"id\" href=\"#name\">name</a>,<a class=\"id\" href=\"#sz\">sz</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pushsection\">pushsection</a> .<a class=\"id\" href=\"#brk_reservation\">brk_reservation</a>,\"aw\",@<a class=\"id\" href=\"#nobits\">nobits</a>;<span class=\"ts\"/>\\", 
".<a class=\"id\" href=\"#brk\">brk</a>.<a class=\"id\" href=\"#name\">name</a>:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"1:<span class=\"ts\"/>.<a class=\"id\" href=\"#skip\">skip</a> <a class=\"id\" href=\"#sz\">sz</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#size\">size</a> .<a class=\"id\" href=\"#brk\">brk</a>.<a class=\"id\" href=\"#name\">name</a>,.-1<a class=\"id\" href=\"#b\">b</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#popsection\">popsection</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __ASSEMBLY__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/*  __KERNEL__  */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_SETUP_H */</span>", 
];
xr_frag_insert('l/34/378fd80e4b0d05f21b5ee29cb1d04fd4918db1.xr', __xr_tmp);
