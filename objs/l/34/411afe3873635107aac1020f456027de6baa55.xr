var __xr_tmp = [
"};", 
"", 
"static int <a class=\"id\" href=\"#elf_note_info_init\">elf_note_info_init</a>(struct <a class=\"id\" href=\"#elf_note_info\">elf_note_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#info\">info</a>, 0, sizeof(*<a class=\"id\" href=\"#info\">info</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_list\">thread_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate space for six ELF notes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(6 * sizeof(struct <a class=\"id\" href=\"#memelfnote\">memelfnote</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#notes_free\">notes_free</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#psinfo_free\">psinfo_free</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#prstatus_free\">prstatus_free</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ELF_CORE_COPY_XFPREGS\">ELF_CORE_COPY_XFPREGS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#xfpu\">xfpu</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#xfpu\">xfpu</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#xfpu\">xfpu</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fpu_free\">fpu_free</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ELF_CORE_COPY_XFPREGS\">ELF_CORE_COPY_XFPREGS</a>", 
" <a class=\"id\" href=\"#fpu_free\">fpu_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
" <a class=\"id\" href=\"#prstatus_free\">prstatus_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>);", 
" <a class=\"id\" href=\"#psinfo_free\">psinfo_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a>);", 
" <a class=\"id\" href=\"#notes_free\">notes_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#fill_note_info\">fill_note_info</a>(struct <a class=\"id\" href=\"#elfhdr\">elfhdr</a> *<a class=\"id\" href=\"#elf\">elf</a>, int <a class=\"id\" href=\"#phdrs\">phdrs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#elf_note_info\">elf_note_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  long <a class=\"id\" href=\"#signr\">signr</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elf_note_info_init\">elf_note_info_init</a>(<a class=\"id\" href=\"#info\">info</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#signr\">signr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#core_thread\">core_thread</a> *<a class=\"id\" href=\"#ct\">ct</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#elf_thread_status\">elf_thread_status</a> *<a class=\"id\" href=\"#ets\">ets</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#ct\">ct</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#core_state\">core_state</a>-><a class=\"id\" href=\"#dumper\">dumper</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ct\">ct</a>; <a class=\"id\" href=\"#ct\">ct</a> = <a class=\"id\" href=\"#ct\">ct</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ets\">ets</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#ets\">ets</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ets\">ets</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ets\">ets</a>-><a class=\"id\" href=\"#thread\">thread</a> = <a class=\"id\" href=\"#ct\">ct</a>-><a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#ets\">ets</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_list\">thread_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_list\">thread_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#sz\">sz</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ets\">ets</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#elf_thread_status\">elf_thread_status</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> = <a class=\"id\" href=\"#elf_dump_thread_status\">elf_dump_thread_status</a>(<a class=\"id\" href=\"#signr\">signr</a>, <a class=\"id\" href=\"#ets\">ets</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_status_size\">thread_status_size</a> += <a class=\"id\" href=\"#sz\">sz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* now collect the dump for the current */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>, 0, sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_prstatus\">fill_prstatus</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>, <a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#signr\">signr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elf_core_copy_regs\">elf_core_copy_regs</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>-><a class=\"id\" href=\"#pr_reg\">pr_reg</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up header */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_elf_header\">fill_elf_header</a>(<a class=\"id\" href=\"#elf\">elf</a>, <a class=\"id\" href=\"#phdrs\">phdrs</a>, <a class=\"id\" href=\"#ELF_ARCH\">ELF_ARCH</a>, <a class=\"id\" href=\"#ELF_CORE_EFLAGS\">ELF_CORE_EFLAGS</a>, <a class=\"id\" href=\"#ELF_OSABI\">ELF_OSABI</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set up the notes in similar form to SVR4 core dumps made</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with info from their /proc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_note\">fill_note</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a> + 0, \"CORE\", <a class=\"id\" href=\"#NT_PRSTATUS\">NT_PRSTATUS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>), <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_psinfo\">fill_psinfo</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#group_leader\">group_leader</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_note\">fill_note</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a> + 1, \"CORE\", <a class=\"id\" href=\"#NT_PRPSINFO\">NT_PRPSINFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a>), <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#numnote\">numnote</a> = 2;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fill_auxv_note\">fill_auxv_note</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a>[<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#numnote\">numnote</a>++], <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to dump the FPU. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>-><a class=\"id\" href=\"#pr_fpvalid\">pr_fpvalid</a> = <a class=\"id\" href=\"#elf_core_copy_task_fpregs\">elf_core_copy_task_fpregs</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#regs\">regs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>-><a class=\"id\" href=\"#pr_fpvalid\">pr_fpvalid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_note\">fill_note</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a> + <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#numnote\">numnote</a>++,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"CORE\", <a class=\"id\" href=\"#NT_PRFPREG\">NT_PRFPREG</a>, sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a>), <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ELF_CORE_COPY_XFPREGS\">ELF_CORE_COPY_XFPREGS</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#elf_core_copy_task_xfpregs\">elf_core_copy_task_xfpregs</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#xfpu\">xfpu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_note\">fill_note</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a> + <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#numnote\">numnote</a>++,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"LINUX\", <a class=\"id\" href=\"#ELF_CORE_XFPREG_TYPE\">ELF_CORE_XFPREG_TYPE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  sizeof(*<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#xfpu\">xfpu</a>), <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#xfpu\">xfpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#get_note_info_size\">get_note_info_size</a>(struct <a class=\"id\" href=\"#elf_note_info\">elf_note_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sz\">sz</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#numnote\">numnote</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> += <a class=\"id\" href=\"#notesize\">notesize</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> += <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_status_size\">thread_status_size</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sz\">sz</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#write_note_info\">write_note_info</a>(struct <a class=\"id\" href=\"#elf_note_info\">elf_note_info</a> *<a class=\"id\" href=\"#info\">info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#foffset\">foffset</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#numnote\">numnote</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#writenote\">writenote</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#foffset\">foffset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* write out the thread status notes section */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_list\">thread_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#elf_thread_status\">elf_thread_status</a> *<a class=\"id\" href=\"#tmp\">tmp</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#t\">t</a>, struct <a class=\"id\" href=\"#elf_thread_status\">elf_thread_status</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#num_notes\">num_notes</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#writenote\">writenote</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#notes\">notes</a>[<a class=\"id\" href=\"#i\">i</a>], <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#foffset\">foffset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_note_info\">free_note_info</a>(struct <a class=\"id\" href=\"#elf_note_info\">elf_note_info</a> *<a class=\"id\" href=\"#info\">info</a>)", 
"{", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#list_empty\">list_empty</a>(&amp;<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_list\">thread_list</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#thread_list\">thread_list</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, struct <a class=\"id\" href=\"#elf_thread_status\">elf_thread_status</a>, <a class=\"id\" href=\"#list\">list</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#prstatus\">prstatus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#psinfo\">psinfo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#notes\">notes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#fpu\">fpu</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ELF_CORE_COPY_XFPREGS\">ELF_CORE_COPY_XFPREGS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#xfpu\">xfpu</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#first_vma\">first_vma</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#gate_vma\">gate_vma</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap\">mmap</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#gate_vma\">gate_vma</a>;", 
"}", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helper function for iterating across a vma list.  It ensures that the caller</span>", 
"<span class=\"comment\"> * will visit `gate_vma' prior to terminating the search.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#next_vma\">next_vma</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#this_vma\">this_vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#gate_vma\">gate_vma</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#this_vma\">this_vma</a>-><a class=\"id\" href=\"#vm_next\">vm_next</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#this_vma\">this_vma</a> == <a class=\"id\" href=\"#gate_vma\">gate_vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#gate_vma\">gate_vma</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#fill_extnum_info\">fill_extnum_info</a>(struct <a class=\"id\" href=\"#elfhdr\">elfhdr</a> *<a class=\"id\" href=\"#elf\">elf</a>, struct <a class=\"id\" href=\"#elf_shdr\">elf_shdr</a> *<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#elf_addr_t\">elf_addr_t</a> <a class=\"id\" href=\"#e_shoff\">e_shoff</a>, int <a class=\"id\" href=\"#segs\">segs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elf\">elf</a>-><a class=\"id\" href=\"#e_shoff\">e_shoff</a> = <a class=\"id\" href=\"#e_shoff\">e_shoff</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elf\">elf</a>-><a class=\"id\" href=\"#e_shentsize\">e_shentsize</a> = sizeof(*<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elf\">elf</a>-><a class=\"id\" href=\"#e_shnum\">e_shnum</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elf\">elf</a>-><a class=\"id\" href=\"#e_shstrndx\">e_shstrndx</a> = <a class=\"id\" href=\"#SHN_UNDEF\">SHN_UNDEF</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>, 0, sizeof(*<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>-><a class=\"id\" href=\"#sh_type\">sh_type</a> = <a class=\"id\" href=\"#SHT_NULL\">SHT_NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>-><a class=\"id\" href=\"#sh_size\">sh_size</a> = <a class=\"id\" href=\"#elf\">elf</a>-><a class=\"id\" href=\"#e_shnum\">e_shnum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>-><a class=\"id\" href=\"#sh_link\">sh_link</a> = <a class=\"id\" href=\"#elf\">elf</a>-><a class=\"id\" href=\"#e_shstrndx\">e_shstrndx</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>-><a class=\"id\" href=\"#sh_info\">sh_info</a> = <a class=\"id\" href=\"#segs\">segs</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#elf_core_vma_data_size\">elf_core_vma_data_size</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#gate_vma\">gate_vma</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#mm_flags\">mm_flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = 0;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#first_vma\">first_vma</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#gate_vma\">gate_vma</a>); <a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#next_vma\">next_vma</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#gate_vma\">gate_vma</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#vma_dump_size\">vma_dump_size</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#mm_flags\">mm_flags</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#size\">size</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Actual dumper</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is a two-pass process; first we find the offsets of the bits,</span>", 
"<span class=\"comment\"> * and then they are actually written out.  If we run out of core limit</span>", 
"<span class=\"comment\"> * we just truncate.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#elf_core_dump\">elf_core_dump</a>(struct <a class=\"id\" href=\"#coredump_params\">coredump_params</a> *<a class=\"id\" href=\"#cprm\">cprm</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#has_dumped\">has_dumped</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_segment_t\">mm_segment_t</a> <a class=\"id\" href=\"#fs\">fs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#segs\">segs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, *<a class=\"id\" href=\"#gate_vma\">gate_vma</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elfhdr\">elfhdr</a> *<a class=\"id\" href=\"#elf\">elf</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a> = 0, <a class=\"id\" href=\"#dataoff\">dataoff</a>, <a class=\"id\" href=\"#foffset\">foffset</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elf_note_info\">elf_note_info</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elf_phdr\">elf_phdr</a> *<a class=\"id\" href=\"#phdr4note\">phdr4note</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#elf_shdr\">elf_shdr</a> *<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#Elf_Half\">Elf_Half</a> <a class=\"id\" href=\"#e_phnum\">e_phnum</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elf_addr_t\">elf_addr_t</a> <a class=\"id\" href=\"#e_shoff\">e_shoff</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We no longer stop all VM operations.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is because those proceses that could possibly change map_count</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * or the mmap / vma pages are now blocked in do_exit on current</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * finishing this core dump.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only ptrace can touch these memory addresses, but it doesn't change</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the map_count or the pages allocated. So no possibility of crashing</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * exists while dumping the mm-&gt;vm_next areas to the core file.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"  ", 
"<span class=\"ts\"/><span class=\"comment\">/* alloc memory for large data structures: too large to be on stack */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#elf\">elf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#elf\">elf</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elf\">elf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The number of segs are recored into ELF header as 16bit value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Please check DEFAULT_MAX_MAP_COUNT definition when you modify here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#map_count\">map_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a> += <a class=\"id\" href=\"#elf_core_extra_phdrs\">elf_core_extra_phdrs</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gate_vma\">gate_vma</a> = <a class=\"id\" href=\"#get_gate_vma\">get_gate_vma</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gate_vma\">gate_vma</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* for notes section */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#segs\">segs</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If segs &gt; PN_XNUM(0xffff), then e_phnum overflows. To avoid</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this, kernel supports extended numbering. Have a look at</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * include/linux/elf.h for further information. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e_phnum\">e_phnum</a> = <a class=\"id\" href=\"#segs\">segs</a> &gt; <a class=\"id\" href=\"#PN_XNUM\">PN_XNUM</a> ? <a class=\"id\" href=\"#PN_XNUM\">PN_XNUM</a> : <a class=\"id\" href=\"#segs\">segs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Collect all the non-memory information about the process for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * notes.  This also sets up the file header.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fill_note_info\">fill_note_info</a>(<a class=\"id\" href=\"#elf\">elf</a>, <a class=\"id\" href=\"#e_phnum\">e_phnum</a>, &amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#signr\">signr</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#regs\">regs</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#has_dumped\">has_dumped</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#PF_DUMPCORE\">PF_DUMPCORE</a>;", 
"  ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fs\">fs</a> = <a class=\"id\" href=\"#get_fs\">get_fs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += sizeof(*<a class=\"id\" href=\"#elf\">elf</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Elf header */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#segs\">segs</a> * sizeof(struct <a class=\"id\" href=\"#elf_phdr\">elf_phdr</a>);<span class=\"ts\"/><span class=\"comment\">/* Program headers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#foffset\">foffset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Write notes phdr entry */</span>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#sz\">sz</a> = <a class=\"id\" href=\"#get_note_info_size\">get_note_info_size</a>(&amp;<a class=\"id\" href=\"#info\">info</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> += <a class=\"id\" href=\"#elf_coredump_extra_notes_size\">elf_coredump_extra_notes_size</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr4note\">phdr4note</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#phdr4note\">phdr4note</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#phdr4note\">phdr4note</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_elf_note_phdr\">fill_elf_note_phdr</a>(<a class=\"id\" href=\"#phdr4note\">phdr4note</a>, <a class=\"id\" href=\"#sz\">sz</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#sz\">sz</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dataoff\">dataoff</a> = <a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#roundup\">roundup</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#ELF_EXEC_PAGESIZE\">ELF_EXEC_PAGESIZE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#elf_core_vma_data_size\">elf_core_vma_data_size</a>(<a class=\"id\" href=\"#gate_vma\">gate_vma</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#mm_flags\">mm_flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#elf_core_extra_data_size\">elf_core_extra_data_size</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e_shoff\">e_shoff</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e_phnum\">e_phnum</a> == <a class=\"id\" href=\"#PN_XNUM\">PN_XNUM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fill_extnum_info\">fill_extnum_info</a>(<a class=\"id\" href=\"#elf\">elf</a>, <a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>, <a class=\"id\" href=\"#e_shoff\">e_shoff</a>, <a class=\"id\" href=\"#segs\">segs</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#dataoff\">dataoff</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += sizeof(*<a class=\"id\" href=\"#elf\">elf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#limit\">limit</a> || !<a class=\"id\" href=\"#dump_write\">dump_write</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#elf\">elf</a>, sizeof(*<a class=\"id\" href=\"#elf\">elf</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += sizeof(*<a class=\"id\" href=\"#phdr4note\">phdr4note</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#limit\">limit</a>", 
"<span class=\"ts\"/>    || !<a class=\"id\" href=\"#dump_write\">dump_write</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#phdr4note\">phdr4note</a>, sizeof(*<a class=\"id\" href=\"#phdr4note\">phdr4note</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Write program headers for segments dump */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#first_vma\">first_vma</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#gate_vma\">gate_vma</a>); <a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#next_vma\">next_vma</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#gate_vma\">gate_vma</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#elf_phdr\">elf_phdr</a> <a class=\"id\" href=\"#phdr\">phdr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_type\">p_type</a> = <a class=\"id\" href=\"#PT_LOAD\">PT_LOAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_offset\">p_offset</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_vaddr\">p_vaddr</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_paddr\">p_paddr</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_filesz\">p_filesz</a> = <a class=\"id\" href=\"#vma_dump_size\">vma_dump_size</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#mm_flags\">mm_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_memsz\">p_memsz</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a> - <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_filesz\">p_filesz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_flags\">p_flags</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_READ\">VM_READ</a> ? <a class=\"id\" href=\"#PF_R\">PF_R</a> : 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_WRITE\">VM_WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_flags\">p_flags</a> |= <a class=\"id\" href=\"#PF_W\">PF_W</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_EXEC\">VM_EXEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_flags\">p_flags</a> |= <a class=\"id\" href=\"#PF_X\">PF_X</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phdr\">phdr</a>.<a class=\"id\" href=\"#p_align\">p_align</a> = <a class=\"id\" href=\"#ELF_EXEC_PAGESIZE\">ELF_EXEC_PAGESIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += sizeof(<a class=\"id\" href=\"#phdr\">phdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#limit\">limit</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    || !<a class=\"id\" href=\"#dump_write\">dump_write</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#phdr\">phdr</a>, sizeof(<a class=\"id\" href=\"#phdr\">phdr</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elf_core_write_extra_phdrs\">elf_core_write_extra_phdrs</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#offset\">offset</a>, &amp;<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#limit\">limit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
" <span class=\"ts\"/><span class=\"comment\">/* write out the notes section */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#write_note_info\">write_note_info</a>(&amp;<a class=\"id\" href=\"#info\">info</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#foffset\">foffset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#elf_coredump_extra_notes_write\">elf_coredump_extra_notes_write</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#foffset\">foffset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Align to page */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dump_seek\">dump_seek</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#dataoff\">dataoff</a> - <a class=\"id\" href=\"#foffset\">foffset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#first_vma\">first_vma</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#gate_vma\">gate_vma</a>); <a class=\"id\" href=\"#vma\">vma</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#next_vma\">next_vma</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#gate_vma\">gate_vma</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> + <a class=\"id\" href=\"#vma_dump_size\">vma_dump_size</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#mm_flags\">mm_flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>; <a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#stop\">stop</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#get_dump_page\">get_dump_page</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stop\">stop</a> = ((<a class=\"id\" href=\"#size\">size</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) &gt; <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#limit\">limit</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#dump_write\">dump_write</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#kaddr\">kaddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stop\">stop</a> = !<a class=\"id\" href=\"#dump_seek\">dump_seek</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#stop\">stop</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#elf_core_write_extra_data\">elf_core_write_extra_data</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#limit\">limit</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e_phnum\">e_phnum</a> == <a class=\"id\" href=\"#PN_XNUM\">PN_XNUM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> += sizeof(*<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; <a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#limit\">limit</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    || !<a class=\"id\" href=\"#dump_write\">dump_write</a>(<a class=\"id\" href=\"#cprm\">cprm</a>-><a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   sizeof(*<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#end_coredump\">end_coredump</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#end_coredump\">end_coredump</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#fs\">fs</a>);", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_note_info\">free_note_info</a>(&amp;<a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#shdr4extnum\">shdr4extnum</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#phdr4note\">phdr4note</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#elf\">elf</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#has_dumped\">has_dumped</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CONFIG_ELF_CORE */</span>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_elf_binfmt\">init_elf_binfmt</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#register_binfmt\">register_binfmt</a>(&amp;<a class=\"id\" href=\"#elf_format\">elf_format</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__exit\">__exit</a> <a class=\"id\" href=\"#exit_elf_binfmt\">exit_elf_binfmt</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Remove the COFF and ELF loaders. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unregister_binfmt\">unregister_binfmt</a>(&amp;<a class=\"id\" href=\"#elf_format\">elf_format</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#init_elf_binfmt\">init_elf_binfmt</a>);", 
"<a class=\"id\" href=\"#module_exit\">module_exit</a>(<a class=\"id\" href=\"#exit_elf_binfmt\">exit_elf_binfmt</a>);", 
"<a class=\"id\" href=\"#MODULE_LICENSE\">MODULE_LICENSE</a>(\"GPL\");", 
];
xr_frag_insert('l/34/411afe3873635107aac1020f456027de6baa55.xr', __xr_tmp);
