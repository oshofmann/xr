var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_ASM_X86_USER_H\">_ASM_X86_USER_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_ASM_X86_USER_H\">_ASM_X86_USER_H</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_X86_32\">CONFIG_X86_32</a>", 
"# <a class=\"id\" href=\"#include\">include</a> \"user_32.h\"", 
"#else", 
"# <a class=\"id\" href=\"#include\">include</a> \"user_64.h\"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#user_ymmh_regs\">user_ymmh_regs</a> {", 
"<span class=\"ts\"/><span class=\"comment\">/* 16 * 16 bytes for each YMMH-reg */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#ymmh_space\">ymmh_space</a>[64];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#user_xsave_hdr\">user_xsave_hdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#xstate_bv\">xstate_bv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#reserved1\">reserved1</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#reserved2\">reserved2</a>[5];", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The structure layout of user_xstateregs, used for exporting the</span>", 
"<span class=\"comment\"> * extended register state through ptrace and core-dump (NT_X86_XSTATE note)</span>", 
"<span class=\"comment\"> * interfaces will be same as the memory layout of xsave used by the processor</span>", 
"<span class=\"comment\"> * (except for the bytes 464..511, which can be used by the software) and hence</span>", 
"<span class=\"comment\"> * the size of this structure varies depending on the features supported by the</span>", 
"<span class=\"comment\"> * processor and OS. The size of the structure that users need to use can be</span>", 
"<span class=\"comment\"> * obtained by doing:</span>", 
"<span class=\"comment\"> *     cpuid_count(0xd, 0, &amp;eax, &amp;ptrace_xstateregs_struct_size, &amp;ecx, &amp;edx);</span>", 
"<span class=\"comment\"> * i.e., cpuid.(eax=0xd,ecx=0).ebx will be the size that user (debuggers, etc.)</span>", 
"<span class=\"comment\"> * need to use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * For now, only the first 8 bytes of the software usable bytes[464..471] will</span>", 
"<span class=\"comment\"> * be used and will be set to OS enabled xstate mask (which is same as the</span>", 
"<span class=\"comment\"> * 64bit mask returned by the xgetbv's xCR0).  Users (analyzing core dump</span>", 
"<span class=\"comment\"> * remotely, etc.) can use this mask as well as the mask saved in the</span>", 
"<span class=\"comment\"> * xstate_hdr bytes and interpret what states the processor/OS supports</span>", 
"<span class=\"comment\"> * and what states are in modified/initialized conditions for the</span>", 
"<span class=\"comment\"> * particular process/thread.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Also when the user modifies certain state FP/SSE/etc through the</span>", 
"<span class=\"comment\"> * ptrace interface, they must ensure that the xsave_hdr.xstate_bv</span>", 
"<span class=\"comment\"> * bytes[512..519] of the memory layout are updated correspondingly.</span>", 
"<span class=\"comment\"> * i.e., for example when FP state is modified to a non-init state,</span>", 
"<span class=\"comment\"> * xsave_hdr.xstate_bv's bit 0 must be set to '1', when SSE is modified to</span>", 
"<span class=\"comment\"> * non-init state, xsave_hdr.xstate_bv's bit 1 must to be set to '1', etc.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#USER_XSTATE_FX_SW_WORDS\">USER_XSTATE_FX_SW_WORDS</a> 6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#USER_XSTATE_XCR0_WORD\">USER_XSTATE_XCR0_WORD</a><span class=\"ts\"/>0", 
"", 
"struct <a class=\"id\" href=\"#user_xstateregs\">user_xstateregs</a> {", 
"<span class=\"ts\"/>struct {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#fpx_space\">fpx_space</a>[58];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#xstate_fx_sw\">xstate_fx_sw</a>[<a class=\"id\" href=\"#USER_XSTATE_FX_SW_WORDS\">USER_XSTATE_FX_SW_WORDS</a>];", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#i387\">i387</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_xsave_hdr\">user_xsave_hdr</a> <a class=\"id\" href=\"#xsave_hdr\">xsave_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_ymmh_regs\">user_ymmh_regs</a> <a class=\"id\" href=\"#ymmh\">ymmh</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* further processor state extensions go here */</span>", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _ASM_X86_USER_H */</span>", 
];
xr_frag_insert('l/34/6915dc48afa6d04c107be7e55b20cf5b4f2934.xr', __xr_tmp);
