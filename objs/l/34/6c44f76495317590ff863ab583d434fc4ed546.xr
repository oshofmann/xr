var __xr_tmp = [
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * machines with many table load/unload operations), tables will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * need to be unregistered when they are unloaded, and slots in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * root table list should be reused when empty.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Table is already registered.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We can delete the table that was passed as a parameter.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_delete_table\">acpi_tb_delete_table</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#table_index\">table_index</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_TABLE_IS_LOADED\">ACPI_TABLE_IS_LOADED</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Table is still loaded, this is an error */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_ALREADY_EXISTS\">AE_ALREADY_EXISTS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#release\">release</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Table was unloaded, allow it to be reloaded */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#address\">address</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#print_header\">print_header</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI Table Override:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allow the host to override dynamically loaded tables.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_os_table_override\">acpi_os_table_override</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>, &amp;<a class=\"id\" href=\"#override_table\">override_table</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>) && <a class=\"id\" href=\"#override_table\">override_table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_INFO\">ACPI_INFO</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"%4.4s @ 0x%p Table override, replaced with:\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>-><a class=\"id\" href=\"#signature\">signature</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#address\">address</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We can delete the table that was passed as a parameter */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_delete_table\">acpi_tb_delete_table</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Setup descriptor for the new table */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#ACPI_PTR_TO_PHYSADDR\">ACPI_PTR_TO_PHYSADDR</a>(<a class=\"id\" href=\"#override_table\">override_table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#override_table\">override_table</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#override_table\">override_table</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_OVERRIDE\">ACPI_TABLE_ORIGIN_OVERRIDE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add the table to the global root table list */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_store_table\">acpi_tb_store_table</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#table_index\">table_index</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#release\">release</a>;", 
"<span class=\"ts\"/>}", 
"", 
"      <a class=\"id\" href=\"#print_header\">print_header</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_print_table_header\">acpi_tb_print_table_header</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"      <a class=\"id\" href=\"#release\">release</a>:", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_resize_root_table_list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Expand the size of global table array</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_resize_root_table_list\">acpi_tb_resize_root_table_list</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> *<a class=\"id\" href=\"#tables\">tables</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_resize_root_table_list\">tb_resize_root_table_list</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* allow_resize flag is a parameter to acpi_initialize_tables */</span>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_ROOT_ALLOW_RESIZE\">ACPI_ROOT_ALLOW_RESIZE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Resize of Root Table Array is not allowed\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_SUPPORT\">AE_SUPPORT</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Increase the Table Array size */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tables\">tables</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_ZEROED\">ACPI_ALLOCATE_ZEROED</a>(((<a class=\"id\" href=\"#acpi_size\">acpi_size</a>) <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#max_table_count\">max_table_count</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ACPI_ROOT_TABLE_SIZE_INCREMENT\">ACPI_ROOT_TABLE_SIZE_INCREMENT</a>) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      sizeof(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tables\">tables</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Could not allocate new root table array\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NO_MEMORY\">AE_NO_MEMORY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy and free the previous table array */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MEMCPY\">ACPI_MEMCPY</a>(<a class=\"id\" href=\"#tables\">tables</a>, <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#acpi_size\">acpi_size</a>) <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#max_table_count\">max_table_count</a> * sizeof(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_ROOT_ORIGIN_ALLOCATED\">ACPI_ROOT_ORIGIN_ALLOCATED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a> = <a class=\"id\" href=\"#tables\">tables</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#max_table_count\">max_table_count</a> +=", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_ROOT_TABLE_SIZE_INCREMENT\">ACPI_ROOT_TABLE_SIZE_INCREMENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> |= (<a class=\"id\" href=\"#u8\">u8</a>)<a class=\"id\" href=\"#ACPI_ROOT_ORIGIN_ALLOCATED\">ACPI_ROOT_ORIGIN_ALLOCATED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_store_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  Address             - Table address</span>", 
"<span class=\"comment\"> *              Table               - Table header</span>", 
"<span class=\"comment\"> *              Length              - Table length</span>", 
"<span class=\"comment\"> *              Flags               - flags</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status and table index.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Add an ACPI table to the global table list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_tb_store_table\">acpi_tb_store_table</a>(<a class=\"id\" href=\"#acpi_physical_address\">acpi_physical_address</a> <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#table_index\">table_index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> *<a class=\"id\" href=\"#new_table\">new_table</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Ensure that there is room for the table in the Root Table List */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> >=", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#max_table_count\">max_table_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_tb_resize_root_table_list\">acpi_tb_resize_root_table_list</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_table\">new_table</a> =", 
"<span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#current_table_count\">current_table_count</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize added table */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_table\">new_table</a>-><a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#address\">address</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_table\">new_table</a>-><a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_table\">new_table</a>-><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_table\">new_table</a>-><a class=\"id\" href=\"#owner_id\">owner_id</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_table\">new_table</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_MOVE_32_TO_32\">ACPI_MOVE_32_TO_32</a>(&amp;<a class=\"id\" href=\"#new_table\">new_table</a>-><a class=\"id\" href=\"#signature\">signature</a>, <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#signature\">signature</a>);", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#table_index\">table_index</a> = <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>++;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_delete_table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Delete one internal ACPI table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_tb_delete_table\">acpi_tb_delete_table</a>(struct <a class=\"id\" href=\"#acpi_table_desc\">acpi_table_desc</a> *<a class=\"id\" href=\"#table_desc\">table_desc</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Table must be mapped or allocated */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_MASK\">ACPI_TABLE_ORIGIN_MASK</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_MAPPED\">ACPI_TABLE_ORIGIN_MAPPED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_unmap_memory\">acpi_os_unmap_memory</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>, <a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TABLE_ORIGIN_ALLOCATED\">ACPI_TABLE_ORIGIN_ALLOCATED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table_desc\">table_desc</a>-><a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_terminate</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Delete all internal ACPI tables</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_tb_terminate\">acpi_tb_terminate</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_terminate\">tb_terminate</a>);", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete the individual tables */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_tb_delete_table\">acpi_tb_delete_table</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Delete the root table array if allocated locally. Array cannot be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mapped, so we don't need to check for that flag.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_ROOT_ORIGIN_ALLOCATED\">ACPI_ROOT_ORIGIN_ALLOCATED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FREE\">ACPI_FREE</a>(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>, \"ACPI Tables freed\\n\"));", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_delete_namespace_by_owner</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Delete all namespace objects created when this table was loaded.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_delete_namespace_by_owner\">acpi_tb_delete_namespace_by_owner</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_owner_id\">acpi_owner_id</a> <a class=\"id\" href=\"#owner_id\">owner_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_delete_namespace_by_owner\">tb_delete_namespace_by_owner</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> >= <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The table index does not exist */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_NOT_EXIST\">AE_NOT_EXIST</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the owner ID for this table, used to delete namespace nodes */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#owner_id\">owner_id</a> = <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#owner_id\">owner_id</a>;", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Need to acquire the namespace writer lock to prevent interference</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with any concurrent namespace walks. The interpreter must be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * released during the deletion since the acquisition of the deletion</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * lock may block, and also since the execution of a namespace walk</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must be allowed to use the interpreter.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_INTERPRETER\">ACPI_MTX_INTERPRETER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_acquire_write_lock\">acpi_ut_acquire_write_lock</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_namespace_rw_lock\">acpi_gbl_namespace_rw_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ns_delete_namespace_by_owner\">acpi_ns_delete_namespace_by_owner</a>(<a class=\"id\" href=\"#owner_id\">owner_id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_release_write_lock\">acpi_ut_release_write_lock</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_namespace_rw_lock\">acpi_gbl_namespace_rw_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_INTERPRETER\">ACPI_MTX_INTERPRETER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_allocate_owner_id</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Allocates owner_id in table_desc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_allocate_owner_id\">acpi_tb_allocate_owner_id</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_allocate_owner_id\">tb_allocate_owner_id</a>);", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_allocate_owner_id\">acpi_ut_allocate_owner_id</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    (&amp;(<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#owner_id\">owner_id</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_release_owner_id</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Releases owner_id in table_desc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_release_owner_id\">acpi_tb_release_owner_id</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_release_owner_id\">tb_release_owner_id</a>);", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_release_owner_id\">acpi_ut_release_owner_id</a>(&amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#owner_id\">owner_id</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_get_owner_id</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *              owner_id            - Where the table owner_id is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: returns owner_id for the ACPI table</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_tb_get_owner_id\">acpi_tb_get_owner_id</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>, <a class=\"id\" href=\"#acpi_owner_id\">acpi_owner_id</a> *<a class=\"id\" href=\"#owner_id\">owner_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#tb_get_owner_id\">tb_get_owner_id</a>);", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#owner_id\">owner_id</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#owner_id\">owner_id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_is_table_loaded</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Table Loaded Flag</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#acpi_tb_is_table_loaded\">acpi_tb_is_table_loaded</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#is_loaded\">is_loaded</a> = <a class=\"id\" href=\"#FALSE\">FALSE</a>;", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_loaded\">is_loaded</a> = (<a class=\"id\" href=\"#u8\">u8</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_TABLE_IS_LOADED\">ACPI_TABLE_IS_LOADED</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#is_loaded\">is_loaded</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_tb_set_table_loaded_flag</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  table_index         - Table index</span>", 
"<span class=\"comment\"> *              is_loaded           - TRUE if table is loaded, FALSE otherwise</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Sets the table loaded flag to either TRUE or FALSE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_tb_set_table_loaded_flag\">acpi_tb_set_table_loaded_flag</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#table_index\">table_index</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#is_loaded\">is_loaded</a>)", 
"{", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table_index\">table_index</a> &lt; <a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#current_table_count\">current_table_count</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_loaded\">is_loaded</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#flags\">flags</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_TABLE_IS_LOADED\">ACPI_TABLE_IS_LOADED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_root_table_list\">acpi_gbl_root_table_list</a>.<a class=\"id\" href=\"#tables\">tables</a>[<a class=\"id\" href=\"#table_index\">table_index</a>].<a class=\"id\" href=\"#flags\">flags</a> &=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    ~<a class=\"id\" href=\"#ACPI_TABLE_IS_LOADED\">ACPI_TABLE_IS_LOADED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>(void)<a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#ACPI_MTX_TABLES\">ACPI_MTX_TABLES</a>);", 
"}", 
];
xr_frag_insert('l/34/6c44f76495317590ff863ab583d434fc4ed546.xr', __xr_tmp);
