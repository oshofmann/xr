var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * drivers/pci/rom.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) Copyright 2004 Jon Smirl &lt;jonsmirl@yahoo.com&gt;</span>", 
"<span class=\"comment\"> * (C) Copyright 2004 Silicon Graphics, Inc. Jesse Barnes &lt;jbarnes@sgi.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PCI ROM access routines</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"pci.h\"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_enable_rom - enable ROM decoding for a PCI device</span>", 
"<span class=\"comment\"> * @pdev: PCI device to enable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Enable ROM decoding on @dev.  This involves simply turning on the last</span>", 
"<span class=\"comment\"> * bit of the PCI ROM BAR.  Note that some cards may share address decoders</span>", 
"<span class=\"comment\"> * between the ROM and other resources, so enabling it may disable access</span>", 
"<span class=\"comment\"> * to MMIO registers or other card memory.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_enable_rom\">pci_enable_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a> + <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus_region\">pci_bus_region</a> <a class=\"id\" href=\"#region\">region</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rom_addr\">rom_addr</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pcibios_resource_to_bus\">pcibios_resource_to_bus</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, &amp;<a class=\"id\" href=\"#region\">region</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#rom_base_reg\">rom_base_reg</a>, &amp;<a class=\"id\" href=\"#rom_addr\">rom_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rom_addr\">rom_addr</a> &= ~<a class=\"id\" href=\"#PCI_ROM_ADDRESS_MASK\">PCI_ROM_ADDRESS_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rom_addr\">rom_addr</a> |= <a class=\"id\" href=\"#region\">region</a>.<a class=\"id\" href=\"#start\">start</a> | <a class=\"id\" href=\"#PCI_ROM_ADDRESS_ENABLE\">PCI_ROM_ADDRESS_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#rom_base_reg\">rom_base_reg</a>, <a class=\"id\" href=\"#rom_addr\">rom_addr</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_disable_rom - disable ROM decoding for a PCI device</span>", 
"<span class=\"comment\"> * @pdev: PCI device to disable</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Disable ROM decoding on a PCI device by turning off the last bit in the</span>", 
"<span class=\"comment\"> * ROM BAR.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_disable_rom\">pci_disable_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rom_addr\">rom_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#rom_base_reg\">rom_base_reg</a>, &amp;<a class=\"id\" href=\"#rom_addr\">rom_addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rom_addr\">rom_addr</a> &= ~<a class=\"id\" href=\"#PCI_ROM_ADDRESS_ENABLE\">PCI_ROM_ADDRESS_ENABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#rom_base_reg\">rom_base_reg</a>, <a class=\"id\" href=\"#rom_addr\">rom_addr</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_get_rom_size - obtain the actual size of the ROM image</span>", 
"<span class=\"comment\"> * @pdev: target PCI device</span>", 
"<span class=\"comment\"> * @rom: kernel virtual pointer to image of ROM</span>", 
"<span class=\"comment\"> * @size: size of PCI window</span>", 
"<span class=\"comment\"> *  return: size of actual ROM image</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Determine the actual length of the ROM image.</span>", 
"<span class=\"comment\"> * The PCI window size could be much larger than the</span>", 
"<span class=\"comment\"> * actual image size.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#pci_get_rom_size\">pci_get_rom_size</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#rom\">rom</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#image\">image</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#last_image\">last_image</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#image\">image</a> = <a class=\"id\" href=\"#rom\">rom</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#pds\">pds</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Standard PCI ROMs start out with these bytes 55 AA */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#image\">image</a>) != 0x55) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"Invalid ROM contents\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#image\">image</a> + 1) != 0xAA)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* get the PCI data structure and check its signature */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pds\">pds</a> = <a class=\"id\" href=\"#image\">image</a> + <a class=\"id\" href=\"#readw\">readw</a>(<a class=\"id\" href=\"#image\">image</a> + 24);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#pds\">pds</a>) != 'P')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#pds\">pds</a> + 1) != 'C')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#pds\">pds</a> + 2) != 'I')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#pds\">pds</a> + 3) != 'R')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_image\">last_image</a> = <a class=\"id\" href=\"#readb\">readb</a>(<a class=\"id\" href=\"#pds\">pds</a> + 21) &amp; 0x80;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* this length is reliable */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#image\">image</a> += <a class=\"id\" href=\"#readw\">readw</a>(<a class=\"id\" href=\"#pds\">pds</a> + 16) * 512;", 
"<span class=\"ts\"/>} while (!<a class=\"id\" href=\"#last_image\">last_image</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* never return a size larger than the PCI resource window */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* there are known ROMs that get the size wrong */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#min\">min</a>((<a class=\"id\" href=\"#size_t\">size_t</a>)(<a class=\"id\" href=\"#image\">image</a> - <a class=\"id\" href=\"#rom\">rom</a>), <a class=\"id\" href=\"#size\">size</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_map_rom - map a PCI ROM to kernel space</span>", 
"<span class=\"comment\"> * @pdev: pointer to pci device struct</span>", 
"<span class=\"comment\"> * @size: pointer to receive size of pci window over ROM</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return: kernel virtual pointer to image of ROM</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Map a PCI ROM into kernel space. If ROM is boot video ROM,</span>", 
"<span class=\"comment\"> * the shadow BIOS copy will be returned instead of the</span>", 
"<span class=\"comment\"> * actual ROM.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#pci_map_rom\">pci_map_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#rom\">rom</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * IORESOURCE_ROM_SHADOW set on x86, x86_64 and IA64 supports legacy</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memory map if the VGA enable bit of the Bridge Control register is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set for embedded VGA.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_ROM_SHADOW\">IORESOURCE_ROM_SHADOW</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* primary video rom always starts here */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = (<a class=\"id\" href=\"#loff_t\">loff_t</a>)0xC0000;", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#size\">size</a> = 0x20000; <span class=\"comment\">/* cover C000:0 through E000:0 */</span>", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a> | <a class=\"id\" href=\"#IORESOURCE_ROM_BIOS_COPY\">IORESOURCE_ROM_BIOS_COPY</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (void <a class=\"id\" href=\"#__iomem\">__iomem</a> *)(unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* assign the ROM an address if it doesn't have one */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#parent\">parent</a> == <a class=\"id\" href=\"#NULL\">NULL</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#pci_assign_resource\">pci_assign_resource</a>(<a class=\"id\" href=\"#pdev\">pdev</a>,<a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#pci_resource_start\">pci_resource_start</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#size\">size</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Enable ROM space decodes */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_enable_rom\">pci_enable_rom</a>(<a class=\"id\" href=\"#pdev\">pdev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rom\">rom</a> = <a class=\"id\" href=\"#ioremap\">ioremap</a>(<a class=\"id\" href=\"#start\">start</a>, *<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rom\">rom</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* restore enable if ioremap fails */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IORESOURCE_ROM_ENABLE\">IORESOURCE_ROM_ENABLE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IORESOURCE_ROM_SHADOW\">IORESOURCE_ROM_SHADOW</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_rom\">pci_disable_rom</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Try to find the true size of the ROM since sometimes the PCI window</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * size is much larger than the actual size of the ROM.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * True size is important if the ROM is going to be copied.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#pci_get_rom_size\">pci_get_rom_size</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#rom\">rom</a>, *<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rom\">rom</a>;", 
"}", 
"", 
"#if 0", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_map_rom_copy - map a PCI ROM to kernel space, create a copy</span>", 
"<span class=\"comment\"> * @pdev: pointer to pci device struct</span>", 
"<span class=\"comment\"> * @size: pointer to receive size of pci window over ROM</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return: kernel virtual pointer to image of ROM</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Map a PCI ROM into kernel space. If ROM is boot video ROM,</span>", 
"<span class=\"comment\"> * the shadow BIOS copy will be returned instead of the</span>", 
"<span class=\"comment\"> * actual ROM.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#pci_map_rom_copy\">pci_map_rom_copy</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>];", 
"<span class=\"ts\"/>void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#rom\">rom</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rom\">rom</a> = <a class=\"id\" href=\"#pci_map_rom\">pci_map_rom</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rom\">rom</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a> | <a class=\"id\" href=\"#IORESOURCE_ROM_SHADOW\">IORESOURCE_ROM_SHADOW</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#IORESOURCE_ROM_BIOS_COPY\">IORESOURCE_ROM_BIOS_COPY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rom\">rom</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = (unsigned long)<a class=\"id\" href=\"#kmalloc\">kmalloc</a>(*<a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rom\">rom</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> + *<a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy_fromio\">memcpy_fromio</a>((void*)(unsigned long)<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#rom\">rom</a>, *<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_unmap_rom\">pci_unmap_rom</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#rom\">rom</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a>;", 
"", 
"<span class=\"ts\"/>return (void <a class=\"id\" href=\"#__iomem\">__iomem</a> *)(unsigned long)<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/*  0  */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_unmap_rom - unmap the ROM from kernel space</span>", 
"<span class=\"comment\"> * @pdev: pointer to pci device struct</span>", 
"<span class=\"comment\"> * @rom: virtual address of the previous mapping</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Remove a mapping of a previously mapped ROM</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_unmap_rom\">pci_unmap_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>, void <a class=\"id\" href=\"#__iomem\">__iomem</a> *<a class=\"id\" href=\"#rom\">rom</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a> | <a class=\"id\" href=\"#IORESOURCE_ROM_BIOS_COPY\">IORESOURCE_ROM_BIOS_COPY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#rom\">rom</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable again before continuing, leave enabled if pci=rom */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IORESOURCE_ROM_ENABLE\">IORESOURCE_ROM_ENABLE</a> | <a class=\"id\" href=\"#IORESOURCE_ROM_SHADOW\">IORESOURCE_ROM_SHADOW</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_rom\">pci_disable_rom</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"}", 
"", 
"#if 0", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_remove_rom - disable the ROM and remove its sysfs attribute</span>", 
"<span class=\"comment\"> * @pdev: pointer to pci device struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Remove the rom file in sysfs and disable ROM decoding.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_remove_rom\">pci_remove_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_resource_len\">pci_resource_len</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_bin_file\">sysfs_remove_bin_file</a>(&amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#kobj\">kobj</a>, <a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#rom_attr\">rom_attr</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IORESOURCE_ROM_ENABLE\">IORESOURCE_ROM_ENABLE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IORESOURCE_ROM_SHADOW\">IORESOURCE_ROM_SHADOW</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IORESOURCE_ROM_BIOS_COPY\">IORESOURCE_ROM_BIOS_COPY</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_rom\">pci_disable_rom</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>  <span class=\"comment\">/*  0  */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_cleanup_rom - free the ROM copy created by pci_map_rom_copy</span>", 
"<span class=\"comment\"> * @pdev: pointer to pci device struct</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Free the copied ROM if we allocated one.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#pci_cleanup_rom\">pci_cleanup_rom</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>((void*)(unsigned long)<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IORESOURCE_ROM_COPY\">IORESOURCE_ROM_COPY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_map_rom\">pci_map_rom</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_unmap_rom\">pci_unmap_rom</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_enable_rom\">pci_enable_rom</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_disable_rom\">pci_disable_rom</a>);", 
];
xr_frag_insert('l/35/3d6f5f1b9d5c755b408f644241bc0778b33359.xr', __xr_tmp);
