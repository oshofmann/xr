var __xr_tmp = [
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_FREQUENCY_UP_THRESHOLD\">MAX_FREQUENCY_UP_THRESHOLD</a><span class=\"ts\"/><span class=\"ts\"/>(100)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The polling frequency of this governor depends on the capability of</span>", 
"<span class=\"comment\"> * the processor. Default polling frequency is 1000 times the transition</span>", 
"<span class=\"comment\"> * latency of the processor. The governor will work on any processor with</span>", 
"<span class=\"comment\"> * transition latency &lt;= 10mS, using appropriate sampling</span>", 
"<span class=\"comment\"> * rate.</span>", 
"<span class=\"comment\"> * For CPUs with transition latency &gt; 10mS (mostly drivers with CPUFREQ_ETERNAL)</span>", 
"<span class=\"comment\"> * this governor will not work.</span>", 
"<span class=\"comment\"> * All times here are in uS.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_SAMPLING_RATE_RATIO\">MIN_SAMPLING_RATE_RATIO</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(2)", 
"", 
"static unsigned int <a class=\"id\" href=\"#min_sampling_rate\">min_sampling_rate</a>;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LATENCY_MULTIPLIER\">LATENCY_MULTIPLIER</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(1000)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MIN_LATENCY_MULTIPLIER\">MIN_LATENCY_MULTIPLIER</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(100)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TRANSITION_LATENCY_LIMIT\">TRANSITION_LATENCY_LIMIT</a><span class=\"ts\"/><span class=\"ts\"/>(10 * 1000 * 1000)", 
"", 
"static void <a class=\"id\" href=\"#do_dbs_timer\">do_dbs_timer</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>);", 
"static int <a class=\"id\" href=\"#cpufreq_governor_dbs\">cpufreq_governor_dbs</a>(struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#policy\">policy</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#event\">event</a>);", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND\">CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND</a>", 
"static", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"struct <a class=\"id\" href=\"#cpufreq_governor\">cpufreq_governor</a> <a class=\"id\" href=\"#cpufreq_gov_ondemand\">cpufreq_gov_ondemand</a> = {", 
"       .<a class=\"id\" href=\"#name\">name</a>                   = \"ondemand\",", 
"       .<a class=\"id\" href=\"#governor\">governor</a>               = <a class=\"id\" href=\"#cpufreq_governor_dbs\">cpufreq_governor_dbs</a>,", 
"       .<a class=\"id\" href=\"#max_transition_latency\">max_transition_latency</a> = <a class=\"id\" href=\"#TRANSITION_LATENCY_LIMIT\">TRANSITION_LATENCY_LIMIT</a>,", 
"       .<a class=\"id\" href=\"#owner\">owner</a>                  = <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"};", 
"", 
"<span class=\"comment\">/* Sampling types */</span>", 
"enum {<a class=\"id\" href=\"#DBS_NORMAL_SAMPLE\">DBS_NORMAL_SAMPLE</a>, <a class=\"id\" href=\"#DBS_SUB_SAMPLE\">DBS_SUB_SAMPLE</a>};", 
"", 
"struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#prev_cpu_idle\">prev_cpu_idle</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#prev_cpu_iowait\">prev_cpu_iowait</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#prev_cpu_wall\">prev_cpu_wall</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#prev_cpu_nice\">prev_cpu_nice</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_policy\">cpufreq_policy</a> *<a class=\"id\" href=\"#cur_policy\">cur_policy</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#delayed_work\">delayed_work</a> <a class=\"id\" href=\"#work\">work</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpufreq_frequency_table\">cpufreq_frequency_table</a> *<a class=\"id\" href=\"#freq_table\">freq_table</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_lo\">freq_lo</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_lo_jiffies\">freq_lo_jiffies</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#freq_hi_jiffies\">freq_hi_jiffies</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sample_type\">sample_type</a>:1;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * percpu mutex that serializes governor limit change with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * do_dbs_timer invocation. We do not want do_dbs_timer to run</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * when user is changing the governor or limits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mutex\">mutex</a> <a class=\"id\" href=\"#timer_mutex\">timer_mutex</a>;", 
"};", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#cpu_dbs_info_s\">cpu_dbs_info_s</a>, <a class=\"id\" href=\"#od_cpu_dbs_info\">od_cpu_dbs_info</a>);", 
"", 
"static unsigned int <a class=\"id\" href=\"#dbs_enable\">dbs_enable</a>;<span class=\"ts\"/><span class=\"comment\">/* number of CPUs using this policy */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * dbs_mutex protects data in dbs_tuners_ins from concurrent changes on</span>", 
"<span class=\"comment\"> * different CPUs. It protects dbs_enable in governor start/stop.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#dbs_mutex\">dbs_mutex</a>);", 
"", 
"static struct <a class=\"id\" href=\"#workqueue_struct\">workqueue_struct</a><span class=\"ts\"/>*<a class=\"id\" href=\"#kondemand_wq\">kondemand_wq</a>;", 
"", 
"static struct <a class=\"id\" href=\"#dbs_tuners\">dbs_tuners</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#sampling_rate\">sampling_rate</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#up_threshold\">up_threshold</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#down_differential\">down_differential</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#ignore_nice\">ignore_nice</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#powersave_bias\">powersave_bias</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#io_is_busy\">io_is_busy</a>;", 
"} <a class=\"id\" href=\"#dbs_tuners_ins\">dbs_tuners_ins</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#up_threshold\">up_threshold</a> = <a class=\"id\" href=\"#DEF_FREQUENCY_UP_THRESHOLD\">DEF_FREQUENCY_UP_THRESHOLD</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#down_differential\">down_differential</a> = <a class=\"id\" href=\"#DEF_FREQUENCY_DOWN_DIFFERENTIAL\">DEF_FREQUENCY_DOWN_DIFFERENTIAL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ignore_nice\">ignore_nice</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#powersave_bias\">powersave_bias</a> = 0,", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#get_cpu_idle_time_jiffy\">get_cpu_idle_time_jiffy</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> *<a class=\"id\" href=\"#wall\">wall</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#idle_time\">idle_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#busy_time\">busy_time</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a> = <a class=\"id\" href=\"#jiffies64_to_cputime64\">jiffies64_to_cputime64</a>(<a class=\"id\" href=\"#get_jiffies_64\">get_jiffies_64</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#user\">user</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#system\">system</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#softirq\">softirq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#steal\">steal</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#busy_time\">busy_time</a> = <a class=\"id\" href=\"#cputime64_add\">cputime64_add</a>(<a class=\"id\" href=\"#busy_time\">busy_time</a>, <a class=\"id\" href=\"#kstat_cpu\">kstat_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#cpustat\">cpustat</a>.<a class=\"id\" href=\"#nice\">nice</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idle_time\">idle_time</a> = <a class=\"id\" href=\"#cputime64_sub\">cputime64_sub</a>(<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>, <a class=\"id\" href=\"#busy_time\">busy_time</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#wall\">wall</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#wall\">wall</a> = (<a class=\"id\" href=\"#cputime64_t\">cputime64_t</a>)<a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(<a class=\"id\" href=\"#cur_wall_time\">cur_wall_time</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cputime64_t\">cputime64_t</a>)<a class=\"id\" href=\"#jiffies_to_usecs\">jiffies_to_usecs</a>(<a class=\"id\" href=\"#idle_time\">idle_time</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#get_cpu_idle_time\">get_cpu_idle_time</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> *<a class=\"id\" href=\"#wall\">wall</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#idle_time\">idle_time</a> = <a class=\"id\" href=\"#get_cpu_idle_time_us\">get_cpu_idle_time_us</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#wall\">wall</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idle_time\">idle_time</a> == -1ULL)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#get_cpu_idle_time_jiffy\">get_cpu_idle_time_jiffy</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#wall\">wall</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idle_time\">idle_time</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> <a class=\"id\" href=\"#get_cpu_iowait_time\">get_cpu_iowait_time</a>(unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#cputime64_t\">cputime64_t</a> *<a class=\"id\" href=\"#wall\">wall</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#iowait_time\">iowait_time</a> = <a class=\"id\" href=\"#get_cpu_iowait_time_us\">get_cpu_iowait_time_us</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#wall\">wall</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iowait_time\">iowait_time</a> == -1ULL)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#iowait_time\">iowait_time</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find right freq to be set now with powersave_bias on.</span>", 
"<span class=\"comment\"> * Returns the freq_hi to be used right now and will set freq_hi_jiffies,</span>", 
"<span class=\"comment\"> * freq_lo, and freq_lo_jiffies in percpu area for averaging freqs.</span>", 
"<span class=\"comment\"> */</span>", 
];
xr_frag_insert('l/35/656615e85dbcbb24f469b0c8a97c0f51bb3f31.xr', __xr_tmp);
