var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/kernel/itimer.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992 Darren Senn</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* These are all the functions necessary to implement itimers */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#posix\">posix</a>-<a class=\"id\" href=\"#timers\">timers</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hrtimer\">hrtimer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#trace\">trace</a>/<a class=\"id\" href=\"#events\">events</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * itimer_get_remtime - get remaining time for the timer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @timer: the timer to read</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the delta between the expiry time and now, which can be</span>", 
"<span class=\"comment\"> * less than zero or 1usec for an pending expired timer</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#itimer_get_remtime\">itimer_get_remtime</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#rem\">rem</a> = <a class=\"id\" href=\"#hrtimer_get_remaining\">hrtimer_get_remaining</a>(<a class=\"id\" href=\"#timer\">timer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Racy but safe: if the itimer expires after the above</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * hrtimer_get_remtime() call but before this condition</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then we return 0 - which is correct.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_active\">hrtimer_active</a>(<a class=\"id\" href=\"#timer\">timer</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rem\">rem</a>.<a class=\"id\" href=\"#tv64\">tv64</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ktime_to_timeval\">ktime_to_timeval</a>(<a class=\"id\" href=\"#rem\">rem</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#get_cpu_itimer\">get_cpu_itimer</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, unsigned int <a class=\"id\" href=\"#clock_id\">clock_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#itimerval\">itimerval</a> *const <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime_t\">cputime_t</a> <a class=\"id\" href=\"#cval\">cval</a>, <a class=\"id\" href=\"#cinterval\">cinterval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_itimer\">cpu_itimer</a> *<a class=\"id\" href=\"#it\">it</a> = &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#it\">it</a>[<a class=\"id\" href=\"#clock_id\">clock_id</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cinterval\">cinterval</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#incr\">incr</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cputime_eq\">cputime_eq</a>(<a class=\"id\" href=\"#cval\">cval</a>, <a class=\"id\" href=\"#cputime_zero\">cputime_zero</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_cputime\">task_cputime</a> <a class=\"id\" href=\"#cputime\">cputime</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_t\">cputime_t</a> <a class=\"id\" href=\"#t\">t</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thread_group_cputimer\">thread_group_cputimer</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, &amp;<a class=\"id\" href=\"#cputime\">cputime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#clock_id\">clock_id</a> == <a class=\"id\" href=\"#CPUCLOCK_PROF\">CPUCLOCK_PROF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#cputime_add\">cputime_add</a>(<a class=\"id\" href=\"#cputime\">cputime</a>.<a class=\"id\" href=\"#utime\">utime</a>, <a class=\"id\" href=\"#cputime\">cputime</a>.<a class=\"id\" href=\"#stime\">stime</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* CPUCLOCK_VIRT */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a> = <a class=\"id\" href=\"#cputime\">cputime</a>.<a class=\"id\" href=\"#utime\">utime</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cputime_le\">cputime_le</a>(<a class=\"id\" href=\"#cval\">cval</a>, <a class=\"id\" href=\"#t\">t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* about to fire */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#cputime_one_jiffy\">cputime_one_jiffy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#cputime_sub\">cputime_sub</a>(<a class=\"id\" href=\"#cval\">cval</a>, <a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_timeval\">cputime_to_timeval</a>(<a class=\"id\" href=\"#cval\">cval</a>, &amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_value\">it_value</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_timeval\">cputime_to_timeval</a>(<a class=\"id\" href=\"#cinterval\">cinterval</a>, &amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#do_getitimer\">do_getitimer</a>(int <a class=\"id\" href=\"#which\">which</a>, struct <a class=\"id\" href=\"#itimerval\">itimerval</a> *<a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#which\">which</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ITIMER_REAL\">ITIMER_REAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_value\">it_value</a> = <a class=\"id\" href=\"#itimer_get_remtime\">itimer_get_remtime</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#real_timer\">real_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ktime_to_timeval\">ktime_to_timeval</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#it_real_incr\">it_real_incr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ITIMER_VIRTUAL\">ITIMER_VIRTUAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_cpu_itimer\">get_cpu_itimer</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#CPUCLOCK_VIRT\">CPUCLOCK_VIRT</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ITIMER_PROF\">ITIMER_PROF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_cpu_itimer\">get_cpu_itimer</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#CPUCLOCK_PROF\">CPUCLOCK_PROF</a>, <a class=\"id\" href=\"#value\">value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#getitimer\">getitimer</a>, int, <a class=\"id\" href=\"#which\">which</a>, struct <a class=\"id\" href=\"#itimerval\">itimerval</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#value\">value</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerval\">itimerval</a> <a class=\"id\" href=\"#get_buffer\">get_buffer</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#do_getitimer\">do_getitimer</a>(<a class=\"id\" href=\"#which\">which</a>, &amp;<a class=\"id\" href=\"#get_buffer\">get_buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#value\">value</a>, &amp;<a class=\"id\" href=\"#get_buffer\">get_buffer</a>, sizeof(<a class=\"id\" href=\"#get_buffer\">get_buffer</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The timer is automagically restarted, when interval != 0</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#it_real_fn\">it_real_fn</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#signal_struct\">signal_struct</a> *<a class=\"id\" href=\"#sig\">sig</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#timer\">timer</a>, struct <a class=\"id\" href=\"#signal_struct\">signal_struct</a>, <a class=\"id\" href=\"#real_timer\">real_timer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_itimer_expire\">trace_itimer_expire</a>(<a class=\"id\" href=\"#ITIMER_REAL\">ITIMER_REAL</a>, <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#leader_pid\">leader_pid</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kill_pid_info\">kill_pid_info</a>(<a class=\"id\" href=\"#SIGALRM\">SIGALRM</a>, <a class=\"id\" href=\"#SEND_SIG_PRIV\">SEND_SIG_PRIV</a>, <a class=\"id\" href=\"#sig\">sig</a>-><a class=\"id\" href=\"#leader_pid\">leader_pid</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cputime_sub_ns\">cputime_sub_ns</a>(<a class=\"id\" href=\"#cputime_t\">cputime_t</a> <a class=\"id\" href=\"#ct\">ct</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#real_ns\">real_ns</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#cpu_ns\">cpu_ns</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_timespec\">cputime_to_timespec</a>(<a class=\"id\" href=\"#ct\">ct</a>, &amp;<a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu_ns\">cpu_ns</a> = <a class=\"id\" href=\"#timespec_to_ns\">timespec_to_ns</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#cpu_ns\">cpu_ns</a> <= <a class=\"id\" href=\"#real_ns\">real_ns</a>) ? 0 : <a class=\"id\" href=\"#cpu_ns\">cpu_ns</a> - <a class=\"id\" href=\"#real_ns\">real_ns</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#set_cpu_itimer\">set_cpu_itimer</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, unsigned int <a class=\"id\" href=\"#clock_id\">clock_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#itimerval\">itimerval</a> *const <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#itimerval\">itimerval</a> *const <a class=\"id\" href=\"#ovalue\">ovalue</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cputime_t\">cputime_t</a> <a class=\"id\" href=\"#cval\">cval</a>, <a class=\"id\" href=\"#nval\">nval</a>, <a class=\"id\" href=\"#cinterval\">cinterval</a>, <a class=\"id\" href=\"#ninterval\">ninterval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#ns_ninterval\">ns_ninterval</a>, <a class=\"id\" href=\"#ns_nval\">ns_nval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#incr_error\">incr_error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpu_itimer\">cpu_itimer</a> *<a class=\"id\" href=\"#it\">it</a> = &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#it\">it</a>[<a class=\"id\" href=\"#clock_id\">clock_id</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nval\">nval</a> = <a class=\"id\" href=\"#timeval_to_cputime\">timeval_to_cputime</a>(&amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_value\">it_value</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns_nval\">ns_nval</a> = <a class=\"id\" href=\"#timeval_to_ns\">timeval_to_ns</a>(&amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_value\">it_value</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ninterval\">ninterval</a> = <a class=\"id\" href=\"#timeval_to_cputime\">timeval_to_cputime</a>(&amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ns_ninterval\">ns_ninterval</a> = <a class=\"id\" href=\"#timeval_to_ns\">timeval_to_ns</a>(&amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#cputime_sub_ns\">cputime_sub_ns</a>(<a class=\"id\" href=\"#nval\">nval</a>, <a class=\"id\" href=\"#ns_nval\">ns_nval</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#incr_error\">incr_error</a> = <a class=\"id\" href=\"#cputime_sub_ns\">cputime_sub_ns</a>(<a class=\"id\" href=\"#ninterval\">ninterval</a>, <a class=\"id\" href=\"#ns_ninterval\">ns_ninterval</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cval\">cval</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cinterval\">cinterval</a> = <a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#incr\">incr</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cputime_eq\">cputime_eq</a>(<a class=\"id\" href=\"#cval\">cval</a>, <a class=\"id\" href=\"#cputime_zero\">cputime_zero</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#cputime_eq\">cputime_eq</a>(<a class=\"id\" href=\"#nval\">nval</a>, <a class=\"id\" href=\"#cputime_zero\">cputime_zero</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cputime_gt\">cputime_gt</a>(<a class=\"id\" href=\"#nval\">nval</a>, <a class=\"id\" href=\"#cputime_zero\">cputime_zero</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nval\">nval</a> = <a class=\"id\" href=\"#cputime_add\">cputime_add</a>(<a class=\"id\" href=\"#nval\">nval</a>, <a class=\"id\" href=\"#cputime_one_jiffy\">cputime_one_jiffy</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_process_cpu_timer\">set_process_cpu_timer</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#clock_id\">clock_id</a>, &amp;<a class=\"id\" href=\"#nval\">nval</a>, &amp;<a class=\"id\" href=\"#cval\">cval</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#nval\">nval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#incr\">incr</a> = <a class=\"id\" href=\"#ninterval\">ninterval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it\">it</a>-><a class=\"id\" href=\"#incr_error\">incr_error</a> = <a class=\"id\" href=\"#incr_error\">incr_error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_itimer_state\">trace_itimer_state</a>(<a class=\"id\" href=\"#clock_id\">clock_id</a> == <a class=\"id\" href=\"#CPUCLOCK_VIRT\">CPUCLOCK_VIRT</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ITIMER_VIRTUAL\">ITIMER_VIRTUAL</a> : <a class=\"id\" href=\"#ITIMER_PROF\">ITIMER_PROF</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#nval\">nval</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ovalue\">ovalue</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_timeval\">cputime_to_timeval</a>(<a class=\"id\" href=\"#cval\">cval</a>, &amp;<a class=\"id\" href=\"#ovalue\">ovalue</a>-><a class=\"id\" href=\"#it_value\">it_value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cputime_to_timeval\">cputime_to_timeval</a>(<a class=\"id\" href=\"#cinterval\">cinterval</a>, &amp;<a class=\"id\" href=\"#ovalue\">ovalue</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Returns true if the timeval is in canonical form</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#timeval_valid\">timeval_valid</a>(<a class=\"id\" href=\"#t\">t</a>) \\", 
"<span class=\"ts\"/>(((<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> >= 0) && (((unsigned long) (<a class=\"id\" href=\"#t\">t</a>)-><a class=\"id\" href=\"#tv_usec\">tv_usec</a>) &lt; <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>))", 
"", 
"int <a class=\"id\" href=\"#do_setitimer\">do_setitimer</a>(int <a class=\"id\" href=\"#which\">which</a>, struct <a class=\"id\" href=\"#itimerval\">itimerval</a> *<a class=\"id\" href=\"#value\">value</a>, struct <a class=\"id\" href=\"#itimerval\">itimerval</a> *<a class=\"id\" href=\"#ovalue\">ovalue</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a> = <a class=\"id\" href=\"#current\">current</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#expires\">expires</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Validate the timevals in value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timeval_valid\">timeval_valid</a>(&amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_value\">it_value</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#timeval_valid\">timeval_valid</a>(&amp;<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#which\">which</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ITIMER_REAL\">ITIMER_REAL</a>:", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a> = &amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#real_timer\">real_timer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ovalue\">ovalue</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ovalue\">ovalue</a>-><a class=\"id\" href=\"#it_value\">it_value</a> = <a class=\"id\" href=\"#itimer_get_remtime\">itimer_get_remtime</a>(<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ovalue\">ovalue</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#ktime_to_timeval\">ktime_to_timeval</a>(<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#it_real_incr\">it_real_incr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We are sharing -&gt;siglock with it_real_fn() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_try_to_cancel\">hrtimer_try_to_cancel</a>(<a class=\"id\" href=\"#timer\">timer</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#timeval_to_ktime\">timeval_to_ktime</a>(<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_value\">it_value</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#expires\">expires</a>.<a class=\"id\" href=\"#tv64\">tv64</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#it_real_incr\">it_real_incr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timeval_to_ktime\">timeval_to_ktime</a>(<a class=\"id\" href=\"#value\">value</a>-><a class=\"id\" href=\"#it_interval\">it_interval</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_start\">hrtimer_start</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#HRTIMER_MODE_REL\">HRTIMER_MODE_REL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#it_real_incr\">it_real_incr</a>.<a class=\"id\" href=\"#tv64\">tv64</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_itimer_state\">trace_itimer_state</a>(<a class=\"id\" href=\"#ITIMER_REAL\">ITIMER_REAL</a>, <a class=\"id\" href=\"#value\">value</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#sighand\">sighand</a>-><a class=\"id\" href=\"#siglock\">siglock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ITIMER_VIRTUAL\">ITIMER_VIRTUAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_itimer\">set_cpu_itimer</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#CPUCLOCK_VIRT\">CPUCLOCK_VIRT</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#ovalue\">ovalue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ITIMER_PROF\">ITIMER_PROF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_cpu_itimer\">set_cpu_itimer</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#CPUCLOCK_PROF\">CPUCLOCK_PROF</a>, <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#ovalue\">ovalue</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * alarm_setitimer - set alarm in seconds</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @seconds:<span class=\"ts\"/>number of seconds until alarm</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>0 disables the alarm</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the remaining time in seconds of a pending timer or 0 when</span>", 
"<span class=\"comment\"> * the timer is not active.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * On 32 bit machines the seconds value is limited to (INT_MAX/2) to avoid</span>", 
"<span class=\"comment\"> * negative timeval settings which would cause immediate expiry.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#alarm_setitimer\">alarm_setitimer</a>(unsigned int <a class=\"id\" href=\"#seconds\">seconds</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerval\">itimerval</a> <a class=\"id\" href=\"#it_new\">it_new</a>, <a class=\"id\" href=\"#it_old\">it_old</a>;", 
"", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> &lt; 64", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#seconds\">seconds</a> &gt; <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seconds\">seconds</a> = <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it_new\">it_new</a>.<a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#seconds\">seconds</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it_new\">it_new</a>.<a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#it_new\">it_new</a>.<a class=\"id\" href=\"#it_interval\">it_interval</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#it_new\">it_new</a>.<a class=\"id\" href=\"#it_interval\">it_interval</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_setitimer\">do_setitimer</a>(<a class=\"id\" href=\"#ITIMER_REAL\">ITIMER_REAL</a>, &amp;<a class=\"id\" href=\"#it_new\">it_new</a>, &amp;<a class=\"id\" href=\"#it_old\">it_old</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We can't return 0 if we have an alarm pending ...  And we'd</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * better return too much than too little anyway</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((!<a class=\"id\" href=\"#it_old\">it_old</a>.<a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> && <a class=\"id\" href=\"#it_old\">it_old</a>.<a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a>) ||", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#it_old\">it_old</a>.<a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> >= 500000)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#it_old\">it_old</a>.<a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>++;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#it_old\">it_old</a>.<a class=\"id\" href=\"#it_value\">it_value</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#setitimer\">setitimer</a>, int, <a class=\"id\" href=\"#which\">which</a>, struct <a class=\"id\" href=\"#itimerval\">itimerval</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerval\">itimerval</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#ovalue\">ovalue</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerval\">itimerval</a> <a class=\"id\" href=\"#set_buffer\">set_buffer</a>, <a class=\"id\" href=\"#get_buffer\">get_buffer</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if(<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#set_buffer\">set_buffer</a>, <a class=\"id\" href=\"#value\">value</a>, sizeof(<a class=\"id\" href=\"#set_buffer\">set_buffer</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>((char *) &amp;<a class=\"id\" href=\"#set_buffer\">set_buffer</a>, 0, sizeof(<a class=\"id\" href=\"#set_buffer\">set_buffer</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#do_setitimer\">do_setitimer</a>(<a class=\"id\" href=\"#which\">which</a>, &amp;<a class=\"id\" href=\"#set_buffer\">set_buffer</a>, <a class=\"id\" href=\"#ovalue\">ovalue</a> ? &amp;<a class=\"id\" href=\"#get_buffer\">get_buffer</a> : <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> || !<a class=\"id\" href=\"#ovalue\">ovalue</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
];
xr_frag_insert('l/35/981d894e5da9a1f7d0e459075baf900e0687bc.xr', __xr_tmp);
