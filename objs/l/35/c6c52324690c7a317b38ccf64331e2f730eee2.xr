var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * linux/mm/mmzone.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * management codes for pgdats and zones.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stddef\">stddef</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mmzone\">mmzone</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#first_online_pgdat\">first_online_pgdat</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#first_online_node\">first_online_node</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#next_online_pgdat\">next_online_pgdat</a>(struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a> = <a class=\"id\" href=\"#next_online_node\">next_online_node</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_id\">node_id</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nid\">nid</a> == <a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * next_zone - helper magic for for_each_zone()</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#next_zone\">next_zone</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pg_data_t\">pg_data_t</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#zone_pgdat\">zone_pgdat</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#zone\">zone</a> &lt; <a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_zones\">node_zones</a> + <a class=\"id\" href=\"#MAX_NR_ZONES\">MAX_NR_ZONES</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a>++;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgdat\">pgdat</a> = <a class=\"id\" href=\"#next_online_pgdat\">next_online_pgdat</a>(<a class=\"id\" href=\"#pgdat\">pgdat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pgdat\">pgdat</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_zones\">node_zones</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#zone\">zone</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#zref_in_nodemask\">zref_in_nodemask</a>(struct <a class=\"id\" href=\"#zoneref\">zoneref</a> *<a class=\"id\" href=\"#zref\">zref</a>, <a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> *<a class=\"id\" href=\"#nodes\">nodes</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#node_isset\">node_isset</a>(<a class=\"id\" href=\"#zonelist_node_idx\">zonelist_node_idx</a>(<a class=\"id\" href=\"#zref\">zref</a>), *<a class=\"id\" href=\"#nodes\">nodes</a>);", 
"#else", 
"<span class=\"ts\"/>return 1;", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_NUMA */</span>", 
"}", 
"", 
"<span class=\"comment\">/* Returns the next zone at or below highest_zoneidx in a zonelist */</span>", 
"struct <a class=\"id\" href=\"#zoneref\">zoneref</a> *<a class=\"id\" href=\"#next_zones_zonelist\">next_zones_zonelist</a>(struct <a class=\"id\" href=\"#zoneref\">zoneref</a> *<a class=\"id\" href=\"#z\">z</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#zone_type\">zone_type</a> <a class=\"id\" href=\"#highest_zoneidx\">highest_zoneidx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> *<a class=\"id\" href=\"#nodes\">nodes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> **<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Find the next suitable zone to use for the allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Only filter based on nodemask if it's set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#nodes\">nodes</a> == <a class=\"id\" href=\"#NULL\">NULL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#zonelist_zone_idx\">zonelist_zone_idx</a>(<a class=\"id\" href=\"#z\">z</a>) &gt; <a class=\"id\" href=\"#highest_zoneidx\">highest_zoneidx</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#z\">z</a>++;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#zonelist_zone_idx\">zonelist_zone_idx</a>(<a class=\"id\" href=\"#z\">z</a>) &gt; <a class=\"id\" href=\"#highest_zoneidx\">highest_zoneidx</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#z\">z</a>-><a class=\"id\" href=\"#zone\">zone</a> && !<a class=\"id\" href=\"#zref_in_nodemask\">zref_in_nodemask</a>(<a class=\"id\" href=\"#z\">z</a>, <a class=\"id\" href=\"#nodes\">nodes</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#z\">z</a>++;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#zonelist_zone\">zonelist_zone</a>(<a class=\"id\" href=\"#z\">z</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#z\">z</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_ARCH_HAS_HOLES_MEMORYMODEL\">CONFIG_ARCH_HAS_HOLES_MEMORYMODEL</a>", 
"int <a class=\"id\" href=\"#memmap_valid_within\">memmap_valid_within</a>(unsigned long <a class=\"id\" href=\"#pfn\">pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>, struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#page\">page</a>) != <a class=\"id\" href=\"#pfn\">pfn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_zone\">page_zone</a>(<a class=\"id\" href=\"#page\">page</a>) != <a class=\"id\" href=\"#zone\">zone</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_ARCH_HAS_HOLES_MEMORYMODEL */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SMP\">CONFIG_SMP</a>", 
"<span class=\"comment\">/* Called when a more accurate view of NR_FREE_PAGES is needed */</span>", 
"unsigned long <a class=\"id\" href=\"#zone_nr_free_pages\">zone_nr_free_pages</a>(struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a> = <a class=\"id\" href=\"#zone_page_state\">zone_page_state</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#NR_FREE_PAGES\">NR_FREE_PAGES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * While kswapd is awake, it is considered the zone is under some</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memory pressure. Under pressure, there is a risk that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * per-cpu-counter-drift will allow the min watermark to be breached</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * potentially causing a live-lock. While kswapd is awake and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * free pages are low, get a better estimate for free pages</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a> &lt; <a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#percpu_drift_mark\">percpu_drift_mark</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#waitqueue_active\">waitqueue_active</a>(&amp;<a class=\"id\" href=\"#zone\">zone</a>-><a class=\"id\" href=\"#zone_pgdat\">zone_pgdat</a>-><a class=\"id\" href=\"#kswapd_wait\">kswapd_wait</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#zone_page_state_snapshot\">zone_page_state_snapshot</a>(<a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#NR_FREE_PAGES\">NR_FREE_PAGES</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SMP */</span>", 
];
xr_frag_insert('l/35/c6c52324690c7a317b38ccf64331e2f730eee2.xr', __xr_tmp);
