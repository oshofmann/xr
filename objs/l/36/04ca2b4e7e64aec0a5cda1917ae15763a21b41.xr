var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#tty_kref_put\">tty_kref_put</a>(<a class=\"id\" href=\"#tty\">tty</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Write warnings to the console and send warning messages over netlink.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that this function can sleep.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *const *<a class=\"id\" href=\"#dquots\">dquots</a>, char *<a class=\"id\" href=\"#warntype\">warntype</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dq\">dq</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dq\">dq</a> = <a class=\"id\" href=\"#dquots\">dquots</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dq\">dq</a> && <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#i\">i</a>] != <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#warning_issued\">warning_issued</a>(<a class=\"id\" href=\"#dq\">dq</a>, <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#i\">i</a>])) {", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PRINT_QUOTA_WARNING\">CONFIG_PRINT_QUOTA_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_warning\">print_warning</a>(<a class=\"id\" href=\"#dq\">dq</a>, <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quota_send_warning\">quota_send_warning</a>(<a class=\"id\" href=\"#dq\">dq</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>, <a class=\"id\" href=\"#dq\">dq</a>-><a class=\"id\" href=\"#dq_id\">dq_id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dq\">dq</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>-><a class=\"id\" href=\"#s_dev\">s_dev</a>, <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ignore_hardlimit\">ignore_hardlimit</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mem_dqinfo\">mem_dqinfo</a> *<a class=\"id\" href=\"#info\">info</a> = &amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>];", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RESOURCE\">CAP_SYS_RESOURCE</a>) &&", 
"<span class=\"ts\"/>       (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#dqi_format\">dqi_format</a>-><a class=\"id\" href=\"#qf_fmt_id\">qf_fmt_id</a> != <a class=\"id\" href=\"#QFMT_VFS_OLD\">QFMT_VFS_OLD</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#dqi_flags\">dqi_flags</a> &amp; <a class=\"id\" href=\"#V1_DQF_RSQUASH\">V1_DQF_RSQUASH</a>));", 
"}", 
"", 
"<span class=\"comment\">/* needs dq_data_lock */</span>", 
"static int <a class=\"id\" href=\"#check_idq\">check_idq</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#inodes\">inodes</a>, char *<a class=\"id\" href=\"#warntype\">warntype</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#newinodes\">newinodes</a> = <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curinodes\">dqb_curinodes</a> + <a class=\"id\" href=\"#inodes\">inodes</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_has_quota_limits_enabled\">sb_has_quota_limits_enabled</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>, <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DQ_FAKE_B\">DQ_FAKE_B</a>, &amp;<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_flags\">dq_flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_ihardlimit\">dqb_ihardlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#newinodes\">newinodes</a> &gt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_ihardlimit\">dqb_ihardlimit</a> &&", 
"            !<a class=\"id\" href=\"#ignore_hardlimit\">ignore_hardlimit</a>(<a class=\"id\" href=\"#dquot\">dquot</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_IHARDWARN\">QUOTA_NL_IHARDWARN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDQUOT\">EDQUOT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_isoftlimit\">dqb_isoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#newinodes\">newinodes</a> &gt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_isoftlimit\">dqb_isoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_itime\">dqb_itime</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() >= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_itime\">dqb_itime</a> &&", 
"            !<a class=\"id\" href=\"#ignore_hardlimit\">ignore_hardlimit</a>(<a class=\"id\" href=\"#dquot\">dquot</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_ISOFTLONGWARN\">QUOTA_NL_ISOFTLONGWARN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDQUOT\">EDQUOT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_isoftlimit\">dqb_isoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#newinodes\">newinodes</a> &gt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_isoftlimit\">dqb_isoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_itime\">dqb_itime</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_ISOFTWARN\">QUOTA_NL_ISOFTWARN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_itime\">dqb_itime</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() +", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>)-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>].<a class=\"id\" href=\"#dqi_igrace\">dqi_igrace</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* needs dq_data_lock */</span>", 
"static int <a class=\"id\" href=\"#check_bdq\">check_bdq</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#space\">space</a>, int <a class=\"id\" href=\"#prealloc\">prealloc</a>, char *<a class=\"id\" href=\"#warntype\">warntype</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#tspace\">tspace</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_has_quota_limits_enabled\">sb_has_quota_limits_enabled</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DQ_FAKE_B\">DQ_FAKE_B</a>, &amp;<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_flags\">dq_flags</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tspace\">tspace</a> = <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curspace\">dqb_curspace</a> + <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_rsvspace\">dqb_rsvspace</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>+ <a class=\"id\" href=\"#space\">space</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bhardlimit\">dqb_bhardlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tspace\">tspace</a> &gt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bhardlimit\">dqb_bhardlimit</a> &&", 
"            !<a class=\"id\" href=\"#ignore_hardlimit\">ignore_hardlimit</a>(<a class=\"id\" href=\"#dquot\">dquot</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#prealloc\">prealloc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_BHARDWARN\">QUOTA_NL_BHARDWARN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDQUOT\">EDQUOT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bsoftlimit\">dqb_bsoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tspace\">tspace</a> &gt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bsoftlimit\">dqb_bsoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_btime\">dqb_btime</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() >= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_btime\">dqb_btime</a> &&", 
"            !<a class=\"id\" href=\"#ignore_hardlimit\">ignore_hardlimit</a>(<a class=\"id\" href=\"#dquot\">dquot</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#prealloc\">prealloc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_BSOFTLONGWARN\">QUOTA_NL_BSOFTLONGWARN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDQUOT\">EDQUOT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bsoftlimit\">dqb_bsoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#tspace\">tspace</a> &gt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bsoftlimit\">dqb_bsoftlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_btime\">dqb_btime</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#prealloc\">prealloc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#warntype\">warntype</a> = <a class=\"id\" href=\"#QUOTA_NL_BSOFTWARN\">QUOTA_NL_BSOFTWARN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_btime\">dqb_btime</a> = <a class=\"id\" href=\"#get_seconds\">get_seconds</a>() +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>].<a class=\"id\" href=\"#dqi_bgrace\">dqi_bgrace</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We don't allow preallocation to exceed softlimit so exceeding will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * be always printed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDQUOT\">EDQUOT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#info_idq_free\">info_idq_free</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#inodes\">inodes</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#newinodes\">newinodes</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DQ_FAKE_B\">DQ_FAKE_B</a>, &amp;<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_flags\">dq_flags</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curinodes\">dqb_curinodes</a> <= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_isoftlimit\">dqb_isoftlimit</a> ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#sb_has_quota_limits_enabled\">sb_has_quota_limits_enabled</a>(<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_sb\">dq_sb</a>, <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_type\">dq_type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newinodes\">newinodes</a> = <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curinodes\">dqb_curinodes</a> - <a class=\"id\" href=\"#inodes\">inodes</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newinodes\">newinodes</a> <= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_isoftlimit\">dqb_isoftlimit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_ISOFTBELOW\">QUOTA_NL_ISOFTBELOW</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curinodes\">dqb_curinodes</a> >= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_ihardlimit\">dqb_ihardlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#newinodes\">newinodes</a> &lt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_ihardlimit\">dqb_ihardlimit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_IHARDBELOW\">QUOTA_NL_IHARDBELOW</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#info_bdq_free\">info_bdq_free</a>(struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#dquot\">dquot</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#space\">space</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#DQ_FAKE_B\">DQ_FAKE_B</a>, &amp;<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_flags\">dq_flags</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curspace\">dqb_curspace</a> <= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bsoftlimit\">dqb_bsoftlimit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curspace\">dqb_curspace</a> - <a class=\"id\" href=\"#space\">space</a> <= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bsoftlimit\">dqb_bsoftlimit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_BSOFTBELOW\">QUOTA_NL_BSOFTBELOW</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curspace\">dqb_curspace</a> >= <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bhardlimit\">dqb_bhardlimit</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_curspace\">dqb_curspace</a> - <a class=\"id\" href=\"#space\">space</a> &lt; <a class=\"id\" href=\"#dquot\">dquot</a>-><a class=\"id\" href=\"#dq_dqb\">dq_dqb</a>.<a class=\"id\" href=\"#dqb_bhardlimit\">dqb_bhardlimit</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_BHARDBELOW\">QUOTA_NL_BHARDBELOW</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dquot_active\">dquot_active</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_NOQUOTA\">IS_NOQUOTA</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>) &amp; ~<a class=\"id\" href=\"#sb_any_quota_suspended\">sb_any_quota_suspended</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialize quota pointers in inode</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We do things in a bit complicated way but by that we avoid calling</span>", 
"<span class=\"comment\"> * dqget() and thus filesystem callbacks under dqptr_sem.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It is better to call this function outside of any transaction as it</span>", 
"<span class=\"comment\"> * might need a lot of space in journal for dquot structure allocation.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__dquot_initialize\">__dquot_initialize</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#id\">id</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#got\">got</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#rsv\">rsv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First test before acquiring mutex - solves deadlocks when we</span>", 
"<span class=\"comment\">         * re-enter the quota code and are already holding the mutex */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dquot_active\">dquot_active</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First get references to structures we might need. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#got\">got</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != -1 && <a class=\"id\" href=\"#cnt\">cnt</a> != <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#cnt\">cnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#got\">got</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#dqget\">dqget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_NOQUOTA\">IS_NOQUOTA</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != -1 && <a class=\"id\" href=\"#cnt\">cnt</a> != <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Avoid races with quotaoff() */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_has_quota_active\">sb_has_quota_active</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#got\">got</a>[<a class=\"id\" href=\"#cnt\">cnt</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#got\">got</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Make quota reservation system happy if someone</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * did a write before quota was turned on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rsv\">rsv</a> = <a class=\"id\" href=\"#inode_get_rsv_space\">inode_get_rsv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#rsv\">rsv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_resv_space\">dquot_resv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#rsv\">rsv</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop unused references */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dqput_all\">dqput_all</a>(<a class=\"id\" href=\"#got\">got</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dquot_initialize\">__dquot_initialize</a>(<a class=\"id\" href=\"#inode\">inode</a>, -1);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Release all quotas referenced by inode</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__dquot_drop\">__dquot_drop</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#put\">put</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put\">put</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dqput_all\">dqput_all</a>(<a class=\"id\" href=\"#put\">put</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#dquot_drop\">dquot_drop</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_NOQUOTA\">IS_NOQUOTA</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Test before calling to rule out calls from proc and such</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * where we are not allowed to block. Note that this is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * actually reliable test even without the lock - the caller</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must assure that nobody can come after the DQUOT_DROP and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * add quota pointers back anyway.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__dquot_drop\">__dquot_drop</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_drop\">dquot_drop</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * inode_reserved_space is managed internally by quota, and protected by</span>", 
"<span class=\"comment\"> * i_lock similar to i_blocks+i_bytes.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#qsize_t\">qsize_t</a> *<a class=\"id\" href=\"#inode_reserved_space\">inode_reserved_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Filesystem must explicitly define it's own method in order to use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * quota reservation interface */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#dq_op\">dq_op</a>-><a class=\"id\" href=\"#get_reserved_space\">get_reserved_space</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#dq_op\">dq_op</a>-><a class=\"id\" href=\"#get_reserved_space\">get_reserved_space</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#inode_add_rsv_space\">inode_add_rsv_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#inode_reserved_space\">inode_reserved_space</a>(<a class=\"id\" href=\"#inode\">inode</a>) += <a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inode_add_rsv_space\">inode_add_rsv_space</a>);", 
"", 
"void <a class=\"id\" href=\"#inode_claim_rsv_space\">inode_claim_rsv_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#inode_reserved_space\">inode_reserved_space</a>(<a class=\"id\" href=\"#inode\">inode</a>) -= <a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__inode_add_bytes\">__inode_add_bytes</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inode_claim_rsv_space\">inode_claim_rsv_space</a>);", 
"", 
"void <a class=\"id\" href=\"#inode_sub_rsv_space\">inode_sub_rsv_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#inode_reserved_space\">inode_reserved_space</a>(<a class=\"id\" href=\"#inode\">inode</a>) -= <a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inode_sub_rsv_space\">inode_sub_rsv_space</a>);", 
"", 
"static <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#inode_get_rsv_space\">inode_get_rsv_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#dq_op\">dq_op</a>-><a class=\"id\" href=\"#get_reserved_space\">get_reserved_space</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = *<a class=\"id\" href=\"#inode_reserved_space\">inode_reserved_space</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_lock\">i_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#inode_incr_space\">inode_incr_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#reserve\">reserve</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reserve\">reserve</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_add_rsv_space\">inode_add_rsv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_add_bytes\">inode_add_bytes</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#inode_decr_space\">inode_decr_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>, int <a class=\"id\" href=\"#reserve\">reserve</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reserve\">reserve</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_sub_rsv_space\">inode_sub_rsv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_sub_bytes\">inode_sub_bytes</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This functions updates i_blocks+i_bytes fields and quota information</span>", 
"<span class=\"comment\"> * (together with appropriate checks).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NOTE: We absolutely rely on the fact that caller dirties the inode</span>", 
"<span class=\"comment\"> * (usually helpers in quotaops.h care about this) and holds a handle for</span>", 
"<span class=\"comment\"> * the current transaction so that dquot write and inode write go into the</span>", 
"<span class=\"comment\"> * same transaction.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This operation can block, but only after everything is updated</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#warn\">warn</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SPACE_WARN\">DQUOT_SPACE_WARN</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reserve\">reserve</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SPACE_RESERVE\">DQUOT_SPACE_RESERVE</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nofail\">nofail</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SPACE_NOFAIL\">DQUOT_SPACE_NOFAIL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First test before acquiring mutex - solves deadlocks when we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * re-enter the quota code and are already holding the mutex</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dquot_active\">dquot_active</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_incr_space\">inode_incr_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#reserve\">reserve</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#check_bdq\">check_bdq</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#number\">number</a>, !<a class=\"id\" href=\"#warn\">warn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype\">warntype</a>+<a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> && !<a class=\"id\" href=\"#nofail\">nofail</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_flush_warn\">out_flush_warn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reserve\">reserve</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_resv_space\">dquot_resv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_incr_space\">dquot_incr_space</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_incr_space\">inode_incr_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#reserve\">reserve</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reserve\">reserve</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_flush_warn\">out_flush_warn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_all_dquot_dirty\">mark_all_dquot_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>);", 
"<a class=\"id\" href=\"#out_flush_warn\">out_flush_warn</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>, <a class=\"id\" href=\"#warntype\">warntype</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__dquot_alloc_space\">__dquot_alloc_space</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This operation can block, but only after everything is updated</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dquot_alloc_inode\">dquot_alloc_inode</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First test before acquiring mutex - solves deadlocks when we</span>", 
"<span class=\"comment\">         * re-enter the quota code and are already holding the mutex */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dquot_active\">dquot_active</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#check_idq\">check_idq</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1, <a class=\"id\" href=\"#warntype\">warntype</a> + <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#warn_put_all\">warn_put_all</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_incr_inodes\">dquot_incr_inodes</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#warn_put_all\">warn_put_all</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_all_dquot_dirty\">mark_all_dquot_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>, <a class=\"id\" href=\"#warntype\">warntype</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_alloc_inode\">dquot_alloc_inode</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Convert in-memory reserved quotas to real consumed quotas</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dquot_claim_space_nodirty\">dquot_claim_space_nodirty</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dquot_active\">dquot_active</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_claim_rsv_space\">inode_claim_rsv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Claim reserved quotas to allocated quotas */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_claim_reserved_space\">dquot_claim_reserved_space</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Update inode bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_claim_rsv_space\">inode_claim_rsv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_all_dquot_dirty\">mark_all_dquot_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_claim_space_nodirty\">dquot_claim_space_nodirty</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This operation can block, but only after everything is updated</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__dquot_free_space\">__dquot_free_space</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#number\">number</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reserve\">reserve</a> = <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SPACE_RESERVE\">DQUOT_SPACE_RESERVE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First test before acquiring mutex - solves deadlocks when we</span>", 
"<span class=\"comment\">         * re-enter the quota code and are already holding the mutex */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dquot_active\">dquot_active</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode_decr_space\">inode_decr_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#reserve\">reserve</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#info_bdq_free\">info_bdq_free</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#reserve\">reserve</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_reserved_space\">dquot_free_reserved_space</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_decr_space\">dquot_decr_space</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#number\">number</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode_decr_space\">inode_decr_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#reserve\">reserve</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reserve\">reserve</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_all_dquot_dirty\">mark_all_dquot_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>, <a class=\"id\" href=\"#warntype\">warntype</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__dquot_free_space\">__dquot_free_space</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This operation can block, but only after everything is updated</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#dquot_free_inode\">dquot_free_inode</a>(const struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First test before acquiring mutex - solves deadlocks when we</span>", 
"<span class=\"comment\">         * re-enter the quota code and are already holding the mutex */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dquot_active\">dquot_active</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype\">warntype</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#info_idq_free\">info_idq_free</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_decr_inodes\">dquot_decr_inodes</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_all_dquot_dirty\">mark_all_dquot_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>, <a class=\"id\" href=\"#warntype\">warntype</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_free_inode\">dquot_free_inode</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Transfer the number of inode and blocks from one diskquota to an other.</span>", 
"<span class=\"comment\"> * On success, dquot references in transfer_to are consumed and references</span>", 
"<span class=\"comment\"> * to original dquots that need to be released are placed there. On failure,</span>", 
"<span class=\"comment\"> * references are kept untouched.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This operation can block, but only after everything is updated</span>", 
"<span class=\"comment\"> * A transaction must be started when entering this function.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__dquot_transfer\">__dquot_transfer</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#dquot\">dquot</a> **<a class=\"id\" href=\"#transfer_to\">transfer_to</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#space\">space</a>, <a class=\"id\" href=\"#cur_space\">cur_space</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#qsize_t\">qsize_t</a> <a class=\"id\" href=\"#rsv_space\">rsv_space</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>] = {};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#warntype_to\">warntype_to</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#warntype_from_inodes\">warntype_from_inodes</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>], <a class=\"id\" href=\"#warntype_from_space\">warntype_from_space</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First test before acquiring mutex - solves deadlocks when we</span>", 
"<span class=\"comment\">         * re-enter the quota code and are already holding the mutex */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_NOQUOTA\">IS_NOQUOTA</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize the arrays */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype_to\">warntype_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#QUOTA_NL_NOWARN\">QUOTA_NL_NOWARN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_NOQUOTA\">IS_NOQUOTA</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {<span class=\"ts\"/><span class=\"comment\">/* File without quota accounting? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cur_space\">cur_space</a> = <a class=\"id\" href=\"#inode_get_bytes\">inode_get_bytes</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rsv_space\">rsv_space</a> = <a class=\"id\" href=\"#inode_get_rsv_space\">inode_get_rsv_space</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#space\">space</a> = <a class=\"id\" href=\"#cur_space\">cur_space</a> + <a class=\"id\" href=\"#rsv_space\">rsv_space</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Build the transfer_from list and check the limits */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#check_idq\">check_idq</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1, <a class=\"id\" href=\"#warntype_to\">warntype_to</a> + <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#over_quota\">over_quota</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#check_bdq\">check_bdq</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#space\">space</a>, 0, <a class=\"id\" href=\"#warntype_to\">warntype_to</a> + <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#over_quota\">over_quota</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Finally perform the needed transfer from transfer_from to transfer_to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Skip changes for same uid or gid or for turned off quota-type.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Due to IO error we might not have transfer_from[] structure */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype_from_inodes\">warntype_from_inodes</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info_idq_free\">info_idq_free</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warntype_from_space\">warntype_from_space</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#info_bdq_free\">info_bdq_free</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#space\">space</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_decr_inodes\">dquot_decr_inodes</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_decr_space\">dquot_decr_space</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#cur_space\">cur_space</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_reserved_space\">dquot_free_reserved_space</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#rsv_space\">rsv_space</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_incr_inodes\">dquot_incr_inodes</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_incr_space\">dquot_incr_space</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#cur_space\">cur_space</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_resv_space\">dquot_resv_space</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>], <a class=\"id\" href=\"#rsv_space\">rsv_space</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_dquot\">i_dquot</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>];", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_all_dquot_dirty\">mark_all_dquot_dirty</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_all_dquot_dirty\">mark_all_dquot_dirty</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Pass back references to put */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#transfer_from\">transfer_from</a>[<a class=\"id\" href=\"#cnt\">cnt</a>];", 
"<a class=\"id\" href=\"#warn\">warn</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>, <a class=\"id\" href=\"#warntype_to\">warntype_to</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>, <a class=\"id\" href=\"#warntype_from_inodes\">warntype_from_inodes</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#flush_warnings\">flush_warnings</a>(<a class=\"id\" href=\"#transfer_from\">transfer_from</a>, <a class=\"id\" href=\"#warntype_from_space\">warntype_from_space</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<a class=\"id\" href=\"#over_quota\">over_quota</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_data_lock\">dq_data_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#dqptr_sem\">dqptr_sem</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#warn\">warn</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__dquot_transfer\">__dquot_transfer</a>);", 
"", 
"<span class=\"comment\">/* Wrapper for transferring ownership of an inode for uid/gid only</span>", 
"<span class=\"comment\"> * Called from FSXXX_setattr()</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dquot_transfer\">dquot_transfer</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#iattr\">iattr</a> *<a class=\"id\" href=\"#iattr\">iattr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dquot\">dquot</a> *<a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>] = {};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dquot_active\">dquot_active</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iattr\">iattr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_UID\">ATTR_UID</a> && <a class=\"id\" href=\"#iattr\">iattr</a>-><a class=\"id\" href=\"#ia_uid\">ia_uid</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>] = <a class=\"id\" href=\"#dqget\">dqget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#iattr\">iattr</a>-><a class=\"id\" href=\"#ia_uid\">ia_uid</a>, <a class=\"id\" href=\"#USRQUOTA\">USRQUOTA</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iattr\">iattr</a>-><a class=\"id\" href=\"#ia_valid\">ia_valid</a> &amp; <a class=\"id\" href=\"#ATTR_GID\">ATTR_GID</a> && <a class=\"id\" href=\"#iattr\">iattr</a>-><a class=\"id\" href=\"#ia_gid\">ia_gid</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_gid\">i_gid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#transfer_to\">transfer_to</a>[<a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>] = <a class=\"id\" href=\"#dqget\">dqget</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#iattr\">iattr</a>-><a class=\"id\" href=\"#ia_gid\">ia_gid</a>, <a class=\"id\" href=\"#GRPQUOTA\">GRPQUOTA</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__dquot_transfer\">__dquot_transfer</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#transfer_to\">transfer_to</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dqput_all\">dqput_all</a>(<a class=\"id\" href=\"#transfer_to\">transfer_to</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_transfer\">dquot_transfer</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Write info of quota file to disk</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dquot_commit_info\">dquot_commit_info</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#quota_info\">quota_info</a> *<a class=\"id\" href=\"#dqopt\">dqopt</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqio_mutex\">dqio_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#type\">type</a>]-><a class=\"id\" href=\"#write_file_info\">write_file_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqio_mutex\">dqio_mutex</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_commit_info\">dquot_commit_info</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definitions of diskquota operations.</span>", 
"<span class=\"comment\"> */</span>", 
"const struct <a class=\"id\" href=\"#dquot_operations\">dquot_operations</a> <a class=\"id\" href=\"#dquot_operations\">dquot_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_dquot\">write_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_commit\">dquot_commit</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#acquire_dquot\">acquire_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_acquire\">dquot_acquire</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release_dquot\">release_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_release\">dquot_release</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mark_dirty\">mark_dirty</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_mark_dquot_dirty\">dquot_mark_dquot_dirty</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write_info\">write_info</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_commit_info\">dquot_commit_info</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alloc_dquot\">alloc_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_alloc\">dquot_alloc</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#destroy_dquot\">destroy_dquot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#dquot_destroy\">dquot_destroy</a>,", 
"};", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_operations\">dquot_operations</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Generic helper for -&gt;open on filesystems supporting disk quotas.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dquot_file_open\">dquot_file_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#generic_file_open\">generic_file_open</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_initialize\">dquot_initialize</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_file_open\">dquot_file_open</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Turn quota off on a device. type == -1 ==&gt; quotaoff for all types (umount)</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#quota_info\">quota_info</a> *<a class=\"id\" href=\"#dqopt\">dqopt</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>];", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cannot turn off usage accounting without turning off limits, or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * suspend quotas and simultaneously turn quotas off. */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_USAGE_ENABLED\">DQUOT_USAGE_ENABLED</a> && !(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_LIMITS_ENABLED\">DQUOT_LIMITS_ENABLED</a>))", 
"<span class=\"ts\"/>    || (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a> && <a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#DQUOT_LIMITS_ENABLED\">DQUOT_LIMITS_ENABLED</a> |", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#DQUOT_USAGE_ENABLED\">DQUOT_USAGE_ENABLED</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need to serialize quota_off() for device */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqonoff_mutex\">dqonoff_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Skip everything if there's nothing to do. We have to do this because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sometimes we are called when fill_super() failed and calling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sync_fs() in such cases does no good.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_any_quota_loaded\">sb_any_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqonoff_mutex\">dqonoff_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != -1 && <a class=\"id\" href=\"#cnt\">cnt</a> != <a class=\"id\" href=\"#type\">type</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_state_lock\">dq_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#flags\">flags</a> |=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_state_flag\">dquot_state_flag</a>(<a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_state_lock\">dq_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dq_state_lock\">dq_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#dquot_state_flag\">dquot_state_flag</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Turning off suspended quotas? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#sb_has_quota_suspended\">sb_has_quota_suspended</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#flags\">flags</a> &=<span class=\"ts\"/>~<a class=\"id\" href=\"#dquot_state_flag\">dquot_state_flag</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_state_lock\">dq_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dq_state_lock\">dq_state_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We still have to keep quota loaded? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>) && !(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Note: these are blocking operations */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drop_dquot_ref\">drop_dquot_ref</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invalidate_dquots\">invalidate_dquots</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Now all dquots should be invalidated, all writes done so we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * should be only users of the info. No locks needed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#info_dirty\">info_dirty</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#dq_op\">dq_op</a>-><a class=\"id\" href=\"#write_info\">write_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]-><a class=\"id\" href=\"#free_file_info\">free_file_info</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]-><a class=\"id\" href=\"#free_file_info\">free_file_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_quota_format\">put_quota_format</a>(<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#dqi_format\">dqi_format</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#cnt\">cnt</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#files\">files</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#dqi_flags\">dqi_flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#dqi_igrace\">dqi_igrace</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#info\">info</a>[<a class=\"id\" href=\"#cnt\">cnt</a>].<a class=\"id\" href=\"#dqi_bgrace\">dqi_bgrace</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#ops\">ops</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqonoff_mutex\">dqonoff_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Skip syncing and setting flags if quota files are hidden */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_QUOTA_SYS_FILE\">DQUOT_QUOTA_SYS_FILE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#put_inodes\">put_inodes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Sync the superblock so that buffers with quota data are written to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * disk (and so userspace sees correct data afterwards). */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a>-><a class=\"id\" href=\"#sync_fs\">sync_fs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a>-><a class=\"id\" href=\"#sync_fs\">sync_fs</a>(<a class=\"id\" href=\"#sb\">sb</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sync_blockdev\">sync_blockdev</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* Now the quota files are just ordinary files and we can set the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * inode flags back. Moreover we discard the pagecache so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * userspace sees the writes we did bypassing the pagecache. We</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * must also discard the blockdev buffers so that we see the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * changes done by userspace on the next quotaon() */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqonoff_mutex\">dqonoff_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If quota was reenabled in the meantime, we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * nothing to do */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#cnt\">cnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#I_MUTEX_QUOTA\">I_MUTEX_QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]-><a class=\"id\" href=\"#i_flags\">i_flags</a> &= ~(<a class=\"id\" href=\"#S_IMMUTABLE\">S_IMMUTABLE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#S_NOATIME\">S_NOATIME</a> | <a class=\"id\" href=\"#S_NOQUOTA\">S_NOQUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#truncate_inode_pages\">truncate_inode_pages</a>(&amp;<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]-><a class=\"id\" href=\"#i_data\">i_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty_sync\">mark_inode_dirty_sync</a>(<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqonoff_mutex\">dqonoff_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invalidate_bdev\">invalidate_bdev</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"<a class=\"id\" href=\"#put_inodes\">put_inodes</a>:", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#cnt\">cnt</a> = 0; <a class=\"id\" href=\"#cnt\">cnt</a> &lt; <a class=\"id\" href=\"#MAXQUOTAS\">MAXQUOTAS</a>; <a class=\"id\" href=\"#cnt\">cnt</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* On remount RO, we keep the inode pointer so that we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * can reenable quota on the subsequent remount RW. We</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * have to check 'flags' variable and not use sb_has_</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * function because another quotaon / quotaoff could</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * change global state before we got here. We refuse</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * to suspend quotas when there is pending delete on</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the quota file... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_SUSPENDED\">DQUOT_SUSPENDED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#toputinode\">toputinode</a>[<a class=\"id\" href=\"#cnt\">cnt</a>]-><a class=\"id\" href=\"#i_nlink\">i_nlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>);", 
"", 
"int <a class=\"id\" href=\"#dquot_quota_off\">dquot_quota_off</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dquot_disable\">dquot_disable</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#DQUOT_USAGE_ENABLED\">DQUOT_USAGE_ENABLED</a> | <a class=\"id\" href=\"#DQUOT_LIMITS_ENABLED\">DQUOT_LIMITS_ENABLED</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dquot_quota_off\">dquot_quota_off</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Turn quotas on on a device</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helper function to turn quotas on when we already have the inode of</span>", 
"<span class=\"comment\"> * quota file and no quota information is loaded.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#vfs_load_quota_inode\">vfs_load_quota_inode</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#type\">type</a>, int <a class=\"id\" href=\"#format_id\">format_id</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#quota_format_type\">quota_format_type</a> *<a class=\"id\" href=\"#fmt\">fmt</a> = <a class=\"id\" href=\"#find_quota_format\">find_quota_format</a>(<a class=\"id\" href=\"#format_id\">format_id</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#quota_info\">quota_info</a> *<a class=\"id\" href=\"#dqopt\">dqopt</a> = <a class=\"id\" href=\"#sb_dqopt\">sb_dqopt</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#oldflags\">oldflags</a> = -1;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#fmt\">fmt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISREG\">S_ISREG</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fmt\">out_fmt</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_RDONLY\">IS_RDONLY</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EROFS\">EROFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fmt\">out_fmt</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a>-><a class=\"id\" href=\"#quota_write\">quota_write</a> || !<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_op\">s_op</a>-><a class=\"id\" href=\"#quota_read\">quota_read</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fmt\">out_fmt</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Usage always has to be set... */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_USAGE_ENABLED\">DQUOT_USAGE_ENABLED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fmt\">out_fmt</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_QUOTA_SYS_FILE\">DQUOT_QUOTA_SYS_FILE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* As we bypass the pagecache we must now flush all the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * dirty data and invalidate caches so that kernel sees</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * changes from userspace. It is not enough to just flush</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the quota file since if blocksize &lt; pagesize, invalidation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of the cache could fail because of other unrelated dirty</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * data */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sync_filesystem\">sync_filesystem</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#invalidate_bdev\">invalidate_bdev</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#dqonoff_mutex\">dqonoff_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sb_has_quota_loaded\">sb_has_quota_loaded</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#type\">type</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_lock\">out_lock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dqopt\">dqopt</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DQUOT_QUOTA_SYS_FILE\">DQUOT_QUOTA_SYS_FILE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We don't want quota and atime on quota files (deadlocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * possible) Also nobody should write to the file - we use</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * special IO operations which ignore the immutable bit. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_QUOTA\">I_MUTEX_QUOTA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oldflags\">oldflags</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> &amp; (<a class=\"id\" href=\"#S_NOATIME\">S_NOATIME</a> | <a class=\"id\" href=\"#S_IMMUTABLE\">S_IMMUTABLE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#S_NOQUOTA\">S_NOQUOTA</a>);", 
];
xr_frag_insert('l/36/04ca2b4e7e64aec0a5cda1917ae15763a21b41.xr', __xr_tmp);
