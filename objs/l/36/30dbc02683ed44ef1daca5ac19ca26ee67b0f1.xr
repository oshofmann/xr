var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_SIGNAL_H\">_LINUX_SIGNAL_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_SIGNAL_H\">_LINUX_SIGNAL_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#siginfo\">siginfo</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* for sysctl */</span>", 
"extern int <a class=\"id\" href=\"#print_fatal_signals\">print_fatal_signals</a>;", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Real Time signals may be queued.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#sigqueue\">sigqueue</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#siginfo_t\">siginfo_t</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#user_struct\">user_struct</a> *<a class=\"id\" href=\"#user\">user</a>;", 
"};", 
"", 
"<span class=\"comment\">/* flags values. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SIGQUEUE_PREALLOC\">SIGQUEUE_PREALLOC</a><span class=\"ts\"/>1", 
"", 
"struct <a class=\"id\" href=\"#sigpending\">sigpending</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#signal\">signal</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Define some primitives to manipulate sigset_t.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__HAVE_ARCH_SIG_BITOPS\">__HAVE_ARCH_SIG_BITOPS</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bitops\">bitops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* We don't use &lt;linux/bitops.h&gt; for these because there is no need to</span>", 
"<span class=\"comment\">   be atomic.  */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sigaddset\">sigaddset</a>(<a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>, int <a class=\"id\" href=\"#_sig\">_sig</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sig\">sig</a> = <a class=\"id\" href=\"#_sig\">_sig</a> - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_NSIG_WORDS\">_NSIG_WORDS</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a>-><a class=\"id\" href=\"#sig\">sig</a>[0] |= 1UL << <a class=\"id\" href=\"#sig\">sig</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a>-><a class=\"id\" href=\"#sig\">sig</a>[<a class=\"id\" href=\"#sig\">sig</a> / <a class=\"id\" href=\"#_NSIG_BPW\">_NSIG_BPW</a>] |= 1UL << (<a class=\"id\" href=\"#sig\">sig</a> % <a class=\"id\" href=\"#_NSIG_BPW\">_NSIG_BPW</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sigdelset\">sigdelset</a>(<a class=\"id\" href=\"#sigset_t\">sigset_t</a> *<a class=\"id\" href=\"#set\">set</a>, int <a class=\"id\" href=\"#_sig\">_sig</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#sig\">sig</a> = <a class=\"id\" href=\"#_sig\">_sig</a> - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_NSIG_WORDS\">_NSIG_WORDS</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a>-><a class=\"id\" href=\"#sig\">sig</a>[0] &= ~(1UL << <a class=\"id\" href=\"#sig\">sig</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set\">set</a>-><a class=\"id\" href=\"#sig\">sig</a>[<a class=\"id\" href=\"#sig\">sig</a> / <a class=\"id\" href=\"#_NSIG_BPW\">_NSIG_BPW</a>] &= ~(1UL << (<a class=\"id\" href=\"#sig\">sig</a> % <a class=\"id\" href=\"#_NSIG_BPW\">_NSIG_BPW</a>));", 
];
xr_frag_insert('l/36/30dbc02683ed44ef1daca5ac19ca26ee67b0f1.xr', __xr_tmp);
