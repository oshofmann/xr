var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This _is_ ugly: We have to check in the softirq context,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * whether we can switch to highres and / or nohz mode. The</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clocksource switch happens in the timer interrupt with</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * xtime_lock held. Notification from there only sets the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check bit in the tick_oneshot code, otherwise we might</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * deadlock vs. xtime_lock.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tick_check_oneshot_change\">tick_check_oneshot_change</a>(!<a class=\"id\" href=\"#hrtimer_is_hres_enabled\">hrtimer_is_hres_enabled</a>()))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_switch_to_hres\">hrtimer_switch_to_hres</a>();", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Called from hardirq context every jiffy</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#hrtimer_run_queues\">hrtimer_run_queues</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_cpu_base\">hrtimer_cpu_base</a> *<a class=\"id\" href=\"#cpu_base\">cpu_base</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#hrtimer_bases\">hrtimer_bases</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_clock_base\">hrtimer_clock_base</a> *<a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>, <a class=\"id\" href=\"#gettime\">gettime</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hrtimer_hres_active\">hrtimer_hres_active</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#index\">index</a> = 0; <a class=\"id\" href=\"#index\">index</a> &lt; <a class=\"id\" href=\"#HRTIMER_MAX_CLOCK_BASES\">HRTIMER_MAX_CLOCK_BASES</a>; <a class=\"id\" href=\"#index\">index</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = &amp;<a class=\"id\" href=\"#cpu_base\">cpu_base</a>-><a class=\"id\" href=\"#clock_base\">clock_base</a>[<a class=\"id\" href=\"#index\">index</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#first\">first</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gettime\">gettime</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_get_softirq_time\">hrtimer_get_softirq_time</a>(<a class=\"id\" href=\"#cpu_base\">cpu_base</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gettime\">gettime</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#cpu_base\">cpu_base</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#first\">first</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#softirq_time\">softirq_time</a>.<a class=\"id\" href=\"#tv64\">tv64</a> <=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_get_expires_tv64\">hrtimer_get_expires_tv64</a>(<a class=\"id\" href=\"#timer\">timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__run_hrtimer\">__run_hrtimer</a>(<a class=\"id\" href=\"#timer\">timer</a>, &amp;<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#softirq_time\">softirq_time</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#cpu_base\">cpu_base</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Sleep related functions:</span>", 
"<span class=\"comment\"> */</span>", 
"static enum <a class=\"id\" href=\"#hrtimer_restart\">hrtimer_restart</a> <a class=\"id\" href=\"#hrtimer_wakeup\">hrtimer_wakeup</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> *<a class=\"id\" href=\"#t\">t</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#timer\">timer</a>, struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a>, <a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#task\">task</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wake_up_process\">wake_up_process</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#HRTIMER_NORESTART\">HRTIMER_NORESTART</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#hrtimer_init_sleeper\">hrtimer_init_sleeper</a>(struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> *<a class=\"id\" href=\"#sl\">sl</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sl\">sl</a>-><a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#function\">function</a> = <a class=\"id\" href=\"#hrtimer_wakeup\">hrtimer_wakeup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sl\">sl</a>-><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#task\">task</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#hrtimer_init_sleeper\">hrtimer_init_sleeper</a>);", 
"", 
"static int <a class=\"id\" href=\"#__sched\">__sched</a> <a class=\"id\" href=\"#do_nanosleep\">do_nanosleep</a>(struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> *<a class=\"id\" href=\"#t\">t</a>, enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init_sleeper\">hrtimer_init_sleeper</a>(<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#current\">current</a>);", 
"", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_INTERRUPTIBLE\">TASK_INTERRUPTIBLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_start_expires\">hrtimer_start_expires</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#hrtimer_active\">hrtimer_active</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#timer\">timer</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#task\">task</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_cancel\">hrtimer_cancel</a>(&amp;<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>;", 
"", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#task\">task</a> && !<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#task\">task</a> == <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#update_rmtp\">update_rmtp</a>(struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#rmtp\">rmtp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#rmt\">rmt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_t\">ktime_t</a> <a class=\"id\" href=\"#rem\">rem</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rem\">rem</a> = <a class=\"id\" href=\"#hrtimer_expires_remaining\">hrtimer_expires_remaining</a>(<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rem\">rem</a>.<a class=\"id\" href=\"#tv64\">tv64</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rmt\">rmt</a> = <a class=\"id\" href=\"#ktime_to_timespec\">ktime_to_timespec</a>(<a class=\"id\" href=\"#rem\">rem</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#rmtp\">rmtp</a>, &amp;<a class=\"id\" href=\"#rmt\">rmt</a>, sizeof(*<a class=\"id\" href=\"#rmtp\">rmtp</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"long <a class=\"id\" href=\"#__sched\">__sched</a> <a class=\"id\" href=\"#hrtimer_nanosleep_restart\">hrtimer_nanosleep_restart</a>(struct <a class=\"id\" href=\"#restart_block\">restart_block</a> *<a class=\"id\" href=\"#restart\">restart</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a>  *<a class=\"id\" href=\"#rmtp\">rmtp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init_on_stack\">hrtimer_init_on_stack</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#nanosleep\">nanosleep</a>.<a class=\"id\" href=\"#index\">index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_set_expires_tv64\">hrtimer_set_expires_tv64</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#nanosleep\">nanosleep</a>.<a class=\"id\" href=\"#expires\">expires</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_nanosleep\">do_nanosleep</a>(&amp;<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rmtp\">rmtp</a> = <a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#nanosleep\">nanosleep</a>.<a class=\"id\" href=\"#rmtp\">rmtp</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rmtp\">rmtp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#update_rmtp\">update_rmtp</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#rmtp\">rmtp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The other values in restart are already filled in */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTART_RESTARTBLOCK\">ERESTART_RESTARTBLOCK</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_hrtimer_on_stack\">destroy_hrtimer_on_stack</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"long <a class=\"id\" href=\"#hrtimer_nanosleep\">hrtimer_nanosleep</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#rqtp\">rqtp</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#rmtp\">rmtp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const enum <a class=\"id\" href=\"#hrtimer_mode\">hrtimer_mode</a> <a class=\"id\" href=\"#mode\">mode</a>, const <a class=\"id\" href=\"#clockid_t\">clockid_t</a> <a class=\"id\" href=\"#clockid\">clockid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#restart_block\">restart_block</a> *<a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_sleeper\">hrtimer_sleeper</a> <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#slack\">slack</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slack\">slack</a> = <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#timer_slack_ns\">timer_slack_ns</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rt_task\">rt_task</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slack\">slack</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init_on_stack\">hrtimer_init_on_stack</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#clockid\">clockid</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_set_expires_range_ns\">hrtimer_set_expires_range_ns</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#timespec_to_ktime\">timespec_to_ktime</a>(*<a class=\"id\" href=\"#rqtp\">rqtp</a>), <a class=\"id\" href=\"#slack\">slack</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#do_nanosleep\">do_nanosleep</a>(&amp;<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#mode\">mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Absolute timers do not update the rmtp value and restart: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#HRTIMER_MODE_ABS\">HRTIMER_MODE_ABS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rmtp\">rmtp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#update_rmtp\">update_rmtp</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#rmtp\">rmtp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restart\">restart</a> = &amp;<a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#restart_block\">restart_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#hrtimer_nanosleep_restart\">hrtimer_nanosleep_restart</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#nanosleep\">nanosleep</a>.<a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#nanosleep\">nanosleep</a>.<a class=\"id\" href=\"#rmtp\">rmtp</a> = <a class=\"id\" href=\"#rmtp\">rmtp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#restart\">restart</a>-><a class=\"id\" href=\"#nanosleep\">nanosleep</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#hrtimer_get_expires_tv64\">hrtimer_get_expires_tv64</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTART_RESTARTBLOCK\">ERESTART_RESTARTBLOCK</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#destroy_hrtimer_on_stack\">destroy_hrtimer_on_stack</a>(&amp;<a class=\"id\" href=\"#t\">t</a>.<a class=\"id\" href=\"#timer\">timer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#nanosleep\">nanosleep</a>, struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#rqtp\">rqtp</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#rmtp\">rmtp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#tu\">tu</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tu\">tu</a>, <a class=\"id\" href=\"#rqtp\">rqtp</a>, sizeof(<a class=\"id\" href=\"#tu\">tu</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#timespec_valid\">timespec_valid</a>(&amp;<a class=\"id\" href=\"#tu\">tu</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hrtimer_nanosleep\">hrtimer_nanosleep</a>(&amp;<a class=\"id\" href=\"#tu\">tu</a>, <a class=\"id\" href=\"#rmtp\">rmtp</a>, <a class=\"id\" href=\"#HRTIMER_MODE_REL\">HRTIMER_MODE_REL</a>, <a class=\"id\" href=\"#CLOCK_MONOTONIC\">CLOCK_MONOTONIC</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Functions related to boot-time initialization:</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#init_hrtimers_cpu\">init_hrtimers_cpu</a>(int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_cpu_base\">hrtimer_cpu_base</a> *<a class=\"id\" href=\"#cpu_base\">cpu_base</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#hrtimer_bases\">hrtimer_bases</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_init\">raw_spin_lock_init</a>(&amp;<a class=\"id\" href=\"#cpu_base\">cpu_base</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#HRTIMER_MAX_CLOCK_BASES\">HRTIMER_MAX_CLOCK_BASES</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_base\">cpu_base</a>-><a class=\"id\" href=\"#clock_base\">clock_base</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#cpu_base\">cpu_base</a> = <a class=\"id\" href=\"#cpu_base\">cpu_base</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrtimer_init_hres\">hrtimer_init_hres</a>(<a class=\"id\" href=\"#cpu_base\">cpu_base</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"", 
"static void <a class=\"id\" href=\"#migrate_hrtimer_list\">migrate_hrtimer_list</a>(struct <a class=\"id\" href=\"#hrtimer_clock_base\">hrtimer_clock_base</a> *<a class=\"id\" href=\"#old_base\">old_base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_clock_base\">hrtimer_clock_base</a> *<a class=\"id\" href=\"#new_base\">new_base</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a> *<a class=\"id\" href=\"#timer\">timer</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rb_node\">rb_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/>while ((<a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#rb_first\">rb_first</a>(&amp;<a class=\"id\" href=\"#old_base\">old_base</a>-><a class=\"id\" href=\"#active\">active</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a> = <a class=\"id\" href=\"#rb_entry\">rb_entry</a>(<a class=\"id\" href=\"#node\">node</a>, struct <a class=\"id\" href=\"#hrtimer\">hrtimer</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#hrtimer_callback_running\">hrtimer_callback_running</a>(<a class=\"id\" href=\"#timer\">timer</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#debug_deactivate\">debug_deactivate</a>(<a class=\"id\" href=\"#timer\">timer</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mark it as STATE_MIGRATE not INACTIVE otherwise the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * timer could be seen as !active and just vanish away</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * under us on another CPU</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__remove_hrtimer\">__remove_hrtimer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#old_base\">old_base</a>, <a class=\"id\" href=\"#HRTIMER_STATE_MIGRATE\">HRTIMER_STATE_MIGRATE</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#new_base\">new_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Enqueue the timers on the new cpu. This does not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * reprogram the event device in case the timer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * expires before the earliest on this CPU, but we run</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * hrtimer_interrupt after we migrated everything to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * sort out already expired timers and reprogram the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * event device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enqueue_hrtimer\">enqueue_hrtimer</a>(<a class=\"id\" href=\"#timer\">timer</a>, <a class=\"id\" href=\"#new_base\">new_base</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clear the migration state bit */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#timer\">timer</a>-><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#HRTIMER_STATE_MIGRATE\">HRTIMER_STATE_MIGRATE</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#migrate_hrtimers\">migrate_hrtimers</a>(int <a class=\"id\" href=\"#scpu\">scpu</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hrtimer_cpu_base\">hrtimer_cpu_base</a> *<a class=\"id\" href=\"#old_base\">old_base</a>, *<a class=\"id\" href=\"#new_base\">new_base</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#scpu\">scpu</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tick_cancel_sched_timer\">tick_cancel_sched_timer</a>(<a class=\"id\" href=\"#scpu\">scpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_disable\">local_irq_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_base\">old_base</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#hrtimer_bases\">hrtimer_bases</a>, <a class=\"id\" href=\"#scpu\">scpu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_base\">new_base</a> = &amp;<a class=\"id\" href=\"#__get_cpu_var\">__get_cpu_var</a>(<a class=\"id\" href=\"#hrtimer_bases\">hrtimer_bases</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The caller is globally serialized and nobody else</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * takes two locks at once, deadlock is not possible.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock\">raw_spin_lock</a>(&amp;<a class=\"id\" href=\"#new_base\">new_base</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_lock_nested\">raw_spin_lock_nested</a>(&amp;<a class=\"id\" href=\"#old_base\">old_base</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#SINGLE_DEPTH_NESTING\">SINGLE_DEPTH_NESTING</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#HRTIMER_MAX_CLOCK_BASES\">HRTIMER_MAX_CLOCK_BASES</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#migrate_hrtimer_list\">migrate_hrtimer_list</a>(&amp;<a class=\"id\" href=\"#old_base\">old_base</a>-><a class=\"id\" href=\"#clock_base\">clock_base</a>[<a class=\"id\" href=\"#i\">i</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#new_base\">new_base</a>-><a class=\"id\" href=\"#clock_base\">clock_base</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#old_base\">old_base</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_spin_unlock\">raw_spin_unlock</a>(&amp;<a class=\"id\" href=\"#new_base\">new_base</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check, if we got expired work to do */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__hrtimer_peek_ahead_timers\">__hrtimer_peek_ahead_timers</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_irq_enable\">local_irq_enable</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_HOTPLUG_CPU */</span>", 
"", 
"static int <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> <a class=\"id\" href=\"#hrtimer_cpu_notify\">hrtimer_cpu_notify</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#self\">self</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#action\">action</a>, void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scpu\">scpu</a> = (long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE_FROZEN\">CPU_UP_PREPARE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#init_hrtimers_cpu\">init_hrtimers_cpu</a>(<a class=\"id\" href=\"#scpu\">scpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DYING\">CPU_DYING</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DYING_FROZEN\">CPU_DYING_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(<a class=\"id\" href=\"#CLOCK_EVT_NOTIFY_CPU_DYING\">CLOCK_EVT_NOTIFY_CPU_DYING</a>, &amp;<a class=\"id\" href=\"#scpu\">scpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a>:", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clockevents_notify\">clockevents_notify</a>(<a class=\"id\" href=\"#CLOCK_EVT_NOTIFY_CPU_DEAD\">CLOCK_EVT_NOTIFY_CPU_DEAD</a>, &amp;<a class=\"id\" href=\"#scpu\">scpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#migrate_hrtimers\">migrate_hrtimers</a>(<a class=\"id\" href=\"#scpu\">scpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NOTIFY_OK\">NOTIFY_OK</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> <a class=\"id\" href=\"#hrtimers_nb\">hrtimers_nb</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#hrtimer_cpu_notify\">hrtimer_cpu_notify</a>,", 
"};", 
"", 
];
xr_frag_insert('l/36/bae7a23a04bc0c27cfd0efe82cfbdd97a11906.xr', __xr_tmp);
