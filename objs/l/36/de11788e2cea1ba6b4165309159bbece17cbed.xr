var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  hosts.c Copyright (C) 1992 Drew Eckhardt</span>", 
"<span class=\"comment\"> *          Copyright (C) 1993, 1994, 1995 Eric Youngdale</span>", 
"<span class=\"comment\"> *          Copyright (C) 2002-2003 Christoph Hellwig</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  mid to lowlevel SCSI driver interface</span>", 
"<span class=\"comment\"> *      Initial versions: Drew Eckhardt</span>", 
"<span class=\"comment\"> *      Subsequent revisions: Eric Youngdale</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  &lt;drew@colorado.edu&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Jiffies wrap fixes (host-&gt;resetting), 3 Dec 1998 Andrea Arcangeli</span>", 
"<span class=\"comment\"> *  Added QLOGIC QLA1280 SCSI controller kernel host support. </span>", 
"<span class=\"comment\"> *     August 4, 1999 Fred Lewis, Intel DuPont</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Updated to reflect the new initialization scheme for the higher </span>", 
"<span class=\"comment\"> *  level of scsi drivers (sd/sr/st)</span>", 
"<span class=\"comment\"> *  September 17, 2000 Torben Mathiasen &lt;tmm@image.dk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Restructured scsi_host lists and associated functions.</span>", 
"<span class=\"comment\"> *  September 04, 2002 Mike Anderson (andmike@us.ibm.com)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kthread\">kthread</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#completion\">completion</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#transport_class\">transport_class</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#platform_device\">platform_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pm_runtime\">pm_runtime</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_host\">scsi_host</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_transport\">scsi_transport</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_priv.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_logging.h\"", 
"", 
"", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#scsi_host_next_hn\">scsi_host_next_hn</a>;<span class=\"ts\"/><span class=\"comment\">/* host_no for next new host */</span>", 
"", 
"", 
"static void <a class=\"id\" href=\"#scsi_host_cls_release\">scsi_host_cls_release</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_device\">put_device</a>(&amp;<a class=\"id\" href=\"#class_to_shost\">class_to_shost</a>(<a class=\"id\" href=\"#dev\">dev</a>)-><a class=\"id\" href=\"#shost_gendev\">shost_gendev</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#class\">class</a> <a class=\"id\" href=\"#shost_class\">shost_class</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/><span class=\"ts\"/>= \"scsi_host\",", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#dev_release\">dev_release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#scsi_host_cls_release\">scsi_host_cls_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>scsi_host_set_state - Take the given host through the host state model.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@shost:<span class=\"ts\"/>scsi host to change the state of.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state:<span class=\"ts\"/>state to change to.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns zero if unsuccessful or an error if the requested</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>transition is illegal.</span>", 
"<span class=\"comment\"> **/</span>", 
"int <a class=\"id\" href=\"#scsi_host_set_state\">scsi_host_set_state</a>(struct <a class=\"id\" href=\"#Scsi_Host\">Scsi_Host</a> *<a class=\"id\" href=\"#shost\">shost</a>, enum <a class=\"id\" href=\"#scsi_host_state\">scsi_host_state</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#scsi_host_state\">scsi_host_state</a> <a class=\"id\" href=\"#oldstate\">oldstate</a> = <a class=\"id\" href=\"#shost\">shost</a>-><a class=\"id\" href=\"#shost_state\">shost_state</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#oldstate\">oldstate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#state\">state</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SHOST_CREATED\">SHOST_CREATED</a>:", 
];
xr_frag_insert('l/36/de11788e2cea1ba6b4165309159bbece17cbed.xr', __xr_tmp);
