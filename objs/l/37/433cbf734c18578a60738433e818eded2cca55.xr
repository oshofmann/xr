var __xr_tmp = [
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#link_path_walk\">link_path_walk</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#result\">result</a> == -<a class=\"id\" href=\"#ESTALE\">ESTALE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nd-&gt;path had been dropped */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#total_link_count\">total_link_count</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#save\">save</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_REVAL\">LOOKUP_REVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#link_path_walk\">link_path_walk</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#save\">save</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#path_init\">path_init</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char *<a class=\"id\" href=\"#name\">name</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last_type\">last_type</a> = <a class=\"id\" href=\"#LAST_ROOT\">LAST_ROOT</a>; <span class=\"comment\">/* if there are only slashes... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#depth\">depth</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#name\">name</a>=='/') {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_root\">set_root</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#dfd\">dfd</a> == <a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_fs_pwd\">get_fs_pwd</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#fs\">fs</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_fail\">out_fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOTDIR\">ENOTDIR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_fail\">fput_fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#file_permission\">file_permission</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#MAY_EXEC\">MAY_EXEC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_fail\">fput_fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#fput_fail\">fput_fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#out_fail\">out_fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Returns 0 and nd will be valid on success; Retuns error, otherwise. */</span>", 
"static int <a class=\"id\" href=\"#do_path_lookup\">do_path_lookup</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#path_init\">path_init</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#path_walk\">path_walk</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#retval\">retval</a> && !<a class=\"id\" href=\"#audit_dummy_context\">audit_dummy_context</a>() && <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_inode\">audit_inode</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>.<a class=\"id\" href=\"#mnt\">mnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#path_lookup\">path_lookup</a>(const char *<a class=\"id\" href=\"#name\">name</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_path_lookup\">do_path_lookup</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#kern_path\">kern_path</a>(const char *<a class=\"id\" href=\"#name\">name</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#do_path_lookup\">do_path_lookup</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * vfs_path_lookup - lookup a file path relative to a dentry-vfsmount pair</span>", 
"<span class=\"comment\"> * @dentry:  pointer to dentry of the base directory</span>", 
"<span class=\"comment\"> * @mnt: pointer to vfs mount of the base directory</span>", 
"<span class=\"comment\"> * @name: pointer to file name</span>", 
"<span class=\"comment\"> * @flags: lookup flags</span>", 
"<span class=\"comment\"> * @nd: pointer to nameidata</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#vfs_path_lookup\">vfs_path_lookup</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#vfsmount\">vfsmount</a> *<a class=\"id\" href=\"#mnt\">mnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#name\">name</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* same as do_path_lookup */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last_type\">last_type</a> = <a class=\"id\" href=\"#LAST_ROOT\">LAST_ROOT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#depth\">depth</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#mnt\">mnt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a> = <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#path_walk\">path_walk</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#retval\">retval</a> && !<a class=\"id\" href=\"#audit_dummy_context\">audit_dummy_context</a>() && <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_inode\">audit_inode</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#root\">root</a>.<a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#__lookup_hash\">__lookup_hash</a>(struct <a class=\"id\" href=\"#qstr\">qstr</a> *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#base\">base</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * See if the low-level filesystem might want</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to use its own hash..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#d_op\">d_op</a> && <a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#d_op\">d_op</a>-><a class=\"id\" href=\"#d_hash\">d_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#d_op\">d_op</a>-><a class=\"id\" href=\"#d_hash\">d_hash</a>(<a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Don't bother with __d_lookup: callers are for creat as</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * well as unlink, so a lot of the time it would cost</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a double lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#d_lookup\">d_lookup</a>(<a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a> && <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_op\">d_op</a> && <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_op\">d_op</a>-><a class=\"id\" href=\"#d_revalidate\">d_revalidate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#do_revalidate\">do_revalidate</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#d_alloc_and_lookup\">d_alloc_and_lookup</a>(<a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Restricted form of lookup. Doesn't follow links, single-component only,</span>", 
"<span class=\"comment\"> * needs parent already locked. Doesn't follow mounts.</span>", 
"<span class=\"comment\"> * SMP-safe.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#lookup_hash\">lookup_hash</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#exec_permission\">exec_permission</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__lookup_hash\">__lookup_hash</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__lookup_one_len\">__lookup_one_len</a>(const char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#qstr\">qstr</a> *<a class=\"id\" href=\"#this\">this</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#base\">base</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#hash\">hash</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#init_name_hash\">init_name_hash</a>();", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = *(const unsigned char *)<a class=\"id\" href=\"#name\">name</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '/' || <a class=\"id\" href=\"#c\">c</a> == '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#partial_name_hash\">partial_name_hash</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this\">this</a>-><a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#end_name_hash\">end_name_hash</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * lookup_one_len - filesystem helper to lookup single pathname component</span>", 
"<span class=\"comment\"> * @name:<span class=\"ts\"/>pathname component to lookup</span>", 
"<span class=\"comment\"> * @base:<span class=\"ts\"/>base directory to lookup from</span>", 
"<span class=\"comment\"> * @len:<span class=\"ts\"/>maximum length @len should be interpreted to</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Note that this routine is purely a helper for filesystem usage and should</span>", 
"<span class=\"comment\"> * not be called by generic code.  Also note that by using this function the</span>", 
"<span class=\"comment\"> * nameidata argument is passed to the filesystem methods and a filesystem</span>", 
"<span class=\"comment\"> * using this helper needs to be prepared for that.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#lookup_one_len\">lookup_one_len</a>(const char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#base\">base</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#qstr\">qstr</a> <a class=\"id\" href=\"#this\">this</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(!<a class=\"id\" href=\"#mutex_is_locked\">mutex_is_locked</a>(&amp;<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#__lookup_one_len\">__lookup_one_len</a>(<a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#this\">this</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#exec_permission\">exec_permission</a>(<a class=\"id\" href=\"#base\">base</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__lookup_hash\">__lookup_hash</a>(&amp;<a class=\"id\" href=\"#this\">this</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#user_path_at\">user_path_at</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#name\">name</a>, unsigned <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#tmp\">tmp</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#do_path_lookup\">do_path_lookup</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>, char **<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#s\">s</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#do_path_lookup\">do_path_lookup</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * It's inline, so penalty for filesystems that don't use sticky bit is</span>", 
"<span class=\"comment\"> * minimal.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#check_sticky\">check_sticky</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#fsuid\">fsuid</a> = <a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>();", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &amp; <a class=\"id\" href=\"#S_ISVTX\">S_ISVTX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> == <a class=\"id\" href=\"#fsuid\">fsuid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_uid\">i_uid</a> == <a class=\"id\" href=\"#fsuid\">fsuid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_FOWNER\">CAP_FOWNER</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Check whether we can remove a link victim from directory dir, check</span>", 
"<span class=\"comment\"> *  whether the type of victim is right.</span>", 
"<span class=\"comment\"> *  1. We can't do it if dir is read-only (done in permission())</span>", 
"<span class=\"comment\"> *  2. We should have write and exec permissions on dir</span>", 
"<span class=\"comment\"> *  3. We can't remove anything from append-only dir</span>", 
"<span class=\"comment\"> *  4. We can't do anything with immutable dir (done in permission())</span>", 
"<span class=\"comment\"> *  5. If the sticky bit on dir is set we should either</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a. be owner of dir, or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>b. be owner of victim, or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>c. have CAP_FOWNER capability</span>", 
"<span class=\"comment\"> *  6. If the victim is append-only or immutable we can't do antyhing with</span>", 
"<span class=\"comment\"> *     links pointing to it.</span>", 
"<span class=\"comment\"> *  7. If we were asked to remove a directory and victim isn't one - ENOTDIR.</span>", 
"<span class=\"comment\"> *  8. If we were asked to remove a non-directory and victim isn't one - EISDIR.</span>", 
"<span class=\"comment\"> *  9. We can't remove a root or mountpoint.</span>", 
"<span class=\"comment\"> * 10. We don't allow removal of NFS sillyrenamed files; it's handled by</span>", 
"<span class=\"comment\"> *     nfs_async_unlink().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#may_delete\">may_delete</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>,struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#victim\">victim</a>,int <a class=\"id\" href=\"#isdir\">isdir</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_parent\">d_parent</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a> != <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_inode_child\">audit_inode_child</a>(<a class=\"id\" href=\"#victim\">victim</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_permission\">inode_permission</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a> | <a class=\"id\" href=\"#MAY_EXEC\">MAY_EXEC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_APPEND\">IS_APPEND</a>(<a class=\"id\" href=\"#dir\">dir</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#check_sticky\">check_sticky</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)||<a class=\"id\" href=\"#IS_APPEND\">IS_APPEND</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#IS_IMMUTABLE\">IS_IMMUTABLE</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>) || <a class=\"id\" href=\"#IS_SWAPFILE\">IS_SWAPFILE</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#isdir\">isdir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOTDIR\">ENOTDIR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ROOT\">IS_ROOT</a>(<a class=\"id\" href=\"#victim\">victim</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EISDIR\">EISDIR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_DEADDIR\">IS_DEADDIR</a>(<a class=\"id\" href=\"#dir\">dir</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#victim\">victim</a>-><a class=\"id\" href=\"#d_flags\">d_flags</a> &amp; <a class=\"id\" href=\"#DCACHE_NFSFS_RENAMED\">DCACHE_NFSFS_RENAMED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*<span class=\"ts\"/>Check whether we can create an object with dentry child in directory</span>", 
"<span class=\"comment\"> *  dir.</span>", 
"<span class=\"comment\"> *  1. We can't do it if child already exists (open has special treatment for</span>", 
"<span class=\"comment\"> *     this case, but since we are inlined it's OK)</span>", 
"<span class=\"comment\"> *  2. We can't do it if dir is read-only (done in permission())</span>", 
"<span class=\"comment\"> *  3. We should have write and exec permissions on dir</span>", 
"<span class=\"comment\"> *  4. We can't do it if dir is immutable (done in permission())</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#may_create\">may_create</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_DEADDIR\">IS_DEADDIR</a>(<a class=\"id\" href=\"#dir\">dir</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inode_permission\">inode_permission</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a> | <a class=\"id\" href=\"#MAY_EXEC\">MAY_EXEC</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * p1 and p2 should be directories on the same fs.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#lock_rename\">lock_rename</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#p1\">p1</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#p2\">p2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p1\">p1</a> == <a class=\"id\" href=\"#p2\">p2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_vfs_rename_mutex\">s_vfs_rename_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#d_ancestor\">d_ancestor</a>(<a class=\"id\" href=\"#p2\">p2</a>, <a class=\"id\" href=\"#p1\">p1</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_CHILD\">I_MUTEX_CHILD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#d_ancestor\">d_ancestor</a>(<a class=\"id\" href=\"#p1\">p1</a>, <a class=\"id\" href=\"#p2\">p2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_CHILD\">I_MUTEX_CHILD</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_CHILD\">I_MUTEX_CHILD</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#unlock_rename\">unlock_rename</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#p1\">p1</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#p2\">p2</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p1\">p1</a> != <a class=\"id\" href=\"#p2\">p2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_vfs_rename_mutex\">s_vfs_rename_mutex</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_create\">vfs_create</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_create\">may_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#create\">create</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;<span class=\"ts\"/><span class=\"comment\">/* shouldn't it be ENOSYS? */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= <a class=\"id\" href=\"#S_IALLUGO\">S_IALLUGO</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> |= <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_create\">security_inode_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#create\">create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_create\">fsnotify_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#may_open\">may_open</a>(struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>, int <a class=\"id\" href=\"#acc_mode\">acc_mode</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFLNK\">S_IFLNK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ELOOP\">ELOOP</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acc_mode\">acc_mode</a> &amp; <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EISDIR\">EISDIR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFBLK\">S_IFBLK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFCHR\">S_IFCHR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_flags\">mnt_flags</a> &amp; <a class=\"id\" href=\"#MNT_NODEV\">MNT_NODEV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*FALLTHRU*/</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFIFO\">S_IFIFO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFSOCK\">S_IFSOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> &= ~<a class=\"id\" href=\"#O_TRUNC\">O_TRUNC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_permission\">inode_permission</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * An append-only file must be opened in append mode for writing.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_APPEND\">IS_APPEND</a>(<a class=\"id\" href=\"#inode\">inode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if  ((<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#O_ACCMODE\">O_ACCMODE</a>) != <a class=\"id\" href=\"#O_RDONLY\">O_RDONLY</a> && !(<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#O_APPEND\">O_APPEND</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#O_TRUNC\">O_TRUNC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* O_NOATIME can only be set by the owner or superuser */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#O_NOATIME\">O_NOATIME</a> && !<a class=\"id\" href=\"#is_owner_or_cap\">is_owner_or_cap</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ensure there are no outstanding leases on the file.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#break_lease\">break_lease</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#handle_truncate\">handle_truncate</a>(struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#get_write_access\">get_write_access</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Refuse to truncate files with mandatory locks held on them.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#locks_verify_locked\">locks_verify_locked</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_truncate\">security_path_truncate</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#do_truncate\">do_truncate</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ATTR_MTIME\">ATTR_MTIME</a>|<a class=\"id\" href=\"#ATTR_CTIME\">ATTR_CTIME</a>|<a class=\"id\" href=\"#ATTR_OPEN\">ATTR_OPEN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_write_access\">put_write_access</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Be careful about ever adding any more callers of this</span>", 
"<span class=\"comment\"> * function.  Its flags must be in the namei format, not</span>", 
"<span class=\"comment\"> * what get passed to sys_open().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__open_namei_create\">__open_namei_create</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#open_flag\">open_flag</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_POSIXACL\">IS_POSIXACL</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= ~<a class=\"id\" href=\"#current_umask\">current_umask</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_mknod\">security_path_mknod</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_create\">vfs_create</a>(<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Don't check for write permission, don't truncate */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#may_open\">may_open</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>, 0, <a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; ~<a class=\"id\" href=\"#O_TRUNC\">O_TRUNC</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Note that while the flag value (low two bits) for sys_open means:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>00 - read-only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>01 - write-only</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>10 - read-write</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>11 - special</span>", 
"<span class=\"comment\"> * it is changed into</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>00 - no permissions needed</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>01 - read-permission</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>10 - write-permission</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>11 - read-write</span>", 
"<span class=\"comment\"> * for the internal routines (ie open_namei()/follow_link() etc)</span>", 
"<span class=\"comment\"> * This is more logical, and also allows the 00 \"no perm needed\"</span>", 
"<span class=\"comment\"> * to be used for symlinks (where the permissions are checked</span>", 
"<span class=\"comment\"> * later).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\">*/</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#open_to_namei_flags\">open_to_namei_flags</a>(int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flag\">flag</a>+1) &amp; <a class=\"id\" href=\"#O_ACCMODE\">O_ACCMODE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a>++;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#flag\">flag</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#open_will_truncate\">open_will_truncate</a>(int <a class=\"id\" href=\"#flag\">flag</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We'll never write to the fs underlying</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a device file.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#special_file\">special_file</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#O_TRUNC\">O_TRUNC</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#finish_open\">finish_open</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#open_flag\">open_flag</a>, int <a class=\"id\" href=\"#acc_mode\">acc_mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#will_truncate\">will_truncate</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#will_truncate\">will_truncate</a> = <a class=\"id\" href=\"#open_will_truncate\">open_will_truncate</a>(<a class=\"id\" href=\"#open_flag\">open_flag</a>, <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#will_truncate\">will_truncate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_open\">may_open</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>, <a class=\"id\" href=\"#open_flag\">open_flag</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#will_truncate\">will_truncate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#nameidata_to_filp\">nameidata_to_filp</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#filp\">filp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ima_file_check\">ima_file_check</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#filp\">filp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#will_truncate\">will_truncate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#handle_truncate\">handle_truncate</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It is now safe to drop the mnt write</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because the filp has had a write taken</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on its behalf.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#will_truncate\">will_truncate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#filp\">filp</a>;", 
"", 
"<a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_open_intent\">release_open_intent</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#do_last\">do_last</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#open_flag\">open_flag</a>, int <a class=\"id\" href=\"#acc_mode\">acc_mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    int <a class=\"id\" href=\"#mode\">mode</a>, const char *<a class=\"id\" href=\"#pathname\">pathname</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EISDIR\">EISDIR</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last_type\">last_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LAST_DOTDOT\">LAST_DOTDOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#follow_dotdot\">follow_dotdot</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LAST_DOT\">LAST_DOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>-><a class=\"id\" href=\"#mnt_sb\">mnt_sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#fs_flags\">fs_flags</a> &amp; <a class=\"id\" href=\"#FS_REVAL_DOT\">FS_REVAL_DOT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_op\">d_op</a>-><a class=\"id\" href=\"#d_revalidate\">d_revalidate</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#nd\">nd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ESTALE\">ESTALE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fallthrough */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LAST_ROOT\">LAST_ROOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_CREAT\">O_CREAT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* fallthrough */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LAST_BIND\">LAST_BIND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_inode\">audit_inode</a>(<a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#dir\">dir</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ok\">ok</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* trailing slashes? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#len\">len</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_CREAT\">O_CREAT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_DIRECTORY\">LOOKUP_DIRECTORY</a> | <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* just plain open? */</span>", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_CREAT\">O_CREAT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#do_lookup\">do_lookup</a>(<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last\">last</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#follow_link\">follow_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOTDIR\">ENOTDIR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#LOOKUP_DIRECTORY\">LOOKUP_DIRECTORY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#lookup\">lookup</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_to_nameidata\">path_to_nameidata</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_inode\">audit_inode</a>(<a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ok\">ok</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* OK, it's O_CREAT */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#lookup_hash\">lookup_hash</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#mnt\">mnt</a> = <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#file\">file</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_mutex_unlock\">exit_mutex_unlock</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Negative dentry, just create the file */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This write is needed to ensure that a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ro-&gt;rw transition does not occur between</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the time when the file is created and when</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a permanent write count is taken through</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the 'struct file' in nameidata_to_filp().</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_mutex_unlock\">exit_mutex_unlock</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#__open_namei_create\">__open_namei_create</a>(<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#open_flag\">open_flag</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#nameidata_to_filp\">nameidata_to_filp</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#filp\">filp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ima_file_check\">ima_file_check</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It already exists.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#audit_inode\">audit_inode</a>(<a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_EXCL\">O_EXCL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__follow_mount\">__follow_mount</a>(<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ELOOP\">ELOOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_NOFOLLOW\">O_NOFOLLOW</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#follow_link\">follow_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_to_nameidata\">path_to_nameidata</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EISDIR\">EISDIR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#path\">path</a>-><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<a class=\"id\" href=\"#ok\">ok</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#finish_open\">finish_open</a>(<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#open_flag\">open_flag</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#filp\">filp</a>;", 
"", 
"<a class=\"id\" href=\"#exit_mutex_unlock\">exit_mutex_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<a class=\"id\" href=\"#exit_dput\">exit_dput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put_conditional\">path_put_conditional</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#nd\">nd</a>);", 
"<a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_open_intent\">release_open_intent</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Note that the low bits of the passed in \"open_flag\"</span>", 
"<span class=\"comment\"> * are not the same as in the local variable \"flag\". See</span>", 
"<span class=\"comment\"> * open_to_namei_flags() for more details.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#do_filp_open\">do_filp_open</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char *<a class=\"id\" href=\"#pathname\">pathname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#open_flag\">open_flag</a>, int <a class=\"id\" href=\"#mode\">mode</a>, int <a class=\"id\" href=\"#acc_mode\">acc_mode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#flag\">flag</a> = <a class=\"id\" href=\"#open_to_namei_flags\">open_to_namei_flags</a>(<a class=\"id\" href=\"#open_flag\">open_flag</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#force_reval\">force_reval</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_CREAT\">O_CREAT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * O_SYNC is implemented as __O_SYNC|O_DSYNC.  As many places only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check for O_DSYNC if the need any syncing at all we enforce it's</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * always set instead of having to deal with possibly weird behaviour</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for malicious applications setting only __O_SYNC.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#__O_SYNC\">__O_SYNC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#open_flag\">open_flag</a> |= <a class=\"id\" href=\"#O_DSYNC\">O_DSYNC</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acc_mode\">acc_mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acc_mode\">acc_mode</a> = <a class=\"id\" href=\"#MAY_OPEN\">MAY_OPEN</a> | <a class=\"id\" href=\"#ACC_MODE\">ACC_MODE</a>(<a class=\"id\" href=\"#open_flag\">open_flag</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* O_TRUNC implies we need access checks for write permissions */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_TRUNC\">O_TRUNC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acc_mode\">acc_mode</a> |= <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allow the LSM permission hook to distinguish append </span>", 
"<span class=\"comment\"><span class=\"ts\"/>   access from general write access. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_APPEND\">O_APPEND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acc_mode\">acc_mode</a> |= <a class=\"id\" href=\"#MAY_APPEND\">MAY_APPEND</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the parent */</span>", 
"<a class=\"id\" href=\"#reval\">reval</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#path_init\">path_init</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#force_reval\">force_reval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_REVAL\">LOOKUP_REVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#total_link_count\">total_link_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#link_path_walk\">link_path_walk</a>(<a class=\"id\" href=\"#pathname\">pathname</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#audit_dummy_context\">audit_dummy_context</a>()) && (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_CREAT\">O_CREAT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_inode\">audit_inode</a>(<a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We have the parent and last component.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENFILE\">ENFILE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#get_empty_filp\">get_empty_filp</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_parent\">exit_parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#filp\">filp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> = <a class=\"id\" href=\"#open_flag\">open_flag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flag\">flag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#create_mode\">create_mode</a> = <a class=\"id\" href=\"#mode\">mode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_OPEN\">LOOKUP_OPEN</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_CREAT\">O_CREAT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_CREATE\">LOOKUP_CREATE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_EXCL\">O_EXCL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_EXCL\">LOOKUP_EXCL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_DIRECTORY\">O_DIRECTORY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_DIRECTORY\">LOOKUP_DIRECTORY</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#open_flag\">open_flag</a> &amp; <a class=\"id\" href=\"#O_NOFOLLOW\">O_NOFOLLOW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#do_last\">do_last</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#open_flag\">open_flag</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#pathname\">pathname</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#filp\">filp</a>)) { <span class=\"comment\">/* trailing symlink */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#holder\">holder</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#cookie\">cookie</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ELOOP\">ELOOP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* S_ISDIR part is a temporary automount kludge */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a>) && !<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a>++ == 32)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This is subtle. Instead of calling do_follow_link() we do</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the thing by hands. The reason is that this way we have zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * link_count and path_walk() (called from -&gt;follow_link)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * honoring LOOKUP_PARENT.  After that we have the parent and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * last component, i.e. we are in the same situation as after</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the first path_walk().  Well, almost - if the last component</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is normal we get its copy stored in nd-&gt;last.name and we will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * have to putname() it when we are done. Procfs-like symlinks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * just set LAST_BIND.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_follow_link\">security_inode_follow_link</a>(<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit_dput\">exit_dput</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#__do_follow_link\">__do_follow_link</a>(&amp;<a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#cookie\">cookie</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#error\">error</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* nd.path had been dropped */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#cookie\">cookie</a>) && <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#put_link\">put_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#put_link\">put_link</a>(<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_open_intent\">release_open_intent</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#holder\">holder</a> = <a class=\"id\" href=\"#path\">path</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#do_last\">do_last</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#open_flag\">open_flag</a>, <a class=\"id\" href=\"#acc_mode\">acc_mode</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#pathname\">pathname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#put_link\">put_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#put_link\">put_link</a>(<a class=\"id\" href=\"#holder\">holder</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#holder\">holder</a>);", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#root\">root</a>.<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#root\">root</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#filp\">filp</a> == <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ESTALE\">ESTALE</a>) && !<a class=\"id\" href=\"#force_reval\">force_reval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#force_reval\">force_reval</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#reval\">reval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#filp\">filp</a>;", 
"", 
"<a class=\"id\" href=\"#exit_dput\">exit_dput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put_conditional\">path_put_conditional</a>(&amp;<a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#release_open_intent\">release_open_intent</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<a class=\"id\" href=\"#exit_parent\">exit_parent</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#filp\">filp</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * filp_open - open file and return file pointer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @filename:<span class=\"ts\"/>path to open</span>", 
"<span class=\"comment\"> * @flags:<span class=\"ts\"/>open flags as per the open(2) second argument</span>", 
"<span class=\"comment\"> * @mode:<span class=\"ts\"/>mode for the new file if O_CREAT is set, else ignored</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is the helper to open a file from kernelspace if you really</span>", 
"<span class=\"comment\"> * have to.  But in generally you should not do this, so please move</span>", 
"<span class=\"comment\"> * along, nothing to see here..</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp_open\">filp_open</a>(const char *<a class=\"id\" href=\"#filename\">filename</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_filp_open\">do_filp_open</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#mode\">mode</a>, 0);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#filp_open\">filp_open</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * lookup_create - lookup a dentry, creating it if it doesn't exist</span>", 
"<span class=\"comment\"> * @nd: nameidata info</span>", 
"<span class=\"comment\"> * @is_dir: directory flag</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Simple function to lookup and return a dentry and create it</span>", 
"<span class=\"comment\"> * if it doesn't exist.  Is SMP-safe.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns with nd-&gt;path.dentry-&gt;d_inode-&gt;i_mutex locked.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#lookup_create\">lookup_create</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>, int <a class=\"id\" href=\"#is_dir\">is_dir</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EEXIST\">EEXIST</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Yucky last component or no last component at all?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (foo/., foo/.., /////)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last_type\">last_type</a> != <a class=\"id\" href=\"#LAST_NORM\">LAST_NORM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_CREATE\">LOOKUP_CREATE</a> | <a class=\"id\" href=\"#LOOKUP_EXCL\">LOOKUP_EXCL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#intent\">intent</a>.<a class=\"id\" href=\"#open\">open</a>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#O_EXCL\">O_EXCL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Do the final lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#lookup_hash\">lookup_hash</a>(<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#eexist\">eexist</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Special case - lookup gave negative, but... we had foo/bar/</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * From the vfs_mknod() POV we just have a negative dentry -</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all is fine. Let's be bastards - you had / on the end, you've</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * been asking for (non-existent) directory. -ENOENT for you.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#is_dir\">is_dir</a> && <a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#len\">len</a>])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOENT\">ENOENT</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<a class=\"id\" href=\"#eexist\">eexist</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EEXIST\">EEXIST</a>);", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dentry\">dentry</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#lookup_create\">lookup_create</a>);", 
"", 
"int <a class=\"id\" href=\"#vfs_mknod\">vfs_mknod</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev_t\">dev_t</a> <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_create\">may_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#S_ISCHR\">S_ISCHR</a>(<a class=\"id\" href=\"#mode\">mode</a>) || <a class=\"id\" href=\"#S_ISBLK\">S_ISBLK</a>(<a class=\"id\" href=\"#mode\">mode</a>)) && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_MKNOD\">CAP_MKNOD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#mknod\">mknod</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#devcgroup_inode_mknod\">devcgroup_inode_mknod</a>(<a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_mknod\">security_inode_mknod</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#mknod\">mknod</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_create\">fsnotify_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#may_mknod\">may_mknod</a>(<a class=\"id\" href=\"#mode_t\">mode_t</a> <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFCHR\">S_IFCHR</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFBLK\">S_IFBLK</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFIFO\">S_IFIFO</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFSOCK\">S_IFSOCK</a>:", 
"<span class=\"ts\"/>case 0: <span class=\"comment\">/* zero mode translates to S_IFREG */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFDIR\">S_IFDIR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#mknodat\">mknodat</a>, int, <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#filename\">filename</a>, int, <a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned, <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#mode\">mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#filename\">filename</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#lookup_create\">lookup_create</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_POSIXACL\">IS_POSIXACL</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= ~<a class=\"id\" href=\"#current_umask\">current_umask</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_mknod\">may_mknod</a>(<a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dput\">out_dput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dput\">out_dput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_mknod\">security_path_mknod</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>;", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#S_IFMT\">S_IFMT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case 0: case <a class=\"id\" href=\"#S_IFREG\">S_IFREG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_create\">vfs_create</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>,<a class=\"id\" href=\"#dentry\">dentry</a>,<a class=\"id\" href=\"#mode\">mode</a>,&amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFCHR\">S_IFCHR</a>: case <a class=\"id\" href=\"#S_IFBLK\">S_IFBLK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_mknod\">vfs_mknod</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>,<a class=\"id\" href=\"#dentry\">dentry</a>,<a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_decode_dev\">new_decode_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#S_IFIFO\">S_IFIFO</a>: case <a class=\"id\" href=\"#S_IFSOCK\">S_IFSOCK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_mknod\">vfs_mknod</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>,<a class=\"id\" href=\"#dentry\">dentry</a>,<a class=\"id\" href=\"#mode\">mode</a>,0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<a class=\"id\" href=\"#out_dput\">out_dput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#mknod\">mknod</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#filename\">filename</a>, int, <a class=\"id\" href=\"#mode\">mode</a>, unsigned, <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_mknodat\">sys_mknodat</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_mkdir\">vfs_mkdir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_create\">may_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#mkdir\">mkdir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= (<a class=\"id\" href=\"#S_IRWXUGO\">S_IRWXUGO</a>|<a class=\"id\" href=\"#S_ISVTX\">S_ISVTX</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_mkdir\">security_inode_mkdir</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#mkdir\">mkdir</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_mkdir\">fsnotify_mkdir</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#mkdirat\">mkdirat</a>, int, <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#pathname\">pathname</a>, int, <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>char * <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#pathname\">pathname</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_err\">out_err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#lookup_create\">lookup_create</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>, 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_POSIXACL\">IS_POSIXACL</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> &= ~<a class=\"id\" href=\"#current_umask\">current_umask</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dput\">out_dput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_mkdir\">security_path_mkdir</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_mkdir\">vfs_mkdir</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"<a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<a class=\"id\" href=\"#out_dput\">out_dput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<a class=\"id\" href=\"#out_err\">out_err</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#mkdir\">mkdir</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#pathname\">pathname</a>, int, <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_mkdirat\">sys_mkdirat</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We try to drop the dentry early: we should have</span>", 
"<span class=\"comment\"> * a usage count of 2 if we're the only user of this</span>", 
"<span class=\"comment\"> * dentry, and if that is true (possibly after pruning</span>", 
"<span class=\"comment\"> * the dcache), then we drop the dentry now.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * A low-level filesystem can, if it choses, legally</span>", 
"<span class=\"comment\"> * do a</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>if (!d_unhashed(dentry))</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>return -EBUSY;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * if it cannot handle the case of removing a directory</span>", 
"<span class=\"comment\"> * that is still in use by something else..</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#dentry_unhash\">dentry_unhash</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#shrink_dcache_parent\">shrink_dcache_parent</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dcache_lock\">dcache_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_lock\">d_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_count\">d_count</a>) == 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__d_drop\">__d_drop</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_lock\">d_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dcache_lock\">dcache_lock</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_rmdir\">vfs_rmdir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_delete\">may_delete</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#rmdir\">rmdir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry_unhash\">dentry_unhash</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d_mountpoint\">d_mountpoint</a>(<a class=\"id\" href=\"#dentry\">dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_rmdir\">security_inode_rmdir</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#rmdir\">rmdir</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> |= <a class=\"id\" href=\"#S_DEAD\">S_DEAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_mount\">dont_mount</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_delete\">d_delete</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static long <a class=\"id\" href=\"#do_rmdir\">do_rmdir</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#pathname\">pathname</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>char * <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#pathname\">pathname</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#last_type\">last_type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LAST_DOTDOT\">LAST_DOTDOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOTEMPTY\">ENOTEMPTY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit1\">exit1</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LAST_DOT\">LAST_DOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit1\">exit1</a>;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#LAST_ROOT\">LAST_ROOT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit1\">exit1</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#lookup_hash\">lookup_hash</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit2\">exit2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit3\">exit3</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_rmdir\">security_path_rmdir</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit4\">exit4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_rmdir\">vfs_rmdir</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<a class=\"id\" href=\"#exit4\">exit4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<a class=\"id\" href=\"#exit3\">exit3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<a class=\"id\" href=\"#exit2\">exit2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<a class=\"id\" href=\"#exit1\">exit1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#rmdir\">rmdir</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#pathname\">pathname</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_rmdir\">do_rmdir</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#pathname\">pathname</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_unlink\">vfs_unlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_delete\">may_delete</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, 0);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#unlink\">unlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d_mountpoint\">d_mountpoint</a>(<a class=\"id\" href=\"#dentry\">dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_unlink\">security_inode_unlink</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#unlink\">unlink</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_mount\">dont_mount</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't d_delete() NFS sillyrenamed files--they still exist. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && !(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_flags\">d_flags</a> &amp; <a class=\"id\" href=\"#DCACHE_NFSFS_RENAMED\">DCACHE_NFSFS_RENAMED</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_link_count\">fsnotify_link_count</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_delete\">d_delete</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Make sure that the actual truncation of the file will occur outside its</span>", 
"<span class=\"comment\"> * directory's i_mutex.  Truncate can take a long time if there is a lot of</span>", 
"<span class=\"comment\"> * writeout happening, and we don't want to prevent access to the directory</span>", 
"<span class=\"comment\"> * while waiting on the I/O.</span>", 
"<span class=\"comment\"> */</span>", 
"static long <a class=\"id\" href=\"#do_unlinkat\">do_unlinkat</a>(int <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#pathname\">pathname</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#pathname\">pathname</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EISDIR\">EISDIR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#last_type\">last_type</a> != <a class=\"id\" href=\"#LAST_NORM\">LAST_NORM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit1\">exit1</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock_nested\">mutex_lock_nested</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>, <a class=\"id\" href=\"#I_MUTEX_PARENT\">I_MUTEX_PARENT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#lookup_hash\">lookup_hash</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Why not before? Because we want correct error value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#len\">len</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#slashes\">slashes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_count\">i_count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit2\">exit2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_unlink\">security_path_unlink</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit3\">exit3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_unlink\">vfs_unlink</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<a class=\"id\" href=\"#exit3\">exit3</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit2\">exit2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iput\">iput</a>(<a class=\"id\" href=\"#inode\">inode</a>);<span class=\"ts\"/><span class=\"comment\">/* truncate the inode here */</span>", 
"<a class=\"id\" href=\"#exit1\">exit1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<a class=\"id\" href=\"#slashes\">slashes</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = !<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a> ? -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> :", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>) ? -<a class=\"id\" href=\"#EISDIR\">EISDIR</a> : -<a class=\"id\" href=\"#ENOTDIR\">ENOTDIR</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#exit2\">exit2</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#unlinkat\">unlinkat</a>, int, <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#pathname\">pathname</a>, int, <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flag\">flag</a> &amp; ~<a class=\"id\" href=\"#AT_REMOVEDIR\">AT_REMOVEDIR</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a> &amp; <a class=\"id\" href=\"#AT_REMOVEDIR\">AT_REMOVEDIR</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#do_rmdir\">do_rmdir</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#pathname\">pathname</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_unlinkat\">do_unlinkat</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#pathname\">pathname</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE1\">SYSCALL_DEFINE1</a>(<a class=\"id\" href=\"#unlink\">unlink</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#pathname\">pathname</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_unlinkat\">do_unlinkat</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#pathname\">pathname</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_symlink\">vfs_symlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, const char *<a class=\"id\" href=\"#oldname\">oldname</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_create\">may_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#symlink\">symlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_symlink\">security_inode_symlink</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#oldname\">oldname</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#symlink\">symlink</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#oldname\">oldname</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_create\">fsnotify_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#symlinkat\">symlinkat</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oldname\">oldname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int, <a class=\"id\" href=\"#newdfd\">newdfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#newname\">newname</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#from\">from</a> = <a class=\"id\" href=\"#getname\">getname</a>(<a class=\"id\" href=\"#oldname\">oldname</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#from\">from</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#from\">from</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#newdfd\">newdfd</a>, <a class=\"id\" href=\"#newname\">newname</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putname\">out_putname</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a> = <a class=\"id\" href=\"#lookup_create\">lookup_create</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dentry\">dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dput\">out_dput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_symlink\">security_path_symlink</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_symlink\">vfs_symlink</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"<a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<a class=\"id\" href=\"#out_dput\">out_dput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#dentry\">dentry</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#to\">to</a>);", 
"<a class=\"id\" href=\"#out_putname\">out_putname</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#from\">from</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#symlink\">symlink</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oldname\">oldname</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#newname\">newname</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_symlinkat\">sys_symlinkat</a>(<a class=\"id\" href=\"#oldname\">oldname</a>, <a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#newname\">newname</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_link\">vfs_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dentry\">old_dentry</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#dir\">dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_create\">may_create</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a> != <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EXDEV\">EXDEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * A link to an append-only or immutable file cannot be created.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_APPEND\">IS_APPEND</a>(<a class=\"id\" href=\"#inode\">inode</a>) || <a class=\"id\" href=\"#IS_IMMUTABLE\">IS_IMMUTABLE</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#link\">link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_link\">security_inode_link</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dir\">dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#link\">link</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_link\">fsnotify_link</a>(<a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Hardlinks are often used in delicate situations.  We avoid</span>", 
"<span class=\"comment\"> * security-related surprises by not following symlinks on the</span>", 
"<span class=\"comment\"> * newname.  --KAB</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We don't follow them on the oldname either to be compatible</span>", 
"<span class=\"comment\"> * with linux 2.0, and to avoid hard-linking to directories</span>", 
"<span class=\"comment\"> * and other special files.  --ADM</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#linkat\">linkat</a>, int, <a class=\"id\" href=\"#olddfd\">olddfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oldname\">oldname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int, <a class=\"id\" href=\"#newdfd\">newdfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#newname\">newname</a>, int, <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#old_path\">old_path</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#to\">to</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; ~<a class=\"id\" href=\"#AT_SYMLINK_FOLLOW\">AT_SYMLINK_FOLLOW</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_at\">user_path_at</a>(<a class=\"id\" href=\"#olddfd\">olddfd</a>, <a class=\"id\" href=\"#oldname\">oldname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#AT_SYMLINK_FOLLOW\">AT_SYMLINK_FOLLOW</a> ? <a class=\"id\" href=\"#LOOKUP_FOLLOW\">LOOKUP_FOLLOW</a> : 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#old_path\">old_path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#newdfd\">newdfd</a>, <a class=\"id\" href=\"#newname\">newname</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, &amp;<a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EXDEV\">EXDEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_path\">old_path</a>.<a class=\"id\" href=\"#mnt\">mnt</a> != <a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_release\">out_release</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_dentry\">new_dentry</a> = <a class=\"id\" href=\"#lookup_create\">lookup_create</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unlock\">out_unlock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_dput\">out_dput</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_link\">security_path_link</a>(<a class=\"id\" href=\"#old_path\">old_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_link\">vfs_link</a>(<a class=\"id\" href=\"#old_path\">old_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<a class=\"id\" href=\"#out_drop_write\">out_drop_write</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<a class=\"id\" href=\"#out_dput\">out_dput</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<a class=\"id\" href=\"#out_unlock\">out_unlock</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<a class=\"id\" href=\"#out_release\">out_release</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#to\">to</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#old_path\">old_path</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#link\">link</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oldname\">oldname</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#newname\">newname</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_linkat\">sys_linkat</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#oldname\">oldname</a>, <a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#newname\">newname</a>, 0);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The worst of all namespace operations - renaming directory. \"Perverted\"</span>", 
"<span class=\"comment\"> * doesn't even start to describe it. Somebody in UCB had a heck of a trip...</span>", 
"<span class=\"comment\"> * Problems:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>a) we can get into loop creation. Check is done in is_subdir().</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>b) race potential - two innocent renames can create a loop together.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   That's where 4.4 screws up. Current fix: serialization on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   sb-&gt;s_vfs_rename_mutex. We might be more accurate, but that's another</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   story.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>c) we have to lock _three_ objects - parents and victim (if it exists).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   And that - after we got -&gt;i_mutex on parents (until then we don't know</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   whether the target exists).  Solution: try to be smart with locking</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   order for inodes.  We rely on the fact that tree topology may change</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   only under -&gt;s_vfs_rename_mutex _and_ that parent of the object we</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   move will be locked.  Thus we can rank directories by the tree</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   (ancestors first) and rank all non-directories after them.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   That works since everybody except rename does \"lock parent, lookup,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   lock child\" and rename is under -&gt;s_vfs_rename_mutex.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   HOWEVER, it relies on the assumption that any object with -&gt;lookup()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   has no more than 1 dentry.  If \"hybrid\" objects will ever appear,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   we'd better make sure that there's no link(2) for them.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>d) some filesystems don't support opened-but-unlinked directories,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   either because of layout or because they are not ready to deal with</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   all cases correctly. The latter will be fixed (taking this sort of</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   stuff into VFS), but the former is not going away. Solution: the same</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   trick as in rmdir().</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>e) conversion from fhandle to dentry may come in the wrong moment - when</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   we are removing the target. Solution: we will have to grab -&gt;i_mutex</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   in the fhandle_to_dentry code. [FIXME - current nfsfh.c relies on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   -&gt;i_mutex on parents, which works but leads to some truly excessive</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>   locking].</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#vfs_rename_dir\">vfs_rename_dir</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#old_dir\">old_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dentry\">old_dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#new_dir\">new_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#target\">target</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we are going to change the parent - check write permissions,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we'll need to flip '..'.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_dir\">new_dir</a> != <a class=\"id\" href=\"#old_dir\">old_dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#inode_permission\">inode_permission</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_rename\">security_inode_rename</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = <a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d_mountpoint\">d_mountpoint</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>)||<a class=\"id\" href=\"#d_mountpoint\">d_mountpoint</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry_unhash\">dentry_unhash</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#rename\">rename</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#i_flags\">i_flags</a> |= <a class=\"id\" href=\"#S_DEAD\">S_DEAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_mount\">dont_mount</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#d_unhashed\">d_unhashed</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_rehash\">d_rehash</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#fs_flags\">fs_flags</a> &amp; <a class=\"id\" href=\"#FS_RENAME_DOES_D_MOVE\">FS_RENAME_DOES_D_MOVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_move\">d_move</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>,<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vfs_rename_other\">vfs_rename_other</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#old_dir\">old_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dentry\">old_dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#new_dir\">new_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#target\">target</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_inode_rename\">security_inode_rename</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dget\">dget</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#target\">target</a> = <a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d_mountpoint\">d_mountpoint</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>)||<a class=\"id\" href=\"#d_mountpoint\">d_mountpoint</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#rename\">rename</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dont_mount\">dont_mount</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_type\">s_type</a>-><a class=\"id\" href=\"#fs_flags\">fs_flags</a> &amp; <a class=\"id\" href=\"#FS_RENAME_DOES_D_MOVE\">FS_RENAME_DOES_D_MOVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_move\">d_move</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#target\">target</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#target\">target</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_rename\">vfs_rename</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#old_dir\">old_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dentry\">old_dentry</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#new_dir\">new_dir</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_dir\">is_dir</a> = <a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>);", 
"<span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#old_name\">old_name</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a> == <a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
" <span class=\"ts\"/><span class=\"ts\"/>return 0;", 
" ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_delete\">may_delete</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>, <a class=\"id\" href=\"#is_dir\">is_dir</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_create\">may_create</a>(<a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#may_delete\">may_delete</a>(<a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>, <a class=\"id\" href=\"#is_dir\">is_dir</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#rename\">rename</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_name\">old_name</a> = <a class=\"id\" href=\"#fsnotify_oldname_init\">fsnotify_oldname_init</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_name\">d_name</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_dir\">is_dir</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_rename_dir\">vfs_rename_dir</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>,<a class=\"id\" href=\"#old_dentry\">old_dentry</a>,<a class=\"id\" href=\"#new_dir\">new_dir</a>,<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_rename_other\">vfs_rename_other</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>,<a class=\"id\" href=\"#old_dentry\">old_dentry</a>,<a class=\"id\" href=\"#new_dir\">new_dir</a>,<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_move\">fsnotify_move</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>, <a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#old_name\">old_name</a>, <a class=\"id\" href=\"#is_dir\">is_dir</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#new_dentry\">new_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_oldname_free\">fsnotify_oldname_free</a>(<a class=\"id\" href=\"#old_name\">old_name</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#renameat\">renameat</a>, int, <a class=\"id\" href=\"#olddfd\">olddfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oldname\">oldname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int, <a class=\"id\" href=\"#newdfd\">newdfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#newname\">newname</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dir\">old_dir</a>, *<a class=\"id\" href=\"#new_dir\">new_dir</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#old_dentry\">old_dentry</a>, *<a class=\"id\" href=\"#new_dentry\">new_dentry</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#trap\">trap</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#oldnd\">oldnd</a>, <a class=\"id\" href=\"#newnd\">newnd</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#to\">to</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#olddfd\">olddfd</a>, <a class=\"id\" href=\"#oldname\">oldname</a>, &amp;<a class=\"id\" href=\"#oldnd\">oldnd</a>, &amp;<a class=\"id\" href=\"#from\">from</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#user_path_parent\">user_path_parent</a>(<a class=\"id\" href=\"#newdfd\">newdfd</a>, <a class=\"id\" href=\"#newname\">newname</a>, &amp;<a class=\"id\" href=\"#newnd\">newnd</a>, &amp;<a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit1\">exit1</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EXDEV\">EXDEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a> != <a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit2\">exit2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_dir\">old_dir</a> = <a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#last_type\">last_type</a> != <a class=\"id\" href=\"#LAST_NORM\">LAST_NORM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit2\">exit2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_dir\">new_dir</a> = <a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#last_type\">last_type</a> != <a class=\"id\" href=\"#LAST_NORM\">LAST_NORM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit2\">exit2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#LOOKUP_PARENT\">LOOKUP_PARENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#LOOKUP_RENAME_TARGET\">LOOKUP_RENAME_TARGET</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trap\">trap</a> = <a class=\"id\" href=\"#lock_rename\">lock_rename</a>(<a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#old_dir\">old_dir</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_dentry\">old_dentry</a> = <a class=\"id\" href=\"#lookup_hash\">lookup_hash</a>(&amp;<a class=\"id\" href=\"#oldnd\">oldnd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit3\">exit3</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* source must exist */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit4\">exit4</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* unless the source is a directory trailing slashes give -ENOTDIR */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#S_ISDIR\">S_ISDIR</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mode\">i_mode</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOTDIR\">ENOTDIR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#len\">len</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit4\">exit4</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#name\">name</a>[<a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#last\">last</a>.<a class=\"id\" href=\"#len\">len</a>])", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit4\">exit4</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* source should not be ancestor of target */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_dentry\">old_dentry</a> == <a class=\"id\" href=\"#trap\">trap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit4\">exit4</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_dentry\">new_dentry</a> = <a class=\"id\" href=\"#lookup_hash\">lookup_hash</a>(&amp;<a class=\"id\" href=\"#newnd\">newnd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit4\">exit4</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* target should not be an ancestor of source */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOTEMPTY\">ENOTEMPTY</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_dentry\">new_dentry</a> == <a class=\"id\" href=\"#trap\">trap</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit5\">exit5</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mnt_want_write\">mnt_want_write</a>(<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit5\">exit5</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#security_path_rename\">security_path_rename</a>(&amp;<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit6\">exit6</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_rename\">vfs_rename</a>(<a class=\"id\" href=\"#old_dir\">old_dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#old_dentry\">old_dentry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#new_dir\">new_dir</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>, <a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<a class=\"id\" href=\"#exit6\">exit6</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mnt_drop_write\">mnt_drop_write</a>(<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#mnt\">mnt</a>);", 
"<a class=\"id\" href=\"#exit5\">exit5</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#new_dentry\">new_dentry</a>);", 
"<a class=\"id\" href=\"#exit4\">exit4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dput\">dput</a>(<a class=\"id\" href=\"#old_dentry\">old_dentry</a>);", 
"<a class=\"id\" href=\"#exit3\">exit3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_rename\">unlock_rename</a>(<a class=\"id\" href=\"#new_dir\">new_dir</a>, <a class=\"id\" href=\"#old_dir\">old_dir</a>);", 
"<a class=\"id\" href=\"#exit2\">exit2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#newnd\">newnd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#to\">to</a>);", 
"<a class=\"id\" href=\"#exit1\">exit1</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#oldnd\">oldnd</a>.<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#putname\">putname</a>(<a class=\"id\" href=\"#from\">from</a>);", 
"<a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE2\">SYSCALL_DEFINE2</a>(<a class=\"id\" href=\"#rename\">rename</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#oldname\">oldname</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#newname\">newname</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_renameat\">sys_renameat</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#oldname\">oldname</a>, <a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#newname\">newname</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_readlink\">vfs_readlink</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#buflen\">buflen</a>, const char *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#link\">link</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; (unsigned) <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#link\">link</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A helper for -&gt;readlink().  This should be used *ONLY* for symlinks that</span>", 
"<span class=\"comment\"> * have -&gt;follow_link() touching nd only in nd_set_link().  Using (or not</span>", 
"<span class=\"comment\"> * using) it for any given inode is up to filesystem.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#generic_readlink\">generic_readlink</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nameidata\">nameidata</a> <a class=\"id\" href=\"#nd\">nd</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#cookie\">cookie</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd\">nd</a>.<a class=\"id\" href=\"#depth\">depth</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cookie\">cookie</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#follow_link\">follow_link</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#cookie\">cookie</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#cookie\">cookie</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#vfs_readlink\">vfs_readlink</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buflen\">buflen</a>, <a class=\"id\" href=\"#nd_get_link\">nd_get_link</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#put_link\">put_link</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a>-><a class=\"id\" href=\"#put_link\">put_link</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#cookie\">cookie</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#vfs_follow_link\">vfs_follow_link</a>(struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>, const char *<a class=\"id\" href=\"#link\">link</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__vfs_follow_link\">__vfs_follow_link</a>(<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#link\">link</a>);", 
"}", 
"", 
"<span class=\"comment\">/* get the link contents into pagecache */</span>", 
"static char *<a class=\"id\" href=\"#page_getlink\">page_getlink</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#page\">page</a> **<a class=\"id\" href=\"#ppage\">ppage</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#kaddr\">kaddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#read_mapping_page\">read_mapping_page</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, 0, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#page\">page</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return (char*)<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppage\">ppage</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd_terminate_link\">nd_terminate_link</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#kaddr\">kaddr</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#page_readlink\">page_readlink</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#page_getlink\">page_getlink</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#vfs_readlink\">vfs_readlink</a>(<a class=\"id\" href=\"#dentry\">dentry</a>,<a class=\"id\" href=\"#buffer\">buffer</a>,<a class=\"id\" href=\"#buflen\">buflen</a>,<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"void *<a class=\"id\" href=\"#page_follow_link_light\">page_follow_link_light</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nd_set_link\">nd_set_link</a>(<a class=\"id\" href=\"#nd\">nd</a>, <a class=\"id\" href=\"#page_getlink\">page_getlink</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, &amp;<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#page\">page</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#page_put_link\">page_put_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>, void *<a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#cookie\">cookie</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_cache_release\">page_cache_release</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The nofs argument instructs pagecache_write_begin to pass AOP_FLAG_NOFS</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__page_symlink\">__page_symlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, const char *<a class=\"id\" href=\"#symname\">symname</a>, int <a class=\"id\" href=\"#len\">len</a>, int <a class=\"id\" href=\"#nofs\">nofs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#fsdata\">fsdata</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#kaddr\">kaddr</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#AOP_FLAG_UNINTERRUPTIBLE\">AOP_FLAG_UNINTERRUPTIBLE</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nofs\">nofs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#AOP_FLAG_NOFS\">AOP_FLAG_NOFS</a>;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pagecache_write_begin\">pagecache_write_begin</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, 0, <a class=\"id\" href=\"#len\">len</a>-1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#page\">page</a>, &amp;<a class=\"id\" href=\"#fsdata\">fsdata</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap_atomic\">kmap_atomic</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#symname\">symname</a>, <a class=\"id\" href=\"#len\">len</a>-1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kunmap_atomic\">kunmap_atomic</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>, <a class=\"id\" href=\"#KM_USER0\">KM_USER0</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#pagecache_write_end\">pagecache_write_end</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#mapping\">mapping</a>, 0, <a class=\"id\" href=\"#len\">len</a>-1, <a class=\"id\" href=\"#len\">len</a>-1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#fsdata\">fsdata</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; <a class=\"id\" href=\"#len\">len</a>-1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mark_inode_dirty\">mark_inode_dirty</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#page_symlink\">page_symlink</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, const char *<a class=\"id\" href=\"#symname\">symname</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__page_symlink\">__page_symlink</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#symname\">symname</a>, <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!(<a class=\"id\" href=\"#mapping_gfp_mask\">mapping_gfp_mask</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mapping\">i_mapping</a>) &amp; <a class=\"id\" href=\"#__GFP_FS\">__GFP_FS</a>));", 
"}", 
"", 
"const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#page_symlink_inode_operations\">page_symlink_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readlink\">readlink</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_readlink\">generic_readlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#follow_link\">follow_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#page_follow_link_light\">page_follow_link_light</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#put_link\">put_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#page_put_link\">page_put_link</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#user_path_at\">user_path_at</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#follow_down\">follow_down</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#follow_up\">follow_up</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#get_write_access\">get_write_access</a>); <span class=\"comment\">/* binfmt_aout */</span>", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#getname\">getname</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#lock_rename\">lock_rename</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#lookup_one_len\">lookup_one_len</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#page_follow_link_light\">page_follow_link_light</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#page_put_link\">page_put_link</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#page_readlink\">page_readlink</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__page_symlink\">__page_symlink</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#page_symlink\">page_symlink</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#page_symlink_inode_operations\">page_symlink_inode_operations</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#path_lookup\">path_lookup</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#kern_path\">kern_path</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_path_lookup\">vfs_path_lookup</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inode_permission\">inode_permission</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#file_permission\">file_permission</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#unlock_rename\">unlock_rename</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_create\">vfs_create</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_follow_link\">vfs_follow_link</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_link\">vfs_link</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_mkdir\">vfs_mkdir</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_mknod\">vfs_mknod</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_permission\">generic_permission</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_readlink\">vfs_readlink</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_rename\">vfs_rename</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_rmdir\">vfs_rmdir</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_symlink\">vfs_symlink</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_unlink\">vfs_unlink</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#dentry_unhash\">dentry_unhash</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_readlink\">generic_readlink</a>);", 
];
xr_frag_insert('l/37/433cbf734c18578a60738433e818eded2cca55.xr', __xr_tmp);
