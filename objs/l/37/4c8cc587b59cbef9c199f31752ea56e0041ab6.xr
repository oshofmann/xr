var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 1995,2001 Compaq Computer Corporation</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 Greg Kroah-Hartman (greg@kroah.com)</span>", 
"<span class=\"comment\"> * Copyright (C) 2001 IBM Corp.</span>", 
"<span class=\"comment\"> * Copyright (C) 2003-2004 Intel Corporation</span>", 
"<span class=\"comment\"> * (c) Copyright 2009 Hewlett-Packard Development Company, L.P.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or (at</span>", 
"<span class=\"comment\"> * your option) any later version.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful, but</span>", 
"<span class=\"comment\"> * WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, GOOD TITLE or</span>", 
"<span class=\"comment\"> * NON INFRINGEMENT.  See the GNU General Public License for more</span>", 
"<span class=\"comment\"> * details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci_hotplug\">pci_hotplug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#hpp_type0\">hpp_type0</a> <a class=\"id\" href=\"#pci_default_type0\">pci_default_type0</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#revision\">revision</a> = 1,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cache_line_size\">cache_line_size</a> = 8,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#latency_timer\">latency_timer</a> = 0x40,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enable_serr\">enable_serr</a> = 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#enable_perr\">enable_perr</a> = 0,", 
"};", 
"", 
"static void <a class=\"id\" href=\"#program_hpp_type0\">program_hpp_type0</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#hpp_type0\">hpp_type0</a> *<a class=\"id\" href=\"#hpp\">hpp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#pci_cmd\">pci_cmd</a>, <a class=\"id\" href=\"#pci_bctl\">pci_bctl</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpp\">hpp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Perhaps we *should* use default settings for PCIe, but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pciehp didn't, so we won't either.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"using default PCI settings\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpp\">hpp</a> = &amp;<a class=\"id\" href=\"#pci_default_type0\">pci_default_type0</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#revision\">revision</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"PCI settings rev %d not supported; using defaults\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#revision\">revision</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hpp\">hpp</a> = &amp;<a class=\"id\" href=\"#pci_default_type0\">pci_default_type0</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CACHE_LINE_SIZE\">PCI_CACHE_LINE_SIZE</a>, <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#cache_line_size\">cache_line_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_LATENCY_TIMER\">PCI_LATENCY_TIMER</a>, <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#latency_timer\">latency_timer</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, &amp;<a class=\"id\" href=\"#pci_cmd\">pci_cmd</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#enable_serr\">enable_serr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_cmd\">pci_cmd</a> |= <a class=\"id\" href=\"#PCI_COMMAND_SERR\">PCI_COMMAND_SERR</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_cmd\">pci_cmd</a> &= ~<a class=\"id\" href=\"#PCI_COMMAND_SERR\">PCI_COMMAND_SERR</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#enable_perr\">enable_perr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_cmd\">pci_cmd</a> |= <a class=\"id\" href=\"#PCI_COMMAND_PARITY\">PCI_COMMAND_PARITY</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_cmd\">pci_cmd</a> &= ~<a class=\"id\" href=\"#PCI_COMMAND_PARITY\">PCI_COMMAND_PARITY</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, <a class=\"id\" href=\"#pci_cmd\">pci_cmd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Program bridge control value */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> >> 8) == <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_PCI\">PCI_CLASS_BRIDGE_PCI</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_SEC_LATENCY_TIMER\">PCI_SEC_LATENCY_TIMER</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#latency_timer\">latency_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>, &amp;<a class=\"id\" href=\"#pci_bctl\">pci_bctl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#enable_serr\">enable_serr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bctl\">pci_bctl</a> |= <a class=\"id\" href=\"#PCI_BRIDGE_CTL_SERR\">PCI_BRIDGE_CTL_SERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bctl\">pci_bctl</a> &= ~<a class=\"id\" href=\"#PCI_BRIDGE_CTL_SERR\">PCI_BRIDGE_CTL_SERR</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#enable_perr\">enable_perr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bctl\">pci_bctl</a> |= <a class=\"id\" href=\"#PCI_BRIDGE_CTL_PARITY\">PCI_BRIDGE_CTL_PARITY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bctl\">pci_bctl</a> &= ~<a class=\"id\" href=\"#PCI_BRIDGE_CTL_PARITY\">PCI_BRIDGE_CTL_PARITY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>, <a class=\"id\" href=\"#pci_bctl\">pci_bctl</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#program_hpp_type1\">program_hpp_type1</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#hpp_type1\">hpp_type1</a> *<a class=\"id\" href=\"#hpp\">hpp</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpp\">hpp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"PCI-X settings not supported\\n\");", 
"}", 
"", 
"static void <a class=\"id\" href=\"#program_hpp_type2\">program_hpp_type2</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#hpp_type2\">hpp_type2</a> *<a class=\"id\" href=\"#hpp\">hpp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hpp\">hpp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find PCI Express capability */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#revision\">revision</a> &gt; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"PCIe settings rev %d not supported\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#revision\">revision</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize Device Control Register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_DEVCTL\">PCI_EXP_DEVCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> = (<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#pci_exp_devctl_and\">pci_exp_devctl_and</a>) | <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#pci_exp_devctl_or\">pci_exp_devctl_or</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_DEVCTL\">PCI_EXP_DEVCTL</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize Link Control Register */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg16\">reg16</a> = (<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#pci_exp_lnkctl_and\">pci_exp_lnkctl_and</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#pci_exp_lnkctl_or\">pci_exp_lnkctl_or</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCTL\">PCI_EXP_LNKCTL</a>, <a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Find Advanced Error Reporting Enhanced Capability */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_ext_capability\">pci_find_ext_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_EXT_CAP_ID_ERR\">PCI_EXT_CAP_ID_ERR</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize Uncorrectable Error Mask Register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_UNCOR_MASK\">PCI_ERR_UNCOR_MASK</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg32\">reg32</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#unc_err_mask_and\">unc_err_mask_and</a>) | <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#unc_err_mask_or\">unc_err_mask_or</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_UNCOR_MASK\">PCI_ERR_UNCOR_MASK</a>, <a class=\"id\" href=\"#reg32\">reg32</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize Uncorrectable Error Severity Register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_UNCOR_SEVER\">PCI_ERR_UNCOR_SEVER</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg32\">reg32</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#unc_err_sever_and\">unc_err_sever_and</a>) | <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#unc_err_sever_or\">unc_err_sever_or</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_UNCOR_SEVER\">PCI_ERR_UNCOR_SEVER</a>, <a class=\"id\" href=\"#reg32\">reg32</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize Correctable Error Mask Register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_COR_MASK\">PCI_ERR_COR_MASK</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg32\">reg32</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#cor_err_mask_and\">cor_err_mask_and</a>) | <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#cor_err_mask_or\">cor_err_mask_or</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_COR_MASK\">PCI_ERR_COR_MASK</a>, <a class=\"id\" href=\"#reg32\">reg32</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize Advanced Error Capabilities and Control Register */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_CAP\">PCI_ERR_CAP</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reg32\">reg32</a> = (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#adv_err_cap_and\">adv_err_cap_and</a>) | <a class=\"id\" href=\"#hpp\">hpp</a>-><a class=\"id\" href=\"#adv_err_cap_or\">adv_err_cap_or</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_ERR_CAP\">PCI_ERR_CAP</a>, <a class=\"id\" href=\"#reg32\">reg32</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FIXME: The following two registers are not supported yet.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   o Secondary Uncorrectable Error Severity Register</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   o Secondary Uncorrectable Error Mask Register</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"}", 
"", 
"void <a class=\"id\" href=\"#pci_configure_slot\">pci_configure_slot</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#cdev\">cdev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hotplug_params\">hotplug_params</a> <a class=\"id\" href=\"#hpp\">hpp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_NORMAL\">PCI_HEADER_TYPE_NORMAL</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_BRIDGE\">PCI_HEADER_TYPE_BRIDGE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> >> 8) == <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_PCI\">PCI_CLASS_BRIDGE_PCI</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#hpp\">hpp</a>, 0, sizeof(<a class=\"id\" href=\"#hpp\">hpp</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pci_get_hp_params\">pci_get_hp_params</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#hpp\">hpp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_warn\">dev_warn</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"no hotplug settings from platform\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#program_hpp_type2\">program_hpp_type2</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#hpp\">hpp</a>.<a class=\"id\" href=\"#t2\">t2</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#program_hpp_type1\">program_hpp_type1</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#hpp\">hpp</a>.<a class=\"id\" href=\"#t1\">t1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#program_hpp_type0\">program_hpp_type0</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#hpp\">hpp</a>.<a class=\"id\" href=\"#t0\">t0</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#cdev\">cdev</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>-><a class=\"id\" href=\"#devices\">devices</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#bus_list\">bus_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_configure_slot\">pci_configure_slot</a>(<a class=\"id\" href=\"#cdev\">cdev</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_configure_slot\">pci_configure_slot</a>);", 
];
xr_frag_insert('l/37/4c8cc587b59cbef9c199f31752ea56e0041ab6.xr', __xr_tmp);
