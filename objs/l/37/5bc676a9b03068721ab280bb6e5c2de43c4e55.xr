var __xr_tmp = [
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_add_addr\">ipv6_add_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#tmp_plen\">tmp_plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>)&amp;<a class=\"id\" href=\"#IPV6_ADDR_SCOPE_MASK\">IPV6_ADDR_SCOPE_MASK</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#addr_flags\">addr_flags</a>) : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ift\">ift</a> || <a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ift\">ift</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ipv6_create_tempaddr(): retry temporary address regeneration.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmpaddr\">tmpaddr</a> = &amp;<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_lock\">write_lock</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#ifpub\">ifpub</a> = <a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#tmp_valid_lft\">tmp_valid_lft</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> = <a class=\"id\" href=\"#tmp_prefered_lft\">tmp_prefered_lft</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#cstamp\">cstamp</a> = <a class=\"id\" href=\"#tmp_cstamp\">tmp_cstamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> = <a class=\"id\" href=\"#tmp_tstamp\">tmp_tstamp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dad_start\">addrconf_dad_start</a>(<a class=\"id\" href=\"#ift\">ift</a>, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ift\">ift</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Choose an appropriate source address (RFC3484)</span>", 
"<span class=\"comment\"> */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_INIT\">IPV6_SADDR_RULE_INIT</a> = 0,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_LOCAL\">IPV6_SADDR_RULE_LOCAL</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_SCOPE\">IPV6_SADDR_RULE_SCOPE</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_PREFERRED\">IPV6_SADDR_RULE_PREFERRED</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_HOA\">IPV6_SADDR_RULE_HOA</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_OIF\">IPV6_SADDR_RULE_OIF</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_LABEL\">IPV6_SADDR_RULE_LABEL</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_PRIVACY\">IPV6_SADDR_RULE_PRIVACY</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_ORCHID\">IPV6_SADDR_RULE_ORCHID</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_PREFIX\">IPV6_SADDR_RULE_PREFIX</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#IPV6_SADDR_RULE_MAX\">IPV6_SADDR_RULE_MAX</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ipv6_saddr_score\">ipv6_saddr_score</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rule\">rule</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a><span class=\"ts\"/>*<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#DECLARE_BITMAP\">DECLARE_BITMAP</a>(<a class=\"id\" href=\"#scorebits\">scorebits</a>, <a class=\"id\" href=\"#IPV6_SADDR_RULE_MAX\">IPV6_SADDR_RULE_MAX</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scopedist\">scopedist</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#matchlen\">matchlen</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ipv6_saddr_dst\">ipv6_saddr_dst</a> {", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scope\">scope</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#label\">label</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#prefs\">prefs</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ipv6_saddr_preferred\">ipv6_saddr_preferred</a>(int <a class=\"id\" href=\"#type\">type</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> &amp; (<a class=\"id\" href=\"#IPV6_ADDR_MAPPED\">IPV6_ADDR_MAPPED</a>|<a class=\"id\" href=\"#IPV6_ADDR_COMPATv4\">IPV6_ADDR_COMPATv4</a>|<a class=\"id\" href=\"#IPV6_ADDR_LOOPBACK\">IPV6_ADDR_LOOPBACK</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipv6_get_saddr_eval\">ipv6_get_saddr_eval</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ipv6_saddr_score\">ipv6_saddr_score</a> *<a class=\"id\" href=\"#score\">score</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ipv6_saddr_dst\">ipv6_saddr_dst</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       int <a class=\"id\" href=\"#i\">i</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#rule\">rule</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_SCOPE\">IPV6_SADDR_RULE_SCOPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#scopedist\">scopedist</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_PREFIX\">IPV6_SADDR_RULE_PREFIX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#matchlen\">matchlen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = !!<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#scorebits\">scorebits</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_INIT\">IPV6_SADDR_RULE_INIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 0: remember if hiscore is not ready yet */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = !!<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_LOCAL\">IPV6_SADDR_RULE_LOCAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 1: Prefer same address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_SCOPE\">IPV6_SADDR_RULE_SCOPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 2: Prefer appropriate scope</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *      ret</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *       ^</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    -1 |  d 15</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    ---+--+-+---&gt; scope</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *       |</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *       |             d is scope of the destination.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  B-d  |  \\</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *       |   \\      &lt;- smaller scope is better if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  B-15 |    \\        if scope is enough for destinaion.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *       |             ret = B - scope (-1 &lt;= scope &gt;= d &lt;= 15).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * d-C-1 | /</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *       |/         &lt;- greater is better</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *   -C  /             if scope is not enough for destination.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *      /|             ret = scope - C (-1 &lt;= d &lt; scope &lt;= 15).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * d - C - 1 &lt; B -15 (for all -1 &lt;= d &lt;= 15).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * C &gt; d + 14 - B &gt;= 15 + 14 - B = 29 - B.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Assume B = 0 and we get C &gt; 29.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__ipv6_addr_src_scope\">__ipv6_addr_src_scope</a>(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#addr_type\">addr_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#scope\">scope</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> -= 128;<span class=\"ts\"/><span class=\"comment\">/* 30 is enough */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#scopedist\">scopedist</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_PREFERRED\">IPV6_SADDR_RULE_PREFERRED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 3: Avoid deprecated and optimistic addresses */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ipv6_saddr_preferred\">ipv6_saddr_preferred</a>(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#addr_type\">addr_type</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>      !(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; (<a class=\"id\" href=\"#IFA_F_DEPRECATED\">IFA_F_DEPRECATED</a>|<a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_MIP6\">CONFIG_IPV6_MIP6</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_HOA\">IPV6_SADDR_RULE_HOA</a>:", 
"<span class=\"ts\"/>    {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 4: Prefer home address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#prefhome\">prefhome</a> = !(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#prefs\">prefs</a> &amp; <a class=\"id\" href=\"#IPV6_PREFER_SRC_COA\">IPV6_PREFER_SRC_COA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = !(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_HOMEADDRESS\">IFA_F_HOMEADDRESS</a>) ^ <a class=\"id\" href=\"#prefhome\">prefhome</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>    }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_OIF\">IPV6_SADDR_RULE_OIF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 5: Prefer outgoing interface */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (!<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> == <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_LABEL\">IPV6_SADDR_RULE_LABEL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 6: Prefer matching label */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ipv6_addr_label\">ipv6_addr_label</a>(<a class=\"id\" href=\"#net\">net</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#addr_type\">addr_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>) == <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#label\">label</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_PRIVACY\">IPV6_SADDR_RULE_PRIVACY</a>:", 
"<span class=\"ts\"/>    {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 7: Prefer public address</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Note: prefer temprary address if use_tempaddr &gt;= 2</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#preftmp\">preftmp</a> = <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#prefs\">prefs</a> &amp; (<a class=\"id\" href=\"#IPV6_PREFER_SRC_PUBLIC\">IPV6_PREFER_SRC_PUBLIC</a>|<a class=\"id\" href=\"#IPV6_PREFER_SRC_TMP\">IPV6_PREFER_SRC_TMP</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!!(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#prefs\">prefs</a> &amp; <a class=\"id\" href=\"#IPV6_PREFER_SRC_TMP\">IPV6_PREFER_SRC_TMP</a>) :", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#use_tempaddr\">use_tempaddr</a> >= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = (!(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_TEMPORARY\">IFA_F_TEMPORARY</a>)) ^ <a class=\"id\" href=\"#preftmp\">preftmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>    }", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_ORCHID\">IPV6_SADDR_RULE_ORCHID</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 8-: Prefer ORCHID vs ORCHID or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>    non-ORCHID vs non-ORCHID</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = !(<a class=\"id\" href=\"#ipv6_addr_orchid\">ipv6_addr_orchid</a>(&amp;<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_orchid\">ipv6_addr_orchid</a>(<a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#addr\">addr</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#IPV6_SADDR_RULE_PREFIX\">IPV6_SADDR_RULE_PREFIX</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Rule 8: Use longest matching prefix */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#matchlen\">matchlen</a> = <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ipv6_addr_diff\">ipv6_addr_diff</a>(&amp;<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__set_bit\">__set_bit</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#scorebits\">scorebits</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#rule\">rule</a> = <a class=\"id\" href=\"#i\">i</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ipv6_dev_get_saddr\">ipv6_dev_get_saddr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dst_dev\">dst_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#daddr\">daddr</a>, unsigned int <a class=\"id\" href=\"#prefs\">prefs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#saddr\">saddr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_saddr_score\">ipv6_saddr_score</a> <a class=\"id\" href=\"#scores\">scores</a>[2],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#score\">score</a> = &amp;<a class=\"id\" href=\"#scores\">scores</a>[0], *<a class=\"id\" href=\"#hiscore\">hiscore</a> = &amp;<a class=\"id\" href=\"#scores\">scores</a>[1];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ipv6_saddr_dst\">ipv6_saddr_dst</a> <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dst_type\">dst_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst_type\">dst_type</a> = <a class=\"id\" href=\"#__ipv6_addr_type\">__ipv6_addr_type</a>(<a class=\"id\" href=\"#daddr\">daddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#daddr\">daddr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#ifindex\">ifindex</a> = <a class=\"id\" href=\"#dst_dev\">dst_dev</a> ? <a class=\"id\" href=\"#dst_dev\">dst_dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#__ipv6_addr_src_scope\">__ipv6_addr_src_scope</a>(<a class=\"id\" href=\"#dst_type\">dst_type</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#label\">label</a> = <a class=\"id\" href=\"#ipv6_addr_label\">ipv6_addr_label</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#daddr\">daddr</a>, <a class=\"id\" href=\"#dst_type\">dst_type</a>, <a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#prefs\">prefs</a> = <a class=\"id\" href=\"#prefs\">prefs</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#rule\">rule</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_netdev_rcu\">for_each_netdev_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Candidate Source Address (section 4)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  - multicast and link-local destination address,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    the set of candidate source address MUST only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    include addresses assigned to interfaces</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    belonging to the same link as the outgoing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    interface.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (- For site-local destination addresses, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    set of candidate source addresses MUST only</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    include addresses assigned to interfaces</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    belonging to the same site as the outgoing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *    interface.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((<a class=\"id\" href=\"#dst_type\">dst_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#scope\">scope</a> <= <a class=\"id\" href=\"#IPV6_ADDR_SCOPE_LINKLOCAL\">IPV6_ADDR_SCOPE_LINKLOCAL</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#ifindex\">ifindex</a> && <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a> != <a class=\"id\" href=\"#dst\">dst</a>.<a class=\"id\" href=\"#ifindex\">ifindex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * - Tentative Address (RFC2462 section 5.4)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  - A tentative address is not considered</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *    \"assigned to an interface\" in the traditional</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *    sense, unless it is also flagged as optimistic.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * - Candidate Source Address (section 4)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  - In any case, anycast addresses, multicast</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *    addresses, and the unspecified address MUST</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *    NOT be included in a candidate set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (!(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#__ipv6_addr_type\">__ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#addr_type\">addr_type</a> == <a class=\"id\" href=\"#IPV6_ADDR_ANY\">IPV6_ADDR_ANY</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; <a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#LIMIT_NETDEBUG\">LIMIT_NETDEBUG</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"ADDRCONF: unspecified / multicast address \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"assigned as unicast address on %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#rule\">rule</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_zero\">bitmap_zero</a>(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#scorebits\">scorebits</a>, <a class=\"id\" href=\"#IPV6_SADDR_RULE_MAX\">IPV6_SADDR_RULE_MAX</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#IPV6_SADDR_RULE_MAX\">IPV6_SADDR_RULE_MAX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#minihiscore\">minihiscore</a>, <a class=\"id\" href=\"#miniscore\">miniscore</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#minihiscore\">minihiscore</a> = <a class=\"id\" href=\"#ipv6_get_saddr_eval\">ipv6_get_saddr_eval</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#hiscore\">hiscore</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#miniscore\">miniscore</a> = <a class=\"id\" href=\"#ipv6_get_saddr_eval\">ipv6_get_saddr_eval</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#score\">score</a>, &amp;<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#minihiscore\">minihiscore</a> &gt; <a class=\"id\" href=\"#miniscore\">miniscore</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#IPV6_SADDR_RULE_SCOPE\">IPV6_SADDR_RULE_SCOPE</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#scopedist\">scopedist</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * special case:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * each remaining entry</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * has too small (not enough)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * scope, because ifa entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * are sorted by their scope</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * values.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#try_nextdev\">try_nextdev</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#minihiscore\">minihiscore</a> &lt; <a class=\"id\" href=\"#miniscore\">miniscore</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#ifa\">ifa</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#ifa\">ifa</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#swap\">swap</a>(<a class=\"id\" href=\"#hiscore\">hiscore</a>, <a class=\"id\" href=\"#score\">score</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* restore our iterator */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#score\">score</a>-><a class=\"id\" href=\"#ifa\">ifa</a> = <a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#ifa\">ifa</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#try_nextdev\">try_nextdev</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#ifa\">ifa</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(<a class=\"id\" href=\"#saddr\">saddr</a>, &amp;<a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#hiscore\">hiscore</a>-><a class=\"id\" href=\"#ifa\">ifa</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv6_dev_get_saddr\">ipv6_dev_get_saddr</a>);", 
"", 
"int <a class=\"id\" href=\"#ipv6_get_lladdr\">ipv6_get_lladdr</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned char <a class=\"id\" href=\"#banned_flags\">banned_flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#scope\">scope</a> == <a class=\"id\" href=\"#IFA_LINK\">IFA_LINK</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#banned_flags\">banned_flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipv6_count_addresses\">ipv6_count_addresses</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cnt\">cnt</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cnt\">cnt</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ipv6_chk_addr\">ipv6_chk_addr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#strict\">strict</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#ipv6_addr_hash\">ipv6_addr_hash</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock_bh\">rcu_read_lock_bh</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_rcu\">hlist_for_each_entry_rcu</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#inet6_addr_lst\">inet6_addr_lst</a>[<a class=\"id\" href=\"#hash\">hash</a>], <a class=\"id\" href=\"#addr_lst\">addr_lst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>     !(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#scope\">scope</a>&amp;(<a class=\"id\" href=\"#IFA_LINK\">IFA_LINK</a>|<a class=\"id\" href=\"#IFA_HOST\">IFA_HOST</a>) || <a class=\"id\" href=\"#strict\">strict</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv6_chk_addr\">ipv6_chk_addr</a>);", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ipv6_chk_same_addr\">ipv6_chk_same_addr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#ipv6_addr_hash\">ipv6_addr_hash</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry\">hlist_for_each_entry</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#inet6_addr_lst\">inet6_addr_lst</a>[<a class=\"id\" href=\"#hash\">hash</a>], <a class=\"id\" href=\"#addr_lst\">addr_lst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ipv6_chk_prefix\">ipv6_chk_prefix</a>(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifa\">ifa</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#onlink\">onlink</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#onlink\">onlink</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#__in6_dev_get\">__in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ifa\">ifa</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#onlink\">onlink</a> = <a class=\"id\" href=\"#ipv6_prefix_equal\">ipv6_prefix_equal</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#ifa\">ifa</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#onlink\">onlink</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#onlink\">onlink</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#ipv6_chk_prefix\">ipv6_chk_prefix</a>);", 
"", 
"struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ipv6_get_ifaddr\">ipv6_get_ifaddr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, const struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#strict\">strict</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>, *<a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#ipv6_addr_hash\">ipv6_addr_hash</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock_bh\">rcu_read_lock_bh</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_for_each_entry_rcu_bh\">hlist_for_each_entry_rcu_bh</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#inet6_addr_lst\">inet6_addr_lst</a>[<a class=\"id\" href=\"#hash\">hash</a>], <a class=\"id\" href=\"#addr_lst\">addr_lst</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#net_eq\">net_eq</a>(<a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#net\">net</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a> || <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#dev\">dev</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#scope\">scope</a>&amp;(<a class=\"id\" href=\"#IFA_LINK\">IFA_LINK</a>|<a class=\"id\" href=\"#IFA_HOST\">IFA_HOST</a>) || <a class=\"id\" href=\"#strict\">strict</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#result\">result</a> = <a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#result\">result</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Gets referenced address, destroys ifaddr */</span>", 
"", 
"static void <a class=\"id\" href=\"#addrconf_dad_stop\">addrconf_dad_stop</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>, int <a class=\"id\" href=\"#dad_failed\">dad_failed</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_del_timer\">addrconf_del_timer</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dad_failed\">dad_failed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IFA_F_DADFAILED\">IFA_F_DADFAILED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dad_failed\">dad_failed</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_ifa_notify\">ipv6_ifa_notify</a>(0, <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TEMPORARY\">IFA_F_TEMPORARY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifpub\">ifpub</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifpub\">ifpub</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#ifpub\">ifpub</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifpub\">ifpub</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_hold\">in6_ifa_hold</a>(<a class=\"id\" href=\"#ifpub\">ifpub</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_create_tempaddr\">ipv6_create_tempaddr</a>(<a class=\"id\" href=\"#ifpub\">ifpub</a>, <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifpub\">ifpub</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_del_addr\">ipv6_del_addr</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_del_addr\">ipv6_del_addr</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#addrconf_dad_end\">addrconf_dad_end</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state_lock\">state_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state\">state</a> == <a class=\"id\" href=\"#INET6_IFADDR_STATE_DAD\">INET6_IFADDR_STATE_DAD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#INET6_IFADDR_STATE_POSTDAD\">INET6_IFADDR_STATE_POSTDAD</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#state_lock\">state_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#addrconf_dad_failure\">addrconf_dad_failure</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addrconf_dad_end\">addrconf_dad_end</a>(<a class=\"id\" href=\"#ifp\">ifp</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: IPv6 duplicate address %pI6c detected!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#accept_dad\">accept_dad</a> &gt; 1 && !<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[0] = <a class=\"id\" href=\"#htonl\">htonl</a>(0xfe800000);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[1] = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ipv6_generate_eui64\">ipv6_generate_eui64</a>(<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a> + 8, <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_addr_equal\">ipv6_addr_equal</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* DAD failed for link-local based on MAC address */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"%s: IPv6 being disabled!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dad_stop\">addrconf_dad_stop</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, 1);", 
"}", 
"", 
"<span class=\"comment\">/* Join to solicited addr multicast group. */</span>", 
"", 
"void <a class=\"id\" href=\"#addrconf_join_solict\">addrconf_join_solict</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#maddr\">maddr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;(<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>|<a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_addr_solict_mult\">addrconf_addr_solict_mult</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_mc_inc\">ipv6_dev_mc_inc</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#addrconf_leave_solict\">addrconf_leave_solict</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#maddr\">maddr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;(<a class=\"id\" href=\"#IFF_LOOPBACK\">IFF_LOOPBACK</a>|<a class=\"id\" href=\"#IFF_NOARP\">IFF_NOARP</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_addr_solict_mult\">addrconf_addr_solict_mult</a>(<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ipv6_dev_mc_dec\">__ipv6_dev_mc_dec</a>(<a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#maddr\">maddr</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#addrconf_join_anycast\">addrconf_join_anycast</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_prefix\">ipv6_addr_prefix</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_dev_ac_inc\">ipv6_dev_ac_inc</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#addrconf_leave_anycast\">addrconf_leave_anycast</a>(struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_prefix\">ipv6_addr_prefix</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_addr_any\">ipv6_addr_any</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ipv6_dev_ac_dec\">__ipv6_dev_ac_dec</a>(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#idev\">idev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#addrconf_ifid_eui48\">addrconf_ifid_eui48</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> != <a class=\"id\" href=\"#ETH_ALEN\">ETH_ALEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>, 3);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#eui\">eui</a> + 5, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a> + 3, 3);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The zSeries OSA network cards can be shared among various</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * OS instances, but the OSA cards have only one MAC address.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This leads to duplicate address conflicts in conjunction</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * with IPv6 if more than one instance uses the same card.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The driver for these cards can deliver a unique 16-bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * identifier for each instance sharing the same card.  It is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * placed instead of 0xFFFE in the interface identifier.  The</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * \"u\" bit of the interface identifier is not inverted in this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * case.  Hence the resulting interface identifier has local</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * scope according to RFC2373.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_id\">dev_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[3] = (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_id\">dev_id</a> >> 8) &amp; 0xFF;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[4] = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_id\">dev_id</a> &amp; 0xFF;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[3] = 0xFF;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[4] = 0xFE;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[0] ^= 2;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#addrconf_ifid_arcnet\">addrconf_ifid_arcnet</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* XXX: inherit EUI-64 from other interface -- yoshfuji */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> != <a class=\"id\" href=\"#ARCNET_ALEN\">ARCNET_ALEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#eui\">eui</a>, 0, 7);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[7] = *(<a class=\"id\" href=\"#u8\">u8</a>*)<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#addrconf_ifid_infiniband\">addrconf_ifid_infiniband</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#addr_len\">addr_len</a> != <a class=\"id\" href=\"#INFINIBAND_ALEN\">INFINIBAND_ALEN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a> + 12, 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[0] |= 2;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#__ipv6_isatap_ifid\">__ipv6_isatap_ifid</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[0] = (<a class=\"id\" href=\"#ipv4_is_zeronet\">ipv4_is_zeronet</a>(<a class=\"id\" href=\"#addr\">addr</a>) || <a class=\"id\" href=\"#ipv4_is_private_10\">ipv4_is_private_10</a>(<a class=\"id\" href=\"#addr\">addr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ipv4_is_loopback\">ipv4_is_loopback</a>(<a class=\"id\" href=\"#addr\">addr</a>) || <a class=\"id\" href=\"#ipv4_is_linklocal_169\">ipv4_is_linklocal_169</a>(<a class=\"id\" href=\"#addr\">addr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ipv4_is_private_172\">ipv4_is_private_172</a>(<a class=\"id\" href=\"#addr\">addr</a>) || <a class=\"id\" href=\"#ipv4_is_test_192\">ipv4_is_test_192</a>(<a class=\"id\" href=\"#addr\">addr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ipv4_is_anycast_6to4\">ipv4_is_anycast_6to4</a>(<a class=\"id\" href=\"#addr\">addr</a>) || <a class=\"id\" href=\"#ipv4_is_private_192\">ipv4_is_private_192</a>(<a class=\"id\" href=\"#addr\">addr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ipv4_is_test_198\">ipv4_is_test_198</a>(<a class=\"id\" href=\"#addr\">addr</a>) || <a class=\"id\" href=\"#ipv4_is_multicast\">ipv4_is_multicast</a>(<a class=\"id\" href=\"#addr\">addr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ipv4_is_lbcast\">ipv4_is_lbcast</a>(<a class=\"id\" href=\"#addr\">addr</a>)) ? 0x00 : 0x02;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[1] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[2] = 0x5E;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eui\">eui</a>[3] = 0xFE;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#eui\">eui</a> + 4, &amp;<a class=\"id\" href=\"#addr\">addr</a>, 4);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__ipv6_isatap_ifid\">__ipv6_isatap_ifid</a>);", 
"", 
"static int <a class=\"id\" href=\"#addrconf_ifid_sit\">addrconf_ifid_sit</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#priv_flags\">priv_flags</a> &amp; <a class=\"id\" href=\"#IFF_ISATAP\">IFF_ISATAP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__ipv6_isatap_ifid\">__ipv6_isatap_ifid</a>(<a class=\"id\" href=\"#eui\">eui</a>, *(<a class=\"id\" href=\"#__be32\">__be32</a> *)<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev_addr\">dev_addr</a>);", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipv6_generate_eui64\">ipv6_generate_eui64</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_ETHER\">ARPHRD_ETHER</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_FDDI\">ARPHRD_FDDI</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_IEEE802_TR\">ARPHRD_IEEE802_TR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addrconf_ifid_eui48\">addrconf_ifid_eui48</a>(<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_ARCNET\">ARPHRD_ARCNET</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addrconf_ifid_arcnet\">addrconf_ifid_arcnet</a>(<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_INFINIBAND\">ARPHRD_INFINIBAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addrconf_ifid_infiniband\">addrconf_ifid_infiniband</a>(<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ARPHRD_SIT\">ARPHRD_SIT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#addrconf_ifid_sit\">addrconf_ifid_sit</a>(<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return -1;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ipv6_inherit_eui64\">ipv6_inherit_eui64</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#eui\">eui</a>, struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -1;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, &amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#addr_list\">addr_list</a>, <a class=\"id\" href=\"#if_list\">if_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#scope\">scope</a> == <a class=\"id\" href=\"#IFA_LINK\">IFA_LINK</a> && !(<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#eui\">eui</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a>+8, 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"comment\">/* (re)generation of randomized interface identifier (RFC 3041 3.2, 3.5) */</span>", 
"static int <a class=\"id\" href=\"#__ipv6_regen_rndid\">__ipv6_regen_rndid</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>)", 
"{", 
"<a class=\"id\" href=\"#regen\">regen</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>, sizeof(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[0] &= ~0x02;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * &lt;draft-ietf-ipngwg-temp-addresses-v2-00.txt&gt;:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * check if generated address is not inappropriate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  - Reserved subnet anycast (RFC 2526)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>11111101 11....11 1xxxxxxx</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  - ISATAP (RFC4214) 6.1</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>00-00-5E-FE-xx-xx-xx-xx</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  - value 0</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  - XXX: already assigned to an address on the device</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[0] == 0xfd &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[1]&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[2]&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[3]&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[4]&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[5]&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[6]) == 0xff &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[7]&amp;0x80))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#regen\">regen</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[0]|<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[1]) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[2] == 0x5e && <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[3] == 0xfe)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#regen\">regen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[2]|<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[3]|<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[4]|<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[5]|<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[6]|<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>[7]) == 0x00)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#regen\">regen</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ipv6_regen_rndid\">ipv6_regen_rndid</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a> = (struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *) <a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#expires\">expires</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock_bh\">rcu_read_lock_bh</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dead\">dead</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__ipv6_regen_rndid\">__ipv6_regen_rndid</a>(<a class=\"id\" href=\"#idev\">idev</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#temp_prefered_lft\">temp_prefered_lft</a> * <a class=\"id\" href=\"#HZ\">HZ</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#regen_max_retry\">regen_max_retry</a> * <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#dad_transmits\">dad_transmits</a> * <a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#nd_parms\">nd_parms</a>-><a class=\"id\" href=\"#retrans_time\">retrans_time</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#max_desync_factor\">max_desync_factor</a> * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before\">time_before</a>(<a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ipv6_regen_rndid(): too short regeneration interval; timer disabled for %s.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#regen_timer\">regen_timer</a>, <a class=\"id\" href=\"#expires\">expires</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_hold\">in6_dev_hold</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock_bh\">rcu_read_unlock_bh</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__ipv6_try_regen_rndid\">__ipv6_try_regen_rndid</a>(struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>) {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmpaddr\">tmpaddr</a> && <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#rndid\">rndid</a>, &amp;<a class=\"id\" href=\"#tmpaddr\">tmpaddr</a>-><a class=\"id\" href=\"#s6_addr\">s6_addr</a>[8], 8) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__ipv6_regen_rndid\">__ipv6_regen_rndid</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add prefix route.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"static void", 
"<a class=\"id\" href=\"#addrconf_prefix_route\">addrconf_prefix_route</a>(struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pfx\">pfx</a>, int <a class=\"id\" href=\"#plen\">plen</a>, struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_config\">fib6_config</a> <a class=\"id\" href=\"#cfg\">cfg</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_table\">fc_table</a> = <a class=\"id\" href=\"#RT6_TABLE_PREFIX\">RT6_TABLE_PREFIX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_metric\">fc_metric</a> = <a class=\"id\" href=\"#IP6_RT_PRIO_ADDRCONF\">IP6_RT_PRIO_ADDRCONF</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_ifindex\">fc_ifindex</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_expires\">fc_expires</a> = <a class=\"id\" href=\"#expires\">expires</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a> = <a class=\"id\" href=\"#plen\">plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_flags\">fc_flags</a> = <a class=\"id\" href=\"#RTF_UP\">RTF_UP</a> | <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_protocol\">fc_protocol</a> = <a class=\"id\" href=\"#RTPROT_KERNEL\">RTPROT_KERNEL</a>,", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_copy\">ipv6_addr_copy</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>.<a class=\"id\" href=\"#fc_dst\">fc_dst</a>, <a class=\"id\" href=\"#pfx\">pfx</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Prevent useless cloning on PtP SIT.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   This thing is done here expecting that the whole</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   class of non-broadcast devices need not cloning.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_SIT\">ARPHRD_SIT</a> && (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IFF_POINTOPOINT\">IFF_POINTOPOINT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cfg\">cfg</a>.<a class=\"id\" href=\"#fc_flags\">fc_flags</a> |= <a class=\"id\" href=\"#RTF_NONEXTHOP\">RTF_NONEXTHOP</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_route_add\">ip6_route_add</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Create \"default\" multicast route to the interface */</span>", 
"", 
"static void <a class=\"id\" href=\"#addrconf_add_mroute\">addrconf_add_mroute</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_config\">fib6_config</a> <a class=\"id\" href=\"#cfg\">cfg</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_table\">fc_table</a> = <a class=\"id\" href=\"#RT6_TABLE_LOCAL\">RT6_TABLE_LOCAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_metric\">fc_metric</a> = <a class=\"id\" href=\"#IP6_RT_PRIO_ADDRCONF\">IP6_RT_PRIO_ADDRCONF</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_ifindex\">fc_ifindex</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a> = 8,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_flags\">fc_flags</a> = <a class=\"id\" href=\"#RTF_UP\">RTF_UP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_set\">ipv6_addr_set</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>.<a class=\"id\" href=\"#fc_dst\">fc_dst</a>, <a class=\"id\" href=\"#htonl\">htonl</a>(0xFF000000), 0, 0, 0);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_route_add\">ip6_route_add</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>)", 
"static void <a class=\"id\" href=\"#sit_route_add\">sit_route_add</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fib6_config\">fib6_config</a> <a class=\"id\" href=\"#cfg\">cfg</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_table\">fc_table</a> = <a class=\"id\" href=\"#RT6_TABLE_MAIN\">RT6_TABLE_MAIN</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_metric\">fc_metric</a> = <a class=\"id\" href=\"#IP6_RT_PRIO_ADDRCONF\">IP6_RT_PRIO_ADDRCONF</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_ifindex\">fc_ifindex</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_dst_len\">fc_dst_len</a> = 96,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_flags\">fc_flags</a> = <a class=\"id\" href=\"#RTF_UP\">RTF_UP</a> | <a class=\"id\" href=\"#RTF_NONEXTHOP\">RTF_NONEXTHOP</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#fc_nlinfo\">fc_nlinfo</a>.<a class=\"id\" href=\"#nl_net\">nl_net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/>};", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* prefix length - 96 bits \"::d.d.d.d\" */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip6_route_add\">ip6_route_add</a>(&amp;<a class=\"id\" href=\"#cfg\">cfg</a>);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static void <a class=\"id\" href=\"#addrconf_add_lroute\">addrconf_add_lroute</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ipv6_addr_set\">ipv6_addr_set</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>,  <a class=\"id\" href=\"#htonl\">htonl</a>(0xFE800000), 0, 0, 0);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_prefix_route\">addrconf_prefix_route</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>, 64, <a class=\"id\" href=\"#dev\">dev</a>, 0, 0);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#addrconf_add_dev\">addrconf_add_dev</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#ipv6_find_idev\">ipv6_find_idev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#idev\">idev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#idev\">idev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#disable_ipv6\">disable_ipv6</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EACCES\">EACCES</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add default multicast route */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_add_mroute\">addrconf_add_mroute</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add link local route */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addrconf_add_lroute\">addrconf_add_lroute</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#idev\">idev</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#addrconf_prefix_rcv\">addrconf_prefix_rcv</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#opt\">opt</a>, int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#prefix_info\">prefix_info</a> *<a class=\"id\" href=\"#pinfo\">pinfo</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#valid_lft\">valid_lft</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#addr_type\">addr_type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#in6_dev\">in6_dev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#dev_net\">dev_net</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pinfo\">pinfo</a> = (struct <a class=\"id\" href=\"#prefix_info\">prefix_info</a> *) <a class=\"id\" href=\"#opt\">opt</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; sizeof(struct <a class=\"id\" href=\"#prefix_info\">prefix_info</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ADBG\">ADBG</a>((\"addrconf: prefix option too short\\n\"));", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Validation checks ([ADDRCONF], page 19)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#addr_type\">addr_type</a> = <a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix\">prefix</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addr_type\">addr_type</a> &amp; (<a class=\"id\" href=\"#IPV6_ADDR_MULTICAST\">IPV6_ADDR_MULTICAST</a>|<a class=\"id\" href=\"#IPV6_ADDR_LINKLOCAL\">IPV6_ADDR_LINKLOCAL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#valid\">valid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> = <a class=\"id\" href=\"#ntohl\">ntohl</a>(<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefered\">prefered</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> &gt; <a class=\"id\" href=\"#valid_lft\">valid_lft</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"addrconf: prefix option has invalid lifetime\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev\">in6_dev</a> = <a class=\"id\" href=\"#in6_dev_get\">in6_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in6_dev\">in6_dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"addrconf: device %s not configured\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Two things going on here:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>1) Add routes for on-link prefixes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>2) Configure prefixes with the auto flag set</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#onlink\">onlink</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rt6_info\">rt6_info</a> *<a class=\"id\" href=\"#rt\">rt</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rt_expires\">rt_expires</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Avoid arithmetic overflow. Really, we could</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * save rt_expires in seconds, likely valid_lft,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * but it would require division in fib gc, that it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not good.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#HZ\">HZ</a> &gt; <a class=\"id\" href=\"#USER_HZ\">USER_HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_expires\">rt_expires</a> = <a class=\"id\" href=\"#addrconf_timeout_fixup\">addrconf_timeout_fixup</a>(<a class=\"id\" href=\"#valid_lft\">valid_lft</a>, <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_expires\">rt_expires</a> = <a class=\"id\" href=\"#addrconf_timeout_fixup\">addrconf_timeout_fixup</a>(<a class=\"id\" href=\"#valid_lft\">valid_lft</a>, <a class=\"id\" href=\"#USER_HZ\">USER_HZ</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrconf_finite_timeout\">addrconf_finite_timeout</a>(<a class=\"id\" href=\"#rt_expires\">rt_expires</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt_expires\">rt_expires</a> *= <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#rt6_lookup\">rt6_lookup</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a> && <a class=\"id\" href=\"#addrconf_is_prefix_route\">addrconf_is_prefix_route</a>(<a class=\"id\" href=\"#rt\">rt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Autoconf prefix route */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valid_lft\">valid_lft</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ip6_del_rt\">ip6_del_rt</a>(<a class=\"id\" href=\"#rt\">rt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#addrconf_finite_timeout\">addrconf_finite_timeout</a>(<a class=\"id\" href=\"#rt_expires\">rt_expires</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not infinity */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#rt_expires\">rt_expires</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> |= <a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_flags\">rt6i_flags</a> &= ~<a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#rt6i_expires\">rt6i_expires</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#valid_lft\">valid_lft</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clock_t\">clock_t</a> <a class=\"id\" href=\"#expires\">expires</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#RTF_ADDRCONF\">RTF_ADDRCONF</a> | <a class=\"id\" href=\"#RTF_PREFIX_RT\">RTF_PREFIX_RT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addrconf_finite_timeout\">addrconf_finite_timeout</a>(<a class=\"id\" href=\"#rt_expires\">rt_expires</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* not infinity */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#rt_expires\">rt_expires</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_prefix_route\">addrconf_prefix_route</a>(&amp;<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rt\">rt</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(&amp;<a class=\"id\" href=\"#rt\">rt</a>-><a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Try to figure out our local address for this prefix */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#autoconf\">autoconf</a> && <a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#autoconf\">autoconf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> * <a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#create\">create</a> = 0, <a class=\"id\" href=\"#update_lft\">update_lft</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a> == 64) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#addr\">addr</a>, &amp;<a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix\">prefix</a>, 8);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ipv6_generate_eui64\">ipv6_generate_eui64</a>(<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a> + 8, <a class=\"id\" href=\"#dev\">dev</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_inherit_eui64\">ipv6_inherit_eui64</a>(<a class=\"id\" href=\"#addr\">addr</a>.<a class=\"id\" href=\"#s6_addr\">s6_addr</a> + 8, <a class=\"id\" href=\"#in6_dev\">in6_dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#in6_dev\">in6_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#ok\">ok</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"IPv6 addrconf: prefix with wrong length %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#in6_dev\">in6_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<a class=\"id\" href=\"#ok\">ok</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_get_ifaddr\">ipv6_get_ifaddr</a>(<a class=\"id\" href=\"#net\">net</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#dev\">dev</a>, 1);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#valid_lft\">valid_lft</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#max_addresses\">max_addresses</a> = <a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#max_addresses\">max_addresses</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#addr_flags\">addr_flags</a> = 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_OPTIMISTIC_DAD\">CONFIG_IPV6_OPTIMISTIC_DAD</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#optimistic_dad\">optimistic_dad</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#net\">net</a>-><a class=\"id\" href=\"#ipv6\">ipv6</a>.<a class=\"id\" href=\"#devconf_all\">devconf_all</a>-><a class=\"id\" href=\"#forwarding\">forwarding</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_flags\">addr_flags</a> = <a class=\"id\" href=\"#IFA_F_OPTIMISTIC\">IFA_F_OPTIMISTIC</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do not allow to create too much of autoconfigured</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * addresses; this would be too easy way to crash kernel.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#max_addresses\">max_addresses</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ipv6_count_addresses\">ipv6_count_addresses</a>(<a class=\"id\" href=\"#in6_dev\">in6_dev</a>) &lt; <a class=\"id\" href=\"#max_addresses\">max_addresses</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_add_addr\">ipv6_add_addr</a>(<a class=\"id\" href=\"#in6_dev\">in6_dev</a>, &amp;<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pinfo\">pinfo</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#addr_type\">addr_type</a>&amp;<a class=\"id\" href=\"#IPV6_ADDR_SCOPE_MASK\">IPV6_ADDR_SCOPE_MASK</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#addr_flags\">addr_flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ifp\">ifp</a> || <a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ifp\">ifp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#in6_dev\">in6_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_lft\">update_lft</a> = <a class=\"id\" href=\"#create\">create</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#cstamp\">cstamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dad_start\">addrconf_dad_start</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, <a class=\"id\" href=\"#RTF_ADDRCONF\">RTF_ADDRCONF</a>|<a class=\"id\" href=\"#RTF_PREFIX_RT\">RTF_PREFIX_RT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ift\">ift</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#stored_lft\">stored_lft</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update lifetime (RFC2462 5.5.3 e) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> &gt; (<a class=\"id\" href=\"#now\">now</a> - <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>) / <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stored_lft\">stored_lft</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> - (<a class=\"id\" href=\"#now\">now</a> - <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>) / <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#stored_lft\">stored_lft</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#update_lft\">update_lft</a> && <a class=\"id\" href=\"#stored_lft\">stored_lft</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valid_lft\">valid_lft</a> &gt; <a class=\"id\" href=\"#MIN_VALID_LIFETIME\">MIN_VALID_LIFETIME</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#valid_lft\">valid_lft</a> &gt; <a class=\"id\" href=\"#stored_lft\">stored_lft</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_lft\">update_lft</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#stored_lft\">stored_lft</a> <= <a class=\"id\" href=\"#MIN_VALID_LIFETIME\">MIN_VALID_LIFETIME</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* valid_lft &lt;= stored_lft is always true */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * RFC 4862 Section 5.5.3e:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * \"Note that the preferred lifetime of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  the corresponding address is always</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  reset to the Preferred Lifetime in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  the received Prefix Information</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  option, regardless of whether the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  valid lifetime is also reset or</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  ignored.\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  So if the preferred lifetime in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  this advertisement is different</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  than what we have stored, but the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  valid lifetime is invalid, just</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  reset prefered_lft.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  We must set the valid lifetime</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  to the stored lifetime since we'll</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  be updating the timestamp below,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  else we'll set it back to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *  minumum.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> != <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#stored_lft\">stored_lft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_lft\">update_lft</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#MIN_VALID_LIFETIME\">MIN_VALID_LIFETIME</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valid_lft\">valid_lft</a> &lt; <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> = <a class=\"id\" href=\"#valid_lft\">valid_lft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_lft\">update_lft</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#update_lft\">update_lft</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#valid_lft\">valid_lft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> = <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> = <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#IFA_F_DEPRECATED\">IFA_F_DEPRECATED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_ifa_notify\">ipv6_ifa_notify</a>(0, <a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IPV6_PRIVACY\">CONFIG_IPV6_PRIVACY</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_lock_bh\">read_lock_bh</a>(&amp;<a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update all temporary addresses in the list */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#ift\">ift</a>, &amp;<a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#tempaddr_list\">tempaddr_list</a>, <a class=\"id\" href=\"#tmp_list\">tmp_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * When adjusting the lifetimes of an existing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * temporary address, only lower the lifetimes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Implementations must not increase the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * lifetimes of an existing temporary address</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * when processing a Prefix Information Option.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ifp\">ifp</a> != <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#ifpub\">ifpub</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> &gt; <a class=\"id\" href=\"#valid_lft\">valid_lft</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> - <a class=\"id\" href=\"#valid_lft\">valid_lft</a> &gt; (<a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>) / <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#valid_lft\">valid_lft</a> + (<a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>) / <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> &gt; <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> - <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> &gt; (<a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>) / <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> = <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> + (<a class=\"id\" href=\"#jiffies\">jiffies</a> - <a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a>) / <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#ift\">ift</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#flags\">flags</a>&amp;<a class=\"id\" href=\"#IFA_F_TENTATIVE\">IFA_F_TENTATIVE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_ifa_notify\">ipv6_ifa_notify</a>(0, <a class=\"id\" href=\"#ift\">ift</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#create\">create</a> && <a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#cnf\">cnf</a>.<a class=\"id\" href=\"#use_tempaddr\">use_tempaddr</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * When a new public address is created as described in [ADDRCONF],</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * also create a new temporary address.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ipv6_create_tempaddr\">ipv6_create_tempaddr</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_unlock_bh\">read_unlock_bh</a>(&amp;<a class=\"id\" href=\"#in6_dev\">in6_dev</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_verify\">addrconf_verify</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet6_prefix_notify\">inet6_prefix_notify</a>(<a class=\"id\" href=\"#RTM_NEWPREFIX\">RTM_NEWPREFIX</a>, <a class=\"id\" href=\"#in6_dev\">in6_dev</a>, <a class=\"id\" href=\"#pinfo\">pinfo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in6_dev_put\">in6_dev_put</a>(<a class=\"id\" href=\"#in6_dev\">in6_dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set destination address.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Special case for SIT interfaces where we create a new \"virtual\"</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>device.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#addrconf_set_dstaddr\">addrconf_set_dstaddr</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_ifreq\">in6_ifreq</a> <a class=\"id\" href=\"#ireq\">ireq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_lock\">rtnl_lock</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ireq\">ireq</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(struct <a class=\"id\" href=\"#in6_ifreq\">in6_ifreq</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_exit\">err_exit</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_index\">__dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_ifindex\">ifr6_ifindex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_exit\">err_exit</a>;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT\">CONFIG_IPV6_SIT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_IPV6_SIT_MODULE\">CONFIG_IPV6_SIT_MODULE</a>)", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ARPHRD_SIT\">ARPHRD_SIT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#net_device_ops\">net_device_ops</a> *<a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#netdev_ops\">netdev_ops</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ifreq\">ifreq</a> <a class=\"id\" href=\"#ifr\">ifr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ip_tunnel_parm\">ip_tunnel_parm</a> <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EADDRNOTAVAIL\">EADDRNOTAVAIL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ipv6_addr_type\">ipv6_addr_type</a>(&amp;<a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_addr\">ifr6_addr</a>) &amp; <a class=\"id\" href=\"#IPV6_ADDR_COMPATv4\">IPV6_ADDR_COMPATv4</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_exit\">err_exit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#p\">p</a>, 0, sizeof(<a class=\"id\" href=\"#p\">p</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#daddr\">daddr</a> = <a class=\"id\" href=\"#ireq\">ireq</a>.<a class=\"id\" href=\"#ifr6_addr\">ifr6_addr</a>.<a class=\"id\" href=\"#s6_addr32\">s6_addr32</a>[3];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#saddr\">saddr</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#version\">version</a> = 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#ihl\">ihl</a> = 5;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#protocol\">protocol</a> = <a class=\"id\" href=\"#IPPROTO_IPV6\">IPPROTO_IPV6</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#iph\">iph</a>.<a class=\"id\" href=\"#ttl\">ttl</a> = 64;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifr\">ifr</a>.<a class=\"id\" href=\"#ifr_ifru\">ifr_ifru</a>.<a class=\"id\" href=\"#ifru_data\">ifru_data</a> = (<a class=\"id\" href=\"#__force\">__force</a> void <a class=\"id\" href=\"#__user\">__user</a> *)&amp;<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm_segment_t\">mm_segment_t</a> <a class=\"id\" href=\"#oldfs\">oldfs</a> = <a class=\"id\" href=\"#get_fs\">get_fs</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#ndo_do_ioctl\">ndo_do_ioctl</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#ifr\">ifr</a>, <a class=\"id\" href=\"#SIOCADDTUNNEL\">SIOCADDTUNNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#oldfs\">oldfs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_name\">__dev_get_by_name</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#p\">p</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_exit\">err_exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#dev_open\">dev_open</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#err_exit\">err_exit</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtnl_unlock\">rtnl_unlock</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Manual configuration of address on an interface</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#inet6_addr_add\">inet6_addr_add</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pfx\">pfx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#ifa_flags\">ifa_flags</a>, <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#valid_lft\">valid_lft</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_ifaddr\">inet6_ifaddr</a> *<a class=\"id\" href=\"#ifp\">ifp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet6_dev\">inet6_dev</a> *<a class=\"id\" href=\"#idev\">idev</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#scope\">scope</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clock_t\">clock_t</a> <a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ASSERT_RTNL\">ASSERT_RTNL</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &gt; 128)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check the lifetime */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#valid_lft\">valid_lft</a> || <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> &gt; <a class=\"id\" href=\"#valid_lft\">valid_lft</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#__dev_get_by_index\">__dev_get_by_index</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#ifindex\">ifindex</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#idev\">idev</a> = <a class=\"id\" href=\"#addrconf_add_dev\">addrconf_add_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#idev\">idev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#idev\">idev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scope\">scope</a> = <a class=\"id\" href=\"#ipv6_addr_scope\">ipv6_addr_scope</a>(<a class=\"id\" href=\"#pfx\">pfx</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#addrconf_timeout_fixup\">addrconf_timeout_fixup</a>(<a class=\"id\" href=\"#valid_lft\">valid_lft</a>, <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addrconf_finite_timeout\">addrconf_finite_timeout</a>(<a class=\"id\" href=\"#timeout\">timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#jiffies_to_clock_t\">jiffies_to_clock_t</a>(<a class=\"id\" href=\"#timeout\">timeout</a> * <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#RTF_EXPIRES\">RTF_EXPIRES</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> |= <a class=\"id\" href=\"#IFA_F_PERMANENT\">IFA_F_PERMANENT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#timeout\">timeout</a> = <a class=\"id\" href=\"#addrconf_timeout_fixup\">addrconf_timeout_fixup</a>(<a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>, <a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#addrconf_finite_timeout\">addrconf_finite_timeout</a>(<a class=\"id\" href=\"#timeout\">timeout</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timeout\">timeout</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifa_flags\">ifa_flags</a> |= <a class=\"id\" href=\"#IFA_F_DEPRECATED\">IFA_F_DEPRECATED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> = <a class=\"id\" href=\"#timeout\">timeout</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a> = <a class=\"id\" href=\"#ipv6_add_addr\">ipv6_add_addr</a>(<a class=\"id\" href=\"#idev\">idev</a>, <a class=\"id\" href=\"#pfx\">pfx</a>, <a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#scope\">scope</a>, <a class=\"id\" href=\"#ifa_flags\">ifa_flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ifp\">ifp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#valid_lft\">valid_lft</a> = <a class=\"id\" href=\"#valid_lft\">valid_lft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefered_lft\">prefered_lft</a> = <a class=\"id\" href=\"#prefered_lft\">prefered_lft</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#tstamp\">tstamp</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_prefix_route\">addrconf_prefix_route</a>(&amp;<a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#ifp\">ifp</a>-><a class=\"id\" href=\"#prefix_len\">prefix_len</a>, <a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#expires\">expires</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Note that section 3.1 of RFC 4429 indicates</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that the Optimistic flag should not be set for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * manually configured addresses</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_dad_start\">addrconf_dad_start</a>(<a class=\"id\" href=\"#ifp\">ifp</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#in6_ifa_put\">in6_ifa_put</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addrconf_verify\">addrconf_verify</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ifp\">ifp</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#inet6_addr_del\">inet6_addr_del</a>(struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a>, int <a class=\"id\" href=\"#ifindex\">ifindex</a>, struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> *<a class=\"id\" href=\"#pfx\">pfx</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned int <a class=\"id\" href=\"#plen\">plen</a>)", 
];
xr_frag_insert('l/37/5bc676a9b03068721ab280bb6e5c2de43c4e55.xr', __xr_tmp);
