var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/read_write.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1991, 1992  Linus Torvalds</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt; ", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#stat\">stat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fcntl\">fcntl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#file\">file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#uio\">uio</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp_lock\">smp_lock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fsnotify\">fsnotify</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#splice\">splice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"read_write.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#unistd\">unistd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#generic_ro_fops\">generic_ro_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#do_sync_read\">do_sync_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#aio_read\">aio_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_aio_read\">generic_file_aio_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mmap\">mmap</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_readonly_mmap\">generic_file_readonly_mmap</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#splice_read\">splice_read</a><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_splice_read\">generic_file_splice_read</a>,", 
"};", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_ro_fops\">generic_ro_fops</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * generic_file_llseek_unlocked - lockless generic llseek implementation</span>", 
"<span class=\"comment\"> * @file:<span class=\"ts\"/>file structure to seek on</span>", 
"<span class=\"comment\"> * @offset:<span class=\"ts\"/>file offset to seek to</span>", 
"<span class=\"comment\"> * @origin:<span class=\"ts\"/>type of seek</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updates the file offset to the value specified by @offset and @origin.</span>", 
"<span class=\"comment\"> * Locking must be provided by the caller.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a>", 
"<a class=\"id\" href=\"#generic_file_llseek_unlocked\">generic_file_llseek_unlocked</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mapping\">f_mapping</a>-><a class=\"id\" href=\"#host\">host</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#origin\">origin</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SEEK_END\">SEEK_END</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SEEK_CUR\">SEEK_CUR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Here we special-case the lseek(fd, 0, SEEK_CUR)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * position-querying operation.  Avoid rewriting the \"same\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * f_pos value back to the file because a concurrent read(),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * write() or lseek() might have altered it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> &lt; 0 || <a class=\"id\" href=\"#offset\">offset</a> &gt; <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Special lock needed here? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> != <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#offset\">offset</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_file_llseek_unlocked\">generic_file_llseek_unlocked</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * generic_file_llseek - generic llseek implementation for regular files</span>", 
"<span class=\"comment\"> * @file:<span class=\"ts\"/>file structure to seek on</span>", 
"<span class=\"comment\"> * @offset:<span class=\"ts\"/>file offset to seek to</span>", 
"<span class=\"comment\"> * @origin:<span class=\"ts\"/>type of seek</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is a generic implemenation of -&gt;llseek useable for all normal local</span>", 
"<span class=\"comment\"> * filesystems.  It just updates the file offset to the value specified by</span>", 
"<span class=\"comment\"> * @offset and @origin under i_mutex.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#rval\">rval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rval\">rval</a> = <a class=\"id\" href=\"#generic_file_llseek_unlocked\">generic_file_llseek_unlocked</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#origin\">origin</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>-><a class=\"id\" href=\"#i_mutex\">i_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rval\">rval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * noop_llseek - No Operation Performed llseek implementation</span>", 
"<span class=\"comment\"> * @file:<span class=\"ts\"/>file structure to seek on</span>", 
"<span class=\"comment\"> * @offset:<span class=\"ts\"/>file offset to seek to</span>", 
"<span class=\"comment\"> * @origin:<span class=\"ts\"/>type of seek</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is an implementation of -&gt;llseek useable for the rare special case when</span>", 
"<span class=\"comment\"> * userspace expects the seek to succeed but the (device) file is actually not</span>", 
"<span class=\"comment\"> * able to perform the seek. In this case you use noop_llseek() instead of</span>", 
"<span class=\"comment\"> * falling back to the default implementation of -&gt;llseek.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#noop_llseek\">noop_llseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#noop_llseek\">noop_llseek</a>);", 
"", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#no_llseek\">no_llseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ESPIPE\">ESPIPE</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#no_llseek\">no_llseek</a>);", 
"", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#default_llseek\">default_llseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_kernel\">lock_kernel</a>();", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#origin\">origin</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SEEK_END\">SEEK_END</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#i_size_read\">i_size_read</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#SEEK_CUR\">SEEK_CUR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> += <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> != <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_version\">f_version</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_kernel\">unlock_kernel</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#default_llseek\">default_llseek</a>);", 
"", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#vfs_llseek\">vfs_llseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> (*<a class=\"id\" href=\"#fn\">fn</a>)(struct <a class=\"id\" href=\"#file\">file</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>, int);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#no_llseek\">no_llseek</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_LSEEK\">FMODE_LSEEK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#default_llseek\">default_llseek</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> && <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#llseek\">llseek</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#llseek\">llseek</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#origin\">origin</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_llseek\">vfs_llseek</a>);", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#lseek\">lseek</a>, unsigned int, <a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#off_t\">off_t</a>, <a class=\"id\" href=\"#offset\">offset</a>, unsigned int, <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off_t\">off_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#origin\">origin</a> <= <a class=\"id\" href=\"#SEEK_MAX\">SEEK_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#vfs_llseek\">vfs_llseek</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#origin\">origin</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a> != (<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EOVERFLOW\">EOVERFLOW</a>;<span class=\"ts\"/><span class=\"comment\">/* LFS: should only happen on 32 bit platforms */</span>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__ARCH_WANT_SYS_LLSEEK\">__ARCH_WANT_SYS_LLSEEK</a>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#llseek\">llseek</a>, unsigned int, <a class=\"id\" href=\"#fd\">fd</a>, unsigned long, <a class=\"id\" href=\"#offset_high\">offset_high</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long, <a class=\"id\" href=\"#offset_low\">offset_low</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#result\">result</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int, <a class=\"id\" href=\"#origin\">origin</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#origin\">origin</a> &gt; <a class=\"id\" href=\"#SEEK_MAX\">SEEK_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_putf\">out_putf</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#vfs_llseek\">vfs_llseek</a>(<a class=\"id\" href=\"#file\">file</a>, ((<a class=\"id\" href=\"#loff_t\">loff_t</a>) <a class=\"id\" href=\"#offset_high\">offset_high</a> << 32) | <a class=\"id\" href=\"#offset_low\">offset_low</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#origin\">origin</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = (int)<a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#result\">result</a>, &amp;<a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#offset\">offset</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out_putf\">out_putf</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * rw_verify_area doesn't like huge counts. We limit</span>", 
"<span class=\"comment\"> * them to something that fits in \"int\" so that others</span>", 
"<span class=\"comment\"> * won't have to do range checks all the time.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_RW_COUNT\">MAX_RW_COUNT</a> (<a class=\"id\" href=\"#INT_MAX\">INT_MAX</a> &amp; <a class=\"id\" href=\"#PAGE_CACHE_MASK\">PAGE_CACHE_MASK</a>)", 
"", 
"int <a class=\"id\" href=\"#rw_verify_area\">rw_verify_area</a>(int <a class=\"id\" href=\"#read_write\">read_write</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#ssize_t\">ssize_t</a>) <a class=\"id\" href=\"#count\">count</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#pos\">pos</a> &lt; 0) || (<a class=\"id\" href=\"#loff_t\">loff_t</a>) (<a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#count\">count</a>) &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_flock\">i_flock</a> && <a class=\"id\" href=\"#mandatory_lock\">mandatory_lock</a>(<a class=\"id\" href=\"#inode\">inode</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#locks_mandatory_area\">locks_mandatory_area</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_write\">read_write</a> == <a class=\"id\" href=\"#READ\">READ</a> ? <a class=\"id\" href=\"#FLOCK_VERIFY_READ\">FLOCK_VERIFY_READ</a> : <a class=\"id\" href=\"#FLOCK_VERIFY_WRITE\">FLOCK_VERIFY_WRITE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#security_file_permission\">security_file_permission</a>(<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#read_write\">read_write</a> == <a class=\"id\" href=\"#READ\">READ</a> ? <a class=\"id\" href=\"#MAY_READ\">MAY_READ</a> : <a class=\"id\" href=\"#MAY_WRITE\">MAY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#MAX_RW_COUNT\">MAX_RW_COUNT</a> ? <a class=\"id\" href=\"#MAX_RW_COUNT\">MAX_RW_COUNT</a> : <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#wait_on_retry_sync_kiocb\">wait_on_retry_sync_kiocb</a>(struct <a class=\"id\" href=\"#kiocb\">kiocb</a> *<a class=\"id\" href=\"#iocb\">iocb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_current_state\">set_current_state</a>(<a class=\"id\" href=\"#TASK_UNINTERRUPTIBLE\">TASK_UNINTERRUPTIBLE</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kiocbIsKicked\">kiocbIsKicked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kiocbClearKicked\">kiocbClearKicked</a>(<a class=\"id\" href=\"#iocb\">iocb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__set_current_state\">__set_current_state</a>(<a class=\"id\" href=\"#TASK_RUNNING\">TASK_RUNNING</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#do_sync_read\">do_sync_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#iov\">iov</a> = { .<a class=\"id\" href=\"#iov_base\">iov_base</a> = <a class=\"id\" href=\"#buf\">buf</a>, .<a class=\"id\" href=\"#iov_len\">iov_len</a> = <a class=\"id\" href=\"#len\">len</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kiocb\">kiocb</a> <a class=\"id\" href=\"#kiocb\">kiocb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_sync_kiocb\">init_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_left\">ki_left</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_nbytes\">ki_nbytes</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_read\">aio_read</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>, &amp;<a class=\"id\" href=\"#iov\">iov</a>, 1, <a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EIOCBRETRY\">EIOCBRETRY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_retry_sync_kiocb\">wait_on_retry_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (-<a class=\"id\" href=\"#EIOCBQUEUED\">EIOCBQUEUED</a> == <a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_on_sync_kiocb\">wait_on_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#do_sync_read\">do_sync_read</a>);", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#vfs_read\">vfs_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> || (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a> && !<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_read\">aio_read</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#rw_verify_area\">rw_verify_area</a>(<a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sync_read\">do_sync_read</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_access\">fsnotify_access</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_rchar\">add_rchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_syscr\">inc_syscr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_read\">vfs_read</a>);", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#do_sync_write\">do_sync_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#iov\">iov</a> = { .<a class=\"id\" href=\"#iov_base\">iov_base</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#buf\">buf</a>, .<a class=\"id\" href=\"#iov_len\">iov_len</a> = <a class=\"id\" href=\"#len\">len</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kiocb\">kiocb</a> <a class=\"id\" href=\"#kiocb\">kiocb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_sync_kiocb\">init_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_left\">ki_left</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_nbytes\">ki_nbytes</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_write\">aio_write</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>, &amp;<a class=\"id\" href=\"#iov\">iov</a>, 1, <a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EIOCBRETRY\">EIOCBRETRY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_retry_sync_kiocb\">wait_on_retry_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (-<a class=\"id\" href=\"#EIOCBQUEUED\">EIOCBQUEUED</a> == <a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_on_sync_kiocb\">wait_on_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#do_sync_write\">do_sync_write</a>);", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#vfs_write\">vfs_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> || (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a> && !<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_write\">aio_write</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#rw_verify_area\">rw_verify_area</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sync_write\">do_sync_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_modify\">fsnotify_modify</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wchar\">add_wchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inc_syscw\">inc_syscw</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_write\">vfs_write</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#file_pos_read\">file_pos_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#file_pos_write\">file_pos_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#pos\">pos</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#read\">read</a>, unsigned int, <a class=\"id\" href=\"#fd\">fd</a>, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#file_pos_read\">file_pos_read</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_read\">vfs_read</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file_pos_write\">file_pos_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#write\">write</a>, unsigned int, <a class=\"id\" href=\"#fd\">fd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#file_pos_read\">file_pos_read</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_write\">vfs_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file_pos_write\">file_pos_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE\">SYSCALL_DEFINE</a>(<a class=\"id\" href=\"#pread64\">pread64</a>)(unsigned int <a class=\"id\" href=\"#fd\">fd</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESPIPE\">ESPIPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_PREAD\">FMODE_PREAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_read\">vfs_read</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_SYSCALL_WRAPPERS\">CONFIG_HAVE_SYSCALL_WRAPPERS</a>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#SyS_pread64\">SyS_pread64</a>(long <a class=\"id\" href=\"#fd\">fd</a>, long <a class=\"id\" href=\"#buf\">buf</a>, long <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#SYSC_pread64\">SYSC_pread64</a>((unsigned int) <a class=\"id\" href=\"#fd\">fd</a>, (char <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#size_t\">size_t</a>) <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"<a class=\"id\" href=\"#SYSCALL_ALIAS\">SYSCALL_ALIAS</a>(<a class=\"id\" href=\"#sys_pread64\">sys_pread64</a>, <a class=\"id\" href=\"#SyS_pread64\">SyS_pread64</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE\">SYSCALL_DEFINE</a>(<a class=\"id\" href=\"#pwrite64\">pwrite64</a>)(unsigned int <a class=\"id\" href=\"#fd\">fd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESPIPE\">ESPIPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_PWRITE\">FMODE_PWRITE</a>)  ", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_write\">vfs_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HAVE_SYSCALL_WRAPPERS\">CONFIG_HAVE_SYSCALL_WRAPPERS</a>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#SyS_pwrite64\">SyS_pwrite64</a>(long <a class=\"id\" href=\"#fd\">fd</a>, long <a class=\"id\" href=\"#buf\">buf</a>, long <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#SYSC_pwrite64\">SYSC_pwrite64</a>((unsigned int) <a class=\"id\" href=\"#fd\">fd</a>, (const char <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     (<a class=\"id\" href=\"#size_t\">size_t</a>) <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"<a class=\"id\" href=\"#SYSCALL_ALIAS\">SYSCALL_ALIAS</a>(<a class=\"id\" href=\"#sys_pwrite64\">sys_pwrite64</a>, <a class=\"id\" href=\"#SyS_pwrite64\">SyS_pwrite64</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reduce an iovec's length in-place.  Return the resulting number of segments</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long <a class=\"id\" href=\"#iov_shorten\">iov_shorten</a>(struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>, unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#to\">to</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#seg\">seg</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#seg\">seg</a> &lt; <a class=\"id\" href=\"#nr_segs\">nr_segs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seg\">seg</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> + <a class=\"id\" href=\"#iov\">iov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a> >= <a class=\"id\" href=\"#to\">to</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a> = <a class=\"id\" href=\"#to\">to</a> - <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> += <a class=\"id\" href=\"#iov\">iov</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a>++;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seg\">seg</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#iov_shorten\">iov_shorten</a>);", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#do_sync_readv_writev\">do_sync_readv_writev</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#iov_fn_t\">iov_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kiocb\">kiocb</a> <a class=\"id\" href=\"#kiocb\">kiocb</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_sync_kiocb\">init_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>, <a class=\"id\" href=\"#filp\">filp</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_left\">ki_left</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_nbytes\">ki_nbytes</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#fn\">fn</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EIOCBRETRY\">EIOCBRETRY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wait_on_retry_sync_kiocb\">wait_on_retry_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EIOCBQUEUED\">EIOCBQUEUED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#wait_on_sync_kiocb\">wait_on_sync_kiocb</a>(&amp;<a class=\"id\" href=\"#kiocb\">kiocb</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#kiocb\">kiocb</a>.<a class=\"id\" href=\"#ki_pos\">ki_pos</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Do it by hand, with file-ops */</span>", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#do_loop_readv_writev\">do_loop_readv_writev</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#io_fn_t\">io_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#vector\">vector</a> = <a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#nr_segs\">nr_segs</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#nr\">nr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#vector\">vector</a>-><a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#vector\">vector</a>-><a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vector\">vector</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_segs\">nr_segs</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#fn\">fn</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#nr\">nr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#nr\">nr</a> != <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* A write operation does a read from user space and vice versa */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#vrfy_dir\">vrfy_dir</a>(<a class=\"id\" href=\"#type\">type</a>) ((<a class=\"id\" href=\"#type\">type</a>) == <a class=\"id\" href=\"#READ\">READ</a> ? <a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a> : <a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>)", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#rw_copy_check_uvector\">rw_copy_check_uvector</a>(int <a class=\"id\" href=\"#type\">type</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#uvector\">uvector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, unsigned long <a class=\"id\" href=\"#fast_segs\">fast_segs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#fast_pointer\">fast_pointer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#iovec\">iovec</a> **<a class=\"id\" href=\"#ret_pointer\">ret_pointer</a>)", 
"  {", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#seg\">seg</a>;", 
"  <span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#fast_pointer\">fast_pointer</a>;", 
"", 
"  <span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> * SuS says \"The readv() function *may* fail if the iovcnt argument</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> * was less than or equal to 0, or greater than {IOV_MAX}.  Linux has</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> * traditionally returned zero for zero segments, so...</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_segs\">nr_segs</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"  <span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"  <span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> * First get the \"struct iovec\" from user memory and</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> * verify all the pointers</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_segs\">nr_segs</a> &gt; <a class=\"id\" href=\"#UIO_MAXIOV\">UIO_MAXIOV</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"  <span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_segs\">nr_segs</a> &gt; <a class=\"id\" href=\"#fast_segs\">fast_segs</a>) {", 
"  <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#nr_segs\">nr_segs</a>*sizeof(struct <a class=\"id\" href=\"#iovec\">iovec</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iov\">iov</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"  <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"  <span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#uvector\">uvector</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>*sizeof(*<a class=\"id\" href=\"#uvector\">uvector</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"  <span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"  <span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * According to the Single Unix Specification we should return EINVAL</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if an element length is &lt; 0 when cast to ssize_t or if the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * total length would overflow the ssize_t return value of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * system call.</span>", 
"<span class=\"comment\">  <span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"  <span class=\"ts\"/>for (<a class=\"id\" href=\"#seg\">seg</a> = 0; <a class=\"id\" href=\"#seg\">seg</a> &lt; <a class=\"id\" href=\"#nr_segs\">nr_segs</a>; <a class=\"id\" href=\"#seg\">seg</a>++) {", 
"  <span class=\"ts\"/><span class=\"ts\"/>void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#seg\">seg</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>;", 
"  <span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#len\">len</a> = (<a class=\"id\" href=\"#ssize_t\">ssize_t</a>)<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#seg\">seg</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* see if we we're about to use an invalid len or if</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * it's about to overflow ssize_t */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 0 || (<a class=\"id\" href=\"#ret\">ret</a> + <a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#ret\">ret</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"  <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#vrfy_dir\">vrfy_dir</a>(<a class=\"id\" href=\"#type\">type</a>), <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#len\">len</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"  <span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"  <span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ret_pointer\">ret_pointer</a> = <a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#do_readv_writev\">do_readv_writev</a>(int <a class=\"id\" href=\"#type\">type</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#uvector\">uvector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#tot_len\">tot_len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#iovstack\">iovstack</a>[<a class=\"id\" href=\"#UIO_FASTIOV\">UIO_FASTIOV</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#iovstack\">iovstack</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_fn_t\">io_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov_fn_t\">iov_fn_t</a> <a class=\"id\" href=\"#fnv\">fnv</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#rw_copy_check_uvector\">rw_copy_check_uvector</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#uvector\">uvector</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#iovstack\">iovstack</a>), <a class=\"id\" href=\"#iovstack\">iovstack</a>, &amp;<a class=\"id\" href=\"#iov\">iov</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#rw_verify_area\">rw_verify_area</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#tot_len\">tot_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fnv\">fnv</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fnv\">fnv</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_read\">aio_read</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = (<a class=\"id\" href=\"#io_fn_t\">io_fn_t</a>)<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fnv\">fnv</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_write\">aio_write</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fnv\">fnv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sync_readv_writev\">do_sync_readv_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#tot_len\">tot_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#fnv\">fnv</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_loop_readv_writev\">do_loop_readv_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iov\">iov</a> != <a class=\"id\" href=\"#iovstack\">iovstack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#iov\">iov</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> + (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#READ\">READ</a>)) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_access\">fsnotify_access</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_modify\">fsnotify_modify</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#vfs_readv\">vfs_readv</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> || (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_read\">aio_read</a> && !<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_readv_writev\">do_readv_writev</a>(<a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_readv\">vfs_readv</a>);", 
"", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#vfs_writev\">vfs_writev</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> || (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_write\">aio_write</a> && !<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_readv_writev\">do_readv_writev</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#vfs_writev\">vfs_writev</a>);", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#readv\">readv</a>, unsigned long, <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long, <a class=\"id\" href=\"#vlen\">vlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#file_pos_read\">file_pos_read</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_readv\">vfs_readv</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file_pos_write\">file_pos_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_rchar\">add_rchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscr\">inc_syscr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE3\">SYSCALL_DEFINE3</a>(<a class=\"id\" href=\"#writev\">writev</a>, unsigned long, <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long, <a class=\"id\" href=\"#vlen\">vlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#file_pos_read\">file_pos_read</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_writev\">vfs_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file_pos_write\">file_pos_write</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wchar\">add_wchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscw\">inc_syscw</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos_from_hilo\">pos_from_hilo</a>(unsigned long <a class=\"id\" href=\"#high\">high</a>, unsigned long <a class=\"id\" href=\"#low\">low</a>)", 
"{", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HALF_LONG_BITS\">HALF_LONG_BITS</a> (<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> / 2)", 
"<span class=\"ts\"/>return (((<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#high\">high</a> << <a class=\"id\" href=\"#HALF_LONG_BITS\">HALF_LONG_BITS</a>) << <a class=\"id\" href=\"#HALF_LONG_BITS\">HALF_LONG_BITS</a>) | <a class=\"id\" href=\"#low\">low</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#preadv\">preadv</a>, unsigned long, <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long, <a class=\"id\" href=\"#vlen\">vlen</a>, unsigned long, <a class=\"id\" href=\"#pos_l\">pos_l</a>, unsigned long, <a class=\"id\" href=\"#pos_h\">pos_h</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pos_from_hilo\">pos_from_hilo</a>(<a class=\"id\" href=\"#pos_h\">pos_h</a>, <a class=\"id\" href=\"#pos_l\">pos_l</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESPIPE\">ESPIPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_PREAD\">FMODE_PREAD</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_readv\">vfs_readv</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_rchar\">add_rchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscr\">inc_syscr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#pwritev\">pwritev</a>, unsigned long, <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long, <a class=\"id\" href=\"#vlen\">vlen</a>, unsigned long, <a class=\"id\" href=\"#pos_l\">pos_l</a>, unsigned long, <a class=\"id\" href=\"#pos_h\">pos_h</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pos_from_hilo\">pos_from_hilo</a>(<a class=\"id\" href=\"#pos_h\">pos_h</a>, <a class=\"id\" href=\"#pos_l\">pos_l</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESPIPE\">ESPIPE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_PWRITE\">FMODE_PWRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#vfs_writev\">vfs_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wchar\">add_wchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscw\">inc_syscw</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#do_sendfile\">do_sendfile</a>(int <a class=\"id\" href=\"#out_fd\">out_fd</a>, int <a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#max\">max</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#in_file\">in_file</a>, * <a class=\"id\" href=\"#out_file\">out_file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#in_inode\">in_inode</a>, * <a class=\"id\" href=\"#out_inode\">out_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed_in\">fput_needed_in</a>, <a class=\"id\" href=\"#fput_needed_out\">fput_needed_out</a>, <a class=\"id\" href=\"#fl\">fl</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get input file, and verify that it is ok..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_file\">in_file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#in_fd\">in_fd</a>, &amp;<a class=\"id\" href=\"#fput_needed_in\">fput_needed_in</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#in_file\">in_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#in_file\">in_file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_in\">fput_in</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ESPIPE\">ESPIPE</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ppos\">ppos</a> = &amp;<a class=\"id\" href=\"#in_file\">in_file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#in_file\">in_file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_PREAD\">FMODE_PREAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_in\">fput_in</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rw_verify_area\">rw_verify_area</a>(<a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#in_file\">in_file</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_in\">fput_in</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Get output file, and verify that it is ok..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#out_file\">out_file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>, &amp;<a class=\"id\" href=\"#fput_needed_out\">fput_needed_out</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#out_file\">out_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_in\">fput_in</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#out_file\">out_file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_out\">fput_out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#in_inode\">in_inode</a> = <a class=\"id\" href=\"#in_file\">in_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#out_inode\">out_inode</a> = <a class=\"id\" href=\"#out_file\">out_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#rw_verify_area\">rw_verify_area</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#out_file\">out_file</a>, &amp;<a class=\"id\" href=\"#out_file\">out_file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_out\">fput_out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#in_inode\">in_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a>, <a class=\"id\" href=\"#out_inode\">out_inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_maxbytes\">s_maxbytes</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#max\">max</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EOVERFLOW\">EOVERFLOW</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> >= <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fput_out\">fput_out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#max\">max</a> - <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a> = 0;", 
"#if 0", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to debate whether we can enable this or not. The</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * man page documents EAGAIN return for the output at least,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the application is arguably buggy if it doesn't expect</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EAGAIN on a non-blocking file descriptor.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_file\">in_file</a>-><a class=\"id\" href=\"#f_flags\">f_flags</a> &amp; <a class=\"id\" href=\"#O_NONBLOCK\">O_NONBLOCK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fl\">fl</a> = <a class=\"id\" href=\"#SPLICE_F_NONBLOCK\">SPLICE_F_NONBLOCK</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#do_splice_direct\">do_splice_direct</a>(<a class=\"id\" href=\"#in_file\">in_file</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#out_file\">out_file</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#fl\">fl</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_rchar\">add_rchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wchar\">add_wchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#retval\">retval</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscr\">inc_syscr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscw\">inc_syscw</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ppos\">ppos</a> &gt; <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EOVERFLOW\">EOVERFLOW</a>;", 
"", 
"<a class=\"id\" href=\"#fput_out\">fput_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#out_file\">out_file</a>, <a class=\"id\" href=\"#fput_needed_out\">fput_needed_out</a>);", 
"<a class=\"id\" href=\"#fput_in\">fput_in</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#in_file\">in_file</a>, <a class=\"id\" href=\"#fput_needed_in\">fput_needed_in</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#sendfile\">sendfile</a>, int, <a class=\"id\" href=\"#out_fd\">out_fd</a>, int, <a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#off_t\">off_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off_t\">off_t</a> <a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#offset\">offset</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#off\">off</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sendfile\">do_sendfile</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#in_fd\">in_fd</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#MAX_NON_LFS\">MAX_NON_LFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#offset\">offset</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_sendfile\">do_sendfile</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#count\">count</a>, 0);", 
"}", 
"", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#sendfile64\">sendfile64</a>, int, <a class=\"id\" href=\"#out_fd\">out_fd</a>, int, <a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#offset\">offset</a>, sizeof(<a class=\"id\" href=\"#loff_t\">loff_t</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sendfile\">do_sendfile</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#in_fd\">in_fd</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#count\">count</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#offset\">offset</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_sendfile\">do_sendfile</a>(<a class=\"id\" href=\"#out_fd\">out_fd</a>, <a class=\"id\" href=\"#in_fd\">in_fd</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#count\">count</a>, 0);", 
"}", 
];
xr_frag_insert('l/37/e2e6b4fad35df22a234272ccc307b3e6393ceb.xr', __xr_tmp);
