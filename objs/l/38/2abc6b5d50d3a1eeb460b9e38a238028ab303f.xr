var __xr_tmp = [
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#netif_msg_init\">netif_msg_init</a>(int <a class=\"id\" href=\"#debug_value\">debug_value</a>, int <a class=\"id\" href=\"#default_msg_enable_bits\">default_msg_enable_bits</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* use default */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_value\">debug_value</a> &lt; 0 || <a class=\"id\" href=\"#debug_value\">debug_value</a> >= (sizeof(<a class=\"id\" href=\"#u32\">u32</a>) * 8))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#default_msg_enable_bits\">default_msg_enable_bits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#debug_value\">debug_value</a> == 0)<span class=\"ts\"/><span class=\"comment\">/* no output */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"comment\">/* set low N bits */</span>", 
"<span class=\"ts\"/>return (1 << <a class=\"id\" href=\"#debug_value\">debug_value</a>) - 1;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__netif_tx_lock\">__netif_tx_lock</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>, int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#_xmit_lock\">_xmit_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#xmit_lock_owner\">xmit_lock_owner</a> = <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__netif_tx_lock_bh\">__netif_tx_lock_bh</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#_xmit_lock\">_xmit_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#xmit_lock_owner\">xmit_lock_owner</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#__netif_tx_trylock\">__netif_tx_trylock</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ok\">ok</a> = <a class=\"id\" href=\"#spin_trylock\">spin_trylock</a>(&amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#_xmit_lock\">_xmit_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#ok\">ok</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#xmit_lock_owner\">xmit_lock_owner</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ok\">ok</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__netif_tx_unlock\">__netif_tx_unlock</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#xmit_lock_owner\">xmit_lock_owner</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#_xmit_lock\">_xmit_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__netif_tx_unlock_bh\">__netif_tx_unlock_bh</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#xmit_lock_owner\">xmit_lock_owner</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#_xmit_lock\">_xmit_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#txq_trans_update\">txq_trans_update</a>(struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#xmit_lock_owner\">xmit_lock_owner</a> != -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#trans_start\">trans_start</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>netif_tx_lock - grab network device transmit lock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@dev: network device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Get network device transmit lock</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_tx_lock\">netif_tx_lock</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_global_lock\">tx_global_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num_tx_queues\">num_tx_queues</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We are the only thread of execution doing a</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * freeze, but we have to grab the _xmit_lock in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * order to synchronize with threads which are in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the -&gt;hard_start_xmit() handler and already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * checked the frozen bit.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__netif_tx_lock\">__netif_tx_lock</a>(<a class=\"id\" href=\"#txq\">txq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#__QUEUE_STATE_FROZEN\">__QUEUE_STATE_FROZEN</a>, &amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__netif_tx_unlock\">__netif_tx_unlock</a>(<a class=\"id\" href=\"#txq\">txq</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_tx_lock_bh\">netif_tx_lock_bh</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_disable\">local_bh_disable</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_lock\">netif_tx_lock</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_tx_unlock\">netif_tx_unlock</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#num_tx_queues\">num_tx_queues</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#netdev_queue\">netdev_queue</a> *<a class=\"id\" href=\"#txq\">txq</a> = <a class=\"id\" href=\"#netdev_get_tx_queue\">netdev_get_tx_queue</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No need to grab the _xmit_lock here.  If the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * queue is not stopped for another reason, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * force a schedule.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#__QUEUE_STATE_FROZEN\">__QUEUE_STATE_FROZEN</a>, &amp;<a class=\"id\" href=\"#txq\">txq</a>-><a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#netif_schedule_queue\">netif_schedule_queue</a>(<a class=\"id\" href=\"#txq\">txq</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#tx_global_lock\">tx_global_lock</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#netif_tx_unlock_bh\">netif_tx_unlock_bh</a>(struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#netif_tx_unlock\">netif_tx_unlock</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#local_bh_enable\">local_bh_enable</a>();", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HARD_TX_LOCK\">HARD_TX_LOCK</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#txq\">txq</a>, <a class=\"id\" href=\"#cpu\">cpu</a>) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#features\">features</a> &amp; <a class=\"id\" href=\"#NETIF_F_LLTX\">NETIF_F_LLTX</a>) == 0) {<span class=\"ts\"/>\\", 
];
xr_frag_insert('l/38/2abc6b5d50d3a1eeb460b9e38a238028ab303f.xr', __xr_tmp);
