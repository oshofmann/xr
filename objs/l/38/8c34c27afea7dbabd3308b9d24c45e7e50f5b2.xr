var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  Copyright (C) 2006 IBM Corporation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Author: Serge Hallyn &lt;serue@us.ibm.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *  modify it under the terms of the GNU General Public License as</span>", 
"<span class=\"comment\"> *  published by the Free Software Foundation, version 2 of the</span>", 
"<span class=\"comment\"> *  License.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Jun 2006 - namespaces support</span>", 
"<span class=\"comment\"> *             OpenVZ, SWsoft Inc.</span>", 
"<span class=\"comment\"> *             Pavel Emelianov &lt;xemul@openvz.org&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nsproxy\">nsproxy</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init_task\">init_task</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mnt_namespace\">mnt_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#utsname\">utsname</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pid_namespace\">pid_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipc_namespace\">ipc_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a> *<a class=\"id\" href=\"#nsproxy_cachep\">nsproxy_cachep</a>;", 
"", 
"struct <a class=\"id\" href=\"#nsproxy\">nsproxy</a> <a class=\"id\" href=\"#init_nsproxy\">init_nsproxy</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#count\">count</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(1),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#uts_ns\">uts_ns</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#init_uts_ns\">init_uts_ns</a>,", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_POSIX_MQUEUE\">CONFIG_POSIX_MQUEUE</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SYSVIPC\">CONFIG_SYSVIPC</a>)", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#ipc_ns\">ipc_ns</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#init_ipc_ns\">init_ipc_ns</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#mnt_ns\">mnt_ns</a><span class=\"ts\"/>= <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#pid_ns\">pid_ns</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#init_pid_ns\">init_pid_ns</a>,", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET\">CONFIG_NET</a>", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#net_ns\">net_ns</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#init_net\">init_net</a>,", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#nsproxy\">nsproxy</a> *<a class=\"id\" href=\"#create_nsproxy\">create_nsproxy</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nsproxy\">nsproxy</a> *<a class=\"id\" href=\"#nsproxy\">nsproxy</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nsproxy\">nsproxy</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#nsproxy_cachep\">nsproxy_cachep</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nsproxy\">nsproxy</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#count\">count</a>, 1);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nsproxy\">nsproxy</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create new nsproxy and all of its the associated namespaces.</span>", 
"<span class=\"comment\"> * Return the newly created nsproxy.  Do not attach this to the task,</span>", 
"<span class=\"comment\"> * leave it to the caller to do proper locking and attach it to task.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#nsproxy\">nsproxy</a> *<a class=\"id\" href=\"#create_new_namespaces\">create_new_namespaces</a>(unsigned long <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>, struct <a class=\"id\" href=\"#fs_struct\">fs_struct</a> *<a class=\"id\" href=\"#new_fs\">new_fs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nsproxy\">nsproxy</a> *<a class=\"id\" href=\"#new_nsp\">new_nsp</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_nsp\">new_nsp</a> = <a class=\"id\" href=\"#create_nsproxy\">create_nsproxy</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_nsp\">new_nsp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#mnt_ns\">mnt_ns</a> = <a class=\"id\" href=\"#copy_mnt_ns\">copy_mnt_ns</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#mnt_ns\">mnt_ns</a>, <a class=\"id\" href=\"#new_fs\">new_fs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#mnt_ns\">mnt_ns</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#mnt_ns\">mnt_ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_ns\">out_ns</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#uts_ns\">uts_ns</a> = <a class=\"id\" href=\"#copy_utsname\">copy_utsname</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#uts_ns\">uts_ns</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#uts_ns\">uts_ns</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#uts_ns\">uts_ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_uts\">out_uts</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#ipc_ns\">ipc_ns</a> = <a class=\"id\" href=\"#copy_ipcs\">copy_ipcs</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#tsk\">tsk</a>-><a class=\"id\" href=\"#nsproxy\">nsproxy</a>-><a class=\"id\" href=\"#ipc_ns\">ipc_ns</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#ipc_ns\">ipc_ns</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#ipc_ns\">ipc_ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_ipc\">out_ipc</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#pid_ns\">pid_ns</a> = <a class=\"id\" href=\"#copy_pid_ns\">copy_pid_ns</a>(<a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#task_active_pid_ns\">task_active_pid_ns</a>(<a class=\"id\" href=\"#tsk\">tsk</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#pid_ns\">pid_ns</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#new_nsp\">new_nsp</a>-><a class=\"id\" href=\"#pid_ns\">pid_ns</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_pid\">out_pid</a>;", 
"<span class=\"ts\"/>}", 
"", 
];
xr_frag_insert('l/38/8c34c27afea7dbabd3308b9d24c45e7e50f5b2.xr', __xr_tmp);
