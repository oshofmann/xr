var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Compress: Compression algorithms under the cryptographic API.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2008 Sony Corporation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; version 2 of the License.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program.</span>", 
"<span class=\"comment\"> * If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_CRYPTO_COMPRESS_H\">_CRYPTO_COMPRESS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_CRYPTO_COMPRESS_H\">_CRYPTO_COMPRESS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#crypto\">crypto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"", 
"struct <a class=\"id\" href=\"#comp_request\">comp_request</a> {", 
"<span class=\"ts\"/>const void *<a class=\"id\" href=\"#next_in\">next_in</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* next input byte */</span>", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#next_out\">next_out</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* next output byte */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#avail_in\">avail_in</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes available at next_in */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#avail_out\">avail_out</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bytes available at next_out */</span>", 
"};", 
"", 
"enum <a class=\"id\" href=\"#zlib_comp_params\">zlib_comp_params</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZLIB_COMP_LEVEL\">ZLIB_COMP_LEVEL</a> = 1,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* e.g. Z_DEFAULT_COMPRESSION */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZLIB_COMP_METHOD\">ZLIB_COMP_METHOD</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* e.g. Z_DEFLATED */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZLIB_COMP_WINDOWBITS\">ZLIB_COMP_WINDOWBITS</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* e.g. MAX_WBITS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZLIB_COMP_MEMLEVEL\">ZLIB_COMP_MEMLEVEL</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* e.g. DEF_MEM_LEVEL */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZLIB_COMP_STRATEGY\">ZLIB_COMP_STRATEGY</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* e.g. Z_DEFAULT_STRATEGY */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ZLIB_COMP_MAX\">__ZLIB_COMP_MAX</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ZLIB_COMP_MAX\">ZLIB_COMP_MAX</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__ZLIB_COMP_MAX\">__ZLIB_COMP_MAX</a> - 1)", 
"", 
"", 
"enum <a class=\"id\" href=\"#zlib_decomp_params\">zlib_decomp_params</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ZLIB_DECOMP_WINDOWBITS\">ZLIB_DECOMP_WINDOWBITS</a> = 1,<span class=\"ts\"/><span class=\"comment\">/* e.g. DEF_WBITS */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__ZLIB_DECOMP_MAX\">__ZLIB_DECOMP_MAX</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ZLIB_DECOMP_MAX\">ZLIB_DECOMP_MAX</a><span class=\"ts\"/>(<a class=\"id\" href=\"#__ZLIB_DECOMP_MAX\">__ZLIB_DECOMP_MAX</a> - 1)", 
"", 
"", 
"struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#pcomp_alg\">pcomp_alg</a> {", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#compress_setup\">compress_setup</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, void *<a class=\"id\" href=\"#params\">params</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#compress_init\">compress_init</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#compress_update\">compress_update</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#compress_final\">compress_final</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decompress_setup\">decompress_setup</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>, void *<a class=\"id\" href=\"#params\">params</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decompress_init\">decompress_init</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decompress_update\">decompress_update</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#decompress_final\">decompress_final</a>)(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> <a class=\"id\" href=\"#base\">base</a>;", 
"};", 
"", 
"extern struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#crypto_alloc_pcomp\">crypto_alloc_pcomp</a>(const char *<a class=\"id\" href=\"#alg_name\">alg_name</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#crypto_tfm\">crypto_tfm</a> *<a class=\"id\" href=\"#crypto_pcomp_tfm\">crypto_pcomp_tfm</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#tfm\">tfm</a>-><a class=\"id\" href=\"#base\">base</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#crypto_free_pcomp\">crypto_free_pcomp</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#crypto_destroy_tfm\">crypto_destroy_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#crypto_pcomp_tfm\">crypto_pcomp_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#pcomp_alg\">pcomp_alg</a> *<a class=\"id\" href=\"#__crypto_pcomp_alg\">__crypto_pcomp_alg</a>(struct <a class=\"id\" href=\"#crypto_alg\">crypto_alg</a> *<a class=\"id\" href=\"#alg\">alg</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#alg\">alg</a>, struct <a class=\"id\" href=\"#pcomp_alg\">pcomp_alg</a>, <a class=\"id\" href=\"#base\">base</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#pcomp_alg\">pcomp_alg</a> *<a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__crypto_pcomp_alg\">__crypto_pcomp_alg</a>(<a class=\"id\" href=\"#crypto_pcomp_tfm\">crypto_pcomp_tfm</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#__crt_alg\">__crt_alg</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_compress_setup\">crypto_compress_setup</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#params\">params</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#compress_setup\">compress_setup</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#params\">params</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_compress_init\">crypto_compress_init</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#compress_init\">compress_init</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_compress_update\">crypto_compress_update</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#compress_update\">compress_update</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_compress_final\">crypto_compress_final</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#compress_final\">compress_final</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_decompress_setup\">crypto_decompress_setup</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  void *<a class=\"id\" href=\"#params\">params</a>, unsigned int <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#decompress_setup\">decompress_setup</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#params\">params</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_decompress_init\">crypto_decompress_init</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#decompress_init\">decompress_init</a>(<a class=\"id\" href=\"#tfm\">tfm</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_decompress_update\">crypto_decompress_update</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#decompress_update\">decompress_update</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#crypto_decompress_final\">crypto_decompress_final</a>(struct <a class=\"id\" href=\"#crypto_pcomp\">crypto_pcomp</a> *<a class=\"id\" href=\"#tfm\">tfm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#comp_request\">comp_request</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#crypto_pcomp_alg\">crypto_pcomp_alg</a>(<a class=\"id\" href=\"#tfm\">tfm</a>)-><a class=\"id\" href=\"#decompress_final\">decompress_final</a>(<a class=\"id\" href=\"#tfm\">tfm</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _CRYPTO_COMPRESS_H */</span>", 
];
xr_frag_insert('l/38/b5c74fdafc634b0efb16ad5dc3bbc90d4140f6.xr', __xr_tmp);
