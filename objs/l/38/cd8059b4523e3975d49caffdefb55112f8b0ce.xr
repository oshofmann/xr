var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NET<span class=\"ts\"/><span class=\"ts\"/>Generic infrastructure for Network protocols.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Arnaldo Carvalho de Melo &lt;acme@conectiva.com.br&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>From code originally in include/net/tcp.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#request_sock\">request_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximum number of SYN_RECV sockets in queue per LISTEN socket.</span>", 
"<span class=\"comment\"> * One SYN_RECV socket costs about 80bytes on a 32bit machine.</span>", 
"<span class=\"comment\"> * It would be better to replace it with a global counter for all sockets</span>", 
"<span class=\"comment\"> * but then some measure against one socket starving all other sockets</span>", 
"<span class=\"comment\"> * would be needed.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It was 128 by default. Experiments with real servers show, that</span>", 
"<span class=\"comment\"> * it is absolutely not enough even at 100conn/sec. 256 cures most</span>", 
"<span class=\"comment\"> * of problems. This value is adjusted to 128 for very small machines</span>", 
"<span class=\"comment\"> * (&lt;=32Mb of memory) and to 1024 on normal or better ones (&gt;=256Mb).</span>", 
"<span class=\"comment\"> * Note : Dont forget somaxconn that may limit backlog too.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#sysctl_max_syn_backlog\">sysctl_max_syn_backlog</a> = 256;", 
"", 
"int <a class=\"id\" href=\"#reqsk_queue_alloc\">reqsk_queue_alloc</a>(struct <a class=\"id\" href=\"#request_sock_queue\">request_sock_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned int <a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#lopt_size\">lopt_size</a> = sizeof(struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#lopt\">lopt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> = <a class=\"id\" href=\"#min_t\">min_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>, <a class=\"id\" href=\"#sysctl_max_syn_backlog\">sysctl_max_syn_backlog</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> = <a class=\"id\" href=\"#max_t\">max_t</a>(<a class=\"id\" href=\"#u32\">u32</a>, <a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>, 8);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> = <a class=\"id\" href=\"#roundup_pow_of_two\">roundup_pow_of_two</a>(<a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> + 1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lopt_size\">lopt_size</a> += <a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> * sizeof(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt_size\">lopt_size</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#__vmalloc\">__vmalloc</a>(<a class=\"id\" href=\"#lopt_size\">lopt_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_HIGHMEM\">__GFP_HIGHMEM</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PAGE_KERNEL\">PAGE_KERNEL</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#lopt_size\">lopt_size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt\">lopt</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#max_qlen_log\">max_qlen_log</a> = 3;", 
"<span class=\"ts\"/>     (1 << <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#max_qlen_log\">max_qlen_log</a>) &lt; <a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>;", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#max_qlen_log\">max_qlen_log</a>++);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>, sizeof(<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_init\">rwlock_init</a>(&amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#rskq_accept_head\">rskq_accept_head</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> = <a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#listen_opt\">listen_opt</a> = <a class=\"id\" href=\"#lopt\">lopt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__reqsk_queue_destroy\">__reqsk_queue_destroy</a>(struct <a class=\"id\" href=\"#request_sock_queue\">request_sock_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#lopt\">lopt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#lopt_size\">lopt_size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this is an error recovery path only</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * no locking needed and the lopt is not NULL</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#listen_opt\">listen_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lopt_size\">lopt_size</a> = sizeof(struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> * sizeof(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt_size\">lopt_size</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#lopt\">lopt</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#lopt\">lopt</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#reqsk_queue_yank_listen_sk\">reqsk_queue_yank_listen_sk</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock_queue\">request_sock_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#lopt\">lopt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_lock_bh\">write_lock_bh</a>(&amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#listen_opt\">listen_opt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#listen_opt\">listen_opt</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#write_unlock_bh\">write_unlock_bh</a>(&amp;<a class=\"id\" href=\"#queue\">queue</a>-><a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#lopt\">lopt</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#reqsk_queue_destroy\">reqsk_queue_destroy</a>(struct <a class=\"id\" href=\"#request_sock_queue\">request_sock_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* make all the listen_opt local to us */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> *<a class=\"id\" href=\"#lopt\">lopt</a> = <a class=\"id\" href=\"#reqsk_queue_yank_listen_sk\">reqsk_queue_yank_listen_sk</a>(<a class=\"id\" href=\"#queue\">queue</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#lopt_size\">lopt_size</a> = sizeof(struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a> * sizeof(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen\">qlen</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#syn_table\">syn_table</a>[<a class=\"id\" href=\"#i\">i</a>]) != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#syn_table\">syn_table</a>[<a class=\"id\" href=\"#i\">i</a>] = <a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#dl_next\">dl_next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen\">qlen</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reqsk_free\">reqsk_free</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#lopt\">lopt</a>-><a class=\"id\" href=\"#qlen\">qlen</a> != 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lopt_size\">lopt_size</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#lopt\">lopt</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#lopt\">lopt</a>);", 
"}", 
"", 
];
xr_frag_insert('l/38/cd8059b4523e3975d49caffdefb55112f8b0ce.xr', __xr_tmp);
