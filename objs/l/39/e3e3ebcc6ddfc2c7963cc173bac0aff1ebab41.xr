var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/arch/x86_64/mm/init.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 1995  Linus Torvalds</span>", 
"<span class=\"comment\"> *  Copyright (C) 2000  Pavel Machek &lt;pavel@ucw.cz&gt;</span>", 
"<span class=\"comment\"> *  Copyright (C) 2002,2003 Andi Kleen &lt;ak@suse.de&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#signal\">signal</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ptrace\">ptrace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mman\">mman</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#swap\">swap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#initrd\">initrd</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pagemap\">pagemap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pfn\">pfn</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poison\">poison</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dma\">dma</a>-<a class=\"id\" href=\"#mapping\">mapping</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#memory_hotplug\">memory_hotplug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#nmi\">nmi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#bios_ebda\">bios_ebda</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgtable\">pgtable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pgalloc\">pgalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#fixmap\">fixmap</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#e820\">e820</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#tlb\">tlb</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mmu_context\">mmu_context</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#proto\">proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#sections\">sections</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#kdebug\">kdebug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#numa\">numa</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#cacheflush\">cacheflush</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bootmem\">bootmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static unsigned long <a class=\"id\" href=\"#dma_reserve\">dma_reserve</a> <a class=\"id\" href=\"#__initdata\">__initdata</a>;", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_direct_gbpages_off\">parse_direct_gbpages_off</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#direct_gbpages\">direct_gbpages</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"nogbpages\", <a class=\"id\" href=\"#parse_direct_gbpages_off\">parse_direct_gbpages_off</a>);", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#parse_direct_gbpages_on\">parse_direct_gbpages_on</a>(char *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#direct_gbpages\">direct_gbpages</a> = 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#early_param\">early_param</a>(\"gbpages\", <a class=\"id\" href=\"#parse_direct_gbpages_on\">parse_direct_gbpages_on</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NOTE: pagetable_init alloc all the fixmap pagetables contiguous on the</span>", 
"<span class=\"comment\"> * physical space so we can cache the place of the first one and move</span>", 
"<span class=\"comment\"> * around without checking the pgd every time.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#pteval_t\">pteval_t</a> <a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = ~<a class=\"id\" href=\"#_PAGE_IOMAP\">_PAGE_IOMAP</a>;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__supported_pte_mask\">__supported_pte_mask</a>);", 
"", 
"int <a class=\"id\" href=\"#force_personality32\">force_personality32</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * noexec32=on|off</span>", 
"<span class=\"comment\"> * Control non executable heap for 32bit processes.</span>", 
"<span class=\"comment\"> * To control the stack too use noexec=off</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * on<span class=\"ts\"/>PROT_READ does not imply PROT_EXEC for 32-bit processes (default)</span>", 
"<span class=\"comment\"> * off<span class=\"ts\"/>PROT_READ implies PROT_EXEC</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#nonx32_setup\">nonx32_setup</a>(char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"on\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#force_personality32\">force_personality32</a> &= ~<a class=\"id\" href=\"#READ_IMPLIES_EXEC\">READ_IMPLIES_EXEC</a>;", 
"<span class=\"ts\"/>else if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"off\"))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#force_personality32\">force_personality32</a> |= <a class=\"id\" href=\"#READ_IMPLIES_EXEC\">READ_IMPLIES_EXEC</a>;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"noexec32=\", <a class=\"id\" href=\"#nonx32_setup\">nonx32_setup</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NOTE: This function is marked __ref because it calls __init function</span>", 
"<span class=\"comment\"> * (alloc_bootmem_pages). It's safe to do it ONLY when after_bootmem == 0.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#__ref\">__ref</a> void *<a class=\"id\" href=\"#spp_getpage\">spp_getpage</a>(void)", 
"{", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = (void *) <a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_NOTRACK\">__GFP_NOTRACK</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ptr\">ptr</a> = <a class=\"id\" href=\"#alloc_bootmem_pages\">alloc_bootmem_pages</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptr\">ptr</a> || ((unsigned long)<a class=\"id\" href=\"#ptr\">ptr</a> &amp; ~<a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"set_pte_phys: cannot allocate page data %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#after_bootmem\">after_bootmem</a> ? \"after bootmem\" : \"\");", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"spp_getpage %p\\n\", <a class=\"id\" href=\"#ptr\">ptr</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ptr\">ptr</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#fill_pud\">fill_pud</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>, unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_none\">pgd_none</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a> = (<a class=\"id\" href=\"#pud_t\">pud_t</a> *)<a class=\"id\" href=\"#spp_getpage\">spp_getpage</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd_populate\">pgd_populate</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#pud\">pud</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud\">pud</a> != <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PAGETABLE BUG #00! %p <-> %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, 0));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#fill_pmd\">fill_pmd</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>, unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none\">pud_none</a>(*<a class=\"id\" href=\"#pud\">pud</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a> = (<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *) <a class=\"id\" href=\"#spp_getpage\">spp_getpage</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_populate\">pud_populate</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#pmd\">pmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd\">pmd</a> != <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PAGETABLE BUG #01! %p <-> %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, 0));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#fill_pte\">fill_pte</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_none\">pmd_none</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a> = (<a class=\"id\" href=\"#pte_t\">pte_t</a> *) <a class=\"id\" href=\"#spp_getpage\">spp_getpage</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_populate_kernel\">pmd_populate_kernel</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte\">pte</a> != <a class=\"id\" href=\"#pte_offset_kernel\">pte_offset_kernel</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"PAGETABLE BUG #02!\\n\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pte_offset_kernel\">pte_offset_kernel</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#set_pte_vaddr_pud\">set_pte_vaddr_pud</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud_page\">pud_page</a>, unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#new_pte\">new_pte</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_page\">pud_page</a> + <a class=\"id\" href=\"#pud_index\">pud_index</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#fill_pmd\">fill_pmd</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#fill_pte\">fill_pte</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pte\">set_pte</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#new_pte\">new_pte</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It's enough to flush this one mapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (PGE mappings get flushed as well)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_one\">__flush_tlb_one</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#set_pte_vaddr\">set_pte_vaddr</a>(unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#pteval\">pteval</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud_page\">pud_page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"set_pte_vaddr %lx to %lx\\n\", <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#native_pte_val\">native_pte_val</a>(<a class=\"id\" href=\"#pteval\">pteval</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_none\">pgd_none</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PGD FIXMAP MISSING, it should be setup in head.S!\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_page\">pud_page</a> = (<a class=\"id\" href=\"#pud_t\">pud_t</a>*)<a class=\"id\" href=\"#pgd_page_vaddr\">pgd_page_vaddr</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pte_vaddr_pud\">set_pte_vaddr_pud</a>(<a class=\"id\" href=\"#pud_page\">pud_page</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>, <a class=\"id\" href=\"#pteval\">pteval</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#pmd_t\">pmd_t</a> * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#populate_extra_pmd\">populate_extra_pmd</a>(unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#fill_pud\">fill_pud</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fill_pmd\">fill_pmd</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#pte_t\">pte_t</a> * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#populate_extra_pte\">populate_extra_pte</a>(unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#populate_extra_pmd\">populate_extra_pmd</a>(<a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#fill_pte\">fill_pte</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#vaddr\">vaddr</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Create large page table mappings for a range of physical addresses.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#__init_extra_mapping\">__init_extra_mapping</a>(unsigned long <a class=\"id\" href=\"#phys\">phys</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>((<a class=\"id\" href=\"#phys\">phys</a> &amp; ~<a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>) || (<a class=\"id\" href=\"#size\">size</a> &amp; ~<a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>));", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#size\">size</a>; <a class=\"id\" href=\"#phys\">phys</a> += <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>, <a class=\"id\" href=\"#size\">size</a> -= <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>((unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#phys\">phys</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_none\">pgd_none</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = (<a class=\"id\" href=\"#pud_t\">pud_t</a> *) <a class=\"id\" href=\"#spp_getpage\">spp_getpage</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pgd\">set_pgd</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#__pgd\">__pgd</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pud\">pud</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_PAGE_USER\">_PAGE_USER</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#phys\">phys</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none\">pud_none</a>(*<a class=\"id\" href=\"#pud\">pud</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = (<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *) <a class=\"id\" href=\"#spp_getpage\">spp_getpage</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pud\">set_pud</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#__pud\">__pud</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#pmd\">pmd</a>) | <a class=\"id\" href=\"#_KERNPG_TABLE\">_KERNPG_TABLE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#_PAGE_USER\">_PAGE_USER</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#phys\">phys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#pmd_none\">pmd_none</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#__pmd\">__pmd</a>(<a class=\"id\" href=\"#phys\">phys</a> | <a class=\"id\" href=\"#pgprot_val\">pgprot_val</a>(<a class=\"id\" href=\"#prot\">prot</a>)));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_extra_mapping_wb\">init_extra_mapping_wb</a>(unsigned long <a class=\"id\" href=\"#phys\">phys</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__init_extra_mapping\">__init_extra_mapping</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#PAGE_KERNEL_LARGE\">PAGE_KERNEL_LARGE</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_extra_mapping_uc\">init_extra_mapping_uc</a>(unsigned long <a class=\"id\" href=\"#phys\">phys</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__init_extra_mapping\">__init_extra_mapping</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#PAGE_KERNEL_LARGE_NOCACHE\">PAGE_KERNEL_LARGE_NOCACHE</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The head.S code sets up the kernel high mapping:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   from __START_KERNEL_map to __START_KERNEL_map + size (== _end-_text)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * phys_addr holds the negative offset to the kernel, which is added</span>", 
"<span class=\"comment\"> * to the compile time generated pmds. This results in invalid pmds up</span>", 
"<span class=\"comment\"> * to the point where we hit the physaddr 0 mapping.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We limit the mappings to the region from _text to _end.  _end is</span>", 
"<span class=\"comment\"> * rounded up to the 2MB boundary. This catches the invalid pmds as</span>", 
"<span class=\"comment\"> * well, as they are located before _text:</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#cleanup_highmap\">cleanup_highmap</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#vaddr\">vaddr</a> = <a class=\"id\" href=\"#__START_KERNEL_map\">__START_KERNEL_map</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#roundup\">roundup</a>((unsigned long)<a class=\"id\" href=\"#_end\">_end</a>, <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#level2_kernel_pgt\">level2_kernel_pgt</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#last_pmd\">last_pmd</a> = <a class=\"id\" href=\"#pmd\">pmd</a> + <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#pmd\">pmd</a> &lt; <a class=\"id\" href=\"#last_pmd\">last_pmd</a>; <a class=\"id\" href=\"#pmd\">pmd</a>++, <a class=\"id\" href=\"#vaddr\">vaddr</a> += <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_none\">pmd_none</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vaddr\">vaddr</a> &lt; (unsigned long) <a class=\"id\" href=\"#_text\">_text</a> || <a class=\"id\" href=\"#vaddr\">vaddr</a> &gt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#__pmd\">__pmd</a>(0));", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#__ref\">__ref</a> void *<a class=\"id\" href=\"#alloc_low_page\">alloc_low_page</a>(unsigned long *<a class=\"id\" href=\"#phys\">phys</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#e820_table_end\">e820_table_end</a>++;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#adr\">adr</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adr\">adr</a> = (void *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a> | <a class=\"id\" href=\"#__GFP_NOTRACK\">__GFP_NOTRACK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a> = <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#adr\">adr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#adr\">adr</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn\">pfn</a> >= <a class=\"id\" href=\"#e820_table_top\">e820_table_top</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"alloc_low_page: ran out of memory\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#adr\">adr</a> = <a class=\"id\" href=\"#early_memremap\">early_memremap</a>(<a class=\"id\" href=\"#pfn\">pfn</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#adr\">adr</a>, 0, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#phys\">phys</a>  = <a class=\"id\" href=\"#pfn\">pfn</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#adr\">adr</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__ref\">__ref</a> void <a class=\"id\" href=\"#unmap_low_page\">unmap_low_page</a>(void *<a class=\"id\" href=\"#adr\">adr</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#early_iounmap\">early_iounmap</a>(<a class=\"id\" href=\"#adr\">adr</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#phys_pte_init\">phys_pte_init</a>(<a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte_page\">pte_page</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/>      <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#pages\">pages</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_page\">pte_page</a> + <a class=\"id\" href=\"#pte_index\">pte_index</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/>for(<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#pte_index\">pte_index</a>(<a class=\"id\" href=\"#addr\">addr</a>); <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#addr\">addr</a> += <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#pte\">pte</a>++) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for(; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PTE\">PTRS_PER_PTE</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#pte\">pte</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte\">set_pte</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#__pte\">__pte</a>(0));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We will re-use the existing mapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Xen for example has some special requirements, like mapping</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pagetable pages as RO. So assume someone who pre-setup</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * these mappings are more intelligent.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_val\">pte_val</a>(*<a class=\"id\" href=\"#pte\">pte</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"   pte=%p addr=%lx pte=%016lx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#addr\">addr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#PAGE_KERNEL\">PAGE_KERNEL</a>).<a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte\">set_pte</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#addr\">addr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#prot\">prot</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = (<a class=\"id\" href=\"#addr\">addr</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>) + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_page_count\">update_page_count</a>(<a class=\"id\" href=\"#PG_LEVEL_4K\">PG_LEVEL_4K</a>, <a class=\"id\" href=\"#pages\">pages</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a>;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#phys_pte_update\">phys_pte_update</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a> = (<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pmd_page_vaddr\">pmd_page_vaddr</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#phys_pte_init\">phys_pte_init</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#phys_pmd_init\">phys_pmd_init</a>(<a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd_page\">pmd_page</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pages\">pages</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#pmd_index\">pmd_index</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#address\">address</a> += <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pte_phys\">pte_phys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_page\">pmd_page</a> + <a class=\"id\" href=\"#pmd_index\">pmd_index</a>(<a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#new_prot\">new_prot</a> = <a class=\"id\" href=\"#prot\">prot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#address\">address</a> >= <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PMD\">PTRS_PER_PMD</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#pmd\">pmd</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#__pmd\">__pmd</a>(0));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_val\">pmd_val</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd_large\">pmd_large</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#phys_pte_update\">phys_pte_update</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#address\">address</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we are ok with PG_LEVEL_2M mapping, then we will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * use the existing mapping,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, we will split the large page mapping but</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * use the same existing protection bits except for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * large page, so that we don't violate Intel's TLB</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Application note (317080) which says, while changing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the page sizes, new and old translations should</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * not differ with respect to page frame and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * attributes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1 << <a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_prot\">new_prot</a> = <a class=\"id\" href=\"#pte_pgprot\">pte_pgprot</a>(<a class=\"id\" href=\"#pte_clrhuge\">pte_clrhuge</a>(*(<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pmd\">pmd</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1<<<a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte\">set_pte</a>((<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pmd\">pmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#address\">address</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pgprot\">__pgprot</a>(<a class=\"id\" href=\"#pgprot_val\">pgprot_val</a>(<a class=\"id\" href=\"#prot\">prot</a>) | <a class=\"id\" href=\"#_PAGE_PSE\">_PAGE_PSE</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = (<a class=\"id\" href=\"#address\">address</a> &amp; <a class=\"id\" href=\"#PMD_MASK\">PMD_MASK</a>) + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#alloc_low_page\">alloc_low_page</a>(&amp;<a class=\"id\" href=\"#pte_phys\">pte_phys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#phys_pte_init\">phys_pte_init</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#new_prot\">new_prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmap_low_page\">unmap_low_page</a>(<a class=\"id\" href=\"#pte\">pte</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_populate_kernel\">pmd_populate_kernel</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#pte_phys\">pte_phys</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_page_count\">update_page_count</a>(<a class=\"id\" href=\"#PG_LEVEL_2M\">PG_LEVEL_2M</a>, <a class=\"id\" href=\"#pages\">pages</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a>;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#phys_pmd_update\">phys_pmd_update</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>, <a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, 0);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#phys_pmd_init\">phys_pmd_init</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a>;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#phys_pud_init\">phys_pud_init</a>(<a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud_page\">pud_page</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pages\">pages</a> = 0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#pud_index\">pud_index</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PTRS_PER_PUD\">PTRS_PER_PUD</a>; <a class=\"id\" href=\"#i\">i</a>++, <a class=\"id\" href=\"#addr\">addr</a> = (<a class=\"id\" href=\"#addr\">addr</a> &amp; <a class=\"id\" href=\"#PUD_MASK\">PUD_MASK</a>) + <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pmd_phys\">pmd_phys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_page\">pud_page</a> + <a class=\"id\" href=\"#pud_index\">pud_index</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgprot_t\">pgprot_t</a> <a class=\"id\" href=\"#prot\">prot</a> = <a class=\"id\" href=\"#PAGE_KERNEL\">PAGE_KERNEL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#after_bootmem\">after_bootmem</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#e820_any_mapped\">e820_any_mapped</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#addr\">addr</a>+<a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>, 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pud\">set_pud</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#__pud\">__pud</a>(0));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_val\">pud_val</a>(*<a class=\"id\" href=\"#pud\">pud</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pud_large\">pud_large</a>(*<a class=\"id\" href=\"#pud\">pud</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#phys_pmd_update\">phys_pmd_update</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>, <a class=\"id\" href=\"#prot\">prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * If we are ok with PG_LEVEL_1G mapping, then we will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * use the existing mapping.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Otherwise, we will split the gbpage mapping but use</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the same existing protection  bits except for large</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * page, so that we don't violate Intel's TLB</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Application note (317080) which says, while changing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the page sizes, new and old translations should</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * not differ with respect to page frame and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * attributes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1 << <a class=\"id\" href=\"#PG_LEVEL_1G\">PG_LEVEL_1G</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prot\">prot</a> = <a class=\"id\" href=\"#pte_pgprot\">pte_pgprot</a>(<a class=\"id\" href=\"#pte_clrhuge\">pte_clrhuge</a>(*(<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pud\">pud</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_size_mask\">page_size_mask</a> &amp; (1<<<a class=\"id\" href=\"#PG_LEVEL_1G\">PG_LEVEL_1G</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pages\">pages</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte\">set_pte</a>((<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pud\">pud</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#addr\">addr</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#PAGE_KERNEL_LARGE\">PAGE_KERNEL_LARGE</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = (<a class=\"id\" href=\"#addr\">addr</a> &amp; <a class=\"id\" href=\"#PUD_MASK\">PUD_MASK</a>) + <a class=\"id\" href=\"#PUD_SIZE\">PUD_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#alloc_low_page\">alloc_low_page</a>(&amp;<a class=\"id\" href=\"#pmd_phys\">pmd_phys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#phys_pmd_init\">phys_pmd_init</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#prot\">prot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmap_low_page\">unmap_low_page</a>(<a class=\"id\" href=\"#pmd\">pmd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_populate\">pud_populate</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#pmd_phys\">pmd_phys</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_page_count\">update_page_count</a>(<a class=\"id\" href=\"#PG_LEVEL_1G\">PG_LEVEL_1G</a>, <a class=\"id\" href=\"#pages\">pages</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a>;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#phys_pud_update\">phys_pud_update</a>(<a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>, unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = (<a class=\"id\" href=\"#pud_t\">pud_t</a> *)<a class=\"id\" href=\"#pgd_page_vaddr\">pgd_page_vaddr</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#phys_pud_init\">phys_pud_init</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>);", 
"}", 
"", 
"unsigned long <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#kernel_physical_mapping_init\">kernel_physical_mapping_init</a>(unsigned long <a class=\"id\" href=\"#start\">start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#end\">end</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned long <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>)", 
"{", 
"", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (unsigned long)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#start\">start</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#start\">start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pud_phys\">pud_phys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = (<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#PGDIR_SIZE\">PGDIR_SIZE</a>) &amp; <a class=\"id\" href=\"#PGDIR_MASK\">PGDIR_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a> &gt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#end\">end</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_val\">pgd_val</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#phys_pud_update\">phys_pud_update</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#start\">start</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#end\">end</a>), <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#alloc_low_page\">alloc_low_page</a>(&amp;<a class=\"id\" href=\"#pud_phys\">pud_phys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_map_addr\">last_map_addr</a> = <a class=\"id\" href=\"#phys_pud_init\">phys_pud_init</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#start\">start</a>), <a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#next\">next</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#page_size_mask\">page_size_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmap_low_page\">unmap_low_page</a>(<a class=\"id\" href=\"#pud\">pud</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd_populate\">pgd_populate</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>, <a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#pud_phys\">pud_phys</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#init_mm\">init_mm</a>.<a class=\"id\" href=\"#page_table_lock\">page_table_lock</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__flush_tlb_all\">__flush_tlb_all</a>();", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#last_map_addr\">last_map_addr</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#initmem_init\">initmem_init</a>(unsigned long <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#acpi\">acpi</a>, int <a class=\"id\" href=\"#k8\">k8</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NO_BOOTMEM\">CONFIG_NO_BOOTMEM</a>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#bootmap_size\">bootmap_size</a>, <a class=\"id\" href=\"#bootmap\">bootmap</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bootmap_size\">bootmap_size</a> = <a class=\"id\" href=\"#bootmem_bootmap_pages\">bootmem_bootmap_pages</a>(<a class=\"id\" href=\"#end_pfn\">end_pfn</a>)<<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bootmap\">bootmap</a> = <a class=\"id\" href=\"#find_e820_area\">find_e820_area</a>(0, <a class=\"id\" href=\"#end_pfn\">end_pfn</a><<<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>, <a class=\"id\" href=\"#bootmap_size\">bootmap_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bootmap\">bootmap</a> == -1L)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#panic\">panic</a>(\"Cannot find bootmem map of size %ld\\n\", <a class=\"id\" href=\"#bootmap_size\">bootmap_size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_early\">reserve_early</a>(<a class=\"id\" href=\"#bootmap\">bootmap</a>, <a class=\"id\" href=\"#bootmap\">bootmap</a> + <a class=\"id\" href=\"#bootmap_size\">bootmap_size</a>, \"BOOTMAP\");", 
"<span class=\"ts\"/><span class=\"comment\">/* don't touch min_low_pfn */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bootmap_size\">bootmap_size</a> = <a class=\"id\" href=\"#init_bootmem_node\">init_bootmem_node</a>(<a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(0), <a class=\"id\" href=\"#bootmap\">bootmap</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> 0, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_register_active_regions\">e820_register_active_regions</a>(0, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_bootmem_with_active_regions\">free_bootmem_with_active_regions</a>(0, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>);", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e820_register_active_regions\">e820_register_active_regions</a>(0, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#end_pfn\">end_pfn</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#paging_init\">paging_init</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#max_zone_pfns\">max_zone_pfns</a>[<a class=\"id\" href=\"#MAX_NR_ZONES\">MAX_NR_ZONES</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#max_zone_pfns\">max_zone_pfns</a>, 0, sizeof(<a class=\"id\" href=\"#max_zone_pfns\">max_zone_pfns</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_zone_pfns\">max_zone_pfns</a>[<a class=\"id\" href=\"#ZONE_DMA\">ZONE_DMA</a>] = <a class=\"id\" href=\"#MAX_DMA_PFN\">MAX_DMA_PFN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_zone_pfns\">max_zone_pfns</a>[<a class=\"id\" href=\"#ZONE_DMA32\">ZONE_DMA32</a>] = <a class=\"id\" href=\"#MAX_DMA32_PFN\">MAX_DMA32_PFN</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_zone_pfns\">max_zone_pfns</a>[<a class=\"id\" href=\"#ZONE_NORMAL\">ZONE_NORMAL</a>] = <a class=\"id\" href=\"#max_pfn\">max_pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sparse_memory_present_with_active_regions\">sparse_memory_present_with_active_regions</a>(<a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sparse_init\">sparse_init</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clear the default setting with node 0</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * note: don't use nodes_clear here, that is really clearing when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/> numa support is not compiled in, and later node_set_state</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/> will not set it back.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node_clear_state\">node_clear_state</a>(0, <a class=\"id\" href=\"#N_NORMAL_MEMORY\">N_NORMAL_MEMORY</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_area_init_nodes\">free_area_init_nodes</a>(<a class=\"id\" href=\"#max_zone_pfns\">max_zone_pfns</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Memory hotplug specific functions</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MEMORY_HOTPLUG\">CONFIG_MEMORY_HOTPLUG</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * After memory hotplug the variables max_pfn, max_low_pfn and high_memory need</span>", 
"<span class=\"comment\"> * updating.</span>", 
"<span class=\"comment\"> */</span>", 
"static void  <a class=\"id\" href=\"#update_end_of_memory_vars\">update_end_of_memory_vars</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end_pfn\">end_pfn</a> = <a class=\"id\" href=\"#PFN_UP\">PFN_UP</a>(<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end_pfn\">end_pfn</a> &gt; <a class=\"id\" href=\"#max_pfn\">max_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pfn\">max_pfn</a> = <a class=\"id\" href=\"#end_pfn\">end_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_low_pfn\">max_low_pfn</a> = <a class=\"id\" href=\"#end_pfn\">end_pfn</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#high_memory\">high_memory</a> = (void *)<a class=\"id\" href=\"#__va\">__va</a>(<a class=\"id\" href=\"#max_pfn\">max_pfn</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) + 1;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Memory is added always to NORMAL zone. This means you will never get</span>", 
"<span class=\"comment\"> * additional DMA/DMA32 memory.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#arch_add_memory\">arch_add_memory</a>(int <a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#size\">size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pglist_data\">pglist_data</a> *<a class=\"id\" href=\"#pgdat\">pgdat</a> = <a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#zone\">zone</a> *<a class=\"id\" href=\"#zone\">zone</a> = <a class=\"id\" href=\"#pgdat\">pgdat</a>-><a class=\"id\" href=\"#node_zones\">node_zones</a> + <a class=\"id\" href=\"#ZONE_NORMAL\">ZONE_NORMAL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#last_mapped_pfn\">last_mapped_pfn</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a> = <a class=\"id\" href=\"#start\">start</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#nr_pages\">nr_pages</a> = <a class=\"id\" href=\"#size\">size</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last_mapped_pfn\">last_mapped_pfn</a> = <a class=\"id\" href=\"#init_memory_mapping\">init_memory_mapping</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#last_mapped_pfn\">last_mapped_pfn</a> &gt; <a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a> = <a class=\"id\" href=\"#last_mapped_pfn\">last_mapped_pfn</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__add_pages\">__add_pages</a>(<a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#zone\">zone</a>, <a class=\"id\" href=\"#start_pfn\">start_pfn</a>, <a class=\"id\" href=\"#nr_pages\">nr_pages</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON_ONCE\">WARN_ON_ONCE</a>(<a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* update max_pfn, max_low_pfn and high_memory */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_end_of_memory_vars\">update_end_of_memory_vars</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#arch_add_memory\">arch_add_memory</a>);", 
"", 
"#if !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_ACPI_NUMA\">CONFIG_ACPI_NUMA</a>) && <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>)", 
"int <a class=\"id\" href=\"#memory_add_physaddr_to_nid\">memory_add_physaddr_to_nid</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#memory_add_physaddr_to_nid\">memory_add_physaddr_to_nid</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_MEMORY_HOTPLUG */</span>", 
"", 
"static struct <a class=\"id\" href=\"#kcore_list\">kcore_list</a> <a class=\"id\" href=\"#kcore_vsyscall\">kcore_vsyscall</a>;", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mem_init\">mem_init</a>(void)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#codesize\">codesize</a>, <a class=\"id\" href=\"#reservedpages\">reservedpages</a>, <a class=\"id\" href=\"#datasize\">datasize</a>, <a class=\"id\" href=\"#initsize\">initsize</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#absent_pages\">absent_pages</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_iommu_alloc\">pci_iommu_alloc</a>();", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* clear_bss() already clear the empty_zero_page */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reservedpages\">reservedpages</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* this will put all low memory onto the freelists */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> = <a class=\"id\" href=\"#numa_free_all_bootmem\">numa_free_all_bootmem</a>();", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> = <a class=\"id\" href=\"#free_all_bootmem\">free_all_bootmem</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#absent_pages\">absent_pages</a> = <a class=\"id\" href=\"#absent_pages_in_range\">absent_pages_in_range</a>(0, <a class=\"id\" href=\"#max_pfn\">max_pfn</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reservedpages\">reservedpages</a> = <a class=\"id\" href=\"#max_pfn\">max_pfn</a> - <a class=\"id\" href=\"#totalram_pages\">totalram_pages</a> - <a class=\"id\" href=\"#absent_pages\">absent_pages</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#after_bootmem\">after_bootmem</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#codesize\">codesize</a> =  (unsigned long) &amp;<a class=\"id\" href=\"#_etext\">_etext</a> - (unsigned long) &amp;<a class=\"id\" href=\"#_text\">_text</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#datasize\">datasize</a> =  (unsigned long) &amp;<a class=\"id\" href=\"#_edata\">_edata</a> - (unsigned long) &amp;<a class=\"id\" href=\"#_etext\">_etext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#initsize\">initsize</a> =  (unsigned long) &amp;<a class=\"id\" href=\"#__init_end\">__init_end</a> - (unsigned long) &amp;<a class=\"id\" href=\"#__init_begin\">__init_begin</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Register memory areas for /proc/kcore */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kclist_add\">kclist_add</a>(&amp;<a class=\"id\" href=\"#kcore_vsyscall\">kcore_vsyscall</a>, (void *)<a class=\"id\" href=\"#VSYSCALL_START\">VSYSCALL_START</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#VSYSCALL_END\">VSYSCALL_END</a> - <a class=\"id\" href=\"#VSYSCALL_START\">VSYSCALL_START</a>, <a class=\"id\" href=\"#KCORE_OTHER\">KCORE_OTHER</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Memory: %luk/%luk available (%ldk kernel code, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"%ldk absent, %ldk reserved, %ldk data, %ldk init)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_free_pages\">nr_free_pages</a>() << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_pfn\">max_pfn</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#codesize\">codesize</a> >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#absent_pages\">absent_pages</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reservedpages\">reservedpages</a> << (<a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>-10),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#datasize\">datasize</a> >> 10,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#initsize\">initsize</a> >> 10);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_DEBUG_RODATA\">CONFIG_DEBUG_RODATA</a>", 
"const int <a class=\"id\" href=\"#rodata_test_data\">rodata_test_data</a> = 0xC3;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#rodata_test_data\">rodata_test_data</a>);", 
"", 
"int <a class=\"id\" href=\"#kernel_set_to_readonly\">kernel_set_to_readonly</a>;", 
"", 
"void <a class=\"id\" href=\"#set_kernel_text_rw\">set_kernel_text_rw</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#PFN_ALIGN\">PFN_ALIGN</a>(<a class=\"id\" href=\"#_text\">_text</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#PFN_ALIGN\">PFN_ALIGN</a>(<a class=\"id\" href=\"#__stop___ex_table\">__stop___ex_table</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kernel_set_to_readonly\">kernel_set_to_readonly</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Set kernel text: %lx - %lx for read write\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Make the kernel identity mapping for text RW. Kernel text</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mapping will always be RO. Refer to the comment in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * static_protections() in pageattr.c</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_rw\">set_memory_rw</a>(<a class=\"id\" href=\"#start\">start</a>, (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#set_kernel_text_ro\">set_kernel_text_ro</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#PFN_ALIGN\">PFN_ALIGN</a>(<a class=\"id\" href=\"#_text\">_text</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#PFN_ALIGN\">PFN_ALIGN</a>(<a class=\"id\" href=\"#__stop___ex_table\">__stop___ex_table</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#kernel_set_to_readonly\">kernel_set_to_readonly</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Set kernel text: %lx - %lx for read only\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set the kernel identity mapping for text RO.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_ro\">set_memory_ro</a>(<a class=\"id\" href=\"#start\">start</a>, (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#mark_rodata_ro\">mark_rodata_ro</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#PFN_ALIGN\">PFN_ALIGN</a>(<a class=\"id\" href=\"#_text\">_text</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rodata_start\">rodata_start</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>((unsigned long)<a class=\"id\" href=\"#__start_rodata\">__start_rodata</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1) &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = (unsigned long) &amp;<a class=\"id\" href=\"#__end_rodata_hpage_align\">__end_rodata_hpage_align</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#text_end\">text_end</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>((unsigned long) &amp;<a class=\"id\" href=\"#__stop___ex_table\">__stop___ex_table</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#rodata_end\">rodata_end</a> = <a class=\"id\" href=\"#PAGE_ALIGN\">PAGE_ALIGN</a>((unsigned long) &amp;<a class=\"id\" href=\"#__end_rodata\">__end_rodata</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#data_start\">data_start</a> = (unsigned long) &amp;<a class=\"id\" href=\"#_sdata\">_sdata</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Write protecting the kernel read-only data: %luk\\n\",", 
"<span class=\"ts\"/>       (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>) >> 10);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_ro\">set_memory_ro</a>(<a class=\"id\" href=\"#start\">start</a>, (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#start\">start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kernel_set_to_readonly\">kernel_set_to_readonly</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The rodata section (but not the kernel text!) should also be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * not-executable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_nx\">set_memory_nx</a>(<a class=\"id\" href=\"#rodata_start\">rodata_start</a>, (<a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#rodata_start\">rodata_start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rodata_test\">rodata_test</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_CPA_DEBUG\">CONFIG_CPA_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Testing CPA: undo %lx-%lx\\n\", <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_rw\">set_memory_rw</a>(<a class=\"id\" href=\"#start\">start</a>, (<a class=\"id\" href=\"#end\">end</a>-<a class=\"id\" href=\"#start\">start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"Testing CPA: again\\n\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_memory_ro\">set_memory_ro</a>(<a class=\"id\" href=\"#start\">start</a>, (<a class=\"id\" href=\"#end\">end</a>-<a class=\"id\" href=\"#start\">start</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_init_pages\">free_init_pages</a>(\"unused kernel memory\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long) <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#text_end\">text_end</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#rodata_start\">rodata_start</a>)));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_init_pages\">free_init_pages</a>(\"unused kernel memory\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long) <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#rodata_end\">rodata_end</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(unsigned long) <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#data_start\">data_start</a>)));", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#reserve_bootmem_generic\">reserve_bootmem_generic</a>(unsigned long <a class=\"id\" href=\"#phys\">phys</a>, unsigned long <a class=\"id\" href=\"#len\">len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nid\">nid</a>, <a class=\"id\" href=\"#next_nid\">next_nid</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pfn\">pfn</a> = <a class=\"id\" href=\"#phys\">phys</a> >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn\">pfn</a> >= <a class=\"id\" href=\"#max_pfn\">max_pfn</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This can happen with kdump kernels when accessing</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * firmware tables:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pfn\">pfn</a> &lt; <a class=\"id\" href=\"#max_pfn_mapped\">max_pfn_mapped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"reserve_bootmem: illegal reserve %lx %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Should check here against the e820 map to avoid double free */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NUMA\">CONFIG_NUMA</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nid\">nid</a> = <a class=\"id\" href=\"#phys_to_nid\">phys_to_nid</a>(<a class=\"id\" href=\"#phys\">phys</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_nid\">next_nid</a> = <a class=\"id\" href=\"#phys_to_nid\">phys_to_nid</a>(<a class=\"id\" href=\"#phys\">phys</a> + <a class=\"id\" href=\"#len\">len</a> - 1);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nid\">nid</a> == <a class=\"id\" href=\"#next_nid\">next_nid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#reserve_bootmem_node\">reserve_bootmem_node</a>(<a class=\"id\" href=\"#NODE_DATA\">NODE_DATA</a>(<a class=\"id\" href=\"#nid\">nid</a>), <a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#reserve_bootmem\">reserve_bootmem</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#reserve_bootmem\">reserve_bootmem</a>(<a class=\"id\" href=\"#phys\">phys</a>, <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#phys\">phys</a>+<a class=\"id\" href=\"#len\">len</a> <= <a class=\"id\" href=\"#MAX_DMA_PFN\">MAX_DMA_PFN</a>*<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dma_reserve\">dma_reserve</a> += <a class=\"id\" href=\"#len\">len</a> / <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dma_reserve\">set_dma_reserve</a>(<a class=\"id\" href=\"#dma_reserve\">dma_reserve</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#kern_addr_valid\">kern_addr_valid</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#above\">above</a> = ((long)<a class=\"id\" href=\"#addr\">addr</a>) >> <a class=\"id\" href=\"#__VIRTUAL_MASK_SHIFT\">__VIRTUAL_MASK_SHIFT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> *<a class=\"id\" href=\"#pte\">pte</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#above\">above</a> != 0 && <a class=\"id\" href=\"#above\">above</a> != -1UL)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#pgd_offset_k\">pgd_offset_k</a>(<a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pgd_none\">pgd_none</a>(*<a class=\"id\" href=\"#pgd\">pgd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#pud_offset\">pud_offset</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pud_none\">pud_none</a>(*<a class=\"id\" href=\"#pud\">pud</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_none\">pmd_none</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_large\">pmd_large</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pfn_valid\">pfn_valid</a>(<a class=\"id\" href=\"#pmd_pfn\">pmd_pfn</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#pte_offset_kernel\">pte_offset_kernel</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_none\">pte_none</a>(*<a class=\"id\" href=\"#pte\">pte</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pfn_valid\">pfn_valid</a>(<a class=\"id\" href=\"#pte_pfn\">pte_pfn</a>(*<a class=\"id\" href=\"#pte\">pte</a>));", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A pseudo VMA to allow ptrace access for the vsyscall page.  This only</span>", 
"<span class=\"comment\"> * covers the 64bit vsyscall page now. 32bit has a real VMA now and does</span>", 
"<span class=\"comment\"> * not need special handling anymore:</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> <a class=\"id\" href=\"#gate_vma\">gate_vma</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vm_start\">vm_start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#VSYSCALL_START\">VSYSCALL_START</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vm_end\">vm_end</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#VSYSCALL_START\">VSYSCALL_START</a> + (<a class=\"id\" href=\"#VSYSCALL_MAPPED_PAGES\">VSYSCALL_MAPPED_PAGES</a> * <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>),", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vm_page_prot\">vm_page_prot</a><span class=\"ts\"/>= <a class=\"id\" href=\"#PAGE_READONLY_EXEC\">PAGE_READONLY_EXEC</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#vm_flags\">vm_flags</a><span class=\"ts\"/>= <a class=\"id\" href=\"#VM_READ\">VM_READ</a> | <a class=\"id\" href=\"#VM_EXEC\">VM_EXEC</a>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#get_gate_vma\">get_gate_vma</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#tsk\">tsk</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_IA32_EMULATION\">CONFIG_IA32_EMULATION</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#test_tsk_thread_flag\">test_tsk_thread_flag</a>(<a class=\"id\" href=\"#tsk\">tsk</a>, <a class=\"id\" href=\"#TIF_IA32\">TIF_IA32</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#gate_vma\">gate_vma</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#in_gate_area\">in_gate_area</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>, unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a> = <a class=\"id\" href=\"#get_gate_vma\">get_gate_vma</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vma\">vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a>) && (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_end\">vm_end</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Use this when you have no reliable task/vma, typically from interrupt</span>", 
"<span class=\"comment\"> * context. It is less reliable than using the task's vma and may give</span>", 
"<span class=\"comment\"> * false positives:</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#in_gate_area_no_task\">in_gate_area_no_task</a>(unsigned long <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#addr\">addr</a> >= <a class=\"id\" href=\"#VSYSCALL_START\">VSYSCALL_START</a>) && (<a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#VSYSCALL_END\">VSYSCALL_END</a>);", 
"}", 
"", 
"const char *<a class=\"id\" href=\"#arch_vma_name\">arch_vma_name</a>(struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a> && <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_start\">vm_start</a> == (long)<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_mm\">vm_mm</a>-><a class=\"id\" href=\"#context\">context</a>.<a class=\"id\" href=\"#vdso\">vdso</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"[vdso]\";", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a> == &amp;<a class=\"id\" href=\"#gate_vma\">gate_vma</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return \"[vsyscall]\";", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SPARSEMEM_VMEMMAP\">CONFIG_SPARSEMEM_VMEMMAP</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Initialise the sparsemem vmemmap using huge-pages at the PMD level.</span>", 
"<span class=\"comment\"> */</span>", 
"static long <a class=\"id\" href=\"#__meminitdata\">__meminitdata</a> <a class=\"id\" href=\"#addr_start\">addr_start</a>, <a class=\"id\" href=\"#addr_end\">addr_end</a>;", 
"static void <a class=\"id\" href=\"#__meminitdata\">__meminitdata</a> *<a class=\"id\" href=\"#p_start\">p_start</a>, *<a class=\"id\" href=\"#p_end\">p_end</a>;", 
"static int <a class=\"id\" href=\"#__meminitdata\">__meminitdata</a> <a class=\"id\" href=\"#node_start\">node_start</a>;", 
"", 
"int <a class=\"id\" href=\"#__meminit\">__meminit</a>", 
"<a class=\"id\" href=\"#vmemmap_populate\">vmemmap_populate</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#start_page\">start_page</a>, unsigned long <a class=\"id\" href=\"#size\">size</a>, int <a class=\"id\" href=\"#node\">node</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#addr\">addr</a> = (unsigned long)<a class=\"id\" href=\"#start_page\">start_page</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#end\">end</a> = (unsigned long)(<a class=\"id\" href=\"#start_page\">start_page</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgd_t\">pgd_t</a> *<a class=\"id\" href=\"#pgd\">pgd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pud_t\">pud_t</a> *<a class=\"id\" href=\"#pud\">pud</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pmd_t\">pmd_t</a> *<a class=\"id\" href=\"#pmd\">pmd</a>;", 
"", 
"<span class=\"ts\"/>for (; <a class=\"id\" href=\"#addr\">addr</a> &lt; <a class=\"id\" href=\"#end\">end</a>; <a class=\"id\" href=\"#addr\">addr</a> = <a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pgd\">pgd</a> = <a class=\"id\" href=\"#vmemmap_pgd_populate\">vmemmap_pgd_populate</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pgd\">pgd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pud\">pud</a> = <a class=\"id\" href=\"#vmemmap_pud_populate\">vmemmap_pud_populate</a>(<a class=\"id\" href=\"#pgd\">pgd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pud\">pud</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_pse\">cpu_has_pse</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = (<a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#vmemmap_pmd_populate\">vmemmap_pmd_populate</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pmd\">pmd</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#vmemmap_pte_populate\">vmemmap_pte_populate</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_end\">addr_end</a> = <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_end\">p_end</a> = <a class=\"id\" href=\"#p\">p</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#pmd_addr_end\">pmd_addr_end</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pmd\">pmd</a> = <a class=\"id\" href=\"#pmd_offset\">pmd_offset</a>(<a class=\"id\" href=\"#pud\">pud</a>, <a class=\"id\" href=\"#addr\">addr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pmd_none\">pmd_none</a>(*<a class=\"id\" href=\"#pmd\">pmd</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#vmemmap_alloc_block_buf\">vmemmap_alloc_block_buf</a>(<a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#pfn_pte\">pfn_pte</a>(<a class=\"id\" href=\"#__pa\">__pa</a>(<a class=\"id\" href=\"#p\">p</a>) >> <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PAGE_KERNEL_LARGE\">PAGE_KERNEL_LARGE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pmd\">set_pmd</a>(<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#__pmd\">__pmd</a>(<a class=\"id\" href=\"#pte_val\">pte_val</a>(<a class=\"id\" href=\"#entry\">entry</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* check to see if we have contiguous blocks */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p_end\">p_end</a> != <a class=\"id\" href=\"#p\">p</a> || <a class=\"id\" href=\"#node_start\">node_start</a> != <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#p_start\">p_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \" [%lx-%lx] PMD -> [%p-%p] on node %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#addr_start\">addr_start</a>, <a class=\"id\" href=\"#addr_end\">addr_end</a>-1, <a class=\"id\" href=\"#p_start\">p_start</a>, <a class=\"id\" href=\"#p_end\">p_end</a>-1, <a class=\"id\" href=\"#node_start\">node_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_start\">addr_start</a> = <a class=\"id\" href=\"#addr\">addr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_start\">node_start</a> = <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_start\">p_start</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_end\">addr_end</a> = <a class=\"id\" href=\"#addr\">addr</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_end\">p_end</a> = <a class=\"id\" href=\"#p\">p</a> + <a class=\"id\" href=\"#PMD_SIZE\">PMD_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vmemmap_verify\">vmemmap_verify</a>((<a class=\"id\" href=\"#pte_t\">pte_t</a> *)<a class=\"id\" href=\"#pmd\">pmd</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#next\">next</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__meminit\">__meminit</a> <a class=\"id\" href=\"#vmemmap_populate_print_last\">vmemmap_populate_print_last</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#p_start\">p_start</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \" [%lx-%lx] PMD -> [%p-%p] on node %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#addr_start\">addr_start</a>, <a class=\"id\" href=\"#addr_end\">addr_end</a>-1, <a class=\"id\" href=\"#p_start\">p_start</a>, <a class=\"id\" href=\"#p_end\">p_end</a>-1, <a class=\"id\" href=\"#node_start\">node_start</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_start\">p_start</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p_end\">p_end</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node_start\">node_start</a> = 0;", 
"<span class=\"ts\"/>}", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/39/e3e3ebcc6ddfc2c7963cc173bac0aff1ebab41.xr', __xr_tmp);
