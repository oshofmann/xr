var __xr_tmp = [
"int <a class=\"id\" href=\"#__pci_read_base\">__pci_read_base</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, enum <a class=\"id\" href=\"#pci_bar_type\">pci_bar_type</a> <a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>, unsigned int <a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#sz\">sz</a>, <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#orig_cmd\">orig_cmd</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#type\">type</a> ? <a class=\"id\" href=\"#PCI_ROM_ADDRESS_MASK\">PCI_ROM_ADDRESS_MASK</a> : ~0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mmio_always_on\">mmio_always_on</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, &amp;<a class=\"id\" href=\"#orig_cmd\">orig_cmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_cmd\">orig_cmd</a> &amp; ~(<a class=\"id\" href=\"#PCI_COMMAND_MEMORY\">PCI_COMMAND_MEMORY</a> | <a class=\"id\" href=\"#PCI_COMMAND_IO\">PCI_COMMAND_IO</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#pci_name\">pci_name</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#l\">l</a> | <a class=\"id\" href=\"#mask\">mask</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#sz\">sz</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#mmio_always_on\">mmio_always_on</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_COMMAND\">PCI_COMMAND</a>, <a class=\"id\" href=\"#orig_cmd\">orig_cmd</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All bits set in sz means the device isn't working properly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the BAR isn't implemented, all bits must be 0.  If it's a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * memory BAR or a ROM, bit 0 must be clear; if it's an io BAR, bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1 must be clear.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sz\">sz</a> || <a class=\"id\" href=\"#sz\">sz</a> == 0xffffffff)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * I don't know how l can have all bits set.  Copied from old code.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Maybe it fixes a bug on some ancient platform.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> == 0xffffffff)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#pci_bar_unknown\">pci_bar_unknown</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#decode_bar\">decode_bar</a>(<a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#pci_calc_resource_flags\">pci_calc_resource_flags</a>(<a class=\"id\" href=\"#l\">l</a>) | <a class=\"id\" href=\"#IORESOURCE_SIZEALIGN\">IORESOURCE_SIZEALIGN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#pci_bar_io\">pci_bar_io</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> &= <a class=\"id\" href=\"#PCI_BASE_ADDRESS_IO_MASK\">PCI_BASE_ADDRESS_IO_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = <a class=\"id\" href=\"#PCI_BASE_ADDRESS_IO_MASK\">PCI_BASE_ADDRESS_IO_MASK</a> &amp; <a class=\"id\" href=\"#IO_SPACE_LIMIT\">IO_SPACE_LIMIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> &= <a class=\"id\" href=\"#PCI_BASE_ADDRESS_MEM_MASK\">PCI_BASE_ADDRESS_MEM_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#PCI_BASE_ADDRESS_MEM_MASK\">PCI_BASE_ADDRESS_MEM_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> |= (<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#IORESOURCE_ROM_ENABLE\">IORESOURCE_ROM_ENABLE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> &= <a class=\"id\" href=\"#PCI_ROM_ADDRESS_MASK\">PCI_ROM_ADDRESS_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mask\">mask</a> = (<a class=\"id\" href=\"#u32\">u32</a>)<a class=\"id\" href=\"#PCI_ROM_ADDRESS_MASK\">PCI_ROM_ADDRESS_MASK</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#pci_bar_mem64\">pci_bar_mem64</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#l64\">l64</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#sz64\">sz64</a> = <a class=\"id\" href=\"#sz\">sz</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mask64\">mask64</a> = <a class=\"id\" href=\"#mask\">mask</a> | (<a class=\"id\" href=\"#u64\">u64</a>)~0 << 32;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 4, &amp;<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 4, ~0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 4, &amp;<a class=\"id\" href=\"#sz\">sz</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 4, <a class=\"id\" href=\"#l\">l</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l64\">l64</a> |= ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#l\">l</a> << 32);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sz64\">sz64</a> |= ((<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#sz\">sz</a> << 32);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sz64\">sz64</a> = <a class=\"id\" href=\"#pci_size\">pci_size</a>(<a class=\"id\" href=\"#l64\">l64</a>, <a class=\"id\" href=\"#sz64\">sz64</a>, <a class=\"id\" href=\"#mask64\">mask64</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sz64\">sz64</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((sizeof(<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>) &lt; 8) && (<a class=\"id\" href=\"#sz64\">sz64</a> &gt; 0x100000000ULL)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"reg %x: can't handle 64-bit BAR\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IORESOURCE_MEM_64\">IORESOURCE_MEM_64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((sizeof(<a class=\"id\" href=\"#resource_size_t\">resource_size_t</a>) &lt; 8) && <a class=\"id\" href=\"#l\">l</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Address above 32-bit boundary; disable the BAR */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 4, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#sz64\">sz64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#l64\">l64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#l64\">l64</a> + <a class=\"id\" href=\"#sz64\">sz64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"reg %x: %pR\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sz\">sz</a> = <a class=\"id\" href=\"#pci_size\">pci_size</a>(<a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#sz\">sz</a>, <a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sz\">sz</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#l\">l</a> + <a class=\"id\" href=\"#sz\">sz</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"reg %x: %pR\\n\", <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#pci_bar_mem64\">pci_bar_mem64</a>) ? 1 : 0;", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_read_bases\">pci_read_bases</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#howmany\">howmany</a>, int <a class=\"id\" href=\"#rom\">rom</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#reg\">reg</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pos\">pos</a> = 0; <a class=\"id\" href=\"#pos\">pos</a> &lt; <a class=\"id\" href=\"#howmany\">howmany</a>; <a class=\"id\" href=\"#pos\">pos</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#pos\">pos</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reg\">reg</a> = <a class=\"id\" href=\"#PCI_BASE_ADDRESS_0\">PCI_BASE_ADDRESS_0</a> + (<a class=\"id\" href=\"#pos\">pos</a> << 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> += <a class=\"id\" href=\"#__pci_read_base\">__pci_read_base</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_bar_unknown\">pci_bar_unknown</a>, <a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#reg\">reg</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rom\">rom</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_ROM_RESOURCE\">PCI_ROM_RESOURCE</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#rom_base_reg\">rom_base_reg</a> = <a class=\"id\" href=\"#rom\">rom</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a> | <a class=\"id\" href=\"#IORESOURCE_PREFETCH\">IORESOURCE_PREFETCH</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IORESOURCE_READONLY\">IORESOURCE_READONLY</a> | <a class=\"id\" href=\"#IORESOURCE_CACHEABLE\">IORESOURCE_CACHEABLE</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IORESOURCE_SIZEALIGN\">IORESOURCE_SIZEALIGN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__pci_read_base\">__pci_read_base</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pci_bar_mem32\">pci_bar_mem32</a>, <a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#rom\">rom</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_read_bridge_io\">pci_read_bridge_io</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#io_base_lo\">io_base_lo</a>, <a class=\"id\" href=\"#io_limit_lo\">io_limit_lo</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#resource\">resource</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_IO_BASE\">PCI_IO_BASE</a>, &amp;<a class=\"id\" href=\"#io_base_lo\">io_base_lo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_IO_LIMIT\">PCI_IO_LIMIT</a>, &amp;<a class=\"id\" href=\"#io_limit_lo\">io_limit_lo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = (<a class=\"id\" href=\"#io_base_lo\">io_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_IO_RANGE_MASK\">PCI_IO_RANGE_MASK</a>) << 8;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = (<a class=\"id\" href=\"#io_limit_lo\">io_limit_lo</a> &amp; <a class=\"id\" href=\"#PCI_IO_RANGE_MASK\">PCI_IO_RANGE_MASK</a>) << 8;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#io_base_lo\">io_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_IO_RANGE_TYPE_MASK\">PCI_IO_RANGE_TYPE_MASK</a>) == <a class=\"id\" href=\"#PCI_IO_RANGE_TYPE_32\">PCI_IO_RANGE_TYPE_32</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#io_base_hi\">io_base_hi</a>, <a class=\"id\" href=\"#io_limit_hi\">io_limit_hi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_IO_BASE_UPPER16\">PCI_IO_BASE_UPPER16</a>, &amp;<a class=\"id\" href=\"#io_base_hi\">io_base_hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_IO_LIMIT_UPPER16\">PCI_IO_LIMIT_UPPER16</a>, &amp;<a class=\"id\" href=\"#io_limit_hi\">io_limit_hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> |= (<a class=\"id\" href=\"#io_base_hi\">io_base_hi</a> << 16);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> |= (<a class=\"id\" href=\"#io_limit_hi\">io_limit_hi</a> << 16);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> && <a class=\"id\" href=\"#base\">base</a> <= <a class=\"id\" href=\"#limit\">limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#io_base_lo\">io_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_IO_RANGE_TYPE_MASK\">PCI_IO_RANGE_TYPE_MASK</a>) | <a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#limit\">limit</a> + 0xfff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"  bridge window %pR\\n\", <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"  bridge window [io  %#06lx-%#06lx] (disabled)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#limit\">limit</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_read_bridge_mmio\">pci_read_bridge_mmio</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a>, <a class=\"id\" href=\"#mem_limit_lo\">mem_limit_lo</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#resource\">resource</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_MEMORY_BASE\">PCI_MEMORY_BASE</a>, &amp;<a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_MEMORY_LIMIT\">PCI_MEMORY_LIMIT</a>, &amp;<a class=\"id\" href=\"#mem_limit_lo\">mem_limit_lo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = (<a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_MEMORY_RANGE_MASK\">PCI_MEMORY_RANGE_MASK</a>) << 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = (<a class=\"id\" href=\"#mem_limit_lo\">mem_limit_lo</a> &amp; <a class=\"id\" href=\"#PCI_MEMORY_RANGE_MASK\">PCI_MEMORY_RANGE_MASK</a>) << 16;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> && <a class=\"id\" href=\"#base\">base</a> <= <a class=\"id\" href=\"#limit\">limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_MEMORY_RANGE_TYPE_MASK\">PCI_MEMORY_RANGE_TYPE_MASK</a>) | <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#limit\">limit</a> + 0xfffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"  bridge window %pR\\n\", <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"  bridge window [mem %#010lx-%#010lx] (disabled)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#limit\">limit</a> + 0xfffff);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_read_bridge_mmio_pref\">pci_read_bridge_mmio_pref</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a>, <a class=\"id\" href=\"#mem_limit_lo\">mem_limit_lo</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#resource\">resource</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_PREF_MEMORY_BASE\">PCI_PREF_MEMORY_BASE</a>, &amp;<a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_PREF_MEMORY_LIMIT\">PCI_PREF_MEMORY_LIMIT</a>, &amp;<a class=\"id\" href=\"#mem_limit_lo\">mem_limit_lo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = (<a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_PREF_RANGE_MASK\">PCI_PREF_RANGE_MASK</a>) << 16;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> = (<a class=\"id\" href=\"#mem_limit_lo\">mem_limit_lo</a> &amp; <a class=\"id\" href=\"#PCI_PREF_RANGE_MASK\">PCI_PREF_RANGE_MASK</a>) << 16;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_PREF_RANGE_TYPE_MASK\">PCI_PREF_RANGE_TYPE_MASK</a>) == <a class=\"id\" href=\"#PCI_PREF_RANGE_TYPE_64\">PCI_PREF_RANGE_TYPE_64</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#mem_base_hi\">mem_base_hi</a>, <a class=\"id\" href=\"#mem_limit_hi\">mem_limit_hi</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_PREF_BASE_UPPER32\">PCI_PREF_BASE_UPPER32</a>, &amp;<a class=\"id\" href=\"#mem_base_hi\">mem_base_hi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_PREF_LIMIT_UPPER32\">PCI_PREF_LIMIT_UPPER32</a>, &amp;<a class=\"id\" href=\"#mem_limit_hi\">mem_limit_hi</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Some bridges set the base &gt; limit by default, and some</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * (broken) BIOSes do not initialize them.  If we find</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * this, just assume they are not being used.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mem_base_hi\">mem_base_hi</a> <= <a class=\"id\" href=\"#mem_limit_hi\">mem_limit_hi</a>) {", 
"#if <a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 64", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> |= ((long) <a class=\"id\" href=\"#mem_base_hi\">mem_base_hi</a>) << 32;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#limit\">limit</a> |= ((long) <a class=\"id\" href=\"#mem_limit_hi\">mem_limit_hi</a>) << 32;", 
"#else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mem_base_hi\">mem_base_hi</a> || <a class=\"id\" href=\"#mem_limit_hi\">mem_limit_hi</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"can't handle 64-bit \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"address space for bridge\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#base\">base</a> && <a class=\"id\" href=\"#base\">base</a> <= <a class=\"id\" href=\"#limit\">limit</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> = (<a class=\"id\" href=\"#mem_base_lo\">mem_base_lo</a> &amp; <a class=\"id\" href=\"#PCI_PREF_RANGE_TYPE_MASK\">PCI_PREF_RANGE_TYPE_MASK</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#IORESOURCE_MEM\">IORESOURCE_MEM</a> | <a class=\"id\" href=\"#IORESOURCE_PREFETCH\">IORESOURCE_PREFETCH</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#PCI_PREF_RANGE_TYPE_64\">PCI_PREF_RANGE_TYPE_64</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#IORESOURCE_MEM_64\">IORESOURCE_MEM_64</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#limit\">limit</a> + 0xfffff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"  bridge window %pR\\n\", <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     \"  bridge window [mem %#010lx-%#010lx pref] (disabled)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#limit\">limit</a> + 0xfffff);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"void <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_read_bridge_bases\">pci_read_bridge_bases</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a> *<a class=\"id\" href=\"#res\">res</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_is_root_bus\">pci_is_root_bus</a>(<a class=\"id\" href=\"#child\">child</a>))<span class=\"ts\"/><span class=\"comment\">/* It's a host bus, nothing to read */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"PCI bridge to [bus %02x-%02x]%s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#secondary\">secondary</a>, <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#transparent\">transparent</a> ? \" (subtractive decode)\" : \"\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_remove_resources\">pci_bus_remove_resources</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCI_BRIDGE_RESOURCE_NUM\">PCI_BRIDGE_RESOURCE_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>] = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_BRIDGE_RESOURCES\">PCI_BRIDGE_RESOURCES</a>+<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_bridge_io\">pci_read_bridge_io</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_bridge_mmio\">pci_read_bridge_mmio</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_bridge_mmio_pref\">pci_read_bridge_mmio_pref</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#transparent\">transparent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_for_each_resource\">pci_bus_for_each_resource</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#res\">res</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_add_resource\">pci_bus_add_resource</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#res\">res</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#PCI_SUBTRACTIVE_DECODE\">PCI_SUBTRACTIVE_DECODE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_printk\">dev_printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"  bridge window %pR (subtractive decode)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#res\">res</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> * <a class=\"id\" href=\"#pci_alloc_bus\">pci_alloc_bus</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#b\">b</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#b\">b</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#children\">children</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#devices\">devices</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#slots\">slots</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#resources\">resources</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#max_bus_speed\">max_bus_speed</a> = <a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#cur_bus_speed\">cur_bus_speed</a> = <a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#b\">b</a>;", 
"}", 
"", 
"static unsigned char <a class=\"id\" href=\"#pcix_bus_speed\">pcix_bus_speed</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX\">PCI_SPEED_66MHz_PCIX</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX\">PCI_SPEED_100MHz_PCIX</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX\">PCI_SPEED_133MHz_PCIX</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 4 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX_ECC\">PCI_SPEED_66MHz_PCIX_ECC</a>,<span class=\"ts\"/><span class=\"comment\">/* 5 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX_ECC\">PCI_SPEED_100MHz_PCIX_ECC</a>,<span class=\"ts\"/><span class=\"comment\">/* 6 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_ECC\">PCI_SPEED_133MHz_PCIX_ECC</a>,<span class=\"ts\"/><span class=\"comment\">/* 7 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 8 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX_266\">PCI_SPEED_66MHz_PCIX_266</a>,<span class=\"ts\"/><span class=\"comment\">/* 9 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX_266\">PCI_SPEED_100MHz_PCIX_266</a>,<span class=\"ts\"/><span class=\"comment\">/* A */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_266\">PCI_SPEED_133MHz_PCIX_266</a>,<span class=\"ts\"/><span class=\"comment\">/* B */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* C */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX_533\">PCI_SPEED_66MHz_PCIX_533</a>,<span class=\"ts\"/><span class=\"comment\">/* D */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_100MHz_PCIX_533\">PCI_SPEED_100MHz_PCIX_533</a>,<span class=\"ts\"/><span class=\"comment\">/* E */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_533\">PCI_SPEED_133MHz_PCIX_533</a><span class=\"ts\"/><span class=\"comment\">/* F */</span>", 
"};", 
"", 
"static unsigned char <a class=\"id\" href=\"#pcie_link_speed\">pcie_link_speed</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 0 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCIE_SPEED_2_5GT\">PCIE_SPEED_2_5GT</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCIE_SPEED_5_0GT\">PCIE_SPEED_5_0GT</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCIE_SPEED_8_0GT\">PCIE_SPEED_8_0GT</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 4 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 5 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 6 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 7 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 8 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* 9 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* A */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* B */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* C */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* D */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* E */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#PCI_SPEED_UNKNOWN\">PCI_SPEED_UNKNOWN</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* F */</span>", 
"};", 
"", 
"void <a class=\"id\" href=\"#pcie_update_link_speed\">pcie_update_link_speed</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#linksta\">linksta</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#cur_bus_speed\">cur_bus_speed</a> = <a class=\"id\" href=\"#pcie_link_speed\">pcie_link_speed</a>[<a class=\"id\" href=\"#linksta\">linksta</a> &amp; 0xf];", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pcie_update_link_speed\">pcie_update_link_speed</a>);", 
"", 
"static unsigned char <a class=\"id\" href=\"#agp_speeds\">agp_speeds</a>[] = {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_UNKNOWN\">AGP_UNKNOWN</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_1X\">AGP_1X</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_2X\">AGP_2X</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_4X\">AGP_4X</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#AGP_8X\">AGP_8X</a>", 
"};", 
"", 
"static enum <a class=\"id\" href=\"#pci_bus_speed\">pci_bus_speed</a> <a class=\"id\" href=\"#agp_speed\">agp_speed</a>(int <a class=\"id\" href=\"#agp3\">agp3</a>, int <a class=\"id\" href=\"#agpstat\">agpstat</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#agpstat\">agpstat</a> &amp; 4)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 3;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#agpstat\">agpstat</a> &amp; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 2;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#agpstat\">agpstat</a> &amp; 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 1;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#agp3\">agp3</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#index\">index</a> == 5)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#agp_speeds\">agp_speeds</a>[<a class=\"id\" href=\"#index\">index</a>];", 
"}", 
"", 
"", 
"static void <a class=\"id\" href=\"#pci_set_bus_speed\">pci_set_bus_speed</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#bridge\">bridge</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#PCI_CAP_ID_AGP\">PCI_CAP_ID_AGP</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#PCI_CAP_ID_AGP3\">PCI_CAP_ID_AGP3</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#agpstat\">agpstat</a>, <a class=\"id\" href=\"#agpcmd\">agpcmd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_AGP_STATUS\">PCI_AGP_STATUS</a>, &amp;<a class=\"id\" href=\"#agpstat\">agpstat</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#max_bus_speed\">max_bus_speed</a> = <a class=\"id\" href=\"#agp_speed\">agp_speed</a>(<a class=\"id\" href=\"#agpstat\">agpstat</a> &amp; 8, <a class=\"id\" href=\"#agpstat\">agpstat</a> &amp; 7);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_AGP_COMMAND\">PCI_AGP_COMMAND</a>, &amp;<a class=\"id\" href=\"#agpcmd\">agpcmd</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#cur_bus_speed\">cur_bus_speed</a> = <a class=\"id\" href=\"#agp_speed\">agp_speed</a>(<a class=\"id\" href=\"#agpstat\">agpstat</a> &amp; 8, <a class=\"id\" href=\"#agpcmd\">agpcmd</a> &amp; 7);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#PCI_CAP_ID_PCIX\">PCI_CAP_ID_PCIX</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>enum <a class=\"id\" href=\"#pci_bus_speed\">pci_bus_speed</a> <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#pos\">pos</a> + 2, &amp;<a class=\"id\" href=\"#status\">status</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> &amp; 0x8000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_533\">PCI_SPEED_133MHz_PCIX_533</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#status\">status</a> &amp; 0x4000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_266\">PCI_SPEED_133MHz_PCIX_266</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#status\">status</a> &amp; 0x0002) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (((<a class=\"id\" href=\"#status\">status</a> >> 12) &amp; 0x3) == 2) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX_ECC\">PCI_SPEED_133MHz_PCIX_ECC</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#PCI_SPEED_133MHz_PCIX\">PCI_SPEED_133MHz_PCIX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#PCI_SPEED_66MHz_PCIX\">PCI_SPEED_66MHz_PCIX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#max_bus_speed\">max_bus_speed</a> = <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#cur_bus_speed\">cur_bus_speed</a> = <a class=\"id\" href=\"#pcix_bus_speed\">pcix_bus_speed</a>[(<a class=\"id\" href=\"#status\">status</a> >> 6) &amp; 0xf];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#PCI_CAP_ID_EXP\">PCI_CAP_ID_EXP</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#linkcap\">linkcap</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#linksta\">linksta</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKCAP\">PCI_EXP_LNKCAP</a>, &amp;<a class=\"id\" href=\"#linkcap\">linkcap</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#max_bus_speed\">max_bus_speed</a> = <a class=\"id\" href=\"#pcie_link_speed\">pcie_link_speed</a>[<a class=\"id\" href=\"#linkcap\">linkcap</a> &amp; 0xf];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_LNKSTA\">PCI_EXP_LNKSTA</a>, &amp;<a class=\"id\" href=\"#linksta\">linksta</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_update_link_speed\">pcie_update_link_speed</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#linksta\">linksta</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"static struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#pci_alloc_child_bus\">pci_alloc_child_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#bridge\">bridge</a>, int <a class=\"id\" href=\"#busnr\">busnr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate a new bus, and inherit stuff from the parent..</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#pci_alloc_bus\">pci_alloc_bus</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#ops\">ops</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#sysdata\">sysdata</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#sysdata\">sysdata</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#bus_flags\">bus_flags</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#bus_flags\">bus_flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* initialize some portions of the bus device, but don't register it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * now as the parent is not properly set up yet.  This device will get</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * registered later in pci_bus_add_devices()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#class\">class</a> = &amp;<a class=\"id\" href=\"#pcibus_class\">pcibus_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%04x:%02x\", <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#child\">child</a>), <a class=\"id\" href=\"#busnr\">busnr</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set up the primary, secondary and subordinate</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * bus numbers.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#secondary\">secondary</a> = <a class=\"id\" href=\"#busnr\">busnr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#secondary\">secondary</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> = 0xff;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bridge\">bridge</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#self\">self</a> = <a class=\"id\" href=\"#bridge\">bridge</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#bridge\">bridge</a> = <a class=\"id\" href=\"#get_device\">get_device</a>(&amp;<a class=\"id\" href=\"#bridge\">bridge</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_bus_speed\">pci_set_bus_speed</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set up default resource pointers and names.. */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#PCI_BRIDGE_RESOURCE_NUM\">PCI_BRIDGE_RESOURCE_NUM</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>] = &amp;<a class=\"id\" href=\"#bridge\">bridge</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#PCI_BRIDGE_RESOURCES\">PCI_BRIDGE_RESOURCES</a>+<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#resource\">resource</a>[<a class=\"id\" href=\"#i\">i</a>]-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bridge\">bridge</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> = <a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#child\">child</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#pci_add_new_bus\">pci_add_new_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#busnr\">busnr</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#pci_alloc_child_bus\">pci_alloc_child_bus</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#busnr\">busnr</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#children\">children</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#child\">child</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_fixup_parent_subordinate_busnr\">pci_fixup_parent_subordinate_busnr</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>, int <a class=\"id\" href=\"#max\">max</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Attempts to fix that up are really dangerous unless</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   we're going to re-assign all bus numbers. */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pcibios_assign_all_busses\">pcibios_assign_all_busses</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#parent\">parent</a> && <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> &lt; <a class=\"id\" href=\"#max\">max</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> = <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#self\">self</a>, <a class=\"id\" href=\"#PCI_SUBORDINATE_BUS\">PCI_SUBORDINATE_BUS</a>, <a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If it's a bridge, configure it and scan the bus behind it.</span>", 
"<span class=\"comment\"> * For CardBus bridges, we don't scan behind as the devices will</span>", 
"<span class=\"comment\"> * be handled by the bridge driver itself.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * We need to process bridges in two passes -- first we scan those</span>", 
"<span class=\"comment\"> * already configured by the BIOS and after we are done with all of</span>", 
"<span class=\"comment\"> * them, we proceed to assigning numbers to the remaining buses in</span>", 
"<span class=\"comment\"> * order to avoid overlaps between old and new bus numbers.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_scan_bridge\">pci_scan_bridge</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#max\">max</a>, int <a class=\"id\" href=\"#pass\">pass</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#child\">child</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#is_cardbus\">is_cardbus</a> = (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_CARDBUS\">PCI_HEADER_TYPE_CARDBUS</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#buses\">buses</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#bctl\">bctl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#primary\">primary</a>, <a class=\"id\" href=\"#secondary\">secondary</a>, <a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#broken\">broken</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_PRIMARY_BUS\">PCI_PRIMARY_BUS</a>, &amp;<a class=\"id\" href=\"#buses\">buses</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#buses\">buses</a> &amp; 0xFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#secondary\">secondary</a> = (<a class=\"id\" href=\"#buses\">buses</a> >> 8) &amp; 0xFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#subordinate\">subordinate</a> = (<a class=\"id\" href=\"#buses\">buses</a> >> 16) &amp; 0xFF;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"scanning [bus %02x-%02x] behind bridge, pass %d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secondary\">secondary</a>, <a class=\"id\" href=\"#subordinate\">subordinate</a>, <a class=\"id\" href=\"#pass\">pass</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check if setup is sensible at all */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pass\">pass</a> &&", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#primary\">primary</a> != <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> || <a class=\"id\" href=\"#secondary\">secondary</a> <= <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"bus configuration invalid, reconfiguring\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#broken\">broken</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable MasterAbortMode during probing to avoid reporting</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   of bus errors (in some architectures) */</span> ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>, &amp;<a class=\"id\" href=\"#bctl\">bctl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#bctl\">bctl</a> &amp; ~<a class=\"id\" href=\"#PCI_BRIDGE_CTL_MASTER_ABORT\">PCI_BRIDGE_CTL_MASTER_ABORT</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#secondary\">secondary</a> || <a class=\"id\" href=\"#subordinate\">subordinate</a>) && !<a class=\"id\" href=\"#pcibios_assign_all_busses\">pcibios_assign_all_busses</a>() &&", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#is_cardbus\">is_cardbus</a> && !<a class=\"id\" href=\"#broken\">broken</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cmax\">cmax</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Bus already configured by firmware, process it in the first</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * pass and just note the configuration.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pass\">pass</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * If we already got to this bus through a different bridge,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * don't re-add it. This can happen with the i450NX chipset.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * However, we continue to descend down the hierarchy and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * scan remaining child buses.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#pci_find_bus\">pci_find_bus</a>(<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#bus\">bus</a>), <a class=\"id\" href=\"#secondary\">secondary</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#pci_add_new_bus\">pci_add_new_bus</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#secondary\">secondary</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#child\">child</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#primary\">primary</a> = <a class=\"id\" href=\"#primary\">primary</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> = <a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#bridge_ctl\">bridge_ctl</a> = <a class=\"id\" href=\"#bctl\">bctl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmax\">cmax</a> = <a class=\"id\" href=\"#pci_scan_child_bus\">pci_scan_child_bus</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmax\">cmax</a> &gt; <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#cmax\">cmax</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> &gt; <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to assign a number to this bus which we always</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * do in the second pass.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pass\">pass</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pcibios_assign_all_busses\">pcibios_assign_all_busses</a>() || <a class=\"id\" href=\"#broken\">broken</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Temporarily disable forwarding of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   configuration cycles on all bridges in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   this bus segment to avoid possible</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   conflicts in the second pass between two</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   bridges programmed with overlapping</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   bus ranges. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_PRIMARY_BUS\">PCI_PRIMARY_BUS</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#buses\">buses</a> &amp; ~0xffffff);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Clear errors */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_STATUS\">PCI_STATUS</a>, 0xffff);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Prevent assigning a bus number that already exists.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * This can happen when a bridge is hot-plugged */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_find_bus\">pci_find_bus</a>(<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#bus\">bus</a>), <a class=\"id\" href=\"#max\">max</a>+1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a> = <a class=\"id\" href=\"#pci_add_new_bus\">pci_add_new_bus</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>, ++<a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buses\">buses</a> = (<a class=\"id\" href=\"#buses\">buses</a> &amp; 0xff000000)", 
"<span class=\"ts\"/><span class=\"ts\"/>      | ((unsigned int)(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#primary\">primary</a>)     <<  0)", 
"<span class=\"ts\"/><span class=\"ts\"/>      | ((unsigned int)(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#secondary\">secondary</a>)   <<  8)", 
"<span class=\"ts\"/><span class=\"ts\"/>      | ((unsigned int)(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>) << 16);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * yenta.c forces a secondary latency timer of 176.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Copy that behaviour here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#is_cardbus\">is_cardbus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buses\">buses</a> &= ~0xff000000;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buses\">buses</a> |= <a class=\"id\" href=\"#CARDBUS_LATENCY_TIMER\">CARDBUS_LATENCY_TIMER</a> << 24;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We need to blast all three values with a single write.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_dword\">pci_write_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_PRIMARY_BUS\">PCI_PRIMARY_BUS</a>, <a class=\"id\" href=\"#buses\">buses</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_cardbus\">is_cardbus</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#bridge_ctl\">bridge_ctl</a> = <a class=\"id\" href=\"#bctl\">bctl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Adjust subordinate busnr in parent buses.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * We do this before scanning for children because</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * some devices may not be detected if the bios</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * was lazy.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_parent_subordinate_busnr\">pci_fixup_parent_subordinate_busnr</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Now we can scan all subordinate buses... */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#pci_scan_child_bus\">pci_scan_child_bus</a>(<a class=\"id\" href=\"#child\">child</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * now fix it up again since we have found</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the real value of max.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_parent_subordinate_busnr\">pci_fixup_parent_subordinate_busnr</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * For CardBus bridges, we leave 4 bus numbers</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * as cards with a PCI-to-PCI bridge can be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * inserted later.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a>=0; <a class=\"id\" href=\"#i\">i</a>&lt;<a class=\"id\" href=\"#CARDBUS_RESERVE_BUSNR\">CARDBUS_RESERVE_BUSNR</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_find_bus\">pci_find_bus</a>(<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#bus\">bus</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>+<a class=\"id\" href=\"#i\">i</a>+1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((!<a class=\"id\" href=\"#pcibios_assign_all_busses\">pcibios_assign_all_busses</a>()) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> &gt; <a class=\"id\" href=\"#max\">max</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> <= <a class=\"id\" href=\"#max\">max</a>+<a class=\"id\" href=\"#i\">i</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#j\">j</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Often, there are two cardbus bridges</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * -- try to leave one valid bus number</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * for each one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> /= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> += <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_parent_subordinate_busnr\">pci_fixup_parent_subordinate_busnr</a>(<a class=\"id\" href=\"#child\">child</a>, <a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Set the subordinate bus number to its real value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> = <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_byte\">pci_write_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_SUBORDINATE_BUS\">PCI_SUBORDINATE_BUS</a>, <a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#is_cardbus\">is_cardbus</a> ? \"PCI CardBus %04x:%02x\" : \"PCI Bus %04x:%02x\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#bus\">bus</a>), <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#number\">number</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Has only triggered on CardBus, fixup is in yenta_socket */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#parent\">parent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> &gt; <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#number\">number</a> &gt; <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#number\">number</a> &lt; <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> &lt; <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_info\">dev_info</a>(&amp;<a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"[bus %02x-%02x] %s \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"hidden behind%s bridge %s [bus %02x-%02x]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> &gt; <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> &lt; <a class=\"id\" href=\"#child\">child</a>-><a class=\"id\" href=\"#number\">number</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"wholly\" : \"partially\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>-><a class=\"id\" href=\"#transparent\">transparent</a> ? \" transparent\" : \"\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_write_config_word\">pci_write_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_BRIDGE_CONTROL\">PCI_BRIDGE_CONTROL</a>, <a class=\"id\" href=\"#bctl\">bctl</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read interrupt line and base address registers.</span>", 
"<span class=\"comment\"> * The architecture-dependent code can tweak these, of course.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pci_read_irq\">pci_read_irq</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#irq\">irq</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_INTERRUPT_PIN\">PCI_INTERRUPT_PIN</a>, &amp;<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#irq\">irq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_INTERRUPT_LINE\">PCI_INTERRUPT_LINE</a>, &amp;<a class=\"id\" href=\"#irq\">irq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a> = <a class=\"id\" href=\"#irq\">irq</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#set_pcie_port_type\">set_pcie_port_type</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_EXP\">PCI_CAP_ID_EXP</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#is_pcie\">is_pcie</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_cap\">pcie_cap</a> = <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_FLAGS\">PCI_EXP_FLAGS</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> = (<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_FLAGS_TYPE\">PCI_EXP_FLAGS_TYPE</a>) >> 4;", 
"}", 
"", 
"void <a class=\"id\" href=\"#set_pcie_hotplug_bridge\">set_pcie_hotplug_bridge</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pdev\">pdev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#reg16\">reg16</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reg32\">reg32</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#pdev\">pdev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_FLAGS\">PCI_EXP_FLAGS</a>, &amp;<a class=\"id\" href=\"#reg16\">reg16</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#reg16\">reg16</a> &amp; <a class=\"id\" href=\"#PCI_EXP_FLAGS_SLOT\">PCI_EXP_FLAGS_SLOT</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#pdev\">pdev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_EXP_SLTCAP\">PCI_EXP_SLTCAP</a>, &amp;<a class=\"id\" href=\"#reg32\">reg32</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reg32\">reg32</a> &amp; <a class=\"id\" href=\"#PCI_EXP_SLTCAP_HPC\">PCI_EXP_SLTCAP_HPC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pdev\">pdev</a>-><a class=\"id\" href=\"#is_hotplug_bridge\">is_hotplug_bridge</a> = 1;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LEGACY_IO_RESOURCE\">LEGACY_IO_RESOURCE</a><span class=\"ts\"/>(<a class=\"id\" href=\"#IORESOURCE_IO\">IORESOURCE_IO</a> | <a class=\"id\" href=\"#IORESOURCE_PCI_FIXED\">IORESOURCE_PCI_FIXED</a>)", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_setup_device - fill in class and map information of a device</span>", 
"<span class=\"comment\"> * @dev: the device structure to fill</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Initialize the device structure with information about the device's </span>", 
"<span class=\"comment\"> * vendor,class,memory and IO-space addresses,IRQ lines etc.</span>", 
"<span class=\"comment\"> * Called at initialisation of the PCI subsystem and by CardBus services.</span>", 
"<span class=\"comment\"> * Returns 0 on success and negative if unknown type of device (not normal,</span>", 
"<span class=\"comment\"> * bridge or CardBus).</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_setup_device\">pci_setup_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#hdr_type\">hdr_type</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_slot\">pci_slot</a> *<a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_HEADER_TYPE\">PCI_HEADER_TYPE</a>, &amp;<a class=\"id\" href=\"#hdr_type\">hdr_type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#sysdata\">sysdata</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#sysdata\">sysdata</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#bridge\">bridge</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#bus\">bus</a> = &amp;<a class=\"id\" href=\"#pci_bus_type\">pci_bus_type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> = <a class=\"id\" href=\"#hdr_type\">hdr_type</a> &amp; 0x7f;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multifunction\">multifunction</a> = !!(<a class=\"id\" href=\"#hdr_type\">hdr_type</a> &amp; 0x80);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#error_state\">error_state</a> = <a class=\"id\" href=\"#pci_channel_io_normal\">pci_channel_io_normal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_pcie_port_type\">set_pcie_port_type</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#slot\">slot</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#slots\">slots</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>) == <a class=\"id\" href=\"#slot\">slot</a>-><a class=\"id\" href=\"#number\">number</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#slot\">slot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Assume 32-bit PCI; let 64-bit PCI cards (which are far rarer)</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   set this higher, assuming the system even supports it.  */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a> = 0xffffffff;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%04x:%02x:%02x.%d\", <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CLASS_REVISION\">PCI_CLASS_REVISION</a>, &amp;<a class=\"id\" href=\"#class\">class</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#revision\">revision</a> = <a class=\"id\" href=\"#class\">class</a> &amp; 0xff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> >>= 8;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* upper 3 bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#class\">class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> >>= 8;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"found [%04x:%04x] class %06x header type %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* need to have dev-&gt;class ready */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#cfg_size\">cfg_size</a> = <a class=\"id\" href=\"#pci_cfg_space_size\">pci_cfg_space_size</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* \"Unknown power state\" */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Early fixups, before probing the BARs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_early\">pci_fixup_early</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* device class may be changed after fixup */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> >> 8;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a>) {<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* header type */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_HEADER_TYPE_NORMAL\">PCI_HEADER_TYPE_NORMAL</a>:<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* standard header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_PCI\">PCI_CLASS_BRIDGE_PCI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_irq\">pci_read_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_bases\">pci_read_bases</a>(<a class=\"id\" href=\"#dev\">dev</a>, 6, <a class=\"id\" href=\"#PCI_ROM_ADDRESS\">PCI_ROM_ADDRESS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_SUBSYSTEM_VENDOR_ID\">PCI_SUBSYSTEM_VENDOR_ID</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_SUBSYSTEM_ID\">PCI_SUBSYSTEM_ID</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Do the ugly legacy mode stuff here rather than broken chip</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>quirk code. Legacy mode ATA controllers have fixed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>addresses. These are not always echoed in BAR0-3, and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>BAR0-3 in a few cases contain junk!</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#PCI_CLASS_STORAGE_IDE\">PCI_CLASS_STORAGE_IDE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#progif\">progif</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_byte\">pci_read_config_byte</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CLASS_PROG\">PCI_CLASS_PROG</a>, &amp;<a class=\"id\" href=\"#progif\">progif</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#progif\">progif</a> &amp; 1) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[0].<a class=\"id\" href=\"#start\">start</a> = 0x1F0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[0].<a class=\"id\" href=\"#end\">end</a> = 0x1F7;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[0].<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#LEGACY_IO_RESOURCE\">LEGACY_IO_RESOURCE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[1].<a class=\"id\" href=\"#start\">start</a> = 0x3F6;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[1].<a class=\"id\" href=\"#end\">end</a> = 0x3F6;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[1].<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#LEGACY_IO_RESOURCE\">LEGACY_IO_RESOURCE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#progif\">progif</a> &amp; 4) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[2].<a class=\"id\" href=\"#start\">start</a> = 0x170;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[2].<a class=\"id\" href=\"#end\">end</a> = 0x177;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[2].<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#LEGACY_IO_RESOURCE\">LEGACY_IO_RESOURCE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[3].<a class=\"id\" href=\"#start\">start</a> = 0x376;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[3].<a class=\"id\" href=\"#end\">end</a> = 0x376;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#resource\">resource</a>[3].<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#LEGACY_IO_RESOURCE\">LEGACY_IO_RESOURCE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_HEADER_TYPE_BRIDGE\">PCI_HEADER_TYPE_BRIDGE</a>:<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* bridge header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> != <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_PCI\">PCI_CLASS_BRIDGE_PCI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The PCI-to-PCI bridge spec requires that subtractive</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   decoding (i.e. transparent) bridge must have programming</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   interface code of 0x01. */</span> ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_irq\">pci_read_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#transparent\">transparent</a> = ((<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> &amp; 0xff) == 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_bases\">pci_read_bases</a>(<a class=\"id\" href=\"#dev\">dev</a>, 2, <a class=\"id\" href=\"#PCI_ROM_ADDRESS1\">PCI_ROM_ADDRESS1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pcie_hotplug_bridge\">set_pcie_hotplug_bridge</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_SSVID\">PCI_CAP_ID_SSVID</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_SSVID_VENDOR_ID\">PCI_SSVID_VENDOR_ID</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_SSVID_DEVICE_ID\">PCI_SSVID_DEVICE_ID</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#PCI_HEADER_TYPE_CARDBUS\">PCI_HEADER_TYPE_CARDBUS</a>:<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* CardBus bridge header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> != <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_CARDBUS\">PCI_CLASS_BRIDGE_CARDBUS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_irq\">pci_read_irq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_bases\">pci_read_bases</a>(<a class=\"id\" href=\"#dev\">dev</a>, 1, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CB_SUBSYSTEM_VENDOR_ID\">PCI_CB_SUBSYSTEM_VENDOR_ID</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_vendor\">subsystem_vendor</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CB_SUBSYSTEM_ID\">PCI_CB_SUBSYSTEM_ID</a>, &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subsystem_device\">subsystem_device</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <span class=\"comment\">/* unknown header */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"unknown header type %02x, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"ignoring device\\n\", <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_err\">dev_err</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"ignoring class %02x (doesn't match header \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"type %02x)\\n\", <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#PCI_CLASS_NOT_DEFINED\">PCI_CLASS_NOT_DEFINED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We found a fine healthy device, go go go... */</span>", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_release_capabilities\">pci_release_capabilities</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_vpd_release\">pci_vpd_release</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_iov_release\">pci_iov_release</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_release_dev - free a pci device structure when all users of it are finished.</span>", 
"<span class=\"comment\"> * @dev: device that's been disconnected</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Will be called only by the device core when all users of this pci device are</span>", 
"<span class=\"comment\"> * done.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pci_release_dev\">pci_release_dev</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_release_capabilities\">pci_release_capabilities</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_cfg_space_size - get the configuration space size of the PCI device.</span>", 
"<span class=\"comment\"> * @dev: PCI device</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Regular PCI devices have 256 bytes, but PCI-X 2 and PCI Express devices</span>", 
"<span class=\"comment\"> * have 4096 bytes.  Even if the device is capable, that doesn't mean we can</span>", 
"<span class=\"comment\"> * access it.  Maybe we don't have a way to generate extended config space</span>", 
"<span class=\"comment\"> * accesses, or the device is behind a reverse Express bridge.  So we try</span>", 
"<span class=\"comment\"> * reading the dword at 0x100 which must either be 0 or a valid extended</span>", 
"<span class=\"comment\"> * capability header.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_cfg_space_size_ext\">pci_cfg_space_size_ext</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#PCI_CFG_SPACE_SIZE\">PCI_CFG_SPACE_SIZE</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a>, &amp;<a class=\"id\" href=\"#status\">status</a>) != <a class=\"id\" href=\"#PCIBIOS_SUCCESSFUL\">PCIBIOS_SUCCESSFUL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#status\">status</a> == 0xffffffff)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PCI_CFG_SPACE_EXP_SIZE\">PCI_CFG_SPACE_EXP_SIZE</a>;", 
"", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PCI_CFG_SPACE_SIZE\">PCI_CFG_SPACE_SIZE</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#pci_cfg_space_size\">pci_cfg_space_size</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#pos\">pos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#class\">class</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#class\">class</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#class\">class</a> >> 8;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#PCI_CLASS_BRIDGE_HOST\">PCI_CLASS_BRIDGE_HOST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_cfg_space_size_ext\">pci_cfg_space_size_ext</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_pcie_cap\">pci_pcie_cap</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_PCIX\">PCI_CAP_ID_PCIX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + <a class=\"id\" href=\"#PCI_X_STATUS\">PCI_X_STATUS</a>, &amp;<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#status\">status</a> &amp; (<a class=\"id\" href=\"#PCI_X_STATUS_266MHZ\">PCI_X_STATUS_266MHZ</a> | <a class=\"id\" href=\"#PCI_X_STATUS_533MHZ\">PCI_X_STATUS_533MHZ</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fail\">fail</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_cfg_space_size_ext\">pci_cfg_space_size_ext</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
" <a class=\"id\" href=\"#fail\">fail</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#PCI_CFG_SPACE_SIZE\">PCI_CFG_SPACE_SIZE</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_release_bus_bridge_dev\">pci_release_bus_bridge_dev</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#alloc_pci_dev\">alloc_pci_dev</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus_list\">bus_list</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#alloc_pci_dev\">alloc_pci_dev</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Read the config data for a PCI device, sanity-check it</span>", 
"<span class=\"comment\"> * and fill in the dev structure...</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_scan_device\">pci_scan_device</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#devfn\">devfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#delay\">delay</a> = 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_bus_read_config_dword\">pci_bus_read_config_dword</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#PCI_VENDOR_ID\">PCI_VENDOR_ID</a>, &amp;<a class=\"id\" href=\"#l\">l</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* some broken boards return 0 or ~0 if a slot is empty: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> == 0xffffffff || <a class=\"id\" href=\"#l\">l</a> == 0x00000000 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#l\">l</a> == 0x0000ffff || <a class=\"id\" href=\"#l\">l</a> == 0xffff0000)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Configuration request Retry Status */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#l\">l</a> == 0xffff0001) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#msleep\">msleep</a>(<a class=\"id\" href=\"#delay\">delay</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#delay\">delay</a> *= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_bus_read_config_dword\">pci_bus_read_config_dword</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#PCI_VENDOR_ID\">PCI_VENDOR_ID</a>, &amp;<a class=\"id\" href=\"#l\">l</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Card hasn't responded in 60 seconds?  Must be stuck. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#delay\">delay</a> &gt; 60 * 1000) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"pci %04x:%02x:%02x.%d: not \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"responding\\n\", <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#bus\">bus</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>, <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#devfn\">devfn</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#devfn\">devfn</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#alloc_pci_dev\">alloc_pci_dev</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devfn\">devfn</a> = <a class=\"id\" href=\"#devfn\">devfn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#vendor\">vendor</a> = <a class=\"id\" href=\"#l\">l</a> &amp; 0xffff;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#device\">device</a> = (<a class=\"id\" href=\"#l\">l</a> >> 16) &amp; 0xffff;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_setup_device\">pci_setup_device</a>(<a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_init_capabilities\">pci_init_capabilities</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* MSI/MSI-X list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_msi_init_pci_dev\">pci_msi_init_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Buffers for saving PCIe and PCI-X capabilities */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_allocate_cap_save_buffers\">pci_allocate_cap_save_buffers</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Power Management */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_init\">pci_pm_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#platform_pci_wakeup_init\">platform_pci_wakeup_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Vital Product Data */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_vpd_pci22_init\">pci_vpd_pci22_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Alternative Routing-ID Forwarding */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_enable_ari\">pci_enable_ari</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Single Root I/O Virtualization */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_iov_init\">pci_iov_init</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Enable ACS P2P upstream forwarding */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_enable_acs\">pci_enable_acs</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#pci_device_add\">pci_device_add</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_initialize\">device_initialize</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#pci_release_dev\">pci_release_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_get\">pci_dev_get</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#dma_mask\">dma_mask</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_mask\">dma_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#dma_parms\">dma_parms</a> = &amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dma_parms\">dma_parms</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#coherent_dma_mask\">coherent_dma_mask</a> = 0xffffffffull;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_dma_max_seg_size\">pci_set_dma_max_seg_size</a>(<a class=\"id\" href=\"#dev\">dev</a>, 65536);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_set_dma_seg_boundary\">pci_set_dma_seg_boundary</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0xffffffff);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Fix up broken headers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_header\">pci_fixup_header</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Clear the state_saved flag. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize various capabilities */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_init_capabilities\">pci_init_capabilities</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Add the device to our list of discovered devices</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and the bus list for fixup functions, etc.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#bus_list\">bus_list</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#devices\">devices</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#pci_scan_single_device\">pci_scan_single_device</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#devfn\">devfn</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_get_slot\">pci_get_slot</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_scan_device\">pci_scan_device</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_device_add\">pci_device_add</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dev\">dev</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_scan_single_device\">pci_scan_single_device</a>);", 
"", 
"static unsigned <a class=\"id\" href=\"#next_ari_fn\">next_ari_fn</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cap\">cap</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#next_fn\">next_fn</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#pci_find_ext_capability\">pci_find_ext_capability</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_EXT_CAP_ID_ARI\">PCI_EXT_CAP_ID_ARI</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_word\">pci_read_config_word</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pos\">pos</a> + 4, &amp;<a class=\"id\" href=\"#cap\">cap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_fn\">next_fn</a> = <a class=\"id\" href=\"#cap\">cap</a> >> 8;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next_fn\">next_fn</a> <= <a class=\"id\" href=\"#fn\">fn</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#next_fn\">next_fn</a>;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#next_trad_fn\">next_trad_fn</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#fn\">fn</a> + 1) % 8;", 
"}", 
"", 
"static unsigned <a class=\"id\" href=\"#no_next_fn\">no_next_fn</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned <a class=\"id\" href=\"#fn\">fn</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#only_one_child\">only_one_child</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a> || !<a class=\"id\" href=\"#pci_is_pcie\">pci_is_pcie</a>(<a class=\"id\" href=\"#parent\">parent</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_ROOT_PORT\">PCI_EXP_TYPE_ROOT_PORT</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#parent\">parent</a>-><a class=\"id\" href=\"#pcie_type\">pcie_type</a> == <a class=\"id\" href=\"#PCI_EXP_TYPE_DOWNSTREAM\">PCI_EXP_TYPE_DOWNSTREAM</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_scan_slot - scan a PCI slot on a bus for devices.</span>", 
"<span class=\"comment\"> * @bus: PCI bus to scan</span>", 
"<span class=\"comment\"> * @devfn: slot number to scan (must have zero function.)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Scan a PCI slot on the specified PCI bus for devices, adding</span>", 
"<span class=\"comment\"> * discovered devices to the @bus-&gt;devices list.  New devices</span>", 
"<span class=\"comment\"> * will not have is_added set.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the number of new devices found.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#pci_scan_slot\">pci_scan_slot</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#devfn\">devfn</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#nr\">nr</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>unsigned (*<a class=\"id\" href=\"#next_fn\">next_fn</a>)(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *, unsigned) = <a class=\"id\" href=\"#no_next_fn\">no_next_fn</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#only_one_child\">only_one_child</a>(<a class=\"id\" href=\"#bus\">bus</a>) && (<a class=\"id\" href=\"#devfn\">devfn</a> &gt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0; <span class=\"comment\">/* Already scanned the entire slot */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_scan_single_device\">pci_scan_single_device</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#is_added\">is_added</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_ari_enabled\">pci_ari_enabled</a>(<a class=\"id\" href=\"#bus\">bus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_fn\">next_fn</a> = <a class=\"id\" href=\"#next_ari_fn\">next_ari_fn</a>;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multifunction\">multifunction</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_fn\">next_fn</a> = <a class=\"id\" href=\"#next_trad_fn\">next_trad_fn</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#next_fn\">next_fn</a>(<a class=\"id\" href=\"#dev\">dev</a>, 0); <a class=\"id\" href=\"#fn\">fn</a> &gt; 0; <a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#next_fn\">next_fn</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#fn\">fn</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_scan_single_device\">pci_scan_single_device</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a> + <a class=\"id\" href=\"#fn\">fn</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#is_added\">is_added</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#multifunction\">multifunction</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* only one slot has pcie device */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a> && <a class=\"id\" href=\"#nr\">nr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcie_aspm_init_link_state\">pcie_aspm_init_link_state</a>(<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#self\">self</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#nr\">nr</a>;", 
"}", 
"", 
"unsigned int <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_scan_child_bus\">pci_scan_child_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#devfn\">devfn</a>, <a class=\"id\" href=\"#pass\">pass</a>, <a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#secondary\">secondary</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"scanning bus\\n\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Go find them, Rover! */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#devfn\">devfn</a> = 0; <a class=\"id\" href=\"#devfn\">devfn</a> &lt; 0x100; <a class=\"id\" href=\"#devfn\">devfn</a> += 8)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_scan_slot\">pci_scan_slot</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#devfn\">devfn</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reserve buses for SR-IOV capability. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> += <a class=\"id\" href=\"#pci_iov_bus_range\">pci_iov_bus_range</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * After performing arch-dependent fixup of the bus, look behind</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * all PCI-to-PCI bridges on this bus.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#is_added\">is_added</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"fixups for bus\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pcibios_fixup_bus\">pcibios_fixup_bus</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_is_root_bus\">pci_is_root_bus</a>(<a class=\"id\" href=\"#bus\">bus</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#is_added\">is_added</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#pass\">pass</a>=0; <a class=\"id\" href=\"#pass\">pass</a> &lt; 2; <a class=\"id\" href=\"#pass\">pass</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_BRIDGE\">PCI_HEADER_TYPE_BRIDGE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_CARDBUS\">PCI_HEADER_TYPE_CARDBUS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#pci_scan_bridge\">pci_scan_bridge</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#pass\">pass</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We've scanned the bus and so we know all about what's on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the other side of any bridges that may be on this bus plus</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * any devices.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Return how far we've got finding sub-buses.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"bus scan returning with max=%02x\\n\", <a class=\"id\" href=\"#max\">max</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> * <a class=\"id\" href=\"#pci_create_bus\">pci_create_bus</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>, void *<a class=\"id\" href=\"#sysdata\">sysdata</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#b\">b</a>, *<a class=\"id\" href=\"#b2\">b2</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#pci_alloc_bus\">pci_alloc_bus</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#b\">b</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>){", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#b\">b</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#sysdata\">sysdata</a> = <a class=\"id\" href=\"#sysdata\">sysdata</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#ops\">ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b2\">b2</a> = <a class=\"id\" href=\"#pci_find_bus\">pci_find_bus</a>(<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#b\">b</a>), <a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b2\">b2</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we already got to this bus through a different bridge, ignore it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_dbg\">dev_dbg</a>(&amp;<a class=\"id\" href=\"#b2\">b2</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"bus already known\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#pci_root_buses\">pci_root_buses</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#parent\">parent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#pci_release_bus_bridge_dev\">pci_release_bus_bridge_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(<a class=\"id\" href=\"#dev\">dev</a>, \"pci%04x:%02x\", <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#b\">b</a>), <a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_register\">device_register</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dev_reg_err\">dev_reg_err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bridge\">bridge</a> = <a class=\"id\" href=\"#get_device\">get_device</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_enable_async_suspend\">device_enable_async_suspend</a>(<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bridge\">bridge</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#parent\">parent</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_node\">set_dev_node</a>(<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bridge\">bridge</a>, <a class=\"id\" href=\"#pcibus_to_node\">pcibus_to_node</a>(<a class=\"id\" href=\"#b\">b</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#class\">class</a> = &amp;<a class=\"id\" href=\"#pcibus_class\">pcibus_class</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#dev\">dev</a>.<a class=\"id\" href=\"#parent\">parent</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bridge\">bridge</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_set_name\">dev_set_name</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#dev\">dev</a>, \"%04x:%02x\", <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#b\">b</a>), <a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_register\">device_register</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#class_dev_reg_err\">class_dev_reg_err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#device_create_file\">device_create_file</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#dev_attr_cpuaffinity\">dev_attr_cpuaffinity</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#dev_create_file_err\">dev_create_file_err</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create legacy_io and legacy_mem files for this bus */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_create_legacy_files\">pci_create_legacy_files</a>(<a class=\"id\" href=\"#b\">b</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#number\">number</a> = <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#secondary\">secondary</a> = <a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#resource\">resource</a>[0] = &amp;<a class=\"id\" href=\"#ioport_resource\">ioport_resource</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#resource\">resource</a>[1] = &amp;<a class=\"id\" href=\"#iomem_resource\">iomem_resource</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#b\">b</a>;", 
"", 
"<a class=\"id\" href=\"#dev_create_file_err\">dev_create_file_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<a class=\"id\" href=\"#class_dev_reg_err\">class_dev_reg_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#device_unregister\">device_unregister</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<a class=\"id\" href=\"#dev_reg_err\">dev_reg_err</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#b\">b</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> * <a class=\"id\" href=\"#__devinit\">__devinit</a> <a class=\"id\" href=\"#pci_scan_bus_parented\">pci_scan_bus_parented</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#parent\">parent</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#bus\">bus</a>, struct <a class=\"id\" href=\"#pci_ops\">pci_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>, void *<a class=\"id\" href=\"#sysdata\">sysdata</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#b\">b</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#pci_create_bus\">pci_create_bus</a>(<a class=\"id\" href=\"#parent\">parent</a>, <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#ops\">ops</a>, <a class=\"id\" href=\"#sysdata\">sysdata</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#b\">b</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a> = <a class=\"id\" href=\"#pci_scan_child_bus\">pci_scan_child_bus</a>(<a class=\"id\" href=\"#b\">b</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#b\">b</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_scan_bus_parented\">pci_scan_bus_parented</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG\">CONFIG_HOTPLUG</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_rescan_bus - scan a PCI bus for devices.</span>", 
"<span class=\"comment\"> * @bus: PCI bus to scan</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Scan a PCI bus and child buses for new devices, adds them,</span>", 
"<span class=\"comment\"> * and enables them.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the max number of subordinate bus discovered.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned int <a class=\"id\" href=\"#__ref\">__ref</a> <a class=\"id\" href=\"#pci_rescan_bus\">pci_rescan_bus</a>(struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = <a class=\"id\" href=\"#pci_scan_child_bus\">pci_scan_child_bus</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dev\">dev</a>, &amp;<a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#devices\">devices</a>, <a class=\"id\" href=\"#bus_list\">bus_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_BRIDGE\">PCI_HEADER_TYPE_BRIDGE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#hdr_type\">hdr_type</a> == <a class=\"id\" href=\"#PCI_HEADER_TYPE_CARDBUS\">PCI_HEADER_TYPE_CARDBUS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_size_bridges\">pci_bus_size_bridges</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#subordinate\">subordinate</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#pci_bus_sem\">pci_bus_sem</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_assign_resources\">pci_bus_assign_resources</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_enable_bridges\">pci_enable_bridges</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_bus_add_devices\">pci_bus_add_devices</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#max\">max</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_rescan_bus\">pci_rescan_bus</a>);", 
"", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_add_new_bus\">pci_add_new_bus</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_scan_slot\">pci_scan_slot</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#pci_scan_bridge\">pci_scan_bridge</a>);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#pci_scan_child_bus\">pci_scan_child_bus</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pci_sort_bf_cmp\">pci_sort_bf_cmp</a>(const struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#d_a\">d_a</a>, const struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#d_b\">d_b</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#a\">a</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#d_a\">d_a</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#b\">b</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#d_b\">d_b</a>);", 
"", 
"<span class=\"ts\"/>if      (<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#bus\">bus</a>) &lt; <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bus\">bus</a>)) return -1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#bus\">bus</a>) &gt; <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bus\">bus</a>)) return  1;", 
"", 
"<span class=\"ts\"/>if      (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> &lt; <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>) return -1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a> &gt; <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>) return  1;", 
"", 
"<span class=\"ts\"/>if      (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#devfn\">devfn</a> &lt; <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#devfn\">devfn</a>) return -1;", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#a\">a</a>-><a class=\"id\" href=\"#devfn\">devfn</a> &gt; <a class=\"id\" href=\"#b\">b</a>-><a class=\"id\" href=\"#devfn\">devfn</a>) return  1;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#pci_sort_breadthfirst\">pci_sort_breadthfirst</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bus_sort_breadthfirst\">bus_sort_breadthfirst</a>(&amp;<a class=\"id\" href=\"#pci_bus_type\">pci_bus_type</a>, &amp;<a class=\"id\" href=\"#pci_sort_bf_cmp\">pci_sort_bf_cmp</a>);", 
"}", 
];
xr_frag_insert('l/39/e4de55600301ff172f919a595f872b3099146a.xr', __xr_tmp);
