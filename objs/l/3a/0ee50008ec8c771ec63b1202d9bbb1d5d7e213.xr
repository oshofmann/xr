var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#class_mask\">class_mask</a> = <a class=\"id\" href=\"#class_mask\">class_mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#driver_data\">driver_data</a> = <a class=\"id\" href=\"#driver_data\">driver_data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_driver\">get_driver</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#driver_attach\">driver_attach</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_driver\">put_driver</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_free_dynids\">pci_free_dynids</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dynid\">pci_dynid</a> *<a class=\"id\" href=\"#dynid\">dynid</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#dynid\">dynid</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dynid\">dynid</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Dynamic device ID manipulation via sysfs is disabled for !CONFIG_HOTPLUG</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG\">CONFIG_HOTPLUG</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * store_new_id - sysfs frontend to pci_add_dynid()</span>", 
"<span class=\"comment\"> * @driver: target device driver</span>", 
"<span class=\"comment\"> * @buf: buffer for scanning device ID data</span>", 
"<span class=\"comment\"> * @count: input size</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Allow PCI IDs to be added to an existing driver via sysfs.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#store_new_id\">store_new_id</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#pdrv\">pdrv</a> = <a class=\"id\" href=\"#to_pci_driver\">to_pci_driver</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ids\">ids</a> = <a class=\"id\" href=\"#pdrv\">pdrv</a>-><a class=\"id\" href=\"#id_table\">id_table</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#subvendor\">subvendor</a>=<a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subdevice\">subdevice</a>=<a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#class\">class</a>=0, <a class=\"id\" href=\"#class_mask\">class_mask</a>=0;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#driver_data\">driver_data</a>=0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fields\">fields</a>=0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fields\">fields</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%x %x %x %x %x %x %lx\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#vendor\">vendor</a>, &amp;<a class=\"id\" href=\"#device\">device</a>, &amp;<a class=\"id\" href=\"#subvendor\">subvendor</a>, &amp;<a class=\"id\" href=\"#subdevice\">subdevice</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#class\">class</a>, &amp;<a class=\"id\" href=\"#class_mask\">class_mask</a>, &amp;<a class=\"id\" href=\"#driver_data\">driver_data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fields\">fields</a> &lt; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Only accept driver_data values that match an existing id_table</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   entry */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ids\">ids</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#ids\">ids</a>-><a class=\"id\" href=\"#vendor\">vendor</a> || <a class=\"id\" href=\"#ids\">ids</a>-><a class=\"id\" href=\"#subvendor\">subvendor</a> || <a class=\"id\" href=\"#ids\">ids</a>-><a class=\"id\" href=\"#class_mask\">class_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#driver_data\">driver_data</a> == <a class=\"id\" href=\"#ids\">ids</a>-><a class=\"id\" href=\"#driver_data\">driver_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ids\">ids</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)<span class=\"ts\"/><span class=\"comment\">/* No match */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#pci_add_dynid\">pci_add_dynid</a>(<a class=\"id\" href=\"#pdrv\">pdrv</a>, <a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#subvendor\">subvendor</a>, <a class=\"id\" href=\"#subdevice\">subdevice</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#class\">class</a>, <a class=\"id\" href=\"#class_mask\">class_mask</a>, <a class=\"id\" href=\"#driver_data\">driver_data</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"static <a class=\"id\" href=\"#DRIVER_ATTR\">DRIVER_ATTR</a>(<a class=\"id\" href=\"#new_id\">new_id</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#store_new_id\">store_new_id</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * store_remove_id - remove a PCI device ID from this driver</span>", 
"<span class=\"comment\"> * @driver: target device driver</span>", 
"<span class=\"comment\"> * @buf: buffer for scanning device ID data</span>", 
"<span class=\"comment\"> * @count: input size</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Removes a dynamic pci device ID to this driver.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#store_remove_id\">store_remove_id</a>(struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#driver\">driver</a>, const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dynid\">pci_dynid</a> *<a class=\"id\" href=\"#dynid\">dynid</a>, *<a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#pdrv\">pdrv</a> = <a class=\"id\" href=\"#to_pci_driver\">to_pci_driver</a>(<a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#subvendor\">subvendor</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#subdevice\">subdevice</a> = <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a>, <a class=\"id\" href=\"#class\">class</a> = 0, <a class=\"id\" href=\"#class_mask\">class_mask</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fields\">fields</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fields\">fields</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%x %x %x %x %x %x\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#vendor\">vendor</a>, &amp;<a class=\"id\" href=\"#device\">device</a>, &amp;<a class=\"id\" href=\"#subvendor\">subvendor</a>, &amp;<a class=\"id\" href=\"#subdevice\">subdevice</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#class\">class</a>, &amp;<a class=\"id\" href=\"#class_mask\">class_mask</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fields\">fields</a> &lt; 2)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#pdrv\">pdrv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_safe\">list_for_each_entry_safe</a>(<a class=\"id\" href=\"#dynid\">dynid</a>, <a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#pdrv\">pdrv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#id\">id</a> = &amp;<a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#vendor\">vendor</a> == <a class=\"id\" href=\"#vendor\">vendor</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#device\">device</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#subvendor\">subvendor</a> == <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a> || <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#subvendor\">subvendor</a> == <a class=\"id\" href=\"#subvendor\">subvendor</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#subdevice\">subdevice</a> == <a class=\"id\" href=\"#PCI_ANY_ID\">PCI_ANY_ID</a> || <a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#subdevice\">subdevice</a> == <a class=\"id\" href=\"#subdevice\">subdevice</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !((<a class=\"id\" href=\"#id\">id</a>-><a class=\"id\" href=\"#class\">class</a> ^ <a class=\"id\" href=\"#class\">class</a>) &amp; <a class=\"id\" href=\"#class_mask\">class_mask</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dynid\">dynid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#pdrv\">pdrv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"static <a class=\"id\" href=\"#DRIVER_ATTR\">DRIVER_ATTR</a>(<a class=\"id\" href=\"#remove_id\">remove_id</a>, <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#store_remove_id\">store_remove_id</a>);", 
"", 
"static int", 
"<a class=\"id\" href=\"#pci_create_newid_file\">pci_create_newid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#probe\">probe</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#driver_create_file\">driver_create_file</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>, &amp;<a class=\"id\" href=\"#driver_attr_new_id\">driver_attr_new_id</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_remove_newid_file\">pci_remove_newid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>, &amp;<a class=\"id\" href=\"#driver_attr_new_id\">driver_attr_new_id</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#pci_create_removeid_file\">pci_create_removeid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#probe\">probe</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#driver_create_file\">driver_create_file</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>,&amp;<a class=\"id\" href=\"#driver_attr_remove_id\">driver_attr_remove_id</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_remove_removeid_file\">pci_remove_removeid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#driver_remove_file\">driver_remove_file</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>, &amp;<a class=\"id\" href=\"#driver_attr_remove_id\">driver_attr_remove_id</a>);", 
"}", 
"#else <span class=\"comment\">/* !CONFIG_HOTPLUG */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_create_newid_file\">pci_create_newid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#pci_remove_newid_file\">pci_remove_newid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>) {}", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#pci_create_removeid_file\">pci_create_removeid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#pci_remove_removeid_file\">pci_remove_removeid_file</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>) {}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_match_id - See if a pci device matches a given pci_id table</span>", 
"<span class=\"comment\"> * @ids: array of PCI device id structures to search in</span>", 
"<span class=\"comment\"> * @dev: the PCI device structure to match against.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Used by a driver to check whether a PCI device present in the</span>", 
"<span class=\"comment\"> * system is in its list of supported devices.  Returns the matching</span>", 
"<span class=\"comment\"> * pci_device_id structure or %NULL if there is no match.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Deprecated, don't use this as it will not catch any dynamic ids</span>", 
"<span class=\"comment\"> * that a driver might want to check for.</span>", 
"<span class=\"comment\"> */</span>", 
"const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#pci_match_id\">pci_match_id</a>(const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#ids\">ids</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ids\">ids</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#ids\">ids</a>-><a class=\"id\" href=\"#vendor\">vendor</a> || <a class=\"id\" href=\"#ids\">ids</a>-><a class=\"id\" href=\"#subvendor\">subvendor</a> || <a class=\"id\" href=\"#ids\">ids</a>-><a class=\"id\" href=\"#class_mask\">class_mask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_match_one_device\">pci_match_one_device</a>(<a class=\"id\" href=\"#ids\">ids</a>, <a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ids\">ids</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ids\">ids</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_match_device - Tell if a PCI device structure has a matching PCI device id structure</span>", 
"<span class=\"comment\"> * @drv: the PCI driver to match against</span>", 
"<span class=\"comment\"> * @dev: the PCI device structure to match against</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Used by a driver to check whether a PCI device present in the</span>", 
"<span class=\"comment\"> * system is in its list of supported devices.  Returns the matching</span>", 
"<span class=\"comment\"> * pci_device_id structure or %NULL if there is no match.</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#pci_match_device\">pci_match_device</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dynid\">pci_dynid</a> *<a class=\"id\" href=\"#dynid\">dynid</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Look at the dynamic ids first, before the static ones */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#dynid\">dynid</a>, &amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#node\">node</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_match_one_device\">pci_match_one_device</a>(&amp;<a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#dynid\">dynid</a>-><a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#dynids\">dynids</a>.<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_match_id\">pci_match_id</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#id_table\">id_table</a>, <a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"struct <a class=\"id\" href=\"#drv_dev_and_id\">drv_dev_and_id</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#id\">id</a>;", 
"};", 
"", 
"static long <a class=\"id\" href=\"#local_pci_probe\">local_pci_probe</a>(void *<a class=\"id\" href=\"#_ddi\">_ddi</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#drv_dev_and_id\">drv_dev_and_id</a> *<a class=\"id\" href=\"#ddi\">ddi</a> = <a class=\"id\" href=\"#_ddi\">_ddi</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a> = &amp;<a class=\"id\" href=\"#ddi\">ddi</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unbound PCI devices are always set to disabled and suspended.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * During probe, the device is set to enabled and active and the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * usage count is incremented.  If the driver supports runtime PM,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it should call pm_runtime_put_noidle() in its probe routine and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * pm_runtime_get_noresume() in its remove routine.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_get_noresume\">pm_runtime_get_noresume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_set_active\">pm_runtime_set_active</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_enable\">pm_runtime_enable</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#ddi\">ddi</a>-><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#probe\">probe</a>(<a class=\"id\" href=\"#ddi\">ddi</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#ddi\">ddi</a>-><a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_disable\">pm_runtime_disable</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_set_suspended\">pm_runtime_set_suspended</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_put_noidle\">pm_runtime_put_noidle</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_call_probe\">pci_call_probe</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#drv_dev_and_id\">drv_dev_and_id</a> <a class=\"id\" href=\"#ddi\">ddi</a> = { <a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#id\">id</a> };", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Execute driver initialization on node where the device's</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   bus is attached to.  This way the driver likely allocates</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   its local memory on the right node without any need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   change it. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#dev_to_node\">dev_to_node</a>(&amp;<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#node\">node</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#cpu\">cpu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_online_cpus\">get_online_cpus</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#cpumask_any_and\">cpumask_any_and</a>(<a class=\"id\" href=\"#cpumask_of_node\">cpumask_of_node</a>(<a class=\"id\" href=\"#node\">node</a>), <a class=\"id\" href=\"#cpu_online_mask\">cpu_online_mask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu\">cpu</a> &lt; <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#work_on_cpu\">work_on_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>, <a class=\"id\" href=\"#local_pci_probe\">local_pci_probe</a>, &amp;<a class=\"id\" href=\"#ddi\">ddi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#local_pci_probe\">local_pci_probe</a>(&amp;<a class=\"id\" href=\"#ddi\">ddi</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_online_cpus\">put_online_cpus</a>();", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#local_pci_probe\">local_pci_probe</a>(&amp;<a class=\"id\" href=\"#ddi\">ddi</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __pci_device_probe()</span>", 
"<span class=\"comment\"> * @drv: driver to call to check if it wants the PCI device</span>", 
"<span class=\"comment\"> * @pci_dev: PCI device being probed</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * returns 0 on success, else error.</span>", 
"<span class=\"comment\"> * side-effect: pci_dev-&gt;driver is set to drv when drv claims pci_dev.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#__pci_device_probe\">__pci_device_probe</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#pci_device_id\">pci_device_id</a> *<a class=\"id\" href=\"#id\">id</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#probe\">probe</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#id\">id</a> = <a class=\"id\" href=\"#pci_match_device\">pci_match_device</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pci_call_probe\">pci_call_probe</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> >= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_device_probe\">pci_device_probe</a>(struct <a class=\"id\" href=\"#device\">device</a> * <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#to_pci_driver\">to_pci_driver</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_get\">pci_dev_get</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#__pci_device_probe\">__pci_device_probe</a>(<a class=\"id\" href=\"#drv\">drv</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_device_remove\">pci_device_remove</a>(struct <a class=\"id\" href=\"#device\">device</a> * <a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> * <a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> * <a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#remove\">remove</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_get_sync\">pm_runtime_get_sync</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#remove\">remove</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_put_noidle\">pm_runtime_put_noidle</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Undo the runtime PM settings in local_pci_probe() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_disable\">pm_runtime_disable</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_set_suspended\">pm_runtime_set_suspended</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_put_noidle\">pm_runtime_put_noidle</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the device is still on, set the power state as \"unknown\",</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since it might change by the next time we load the driver.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> == <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We would love to complain here if pci_dev-&gt;is_enabled is set, that</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the driver should have called pci_disable_device(), but the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unfortunate fact is there are too many odd BIOS and bridge setups</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that don't like drivers doing that all of the time.  </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Oh well, we can dream of sane hardware when we sleep, no matter how</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * horrible the crap we have to deal with is when we are awake...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev_put\">pci_dev_put</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_device_shutdown\">pci_device_shutdown</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#shutdown\">shutdown</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_msi_shutdown\">pci_msi_shutdown</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_msix_shutdown\">pci_msix_shutdown</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_OPS\">CONFIG_PM_OPS</a>", 
"", 
"<span class=\"comment\">/* Auxiliary functions used for system resume and run-time resume. */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * pci_restore_standard_config - restore standard config registers of PCI device</span>", 
"<span class=\"comment\"> * @pci_dev: PCI device to handle</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pci_restore_standard_config\">pci_restore_standard_config</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_update_current_state\">pci_update_current_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pci_set_power_state\">pci_set_power_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_restore_state\">pci_restore_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_pm_default_resume_early\">pci_pm_default_resume_early</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_restore_standard_config\">pci_restore_standard_config</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_resume_early\">pci_fixup_resume_early</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_SLEEP\">CONFIG_PM_SLEEP</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default \"suspend\" method for devices that have no driver provided suspend,</span>", 
"<span class=\"comment\"> * or not even a driver at all (second part).</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#pci_pm_set_unknown_state\">pci_pm_set_unknown_state</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * mark its power state as \"unknown\", since we don't know if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * e.g. the BIOS will change its device state when we suspend.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> == <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> = <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Default \"resume\" method for devices that have no driver provided resume,</span>", 
"<span class=\"comment\"> * or not even a driver at all (second part).</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#pci_pm_reenable_device\">pci_pm_reenable_device</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if the device was enabled before suspend, reenable */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#pci_reenable_device\">pci_reenable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if the device was busmaster before the suspend, make it busmaster</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * again</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#is_busmaster\">is_busmaster</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_set_master\">pci_set_master</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_legacy_suspend\">pci_legacy_suspend</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> * <a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> * <a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PCI PM: Device state not saved by %pF\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend\">suspend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_suspend\">pci_fixup_suspend</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_legacy_suspend_late\">pci_legacy_suspend_late</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#pm_message_t\">pm_message_t</a> <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> * <a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> * <a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend_late\">suspend_late</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend_late\">suspend_late</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend_late\">suspend_late</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PCI PM: Device state not saved by %pF\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend_late\">suspend_late</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_set_unknown_state\">pci_pm_set_unknown_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_legacy_resume_early\">pci_legacy_resume_early</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> * <a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> * <a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume_early\">resume_early</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume_early\">resume_early</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>) : 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_legacy_resume\">pci_legacy_resume</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> * <a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> * <a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_resume\">pci_fixup_resume</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume\">resume</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume\">resume</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>) : <a class=\"id\" href=\"#pci_pm_reenable_device\">pci_pm_reenable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Auxiliary functions used by the new power management framework */</span>", 
"", 
"static void <a class=\"id\" href=\"#pci_pm_default_resume\">pci_pm_default_resume</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_resume\">pci_fixup_resume</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_is_bridge\">pci_is_bridge</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_enable_wake\">pci_enable_wake</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_pm_default_suspend\">pci_pm_default_suspend</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable non-bridge devices without PM support */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_is_bridge\">pci_is_bridge</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_enabled_device\">pci_disable_enabled_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#drv\">drv</a> && (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend\">suspend</a> || <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#suspend_late\">suspend_late</a> || <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume\">resume</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>|| <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#resume_early\">resume_early</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Legacy PM support is used by default, so warn if the new framework is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * supported as well.  Drivers are supposed to support either the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * former, or the latter, but not both at the same time.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#ret\">ret</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#driver\">driver</a>.<a class=\"id\" href=\"#pm\">pm</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/* New power management framework */</span>", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_prepare\">pci_pm_prepare</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * PCI devices suspended at run time need to be resumed at this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * point, because in general it is necessary to reconfigure them for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * system suspend.  Namely, if the device is supposed to wake up the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * system from the sleep state, we may need to reconfigure it for this</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * purpose.  In turn, if the device is not supposed to wake up the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * system from the sleep state, we'll have to prevent it from signaling</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * wake-up.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_resume\">pm_runtime_resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#prepare\">prepare</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#prepare\">prepare</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#pci_pm_complete\">pci_pm_complete</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#complete\">complete</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#complete\">complete</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_PM_SLEEP */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_prepare\">pci_pm_prepare</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_complete\">pci_pm_complete</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_PM_SLEEP */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SUSPEND\">CONFIG_SUSPEND</a>", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_suspend\">pci_pm_suspend</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_suspend\">pci_legacy_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PMSG_SUSPEND\">PMSG_SUSPEND</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_suspend\">pci_pm_default_suspend</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Fixup\">Fixup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend\">suspend</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend\">suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend\">suspend</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PCI PM: State of device not saved by %pF\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend\">suspend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#Fixup\">Fixup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_suspend\">pci_fixup_suspend</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_suspend_noirq\">pci_pm_suspend_noirq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_suspend_late\">pci_legacy_suspend_late</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PMSG_SUSPEND\">PMSG_SUSPEND</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend_noirq\">suspend_noirq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend_noirq\">suspend_noirq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend_noirq\">suspend_noirq</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>    && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PCI PM: State of device not saved by %pF\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#suspend_noirq\">suspend_noirq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_is_bridge\">pci_is_bridge</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_prepare_to_sleep\">pci_prepare_to_sleep</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_set_unknown_state\">pci_pm_set_unknown_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_resume_noirq\">pci_pm_resume_noirq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_resume_early\">pci_pm_default_resume_early</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_resume_early\">pci_legacy_resume_early</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#resume_noirq\">resume_noirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#resume_noirq\">resume_noirq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_resume\">pci_pm_resume</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is necessary for the suspend error path in which resume is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * called without restoring the standard config registers of the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_restore_standard_config\">pci_restore_standard_config</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_resume\">pci_legacy_resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_resume\">pci_pm_default_resume</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#resume\">resume</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#resume\">resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_reenable_device\">pci_pm_reenable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_SUSPEND */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_suspend\">pci_pm_suspend</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_suspend_noirq\">pci_pm_suspend_noirq</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_resume\">pci_pm_resume</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_resume_noirq\">pci_pm_resume_noirq</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_SUSPEND */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HIBERNATION\">CONFIG_HIBERNATION</a>", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_freeze\">pci_pm_freeze</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_suspend\">pci_legacy_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PMSG_FREEZE\">PMSG_FREEZE</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_suspend\">pci_pm_default_suspend</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#freeze\">freeze</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#freeze\">freeze</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#freeze\">freeze</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_freeze_noirq\">pci_pm_freeze_noirq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_suspend_late\">pci_legacy_suspend_late</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PMSG_FREEZE\">PMSG_FREEZE</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#freeze_noirq\">freeze_noirq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#freeze_noirq\">freeze_noirq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#freeze_noirq\">freeze_noirq</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_set_unknown_state\">pci_pm_set_unknown_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_thaw_noirq\">pci_pm_thaw_noirq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_resume_early\">pci_legacy_resume_early</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_update_current_state\">pci_update_current_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#thaw_noirq\">thaw_noirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#thaw_noirq\">thaw_noirq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_thaw\">pci_pm_thaw</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_resume\">pci_legacy_resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#thaw\">thaw</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#thaw\">thaw</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_reenable_device\">pci_pm_reenable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_poweroff\">pci_pm_poweroff</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_suspend\">pci_legacy_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PMSG_HIBERNATE\">PMSG_HIBERNATE</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_suspend\">pci_pm_default_suspend</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#Fixup\">Fixup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#poweroff\">poweroff</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#poweroff\">poweroff</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#poweroff\">poweroff</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#Fixup\">Fixup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_suspend\">pci_fixup_suspend</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_poweroff_noirq\">pci_pm_poweroff_noirq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_suspend_late\">pci_legacy_suspend_late</a>(<a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PMSG_HIBERNATE\">PMSG_HIBERNATE</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#drv\">drv</a> || !<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#poweroff_noirq\">poweroff_noirq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#poweroff_noirq\">poweroff_noirq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#poweroff_noirq\">poweroff_noirq</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> && !<a class=\"id\" href=\"#pci_is_bridge\">pci_is_bridge</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_prepare_to_sleep\">pci_prepare_to_sleep</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_restore_noirq\">pci_pm_restore_noirq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device_driver\">device_driver</a> *<a class=\"id\" href=\"#drv\">drv</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_resume_early\">pci_pm_default_resume_early</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_resume_early\">pci_legacy_resume_early</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#drv\">drv</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a> && <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#restore_noirq\">restore_noirq</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#drv\">drv</a>-><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#restore_noirq\">restore_noirq</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_restore\">pci_pm_restore</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This is necessary for the hibernation error path in which restore is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * called without restoring the standard config registers of the device.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_restore_standard_config\">pci_restore_standard_config</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_has_legacy_pm_support\">pci_has_legacy_pm_support</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#pci_legacy_resume\">pci_legacy_resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_resume\">pci_pm_default_resume</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#restore\">restore</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#restore\">restore</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_reenable_device\">pci_pm_reenable_device</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_HIBERNATION */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_freeze\">pci_pm_freeze</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_freeze_noirq\">pci_pm_freeze_noirq</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_thaw\">pci_pm_thaw</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_thaw_noirq\">pci_pm_thaw_noirq</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_poweroff\">pci_pm_poweroff</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_poweroff_noirq\">pci_pm_poweroff_noirq</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_restore\">pci_pm_restore</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_restore_noirq\">pci_pm_restore_noirq</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_HIBERNATION */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_RUNTIME\">CONFIG_PM_RUNTIME</a>", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_runtime_suspend\">pci_pm_runtime_suspend</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_power_t\">pci_power_t</a> <a class=\"id\" href=\"#prev\">prev</a> = <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a> || !<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_suspend\">runtime_suspend</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_suspend\">runtime_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#suspend_report_result\">suspend_report_result</a>(<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_suspend\">runtime_suspend</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_suspend\">pci_fixup_suspend</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a> && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>", 
"<span class=\"ts\"/>    && <a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#PCI_UNKNOWN\">PCI_UNKNOWN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ONCE\">WARN_ONCE</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#current_state\">current_state</a> != <a class=\"id\" href=\"#prev\">prev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"PCI PM: State of device not saved by %pF\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_suspend\">runtime_suspend</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pci_dev\">pci_dev</a>-><a class=\"id\" href=\"#state_saved\">state_saved</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_save_state\">pci_save_state</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_finish_runtime_suspend\">pci_finish_runtime_suspend</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_runtime_resume\">pci_pm_runtime_resume</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pci_dev\">pci_dev</a> *<a class=\"id\" href=\"#pci_dev\">pci_dev</a> = <a class=\"id\" href=\"#to_pci_dev\">to_pci_dev</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a> || !<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_resume\">runtime_resume</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pm_default_resume_early\">pci_pm_default_resume_early</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__pci_enable_wake\">__pci_enable_wake</a>(<a class=\"id\" href=\"#pci_dev\">pci_dev</a>, <a class=\"id\" href=\"#PCI_D0\">PCI_D0</a>, <a class=\"id\" href=\"#true\">true</a>, <a class=\"id\" href=\"#false\">false</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_fixup_device\">pci_fixup_device</a>(<a class=\"id\" href=\"#pci_fixup_resume\">pci_fixup_resume</a>, <a class=\"id\" href=\"#pci_dev\">pci_dev</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_resume\">runtime_resume</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#pci_pm_runtime_idle\">pci_pm_runtime_idle</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> *<a class=\"id\" href=\"#pm\">pm</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a> ? <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#driver\">driver</a>-><a class=\"id\" href=\"#pm\">pm</a> : <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pm\">pm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_idle\">runtime_idle</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#pm\">pm</a>-><a class=\"id\" href=\"#runtime_idle\">runtime_idle</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pm_runtime_suspend\">pm_runtime_suspend</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#else <span class=\"comment\">/* !CONFIG_PM_RUNTIME */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_runtime_suspend\">pci_pm_runtime_suspend</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_runtime_resume\">pci_pm_runtime_resume</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#pci_pm_runtime_idle\">pci_pm_runtime_idle</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !CONFIG_PM_RUNTIME */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PM_OPS\">CONFIG_PM_OPS</a>", 
"", 
"const struct <a class=\"id\" href=\"#dev_pm_ops\">dev_pm_ops</a> <a class=\"id\" href=\"#pci_dev_pm_ops\">pci_dev_pm_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#prepare\">prepare</a> = <a class=\"id\" href=\"#pci_pm_prepare\">pci_pm_prepare</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#complete\">complete</a> = <a class=\"id\" href=\"#pci_pm_complete\">pci_pm_complete</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend\">suspend</a> = <a class=\"id\" href=\"#pci_pm_suspend\">pci_pm_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume\">resume</a> = <a class=\"id\" href=\"#pci_pm_resume\">pci_pm_resume</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freeze\">freeze</a> = <a class=\"id\" href=\"#pci_pm_freeze\">pci_pm_freeze</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#thaw\">thaw</a> = <a class=\"id\" href=\"#pci_pm_thaw\">pci_pm_thaw</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poweroff\">poweroff</a> = <a class=\"id\" href=\"#pci_pm_poweroff\">pci_pm_poweroff</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#restore\">restore</a> = <a class=\"id\" href=\"#pci_pm_restore\">pci_pm_restore</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#suspend_noirq\">suspend_noirq</a> = <a class=\"id\" href=\"#pci_pm_suspend_noirq\">pci_pm_suspend_noirq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#resume_noirq\">resume_noirq</a> = <a class=\"id\" href=\"#pci_pm_resume_noirq\">pci_pm_resume_noirq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freeze_noirq\">freeze_noirq</a> = <a class=\"id\" href=\"#pci_pm_freeze_noirq\">pci_pm_freeze_noirq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#thaw_noirq\">thaw_noirq</a> = <a class=\"id\" href=\"#pci_pm_thaw_noirq\">pci_pm_thaw_noirq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#poweroff_noirq\">poweroff_noirq</a> = <a class=\"id\" href=\"#pci_pm_poweroff_noirq\">pci_pm_poweroff_noirq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#restore_noirq\">restore_noirq</a> = <a class=\"id\" href=\"#pci_pm_restore_noirq\">pci_pm_restore_noirq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#runtime_suspend\">runtime_suspend</a> = <a class=\"id\" href=\"#pci_pm_runtime_suspend\">pci_pm_runtime_suspend</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#runtime_resume\">runtime_resume</a> = <a class=\"id\" href=\"#pci_pm_runtime_resume\">pci_pm_runtime_resume</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#runtime_idle\">runtime_idle</a> = <a class=\"id\" href=\"#pci_pm_runtime_idle\">pci_pm_runtime_idle</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_PM_OPS_PTR\">PCI_PM_OPS_PTR</a><span class=\"ts\"/>(&amp;<a class=\"id\" href=\"#pci_dev_pm_ops\">pci_dev_pm_ops</a>)", 
"", 
"#else <span class=\"comment\">/* !COMFIG_PM_OPS */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_PM_OPS_PTR\">PCI_PM_OPS_PTR</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* !COMFIG_PM_OPS */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __pci_register_driver - register a new pci driver</span>", 
"<span class=\"comment\"> * @drv: the driver structure to register</span>", 
"<span class=\"comment\"> * @owner: owner module of drv</span>", 
"<span class=\"comment\"> * @mod_name: module name string</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * Adds the driver structure to the list of registered drivers.</span>", 
"<span class=\"comment\"> * Returns a negative value on error, otherwise 0. </span>", 
"<span class=\"comment\"> * If no error occurred, the driver remains registered even if </span>", 
"<span class=\"comment\"> * no device was claimed during registration.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__pci_register_driver\">__pci_register_driver</a>(struct <a class=\"id\" href=\"#pci_driver\">pci_driver</a> *<a class=\"id\" href=\"#drv\">drv</a>, struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#mod_name\">mod_name</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
];
xr_frag_insert('l/3a/0ee50008ec8c771ec63b1202d9bbb1d5d7e213.xr', __xr_tmp);
