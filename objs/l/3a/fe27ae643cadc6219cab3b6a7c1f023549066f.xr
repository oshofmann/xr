var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_LINUX_BINFMTS_H\">_LINUX_BINFMTS_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_LINUX_BINFMTS_H\">_LINUX_BINFMTS_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These are the maximum length and maximum number of strings passed to the</span>", 
"<span class=\"comment\"> * execve() system call.  MAX_ARG_STRLEN is essentially random but serves to</span>", 
"<span class=\"comment\"> * prevent the kernel from being unduly impacted by misaddressed pointers.</span>", 
"<span class=\"comment\"> * MAX_ARG_STRINGS is chosen to fit in a signed 32-bit integer.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ARG_STRLEN\">MAX_ARG_STRLEN</a> (<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> * 32)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ARG_STRINGS\">MAX_ARG_STRINGS</a> 0x7FFFFFFF", 
"", 
"<span class=\"comment\">/* sizeof(linux_binprm-&gt;buf) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BINPRM_BUF_SIZE\">BINPRM_BUF_SIZE</a> 128", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CORENAME_MAX_SIZE\">CORENAME_MAX_SIZE</a> 128", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure is used to hold the arguments that are used when loading binaries.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a>{", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#BINPRM_BUF_SIZE\">BINPRM_BUF_SIZE</a>];", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_MMU\">CONFIG_MMU</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_ARG_PAGES\">MAX_ARG_PAGES</a><span class=\"ts\"/>32", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>[<a class=\"id\" href=\"#MAX_ARG_PAGES\">MAX_ARG_PAGES</a>];", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#p\">p</a>; <span class=\"comment\">/* current top of mem */</span>", 
"<span class=\"ts\"/>unsigned int", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cred_prepared\">cred_prepared</a>:1,<span class=\"comment\">/* true if creds already prepared (multiple</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * preps happen for interpreters) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cap_effective\">cap_effective</a>:1;<span class=\"comment\">/* true if has elevated effective capabilities,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * false if not; except for init which inherits</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * its parent's caps anyway */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__alpha__\">__alpha__</a>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#taso\">taso</a>:1;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#recursion_depth\">recursion_depth</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;<span class=\"ts\"/><span class=\"comment\">/* new credentials */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#unsafe\">unsafe</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* how unsafe this exec is (mask of LSM_UNSAFE_*) */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#per_clear\">per_clear</a>;<span class=\"ts\"/><span class=\"comment\">/* bits to clear in current-&gt;personality */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#argc\">argc</a>, <a class=\"id\" href=\"#envc\">envc</a>;", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#filename\">filename</a>;<span class=\"ts\"/><span class=\"comment\">/* Name of binary as seen by procps */</span>", 
"<span class=\"ts\"/>const char * <a class=\"id\" href=\"#interp\">interp</a>;<span class=\"ts\"/><span class=\"comment\">/* Name of the binary really executed. Most</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   of the time same as filename, but could be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   different for binfmt_{misc,script} */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#interp_flags\">interp_flags</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#interp_data\">interp_data</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#loader\">loader</a>, <a class=\"id\" href=\"#exec\">exec</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BINPRM_FLAGS_ENFORCE_NONDUMP_BIT\">BINPRM_FLAGS_ENFORCE_NONDUMP_BIT</a> 0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BINPRM_FLAGS_ENFORCE_NONDUMP\">BINPRM_FLAGS_ENFORCE_NONDUMP</a> (1 << <a class=\"id\" href=\"#BINPRM_FLAGS_ENFORCE_NONDUMP_BIT\">BINPRM_FLAGS_ENFORCE_NONDUMP_BIT</a>)", 
"", 
"<span class=\"comment\">/* fd of the binary should be passed to the interpreter */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BINPRM_FLAGS_EXECFD_BIT\">BINPRM_FLAGS_EXECFD_BIT</a> 1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BINPRM_FLAGS_EXECFD\">BINPRM_FLAGS_EXECFD</a> (1 << <a class=\"id\" href=\"#BINPRM_FLAGS_EXECFD_BIT\">BINPRM_FLAGS_EXECFD_BIT</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BINPRM_MAX_RECURSION\">BINPRM_MAX_RECURSION</a> 4", 
"", 
"<span class=\"comment\">/* Function parameter for binfmt-&gt;coredump */</span>", 
"struct <a class=\"id\" href=\"#coredump_params\">coredump_params</a> {", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#signr\">signr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#mm_flags\">mm_flags</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This structure defines the functions that are used to load the binary formats that</span>", 
"<span class=\"comment\"> * linux accepts.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#linux_binfmt\">linux_binfmt</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#lh\">lh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#module\">module</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#load_binary\">load_binary</a>)(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *, struct  <a class=\"id\" href=\"#pt_regs\">pt_regs</a> * <a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#load_shlib\">load_shlib</a>)(struct <a class=\"id\" href=\"#file\">file</a> *);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#core_dump\">core_dump</a>)(struct <a class=\"id\" href=\"#coredump_params\">coredump_params</a> *<a class=\"id\" href=\"#cprm\">cprm</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#min_coredump\">min_coredump</a>;<span class=\"ts\"/><span class=\"comment\">/* minimal dump size */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#hasvdso\">hasvdso</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#__register_binfmt\">__register_binfmt</a>(struct <a class=\"id\" href=\"#linux_binfmt\">linux_binfmt</a> *<a class=\"id\" href=\"#fmt\">fmt</a>, int <a class=\"id\" href=\"#insert\">insert</a>);", 
"", 
"<span class=\"comment\">/* Registration of default binfmt handlers */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#register_binfmt\">register_binfmt</a>(struct <a class=\"id\" href=\"#linux_binfmt\">linux_binfmt</a> *<a class=\"id\" href=\"#fmt\">fmt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__register_binfmt\">__register_binfmt</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, 0);", 
"}", 
"<span class=\"comment\">/* Same as above, but adds a new binfmt at the top of the list */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#insert_binfmt\">insert_binfmt</a>(struct <a class=\"id\" href=\"#linux_binfmt\">linux_binfmt</a> *<a class=\"id\" href=\"#fmt\">fmt</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__register_binfmt\">__register_binfmt</a>(<a class=\"id\" href=\"#fmt\">fmt</a>, 1);", 
"}", 
"", 
"extern void <a class=\"id\" href=\"#unregister_binfmt\">unregister_binfmt</a>(struct <a class=\"id\" href=\"#linux_binfmt\">linux_binfmt</a> *);", 
"", 
"extern int <a class=\"id\" href=\"#prepare_binprm\">prepare_binprm</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *);", 
"extern int <a class=\"id\" href=\"#__must_check\">__must_check</a> <a class=\"id\" href=\"#remove_arg_zero\">remove_arg_zero</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *);", 
"extern int <a class=\"id\" href=\"#search_binary_handler\">search_binary_handler</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *,struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *);", 
"extern int <a class=\"id\" href=\"#flush_old_exec\">flush_old_exec</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> * <a class=\"id\" href=\"#bprm\">bprm</a>);", 
"extern void <a class=\"id\" href=\"#setup_new_exec\">setup_new_exec</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> * <a class=\"id\" href=\"#bprm\">bprm</a>);", 
"", 
"extern int <a class=\"id\" href=\"#suid_dumpable\">suid_dumpable</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SUID_DUMP_DISABLE\">SUID_DUMP_DISABLE</a><span class=\"ts\"/>0<span class=\"ts\"/><span class=\"comment\">/* No setuid dumping */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SUID_DUMP_USER\">SUID_DUMP_USER</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* Dump as user of process */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SUID_DUMP_ROOT\">SUID_DUMP_ROOT</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* Dump as root */</span>", 
"", 
"<span class=\"comment\">/* Stack area protections */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXSTACK_DEFAULT\">EXSTACK_DEFAULT</a>   0<span class=\"ts\"/><span class=\"comment\">/* Whatever the arch defaults to */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXSTACK_DISABLE_X\">EXSTACK_DISABLE_X</a> 1<span class=\"ts\"/><span class=\"comment\">/* Disable executable stacks */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#EXSTACK_ENABLE_X\">EXSTACK_ENABLE_X</a>  2<span class=\"ts\"/><span class=\"comment\">/* Enable executable stacks */</span>", 
"", 
"extern int <a class=\"id\" href=\"#setup_arg_pages\">setup_arg_pages</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> * <a class=\"id\" href=\"#bprm\">bprm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#stack_top\">stack_top</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   int <a class=\"id\" href=\"#executable_stack\">executable_stack</a>);", 
"extern int <a class=\"id\" href=\"#bprm_mm_init\">bprm_mm_init</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"extern int <a class=\"id\" href=\"#copy_strings_kernel\">copy_strings_kernel</a>(int <a class=\"id\" href=\"#argc\">argc</a>, const char *const *<a class=\"id\" href=\"#argv\">argv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"extern int <a class=\"id\" href=\"#prepare_bprm_creds\">prepare_bprm_creds</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"extern void <a class=\"id\" href=\"#install_exec_creds\">install_exec_creds</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"extern void <a class=\"id\" href=\"#do_coredump\">do_coredump</a>(long <a class=\"id\" href=\"#signr\">signr</a>, int <a class=\"id\" href=\"#exit_code\">exit_code</a>, struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>);", 
"extern void <a class=\"id\" href=\"#set_binfmt\">set_binfmt</a>(struct <a class=\"id\" href=\"#linux_binfmt\">linux_binfmt</a> *<a class=\"id\" href=\"#new\">new</a>);", 
"extern void <a class=\"id\" href=\"#free_bprm\">free_bprm</a>(struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_BINFMTS_H */</span>", 
];
xr_frag_insert('l/3a/fe27ae643cadc6219cab3b6a7c1f023549066f.xr', __xr_tmp);
