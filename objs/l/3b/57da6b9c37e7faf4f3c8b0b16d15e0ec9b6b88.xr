var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2007-2009 Advanced Micro Devices, Inc.</span>", 
"<span class=\"comment\"> * Author: Joerg Roedel &lt;joerg.roedel@amd.com&gt;</span>", 
"<span class=\"comment\"> *         Leo Duran &lt;leo.duran@amd.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify it</span>", 
"<span class=\"comment\"> * under the terms of the GNU General Public License version 2 as published</span>", 
"<span class=\"comment\"> * by the Free Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is distributed in the hope that it will be useful,</span>", 
"<span class=\"comment\"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>", 
"<span class=\"comment\"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>", 
"<span class=\"comment\"> * GNU General Public License for more details.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * You should have received a copy of the GNU General Public License</span>", 
"<span class=\"comment\"> * along with this program; if not, write to the Free Software</span>", 
"<span class=\"comment\"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#msi\">msi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci\">pci</a>-<a class=\"id\" href=\"#direct\">direct</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#amd_iommu_proto\">amd_iommu_proto</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#amd_iommu_types\">amd_iommu_types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#amd_iommu\">amd_iommu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#iommu\">iommu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#gart\">gart</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * definitions for the ACPI scanning code</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVRS_HEADER_LENGTH\">IVRS_HEADER_LENGTH</a> 48", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_IVHD_TYPE\">ACPI_IVHD_TYPE</a>                  0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_IVMD_TYPE_ALL\">ACPI_IVMD_TYPE_ALL</a>              0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_IVMD_TYPE\">ACPI_IVMD_TYPE</a>                  0x21", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_IVMD_TYPE_RANGE\">ACPI_IVMD_TYPE_RANGE</a>            0x22", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_ALL\">IVHD_DEV_ALL</a>                    0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_SELECT\">IVHD_DEV_SELECT</a>                 0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_SELECT_RANGE_START\">IVHD_DEV_SELECT_RANGE_START</a>     0x03", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_RANGE_END\">IVHD_DEV_RANGE_END</a>              0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_ALIAS\">IVHD_DEV_ALIAS</a>                  0x42", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_ALIAS_RANGE\">IVHD_DEV_ALIAS_RANGE</a>            0x43", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_EXT_SELECT\">IVHD_DEV_EXT_SELECT</a>             0x46", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_DEV_EXT_SELECT_RANGE\">IVHD_DEV_EXT_SELECT_RANGE</a>       0x47", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_FLAG_HT_TUN_EN_MASK\">IVHD_FLAG_HT_TUN_EN_MASK</a>        0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_FLAG_PASSPW_EN_MASK\">IVHD_FLAG_PASSPW_EN_MASK</a>        0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_FLAG_RESPASSPW_EN_MASK\">IVHD_FLAG_RESPASSPW_EN_MASK</a>     0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVHD_FLAG_ISOC_EN_MASK\">IVHD_FLAG_ISOC_EN_MASK</a>          0x08", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVMD_FLAG_EXCL_RANGE\">IVMD_FLAG_EXCL_RANGE</a>            0x08", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IVMD_FLAG_UNITY_MAP\">IVMD_FLAG_UNITY_MAP</a>             0x01", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_INITPASS\">ACPI_DEVFLAG_INITPASS</a>           0x01", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_EXTINT\">ACPI_DEVFLAG_EXTINT</a>             0x02", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_NMI\">ACPI_DEVFLAG_NMI</a>                0x04", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_SYSMGT1\">ACPI_DEVFLAG_SYSMGT1</a>            0x10", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_SYSMGT2\">ACPI_DEVFLAG_SYSMGT2</a>            0x20", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_LINT0\">ACPI_DEVFLAG_LINT0</a>              0x40", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_LINT1\">ACPI_DEVFLAG_LINT1</a>              0x80", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ACPI_DEVFLAG_ATSDIS\">ACPI_DEVFLAG_ATSDIS</a>             0x10000000", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ACPI table definitions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These data structures are laid over the table to parse the important values</span>", 
"<span class=\"comment\"> * out of it.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * structure describing one IOMMU in the ACPI table. Typically followed by one</span>", 
"<span class=\"comment\"> * or more ivhd_entrys.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#mmio_phys\">mmio_phys</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#pci_seg\">pci_seg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#info\">info</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#reserved\">reserved</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * A device entry describing which devices a specific IOMMU translates and</span>", 
"<span class=\"comment\"> * which requestor ids they use.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ivhd_entry\">ivhd_entry</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ext\">ext</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * An AMD IOMMU memory definition structure. It defines things like exclusion</span>", 
"<span class=\"comment\"> * ranges for devices and regions that should be unity mapped.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ivmd_header\">ivmd_header</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#aux\">aux</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#resv\">resv</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#range_start\">range_start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#range_length\">range_length</a>;", 
"} <a class=\"id\" href=\"#__attribute__\">__attribute__</a>((<a class=\"id\" href=\"#packed\">packed</a>));", 
"", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#amd_iommu_dump\">amd_iommu_dump</a>;", 
"", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#amd_iommu_detected\">amd_iommu_detected</a>;", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#amd_iommu_disabled\">amd_iommu_disabled</a>;", 
"", 
"<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#amd_iommu_last_bdf\">amd_iommu_last_bdf</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* largest PCI device id we have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   to handle */</span>", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#amd_iommu_unity_map\">amd_iommu_unity_map</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* a list of required unity mappings</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   we find in ACPI */</span>", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#amd_iommu_unmap_flush\">amd_iommu_unmap_flush</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if true, flush on every unmap */</span>", 
"", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#amd_iommu_list\">amd_iommu_list</a>);<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* list of all AMD IOMMUs in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   system */</span>", 
"", 
"<span class=\"comment\">/* Array to assign indices to IOMMUs*/</span>", 
"struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#amd_iommus\">amd_iommus</a>[<a class=\"id\" href=\"#MAX_IOMMUS\">MAX_IOMMUS</a>];", 
"int <a class=\"id\" href=\"#amd_iommus_present\">amd_iommus_present</a>;", 
"", 
"<span class=\"comment\">/* IOMMUs have a non-present cache? */</span>", 
"<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#amd_iommu_np_cache\">amd_iommu_np_cache</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The ACPI table parsing functions set this variable on an error</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__initdata\">__initdata</a> <a class=\"id\" href=\"#amd_iommu_init_err\">amd_iommu_init_err</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * List of protection domains - used during resume</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#amd_iommu_pd_list\">amd_iommu_pd_list</a>);", 
"<a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> <a class=\"id\" href=\"#amd_iommu_pd_lock\">amd_iommu_pd_lock</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Pointer to the device table which is shared by all AMD IOMMUs</span>", 
"<span class=\"comment\"> * it is indexed by the PCI device id or the HT unit id and contains</span>", 
"<span class=\"comment\"> * information about the domain the device belongs to as well as the</span>", 
"<span class=\"comment\"> * page table root pointer.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#dev_table_entry\">dev_table_entry</a> *<a class=\"id\" href=\"#amd_iommu_dev_table\">amd_iommu_dev_table</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The alias table is a driver specific data structure which contains the</span>", 
"<span class=\"comment\"> * mappings of the PCI device ids to the actual requestor ids on the IOMMU.</span>", 
"<span class=\"comment\"> * More than one device can share the same requestor id.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u16\">u16</a> *<a class=\"id\" href=\"#amd_iommu_alias_table\">amd_iommu_alias_table</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The rlookup table is used to find the IOMMU which is responsible</span>", 
"<span class=\"comment\"> * for a specific device. It is also indexed by the PCI device id.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> **<a class=\"id\" href=\"#amd_iommu_rlookup_table\">amd_iommu_rlookup_table</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * AMD IOMMU allows up to 2^16 differend protection domains. This is a bitmap</span>", 
"<span class=\"comment\"> * to know which ones are already in use.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long *<a class=\"id\" href=\"#amd_iommu_pd_alloc_bitmap\">amd_iommu_pd_alloc_bitmap</a>;", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#dev_table_size\">dev_table_size</a>;<span class=\"ts\"/><span class=\"comment\">/* size of the device table */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#alias_table_size\">alias_table_size</a>;<span class=\"ts\"/><span class=\"comment\">/* size of the alias table */</span>", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#rlookup_table_size\">rlookup_table_size</a>;<span class=\"ts\"/><span class=\"comment\">/* size if the rlookup table */</span>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#update_last_devid\">update_last_devid</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#devid\">devid</a> &gt; <a class=\"id\" href=\"#amd_iommu_last_bdf\">amd_iommu_last_bdf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_last_bdf\">amd_iommu_last_bdf</a> = <a class=\"id\" href=\"#devid\">devid</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#tbl_size\">tbl_size</a>(int <a class=\"id\" href=\"#entry_size\">entry_size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#shift\">shift</a> = <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#get_order\">get_order</a>(((int)<a class=\"id\" href=\"#amd_iommu_last_bdf\">amd_iommu_last_bdf</a> + 1) * <a class=\"id\" href=\"#entry_size\">entry_size</a>);", 
"", 
"<span class=\"ts\"/>return 1UL << <a class=\"id\" href=\"#shift\">shift</a>;", 
"}", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * AMD IOMMU MMIO register space handling functions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * These functions are used to program the IOMMU device registers in</span>", 
"<span class=\"comment\"> * MMIO space required for that driver.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function set the exclusion range in the IOMMU. DMA accesses to the</span>", 
"<span class=\"comment\"> * exclusion range are passed through untranslated</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#iommu_set_exclusion_range\">iommu_set_exclusion_range</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#exclusion_start\">exclusion_start</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#limit\">limit</a> = (<a class=\"id\" href=\"#start\">start</a> + <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#exclusion_length\">exclusion_length</a>) &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#exclusion_start\">exclusion_start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#start\">start</a> | <a class=\"id\" href=\"#MMIO_EXCL_ENABLE_MASK\">MMIO_EXCL_ENABLE_MASK</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy_toio\">memcpy_toio</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EXCL_BASE_OFFSET\">MMIO_EXCL_BASE_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#entry\">entry</a>, sizeof(<a class=\"id\" href=\"#entry\">entry</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#limit\">limit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy_toio\">memcpy_toio</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EXCL_LIMIT_OFFSET\">MMIO_EXCL_LIMIT_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#entry\">entry</a>, sizeof(<a class=\"id\" href=\"#entry\">entry</a>));", 
"}", 
"", 
"<span class=\"comment\">/* Programs the physical address of the device table into the IOMMU hardware */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#iommu_set_device_table\">iommu_set_device_table</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#amd_iommu_dev_table\">amd_iommu_dev_table</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> |= (<a class=\"id\" href=\"#dev_table_size\">dev_table_size</a> >> 12) - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy_toio\">memcpy_toio</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_DEV_TABLE_OFFSET\">MMIO_DEV_TABLE_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#entry\">entry</a>, sizeof(<a class=\"id\" href=\"#entry\">entry</a>));", 
"}", 
"", 
"<span class=\"comment\">/* Generic functions to enable/disable certain features of the IOMMU. */</span>", 
"static void <a class=\"id\" href=\"#iommu_feature_enable\">iommu_feature_enable</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bit\">bit</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ctrl\">ctrl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl\">ctrl</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CONTROL_OFFSET\">MMIO_CONTROL_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl\">ctrl</a> |= (1 << <a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#ctrl\">ctrl</a>, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CONTROL_OFFSET\">MMIO_CONTROL_OFFSET</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_feature_disable\">iommu_feature_disable</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bit\">bit</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ctrl\">ctrl</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl\">ctrl</a> = <a class=\"id\" href=\"#readl\">readl</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CONTROL_OFFSET\">MMIO_CONTROL_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ctrl\">ctrl</a> &= ~(1 << <a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(<a class=\"id\" href=\"#ctrl\">ctrl</a>, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CONTROL_OFFSET\">MMIO_CONTROL_OFFSET</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Function to enable the hardware */</span>", 
"static void <a class=\"id\" href=\"#iommu_enable\">iommu_enable</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"AMD-Vi: Enabling IOMMU at %s cap 0x%hx\\n\",", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#dev_name\">dev_name</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#dev\">dev</a>), <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_enable\">iommu_feature_enable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_IOMMU_EN\">CONTROL_IOMMU_EN</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_disable\">iommu_disable</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable command buffer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_disable\">iommu_feature_disable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_CMDBUF_EN\">CONTROL_CMDBUF_EN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable event logging and event interrupts */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_disable\">iommu_feature_disable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_EVT_INT_EN\">CONTROL_EVT_INT_EN</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_disable\">iommu_feature_disable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_EVT_LOG_EN\">CONTROL_EVT_LOG_EN</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disable IOMMU hardware itself */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_disable\">iommu_feature_disable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_IOMMU_EN\">CONTROL_IOMMU_EN</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * mapping and unmapping functions for the IOMMU MMIO space. Each AMD IOMMU in</span>", 
"<span class=\"comment\"> * the system has one.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#iommu_map_mmio_space\">iommu_map_mmio_space</a>(<a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#request_mem_region\">request_mem_region</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#MMIO_REGION_LENGTH\">MMIO_REGION_LENGTH</a>, \"amd_iommu\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"AMD-Vi: Can not reserve memory region %llx for mmio\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_err\">pr_err</a>(\"AMD-Vi: This is a BIOS bug. Please contact your hardware vendor\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ioremap_nocache\">ioremap_nocache</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#MMIO_REGION_LENGTH\">MMIO_REGION_LENGTH</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#MMIO_REGION_LENGTH\">MMIO_REGION_LENGTH</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#iommu_unmap_mmio_space\">iommu_unmap_mmio_space</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iounmap\">iounmap</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_mem_region\">release_mem_region</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_phys\">mmio_phys</a>, <a class=\"id\" href=\"#MMIO_REGION_LENGTH\">MMIO_REGION_LENGTH</a>);", 
"}", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The functions below belong to the first pass of AMD IOMMU ACPI table</span>", 
"<span class=\"comment\"> * parsing. In this pass we try to find out the highest device id this</span>", 
"<span class=\"comment\"> * code has to handle. Upon this information the size of the shared data</span>", 
"<span class=\"comment\"> * structures is determined later.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function calculates the length of a given IVHD entry</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#ivhd_entry_length\">ivhd_entry_length</a>(<a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#ivhd\">ivhd</a>)", 
"{", 
"<span class=\"ts\"/>return 0x04 << (*<a class=\"id\" href=\"#ivhd\">ivhd</a> >> 6);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function reads the last device id the IOMMU has to handle from the PCI</span>", 
"<span class=\"comment\"> * capability header for this IOMMU</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_last_devid_on_pci\">find_last_devid_on_pci</a>(int <a class=\"id\" href=\"#bus\">bus</a>, int <a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#fn\">fn</a>, int <a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cap\">cap</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cap\">cap</a> = <a class=\"id\" href=\"#read_pci_config\">read_pci_config</a>(<a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#fn\">fn</a>, <a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>+<a class=\"id\" href=\"#MMIO_RANGE_OFFSET\">MMIO_RANGE_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#update_last_devid\">update_last_devid</a>(<a class=\"id\" href=\"#calc_devid\">calc_devid</a>(<a class=\"id\" href=\"#MMIO_GET_BUS\">MMIO_GET_BUS</a>(<a class=\"id\" href=\"#cap\">cap</a>), <a class=\"id\" href=\"#MMIO_GET_LD\">MMIO_GET_LD</a>(<a class=\"id\" href=\"#cap\">cap</a>)));", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * After reading the highest device id from the IOMMU PCI capability header</span>", 
"<span class=\"comment\"> * this function looks if there is a higher device id defined in the ACPI table</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_last_devid_from_ivhd\">find_last_devid_from_ivhd</a>(struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#p\">p</a> = (void *)<a class=\"id\" href=\"#h\">h</a>, *<a class=\"id\" href=\"#end\">end</a> = (void *)<a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ivhd_entry\">ivhd_entry</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += sizeof(*<a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> += <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#find_last_devid_on_pci\">find_last_devid_on_pci</a>(<a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>);", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#p\">p</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = (struct <a class=\"id\" href=\"#ivhd_entry\">ivhd_entry</a> *)<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_SELECT\">IVHD_DEV_SELECT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_RANGE_END\">IVHD_DEV_RANGE_END</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_ALIAS\">IVHD_DEV_ALIAS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_EXT_SELECT\">IVHD_DEV_EXT_SELECT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* all the above subfield types refer to device ids */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#update_last_devid\">update_last_devid</a>(<a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#devid\">devid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#ivhd_entry_length\">ivhd_entry_length</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Iterate over all IVHD entries in the ACPI table and find the highest device</span>", 
"<span class=\"comment\"> * id which we need to handle. This is the first of three functions which parse</span>", 
"<span class=\"comment\"> * the ACPI table. So we check the checksum here.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#find_last_devid_acpi\">find_last_devid_acpi</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#checksum\">checksum</a> = 0, *<a class=\"id\" href=\"#p\">p</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#table\">table</a>, *<a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> *<a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Validate checksum here so we don't need to do it when</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we actually parse the table</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a>; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#checksum\">checksum</a> += <a class=\"id\" href=\"#p\">p</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#checksum\">checksum</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ACPI table corrupt */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_init_err\">amd_iommu_init_err</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#IVRS_HEADER_LENGTH\">IVRS_HEADER_LENGTH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> += <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#p\">p</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = (struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> *)<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_IVHD_TYPE\">ACPI_IVHD_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#find_last_devid_from_ivhd\">find_last_devid_from_ivhd</a>(<a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The following functions belong the the code path which parses the ACPI table</span>", 
"<span class=\"comment\"> * the second time. In this ACPI parsing iteration we allocate IOMMU specific</span>", 
"<span class=\"comment\"> * data structures, initialize the device/alias/rlookup table and also</span>", 
"<span class=\"comment\"> * basically initialize the hardware.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Allocates the command buffer. This buffer is per AMD IOMMU. We can</span>", 
"<span class=\"comment\"> * write commands to that buffer later and the IOMMU will execute them</span>", 
"<span class=\"comment\"> * asynchronously</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#alloc_command_buffer\">alloc_command_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#cmd_buf\">cmd_buf</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#CMD_BUFFER_SIZE\">CMD_BUFFER_SIZE</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmd_buf\">cmd_buf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf_size\">cmd_buf_size</a> = <a class=\"id\" href=\"#CMD_BUFFER_SIZE\">CMD_BUFFER_SIZE</a> | <a class=\"id\" href=\"#CMD_BUFFER_UNINITIALIZED\">CMD_BUFFER_UNINITIALIZED</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cmd_buf\">cmd_buf</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function resets the command buffer if the IOMMU stopped fetching</span>", 
"<span class=\"comment\"> * commands from it.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#amd_iommu_reset_cmd_buffer\">amd_iommu_reset_cmd_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_disable\">iommu_feature_disable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_CMDBUF_EN\">CONTROL_CMDBUF_EN</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(0x00, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CMD_HEAD_OFFSET\">MMIO_CMD_HEAD_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(0x00, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CMD_TAIL_OFFSET\">MMIO_CMD_TAIL_OFFSET</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_enable\">iommu_feature_enable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_CMDBUF_EN\">CONTROL_CMDBUF_EN</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function writes the command buffer address to the hardware and</span>", 
"<span class=\"comment\"> * enables it.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#iommu_enable_command_buffer\">iommu_enable_command_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf\">cmd_buf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf\">cmd_buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> |= <a class=\"id\" href=\"#MMIO_CMD_SIZE_512\">MMIO_CMD_SIZE_512</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy_toio\">memcpy_toio</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_CMD_BUF_OFFSET\">MMIO_CMD_BUF_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#entry\">entry</a>, sizeof(<a class=\"id\" href=\"#entry\">entry</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_reset_cmd_buffer\">amd_iommu_reset_cmd_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf_size\">cmd_buf_size</a> &= ~(<a class=\"id\" href=\"#CMD_BUFFER_UNINITIALIZED\">CMD_BUFFER_UNINITIALIZED</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#free_command_buffer\">free_command_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_pages\">free_pages</a>((unsigned long)<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf\">cmd_buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf_size\">cmd_buf_size</a> &amp; ~(<a class=\"id\" href=\"#CMD_BUFFER_UNINITIALIZED\">CMD_BUFFER_UNINITIALIZED</a>)));", 
"}", 
"", 
"<span class=\"comment\">/* allocates the memory where the IOMMU will log its events to */</span>", 
"static <a class=\"id\" href=\"#u8\">u8</a> * <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#alloc_event_buffer\">alloc_event_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#__get_free_pages\">__get_free_pages</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#EVT_BUFFER_SIZE\">EVT_BUFFER_SIZE</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf_size\">evt_buf_size</a> = <a class=\"id\" href=\"#EVT_BUFFER_SIZE\">EVT_BUFFER_SIZE</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#iommu_enable_event_buffer\">iommu_enable_event_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a> == <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = (<a class=\"id\" href=\"#u64\">u64</a>)<a class=\"id\" href=\"#virt_to_phys\">virt_to_phys</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a>) | <a class=\"id\" href=\"#EVT_LEN_MASK\">EVT_LEN_MASK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy_toio\">memcpy_toio</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EVT_BUF_OFFSET\">MMIO_EVT_BUF_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#entry\">entry</a>, sizeof(<a class=\"id\" href=\"#entry\">entry</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* set head and tail to zero manually */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(0x00, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EVT_HEAD_OFFSET\">MMIO_EVT_HEAD_OFFSET</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#writel\">writel</a>(0x00, <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> + <a class=\"id\" href=\"#MMIO_EVT_TAIL_OFFSET\">MMIO_EVT_TAIL_OFFSET</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_enable\">iommu_feature_enable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_EVT_LOG_EN\">CONTROL_EVT_LOG_EN</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#free_event_buffer\">free_event_buffer</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_pages\">free_pages</a>((unsigned long)<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a>, <a class=\"id\" href=\"#get_order\">get_order</a>(<a class=\"id\" href=\"#EVT_BUFFER_SIZE\">EVT_BUFFER_SIZE</a>));", 
"}", 
"", 
"<span class=\"comment\">/* sets a specific bit in the device table entry. */</span>", 
"static void <a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bit\">bit</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = (<a class=\"id\" href=\"#bit\">bit</a> >> 5) &amp; 0x07;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#_bit\">_bit</a> = <a class=\"id\" href=\"#bit\">bit</a> &amp; 0x1f;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_dev_table\">amd_iommu_dev_table</a>[<a class=\"id\" href=\"#devid\">devid</a>].<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>] |= (1 << <a class=\"id\" href=\"#_bit\">_bit</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#get_dev_entry_bit\">get_dev_entry_bit</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#bit\">bit</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = (<a class=\"id\" href=\"#bit\">bit</a> >> 5) &amp; 0x07;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#_bit\">_bit</a> = <a class=\"id\" href=\"#bit\">bit</a> &amp; 0x1f;", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#amd_iommu_dev_table\">amd_iommu_dev_table</a>[<a class=\"id\" href=\"#devid\">devid</a>].<a class=\"id\" href=\"#data\">data</a>[<a class=\"id\" href=\"#i\">i</a>] &amp; (1 << <a class=\"id\" href=\"#_bit\">_bit</a>)) >> <a class=\"id\" href=\"#_bit\">_bit</a>;", 
"}", 
"", 
"", 
"void <a class=\"id\" href=\"#amd_iommu_apply_erratum_63\">amd_iommu_apply_erratum_63</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#sysmgt\">sysmgt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysmgt\">sysmgt</a> = <a class=\"id\" href=\"#get_dev_entry_bit\">get_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_SYSMGT1\">DEV_ENTRY_SYSMGT1</a>) |", 
"<span class=\"ts\"/><span class=\"ts\"/> (<a class=\"id\" href=\"#get_dev_entry_bit\">get_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_SYSMGT2\">DEV_ENTRY_SYSMGT2</a>) << 1);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sysmgt\">sysmgt</a> == 0x01)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_IW\">DEV_ENTRY_IW</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Writes the specific IOMMU for a device into the rlookup table */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#set_iommu_for_device\">set_iommu_for_device</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_rlookup_table\">amd_iommu_rlookup_table</a>[<a class=\"id\" href=\"#devid\">devid</a>] = <a class=\"id\" href=\"#iommu\">iommu</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function takes the device specific flags read from the ACPI</span>", 
"<span class=\"comment\"> * table and sets up the device table entry with that information</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ext_flags\">ext_flags</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_DEVFLAG_INITPASS\">ACPI_DEVFLAG_INITPASS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_INIT_PASS\">DEV_ENTRY_INIT_PASS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_DEVFLAG_EXTINT\">ACPI_DEVFLAG_EXTINT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_EINT_PASS\">DEV_ENTRY_EINT_PASS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_DEVFLAG_NMI\">ACPI_DEVFLAG_NMI</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_NMI_PASS\">DEV_ENTRY_NMI_PASS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_DEVFLAG_SYSMGT1\">ACPI_DEVFLAG_SYSMGT1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_SYSMGT1\">DEV_ENTRY_SYSMGT1</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_DEVFLAG_SYSMGT2\">ACPI_DEVFLAG_SYSMGT2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_SYSMGT2\">DEV_ENTRY_SYSMGT2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_DEVFLAG_LINT0\">ACPI_DEVFLAG_LINT0</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_LINT0_PASS\">DEV_ENTRY_LINT0_PASS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#ACPI_DEVFLAG_LINT1\">ACPI_DEVFLAG_LINT1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_LINT1_PASS\">DEV_ENTRY_LINT1_PASS</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_apply_erratum_63\">amd_iommu_apply_erratum_63</a>(<a class=\"id\" href=\"#devid\">devid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_iommu_for_device\">set_iommu_for_device</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#devid\">devid</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Reads the device exclusion range from ACPI and initialize IOMMU with</span>", 
"<span class=\"comment\"> * it</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#set_device_exclusion_range\">set_device_exclusion_range</a>(<a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#devid\">devid</a>, struct <a class=\"id\" href=\"#ivmd_header\">ivmd_header</a> *<a class=\"id\" href=\"#m\">m</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a> = <a class=\"id\" href=\"#amd_iommu_rlookup_table\">amd_iommu_rlookup_table</a>[<a class=\"id\" href=\"#devid\">devid</a>];", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#IVMD_FLAG_EXCL_RANGE\">IVMD_FLAG_EXCL_RANGE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We only can configure exclusion ranges per IOMMU, not</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * per device. But we can enable the exclusion range per</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * device. This is done here</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_bit\">set_dev_entry_bit</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#DEV_ENTRY_EX\">DEV_ENTRY_EX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#exclusion_start\">exclusion_start</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#range_start\">range_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#exclusion_length\">exclusion_length</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#range_length\">range_length</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function reads some important data from the IOMMU PCI space and</span>", 
"<span class=\"comment\"> * initializes the driver data structure with it. It reads the hardware</span>", 
"<span class=\"comment\"> * capabilities and the first/last device entries</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_iommu_from_pci\">init_iommu_from_pci</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#cap_ptr\">cap_ptr</a> = <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#range\">range</a>, <a class=\"id\" href=\"#misc\">misc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap_ptr\">cap_ptr</a> + <a class=\"id\" href=\"#MMIO_CAP_HDR_OFFSET\">MMIO_CAP_HDR_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cap\">cap</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap_ptr\">cap_ptr</a> + <a class=\"id\" href=\"#MMIO_RANGE_OFFSET\">MMIO_RANGE_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#range\">range</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#cap_ptr\">cap_ptr</a> + <a class=\"id\" href=\"#MMIO_MISC_OFFSET\">MMIO_MISC_OFFSET</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#misc\">misc</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#first_device\">first_device</a> = <a class=\"id\" href=\"#calc_devid\">calc_devid</a>(<a class=\"id\" href=\"#MMIO_GET_BUS\">MMIO_GET_BUS</a>(<a class=\"id\" href=\"#range\">range</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#MMIO_GET_FD\">MMIO_GET_FD</a>(<a class=\"id\" href=\"#range\">range</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#last_device\">last_device</a> = <a class=\"id\" href=\"#calc_devid\">calc_devid</a>(<a class=\"id\" href=\"#MMIO_GET_BUS\">MMIO_GET_BUS</a>(<a class=\"id\" href=\"#range\">range</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#MMIO_GET_LD\">MMIO_GET_LD</a>(<a class=\"id\" href=\"#range\">range</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_msi_num\">evt_msi_num</a> = <a class=\"id\" href=\"#MMIO_MSI_NUM\">MMIO_MSI_NUM</a>(<a class=\"id\" href=\"#misc\">misc</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_rd890_iommu\">is_rd890_iommu</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0xf0, &amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cache_cfg\">cache_cfg</a>[0]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0xf4, &amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cache_cfg\">cache_cfg</a>[1]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0xf8, &amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cache_cfg\">cache_cfg</a>[2]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_read_config_dword\">pci_read_config_dword</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, 0xfc, &amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cache_cfg\">cache_cfg</a>[3]);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Takes a pointer to an AMD IOMMU entry in the ACPI table and</span>", 
"<span class=\"comment\"> * initializes the hardware and our data structures with it.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_iommu_from_acpi\">init_iommu_from_acpi</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#p\">p</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#dev_i\">dev_i</a>, <a class=\"id\" href=\"#devid\">devid</a> = 0, <a class=\"id\" href=\"#devid_start\">devid_start</a> = 0, <a class=\"id\" href=\"#devid_to\">devid_to</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#ext_flags\">ext_flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#alias\">alias</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ivhd_entry\">ivhd_entry</a> *<a class=\"id\" href=\"#e\">e</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First save the recommended feature enable bits from ACPI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#acpi_flags\">acpi_flags</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Done. Now parse the device entries</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += sizeof(struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> += <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#p\">p</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a> = (struct <a class=\"id\" href=\"#ivhd_entry\">ivhd_entry</a> *)<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_ALL\">IVHD_DEV_ALL</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_ALL\\t\\t\\t first devid: %02x:%02x.%x\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \" last device %02x:%02x.%x flags: %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#first_device\">first_device</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#first_device\">first_device</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#first_device\">first_device</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#last_device\">last_device</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#last_device\">last_device</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#last_device\">last_device</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#dev_i\">dev_i</a> = <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#first_device\">first_device</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_i\">dev_i</a> <= <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#last_device\">last_device</a>; ++<a class=\"id\" href=\"#dev_i\">dev_i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#dev_i\">dev_i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_SELECT\">IVHD_DEV_SELECT</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_SELECT\\t\\t\\t devid: %02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"flags: %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid\">devid</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_SELECT_RANGE_START\">IVHD_DEV_SELECT_RANGE_START</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_SELECT_RANGE_START\\t \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"devid: %02x:%02x.%x flags: %02x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid_start\">devid_start</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_flags\">ext_flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alias\">alias</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_ALIAS\">IVHD_DEV_ALIAS</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_ALIAS\\t\\t\\t devid: %02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"flags: %02x devid_to: %02x:%02x.%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid\">devid</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid_to\">devid_to</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#devid\">devid</a>   , <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#devid_to\">devid_to</a>, <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_alias_table\">amd_iommu_alias_table</a>[<a class=\"id\" href=\"#devid\">devid</a>] = <a class=\"id\" href=\"#devid_to\">devid_to</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_ALIAS_RANGE\">IVHD_DEV_ALIAS_RANGE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_ALIAS_RANGE\\t\\t \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"devid: %02x:%02x.%x flags: %02x \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"devid_to: %02x:%02x.%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid_start\">devid_start</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid_to\">devid_to</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a> >> 8;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_flags\">ext_flags</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alias\">alias</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_EXT_SELECT\">IVHD_DEV_EXT_SELECT</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_EXT_SELECT\\t\\t devid: %02x:%02x.%x \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"flags: %02x ext: %08x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid\">devid</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#devid\">devid</a>, <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_EXT_SELECT_RANGE\">IVHD_DEV_EXT_SELECT_RANGE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_EXT_SELECT_RANGE\\t devid: \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"%02x:%02x.%x flags: %02x ext: %08x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid_start\">devid_start</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_flags\">ext_flags</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#ext\">ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#alias\">alias</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IVHD_DEV_RANGE_END\">IVHD_DEV_RANGE_END</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"  DEV_RANGE_END\\t\\t devid: %02x:%02x.%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid\">devid</a> = <a class=\"id\" href=\"#e\">e</a>-><a class=\"id\" href=\"#devid\">devid</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#dev_i\">dev_i</a> = <a class=\"id\" href=\"#devid_start\">devid_start</a>; <a class=\"id\" href=\"#dev_i\">dev_i</a> <= <a class=\"id\" href=\"#devid\">devid</a>; ++<a class=\"id\" href=\"#dev_i\">dev_i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#alias\">alias</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_alias_table\">amd_iommu_alias_table</a>[<a class=\"id\" href=\"#dev_i\">dev_i</a>] = <a class=\"id\" href=\"#devid_to\">devid_to</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devid_to\">devid_to</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#ext_flags\">ext_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_dev_entry_from_acpi\">set_dev_entry_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#dev_i\">dev_i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#ext_flags\">ext_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#ivhd_entry_length\">ivhd_entry_length</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/* Initializes the device-&gt;iommu mapping for the driver */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_iommu_devices\">init_iommu_devices</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#first_device\">first_device</a>; <a class=\"id\" href=\"#i\">i</a> <= <a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#last_device\">last_device</a>; ++<a class=\"id\" href=\"#i\">i</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_iommu_for_device\">set_iommu_for_device</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#free_iommu_one\">free_iommu_one</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_command_buffer\">free_command_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_event_buffer\">free_event_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_unmap_mmio_space\">iommu_unmap_mmio_space</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#free_iommu_all\">free_iommu_all</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_iommu_safe\">for_each_iommu_safe</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_iommu_one\">free_iommu_one</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function clues the initialization function for one IOMMU</span>", 
"<span class=\"comment\"> * together and also allocates the command buffer and programs the</span>", 
"<span class=\"comment\"> * hardware. It does NOT enable the IOMMU. This is done afterwards.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_iommu_one\">init_iommu_one</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>, struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> *<a class=\"id\" href=\"#h\">h</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add IOMMU to internal data structures */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#amd_iommu_list\">amd_iommu_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#index\">index</a>             = <a class=\"id\" href=\"#amd_iommus_present\">amd_iommus_present</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#index\">index</a> >= <a class=\"id\" href=\"#MAX_IOMMUS\">MAX_IOMMUS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN\">WARN</a>(1, \"AMD-Vi: System has more IOMMUs than supported by this driver\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSYS\">ENOSYS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Index is fine - add IOMMU to the array */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#amd_iommus\">amd_iommus</a>[<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#index\">index</a>] = <a class=\"id\" href=\"#iommu\">iommu</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Copy data from ACPI table entry to the iommu struct</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#pci_get_bus_and_slot\">pci_get_bus_and_slot</a>(<a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a> &amp; 0xff);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cap_ptr\">cap_ptr</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#pci_seg\">pci_seg</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#pci_seg\">pci_seg</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_phys\">mmio_phys</a> = <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mmio_phys\">mmio_phys</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a> = <a class=\"id\" href=\"#iommu_map_mmio_space\">iommu_map_mmio_space</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mmio_phys\">mmio_phys</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#mmio_base\">mmio_base</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf\">cmd_buf</a> = <a class=\"id\" href=\"#alloc_command_buffer\">alloc_command_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cmd_buf\">cmd_buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a> = <a class=\"id\" href=\"#alloc_event_buffer\">alloc_event_buffer</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#evt_buf\">evt_buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#int_enabled\">int_enabled</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_iommu_from_pci\">init_iommu_from_pci</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_iommu_from_acpi\">init_iommu_from_acpi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_iommu_devices\">init_iommu_devices</a>(<a class=\"id\" href=\"#iommu\">iommu</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#cap\">cap</a> &amp; (1UL << <a class=\"id\" href=\"#IOMMU_CAP_NPCACHE\">IOMMU_CAP_NPCACHE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_np_cache\">amd_iommu_np_cache</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#pci_enable_device\">pci_enable_device</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Iterates over all IOMMU entries in the ACPI table, allocates the</span>", 
"<span class=\"comment\"> * IOMMU structure and initializes it with init_iommu_one()</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_iommu_all\">init_iommu_all</a>(struct <a class=\"id\" href=\"#acpi_table_header\">acpi_table_header</a> *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#p\">p</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#table\">table</a>, *<a class=\"id\" href=\"#end\">end</a> = (<a class=\"id\" href=\"#u8\">u8</a> *)<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> *<a class=\"id\" href=\"#h\">h</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> += <a class=\"id\" href=\"#table\">table</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#IVRS_HEADER_LENGTH\">IVRS_HEADER_LENGTH</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#p\">p</a> &lt; <a class=\"id\" href=\"#end\">end</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = (struct <a class=\"id\" href=\"#ivhd_header\">ivhd_header</a> *)<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (*<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_IVHD_TYPE\">ACPI_IVHD_TYPE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"device: %02x:%02x.%01x cap: %04x \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"seg: %d flags: %01x info %04x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_BUS\">PCI_BUS</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#PCI_SLOT\">PCI_SLOT</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#PCI_FUNC\">PCI_FUNC</a>(<a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#devid\">devid</a>), <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#cap_ptr\">cap_ptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#pci_seg\">pci_seg</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#info\">info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DUMP_printk\">DUMP_printk</a>(\"       mmio-addr: %016llx\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#mmio_phys\">mmio_phys</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_init_err\">amd_iommu_init_err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#init_iommu_one\">init_iommu_one</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#amd_iommu_init_err\">amd_iommu_init_err</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> += <a class=\"id\" href=\"#h\">h</a>-><a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#p\">p</a> != <a class=\"id\" href=\"#end\">end</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/****************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The following functions initialize the MSI interrupts for all IOMMUs</span>", 
"<span class=\"comment\"> * in the system. Its a bit challenging because there could be multiple</span>", 
"<span class=\"comment\"> * IOMMUs per PCI BDF but we can call pci_enable_msi(x) only once per</span>", 
"<span class=\"comment\"> * pci_dev.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ****************************************************************************/</span>", 
"", 
"static int <a class=\"id\" href=\"#iommu_setup_msi\">iommu_setup_msi</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_enable_msi\">pci_enable_msi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#request_irq\">request_irq</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#irq\">irq</a>, <a class=\"id\" href=\"#amd_iommu_int_handler\">amd_iommu_int_handler</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#IRQF_SAMPLE_RANDOM\">IRQF_SAMPLE_RANDOM</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"AMD-Vi\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_disable_msi\">pci_disable_msi</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#int_enabled\">int_enabled</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iommu_feature_enable\">iommu_feature_enable</a>(<a class=\"id\" href=\"#iommu\">iommu</a>, <a class=\"id\" href=\"#CONTROL_EVT_INT_EN\">CONTROL_EVT_INT_EN</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#iommu_init_msi\">iommu_init_msi</a>(struct <a class=\"id\" href=\"#amd_iommu\">amd_iommu</a> *<a class=\"id\" href=\"#iommu\">iommu</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#int_enabled\">int_enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pci_find_capability\">pci_find_capability</a>(<a class=\"id\" href=\"#iommu\">iommu</a>-><a class=\"id\" href=\"#dev\">dev</a>, <a class=\"id\" href=\"#PCI_CAP_ID_MSI\">PCI_CAP_ID_MSI</a>))", 
];
xr_frag_insert('l/3b/57da6b9c37e7faf4f3c8b0b16d15e0ec9b6b88.xr', __xr_tmp);
