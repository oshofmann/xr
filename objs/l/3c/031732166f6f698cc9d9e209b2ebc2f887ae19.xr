var __xr_tmp = [
"<span class=\"comment\">/* keyctl.c: userspace keyctl operations</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2004-5 Red Hat, Inc. All Rights Reserved.</span>", 
"<span class=\"comment\"> * Written by David Howells (dhowells@redhat.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#syscalls\">syscalls</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#keyctl\">keyctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#security\">security</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"internal.h\"", 
"", 
"static int <a class=\"id\" href=\"#key_get_type_from_user\">key_get_type_from_user</a>(char *<a class=\"id\" href=\"#type\">type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#_type\">_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#strncpy_from_user\">strncpy_from_user</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#_type\">_type</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0 || <a class=\"id\" href=\"#ret\">ret</a> >= <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a>[0] == '.')", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a>[<a class=\"id\" href=\"#len\">len</a> - 1] = '\\0';", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * extract the description of a new key from userspace and either add it as a</span>", 
"<span class=\"comment\"> * new key to the specified keyring or update a matching key in that keyring</span>", 
"<span class=\"comment\"> * - the keyring must be writable</span>", 
"<span class=\"comment\"> * - returns the new key's serial number</span>", 
"<span class=\"comment\"> * - implements add_key()</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE5\">SYSCALL_DEFINE5</a>(<a class=\"id\" href=\"#add_key\">add_key</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#_type\">_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#_description\">_description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const void <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#_payload\">_payload</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#plen\">plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, <a class=\"id\" href=\"#ringid\">ringid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>, <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>[32], *<a class=\"id\" href=\"#description\">description</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#payload\">payload</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#vm\">vm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &gt; 1024 * 1024 - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* draw all the data into kernel space */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_get_type_from_user\">key_get_type_from_user</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#_type\">_type</a>, sizeof(<a class=\"id\" href=\"#type\">type</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#description\">description</a> = <a class=\"id\" href=\"#strndup_user\">strndup_user</a>(<a class=\"id\" href=\"#_description\">_description</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#description\">description</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#description\">description</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pull the payload in if one was supplied */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vm\">vm</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_payload\">_payload</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#payload\">payload</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vm\">vm</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#vmalloc\">vmalloc</a>(<a class=\"id\" href=\"#plen\">plen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#payload\">payload</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#_payload\">_payload</a>, <a class=\"id\" href=\"#plen\">plen</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error3\">error3</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the target keyring (which must be writable) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#keyring_ref\">keyring_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a>, <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error3\">error3</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* create or update the requested key and add it to the target</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * keyring */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#key_create_or_update\">key_create_or_update</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>, <a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#description\">description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#KEY_PERM_UNDEF\">KEY_PERM_UNDEF</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#KEY_ALLOC_IN_QUOTA\">KEY_ALLOC_IN_QUOTA</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)-><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
" <a class=\"id\" href=\"#error3\">error3</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vm\">vm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
" <a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#description\">description</a>);", 
" <a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end sys_add_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * search the process keyrings for a matching key</span>", 
"<span class=\"comment\"> * - nested keyrings may also be searched if they have Search permission</span>", 
"<span class=\"comment\"> * - if a key is found, it will be attached to the destination keyring if</span>", 
"<span class=\"comment\"> *   there's one specified</span>", 
"<span class=\"comment\"> * - /sbin/request-key will be invoked if _callout_info is non-NULL</span>", 
"<span class=\"comment\"> *   - the _callout_info string will be passed to /sbin/request-key</span>", 
"<span class=\"comment\"> *   - if the _callout_info string is empty, it will be rendered as \"-\"</span>", 
"<span class=\"comment\"> * - implements request_key()</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SYSCALL_DEFINE4\">SYSCALL_DEFINE4</a>(<a class=\"id\" href=\"#request_key\">request_key</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#_type\">_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#_description\">_description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#_callout_info\">_callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_serial_t\">key_serial_t</a>, <a class=\"id\" href=\"#destringid\">destringid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#ktype\">ktype</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#dest_ref\">dest_ref</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#callout_len\">callout_len</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>[32], *<a class=\"id\" href=\"#description\">description</a>, *<a class=\"id\" href=\"#callout_info\">callout_info</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pull the type into kernel space */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_get_type_from_user\">key_get_type_from_user</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#_type\">_type</a>, sizeof(<a class=\"id\" href=\"#type\">type</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pull the description into kernel space */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#description\">description</a> = <a class=\"id\" href=\"#strndup_user\">strndup_user</a>(<a class=\"id\" href=\"#_description\">_description</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#description\">description</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#description\">description</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pull the callout info into kernel space */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#callout_info\">callout_info</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#callout_len\">callout_len</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_callout_info\">_callout_info</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#callout_info\">callout_info</a> = <a class=\"id\" href=\"#strndup_user\">strndup_user</a>(<a class=\"id\" href=\"#_callout_info\">_callout_info</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#callout_info\">callout_info</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#callout_info\">callout_info</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#callout_len\">callout_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#callout_info\">callout_info</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get the destination keyring if specified */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dest_ref\">dest_ref</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#destringid\">destringid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_ref\">dest_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#destringid\">destringid</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error3\">error3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the key type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktype\">ktype</a> = <a class=\"id\" href=\"#key_type_lookup\">key_type_lookup</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ktype\">ktype</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ktype\">ktype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error4\">error4</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* do the search */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#request_key_and_link\">request_key_and_link</a>(<a class=\"id\" href=\"#ktype\">ktype</a>, <a class=\"id\" href=\"#description\">description</a>, <a class=\"id\" href=\"#callout_info\">callout_info</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#callout_len\">callout_len</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#KEY_ALLOC_IN_QUOTA\">KEY_ALLOC_IN_QUOTA</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key\">key</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error5\">error5</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#serial\">serial</a>;", 
"", 
" <span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<a class=\"id\" href=\"#error5\">error5</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_type_put\">key_type_put</a>(<a class=\"id\" href=\"#ktype\">ktype</a>);", 
"<a class=\"id\" href=\"#error4\">error4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>);", 
"<a class=\"id\" href=\"#error3\">error3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#callout_info\">callout_info</a>);", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#description\">description</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end sys_request_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get the ID of the specified process keyring</span>", 
"<span class=\"comment\"> * - the keyring must have search permission to be found</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_GET_KEYRING_ID)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_get_keyring_ID\">keyctl_get_keyring_ID</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, int <a class=\"id\" href=\"#create\">create</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#lflags\">lflags</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lflags\">lflags</a> = <a class=\"id\" href=\"#create\">create</a> ? <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a> : 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#lflags\">lflags</a>, <a class=\"id\" href=\"#KEY_SEARCH\">KEY_SEARCH</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)-><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_get_keyring_ID() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * join the session keyring</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_JOIN_SESSION_KEYRING)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_join_session_keyring\">keyctl_join_session_keyring</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#_name\">_name</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* fetch the name from userspace */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_name\">_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#strndup_user\">strndup_user</a>(<a class=\"id\" href=\"#_name\">_name</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#name\">name</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* join the session */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#join_session_keyring\">join_session_keyring</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_join_session_keyring() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * update a key's data payload</span>", 
"<span class=\"comment\"> * - the key must be writable</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_UPDATE)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_update_key\">keyctl_update_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#_payload\">_payload</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#plen\">plen</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#payload\">payload</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pull the payload in if one was supplied */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_payload\">_payload</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#payload\">payload</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#_payload\">_payload</a>, <a class=\"id\" href=\"#plen\">plen</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the target key (which must be writable) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, 0, <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* update the key */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_update\">key_update</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#plen\">plen</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_update_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * revoke a key</span>", 
"<span class=\"comment\"> * - the key must be writable</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_REVOKE)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_revoke_key\">keyctl_revoke_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, 0, <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EACCES\">EACCES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, 0, <a class=\"id\" href=\"#KEY_SETATTR\">KEY_SETATTR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_revoke\">key_revoke</a>(<a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_revoke_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * clear the specified process keyring</span>", 
"<span class=\"comment\"> * - the keyring must be writable</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_CLEAR)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_keyring_clear\">keyctl_keyring_clear</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#ringid\">ringid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#keyring_ref\">keyring_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a>, <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#keyring_clear\">keyring_clear</a>(<a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_keyring_clear() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * link a key into a keyring</span>", 
"<span class=\"comment\"> * - the keyring must be writable</span>", 
"<span class=\"comment\"> * - the key must be linkable</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_LINK)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_keyring_link\">keyctl_keyring_link</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#ringid\">ringid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>, <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#keyring_ref\">keyring_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a>, <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a>, <a class=\"id\" href=\"#KEY_LINK\">KEY_LINK</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_link\">key_link</a>(<a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>), <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_keyring_link() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * unlink the first attachment of a key from a keyring</span>", 
"<span class=\"comment\"> * - the keyring must be writable</span>", 
"<span class=\"comment\"> * - we don't need any permissions on the key</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_UNLINK)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_keyring_unlink\">keyctl_keyring_unlink</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#ringid\">ringid</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>, <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#keyring_ref\">keyring_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, 0, <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#KEY_LOOKUP_FOR_UNLINK\">KEY_LOOKUP_FOR_UNLINK</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_unlink\">key_unlink</a>(<a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>), <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_keyring_unlink() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * describe a user key</span>", 
"<span class=\"comment\"> * - the key must have view permission</span>", 
"<span class=\"comment\"> * - if there's a buffer, we place up to buflen bytes of data into it</span>", 
"<span class=\"comment\"> * - unless there's an error, we return the amount of description available,</span>", 
"<span class=\"comment\"> *   irrespective of how much we may have copied</span>", 
"<span class=\"comment\"> * - the description is formatted thus:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>type;uid;gid;perm;description&lt;NUL&gt;</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_DESCRIBE)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_describe_key\">keyctl_describe_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#keyid\">keyid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, *<a class=\"id\" href=\"#instkey\">instkey</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#keyid\">keyid</a>, <a class=\"id\" href=\"#KEY_LOOKUP_PARTIAL\">KEY_LOOKUP_PARTIAL</a>, <a class=\"id\" href=\"#KEY_VIEW\">KEY_VIEW</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* viewing a key under construction is permitted if we have the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * authorisation token handy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>) == -<a class=\"id\" href=\"#EACCES\">EACCES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#instkey\">instkey</a> = <a class=\"id\" href=\"#key_get_instantiation_authkey\">key_get_instantiation_authkey</a>(<a class=\"id\" href=\"#keyid\">keyid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#instkey\">instkey</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#instkey\">instkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#keyid\">keyid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#KEY_LOOKUP_PARTIAL\">KEY_LOOKUP_PARTIAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#okay\">okay</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#okay\">okay</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate how much description we're going to return */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmpbuf\">tmpbuf</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s;%d;%d;%08x;%s\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#uid\">uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#gid\">gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#perm\">perm</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#description\">description</a> ?: \"\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* include a NUL char at the end of the data */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>[<a class=\"id\" href=\"#ret\">ret</a>] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a>++;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* consider returning the data */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a> && <a class=\"id\" href=\"#buflen\">buflen</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buflen\">buflen</a> &gt; <a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buflen\">buflen</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, <a class=\"id\" href=\"#buflen\">buflen</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>);", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_describe_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * search the specified keyring for a matching key</span>", 
"<span class=\"comment\"> * - the start keyring must be searchable</span>", 
"<span class=\"comment\"> * - nested keyrings may also be searched if they are searchable</span>", 
"<span class=\"comment\"> * - only keys with search permission may be found</span>", 
"<span class=\"comment\"> * - if a key is found, it will be attached to the destination keyring if</span>", 
"<span class=\"comment\"> *   there's one specified</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_SEARCH)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_keyring_search\">keyctl_keyring_search</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#ringid\">ringid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#_type\">_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#_description\">_description</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#destringid\">destringid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key_type\">key_type</a> *<a class=\"id\" href=\"#ktype\">ktype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>, <a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#dest_ref\">dest_ref</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#type\">type</a>[32], *<a class=\"id\" href=\"#description\">description</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pull the type and description into kernel space */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_get_type_from_user\">key_get_type_from_user</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#_type\">_type</a>, sizeof(<a class=\"id\" href=\"#type\">type</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#description\">description</a> = <a class=\"id\" href=\"#strndup_user\">strndup_user</a>(<a class=\"id\" href=\"#_description\">_description</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#description\">description</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#description\">description</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get the keyring at which to begin the search */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#keyring_ref\">keyring_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, 0, <a class=\"id\" href=\"#KEY_SEARCH\">KEY_SEARCH</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get the destination keyring if specified */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dest_ref\">dest_ref</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#destringid\">destringid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dest_ref\">dest_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#destringid\">destringid</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error3\">error3</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the key type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktype\">ktype</a> = <a class=\"id\" href=\"#key_type_lookup\">key_type_lookup</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ktype\">ktype</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ktype\">ktype</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error4\">error4</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* do the search */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#keyring_search\">keyring_search</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>, <a class=\"id\" href=\"#ktype\">ktype</a>, <a class=\"id\" href=\"#description\">description</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* treat lack or presence of a negative key the same */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOKEY\">ENOKEY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error5\">error5</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* link the resulting key to the destination keyring if we can */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dest_ref\">dest_ref</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_permission\">key_permission</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#KEY_LINK\">KEY_LINK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error6\">error6</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_link\">key_link</a>(<a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>), <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error6\">error6</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)-><a class=\"id\" href=\"#serial\">serial</a>;", 
"", 
"<a class=\"id\" href=\"#error6\">error6</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<a class=\"id\" href=\"#error5\">error5</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_type_put\">key_type_put</a>(<a class=\"id\" href=\"#ktype\">ktype</a>);", 
"<a class=\"id\" href=\"#error4\">error4</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#dest_ref\">dest_ref</a>);", 
"<a class=\"id\" href=\"#error3\">error3</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_put\">key_ref_put</a>(<a class=\"id\" href=\"#keyring_ref\">keyring_ref</a>);", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#description\">description</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_keyring_search() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * read a user key's payload</span>", 
"<span class=\"comment\"> * - the keyring must be readable or the key must be searchable from the</span>", 
"<span class=\"comment\"> *   process's keyrings</span>", 
"<span class=\"comment\"> * - if there's a buffer, we place up to buflen bytes of data into it</span>", 
"<span class=\"comment\"> * - unless there's an error, we return the amount of data in the key,</span>", 
"<span class=\"comment\"> *   irrespective of how much we may have copied</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_READ)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_read_key\">keyctl_read_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#keyid\">keyid</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the key first */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#keyid\">keyid</a>, 0, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOKEY\">ENOKEY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* see if we can read it directly */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_permission\">key_permission</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>, <a class=\"id\" href=\"#KEY_READ\">KEY_READ</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#can_read_key\">can_read_key</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EACCES\">EACCES</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we can't; see if it's searchable from this process's keyrings</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - we automatically take account of the fact that it may be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   dangling off an instantiation key</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_key_possessed\">is_key_possessed</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the key is probably readable - now try to read it */</span>", 
"<a class=\"id\" href=\"#can_read_key\">can_read_key</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_validate\">key_validate</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EOPNOTSUPP\">EOPNOTSUPP</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#read\">read</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* read the data with the semaphore held (since we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * might sleep) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#type\">type</a>-><a class=\"id\" href=\"#read\">read</a>(<a class=\"id\" href=\"#key\">key</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buflen\">buflen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_read_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * change the ownership of a key</span>", 
"<span class=\"comment\"> * - the keyring owned by the changer</span>", 
"<span class=\"comment\"> * - if the uid or gid is -1, then that parameter is not changed</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_CHOWN)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_chown_key\">keyctl_chown_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#gid_t\">gid_t</a> <a class=\"id\" href=\"#gid\">gid</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key_user\">key_user</a> *<a class=\"id\" href=\"#newowner\">newowner</a>, *<a class=\"id\" href=\"#zapowner\">zapowner</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uid\">uid</a> == (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 && <a class=\"id\" href=\"#gid\">gid</a> == (<a class=\"id\" href=\"#gid_t\">gid_t</a>) -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a> | <a class=\"id\" href=\"#KEY_LOOKUP_PARTIAL\">KEY_LOOKUP_PARTIAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#KEY_SETATTR\">KEY_SETATTR</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* make the changes with the locks held to prevent chown/chown races */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only the sysadmin can chown a key to some other UID */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#uid\">uid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 && <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#uid\">uid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_put\">error_put</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* only the sysadmin can set the key's GID to a group other</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * than one of those that the current process subscribes to */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#gid\">gid</a> != (<a class=\"id\" href=\"#gid_t\">gid_t</a>) -1 && <a class=\"id\" href=\"#gid\">gid</a> != <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#gid\">gid</a> && !<a class=\"id\" href=\"#in_group_p\">in_group_p</a>(<a class=\"id\" href=\"#gid\">gid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_put\">error_put</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* change the UID */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uid\">uid</a> != (<a class=\"id\" href=\"#uid_t\">uid_t</a>) -1 && <a class=\"id\" href=\"#uid\">uid</a> != <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#uid\">uid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newowner\">newowner</a> = <a class=\"id\" href=\"#key_user_lookup\">key_user_lookup</a>(<a class=\"id\" href=\"#uid\">uid</a>, <a class=\"id\" href=\"#current_user_ns\">current_user_ns</a>());", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#newowner\">newowner</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_put\">error_put</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* transfer the quota burden to the new user */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_IN_QUOTA\">KEY_FLAG_IN_QUOTA</a>, &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#maxkeys\">maxkeys</a> = (<a class=\"id\" href=\"#uid\">uid</a> == 0) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_quota_root_maxkeys\">key_quota_root_maxkeys</a> : <a class=\"id\" href=\"#key_quota_maxkeys\">key_quota_maxkeys</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned <a class=\"id\" href=\"#maxbytes\">maxbytes</a> = (<a class=\"id\" href=\"#uid\">uid</a> == 0) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_quota_root_maxbytes\">key_quota_root_maxbytes</a> : <a class=\"id\" href=\"#key_quota_maxbytes\">key_quota_maxbytes</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#qnkeys\">qnkeys</a> + 1 >= <a class=\"id\" href=\"#maxkeys\">maxkeys</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#qnbytes\">qnbytes</a> + <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#quotalen\">quotalen</a> >= <a class=\"id\" href=\"#maxbytes\">maxbytes</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#qnbytes\">qnbytes</a> + <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#quotalen\">quotalen</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#qnbytes\">qnbytes</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#quota_overrun\">quota_overrun</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#qnkeys\">qnkeys</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#qnbytes\">qnbytes</a> += <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#quotalen\">quotalen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#qnkeys\">qnkeys</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#qnbytes\">qnbytes</a> -= <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#quotalen\">quotalen</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#nkeys\">nkeys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#nkeys\">nkeys</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#test_bit\">test_bit</a>(<a class=\"id\" href=\"#KEY_FLAG_INSTANTIATED\">KEY_FLAG_INSTANTIATED</a>, &amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_dec\">atomic_dec</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>-><a class=\"id\" href=\"#nikeys\">nikeys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#nikeys\">nikeys</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#zapowner\">zapowner</a> = <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#user\">user</a> = <a class=\"id\" href=\"#newowner\">newowner</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#uid\">uid</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* change the GID */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#gid\">gid</a> != (<a class=\"id\" href=\"#gid_t\">gid_t</a>) -1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#gid\">gid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#error_put\">error_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#zapowner\">zapowner</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_user_put\">key_user_put</a>(<a class=\"id\" href=\"#zapowner\">zapowner</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#quota_overrun\">quota_overrun</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#newowner\">newowner</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zapowner\">zapowner</a> = <a class=\"id\" href=\"#newowner\">newowner</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EDQUOT\">EDQUOT</a>;", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#error_put\">error_put</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_chown_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * change the permission mask on a key</span>", 
"<span class=\"comment\"> * - the keyring owned by the changer</span>", 
"<span class=\"comment\"> * - implements keyctl(KEYCTL_SETPERM)</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_setperm_key\">keyctl_setperm_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#key_perm_t\">key_perm_t</a> <a class=\"id\" href=\"#perm\">perm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#perm\">perm</a> &amp; ~(<a class=\"id\" href=\"#KEY_POS_ALL\">KEY_POS_ALL</a> | <a class=\"id\" href=\"#KEY_USR_ALL\">KEY_USR_ALL</a> | <a class=\"id\" href=\"#KEY_GRP_ALL\">KEY_GRP_ALL</a> | <a class=\"id\" href=\"#KEY_OTH_ALL\">KEY_OTH_ALL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a> | <a class=\"id\" href=\"#KEY_LOOKUP_PARTIAL\">KEY_LOOKUP_PARTIAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#KEY_SETATTR\">KEY_SETATTR</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* make the changes with the locks held to prevent chown/chmod races */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if we're not the sysadmin, we can only change a key that we own */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_ADMIN\">CAP_SYS_ADMIN</a>) || <a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#uid\">uid</a> == <a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#perm\">perm</a> = <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#key\">key</a>-><a class=\"id\" href=\"#sem\">sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_setperm_key() */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * get the destination keyring for instantiation</span>", 
"<span class=\"comment\"> */</span>", 
"static long <a class=\"id\" href=\"#get_instantiation_keyring\">get_instantiation_keyring</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#ringid\">ringid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#key\">key</a> **<a class=\"id\" href=\"#_dest_keyring\">_dest_keyring</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#dkref\">dkref</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#_dest_keyring\">_dest_keyring</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* just return a NULL pointer if we weren't asked to make a link */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ringid\">ringid</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if a specific keyring is nominated by ID, then use that */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ringid\">ringid</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dkref\">dkref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a>, <a class=\"id\" href=\"#KEY_WRITE\">KEY_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#dkref\">dkref</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#dkref\">dkref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#_dest_keyring\">_dest_keyring</a> = <a class=\"id\" href=\"#key_ref_to_ptr\">key_ref_to_ptr</a>(<a class=\"id\" href=\"#dkref\">dkref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ringid\">ringid</a> == <a class=\"id\" href=\"#KEY_SPEC_REQKEY_AUTH_KEY\">KEY_SPEC_REQKEY_AUTH_KEY</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* otherwise specify the destination keyring recorded in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * authorisation key (any KEY_SPEC_*_KEYRING) */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ringid\">ringid</a> >= <a class=\"id\" href=\"#KEY_SPEC_REQUESTOR_KEYRING\">KEY_SPEC_REQUESTOR_KEYRING</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#_dest_keyring\">_dest_keyring</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOKEY\">ENOKEY</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * change the request_key authorisation key on the current process</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#keyctl_change_reqkey_auth\">keyctl_change_reqkey_auth</a>(struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> = <a class=\"id\" href=\"#key_get\">key_get</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#commit_creds\">commit_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"}", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * instantiate the key with the specified payload, and, if one is given, link</span>", 
"<span class=\"comment\"> * the key into the keyring</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_instantiate_key\">keyctl_instantiate_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#_payload\">_payload</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#plen\">plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#ringid\">ringid</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#instkey\">instkey</a>, *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#payload\">payload</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#vm\">vm</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%d,,%zu,%d\", <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#ringid\">ringid</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> &gt; 1024 * 1024 - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the appropriate instantiation authorisation key must have been</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * assumed before calling this */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#instkey\">instkey</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#instkey\">instkey</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#instkey\">instkey</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a>-><a class=\"id\" href=\"#serial\">serial</a> != <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* pull the payload in if one was supplied */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#_payload\">_payload</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#plen\">plen</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#payload\">payload</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#plen\">plen</a> <= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vm\">vm</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#payload\">payload</a> = <a class=\"id\" href=\"#vmalloc\">vmalloc</a>(<a class=\"id\" href=\"#plen\">plen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#payload\">payload</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#_payload\">_payload</a>, <a class=\"id\" href=\"#plen\">plen</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the destination keyring amongst those belonging to the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * requesting task */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_instantiation_keyring\">get_instantiation_keyring</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, <a class=\"id\" href=\"#rka\">rka</a>, &amp;<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error2\">error2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* instantiate the key and link it into a keyring */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_instantiate_and_link\">key_instantiate_and_link</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a>, <a class=\"id\" href=\"#payload\">payload</a>, <a class=\"id\" href=\"#plen\">plen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#instkey\">instkey</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* discard the assumed authority if it's just been disabled by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instantiation of the key */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#keyctl_change_reqkey_auth\">keyctl_change_reqkey_auth</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<a class=\"id\" href=\"#error2\">error2</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vm\">vm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vfree\">vfree</a>(<a class=\"id\" href=\"#payload\">payload</a>);", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_instantiate_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * negatively instantiate the key with the given timeout (in seconds), and, if</span>", 
"<span class=\"comment\"> * one is given, link the key into the keyring</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_negate_key\">keyctl_negate_key</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, unsigned <a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#ringid\">ringid</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a> = <a class=\"id\" href=\"#current_cred\">current_cred</a>();", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_key_auth\">request_key_auth</a> *<a class=\"id\" href=\"#rka\">rka</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#instkey\">instkey</a>, *<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kenter\">kenter</a>(\"%d,%u,%d\", <a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#timeout\">timeout</a>, <a class=\"id\" href=\"#ringid\">ringid</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the appropriate instantiation authorisation key must have been</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * assumed before calling this */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#instkey\">instkey</a> = <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#request_key_auth\">request_key_auth</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#instkey\">instkey</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rka\">rka</a> = <a class=\"id\" href=\"#instkey\">instkey</a>-><a class=\"id\" href=\"#payload\">payload</a>.<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a>-><a class=\"id\" href=\"#serial\">serial</a> != <a class=\"id\" href=\"#id\">id</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find the destination keyring if present (which must also be</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * writable) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_instantiation_keyring\">get_instantiation_keyring</a>(<a class=\"id\" href=\"#ringid\">ringid</a>, <a class=\"id\" href=\"#rka\">rka</a>, &amp;<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* instantiate the key and link it into a keyring */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#key_negate_and_link\">key_negate_and_link</a>(<a class=\"id\" href=\"#rka\">rka</a>-><a class=\"id\" href=\"#target_key\">target_key</a>, <a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>, <a class=\"id\" href=\"#instkey\">instkey</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#dest_keyring\">dest_keyring</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* discard the assumed authority if it's just been disabled by</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * instantiation of the key */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#keyctl_change_reqkey_auth\">keyctl_change_reqkey_auth</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_negate_key() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * set the default keyring in which request_key() will cache keys</span>", 
"<span class=\"comment\"> * - return the old setting</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_set_reqkey_keyring\">keyctl_set_reqkey_keyring</a>(int <a class=\"id\" href=\"#reqkey_defl\">reqkey_defl</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#new\">new</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#old_setting\">old_setting</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_setting\">old_setting</a> = <a class=\"id\" href=\"#current_cred_xxx\">current_cred_xxx</a>(<a class=\"id\" href=\"#jit_keyring\">jit_keyring</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reqkey_defl\">reqkey_defl</a> == <a class=\"id\" href=\"#KEY_REQKEY_DEFL_NO_CHANGE\">KEY_REQKEY_DEFL_NO_CHANGE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#old_setting\">old_setting</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a> = <a class=\"id\" href=\"#prepare_creds\">prepare_creds</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new\">new</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#reqkey_defl\">reqkey_defl</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_THREAD_KEYRING\">KEY_REQKEY_DEFL_THREAD_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#install_thread_keyring_to_cred\">install_thread_keyring_to_cred</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set\">set</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_PROCESS_KEYRING\">KEY_REQKEY_DEFL_PROCESS_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#install_process_keyring_to_cred\">install_process_keyring_to_cred</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> != -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set\">set</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_DEFAULT\">KEY_REQKEY_DEFL_DEFAULT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_SESSION_KEYRING\">KEY_REQKEY_DEFL_SESSION_KEYRING</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_USER_KEYRING\">KEY_REQKEY_DEFL_USER_KEYRING</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_USER_SESSION_KEYRING\">KEY_REQKEY_DEFL_USER_SESSION_KEYRING</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_REQUESTOR_KEYRING\">KEY_REQKEY_DEFL_REQUESTOR_KEYRING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set\">set</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_NO_CHANGE\">KEY_REQKEY_DEFL_NO_CHANGE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#KEY_REQKEY_DEFL_GROUP_KEYRING\">KEY_REQKEY_DEFL_GROUP_KEYRING</a>:", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#set\">set</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new\">new</a>-><a class=\"id\" href=\"#jit_keyring\">jit_keyring</a> = <a class=\"id\" href=\"#reqkey_defl\">reqkey_defl</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#commit_creds\">commit_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#old_setting\">old_setting</a>;", 
"<a class=\"id\" href=\"#error\">error</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#abort_creds\">abort_creds</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"} <span class=\"comment\">/* end keyctl_set_reqkey_keyring() */</span>", 
"", 
"<span class=\"comment\">/*****************************************************************************/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * set or clear the timeout for a key</span>", 
"<span class=\"comment\"> */</span>", 
"long <a class=\"id\" href=\"#keyctl_set_timeout\">keyctl_set_timeout</a>(<a class=\"id\" href=\"#key_serial_t\">key_serial_t</a> <a class=\"id\" href=\"#id\">id</a>, unsigned <a class=\"id\" href=\"#timeout\">timeout</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#key\">key</a> *<a class=\"id\" href=\"#key\">key</a>, *<a class=\"id\" href=\"#instkey\">instkey</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref_t\">key_ref_t</a> <a class=\"id\" href=\"#key_ref\">key_ref</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#time_t\">time_t</a> <a class=\"id\" href=\"#expiry\">expiry</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>, <a class=\"id\" href=\"#KEY_LOOKUP_CREATE\">KEY_LOOKUP_CREATE</a> | <a class=\"id\" href=\"#KEY_LOOKUP_PARTIAL\">KEY_LOOKUP_PARTIAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#KEY_SETATTR\">KEY_SETATTR</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* setting the timeout on a key under construction is permitted</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if we have the authorisation token handy */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>) == -<a class=\"id\" href=\"#EACCES\">EACCES</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#instkey\">instkey</a> = <a class=\"id\" href=\"#key_get_instantiation_authkey\">key_get_instantiation_authkey</a>(<a class=\"id\" href=\"#id\">id</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#instkey\">instkey</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_put\">key_put</a>(<a class=\"id\" href=\"#instkey\">instkey</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#key_ref\">key_ref</a> = <a class=\"id\" href=\"#lookup_user_key\">lookup_user_key</a>(<a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#KEY_LOOKUP_PARTIAL\">KEY_LOOKUP_PARTIAL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#okay\">okay</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#key_ref\">key_ref</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error\">error</a>;", 
];
xr_frag_insert('l/3c/031732166f6f698cc9d9e209b2ebc2f887ae19.xr', __xr_tmp);
