var __xr_tmp = [
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#proc_single_show\">proc_single_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_single_file_operations\">proc_single_file_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_single_open\">proc_single_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#mem_open\">mem_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a>* <a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a>* <a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> = (void*)((long)<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#self_exec_id\">self_exec_id</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#mem_read\">mem_read</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#src\">src</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#check_mem_permission\">check_mem_permission</a>(<a class=\"id\" href=\"#task\">task</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = (char *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
" ", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
" ", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a> != (void*)((long)<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#self_exec_id\">self_exec_id</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_put\">out_put</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
" ", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#this_len\">this_len</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) ? <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> : <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#this_len\">this_len</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a> || <a class=\"id\" href=\"#check_mem_permission\">check_mem_permission</a>(<a class=\"id\" href=\"#task\">task</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#retval\">retval</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
" ", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<a class=\"id\" href=\"#out_put\">out_put</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#page\">page</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#mem_write\">mem_write</a> <a class=\"id\" href=\"#NULL\">NULL</a>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#mem_write\">mem_write</a>", 
"<span class=\"comment\">/* This is a security hazard */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#mem_write\">mem_write</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#copied\">copied</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#dst\">dst</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#check_mem_permission\">check_mem_permission</a>(<a class=\"id\" href=\"#task\">task</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = (char *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = 0;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#this_len\">this_len</a>, <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) ? <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> : <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#this_len\">this_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#this_len\">this_len</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#retval\">retval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copied\">copied</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#copied\">copied</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#retval\">retval</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#page\">page</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#copied\">copied</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#mem_lseek\">mem_lseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>, int <a class=\"id\" href=\"#orig\">orig</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#orig\">orig</a>) {", 
"<span class=\"ts\"/>case 0:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case 1:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a> += <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#force_successful_syscall_return\">force_successful_syscall_return</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_mem_operations\">proc_mem_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mem_lseek\">mem_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mem_read\">mem_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mem_write\">mem_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#mem_open\">mem_open</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#environ_read\">environ_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#src\">src</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_no_task\">out_no_task</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ptrace_may_access\">ptrace_may_access</a>(<a class=\"id\" href=\"#task\">task</a>, <a class=\"id\" href=\"#PTRACE_MODE_READ\">PTRACE_MODE_READ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = (char *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#count\">count</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#this_len\">this_len</a>, <a class=\"id\" href=\"#retval\">retval</a>, <a class=\"id\" href=\"#max_len\">max_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#env_end\">env_end</a> - (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#env_start\">env_start</a> + <a class=\"id\" href=\"#src\">src</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#this_len\">this_len</a> <= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_len\">max_len</a> = (<a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>) ? <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> : <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_len\">this_len</a> = (<a class=\"id\" href=\"#this_len\">this_len</a> &gt; <a class=\"id\" href=\"#max_len\">max_len</a>) ? <a class=\"id\" href=\"#max_len\">max_len</a> : <a class=\"id\" href=\"#this_len\">this_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#access_process_vm\">access_process_vm</a>(<a class=\"id\" href=\"#task\">task</a>, (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#env_start\">env_start</a> + <a class=\"id\" href=\"#src\">src</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#this_len\">this_len</a>, 0);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#retval\">retval</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> += <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#page\">page</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<a class=\"id\" href=\"#out_no_task\">out_no_task</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_environ_operations\">proc_environ_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#environ_read\">environ_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#oom_adjust_read\">oom_adjust_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#oom_adjust\">oom_adjust</a> = <a class=\"id\" href=\"#OOM_DISABLE\">OOM_DISABLE</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oom_adjust\">oom_adjust</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_adj\">oom_adj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), \"%i\\n\", <a class=\"id\" href=\"#oom_adjust\">oom_adjust</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#oom_adjust_write\">oom_adjust_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#oom_adjust\">oom_adjust</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#strict_strtol\">strict_strtol</a>(<a class=\"id\" href=\"#strstrip\">strstrip</a>(<a class=\"id\" href=\"#buffer\">buffer</a>), 0, &amp;<a class=\"id\" href=\"#oom_adjust\">oom_adjust</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#oom_adjust\">oom_adjust</a> &lt; <a class=\"id\" href=\"#OOM_ADJUST_MIN\">OOM_ADJUST_MIN</a> || <a class=\"id\" href=\"#oom_adjust\">oom_adjust</a> &gt; <a class=\"id\" href=\"#OOM_ADJUST_MAX\">OOM_ADJUST_MAX</a>) &&", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#oom_adjust\">oom_adjust</a> != <a class=\"id\" href=\"#OOM_DISABLE\">OOM_DISABLE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oom_adjust\">oom_adjust</a> &lt; <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_adj\">oom_adj</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RESOURCE\">CAP_SYS_RESOURCE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Warn that /proc/pid/oom_adj is deprecated, see</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Documentation/feature-removal-schedule.txt.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s (%d): /proc/%d/oom_adj is deprecated, \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"please use /proc/%d/oom_score_adj instead.\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#current\">current</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#task\">task</a>), <a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#task\">task</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_adj\">oom_adj</a> = <a class=\"id\" href=\"#oom_adjust\">oom_adjust</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Scale /proc/pid/oom_score_adj appropriately ensuring that a maximum</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * value is always attainable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_adj\">oom_adj</a> == <a class=\"id\" href=\"#OOM_ADJUST_MAX\">OOM_ADJUST_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> = <a class=\"id\" href=\"#OOM_SCORE_ADJ_MAX\">OOM_SCORE_ADJ_MAX</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> = (<a class=\"id\" href=\"#oom_adjust\">oom_adjust</a> * <a class=\"id\" href=\"#OOM_SCORE_ADJ_MAX\">OOM_SCORE_ADJ_MAX</a>) /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>-<a class=\"id\" href=\"#OOM_DISABLE\">OOM_DISABLE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_oom_adjust_operations\">proc_oom_adjust_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#oom_adjust_read\">oom_adjust_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#oom_adjust_write\">oom_adjust_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#oom_score_adj_read\">oom_score_adj_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> = <a class=\"id\" href=\"#OOM_SCORE_ADJ_MIN\">OOM_SCORE_ADJ_MIN</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), \"%d\\n\", <a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#oom_score_adj_write\">oom_score_adj_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#strict_strtol\">strict_strtol</a>(<a class=\"id\" href=\"#strstrip\">strstrip</a>(<a class=\"id\" href=\"#buffer\">buffer</a>), 0, &amp;<a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> &lt; <a class=\"id\" href=\"#OOM_SCORE_ADJ_MIN\">OOM_SCORE_ADJ_MIN</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> &gt; <a class=\"id\" href=\"#OOM_SCORE_ADJ_MAX\">OOM_SCORE_ADJ_MAX</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#lock_task_sighand\">lock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> &lt; <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RESOURCE\">CAP_SYS_RESOURCE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> = <a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Scale /proc/pid/oom_adj appropriately ensuring that OOM_DISABLE is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * always attainable.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> == <a class=\"id\" href=\"#OOM_SCORE_ADJ_MIN\">OOM_SCORE_ADJ_MIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_adj\">oom_adj</a> = <a class=\"id\" href=\"#OOM_DISABLE\">OOM_DISABLE</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#signal\">signal</a>-><a class=\"id\" href=\"#oom_adj\">oom_adj</a> = (<a class=\"id\" href=\"#oom_score_adj\">oom_score_adj</a> * <a class=\"id\" href=\"#OOM_ADJUST_MAX\">OOM_ADJUST_MAX</a>) /", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#OOM_SCORE_ADJ_MAX\">OOM_SCORE_ADJ_MAX</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_task_sighand\">unlock_task_sighand</a>(<a class=\"id\" href=\"#task\">task</a>, &amp;<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_oom_score_adj_operations\">proc_oom_score_adj_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#oom_score_adj_read\">oom_score_adj_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#oom_score_adj_write\">oom_score_adj_write</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_AUDITSYSCALL\">CONFIG_AUDITSYSCALL</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TMPBUFLEN\">TMPBUFLEN</a> 21", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_loginuid_read\">proc_loginuid_read</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>[<a class=\"id\" href=\"#TMPBUFLEN\">TMPBUFLEN</a>];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, <a class=\"id\" href=\"#TMPBUFLEN\">TMPBUFLEN</a>, \"%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_loginuid\">audit_get_loginuid</a>(<a class=\"id\" href=\"#task\">task</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_loginuid_write\">proc_loginuid_write</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#page\">page</a>, *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uid_t\">uid_t</a> <a class=\"id\" href=\"#loginuid\">loginuid</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_AUDIT_CONTROL\">CAP_AUDIT_CONTROL</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a> != <a class=\"id\" href=\"#pid_task\">pid_task</a>(<a class=\"id\" href=\"#proc_pid\">proc_pid</a>(<a class=\"id\" href=\"#inode\">inode</a>), <a class=\"id\" href=\"#PIDTYPE_PID\">PIDTYPE_PID</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> >= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ppos\">ppos</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No partial writes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a> = (char*)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#page\">page</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_page\">out_free_page</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>[<a class=\"id\" href=\"#count\">count</a>] = '\\0';", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loginuid\">loginuid</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#page\">page</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>, 10);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a> == <a class=\"id\" href=\"#page\">page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free_page\">out_free_page</a>;", 
"", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#audit_set_loginuid\">audit_set_loginuid</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#loginuid\">loginuid</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#length\">length</a> == 0))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<a class=\"id\" href=\"#out_free_page\">out_free_page</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#length\">length</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_loginuid_operations\">proc_loginuid_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_loginuid_read\">proc_loginuid_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_loginuid_write\">proc_loginuid_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_sessionid_read\">proc_sessionid_read</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>[<a class=\"id\" href=\"#TMPBUFLEN\">TMPBUFLEN</a>];", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#scnprintf\">scnprintf</a>(<a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, <a class=\"id\" href=\"#TMPBUFLEN\">TMPBUFLEN</a>, \"%u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#audit_get_sessionid\">audit_get_sessionid</a>(<a class=\"id\" href=\"#task\">task</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#tmpbuf\">tmpbuf</a>, <a class=\"id\" href=\"#length\">length</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_sessionid_operations\">proc_sessionid_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_sessionid_read\">proc_sessionid_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_FAULT_INJECTION\">CONFIG_FAULT_INJECTION</a>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_fault_inject_read\">proc_fault_inject_read</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#make_it_fail\">make_it_fail</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_it_fail\">make_it_fail</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#make_it_fail\">make_it_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>), \"%i\\n\", <a class=\"id\" href=\"#make_it_fail\">make_it_fail</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_fault_inject_write\">proc_fault_inject_write</a>(struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PROC_NUMBUF\">PROC_NUMBUF</a>], *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#make_it_fail\">make_it_fail</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RESOURCE\">CAP_SYS_RESOURCE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#make_it_fail\">make_it_fail</a> = <a class=\"id\" href=\"#simple_strtol\">simple_strtol</a>(<a class=\"id\" href=\"#strstrip\">strstrip</a>(<a class=\"id\" href=\"#buffer\">buffer</a>), &amp;<a class=\"id\" href=\"#end\">end</a>, 0);", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_dentry\">f_dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#make_it_fail\">make_it_fail</a> = <a class=\"id\" href=\"#make_it_fail\">make_it_fail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_fault_inject_operations\">proc_fault_inject_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_fault_inject_read\">proc_fault_inject_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_fault_inject_write\">proc_fault_inject_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#generic_file_llseek\">generic_file_llseek</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCHED_DEBUG\">CONFIG_SCHED_DEBUG</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Print out various scheduling related per-task fields:</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#sched_show\">sched_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_sched_show_task\">proc_sched_show_task</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#m\">m</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sched_write\">sched_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#proc_sched_set_task\">proc_sched_set_task</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#sched_open\">sched_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#sched_show\">sched_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_pid_sched_operations\">proc_pid_sched_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sched_open\">sched_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#sched_write\">sched_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#comm_write\">comm_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#offset\">offset</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>.<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, 0, sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = sizeof(<a class=\"id\" href=\"#buffer\">buffer</a>) - 1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#same_thread_group\">same_thread_group</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_task_comm\">set_task_comm</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#comm_show\">comm_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ESRCH\">ESRCH</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"%s\\n\", <a class=\"id\" href=\"#p\">p</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#comm_open\">comm_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#single_open\">single_open</a>(<a class=\"id\" href=\"#filp\">filp</a>, <a class=\"id\" href=\"#comm_show\">comm_show</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#proc_pid_set_comm_operations\">proc_pid_set_comm_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#comm_open\">comm_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#comm_write\">comm_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#single_release\">single_release</a>,", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We added or removed a vma mapping the executable. The vmas are only mapped</span>", 
"<span class=\"comment\"> * during exec and are not mapped with the mmap system call.</span>", 
"<span class=\"comment\"> * Callers must hold down_write() on the mm's mmap_sem for these</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#added_exe_file_vma\">added_exe_file_vma</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#num_exe_file_vmas\">num_exe_file_vmas</a>++;", 
"}", 
"", 
"void <a class=\"id\" href=\"#removed_exe_file_vma\">removed_exe_file_vma</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#num_exe_file_vmas\">num_exe_file_vmas</a>--;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#num_exe_file_vmas\">num_exe_file_vmas</a> == 0) && <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a>){", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"}", 
"", 
"void <a class=\"id\" href=\"#set_mm_exe_file\">set_mm_exe_file</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#new_exe_file\">new_exe_file</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_exe_file\">new_exe_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_file\">get_file</a>(<a class=\"id\" href=\"#new_exe_file\">new_exe_file</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a> = <a class=\"id\" href=\"#new_exe_file\">new_exe_file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#num_exe_file_vmas\">num_exe_file_vmas</a> = 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#get_mm_exe_file\">get_mm_exe_file</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#exe_file\">exe_file</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need mmap_sem to protect against races with removal of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * VM_EXECUTABLE vmas */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exe_file\">exe_file</a> = <a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#exe_file\">exe_file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_file\">get_file</a>(<a class=\"id\" href=\"#exe_file\">exe_file</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#mm\">mm</a>-><a class=\"id\" href=\"#mmap_sem\">mmap_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#exe_file\">exe_file</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#dup_mm_exe_file\">dup_mm_exe_file</a>(struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#oldmm\">oldmm</a>, struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#newmm\">newmm</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* It's safe to write the exe_file pointer without exe_file_lock because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this is called during fork when the task is not yet in /proc */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newmm\">newmm</a>-><a class=\"id\" href=\"#exe_file\">exe_file</a> = <a class=\"id\" href=\"#get_mm_exe_file\">get_mm_exe_file</a>(<a class=\"id\" href=\"#oldmm\">oldmm</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_exe_link\">proc_exe_link</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#exe_path\">exe_path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#exe_file\">exe_file</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task\">task</a> = <a class=\"id\" href=\"#get_proc_task\">get_proc_task</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#task\">task</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#get_task_mm\">get_task_mm</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_task_struct\">put_task_struct</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exe_file\">exe_file</a> = <a class=\"id\" href=\"#get_mm_exe_file\">get_mm_exe_file</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#exe_file\">exe_file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#exe_path\">exe_path</a> = <a class=\"id\" href=\"#exe_file\">exe_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path_get\">path_get</a>(&amp;<a class=\"id\" href=\"#exe_file\">exe_file</a>-><a class=\"id\" href=\"#f_path\">f_path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#exe_file\">exe_file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOENT\">ENOENT</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#proc_pid_follow_link\">proc_pid_follow_link</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, struct <a class=\"id\" href=\"#nameidata\">nameidata</a> *<a class=\"id\" href=\"#nd\">nd</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We don't need a base pointer in the /proc filesystem */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Are we allowed to snoop on the tasks file descriptors? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_fd_access_allowed\">proc_fd_access_allowed</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#proc_get_link\">proc_get_link</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#nd\">nd</a>-><a class=\"id\" href=\"#path\">path</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(<a class=\"id\" href=\"#error\">error</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_proc_readlink\">do_proc_readlink</a>(struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#tmp\">tmp</a> = (char*)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#pathname\">pathname</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tmp\">tmp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pathname\">pathname</a> = <a class=\"id\" href=\"#d_path_with_unreachable\">d_path_with_unreachable</a>(<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#pathname\">pathname</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#pathname\">pathname</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#tmp\">tmp</a> + <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - 1 - <a class=\"id\" href=\"#pathname\">pathname</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#buflen\">buflen</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#pathname\">pathname</a>, <a class=\"id\" href=\"#len\">len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#tmp\">tmp</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#len\">len</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#proc_pid_readlink\">proc_pid_readlink</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> * <a class=\"id\" href=\"#dentry\">dentry</a>, char <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#buffer\">buffer</a>, int <a class=\"id\" href=\"#buflen\">buflen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#path\">path</a> <a class=\"id\" href=\"#path\">path</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Are we allowed to snoop on the tasks file descriptors? */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#proc_fd_access_allowed\">proc_fd_access_allowed</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#op\">op</a>.<a class=\"id\" href=\"#proc_get_link\">proc_get_link</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#do_proc_readlink\">do_proc_readlink</a>(&amp;<a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buflen\">buflen</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path_put\">path_put</a>(&amp;<a class=\"id\" href=\"#path\">path</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#inode_operations\">inode_operations</a> <a class=\"id\" href=\"#proc_pid_link_inode_operations\">proc_pid_link_inode_operations</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#readlink\">readlink</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_pid_readlink\">proc_pid_readlink</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#follow_link\">follow_link</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_pid_follow_link\">proc_pid_follow_link</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#setattr\">setattr</a><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_setattr\">proc_setattr</a>,", 
"};", 
"", 
"", 
"<span class=\"comment\">/* building an inode */</span>", 
"", 
"static int <a class=\"id\" href=\"#task_dumpable\">task_dumpable</a>(struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#dumpable\">dumpable</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mm_struct\">mm_struct</a> *<a class=\"id\" href=\"#mm\">mm</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_lock\">task_lock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm\">mm</a> = <a class=\"id\" href=\"#task\">task</a>-><a class=\"id\" href=\"#mm\">mm</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dumpable\">dumpable</a> = <a class=\"id\" href=\"#get_dumpable\">get_dumpable</a>(<a class=\"id\" href=\"#mm\">mm</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#task_unlock\">task_unlock</a>(<a class=\"id\" href=\"#task\">task</a>);", 
"<span class=\"ts\"/>if(<a class=\"id\" href=\"#dumpable\">dumpable</a> == 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"static struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#proc_pid_make_inode\">proc_pid_make_inode</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> * <a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#task_struct\">task_struct</a> *<a class=\"id\" href=\"#task\">task</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> * <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_inode\">proc_inode</a> *<a class=\"id\" href=\"#ei\">ei</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We need a new inode */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#new_inode\">new_inode</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#inode\">inode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Common stuff */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ei\">ei</a> = <a class=\"id\" href=\"#PROC_I\">PROC_I</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_mtime\">i_mtime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_atime\">i_atime</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#CURRENT_TIME\">CURRENT_TIME</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_op\">i_op</a> = &amp;<a class=\"id\" href=\"#proc_def_inode_operations\">proc_def_inode_operations</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
];
xr_frag_insert('l/3c/6abbae33d36e7bfd3ec6743ff0370fdef5d02c.xr', __xr_tmp);
