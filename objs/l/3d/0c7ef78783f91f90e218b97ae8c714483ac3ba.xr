var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ppp-comp.h - Definitions for doing PPP packet compression.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (c) 1994 The Australian National University.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Permission to use, copy, modify, and distribute this software and its</span>", 
"<span class=\"comment\"> * documentation is hereby granted, provided that the above copyright</span>", 
"<span class=\"comment\"> * notice appears in all copies.  This software is provided without any</span>", 
"<span class=\"comment\"> * warranty, express or implied. The Australian National University</span>", 
"<span class=\"comment\"> * makes no representations about the suitability of this software for</span>", 
"<span class=\"comment\"> * any purpose.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * IN NO EVENT SHALL THE AUSTRALIAN NATIONAL UNIVERSITY BE LIABLE TO ANY</span>", 
"<span class=\"comment\"> * PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES</span>", 
"<span class=\"comment\"> * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF</span>", 
"<span class=\"comment\"> * THE AUSTRALIAN NATIONAL UNIVERSITY HAVE BEEN ADVISED OF THE POSSIBILITY</span>", 
"<span class=\"comment\"> * OF SUCH DAMAGE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * THE AUSTRALIAN NATIONAL UNIVERSITY SPECIFICALLY DISCLAIMS ANY WARRANTIES,</span>", 
"<span class=\"comment\"> * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY</span>", 
"<span class=\"comment\"> * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS</span>", 
"<span class=\"comment\"> * ON AN \"AS IS\" BASIS, AND THE AUSTRALIAN NATIONAL UNIVERSITY HAS NO</span>", 
"<span class=\"comment\"> * OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,</span>", 
"<span class=\"comment\"> * OR MODIFICATIONS.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  ==FILEVERSION 980319==</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  NOTE TO MAINTAINERS:</span>", 
"<span class=\"comment\"> *     If you modify this file at all, please set the above date.</span>", 
"<span class=\"comment\"> *     ppp-comp.h is shipped with a PPP distribution as well as with the kernel;</span>", 
"<span class=\"comment\"> *     if everyone increases the FILEVERSION number above, then scripts</span>", 
"<span class=\"comment\"> *     can do the right thing when deciding whether to install a new ppp-comp.h</span>", 
"<span class=\"comment\"> *     file.  Don't change the format of that line otherwise, so the</span>", 
"<span class=\"comment\"> *     installation script can recognize it.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_NET_PPP_COMP_H\">_NET_PPP_COMP_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_NET_PPP_COMP_H\">_NET_PPP_COMP_H</a>", 
"", 
"struct <a class=\"id\" href=\"#module\">module</a>;", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The following symbols control whether we include code for</span>", 
"<span class=\"comment\"> * various compression methods.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#DO_BSD_COMPRESS\">DO_BSD_COMPRESS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DO_BSD_COMPRESS\">DO_BSD_COMPRESS</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* by default, include BSD-Compress */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#DO_DEFLATE\">DO_DEFLATE</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DO_DEFLATE\">DO_DEFLATE</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* by default, include Deflate */</span>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DO_PREDICTOR_1\">DO_PREDICTOR_1</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DO_PREDICTOR_2\">DO_PREDICTOR_2</a><span class=\"ts\"/>0", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Structure giving methods for compression/decompression.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"struct <a class=\"id\" href=\"#compressor\">compressor</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#compress_proto\">compress_proto</a>;<span class=\"ts\"/><span class=\"comment\">/* CCP compression protocol number */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate space for a compressor (transmit side) */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>*(*<a class=\"id\" href=\"#comp_alloc\">comp_alloc</a>) (unsigned char *<a class=\"id\" href=\"#options\">options</a>, int <a class=\"id\" href=\"#opt_len\">opt_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free space used by a compressor */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#comp_free\">comp_free</a>) (void *<a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize a compressor */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#comp_init\">comp_init</a>) (void *<a class=\"id\" href=\"#state\">state</a>, unsigned char *<a class=\"id\" href=\"#options\">options</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#opt_len\">opt_len</a>, int <a class=\"id\" href=\"#unit\">unit</a>, int <a class=\"id\" href=\"#opthdr\">opthdr</a>, int <a class=\"id\" href=\"#debug\">debug</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset a compressor */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#comp_reset\">comp_reset</a>) (void *<a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compress a packet */</span>", 
"<span class=\"ts\"/>int     (*<a class=\"id\" href=\"#compress\">compress</a>) (void *<a class=\"id\" href=\"#state\">state</a>, unsigned char *<a class=\"id\" href=\"#rptr\">rptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned char *<a class=\"id\" href=\"#obuf\">obuf</a>, int <a class=\"id\" href=\"#isize\">isize</a>, int <a class=\"id\" href=\"#osize\">osize</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return compression statistics */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#comp_stat\">comp_stat</a>) (void *<a class=\"id\" href=\"#state\">state</a>, struct <a class=\"id\" href=\"#compstat\">compstat</a> *<a class=\"id\" href=\"#stats\">stats</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Allocate space for a decompressor (receive side) */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>*(*<a class=\"id\" href=\"#decomp_alloc\">decomp_alloc</a>) (unsigned char *<a class=\"id\" href=\"#options\">options</a>, int <a class=\"id\" href=\"#opt_len\">opt_len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Free space used by a decompressor */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#decomp_free\">decomp_free</a>) (void *<a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Initialize a decompressor */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#decomp_init\">decomp_init</a>) (void *<a class=\"id\" href=\"#state\">state</a>, unsigned char *<a class=\"id\" href=\"#options\">options</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#opt_len\">opt_len</a>, int <a class=\"id\" href=\"#unit\">unit</a>, int <a class=\"id\" href=\"#opthdr\">opthdr</a>, int <a class=\"id\" href=\"#mru\">mru</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#debug\">debug</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset a decompressor */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#decomp_reset\">decomp_reset</a>) (void *<a class=\"id\" href=\"#state\">state</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Decompress a packet. */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/>(*<a class=\"id\" href=\"#decompress\">decompress</a>) (void *<a class=\"id\" href=\"#state\">state</a>, unsigned char *<a class=\"id\" href=\"#ibuf\">ibuf</a>, int <a class=\"id\" href=\"#isize\">isize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#obuf\">obuf</a>, int <a class=\"id\" href=\"#osize\">osize</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update state for an incompressible packet received */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#incomp\">incomp</a>) (void *<a class=\"id\" href=\"#state\">state</a>, unsigned char *<a class=\"id\" href=\"#ibuf\">ibuf</a>, int <a class=\"id\" href=\"#icnt\">icnt</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Return decompression statistics */</span>", 
"<span class=\"ts\"/>void<span class=\"ts\"/>(*<a class=\"id\" href=\"#decomp_stat\">decomp_stat</a>) (void *<a class=\"id\" href=\"#state\">state</a>, struct <a class=\"id\" href=\"#compstat\">compstat</a> *<a class=\"id\" href=\"#stats\">stats</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Used in locking compressor modules */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Extra skb space needed by the compressor algorithm */</span>", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#comp_extra\">comp_extra</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The return value from decompress routine is the length of the</span>", 
"<span class=\"comment\"> * decompressed packet if successful, otherwise DECOMP_ERROR</span>", 
"<span class=\"comment\"> * or DECOMP_FATALERROR if an error occurred.</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> * We need to make this distinction so that we can disable certain</span>", 
"<span class=\"comment\"> * useful functionality, namely sending a CCP reset-request as a result</span>", 
"<span class=\"comment\"> * of an error detected after decompression.  This is to avoid infringing</span>", 
"<span class=\"comment\"> * a patent held by Motorola.</span>", 
"<span class=\"comment\"> * Don't you just lurve software patents.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECOMP_ERROR\">DECOMP_ERROR</a><span class=\"ts\"/><span class=\"ts\"/>-1<span class=\"ts\"/><span class=\"comment\">/* error detected before decomp. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DECOMP_FATALERROR\">DECOMP_FATALERROR</a><span class=\"ts\"/>-2<span class=\"ts\"/><span class=\"comment\">/* error detected after decomp. */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * CCP codes.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_CONFREQ\">CCP_CONFREQ</a><span class=\"ts\"/>1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_CONFACK\">CCP_CONFACK</a><span class=\"ts\"/>2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_TERMREQ\">CCP_TERMREQ</a><span class=\"ts\"/>5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_TERMACK\">CCP_TERMACK</a><span class=\"ts\"/>6", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_RESETREQ\">CCP_RESETREQ</a><span class=\"ts\"/>14", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_RESETACK\">CCP_RESETACK</a><span class=\"ts\"/>15", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Max # bytes for a CCP option</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_MAX_OPTION_LENGTH\">CCP_MAX_OPTION_LENGTH</a><span class=\"ts\"/>32", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Parts of a CCP packet.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_CODE\">CCP_CODE</a>(<a class=\"id\" href=\"#dp\">dp</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#dp\">dp</a>)[0])", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_ID\">CCP_ID</a>(<a class=\"id\" href=\"#dp\">dp</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#dp\">dp</a>)[1])", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_LENGTH\">CCP_LENGTH</a>(<a class=\"id\" href=\"#dp\">dp</a>)<span class=\"ts\"/><span class=\"ts\"/>(((<a class=\"id\" href=\"#dp\">dp</a>)[2] << 8) + (<a class=\"id\" href=\"#dp\">dp</a>)[3])", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_HDRLEN\">CCP_HDRLEN</a><span class=\"ts\"/><span class=\"ts\"/>4", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_OPT_CODE\">CCP_OPT_CODE</a>(<a class=\"id\" href=\"#dp\">dp</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#dp\">dp</a>)[0])", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_OPT_LENGTH\">CCP_OPT_LENGTH</a>(<a class=\"id\" href=\"#dp\">dp</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#dp\">dp</a>)[1])", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CCP_OPT_MINLEN\">CCP_OPT_MINLEN</a><span class=\"ts\"/><span class=\"ts\"/>2", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definitions for BSD-Compress.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CI_BSD_COMPRESS\">CI_BSD_COMPRESS</a><span class=\"ts\"/><span class=\"ts\"/>21<span class=\"ts\"/><span class=\"comment\">/* config. option for BSD-Compress */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CILEN_BSD_COMPRESS\">CILEN_BSD_COMPRESS</a><span class=\"ts\"/>3<span class=\"ts\"/><span class=\"comment\">/* length of config. option */</span>", 
"", 
"<span class=\"comment\">/* Macros for handling the 3rd byte of the BSD-Compress config option. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_NBITS\">BSD_NBITS</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#x\">x</a>) &amp; 0x1F)<span class=\"ts\"/><span class=\"comment\">/* number of bits requested */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_VERSION\">BSD_VERSION</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#x\">x</a>) >> 5)<span class=\"ts\"/><span class=\"comment\">/* version of option format */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_CURRENT_VERSION\">BSD_CURRENT_VERSION</a><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* current version number */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_MAKE_OPT\">BSD_MAKE_OPT</a>(<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#n\">n</a>)<span class=\"ts\"/>(((<a class=\"id\" href=\"#v\">v</a>) << 5) | (<a class=\"id\" href=\"#n\">n</a>))", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_MIN_BITS\">BSD_MIN_BITS</a><span class=\"ts\"/><span class=\"ts\"/>9<span class=\"ts\"/><span class=\"comment\">/* smallest code size supported */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BSD_MAX_BITS\">BSD_MAX_BITS</a><span class=\"ts\"/><span class=\"ts\"/>15<span class=\"ts\"/><span class=\"comment\">/* largest code size supported */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definitions for Deflate.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CI_DEFLATE\">CI_DEFLATE</a><span class=\"ts\"/><span class=\"ts\"/>26<span class=\"ts\"/><span class=\"comment\">/* config option for Deflate */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CI_DEFLATE_DRAFT\">CI_DEFLATE_DRAFT</a><span class=\"ts\"/>24<span class=\"ts\"/><span class=\"comment\">/* value used in original draft RFC */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CILEN_DEFLATE\">CILEN_DEFLATE</a><span class=\"ts\"/><span class=\"ts\"/>4<span class=\"ts\"/><span class=\"comment\">/* length of its config option */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFLATE_MIN_SIZE\">DEFLATE_MIN_SIZE</a><span class=\"ts\"/>9", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFLATE_MAX_SIZE\">DEFLATE_MAX_SIZE</a><span class=\"ts\"/>15", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFLATE_METHOD_VAL\">DEFLATE_METHOD_VAL</a><span class=\"ts\"/>8", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFLATE_SIZE\">DEFLATE_SIZE</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/><span class=\"ts\"/>(((<a class=\"id\" href=\"#x\">x</a>) >> 4) + 8)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFLATE_METHOD\">DEFLATE_METHOD</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#x\">x</a>) &amp; 0x0F)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFLATE_MAKE_OPT\">DEFLATE_MAKE_OPT</a>(<a class=\"id\" href=\"#w\">w</a>)<span class=\"ts\"/>((((<a class=\"id\" href=\"#w\">w</a>) - 8) << 4) + <a class=\"id\" href=\"#DEFLATE_METHOD_VAL\">DEFLATE_METHOD_VAL</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DEFLATE_CHK_SEQUENCE\">DEFLATE_CHK_SEQUENCE</a><span class=\"ts\"/>0", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definitions for MPPE.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CI_MPPE\">CI_MPPE</a>                18      <span class=\"comment\">/* config option for MPPE */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CILEN_MPPE\">CILEN_MPPE</a>              6      <span class=\"comment\">/* length of config option */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Definitions for other, as yet unsupported, compression methods.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CI_PREDICTOR_1\">CI_PREDICTOR_1</a><span class=\"ts\"/><span class=\"ts\"/>1<span class=\"ts\"/><span class=\"comment\">/* config option for Predictor-1 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CILEN_PREDICTOR_1\">CILEN_PREDICTOR_1</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* length of its config option */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CI_PREDICTOR_2\">CI_PREDICTOR_2</a><span class=\"ts\"/><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* config option for Predictor-2 */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CILEN_PREDICTOR_2\">CILEN_PREDICTOR_2</a><span class=\"ts\"/>2<span class=\"ts\"/><span class=\"comment\">/* length of its config option */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#__KERNEL__\">__KERNEL__</a>", 
"extern int <a class=\"id\" href=\"#ppp_register_compressor\">ppp_register_compressor</a>(struct <a class=\"id\" href=\"#compressor\">compressor</a> *);", 
"extern void <a class=\"id\" href=\"#ppp_unregister_compressor\">ppp_unregister_compressor</a>(struct <a class=\"id\" href=\"#compressor\">compressor</a> *);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __KERNEL__ */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _NET_PPP_COMP_H */</span>", 
];
xr_frag_insert('l/3d/0c7ef78783f91f90e218b97ae8c714483ac3ba.xr', __xr_tmp);
