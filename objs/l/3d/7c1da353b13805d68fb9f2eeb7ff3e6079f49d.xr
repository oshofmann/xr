var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> &lt; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bufp\">bufp</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bufp\">bufp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * seq_commit - commit data to the buffer</span>", 
"<span class=\"comment\"> * @m: the seq_file handle</span>", 
"<span class=\"comment\"> * @num: the number of bytes to commit</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Commit @num bytes of data written to a buffer previously acquired</span>", 
"<span class=\"comment\"> * by seq_buf_get.  To signal an error condition, or that the data</span>", 
"<span class=\"comment\"> * didn't fit in the available space, pass a negative @num value.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#seq_commit\">seq_commit</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, int <a class=\"id\" href=\"#num\">num</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#num\">num</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> + <a class=\"id\" href=\"#num\">num</a> &gt; <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#num\">num</a>;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"char *<a class=\"id\" href=\"#mangle_path\">mangle_path</a>(char *<a class=\"id\" href=\"#s\">s</a>, char *<a class=\"id\" href=\"#p\">p</a>, char *<a class=\"id\" href=\"#esc\">esc</a>);", 
"int <a class=\"id\" href=\"#seq_open\">seq_open</a>(struct <a class=\"id\" href=\"#file\">file</a> *, const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *);", 
"<a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#seq_read\">seq_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *, char <a class=\"id\" href=\"#__user\">__user</a> *, <a class=\"id\" href=\"#size_t\">size_t</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *);", 
"<a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>(struct <a class=\"id\" href=\"#file\">file</a> *, <a class=\"id\" href=\"#loff_t\">loff_t</a>, int);", 
"int <a class=\"id\" href=\"#seq_release\">seq_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"int <a class=\"id\" href=\"#seq_escape\">seq_escape</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *, const char *, const char *);", 
"int <a class=\"id\" href=\"#seq_putc\">seq_putc</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, char <a class=\"id\" href=\"#c\">c</a>);", 
"int <a class=\"id\" href=\"#seq_puts\">seq_puts</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, const char *<a class=\"id\" href=\"#s\">s</a>);", 
"int <a class=\"id\" href=\"#seq_write\">seq_write</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>, const void *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"int <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *, const char *, ...)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__attribute__\">__attribute__</a> ((<a class=\"id\" href=\"#format\">format</a> (<a class=\"id\" href=\"#printf\">printf</a>,2,3)));", 
"", 
"int <a class=\"id\" href=\"#seq_path\">seq_path</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *, struct <a class=\"id\" href=\"#path\">path</a> *, char *);", 
"int <a class=\"id\" href=\"#seq_dentry\">seq_dentry</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *, struct <a class=\"id\" href=\"#dentry\">dentry</a> *, char *);", 
"int <a class=\"id\" href=\"#seq_path_root\">seq_path_root</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#path\">path</a>, struct <a class=\"id\" href=\"#path\">path</a> *<a class=\"id\" href=\"#root\">root</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  char *<a class=\"id\" href=\"#esc\">esc</a>);", 
"int <a class=\"id\" href=\"#seq_bitmap\">seq_bitmap</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, const unsigned long *<a class=\"id\" href=\"#bits\">bits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned int <a class=\"id\" href=\"#nr_bits\">nr_bits</a>);", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#seq_cpumask\">seq_cpumask</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_bitmap\">seq_bitmap</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#cpumask_bits\">cpumask_bits</a>(<a class=\"id\" href=\"#mask\">mask</a>), <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#seq_nodemask\">seq_nodemask</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_bitmap\">seq_bitmap</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#mask\">mask</a>-><a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#seq_bitmap_list\">seq_bitmap_list</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, const unsigned long *<a class=\"id\" href=\"#bits\">bits</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nr_bits\">nr_bits</a>);", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#seq_cpumask_list\">seq_cpumask_list</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#cpumask\">cpumask</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_bitmap_list\">seq_bitmap_list</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#cpumask_bits\">cpumask_bits</a>(<a class=\"id\" href=\"#mask\">mask</a>), <a class=\"id\" href=\"#nr_cpu_ids\">nr_cpu_ids</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#seq_nodemask_list\">seq_nodemask_list</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#nodemask_t\">nodemask_t</a> *<a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_bitmap_list\">seq_bitmap_list</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#mask\">mask</a>-><a class=\"id\" href=\"#bits\">bits</a>, <a class=\"id\" href=\"#MAX_NUMNODES\">MAX_NUMNODES</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#single_open\">single_open</a>(struct <a class=\"id\" href=\"#file\">file</a> *, int (*)(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *, void *), void *);", 
"int <a class=\"id\" href=\"#single_release\">single_release</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"void *<a class=\"id\" href=\"#__seq_open_private\">__seq_open_private</a>(struct <a class=\"id\" href=\"#file\">file</a> *, const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *, int);", 
"int <a class=\"id\" href=\"#seq_open_private\">seq_open_private</a>(struct <a class=\"id\" href=\"#file\">file</a> *, const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> *, int);", 
"int <a class=\"id\" href=\"#seq_release_private\">seq_release_private</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *, struct <a class=\"id\" href=\"#file\">file</a> *);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SEQ_START_TOKEN\">SEQ_START_TOKEN</a> ((void *)1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helpers for iteration over list_head-s in seq_files</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#seq_list_start\">seq_list_start</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#seq_list_start_head\">seq_list_start_head</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"extern struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#seq_list_next\">seq_list_next</a>(void *<a class=\"id\" href=\"#v\">v</a>, struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Helpers for iteration over hlist_head-s in seq_files</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"extern struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#seq_hlist_start\">seq_hlist_start</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"extern struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#seq_hlist_start_head\">seq_hlist_start_head</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"extern struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#seq_hlist_next\">seq_hlist_next</a>(void *<a class=\"id\" href=\"#v\">v</a>, struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"", 
"extern struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#seq_hlist_start_rcu\">seq_hlist_start_rcu</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"extern struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#seq_hlist_start_head_rcu\">seq_hlist_start_head_rcu</a>(struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a>);", 
"extern struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#seq_hlist_next_rcu\">seq_hlist_next_rcu</a>(void *<a class=\"id\" href=\"#v\">v</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#head\">head</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/3d/7c1da353b13805d68fb9f2eeb7ff3e6079f49d.xr', __xr_tmp);
