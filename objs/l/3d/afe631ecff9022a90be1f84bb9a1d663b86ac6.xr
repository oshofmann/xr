var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Thermal throttle event support code (such as syslog messaging and rate</span>", 
"<span class=\"comment\"> * limiting) that was factored out from x86_64 (mce_intel.c) and i386 (p4.c).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This allows consistent reporting of CPU thermal throttle events.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Maintains a counter in /sys that keeps track of the number of thermal</span>", 
"<span class=\"comment\"> * events, such that the user knows how bad the thermal problem might be</span>", 
"<span class=\"comment\"> * (since the logging to syslog and mcelog is rate limited).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Author: Dmitriy Zavin (dmitriyz@google.com)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Credits: Adapted from Zwane Mwaikambo's original code in mce_intel.c.</span>", 
"<span class=\"comment\"> *          Inspired by Ross Biro's and Al Borchers' counter code.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#notifier\">notifier</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sysdev\">sysdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#smp\">smp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#cpu\">cpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#processor\">processor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#apic\">apic</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#idle\">idle</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#mce\">mce</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#msr\">msr</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* How long to wait between reporting thermal events */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CHECK_INTERVAL\">CHECK_INTERVAL</a><span class=\"ts\"/><span class=\"ts\"/>(300 * <a class=\"id\" href=\"#HZ\">HZ</a>)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#THERMAL_THROTTLING_EVENT\">THERMAL_THROTTLING_EVENT</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#POWER_LIMIT_EVENT\">POWER_LIMIT_EVENT</a><span class=\"ts\"/><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Current thermal event state:</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#_thermal_state\">_thermal_state</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_event\">new_event</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#event\">event</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_check\">next_check</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last_count\">last_count</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#thermal_state\">thermal_state</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_thermal_state\">_thermal_state</a> <a class=\"id\" href=\"#core_throttle\">core_throttle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_thermal_state\">_thermal_state</a> <a class=\"id\" href=\"#core_power_limit\">core_power_limit</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_thermal_state\">_thermal_state</a> <a class=\"id\" href=\"#package_throttle\">package_throttle</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_thermal_state\">_thermal_state</a> <a class=\"id\" href=\"#package_power_limit\">package_power_limit</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#thermal_state\">thermal_state</a>, <a class=\"id\" href=\"#thermal_state\">thermal_state</a>);", 
"", 
"static <a class=\"id\" href=\"#atomic_t\">atomic_t</a> <a class=\"id\" href=\"#therm_throt_en\">therm_throt_en</a><span class=\"ts\"/>= <a class=\"id\" href=\"#ATOMIC_INIT\">ATOMIC_INIT</a>(0);", 
"", 
"static <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#lvtthmr_init\">lvtthmr_init</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS\">CONFIG_SYSFS</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#define_therm_throt_sysdev_one_ro\">define_therm_throt_sysdev_one_ro</a>(<a class=\"id\" href=\"#_name\">_name</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>static <a class=\"id\" href=\"#SYSDEV_ATTR\">SYSDEV_ATTR</a>(<a class=\"id\" href=\"#_name\">_name</a>, 0444,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#therm_throt_sysdev_show_\">therm_throt_sysdev_show_</a>##<a class=\"id\" href=\"#_name\">_name</a>,<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#NULL\">NULL</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#define_therm_throt_sysdev_show_func\">define_therm_throt_sysdev_show_func</a>(<a class=\"id\" href=\"#event\">event</a>, <a class=\"id\" href=\"#name\">name</a>)<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#therm_throt_sysdev_show_\">therm_throt_sysdev_show_</a>##<a class=\"id\" href=\"#event\">event</a>##<a class=\"id\" href=\"#_\">_</a>##<a class=\"id\" href=\"#name\">name</a>(<span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sysdev_attribute\">sysdev_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#id\">id</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>();<span class=\"ts\"/><span class=\"comment\">/* CPU hotplug */</span><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_online\">cpu_online</a>(<a class=\"id\" href=\"#cpu\">cpu</a>)) {<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sprintf\">sprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, \"%lu\\n\",<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#thermal_state\">thermal_state</a>, <a class=\"id\" href=\"#cpu\">cpu</a>).<a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#name\">name</a>);<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>} else<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>();<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_show_func\">define_therm_throt_sysdev_show_func</a>(<a class=\"id\" href=\"#core_throttle\">core_throttle</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_one_ro\">define_therm_throt_sysdev_one_ro</a>(<a class=\"id\" href=\"#core_throttle_count\">core_throttle_count</a>);", 
"", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_show_func\">define_therm_throt_sysdev_show_func</a>(<a class=\"id\" href=\"#core_power_limit\">core_power_limit</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_one_ro\">define_therm_throt_sysdev_one_ro</a>(<a class=\"id\" href=\"#core_power_limit_count\">core_power_limit_count</a>);", 
"", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_show_func\">define_therm_throt_sysdev_show_func</a>(<a class=\"id\" href=\"#package_throttle\">package_throttle</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_one_ro\">define_therm_throt_sysdev_one_ro</a>(<a class=\"id\" href=\"#package_throttle_count\">package_throttle_count</a>);", 
"", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_show_func\">define_therm_throt_sysdev_show_func</a>(<a class=\"id\" href=\"#package_power_limit\">package_power_limit</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<a class=\"id\" href=\"#define_therm_throt_sysdev_one_ro\">define_therm_throt_sysdev_one_ro</a>(<a class=\"id\" href=\"#package_power_limit_count\">package_power_limit_count</a>);", 
"", 
"static struct <a class=\"id\" href=\"#attribute\">attribute</a> *<a class=\"id\" href=\"#thermal_throttle_attrs\">thermal_throttle_attrs</a>[] = {", 
"<span class=\"ts\"/>&amp;<a class=\"id\" href=\"#attr_core_throttle_count\">attr_core_throttle_count</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#attribute_group\">attribute_group</a> <a class=\"id\" href=\"#thermal_attr_group\">thermal_attr_group</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attrs\">attrs</a><span class=\"ts\"/>= <a class=\"id\" href=\"#thermal_throttle_attrs\">thermal_throttle_attrs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"thermal_throttle\"", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SYSFS */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a><span class=\"ts\"/>0", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PACKAGE_LEVEL\">PACKAGE_LEVEL</a><span class=\"ts\"/>1", 
"", 
"<span class=\"comment\">/***</span>", 
"<span class=\"comment\"> * therm_throt_process - Process thermal throttling event from interrupt</span>", 
"<span class=\"comment\"> * @curr: Whether the condition is current or not (boolean), since the</span>", 
"<span class=\"comment\"> *        thermal interrupt normally gets called both when the thermal</span>", 
"<span class=\"comment\"> *        event begins and once the event has ended.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This function is called by the thermal interrupt after the</span>", 
"<span class=\"comment\"> * IRQ has been acknowledged.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * It will take care of rate limiting and printing messages to the syslog.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns: 0 : Event should NOT be further logged, i.e. still in</span>", 
"<span class=\"comment\"> *              \"timeout\" from previous log message.</span>", 
"<span class=\"comment\"> *          1 : Event should be logged further, and a message has been</span>", 
"<span class=\"comment\"> *              printed to the syslog.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#therm_throt_process\">therm_throt_process</a>(<a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#new_event\">new_event</a>, int <a class=\"id\" href=\"#event\">event</a>, int <a class=\"id\" href=\"#level\">level</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#_thermal_state\">_thermal_state</a> *<a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#this_cpu\">this_cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#old_event\">old_event</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#now\">now</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#thermal_state\">thermal_state</a> *<a class=\"id\" href=\"#pstate\">pstate</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#thermal_state\">thermal_state</a>, <a class=\"id\" href=\"#this_cpu\">this_cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#get_jiffies_64\">get_jiffies_64</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#THERMAL_THROTTLING_EVENT\">THERMAL_THROTTLING_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#pstate\">pstate</a>-><a class=\"id\" href=\"#core_throttle\">core_throttle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#POWER_LIMIT_EVENT\">POWER_LIMIT_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#pstate\">pstate</a>-><a class=\"id\" href=\"#core_power_limit\">core_power_limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> return 0;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#PACKAGE_LEVEL\">PACKAGE_LEVEL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#THERMAL_THROTTLING_EVENT\">THERMAL_THROTTLING_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#pstate\">pstate</a>-><a class=\"id\" href=\"#package_throttle\">package_throttle</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#POWER_LIMIT_EVENT\">POWER_LIMIT_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#pstate\">pstate</a>-><a class=\"id\" href=\"#package_power_limit\">package_power_limit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_event\">old_event</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#new_event\">new_event</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#new_event\">new_event</a> = <a class=\"id\" href=\"#new_event\">new_event</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_event\">new_event</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#count\">count</a>++;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before64\">time_before64</a>(<a class=\"id\" href=\"#now\">now</a>, <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#next_check\">next_check</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#count\">count</a> != <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#last_count\">last_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#next_check\">next_check</a> = <a class=\"id\" href=\"#now\">now</a> + <a class=\"id\" href=\"#CHECK_INTERVAL\">CHECK_INTERVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#last_count\">last_count</a> = <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* if we just entered the thermal event */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_event\">new_event</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#THERMAL_THROTTLING_EVENT\">THERMAL_THROTTLING_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"CPU%d: %s temperature above threshold, cpu clock throttled (total events = %lu)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cpu\">this_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a> ? \"Core\" : \"Package\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"CPU%d: %s power limit notification (total events = %lu)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cpu\">this_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a> ? \"Core\" : \"Package\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#count\">count</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_taint\">add_taint</a>(<a class=\"id\" href=\"#TAINT_MACHINE_CHECK\">TAINT_MACHINE_CHECK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_event\">old_event</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#event\">event</a> == <a class=\"id\" href=\"#THERMAL_THROTTLING_EVENT\">THERMAL_THROTTLING_EVENT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPU%d: %s temperature/speed normal\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cpu\">this_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a> ? \"Core\" : \"Package\");", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPU%d: %s power limit normal\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#this_cpu\">this_cpu</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#level\">level</a> == <a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a> ? \"Core\" : \"Package\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS\">CONFIG_SYSFS</a>", 
"<span class=\"comment\">/* Add/Remove thermal_throttle interface for CPU device: */</span>", 
"static <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> int <a class=\"id\" href=\"#thermal_throttle_add_dev\">thermal_throttle_add_dev</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_create_group\">sysfs_create_group</a>(&amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#thermal_attr_group\">thermal_attr_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PLN\">X86_FEATURE_PLN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_add_file_to_group\">sysfs_add_file_to_group</a>(&amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#attr_core_power_limit_count\">attr_core_power_limit_count</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#thermal_attr_group\">thermal_attr_group</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PTS\">X86_FEATURE_PTS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_add_file_to_group\">sysfs_add_file_to_group</a>(&amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#attr_package_throttle_count\">attr_package_throttle_count</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#thermal_attr_group\">thermal_attr_group</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PLN\">X86_FEATURE_PLN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sysfs_add_file_to_group\">sysfs_add_file_to_group</a>(&amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#attr_package_power_limit_count\">attr_package_power_limit_count</a>.<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thermal_attr_group\">thermal_attr_group</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> void <a class=\"id\" href=\"#thermal_throttle_remove_dev\">thermal_throttle_remove_dev</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sysfs_remove_group\">sysfs_remove_group</a>(&amp;<a class=\"id\" href=\"#sys_dev\">sys_dev</a>-><a class=\"id\" href=\"#kobj\">kobj</a>, &amp;<a class=\"id\" href=\"#thermal_attr_group\">thermal_attr_group</a>);", 
"}", 
"", 
"<span class=\"comment\">/* Mutex protecting device creation against CPU hotplug: */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#therm_cpu_lock\">therm_cpu_lock</a>);", 
"", 
"<span class=\"comment\">/* Get notified when a cpu comes on/off. Be hotplug friendly. */</span>", 
"static <a class=\"id\" href=\"#__cpuinit\">__cpuinit</a> int", 
"<a class=\"id\" href=\"#thermal_throttle_cpu_callback\">thermal_throttle_cpu_callback</a>(struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> *<a class=\"id\" href=\"#nfb\">nfb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      unsigned long <a class=\"id\" href=\"#action\">action</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      void *<a class=\"id\" href=\"#hcpu\">hcpu</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = (unsigned long)<a class=\"id\" href=\"#hcpu\">hcpu</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#sys_dev\">sys_dev</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sys_dev\">sys_dev</a> = <a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(<a class=\"id\" href=\"#cpu\">cpu</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#action\">action</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE\">CPU_UP_PREPARE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_PREPARE_FROZEN\">CPU_UP_PREPARE_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#therm_cpu_lock\">therm_cpu_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#thermal_throttle_add_dev\">thermal_throttle_add_dev</a>(<a class=\"id\" href=\"#sys_dev\">sys_dev</a>, <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#therm_cpu_lock\">therm_cpu_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_CANCELED\">CPU_UP_CANCELED</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_UP_CANCELED_FROZEN\">CPU_UP_CANCELED_FROZEN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD\">CPU_DEAD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CPU_DEAD_FROZEN\">CPU_DEAD_FROZEN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#therm_cpu_lock\">therm_cpu_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#thermal_throttle_remove_dev\">thermal_throttle_remove_dev</a>(<a class=\"id\" href=\"#sys_dev\">sys_dev</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#therm_cpu_lock\">therm_cpu_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#notifier_from_errno\">notifier_from_errno</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#notifier_block\">notifier_block</a> <a class=\"id\" href=\"#thermal_throttle_cpu_notifier\">thermal_throttle_cpu_notifier</a> <a class=\"id\" href=\"#__cpuinitdata\">__cpuinitdata</a> =", 
"{", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#notifier_call\">notifier_call</a> = <a class=\"id\" href=\"#thermal_throttle_cpu_callback\">thermal_throttle_cpu_callback</a>,", 
"};", 
"", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#thermal_throttle_init_device\">thermal_throttle_init_device</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#therm_throt_en\">therm_throt_en</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#register_hotcpu_notifier\">register_hotcpu_notifier</a>(&amp;<a class=\"id\" href=\"#thermal_throttle_cpu_notifier\">thermal_throttle_cpu_notifier</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#therm_cpu_lock\">therm_cpu_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/* connect live CPUs to sysfs */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_online_cpu\">for_each_online_cpu</a>(<a class=\"id\" href=\"#cpu\">cpu</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#thermal_throttle_add_dev\">thermal_throttle_add_dev</a>(<a class=\"id\" href=\"#get_cpu_sysdev\">get_cpu_sysdev</a>(<a class=\"id\" href=\"#cpu\">cpu</a>), <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(<a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HOTPLUG_CPU\">CONFIG_HOTPLUG_CPU</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#therm_cpu_lock\">therm_cpu_lock</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#thermal_throttle_init_device\">thermal_throttle_init_device</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SYSFS */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Set up the most two significant bit to notify mce log that this thermal</span>", 
"<span class=\"comment\"> * event type.</span>", 
"<span class=\"comment\"> * This is a temp solution. May be changed in the future with mce log</span>", 
"<span class=\"comment\"> * infrasture.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CORE_THROTTLED\">CORE_THROTTLED</a><span class=\"ts\"/><span class=\"ts\"/>(0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#CORE_POWER_LIMIT\">CORE_POWER_LIMIT</a><span class=\"ts\"/>((<a class=\"id\" href=\"#__u64\">__u64</a>)1 << 62)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PACKAGE_THROTTLED\">PACKAGE_THROTTLED</a><span class=\"ts\"/>((<a class=\"id\" href=\"#__u64\">__u64</a>)2 << 62)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PACKAGE_POWER_LIMIT\">PACKAGE_POWER_LIMIT</a><span class=\"ts\"/>((<a class=\"id\" href=\"#__u64\">__u64</a>)3 << 62)", 
"", 
"<span class=\"comment\">/* Thermal transition interrupt handler */</span>", 
"static void <a class=\"id\" href=\"#intel_thermal_interrupt\">intel_thermal_interrupt</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u64\">__u64</a> <a class=\"id\" href=\"#msr_val\">msr_val</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a> = &amp;<a class=\"id\" href=\"#cpu_data\">cpu_data</a>(<a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_THERM_STATUS\">MSR_IA32_THERM_STATUS</a>, <a class=\"id\" href=\"#msr_val\">msr_val</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#therm_throt_process\">therm_throt_process</a>(<a class=\"id\" href=\"#msr_val\">msr_val</a> &amp; <a class=\"id\" href=\"#THERM_STATUS_PROCHOT\">THERM_STATUS_PROCHOT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_THROTTLING_EVENT\">THERMAL_THROTTLING_EVENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_log_therm_throt_event\">mce_log_therm_throt_event</a>(<a class=\"id\" href=\"#CORE_THROTTLED\">CORE_THROTTLED</a> | <a class=\"id\" href=\"#msr_val\">msr_val</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PLN\">X86_FEATURE_PLN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#therm_throt_process\">therm_throt_process</a>(<a class=\"id\" href=\"#msr_val\">msr_val</a> &amp; <a class=\"id\" href=\"#THERM_STATUS_POWER_LIMIT\">THERM_STATUS_POWER_LIMIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#POWER_LIMIT_EVENT\">POWER_LIMIT_EVENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CORE_LEVEL\">CORE_LEVEL</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_log_therm_throt_event\">mce_log_therm_throt_event</a>(<a class=\"id\" href=\"#CORE_POWER_LIMIT\">CORE_POWER_LIMIT</a> | <a class=\"id\" href=\"#msr_val\">msr_val</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PTS\">X86_FEATURE_PTS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsrl\">rdmsrl</a>(<a class=\"id\" href=\"#MSR_IA32_PACKAGE_THERM_STATUS\">MSR_IA32_PACKAGE_THERM_STATUS</a>, <a class=\"id\" href=\"#msr_val\">msr_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#therm_throt_process\">therm_throt_process</a>(<a class=\"id\" href=\"#msr_val\">msr_val</a> &amp; <a class=\"id\" href=\"#PACKAGE_THERM_STATUS_PROCHOT\">PACKAGE_THERM_STATUS_PROCHOT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#THERMAL_THROTTLING_EVENT\">THERMAL_THROTTLING_EVENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PACKAGE_LEVEL\">PACKAGE_LEVEL</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_log_therm_throt_event\">mce_log_therm_throt_event</a>(<a class=\"id\" href=\"#PACKAGE_THROTTLED\">PACKAGE_THROTTLED</a> | <a class=\"id\" href=\"#msr_val\">msr_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PLN\">X86_FEATURE_PLN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#therm_throt_process\">therm_throt_process</a>(<a class=\"id\" href=\"#msr_val\">msr_val</a> &amp;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PACKAGE_THERM_STATUS_POWER_LIMIT\">PACKAGE_THERM_STATUS_POWER_LIMIT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#POWER_LIMIT_EVENT\">POWER_LIMIT_EVENT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#PACKAGE_LEVEL\">PACKAGE_LEVEL</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mce_log_therm_throt_event\">mce_log_therm_throt_event</a>(<a class=\"id\" href=\"#PACKAGE_POWER_LIMIT\">PACKAGE_POWER_LIMIT</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  | <a class=\"id\" href=\"#msr_val\">msr_val</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unexpected_thermal_interrupt\">unexpected_thermal_interrupt</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"CPU%d: Unexpected LVT TMR interrupt!\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>());", 
"<span class=\"ts\"/><a class=\"id\" href=\"#add_taint\">add_taint</a>(<a class=\"id\" href=\"#TAINT_MACHINE_CHECK\">TAINT_MACHINE_CHECK</a>);", 
"}", 
"", 
"static void (*<a class=\"id\" href=\"#smp_thermal_vector\">smp_thermal_vector</a>)(void) = <a class=\"id\" href=\"#unexpected_thermal_interrupt\">unexpected_thermal_interrupt</a>;", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> void <a class=\"id\" href=\"#smp_thermal_interrupt\">smp_thermal_interrupt</a>(struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> *<a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#exit_idle\">exit_idle</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_enter\">irq_enter</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_irq_stat\">inc_irq_stat</a>(<a class=\"id\" href=\"#irq_thermal_count\">irq_thermal_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_thermal_vector\">smp_thermal_vector</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#irq_exit\">irq_exit</a>();", 
"<span class=\"ts\"/><span class=\"comment\">/* Ack only at the end to avoid potential reentry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ack_APIC_irq\">ack_APIC_irq</a>();", 
"}", 
"", 
"<span class=\"comment\">/* Thermal monitoring depends on APIC, ACPI and clock modulation */</span>", 
"static int <a class=\"id\" href=\"#intel_thermal_supported\">intel_thermal_supported</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has_apic\">cpu_has_apic</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_ACPI\">X86_FEATURE_ACPI</a>) || !<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_ACC\">X86_FEATURE_ACC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"void <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#mcheck_intel_therm_init\">mcheck_intel_therm_init</a>(void)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This function is only called on boot CPU. Save the init thermal</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * LVT value on BSP and use that value to restore APs' thermal LVT</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * entry BIOS programmed later</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#intel_thermal_supported\">intel_thermal_supported</a>(&amp;<a class=\"id\" href=\"#boot_cpu_data\">boot_cpu_data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lvtthmr_init\">lvtthmr_init</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVTTHMR\">APIC_LVTTHMR</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#intel_init_thermal\">intel_init_thermal</a>(struct <a class=\"id\" href=\"#cpuinfo_x86\">cpuinfo_x86</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#cpu\">cpu</a> = <a class=\"id\" href=\"#smp_processor_id\">smp_processor_id</a>();", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#tm2\">tm2</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#intel_thermal_supported\">intel_thermal_supported</a>(<a class=\"id\" href=\"#c\">c</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * First check if its enabled already, in which case there might</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * be some SMM goo which handles it, so we can't even put a handler</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since it might be delivered via SMI already:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The initial value of thermal LVT entries on all APs always reads</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x10000 because APs are woken up by BSP issuing INIT-SIPI-SIPI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * sequence to them and LVT registers are reset to 0s except for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the mask bits which are set to 1s when APs receive INIT IPI.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Always restore the value that BIOS has programmed on AP based on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * BSP's info we saved since BIOS is always setting the same value</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for all threads/cores</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTTHMR\">APIC_LVTTHMR</a>, <a class=\"id\" href=\"#lvtthmr_init\">lvtthmr_init</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#lvtthmr_init\">lvtthmr_init</a>;", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE_TM1\">MSR_IA32_MISC_ENABLE_TM1</a>) && (<a class=\"id\" href=\"#h\">h</a> &amp; <a class=\"id\" href=\"#APIC_DM_SMI\">APIC_DM_SMI</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"CPU%d: Thermal monitoring handled by SMI\\n\", <a class=\"id\" href=\"#cpu\">cpu</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check whether a vector already exists */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#h\">h</a> &amp; <a class=\"id\" href=\"#APIC_VECTOR_MASK\">APIC_VECTOR_MASK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"CPU%d: Thermal LVT vector (%#x) already installed\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#cpu\">cpu</a>, (<a class=\"id\" href=\"#h\">h</a> &amp; <a class=\"id\" href=\"#APIC_VECTOR_MASK\">APIC_VECTOR_MASK</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* early Pentium M models use different method for enabling TM2 */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_TM2\">X86_FEATURE_TM2</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86\">x86</a> == 6 && (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> == 9 || <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#x86_model\">x86_model</a> == 13)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_THERM2_CTL\">MSR_THERM2_CTL</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#MSR_THERM2_CTL_TM_SELECT\">MSR_THERM2_CTL_TM_SELECT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tm2\">tm2</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#l\">l</a> &amp; <a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE_TM2\">MSR_IA32_MISC_ENABLE_TM2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tm2\">tm2</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We'll mask the thermal vector in the lapic till we're ready: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#THERMAL_APIC_VECTOR\">THERMAL_APIC_VECTOR</a> | <a class=\"id\" href=\"#APIC_DM_FIXED\">APIC_DM_FIXED</a> | <a class=\"id\" href=\"#APIC_LVT_MASKED\">APIC_LVT_MASKED</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTTHMR\">APIC_LVTTHMR</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_THERM_INTERRUPT\">MSR_IA32_THERM_INTERRUPT</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PLN\">X86_FEATURE_PLN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IA32_THERM_INTERRUPT\">MSR_IA32_THERM_INTERRUPT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#l\">l</a> | (<a class=\"id\" href=\"#THERM_INT_LOW_ENABLE\">THERM_INT_LOW_ENABLE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#THERM_INT_HIGH_ENABLE\">THERM_INT_HIGH_ENABLE</a> | <a class=\"id\" href=\"#THERM_INT_PLN_ENABLE\">THERM_INT_PLN_ENABLE</a>), <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IA32_THERM_INTERRUPT\">MSR_IA32_THERM_INTERRUPT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#l\">l</a> | (<a class=\"id\" href=\"#THERM_INT_LOW_ENABLE\">THERM_INT_LOW_ENABLE</a> | <a class=\"id\" href=\"#THERM_INT_HIGH_ENABLE\">THERM_INT_HIGH_ENABLE</a>), <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PTS\">X86_FEATURE_PTS</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_PACKAGE_THERM_INTERRUPT\">MSR_IA32_PACKAGE_THERM_INTERRUPT</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cpu_has\">cpu_has</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#X86_FEATURE_PLN\">X86_FEATURE_PLN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IA32_PACKAGE_THERM_INTERRUPT\">MSR_IA32_PACKAGE_THERM_INTERRUPT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#l\">l</a> | (<a class=\"id\" href=\"#PACKAGE_THERM_INT_LOW_ENABLE\">PACKAGE_THERM_INT_LOW_ENABLE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#PACKAGE_THERM_INT_HIGH_ENABLE\">PACKAGE_THERM_INT_HIGH_ENABLE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#PACKAGE_THERM_INT_PLN_ENABLE\">PACKAGE_THERM_INT_PLN_ENABLE</a>), <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IA32_PACKAGE_THERM_INTERRUPT\">MSR_IA32_PACKAGE_THERM_INTERRUPT</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#l\">l</a> | (<a class=\"id\" href=\"#PACKAGE_THERM_INT_LOW_ENABLE\">PACKAGE_THERM_INT_LOW_ENABLE</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>| <a class=\"id\" href=\"#PACKAGE_THERM_INT_HIGH_ENABLE\">PACKAGE_THERM_INT_HIGH_ENABLE</a>), <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#smp_thermal_vector\">smp_thermal_vector</a> = <a class=\"id\" href=\"#intel_thermal_interrupt\">intel_thermal_interrupt</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rdmsr\">rdmsr</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wrmsr\">wrmsr</a>(<a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE\">MSR_IA32_MISC_ENABLE</a>, <a class=\"id\" href=\"#l\">l</a> | <a class=\"id\" href=\"#MSR_IA32_MISC_ENABLE_TM1\">MSR_IA32_MISC_ENABLE_TM1</a>, <a class=\"id\" href=\"#h\">h</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unmask the thermal vector: */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = <a class=\"id\" href=\"#apic_read\">apic_read</a>(<a class=\"id\" href=\"#APIC_LVTTHMR\">APIC_LVTTHMR</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#apic_write\">apic_write</a>(<a class=\"id\" href=\"#APIC_LVTTHMR\">APIC_LVTTHMR</a>, <a class=\"id\" href=\"#l\">l</a> &amp; ~<a class=\"id\" href=\"#APIC_LVT_MASKED\">APIC_LVT_MASKED</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk_once\">printk_once</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"CPU0: Thermal monitoring enabled (%s)\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tm2\">tm2</a> ? \"TM2\" : \"TM1\");", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* enable thermal throttle processing */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#therm_throt_en\">therm_throt_en</a>, 1);", 
"}", 
];
xr_frag_insert('l/3d/afe631ecff9022a90be1f84bb9a1d663b86ac6.xr', __xr_tmp);
