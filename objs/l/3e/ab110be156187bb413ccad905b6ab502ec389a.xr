var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/drivers/char/8250.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Driver for 8250/16550-type serial ports</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Based on drivers/char/serial.c, by Linus Torvalds, Theodore Ts'o.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Copyright (C) 2001 Russell King.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> * the Free Software Foundation; either version 2 of the License, or</span>", 
"<span class=\"comment\"> * (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#serial_8250\">serial_8250</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#old_serial_port\">old_serial_port</a> {", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#uart\">uart</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#baud_base\">baud_base</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#port\">port</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#hub6\">hub6</a>;", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#io_type\">io_type</a>;", 
"<span class=\"ts\"/>unsigned char *<a class=\"id\" href=\"#iomem_base\">iomem_base</a>;", 
"<span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#iomem_reg_shift\">iomem_reg_shift</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#irqflags\">irqflags</a>;", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This replaces serial_uart_config in include/linux/serial.h</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#serial8250_config\">serial8250_config</a> {", 
"<span class=\"ts\"/>const char<span class=\"ts\"/>*<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#fifo_size\">fifo_size</a>;", 
"<span class=\"ts\"/>unsigned short<span class=\"ts\"/><a class=\"id\" href=\"#tx_loadsz\">tx_loadsz</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#fcr\">fcr</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_CAP_FIFO\">UART_CAP_FIFO</a><span class=\"ts\"/>(1 << 8)<span class=\"ts\"/><span class=\"comment\">/* UART has FIFO */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_CAP_EFR\">UART_CAP_EFR</a><span class=\"ts\"/>(1 << 9)<span class=\"ts\"/><span class=\"comment\">/* UART has EFR */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_CAP_SLEEP\">UART_CAP_SLEEP</a><span class=\"ts\"/>(1 << 10)<span class=\"ts\"/><span class=\"comment\">/* UART has IER sleep */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_CAP_AFE\">UART_CAP_AFE</a><span class=\"ts\"/>(1 << 11)<span class=\"ts\"/><span class=\"comment\">/* MCR-based hw flow control */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_CAP_UUE\">UART_CAP_UUE</a><span class=\"ts\"/>(1 << 12)<span class=\"ts\"/><span class=\"comment\">/* UART needs IER bit 6 set (Xscale) */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_BUG_QUOT\">UART_BUG_QUOT</a><span class=\"ts\"/>(1 << 0)<span class=\"ts\"/><span class=\"comment\">/* UART has buggy quot LSB */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_BUG_TXEN\">UART_BUG_TXEN</a><span class=\"ts\"/>(1 << 1)<span class=\"ts\"/><span class=\"comment\">/* UART has buggy TX IIR status */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_BUG_NOMSR\">UART_BUG_NOMSR</a><span class=\"ts\"/>(1 << 2)<span class=\"ts\"/><span class=\"comment\">/* UART has buggy MSR status bits (Au1x00) */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#UART_BUG_THRE\">UART_BUG_THRE</a><span class=\"ts\"/>(1 << 3)<span class=\"ts\"/><span class=\"comment\">/* UART has buggy THRE reassertion */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROBE_RSA\">PROBE_RSA</a><span class=\"ts\"/>(1 << 0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PROBE_ANY\">PROBE_ANY</a><span class=\"ts\"/>(~0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#HIGH_BITS_OFFSET\">HIGH_BITS_OFFSET</a> ((sizeof(long)-sizeof(int))*8)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SERIAL_8250_SHARE_IRQ\">CONFIG_SERIAL_8250_SHARE_IRQ</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERIAL8250_SHARE_IRQS\">SERIAL8250_SHARE_IRQS</a> 1", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SERIAL8250_SHARE_IRQS\">SERIAL8250_SHARE_IRQS</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#__alpha__\">__alpha__</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PCI\">CONFIG_PCI</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Digital did something really horribly wrong with the OUT1 and OUT2</span>", 
"<span class=\"comment\"> * lines on at least some ALPHA's.  The failure mode is that if either</span>", 
"<span class=\"comment\"> * is cleared, the machine locks up with endless interrupts.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ALPHA_KLUDGE_MCR\">ALPHA_KLUDGE_MCR</a>  (<a class=\"id\" href=\"#UART_MCR_OUT2\">UART_MCR_OUT2</a> | <a class=\"id\" href=\"#UART_MCR_OUT1\">UART_MCR_OUT1</a>)", 
"#<a class=\"id\" href=\"#elif\">elif</a> <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_SBC8560\">CONFIG_SBC8560</a>)", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * WindRiver did something similarly broken on their SBC8560 board. The</span>", 
"<span class=\"comment\"> * UART tristates its IRQ output while OUT2 is clear, but they pulled</span>", 
"<span class=\"comment\"> * the interrupt line _up_ instead of down, so if we register the IRQ</span>", 
"<span class=\"comment\"> * while the UART is in that state, we die in an IRQ storm. */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ALPHA_KLUDGE_MCR\">ALPHA_KLUDGE_MCR</a> (<a class=\"id\" href=\"#UART_MCR_OUT2\">UART_MCR_OUT2</a>)", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ALPHA_KLUDGE_MCR\">ALPHA_KLUDGE_MCR</a> 0", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/3e/ab110be156187bb413ccad905b6ab502ec389a.xr', __xr_tmp);
