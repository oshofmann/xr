var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#LINUX_QUICKLIST_H\">LINUX_QUICKLIST_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LINUX_QUICKLIST_H\">LINUX_QUICKLIST_H</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fast allocations and disposal of pages. Pages must be in the condition</span>", 
"<span class=\"comment\"> * as needed after allocation when they are freed. Per cpu lists of pages</span>", 
"<span class=\"comment\"> * are kept that only contain node local pages.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * (C) 2007, SGI. Christoph Lameter &lt;clameter@sgi.com&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#gfp\">gfp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_QUICKLIST\">CONFIG_QUICKLIST</a>", 
"", 
"struct <a class=\"id\" href=\"#quicklist\">quicklist</a> {", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#nr_pages\">nr_pages</a>;", 
"};", 
"", 
"<a class=\"id\" href=\"#DECLARE_PER_CPU\">DECLARE_PER_CPU</a>(struct <a class=\"id\" href=\"#quicklist\">quicklist</a>, <a class=\"id\" href=\"#quicklist\">quicklist</a>)[<a class=\"id\" href=\"#CONFIG_NR_QUICK\">CONFIG_NR_QUICK</a>];", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The two key functions quicklist_alloc and quicklist_free are inline so</span>", 
"<span class=\"comment\"> * that they may be custom compiled for the platform.</span>", 
"<span class=\"comment\"> * Specifying a NULL ctor can remove constructor support. Specifying</span>", 
"<span class=\"comment\"> * a constant quicklist allows the determination of the exact address</span>", 
"<span class=\"comment\"> * in the per cpu area.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The fast patch in quicklist_alloc touched only a per cpu cacheline and</span>", 
"<span class=\"comment\"> * the first cacheline of the page itself. There is minmal overhead involved.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#quicklist_alloc\">quicklist_alloc</a>(int <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#flags\">flags</a>, void (*<a class=\"id\" href=\"#ctor\">ctor</a>)(void *))", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#quicklist\">quicklist</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"<span class=\"ts\"/>void **<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> =&amp;<a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(<a class=\"id\" href=\"#quicklist\">quicklist</a>)[<a class=\"id\" href=\"#nr\">nr</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#p\">p</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#p\">p</a>[0];", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a>[0] = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>--;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(<a class=\"id\" href=\"#quicklist\">quicklist</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#p\">p</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (void *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#flags\">flags</a> | <a class=\"id\" href=\"#__GFP_ZERO\">__GFP_ZERO</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ctor\">ctor</a> && <a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ctor\">ctor</a>(<a class=\"id\" href=\"#p\">p</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__quicklist_free\">__quicklist_free</a>(int <a class=\"id\" href=\"#nr\">nr</a>, void (*<a class=\"id\" href=\"#dtor\">dtor</a>)(void *), void *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#quicklist\">quicklist</a> *<a class=\"id\" href=\"#q\">q</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a> = &amp;<a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(<a class=\"id\" href=\"#quicklist\">quicklist</a>)[<a class=\"id\" href=\"#nr\">nr</a>];", 
"<span class=\"ts\"/>*(void **)<a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#page\">page</a> = <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#q\">q</a>-><a class=\"id\" href=\"#nr_pages\">nr_pages</a>++;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(<a class=\"id\" href=\"#quicklist\">quicklist</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#quicklist_free\">quicklist_free</a>(int <a class=\"id\" href=\"#nr\">nr</a>, void (*<a class=\"id\" href=\"#dtor\">dtor</a>)(void *), void *<a class=\"id\" href=\"#pp\">pp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__quicklist_free\">__quicklist_free</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#dtor\">dtor</a>, <a class=\"id\" href=\"#pp\">pp</a>, <a class=\"id\" href=\"#virt_to_page\">virt_to_page</a>(<a class=\"id\" href=\"#pp\">pp</a>));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#quicklist_free_page\">quicklist_free_page</a>(int <a class=\"id\" href=\"#nr\">nr</a>, void (*<a class=\"id\" href=\"#dtor\">dtor</a>)(void *),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__quicklist_free\">__quicklist_free</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#dtor\">dtor</a>, <a class=\"id\" href=\"#page_address\">page_address</a>(<a class=\"id\" href=\"#page\">page</a>), <a class=\"id\" href=\"#page\">page</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#quicklist_trim\">quicklist_trim</a>(int <a class=\"id\" href=\"#nr\">nr</a>, void (*<a class=\"id\" href=\"#dtor\">dtor</a>)(void *),", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#min_pages\">min_pages</a>, unsigned long <a class=\"id\" href=\"#max_free\">max_free</a>);", 
"", 
"unsigned long <a class=\"id\" href=\"#quicklist_total_size\">quicklist_total_size</a>(void);", 
"", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned long <a class=\"id\" href=\"#quicklist_total_size\">quicklist_total_size</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* LINUX_QUICKLIST_H */</span>", 
"", 
];
xr_frag_insert('l/3f/6649e3b82e6c27bb813f0389bac2dee4d305ad.xr', __xr_tmp);
