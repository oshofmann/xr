var __xr_tmp = [
"<span class=\"ts\"/><span class=\"comment\">/* RFC 2960 Section 3.3.2.1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_IPV4_ADDRESS\">SCTP_PARAM_IPV4_ADDRESS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(5),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_IPV6_ADDRESS\">SCTP_PARAM_IPV6_ADDRESS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(6),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_STATE_COOKIE\">SCTP_PARAM_STATE_COOKIE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(7),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_UNRECOGNIZED_PARAMETERS\">SCTP_PARAM_UNRECOGNIZED_PARAMETERS</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(8),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_COOKIE_PRESERVATIVE\">SCTP_PARAM_COOKIE_PRESERVATIVE</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(9),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_HOST_NAME_ADDRESS\">SCTP_PARAM_HOST_NAME_ADDRESS</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(11),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_SUPPORTED_ADDRESS_TYPES\">SCTP_PARAM_SUPPORTED_ADDRESS_TYPES</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(12),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ECN_CAPABLE\">SCTP_PARAM_ECN_CAPABLE</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x8000),", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* AUTH Extension Section 3 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_RANDOM\">SCTP_PARAM_RANDOM</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x8002),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_CHUNKS\">SCTP_PARAM_CHUNKS</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x8003),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_HMAC_ALGO\">SCTP_PARAM_HMAC_ALGO</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x8004),", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add-IP: Supported Extensions, Section 4.2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_SUPPORTED_EXT\">SCTP_PARAM_SUPPORTED_EXT</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x8008),", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* PR-SCTP Sec 3.1 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_FWD_TSN_SUPPORT\">SCTP_PARAM_FWD_TSN_SUPPORT</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc000),", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add-IP Extension. Section 3.2 */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ADD_IP\">SCTP_PARAM_ADD_IP</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc001),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_DEL_IP\">SCTP_PARAM_DEL_IP</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc002),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ERR_CAUSE\">SCTP_PARAM_ERR_CAUSE</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc003),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_SET_PRIMARY\">SCTP_PARAM_SET_PRIMARY</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc004),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_SUCCESS_REPORT\">SCTP_PARAM_SUCCESS_REPORT</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc005),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ADAPTATION_LAYER_IND\">SCTP_PARAM_ADAPTATION_LAYER_IND</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc006),", 
"", 
"} <a class=\"id\" href=\"#sctp_param_t\">sctp_param_t</a>; <span class=\"comment\">/* enum */</span>", 
"", 
"", 
"<span class=\"comment\">/* RFC 2960 Section 3.2.1</span>", 
"<span class=\"comment\"> *  The Parameter Types are encoded such that the highest-order two bits</span>", 
"<span class=\"comment\"> *  specify the action that must be taken if the processing endpoint does</span>", 
"<span class=\"comment\"> *  not recognize the Parameter Type.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> */</span>", 
"typedef enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ACTION_DISCARD\">SCTP_PARAM_ACTION_DISCARD</a>     = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x0000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ACTION_DISCARD_ERR\">SCTP_PARAM_ACTION_DISCARD_ERR</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x4000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ACTION_SKIP\">SCTP_PARAM_ACTION_SKIP</a>        = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x8000),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_PARAM_ACTION_SKIP_ERR\">SCTP_PARAM_ACTION_SKIP_ERR</a>    = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc000),", 
"} <a class=\"id\" href=\"#sctp_param_action_t\">sctp_param_action_t</a>;", 
"", 
"enum { <a class=\"id\" href=\"#SCTP_PARAM_ACTION_MASK\">SCTP_PARAM_ACTION_MASK</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0xc000), };", 
"", 
"<span class=\"comment\">/* RFC 2960 Section 3.3.1 Payload Data (DATA) (0) */</span>", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_datahdr\">sctp_datahdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#tsn\">tsn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#stream\">stream</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#ssn\">ssn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#ppid\">ppid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#payload\">payload</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_datahdr_t\">sctp_datahdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_data_chunk\">sctp_data_chunk</a> {", 
"        <a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"        <a class=\"id\" href=\"#sctp_datahdr_t\">sctp_datahdr_t</a>  <a class=\"id\" href=\"#data_hdr\">data_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_data_chunk_t\">sctp_data_chunk_t</a>;", 
"", 
"<span class=\"comment\">/* DATA Chuck Specific Flags */</span>", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_DATA_MIDDLE_FRAG\">SCTP_DATA_MIDDLE_FRAG</a><span class=\"ts\"/>= 0x00,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_DATA_LAST_FRAG\">SCTP_DATA_LAST_FRAG</a><span class=\"ts\"/>= 0x01,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_DATA_FIRST_FRAG\">SCTP_DATA_FIRST_FRAG</a><span class=\"ts\"/>= 0x02,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_DATA_NOT_FRAG\">SCTP_DATA_NOT_FRAG</a><span class=\"ts\"/>= 0x03,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_DATA_UNORDERED\">SCTP_DATA_UNORDERED</a><span class=\"ts\"/>= 0x04,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_DATA_SACK_IMM\">SCTP_DATA_SACK_IMM</a><span class=\"ts\"/>= 0x08,", 
"};", 
"enum { <a class=\"id\" href=\"#SCTP_DATA_FRAG_MASK\">SCTP_DATA_FRAG_MASK</a> = 0x03, };", 
"", 
"", 
"<span class=\"comment\">/* RFC 2960 Section 3.3.2 Initiation (INIT) (1)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This chunk is used to initiate a SCTP association between two</span>", 
"<span class=\"comment\"> *  endpoints.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_inithdr\">sctp_inithdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#init_tag\">init_tag</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#a_rwnd\">a_rwnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#num_outbound_streams\">num_outbound_streams</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#num_inbound_streams\">num_inbound_streams</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#initial_tsn\">initial_tsn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#params\">params</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_inithdr_t\">sctp_inithdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_init_chunk\">sctp_init_chunk</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_inithdr_t\">sctp_inithdr_t</a> <a class=\"id\" href=\"#init_hdr\">init_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_init_chunk_t\">sctp_init_chunk_t</a>;", 
"", 
"", 
"<span class=\"comment\">/* Section 3.3.2.1. IPv4 Address Parameter (5) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_ipv4addr_param\">sctp_ipv4addr_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_addr\">in_addr</a>  <a class=\"id\" href=\"#addr\">addr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_ipv4addr_param_t\">sctp_ipv4addr_param_t</a>;", 
"", 
"<span class=\"comment\">/* Section 3.3.2.1. IPv6 Address Parameter (6) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_ipv6addr_param\">sctp_ipv6addr_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in6_addr\">in6_addr</a> <a class=\"id\" href=\"#addr\">addr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_ipv6addr_param_t\">sctp_ipv6addr_param_t</a>;", 
"", 
"<span class=\"comment\">/* Section 3.3.2.1 Cookie Preservative (9) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_cookie_preserve_param\">sctp_cookie_preserve_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a>          <a class=\"id\" href=\"#lifespan_increment\">lifespan_increment</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_cookie_preserve_param_t\">sctp_cookie_preserve_param_t</a>;", 
"", 
"<span class=\"comment\">/* Section 3.3.2.1 Host Name Address (11) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_hostname_param\">sctp_hostname_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#uint8_t\">uint8_t</a> <a class=\"id\" href=\"#hostname\">hostname</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_hostname_param_t\">sctp_hostname_param_t</a>;", 
"", 
"<span class=\"comment\">/* Section 3.3.2.1 Supported Address Types (12) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_supported_addrs_param\">sctp_supported_addrs_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#types\">types</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_supported_addrs_param_t\">sctp_supported_addrs_param_t</a>;", 
"", 
"<span class=\"comment\">/* Appendix A. ECN Capable (32768) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_ecn_capable_param\">sctp_ecn_capable_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_ecn_capable_param_t\">sctp_ecn_capable_param_t</a>;", 
"", 
"<span class=\"comment\">/* ADDIP Section 3.2.6 Adaptation Layer Indication */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_adaptation_ind_param\">sctp_adaptation_ind_param</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sctp_paramhdr\">sctp_paramhdr</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#adaptation_ind\">adaptation_ind</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_adaptation_ind_param_t\">sctp_adaptation_ind_param_t</a>;", 
"", 
"<span class=\"comment\">/* ADDIP Section 4.2.7 Supported Extensions Parameter */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_supported_ext_param\">sctp_supported_ext_param</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sctp_paramhdr\">sctp_paramhdr</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#chunks\">chunks</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_supported_ext_param_t\">sctp_supported_ext_param_t</a>;", 
"", 
"<span class=\"comment\">/* AUTH Section 3.1 Random */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_random_param\">sctp_random_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#random_val\">random_val</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_random_param_t\">sctp_random_param_t</a>;", 
"", 
"<span class=\"comment\">/* AUTH Section 3.2 Chunk List */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_chunks_param\">sctp_chunks_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#chunks\">chunks</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_chunks_param_t\">sctp_chunks_param_t</a>;", 
"", 
"<span class=\"comment\">/* AUTH Section 3.3 HMAC Algorithm */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_hmac_algo_param\">sctp_hmac_algo_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#hmac_ids\">hmac_ids</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_hmac_algo_param_t\">sctp_hmac_algo_param_t</a>;", 
"", 
"<span class=\"comment\">/* RFC 2960.  Section 3.3.3 Initiation Acknowledgement (INIT ACK) (2):</span>", 
"<span class=\"comment\"> *   The INIT ACK chunk is used to acknowledge the initiation of an SCTP</span>", 
"<span class=\"comment\"> *   association.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef <a class=\"id\" href=\"#sctp_init_chunk_t\">sctp_init_chunk_t</a> <a class=\"id\" href=\"#sctp_initack_chunk_t\">sctp_initack_chunk_t</a>;", 
"", 
"<span class=\"comment\">/* Section 3.3.3.1 State Cookie (7) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_cookie_param\">sctp_cookie_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a> <a class=\"id\" href=\"#body\">body</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_cookie_param_t\">sctp_cookie_param_t</a>;", 
"", 
"<span class=\"comment\">/* Section 3.3.3.1 Unrecognized Parameters (8) */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_unrecognized_param\">sctp_unrecognized_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#unrecognized\">unrecognized</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_unrecognized_param_t\">sctp_unrecognized_param_t</a>;", 
"", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * 3.3.4 Selective Acknowledgement (SACK) (3):</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  This chunk is sent to the peer endpoint to acknowledge received DATA</span>", 
"<span class=\"comment\"> *  chunks and to inform the peer endpoint of gaps in the received</span>", 
"<span class=\"comment\"> *  subsequences of DATA chunks as represented by their TSNs.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_gap_ack_block\">sctp_gap_ack_block</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#start\">start</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#end\">end</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_gap_ack_block_t\">sctp_gap_ack_block_t</a>;", 
"", 
"typedef <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#sctp_dup_tsn_t\">sctp_dup_tsn_t</a>;", 
"", 
"typedef union {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_gap_ack_block_t\">sctp_gap_ack_block_t</a><span class=\"ts\"/><a class=\"id\" href=\"#gab\">gab</a>;", 
"        <a class=\"id\" href=\"#sctp_dup_tsn_t\">sctp_dup_tsn_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dup\">dup</a>;", 
"} <a class=\"id\" href=\"#sctp_sack_variable_t\">sctp_sack_variable_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_sackhdr\">sctp_sackhdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#cum_tsn_ack\">cum_tsn_ack</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#a_rwnd\">a_rwnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#num_gap_ack_blocks\">num_gap_ack_blocks</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#num_dup_tsns\">num_dup_tsns</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_sack_variable_t\">sctp_sack_variable_t</a> <a class=\"id\" href=\"#variable\">variable</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_sackhdr_t\">sctp_sackhdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_sack_chunk\">sctp_sack_chunk</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_sackhdr_t\">sctp_sackhdr_t</a> <a class=\"id\" href=\"#sack_hdr\">sack_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_sack_chunk_t\">sctp_sack_chunk_t</a>;", 
"", 
"", 
"<span class=\"comment\">/* RFC 2960.  Section 3.3.5 Heartbeat Request (HEARTBEAT) (4):</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  An endpoint should send this chunk to its peer endpoint to probe the</span>", 
"<span class=\"comment\"> *  reachability of a particular destination transport address defined in</span>", 
"<span class=\"comment\"> *  the present association.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_heartbeathdr\">sctp_heartbeathdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a> <a class=\"id\" href=\"#info\">info</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_heartbeathdr_t\">sctp_heartbeathdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_heartbeat_chunk\">sctp_heartbeat_chunk</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_heartbeathdr_t\">sctp_heartbeathdr_t</a> <a class=\"id\" href=\"#hb_hdr\">hb_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_heartbeat_chunk_t\">sctp_heartbeat_chunk_t</a>;", 
"", 
"", 
"<span class=\"comment\">/* For the abort and shutdown ACK we must carry the init tag in the</span>", 
"<span class=\"comment\"> * common header. Just the common header is all that is needed with a</span>", 
"<span class=\"comment\"> * chunk descriptor.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_abort_chunk\">sctp_abort_chunk</a> {", 
"        <a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#uh\">uh</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_abort_chunk_t\">sctp_abort_chunk_t</a>;", 
"", 
"", 
"<span class=\"comment\">/* For the graceful shutdown we must carry the tag (in common header)</span>", 
"<span class=\"comment\"> * and the highest consecutive acking value.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_shutdownhdr\">sctp_shutdownhdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#cum_tsn_ack\">cum_tsn_ack</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_shutdownhdr_t\">sctp_shutdownhdr_t</a>;", 
"", 
"struct <a class=\"id\" href=\"#sctp_shutdown_chunk_t\">sctp_shutdown_chunk_t</a> {", 
"        <a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a>    <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"        <a class=\"id\" href=\"#sctp_shutdownhdr_t\">sctp_shutdownhdr_t</a> <a class=\"id\" href=\"#shutdown_hdr\">shutdown_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a>;", 
"", 
"<span class=\"comment\">/* RFC 2960.  Section 3.3.10 Operation Error (ERROR) (9) */</span>", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_errhdr\">sctp_errhdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#cause\">cause</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#length\">length</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>  <a class=\"id\" href=\"#variable\">variable</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_errhdr_t\">sctp_errhdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_operr_chunk\">sctp_operr_chunk</a> {", 
"        <a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_errhdr_t\">sctp_errhdr_t</a>   <a class=\"id\" href=\"#err_hdr\">err_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_operr_chunk_t\">sctp_operr_chunk_t</a>;", 
"", 
"<span class=\"comment\">/* RFC 2960 3.3.10 - Operation Error</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Cause Code: 16 bits (unsigned integer)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *     Defines the type of error conditions being reported.</span>", 
"<span class=\"comment\"> *    Cause Code</span>", 
"<span class=\"comment\"> *     Value           Cause Code</span>", 
"<span class=\"comment\"> *     ---------      ----------------</span>", 
"<span class=\"comment\"> *      1              Invalid Stream Identifier</span>", 
"<span class=\"comment\"> *      2              Missing Mandatory Parameter</span>", 
"<span class=\"comment\"> *      3              Stale Cookie Error</span>", 
"<span class=\"comment\"> *      4              Out of Resource</span>", 
"<span class=\"comment\"> *      5              Unresolvable Address</span>", 
"<span class=\"comment\"> *      6              Unrecognized Chunk Type</span>", 
"<span class=\"comment\"> *      7              Invalid Mandatory Parameter</span>", 
"<span class=\"comment\"> *      8              Unrecognized Parameters</span>", 
"<span class=\"comment\"> *      9              No User Data</span>", 
"<span class=\"comment\"> *     10              Cookie Received While Shutting Down</span>", 
"<span class=\"comment\"> */</span>", 
"typedef enum {", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_NO_ERROR\">SCTP_ERROR_NO_ERROR</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x00),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_INV_STRM\">SCTP_ERROR_INV_STRM</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x01),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_MISS_PARAM\">SCTP_ERROR_MISS_PARAM</a> <span class=\"ts\"/>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x02),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_STALE_COOKIE\">SCTP_ERROR_STALE_COOKIE</a><span class=\"ts\"/>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x03),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_NO_RESOURCE\">SCTP_ERROR_NO_RESOURCE</a> <span class=\"ts\"/>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x04),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_DNS_FAILED\">SCTP_ERROR_DNS_FAILED</a>      = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x05),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_UNKNOWN_CHUNK\">SCTP_ERROR_UNKNOWN_CHUNK</a>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x06),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_INV_PARAM\">SCTP_ERROR_INV_PARAM</a>       = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x07),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_UNKNOWN_PARAM\">SCTP_ERROR_UNKNOWN_PARAM</a>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x08),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_NO_DATA\">SCTP_ERROR_NO_DATA</a>         = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x09),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_COOKIE_IN_SHUTDOWN\">SCTP_ERROR_COOKIE_IN_SHUTDOWN</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x0a),", 
"", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* SCTP Implementation Guide:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  11  Restart of an association with new addresses</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  12  User Initiated Abort</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *  13  Protocol Violation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_RESTART\">SCTP_ERROR_RESTART</a>         = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x0b),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_USER_ABORT\">SCTP_ERROR_USER_ABORT</a>      = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x0c),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_PROTO_VIOLATION\">SCTP_ERROR_PROTO_VIOLATION</a> = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x0d),", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* ADDIP Section 3.3  New Error Causes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Four new Error Causes are added to the SCTP Operational Errors,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * primarily for use in the ASCONF-ACK chunk.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Value          Cause Code</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ---------      ----------------</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x00A0          Request to Delete Last Remaining IP Address.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x00A1          Operation Refused Due to Resource Shortage.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x00A2          Request to Delete Source IP Address.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x00A3          Association Aborted due to illegal ASCONF-ACK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x00A4          Request refused - no authorization.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_DEL_LAST_IP\">SCTP_ERROR_DEL_LAST_IP</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x00A0),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_RSRC_LOW\">SCTP_ERROR_RSRC_LOW</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x00A1),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_DEL_SRC_IP\">SCTP_ERROR_DEL_SRC_IP</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x00A2),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_ASCONF_ACK\">SCTP_ERROR_ASCONF_ACK</a>   = <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x00A3),", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SCTP_ERROR_REQ_REFUSED\">SCTP_ERROR_REQ_REFUSED</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x00A4),", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* AUTH Section 4.  New Error Cause</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This section defines a new error cause that will be sent if an AUTH</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * chunk is received with an unsupported HMAC identifier.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * illustrates the new error cause.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Cause Code      Error Cause Name</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * --------------------------------------------------------------</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 0x0105          Unsupported HMAC Identifier</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#SCTP_ERROR_UNSUP_HMAC\">SCTP_ERROR_UNSUP_HMAC</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cpu_to_be16\">cpu_to_be16</a>(0x0105)", 
"} <a class=\"id\" href=\"#sctp_error_t\">sctp_error_t</a>;", 
"", 
"", 
"", 
"<span class=\"comment\">/* RFC 2960.  Appendix A.  Explicit Congestion Notification.</span>", 
"<span class=\"comment\"> *   Explicit Congestion Notification Echo (ECNE) (12)</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_ecnehdr\">sctp_ecnehdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#lowest_tsn\">lowest_tsn</a>;", 
"} <a class=\"id\" href=\"#sctp_ecnehdr_t\">sctp_ecnehdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_ecne_chunk\">sctp_ecne_chunk</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_ecnehdr_t\">sctp_ecnehdr_t</a> <a class=\"id\" href=\"#ence_hdr\">ence_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_ecne_chunk_t\">sctp_ecne_chunk_t</a>;", 
"", 
"<span class=\"comment\">/* RFC 2960.  Appendix A.  Explicit Congestion Notification.</span>", 
"<span class=\"comment\"> *   Congestion Window Reduced (CWR) (13)</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_cwrhdr\">sctp_cwrhdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#lowest_tsn\">lowest_tsn</a>;", 
"} <a class=\"id\" href=\"#sctp_cwrhdr_t\">sctp_cwrhdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_cwr_chunk\">sctp_cwr_chunk</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_cwrhdr_t\">sctp_cwrhdr_t</a> <a class=\"id\" href=\"#cwr_hdr\">cwr_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_cwr_chunk_t\">sctp_cwr_chunk_t</a>;", 
"", 
"<span class=\"comment\">/* PR-SCTP</span>", 
"<span class=\"comment\"> * 3.2 Forward Cumulative TSN Chunk Definition (FORWARD TSN)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Forward Cumulative TSN chunk has the following format:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *        0                   1                   2                   3</span>", 
"<span class=\"comment\"> *        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1</span>", 
"<span class=\"comment\"> *      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *      |   Type = 192  |  Flags = 0x00 |        Length = Variable      |</span>", 
"<span class=\"comment\"> *      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *      |                      New Cumulative TSN                       |</span>", 
"<span class=\"comment\"> *      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *      |         Stream-1              |       Stream Sequence-1       |</span>", 
"<span class=\"comment\"> *      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *      \\                                                               /</span>", 
"<span class=\"comment\"> *      /                                                               \\</span>", 
"<span class=\"comment\"> *      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *      |         Stream-N              |       Stream Sequence-N       |</span>", 
"<span class=\"comment\"> *      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Chunk Flags:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *        Set to all zeros on transmit and ignored on receipt.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      New Cumulative TSN: 32 bit u_int</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *       This indicates the new cumulative TSN to the data receiver. Upon</span>", 
"<span class=\"comment\"> *       the reception of this value, the data receiver MUST consider</span>", 
"<span class=\"comment\"> *       any missing TSNs earlier than or equal to this value as received</span>", 
"<span class=\"comment\"> *       and stop reporting them as gaps in any subsequent SACKs.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Stream-N: 16 bit u_int</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *       This field holds a stream number that was skipped by this</span>", 
"<span class=\"comment\"> *       FWD-TSN.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *      Stream Sequence-N: 16 bit u_int</span>", 
"<span class=\"comment\"> *       This field holds the sequence number associated with the stream</span>", 
"<span class=\"comment\"> *       that was skipped. The stream sequence field holds the largest stream</span>", 
"<span class=\"comment\"> *       sequence number in this stream being skipped.  The receiver of</span>", 
"<span class=\"comment\"> *       the FWD-TSN's can use the Stream-N and Stream Sequence-N fields</span>", 
"<span class=\"comment\"> *       to enable delivery of any stranded TSN's that remain on the stream</span>", 
"<span class=\"comment\"> *       re-ordering queues. This field MUST NOT report TSN's corresponding</span>", 
"<span class=\"comment\"> *       to DATA chunk that are marked as unordered. For ordered DATA</span>", 
"<span class=\"comment\"> *       chunks this field MUST be filled in.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#sctp_fwdtsn_skip\">sctp_fwdtsn_skip</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#stream\">stream</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#ssn\">ssn</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a>;", 
"", 
"struct <a class=\"id\" href=\"#sctp_fwdtsn_hdr\">sctp_fwdtsn_hdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#new_cum_tsn\">new_cum_tsn</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sctp_fwdtsn_skip\">sctp_fwdtsn_skip</a> <a class=\"id\" href=\"#skip\">skip</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a>;", 
"", 
"struct <a class=\"id\" href=\"#sctp_fwdtsn_chunk\">sctp_fwdtsn_chunk</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sctp_chunkhdr\">sctp_chunkhdr</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sctp_fwdtsn_hdr\">sctp_fwdtsn_hdr</a> <a class=\"id\" href=\"#fwdtsn_hdr\">fwdtsn_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a>;", 
"", 
"", 
"<span class=\"comment\">/* ADDIP</span>", 
"<span class=\"comment\"> * Section 3.1.1 Address Configuration Change Chunk (ASCONF)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Serial Number: 32 bits (unsigned integer)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This value represents a Serial Number for the ASCONF Chunk. The</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>valid range of Serial Number is from 0 to 2^32-1.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Serial Numbers wrap back to 0 after reaching 2^32 -1.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Address Parameter: 8 or 20 bytes (depending on type)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The address is an address of the sender of the ASCONF chunk,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the address MUST be considered part of the association by the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>peer endpoint. This field may be used by the receiver of the </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ASCONF to help in finding the association. This parameter MUST</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be present in every ASCONF message i.e. it is a mandatory TLV</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>parameter.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ASCONF Parameter: TLV format</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Each Address configuration change is represented by a TLV</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>parameter as defined in Section 3.2. One or more requests may</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>be present in an ASCONF Chunk.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Section 3.1.2 Address Configuration Acknowledgement Chunk (ASCONF-ACK)</span>", 
"<span class=\"comment\"> * </span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Serial Number: 32 bits (unsigned integer)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This value represents the Serial Number for the received ASCONF</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Chunk that is acknowledged by this chunk. This value is copied</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>from the received ASCONF Chunk. </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ASCONF Parameter Response: TLV format</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>The ASCONF Parameter Response is used in the ASCONF-ACK to</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>report status of ASCONF processing.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_addip_param\">sctp_addip_param</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_paramhdr_t\">sctp_paramhdr_t</a><span class=\"ts\"/><a class=\"id\" href=\"#param_hdr\">param_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#crr_id\">crr_id</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_addip_param_t\">sctp_addip_param_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_addiphdr\">sctp_addiphdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a><span class=\"ts\"/><a class=\"id\" href=\"#serial\">serial</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><a class=\"id\" href=\"#params\">params</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_addiphdr_t\">sctp_addiphdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_addip_chunk\">sctp_addip_chunk</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_addiphdr_t\">sctp_addiphdr_t</a> <a class=\"id\" href=\"#addip_hdr\">addip_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_addip_chunk_t\">sctp_addip_chunk_t</a>;", 
"", 
"<span class=\"comment\">/* AUTH</span>", 
"<span class=\"comment\"> * Section 4.1  Authentication Chunk (AUTH)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   This chunk is used to hold the result of the HMAC calculation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    0                   1                   2                   3</span>", 
"<span class=\"comment\"> *    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1</span>", 
"<span class=\"comment\"> *   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *   | Type = 0x0F   |   Flags=0     |             Length            |</span>", 
"<span class=\"comment\"> *   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *   |     Shared Key Identifier     |   HMAC Identifier             |</span>", 
"<span class=\"comment\"> *   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *   |                                                               |</span>", 
"<span class=\"comment\"> *   \\                             HMAC                              /</span>", 
"<span class=\"comment\"> *   /                                                               \\</span>", 
"<span class=\"comment\"> *   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   Type: 1 byte (unsigned integer)</span>", 
"<span class=\"comment\"> *   <span class=\"ts\"/>This value MUST be set to 0x0F for  all AUTH-chunks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   Flags: 1 byte (unsigned integer)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Set to zero on transmit and ignored on receipt.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   Length: 2 bytes (unsigned integer)</span>", 
"<span class=\"comment\"> *   <span class=\"ts\"/>This value holds the length of the HMAC in bytes plus 8.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Shared Key Identifier: 2 bytes (unsigned integer)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This value describes which endpoint pair shared key is used.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   HMAC Identifier: 2 bytes (unsigned integer)</span>", 
"<span class=\"comment\"> *   <span class=\"ts\"/>This value describes which message digest is being used.  Table 2</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>shows the currently defined values.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *    The following Table 2 shows the currently defined values for HMAC</span>", 
"<span class=\"comment\"> *       identifiers.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> +-----------------+--------------------------+</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> | HMAC Identifier | Message Digest Algorithm |</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> +-----------------+--------------------------+</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> | 0               | Reserved                 |</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> | 1               | SHA-1 defined in [8]     |</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> | 2               | Reserved                 |</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> | 3               | SHA-256 defined in [8]   |</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/> +-----------------+--------------------------+</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *   HMAC: n bytes (unsigned integer) This hold the result of the HMAC</span>", 
"<span class=\"comment\"> *      calculation.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef struct <a class=\"id\" href=\"#sctp_authhdr\">sctp_authhdr</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#shkey_id\">shkey_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be16\">__be16</a> <a class=\"id\" href=\"#hmac_id\">hmac_id</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a>   <a class=\"id\" href=\"#hmac\">hmac</a>[0];", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_authhdr_t\">sctp_authhdr_t</a>;", 
"", 
"typedef struct <a class=\"id\" href=\"#sctp_auth_chunk\">sctp_auth_chunk</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_chunkhdr_t\">sctp_chunkhdr_t</a> <a class=\"id\" href=\"#chunk_hdr\">chunk_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sctp_authhdr_t\">sctp_authhdr_t</a> <a class=\"id\" href=\"#auth_hdr\">auth_hdr</a>;", 
"} <a class=\"id\" href=\"#__packed\">__packed</a> <a class=\"id\" href=\"#sctp_auth_chunk_t\">sctp_auth_chunk_t</a>;", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* __LINUX_SCTP_H__ */</span>", 
];
xr_frag_insert('l/3f/e3ee8af0e85a329cb3aada007594aaf09057d5.xr', __xr_tmp);
