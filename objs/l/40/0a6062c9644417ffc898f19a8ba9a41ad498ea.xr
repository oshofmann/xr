var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a>-><a class=\"id\" href=\"#index\">index</a> == <a class=\"id\" href=\"#ENTRIES_PER_PAGE\">ENTRIES_PER_PAGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a>-><a class=\"id\" href=\"#next\">next</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* allocate another page */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a>-><a class=\"id\" href=\"#next\">next</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *)<a class=\"id\" href=\"#get_zeroed_page\">get_zeroed_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a>-><a class=\"id\" href=\"#next\">next</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a> = <a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return &amp;<a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a>-><a class=\"id\" href=\"#records\">records</a>[<a class=\"id\" href=\"#ftrace_pages\">ftrace_pages</a>-><a class=\"id\" href=\"#index\">index</a>++];", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *", 
"<a class=\"id\" href=\"#ftrace_record_ip\">ftrace_record_ip</a>(unsigned long <a class=\"id\" href=\"#ip\">ip</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *<a class=\"id\" href=\"#rec\">rec</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ftrace_disabled\">ftrace_disabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rec\">rec</a> = <a class=\"id\" href=\"#ftrace_alloc_dyn_node\">ftrace_alloc_dyn_node</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#rec\">rec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#ip\">ip</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#newlist\">newlist</a> = <a class=\"id\" href=\"#ftrace_new_addrs\">ftrace_new_addrs</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ftrace_new_addrs\">ftrace_new_addrs</a> = <a class=\"id\" href=\"#rec\">rec</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rec\">rec</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#print_ip_ins\">print_ip_ins</a>(const char *<a class=\"id\" href=\"#fmt\">fmt</a>, unsigned char *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"%s\", <a class=\"id\" href=\"#fmt\">fmt</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#MCOUNT_INSN_SIZE\">MCOUNT_INSN_SIZE</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"%s%02x\", <a class=\"id\" href=\"#i\">i</a> ? \":\" : \"\", <a class=\"id\" href=\"#p\">p</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ftrace_bug\">ftrace_bug</a>(int <a class=\"id\" href=\"#failed\">failed</a>, unsigned long <a class=\"id\" href=\"#ip\">ip</a>)", 
"{", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#failed\">failed</a>) {", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_WARN_ON_ONCE\">FTRACE_WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"ftrace faulted on modifying \");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_ip_sym\">print_ip_sym</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_WARN_ON_ONCE\">FTRACE_WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"ftrace failed to modify \");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_ip_sym\">print_ip_sym</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_ip_ins\">print_ip_ins</a>(\" actual: \", (unsigned char *)<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CONT\">KERN_CONT</a> \"\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case -<a class=\"id\" href=\"#EPERM\">EPERM</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_WARN_ON_ONCE\">FTRACE_WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"ftrace faulted on writing \");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_ip_sym\">print_ip_sym</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#FTRACE_WARN_ON_ONCE\">FTRACE_WARN_ON_ONCE</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_info\">pr_info</a>(\"ftrace faulted on unknown error \");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#print_ip_sym\">print_ip_sym</a>(<a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"<span class=\"comment\">/* Return 1 if the address range is reserved for ftrace */</span>", 
"int <a class=\"id\" href=\"#ftrace_text_reserved\">ftrace_text_reserved</a>(void *<a class=\"id\" href=\"#start\">start</a>, void *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *<a class=\"id\" href=\"#rec\">rec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_page\">ftrace_page</a> *<a class=\"id\" href=\"#pg\">pg</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_for_each_ftrace_rec\">do_for_each_ftrace_rec</a>(<a class=\"id\" href=\"#pg\">pg</a>, <a class=\"id\" href=\"#rec\">rec</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#ip\">ip</a> <= (unsigned long)<a class=\"id\" href=\"#end\">end</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#ip\">ip</a> + <a class=\"id\" href=\"#MCOUNT_INSN_SIZE\">MCOUNT_INSN_SIZE</a> &gt; (unsigned long)<a class=\"id\" href=\"#start\">start</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#while_for_each_ftrace_rec\">while_for_each_ftrace_rec</a>();", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"static int", 
"<a class=\"id\" href=\"#__ftrace_replace_code\">__ftrace_replace_code</a>(struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *<a class=\"id\" href=\"#rec\">rec</a>, int <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ftrace_addr\">ftrace_addr</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flag\">flag</a> = 0UL;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ftrace_addr\">ftrace_addr</a> = (unsigned long)<a class=\"id\" href=\"#FTRACE_ADDR\">FTRACE_ADDR</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this record is not to be traced or we want to disable it,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then disable it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we want to enable it and filtering is off, then enable it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we want to enable it and filtering is on, enable it only if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it's filtered</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enable\">enable</a> && !(<a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FTRACE_FL_NOTRACE\">FTRACE_FL_NOTRACE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ftrace_filtered\">ftrace_filtered</a> || (<a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FTRACE_FL_FILTER\">FTRACE_FL_FILTER</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flag\">flag</a> = <a class=\"id\" href=\"#FTRACE_FL_ENABLED\">FTRACE_FL_ENABLED</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If the state of this record hasn't changed, then do nothing */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FTRACE_FL_ENABLED\">FTRACE_FL_ENABLED</a>) == <a class=\"id\" href=\"#flag\">flag</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flag\">flag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FTRACE_FL_ENABLED\">FTRACE_FL_ENABLED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ftrace_make_call\">ftrace_make_call</a>(<a class=\"id\" href=\"#rec\">rec</a>, <a class=\"id\" href=\"#ftrace_addr\">ftrace_addr</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#FTRACE_FL_ENABLED\">FTRACE_FL_ENABLED</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ftrace_make_nop\">ftrace_make_nop</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#rec\">rec</a>, <a class=\"id\" href=\"#ftrace_addr\">ftrace_addr</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#ftrace_replace_code\">ftrace_replace_code</a>(int <a class=\"id\" href=\"#enable\">enable</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *<a class=\"id\" href=\"#rec\">rec</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_page\">ftrace_page</a> *<a class=\"id\" href=\"#pg\">pg</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#failed\">failed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_for_each_ftrace_rec\">do_for_each_ftrace_rec</a>(<a class=\"id\" href=\"#pg\">pg</a>, <a class=\"id\" href=\"#rec\">rec</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Skip over free records, records that have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * failed and not converted.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FTRACE_FL_FREE\">FTRACE_FL_FREE</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FTRACE_FL_FAILED\">FTRACE_FL_FAILED</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#FTRACE_FL_CONVERTED\">FTRACE_FL_CONVERTED</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#failed\">failed</a> = <a class=\"id\" href=\"#__ftrace_replace_code\">__ftrace_replace_code</a>(<a class=\"id\" href=\"#rec\">rec</a>, <a class=\"id\" href=\"#enable\">enable</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#failed\">failed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FTRACE_FL_FAILED\">FTRACE_FL_FAILED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_bug\">ftrace_bug</a>(<a class=\"id\" href=\"#failed\">failed</a>, <a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Stop processing */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#while_for_each_ftrace_rec\">while_for_each_ftrace_rec</a>();", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ftrace_code_disable\">ftrace_code_disable</a>(struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>, struct <a class=\"id\" href=\"#dyn_ftrace\">dyn_ftrace</a> *<a class=\"id\" href=\"#rec\">rec</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#ip\">ip</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ip\">ip</a> = <a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#ip\">ip</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ftrace_make_nop\">ftrace_make_nop</a>(<a class=\"id\" href=\"#mod\">mod</a>, <a class=\"id\" href=\"#rec\">rec</a>, <a class=\"id\" href=\"#MCOUNT_ADDR\">MCOUNT_ADDR</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_bug\">ftrace_bug</a>(<a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#ip\">ip</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rec\">rec</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#FTRACE_FL_FAILED\">FTRACE_FL_FAILED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * archs can override this function if they must do something</span>", 
"<span class=\"comment\"> * before the modifying code is performed.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__weak\">__weak</a> <a class=\"id\" href=\"#ftrace_arch_code_modify_prepare\">ftrace_arch_code_modify_prepare</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * archs can override this function if they must do something</span>", 
"<span class=\"comment\"> * after the modifying code is performed.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__weak\">__weak</a> <a class=\"id\" href=\"#ftrace_arch_code_modify_post_process\">ftrace_arch_code_modify_post_process</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#__ftrace_modify_code\">__ftrace_modify_code</a>(void *<a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>int *<a class=\"id\" href=\"#command\">command</a> = <a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#command\">command</a> &amp; <a class=\"id\" href=\"#FTRACE_ENABLE_CALLS\">FTRACE_ENABLE_CALLS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_replace_code\">ftrace_replace_code</a>(1);", 
"<span class=\"ts\"/>else if (*<a class=\"id\" href=\"#command\">command</a> &amp; <a class=\"id\" href=\"#FTRACE_DISABLE_CALLS\">FTRACE_DISABLE_CALLS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ftrace_replace_code\">ftrace_replace_code</a>(0);", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#command\">command</a> &amp; <a class=\"id\" href=\"#FTRACE_UPDATE_TRACE_FUNC\">FTRACE_UPDATE_TRACE_FUNC</a>)", 
];
xr_frag_insert('l/40/0a6062c9644417ffc898f19a8ba9a41ad498ea.xr', __xr_tmp);
