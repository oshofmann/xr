var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *  linux/fs/ext4/balloc.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1992, 1993, 1994, 1995</span>", 
"<span class=\"comment\"> * Remy Card (card@masi.ibp.fr)</span>", 
"<span class=\"comment\"> * Laboratoire MASI - Institut Blaise Pascal</span>", 
"<span class=\"comment\"> * Universite Pierre et Marie Curie (Paris VI)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Enhanced block allocation by Stephen Tweedie (sct@redhat.com), 1993</span>", 
"<span class=\"comment\"> *  Big-endian to little-endian byte-swapping/bitmaps by</span>", 
"<span class=\"comment\"> *        David S. Miller (davem@caip.rutgers.edu), 1995</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#fs\">fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jbd2\">jbd2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#quotaops\">quotaops</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#buffer_head\">buffer_head</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"ext4_jbd2.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"mballoc.h\"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * balloc.c contains the blocks allocation and deallocation routines</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Calculate the block group number and offset, given a block number</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#blocknr\">blocknr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> *<a class=\"id\" href=\"#blockgrpp\">blockgrpp</a>, <a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> *<a class=\"id\" href=\"#offsetp\">offsetp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blocknr\">blocknr</a> = <a class=\"id\" href=\"#blocknr\">blocknr</a> - <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#es\">es</a>-><a class=\"id\" href=\"#s_first_data_block\">s_first_data_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#do_div\">do_div</a>(<a class=\"id\" href=\"#blocknr\">blocknr</a>, <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#offsetp\">offsetp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#offsetp\">offsetp</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#blockgrpp\">blockgrpp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#blockgrpp\">blockgrpp</a> = <a class=\"id\" href=\"#blocknr\">blocknr</a>;", 
"", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_block_in_group\">ext4_block_in_group</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#actual_group\">actual_group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>, &amp;<a class=\"id\" href=\"#actual_group\">actual_group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#actual_group\">actual_group</a> == <a class=\"id\" href=\"#block_group\">block_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_group_used_meta_blocks\">ext4_group_used_meta_blocks</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* block bitmap, inode bitmap, and inode table blocks */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#used_blocks\">used_blocks</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a> + 2;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_block_in_group\">ext4_block_in_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_group\">block_group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#used_blocks\">used_blocks</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_block_in_group\">ext4_block_in_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_group\">block_group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#used_blocks\">used_blocks</a>--;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (; <a class=\"id\" href=\"#tmp\">tmp</a> &lt; <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>; <a class=\"id\" href=\"#tmp\">tmp</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_block_in_group\">ext4_block_in_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#block_group\">block_group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#used_blocks\">used_blocks</a> -= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#used_blocks\">used_blocks</a>;", 
"}", 
"", 
"<span class=\"comment\">/* Initializes an uninitialized block bitmap if given, and returns the</span>", 
"<span class=\"comment\"> * number of blocks free in the group. */</span>", 
"unsigned <a class=\"id\" href=\"#ext4_init_block_bitmap\">ext4_init_block_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>, struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#bit_max\">bit_max</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#ext4_get_groups_count\">ext4_get_groups_count</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#free_blocks\">free_blocks</a>, <a class=\"id\" href=\"#group_blocks\">group_blocks</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#J_ASSERT_BH\">J_ASSERT_BH</a>(<a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#buffer_locked\">buffer_locked</a>(<a class=\"id\" href=\"#bh\">bh</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If checksum is bad mark all blocks used to prevent allocation</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * essentially implementing a per-group read-only flag. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_group_desc_csum_verify\">ext4_group_desc_csum_verify</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#gdp\">gdp</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Checksum bad for group %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blks_set\">ext4_free_blks_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_inodes_set\">ext4_free_inodes_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_itable_unused_set\">ext4_itable_unused_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, 0xff, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, 0, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Check for superblock and gdt backups in this group */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bit_max\">bit_max</a> = <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_META_BG\">EXT4_FEATURE_INCOMPAT_META_BG</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#block_group\">block_group</a> &lt; <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_meta_bg\">s_first_meta_bg</a>) *", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_desc_per_block\">s_desc_per_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bit_max\">bit_max</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_max\">bit_max</a> += <a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_max\">bit_max</a> +=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_reserved_gdt_blocks\">s_reserved_gdt_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else { <span class=\"comment\">/* For META_BG_BLOCK_GROUPS */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit_max\">bit_max</a> += <a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#block_group\">block_group</a> == <a class=\"id\" href=\"#ngroups\">ngroups</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Even though mke2fs always initialize first and last group</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if some other tool enabled the EXT4_BG_BLOCK_UNINIT we need</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to make sure we calculate the right free blocks</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_blocks\">group_blocks</a> = <a class=\"id\" href=\"#ext4_blocks_count\">ext4_blocks_count</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ngroups\">ngroups</a> - 1);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#group_blocks\">group_blocks</a> = <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_blocks\">free_blocks</a> = <a class=\"id\" href=\"#group_blocks\">group_blocks</a> - <a class=\"id\" href=\"#bit_max\">bit_max</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flex_bg\">flex_bg</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#bit\">bit</a> = 0; <a class=\"id\" href=\"#bit\">bit</a> &lt; <a class=\"id\" href=\"#bit_max\">bit_max</a>; <a class=\"id\" href=\"#bit\">bit</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#bit\">bit</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flex_bg\">flex_bg</a> = 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set bits for block and inode bitmaps, and inode table */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#flex_bg\">flex_bg</a> || <a class=\"id\" href=\"#ext4_block_in_group\">ext4_block_in_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#block_group\">block_group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#tmp\">tmp</a> - <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#flex_bg\">flex_bg</a> || <a class=\"id\" href=\"#ext4_block_in_group\">ext4_block_in_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#block_group\">block_group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#tmp\">tmp</a> - <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tmp\">tmp</a> = <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (; <a class=\"id\" href=\"#tmp\">tmp</a> &lt; <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>; <a class=\"id\" href=\"#tmp\">tmp</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#flex_bg\">flex_bg</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_block_in_group\">ext4_block_in_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#tmp\">tmp</a>, <a class=\"id\" href=\"#block_group\">block_group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_bit\">ext4_set_bit</a>(<a class=\"id\" href=\"#tmp\">tmp</a> - <a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Also if the number of blocks within the group is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * less than the blocksize * 8 ( which is the size</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * of bitmap ), set rest of the block bitmap to 1</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mark_bitmap_end\">mark_bitmap_end</a>(<a class=\"id\" href=\"#group_blocks\">group_blocks</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> * 8, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#free_blocks\">free_blocks</a> - <a class=\"id\" href=\"#ext4_group_used_meta_blocks\">ext4_group_used_meta_blocks</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The free blocks are managed by bitmaps.  A file system contains several</span>", 
"<span class=\"comment\"> * blocks groups.  Each group contains 1 bitmap block for blocks, 1 bitmap</span>", 
"<span class=\"comment\"> * block for inodes, N blocks for the inode table and data blocks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The file system contains group descriptors which are located after the</span>", 
"<span class=\"comment\"> * super block.  Each descriptor contains the number of the bitmap block and</span>", 
"<span class=\"comment\"> * the free blocks count in the block.  The descriptors are loaded in memory</span>", 
"<span class=\"comment\"> * when a file system is mounted (see ext4_fill_super).</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_get_group_desc() -- load group descriptor from disk</span>", 
"<span class=\"comment\"> * @sb:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>super block</span>", 
"<span class=\"comment\"> * @block_group:<span class=\"ts\"/>given block group</span>", 
"<span class=\"comment\"> * @bh:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>pointer to the buffer head to store the block</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>group descriptor</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> * <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> **<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#group_desc\">group_desc</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#ext4_get_groups_count\">ext4_get_groups_count</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#block_group\">block_group</a> >= <a class=\"id\" href=\"#ngroups\">ngroups</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"block_group >= groups_count - block_group = %u,\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \" groups_count = %u\", <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#ngroups\">ngroups</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_desc\">group_desc</a> = <a class=\"id\" href=\"#block_group\">block_group</a> >> <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK_BITS\">EXT4_DESC_PER_BLOCK_BITS</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#block_group\">block_group</a> &amp; (<a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#group_desc\">group_desc</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Group descriptor not loaded - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"block_group = %u, group_desc = %u, desc = %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#group_desc\">group_desc</a>, <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = (struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *)(", 
"<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#__u8\">__u8</a> *)<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#group_desc\">group_desc</a>]-><a class=\"id\" href=\"#b_data\">b_data</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> * <a class=\"id\" href=\"#EXT4_DESC_SIZE\">EXT4_DESC_SIZE</a>(<a class=\"id\" href=\"#sb\">sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_group_desc\">s_group_desc</a>[<a class=\"id\" href=\"#group_desc\">group_desc</a>];", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#desc\">desc</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_valid_block_bitmap\">ext4_valid_block_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#block_group\">block_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#next_zero_bit\">next_zero_bit</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#group_first_block\">group_first_block</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_FLEX_BG\">EXT4_FEATURE_INCOMPAT_FLEX_BG</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* with FLEX_BG, the inode/block bitmaps and itable</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * blocks may not be in the group at all</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * so the bitmap validation will be skipped for those groups</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * or it has to also read the block group where the bitmaps</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * are located to verify they are set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#group_first_block\">group_first_block</a> = <a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check whether block bitmap block number is set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a> = <a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a> - <a class=\"id\" href=\"#group_first_block\">group_first_block</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_test_bit\">ext4_test_bit</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bad block bitmap */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check whether the inode bitmap block number is set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a> = <a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a> - <a class=\"id\" href=\"#group_first_block\">group_first_block</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_test_bit\">ext4_test_bit</a>(<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* bad block bitmap */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#err_out\">err_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check whether the inode table block number is set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a> = <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a> - <a class=\"id\" href=\"#group_first_block\">group_first_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next_zero_bit\">next_zero_bit</a> = <a class=\"id\" href=\"#ext4_find_next_zero_bit\">ext4_find_next_zero_bit</a>(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next_zero_bit\">next_zero_bit</a> >= <a class=\"id\" href=\"#offset\">offset</a> + <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* good bitmap for inode tables */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<a class=\"id\" href=\"#err_out\">err_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Invalid block bitmap - block_group = %d, block = %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_read_block_bitmap()</span>", 
"<span class=\"comment\"> * @sb:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>super block</span>", 
"<span class=\"comment\"> * @block_group:<span class=\"ts\"/>given block group</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Read the bitmap for a given block_group,and validate the</span>", 
"<span class=\"comment\"> * bits for block/inode/inode tables are set in the bitmaps</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return buffer_head on success or NULL in case of failure.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *", 
"<a class=\"id\" href=\"#ext4_read_block_bitmap\">ext4_read_block_bitmap</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a> = <a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Cannot read block bitmap - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"block_group = %u, block_bitmap = %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bitmap_uptodate\">bitmap_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bitmap_uptodate\">bitmap_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_flags\">bg_flags</a> &amp; <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#EXT4_BG_BLOCK_UNINIT\">EXT4_BG_BLOCK_UNINIT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_init_block_bitmap\">ext4_init_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#bh\">bh</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bitmap_uptodate\">set_bitmap_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer_uptodate\">buffer_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * if not uninit if bh is uptodate,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * bitmap is also uptodate</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bitmap_uptodate\">set_bitmap_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * submit the buffer_head for read. We can</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * safely mark the bitmap as uptodate now.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We do it here so the bitmap uptodate bit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * get set with buffer lock held.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bitmap_uptodate\">set_bitmap_uptodate</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bh_submit_read\">bh_submit_read</a>(<a class=\"id\" href=\"#bh\">bh</a>) &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_bh\">put_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Cannot read block bitmap - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"block_group = %u, block_bitmap = %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#bitmap_blk\">bitmap_blk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_valid_block_bitmap\">ext4_valid_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * file system mounted not to panic on error,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * continue with corrupt bitmap</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_add_groupblocks() -- Add given blocks to an existing group</span>", 
"<span class=\"comment\"> * @handle:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>handle to this transaction</span>", 
"<span class=\"comment\"> * @sb:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>super block</span>", 
"<span class=\"comment\"> * @block:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>start physcial block to add to the block group</span>", 
"<span class=\"comment\"> * @count:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>number of blocks to free</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This marks the blocks as free in the bitmap. We ask the</span>", 
"<span class=\"comment\"> * mballoc to reload the buddy after this by setting group</span>", 
"<span class=\"comment\"> * EXT4_GROUP_INFO_NEED_INIT_BIT flag</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#ext4_add_groupblocks\">ext4_add_groupblocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#block\">block</a>, unsigned long <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#gd_bh\">gd_bh</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#block_group\">block_group</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#bit\">bit</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#desc\">desc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#blk_free_count\">blk_free_count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_grpblk_t\">ext4_grpblk_t</a> <a class=\"id\" href=\"#blocks_freed\">blocks_freed</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_info\">ext4_group_info</a> *<a class=\"id\" href=\"#grp\">grp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_debug\">ext4_debug</a>(\"Adding block(s) %llu-%llu\\n\", <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#count\">count</a> - 1);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_get_group_no_and_offset\">ext4_get_group_no_and_offset</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>, &amp;<a class=\"id\" href=\"#block_group\">block_group</a>, &amp;<a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#grp\">grp</a> = <a class=\"id\" href=\"#ext4_get_group_info\">ext4_get_group_info</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check to see if we are freeing blocks across a group</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * boundary.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bit\">bit</a> + <a class=\"id\" href=\"#count\">count</a> &gt; <a class=\"id\" href=\"#EXT4_BLOCKS_PER_GROUP\">EXT4_BLOCKS_PER_GROUP</a>(<a class=\"id\" href=\"#sb\">sb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#ext4_read_block_bitmap\">ext4_read_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a> = <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, &amp;<a class=\"id\" href=\"#gd_bh\">gd_bh</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#desc\">desc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#ext4_block_bitmap\">ext4_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>), <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#ext4_inode_bitmap\">ext4_inode_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>), <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>), <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#count\">count</a> - 1, <a class=\"id\" href=\"#ext4_inode_table\">ext4_inode_table</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_itb_per_group\">s_itb_per_group</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"Adding blocks in system zones - \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"Block = %llu, count = %lu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#block\">block</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We are about to add blocks to the bitmap,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * so we need undo access.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, \"getting undo access\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_undo_access\">ext4_journal_get_undo_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We are about to modify some metadata.  Call the journal APIs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to unshare -&gt;b_data if a currently-committing transaction is</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * using it</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#gd_bh\">gd_bh</a>, \"get_write_access\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#gd_bh\">gd_bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#error_return\">error_return</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * make sure we don't allow a parallel init on other groups in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * same buddy cache</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#alloc_sem\">alloc_sem</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0, <a class=\"id\" href=\"#blocks_freed\">blocks_freed</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, \"clear bit\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_clear_bit_atomic\">ext4_clear_bit_atomic</a>(<a class=\"id\" href=\"#ext4_group_lock_ptr\">ext4_group_lock_ptr</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bit\">bit</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_error\">ext4_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, \"bit already cleared for block %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a>)(<a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#i\">i</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, \"bit already cleared\");", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#blocks_freed\">blocks_freed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lock_group\">ext4_lock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#blk_free_count\">blk_free_count</a> = <a class=\"id\" href=\"#blocks_freed\">blocks_freed</a> + <a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blks_set\">ext4_free_blks_set</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#desc\">desc</a>, <a class=\"id\" href=\"#blk_free_count\">blk_free_count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc\">desc</a>-><a class=\"id\" href=\"#bg_checksum\">bg_checksum</a> = <a class=\"id\" href=\"#ext4_group_desc_csum\">ext4_group_desc_csum</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#block_group\">block_group</a>, <a class=\"id\" href=\"#desc\">desc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_unlock_group\">ext4_unlock_group</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_add\">percpu_counter_add</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>, <a class=\"id\" href=\"#blocks_freed\">blocks_freed</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_log_groups_per_flex\">s_log_groups_per_flex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#flex_group\">flex_group</a> = <a class=\"id\" href=\"#ext4_flex_group\">ext4_flex_group</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#block_group\">block_group</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(<a class=\"id\" href=\"#blocks_freed\">blocks_freed</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_flex_groups\">s_flex_groups</a>[<a class=\"id\" href=\"#flex_group\">flex_group</a>].<a class=\"id\" href=\"#free_blocks\">free_blocks</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * request to reload the buddy with the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new bitmap information</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#EXT4_GROUP_INFO_NEED_INIT_BIT\">EXT4_GROUP_INFO_NEED_INIT_BIT</a>, &amp;(<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#bb_state\">bb_state</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#bb_free\">bb_free</a> += <a class=\"id\" href=\"#blocks_freed\">blocks_freed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#grp\">grp</a>-><a class=\"id\" href=\"#alloc_sem\">alloc_sem</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We dirtied the bitmap block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, \"dirtied bitmap block\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* And the group descriptor block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUFFER_TRACE\">BUFFER_TRACE</a>(<a class=\"id\" href=\"#gd_bh\">gd_bh</a>, \"dirtied group descriptor block\");", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#gd_bh\">gd_bh</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<a class=\"id\" href=\"#error_return\">error_return</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_std_error\">ext4_std_error</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_has_free_blocks()</span>", 
"<span class=\"comment\"> * @sbi:<span class=\"ts\"/>in-core super block structure.</span>", 
"<span class=\"comment\"> * @nblocks:<span class=\"ts\"/>number of needed blocks</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Check if filesystem has nblocks free &amp; available for allocation.</span>", 
"<span class=\"comment\"> * On success return 1, return 0 on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_has_free_blocks\">ext4_has_free_blocks</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#free_blocks\">free_blocks</a>, <a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a>, <a class=\"id\" href=\"#root_blocks\">root_blocks</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#fbc\">fbc</a> = &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_freeblocks_counter\">s_freeblocks_counter</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#percpu_counter\">percpu_counter</a> *<a class=\"id\" href=\"#dbc\">dbc</a> = &amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_blocks\">free_blocks</a>  = <a class=\"id\" href=\"#percpu_counter_read_positive\">percpu_counter_read_positive</a>(<a class=\"id\" href=\"#fbc\">fbc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a> = <a class=\"id\" href=\"#percpu_counter_read_positive\">percpu_counter_read_positive</a>(<a class=\"id\" href=\"#dbc\">dbc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#root_blocks\">root_blocks</a> = <a class=\"id\" href=\"#ext4_r_blocks_count\">ext4_r_blocks_count</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_es\">s_es</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#free_blocks\">free_blocks</a> - (<a class=\"id\" href=\"#nblocks\">nblocks</a> + <a class=\"id\" href=\"#root_blocks\">root_blocks</a> + <a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a>) &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_FREEBLOCKS_WATERMARK\">EXT4_FREEBLOCKS_WATERMARK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_blocks\">free_blocks</a>  = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(<a class=\"id\" href=\"#fbc\">fbc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a> = <a class=\"id\" href=\"#percpu_counter_sum_positive\">percpu_counter_sum_positive</a>(<a class=\"id\" href=\"#dbc\">dbc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_CRIT\">KERN_CRIT</a> \"Dirty block accounting \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"went wrong %lld\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(long long)<a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Check whether we have space after</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * accounting for current dirty blocks &amp; root reserved blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#free_blocks\">free_blocks</a> >= ((<a class=\"id\" href=\"#root_blocks\">root_blocks</a> + <a class=\"id\" href=\"#nblocks\">nblocks</a>) + <a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Hm, nope.  Are (enough) root reserved blocks available? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resuid\">s_resuid</a> == <a class=\"id\" href=\"#current_fsuid\">current_fsuid</a>() ||", 
"<span class=\"ts\"/>    ((<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a> != 0) && <a class=\"id\" href=\"#in_group_p\">in_group_p</a>(<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_resgid\">s_resgid</a>)) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_SYS_RESOURCE\">CAP_SYS_RESOURCE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#free_blocks\">free_blocks</a> >= (<a class=\"id\" href=\"#nblocks\">nblocks</a> + <a class=\"id\" href=\"#dirty_blocks\">dirty_blocks</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#ext4_claim_free_blocks\">ext4_claim_free_blocks</a>(struct <a class=\"id\" href=\"#ext4_sb_info\">ext4_sb_info</a> *<a class=\"id\" href=\"#sbi\">sbi</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s64\">s64</a> <a class=\"id\" href=\"#nblocks\">nblocks</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_has_free_blocks\">ext4_has_free_blocks</a>(<a class=\"id\" href=\"#sbi\">sbi</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#percpu_counter_add\">percpu_counter_add</a>(&amp;<a class=\"id\" href=\"#sbi\">sbi</a>-><a class=\"id\" href=\"#s_dirtyblocks_counter\">s_dirtyblocks_counter</a>, <a class=\"id\" href=\"#nblocks\">nblocks</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_should_retry_alloc()</span>", 
"<span class=\"comment\"> * @sb:<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>super block</span>", 
"<span class=\"comment\"> * @retries<span class=\"ts\"/><span class=\"ts\"/>number of attemps has been made</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * ext4_should_retry_alloc() is called when ENOSPC is returned, and if</span>", 
"<span class=\"comment\"> * it is profitable to retry the operation, this function will wait</span>", 
"<span class=\"comment\"> * for the current or commiting transaction to complete, and then</span>", 
"<span class=\"comment\"> * return TRUE.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * if the total number of retries exceed three times, return FALSE.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_should_retry_alloc\">ext4_should_retry_alloc</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, int *<a class=\"id\" href=\"#retries\">retries</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_has_free_blocks\">ext4_has_free_blocks</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>), 1) ||", 
"<span class=\"ts\"/>    (*<a class=\"id\" href=\"#retries\">retries</a>)++ &gt; 3 ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#jbd_debug\">jbd_debug</a>(1, \"%s: retrying operation after ENOSPC\\n\", <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_id\">s_id</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#jbd2_journal_force_commit_nested\">jbd2_journal_force_commit_nested</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_journal\">s_journal</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_new_meta_blocks() -- allocate block for meta data (indexing) blocks</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @handle:             handle to this transaction</span>", 
"<span class=\"comment\"> * @inode:              file inode</span>", 
"<span class=\"comment\"> * @goal:               given target block(filesystem wide)</span>", 
"<span class=\"comment\"> * @count:<span class=\"ts\"/><span class=\"ts\"/>pointer to total number of blocks needed</span>", 
"<span class=\"comment\"> * @errp:               error code</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Return 1st allocated block number on success, *count stores total account</span>", 
"<span class=\"comment\"> * error stores in errp pointer</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_new_meta_blocks\">ext4_new_meta_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#goal\">goal</a>, unsigned long *<a class=\"id\" href=\"#count\">count</a>, int *<a class=\"id\" href=\"#errp\">errp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_allocation_request\">ext4_allocation_request</a> <a class=\"id\" href=\"#ar\">ar</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#ar\">ar</a>, 0, sizeof(<a class=\"id\" href=\"#ar\">ar</a>));", 
"<span class=\"ts\"/><span class=\"comment\">/* Fill with neighbour allocated blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#inode\">inode</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#goal\">goal</a> = <a class=\"id\" href=\"#goal\">goal</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#count\">count</a> ? *<a class=\"id\" href=\"#count\">count</a> : 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_mb_new_blocks\">ext4_mb_new_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#ar\">ar</a>, <a class=\"id\" href=\"#errp\">errp</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Account for the allocated meta blocks.  We will never</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fail EDQUOT for metdata, but we do account for it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!(*<a class=\"id\" href=\"#errp\">errp</a>) && <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_delalloc_reserved_flag\">i_delalloc_reserved_flag</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_allocated_meta_blocks\">i_allocated_meta_blocks</a> += <a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_reservation_lock\">i_block_reservation_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_alloc_block_nofail\">dquot_alloc_block_nofail</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * ext4_count_free_blocks() -- count filesystem free blocks</span>", 
"<span class=\"comment\"> * @sb:<span class=\"ts\"/><span class=\"ts\"/>superblock</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Adds up the number of free blocks from each block group.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ext4_count_free_blocks\">ext4_count_free_blocks</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#desc_count\">desc_count</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_group_desc\">ext4_group_desc</a> *<a class=\"id\" href=\"#gdp\">gdp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#ngroups\">ngroups</a> = <a class=\"id\" href=\"#ext4_get_groups_count\">ext4_get_groups_count</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#EXT4FS_DEBUG\">EXT4FS_DEBUG</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_super_block\">ext4_super_block</a> *<a class=\"id\" href=\"#es\">es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#bitmap_count\">bitmap_count</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#es\">es</a> = <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bitmap_count\">bitmap_count</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> += <a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> = <a class=\"id\" href=\"#ext4_read_block_bitmap\">ext4_read_block_bitmap</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#ext4_count_free\">ext4_count_free</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>, <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"group %u: stored = %d, counted = %u\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>), <a class=\"id\" href=\"#x\">x</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bitmap_count\">bitmap_count</a> += <a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bitmap_bh\">bitmap_bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ext4_count_free_blocks: stored = %llu\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\", computed = %llu, %llu\\n\", <a class=\"id\" href=\"#ext4_free_blocks_count\">ext4_free_blocks_count</a>(<a class=\"id\" href=\"#es\">es</a>),", 
"<span class=\"ts\"/>       <a class=\"id\" href=\"#desc_count\">desc_count</a>, <a class=\"id\" href=\"#bitmap_count\">bitmap_count</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#bitmap_count\">bitmap_count</a>;", 
"#else", 
"<span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ngroups\">ngroups</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gdp\">gdp</a> = <a class=\"id\" href=\"#ext4_get_group_desc\">ext4_get_group_desc</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#gdp\">gdp</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#desc_count\">desc_count</a> += <a class=\"id\" href=\"#ext4_free_blks_count\">ext4_free_blks_count</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#gdp\">gdp</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#desc_count\">desc_count</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#test_root\">test_root</a>(<a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#a\">a</a>, int <a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#num\">num</a> = <a class=\"id\" href=\"#b\">b</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#a\">a</a> &gt; <a class=\"id\" href=\"#num\">num</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#num\">num</a> *= <a class=\"id\" href=\"#b\">b</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#num\">num</a> == <a class=\"id\" href=\"#a\">a</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#ext4_group_sparse\">ext4_group_sparse</a>(<a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a> <= 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#group\">group</a> &amp; 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#test_root\">test_root</a>(<a class=\"id\" href=\"#group\">group</a>, 7) || <a class=\"id\" href=\"#test_root\">test_root</a>(<a class=\"id\" href=\"#group\">group</a>, 5) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#test_root\">test_root</a>(<a class=\"id\" href=\"#group\">group</a>, 3));", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ext4_bg_has_super - number of blocks used by the superblock in group</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sb: superblock for filesystem</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@group: group number to check</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return the number of blocks used by the superblock (primary or backup)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in this group.  Currently this will be only 0 or 1.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_RO_COMPAT_FEATURE\">EXT4_HAS_RO_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER\">EXT4_FEATURE_RO_COMPAT_SPARSE_SUPER</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#ext4_group_sparse\">ext4_group_sparse</a>(<a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#ext4_bg_num_gdb_meta\">ext4_bg_num_gdb_meta</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#metagroup\">metagroup</a> = <a class=\"id\" href=\"#group\">group</a> / <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#metagroup\">metagroup</a> * <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#first\">first</a> + <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>) - 1;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#group\">group</a> == <a class=\"id\" href=\"#first\">first</a> || <a class=\"id\" href=\"#group\">group</a> == <a class=\"id\" href=\"#first\">first</a> + 1 || <a class=\"id\" href=\"#group\">group</a> == <a class=\"id\" href=\"#last\">last</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static unsigned long <a class=\"id\" href=\"#ext4_bg_num_gdb_nometa\">ext4_bg_num_gdb_nometa</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_bg_has_super\">ext4_bg_has_super</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_META_BG\">EXT4_FEATURE_INCOMPAT_META_BG</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_meta_bg\">s_first_meta_bg</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_gdb_count\">s_gdb_count</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ext4_bg_num_gdb - number of blocks used by the group table in group</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@sb: superblock for filesystem</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@group: group number to check</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return the number of blocks used by the group descriptor table</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>(primary or backup) in this group.  In the future there may be a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>different number of descriptor blocks in each group.</span>", 
"<span class=\"comment\"> */</span>", 
"unsigned long <a class=\"id\" href=\"#ext4_bg_num_gdb\">ext4_bg_num_gdb</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#ext4_group_t\">ext4_group_t</a> <a class=\"id\" href=\"#group\">group</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_first_meta_bg\">s_first_meta_bg</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#metagroup\">metagroup</a> = <a class=\"id\" href=\"#group\">group</a> / <a class=\"id\" href=\"#EXT4_DESC_PER_BLOCK\">EXT4_DESC_PER_BLOCK</a>(<a class=\"id\" href=\"#sb\">sb</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_HAS_INCOMPAT_FEATURE\">EXT4_HAS_INCOMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#EXT4_FEATURE_INCOMPAT_META_BG\">EXT4_FEATURE_INCOMPAT_META_BG</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#metagroup\">metagroup</a> &lt; <a class=\"id\" href=\"#first_meta_bg\">first_meta_bg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_bg_num_gdb_nometa\">ext4_bg_num_gdb_nometa</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#group\">group</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ext4_bg_num_gdb_meta\">ext4_bg_num_gdb_meta</a>(<a class=\"id\" href=\"#sb\">sb</a>,<a class=\"id\" href=\"#group\">group</a>);", 
"", 
"}", 
"", 
];
xr_frag_insert('l/40/4fb9bd27164261515469c1fb23ae86755e10d7.xr', __xr_tmp);
