var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__NET_REGULATORY_H\">__NET_REGULATORY_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__NET_REGULATORY_H\">__NET_REGULATORY_H</a>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * regulatory support structures</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright 2008-2009<span class=\"ts\"/>Luis R. Rodriguez &lt;lrodriguez@atheros.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> * it under the terms of the GNU General Public License version 2 as</span>", 
"<span class=\"comment\"> * published by the Free Software Foundation.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * enum environment_cap - Environment parsed from country IE</span>", 
"<span class=\"comment\"> * @ENVIRON_ANY: indicates country IE applies to both indoor and</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>outdoor operation.</span>", 
"<span class=\"comment\"> * @ENVIRON_INDOOR: indicates country IE applies only to indoor operation</span>", 
"<span class=\"comment\"> * @ENVIRON_OUTDOOR: indicates country IE applies only to outdoor operation</span>", 
"<span class=\"comment\"> */</span>", 
"enum <a class=\"id\" href=\"#environment_cap\">environment_cap</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENVIRON_ANY\">ENVIRON_ANY</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENVIRON_INDOOR\">ENVIRON_INDOOR</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ENVIRON_OUTDOOR\">ENVIRON_OUTDOOR</a>,", 
"};", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct regulatory_request - used to keep track of regulatory requests</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @wiphy_idx: this is set if this request's initiator is</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>%REGDOM_SET_BY_COUNTRY_IE or %REGDOM_SET_BY_DRIVER. This</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>can be used by the wireless core to deal with conflicts</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>and potentially inform users of which devices specifically</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>cased the conflicts.</span>", 
"<span class=\"comment\"> * @initiator: indicates who sent this request, could be any of</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>of those set in nl80211_reg_initiator (%NL80211_REGDOM_SET_BY_*)</span>", 
"<span class=\"comment\"> * @alpha2: the ISO / IEC 3166 alpha2 country code of the requested</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>regulatory domain. We have a few special codes:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>00 - World regulatory domain</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>99 - built by driver but a specific alpha2 cannot be determined</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>98 - result of an intersection between two regulatory domains</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>97 - regulatory domain has not yet been configured</span>", 
"<span class=\"comment\"> * @intersect: indicates whether the wireless core should intersect</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>the requested regulatory domain with the presently set regulatory</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>domain.</span>", 
"<span class=\"comment\"> * @country_ie_checksum: checksum of the last processed and accepted</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>country IE</span>", 
"<span class=\"comment\"> * @country_ie_env: lets us know if the AP is telling us we are outdoor,</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>indoor, or if it doesn't matter</span>", 
"<span class=\"comment\"> * @list: used to insert into the reg_requests_list linked list</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#regulatory_request\">regulatory_request</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#wiphy_idx\">wiphy_idx</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#nl80211_reg_initiator\">nl80211_reg_initiator</a> <a class=\"id\" href=\"#initiator\">initiator</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#alpha2\">alpha2</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#intersect\">intersect</a>;", 
"<span class=\"ts\"/>enum <a class=\"id\" href=\"#environment_cap\">environment_cap</a> <a class=\"id\" href=\"#country_ie_env\">country_ie_env</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ieee80211_freq_range\">ieee80211_freq_range</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#start_freq_khz\">start_freq_khz</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#end_freq_khz\">end_freq_khz</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#max_bandwidth_khz\">max_bandwidth_khz</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ieee80211_power_rule\">ieee80211_power_rule</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#max_antenna_gain\">max_antenna_gain</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#max_eirp\">max_eirp</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ieee80211_reg_rule\">ieee80211_reg_rule</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ieee80211_freq_range\">ieee80211_freq_range</a> <a class=\"id\" href=\"#freq_range\">freq_range</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ieee80211_power_rule\">ieee80211_power_rule</a> <a class=\"id\" href=\"#power_rule\">power_rule</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ieee80211_regdomain\">ieee80211_regdomain</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#n_reg_rules\">n_reg_rules</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#alpha2\">alpha2</a>[2];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ieee80211_reg_rule\">ieee80211_reg_rule</a> <a class=\"id\" href=\"#reg_rules\">reg_rules</a>[];", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MHZ_TO_KHZ\">MHZ_TO_KHZ</a>(<a class=\"id\" href=\"#freq\">freq</a>) ((<a class=\"id\" href=\"#freq\">freq</a>) * 1000)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#KHZ_TO_MHZ\">KHZ_TO_MHZ</a>(<a class=\"id\" href=\"#freq\">freq</a>) ((<a class=\"id\" href=\"#freq\">freq</a>) / 1000)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBI_TO_MBI\">DBI_TO_MBI</a>(<a class=\"id\" href=\"#gain\">gain</a>) ((<a class=\"id\" href=\"#gain\">gain</a>) * 100)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MBI_TO_DBI\">MBI_TO_DBI</a>(<a class=\"id\" href=\"#gain\">gain</a>) ((<a class=\"id\" href=\"#gain\">gain</a>) / 100)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DBM_TO_MBM\">DBM_TO_MBM</a>(<a class=\"id\" href=\"#gain\">gain</a>) ((<a class=\"id\" href=\"#gain\">gain</a>) * 100)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MBM_TO_DBM\">MBM_TO_DBM</a>(<a class=\"id\" href=\"#gain\">gain</a>) ((<a class=\"id\" href=\"#gain\">gain</a>) / 100)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#REG_RULE\">REG_RULE</a>(<a class=\"id\" href=\"#start\">start</a>, <a class=\"id\" href=\"#end\">end</a>, <a class=\"id\" href=\"#bw\">bw</a>, <a class=\"id\" href=\"#gain\">gain</a>, <a class=\"id\" href=\"#eirp\">eirp</a>, <a class=\"id\" href=\"#reg_flags\">reg_flags</a>) \\", 
"{<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freq_range\">freq_range</a>.<a class=\"id\" href=\"#start_freq_khz\">start_freq_khz</a> = <a class=\"id\" href=\"#MHZ_TO_KHZ\">MHZ_TO_KHZ</a>(<a class=\"id\" href=\"#start\">start</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freq_range\">freq_range</a>.<a class=\"id\" href=\"#end_freq_khz\">end_freq_khz</a> = <a class=\"id\" href=\"#MHZ_TO_KHZ\">MHZ_TO_KHZ</a>(<a class=\"id\" href=\"#end\">end</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#freq_range\">freq_range</a>.<a class=\"id\" href=\"#max_bandwidth_khz\">max_bandwidth_khz</a> = <a class=\"id\" href=\"#MHZ_TO_KHZ\">MHZ_TO_KHZ</a>(<a class=\"id\" href=\"#bw\">bw</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#power_rule\">power_rule</a>.<a class=\"id\" href=\"#max_antenna_gain\">max_antenna_gain</a> = <a class=\"id\" href=\"#DBI_TO_MBI\">DBI_TO_MBI</a>(<a class=\"id\" href=\"#gain\">gain</a>),\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#power_rule\">power_rule</a>.<a class=\"id\" href=\"#max_eirp\">max_eirp</a> = <a class=\"id\" href=\"#DBM_TO_MBM\">DBM_TO_MBM</a>(<a class=\"id\" href=\"#eirp\">eirp</a>),<span class=\"ts\"/>\\", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#reg_flags\">reg_flags</a>,<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
];
xr_frag_insert('l/40/a82682e7afc0f51db48efa2f1be794626b6fc2.xr', __xr_tmp);
