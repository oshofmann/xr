var __xr_tmp = [
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: utmutex - local mutex support</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_UTILITIES\">ACPI_UTILITIES</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"utmutex\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ut_create_mutex\">acpi_ut_create_mutex</a>(<a class=\"id\" href=\"#acpi_mutex_handle\">acpi_mutex_handle</a> <a class=\"id\" href=\"#mutex_id\">mutex_id</a>);", 
"", 
"static void <a class=\"id\" href=\"#acpi_ut_delete_mutex\">acpi_ut_delete_mutex</a>(<a class=\"id\" href=\"#acpi_mutex_handle\">acpi_mutex_handle</a> <a class=\"id\" href=\"#mutex_id\">mutex_id</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_mutex_initialize</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create the system mutex objects. This includes mutexes,</span>", 
"<span class=\"comment\"> *              spin locks, and reader/writer locks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ut_mutex_initialize\">acpi_ut_mutex_initialize</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ut_mutex_initialize\">ut_mutex_initialize</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create each of the predefined mutex objects */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ACPI_NUM_MUTEX\">ACPI_NUM_MUTEX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_create_mutex\">acpi_ut_create_mutex</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create the spinlocks for use at interrupt level */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(<a class=\"id\" href=\"#acpi_gbl_gpe_lock\">acpi_gbl_gpe_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_init\">spin_lock_init</a>(<a class=\"id\" href=\"#acpi_gbl_hardware_lock\">acpi_gbl_hardware_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Create the reader/writer lock for namespace access */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ut_create_rw_lock\">acpi_ut_create_rw_lock</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_namespace_rw_lock\">acpi_gbl_namespace_rw_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_mutex_terminate</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      None.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Delete all of the system mutex objects. This includes mutexes,</span>", 
"<span class=\"comment\"> *              spin locks, and reader/writer locks.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"void <a class=\"id\" href=\"#acpi_ut_mutex_terminate\">acpi_ut_mutex_terminate</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ut_mutex_terminate\">ut_mutex_terminate</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete each predefined mutex object */</span>", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ACPI_NUM_MUTEX\">ACPI_NUM_MUTEX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_delete_mutex\">acpi_ut_delete_mutex</a>(<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete the spinlocks */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_delete_lock\">acpi_os_delete_lock</a>(<a class=\"id\" href=\"#acpi_gbl_gpe_lock\">acpi_gbl_gpe_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_delete_lock\">acpi_os_delete_lock</a>(<a class=\"id\" href=\"#acpi_gbl_hardware_lock\">acpi_gbl_hardware_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Delete the reader/writer lock */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_delete_rw_lock\">acpi_ut_delete_rw_lock</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_namespace_rw_lock\">acpi_gbl_namespace_rw_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_VOID\">return_VOID</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_create_mutex</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  mutex_iD        - ID of the mutex to be created</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Create a mutex object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ut_create_mutex\">acpi_ut_create_mutex</a>(<a class=\"id\" href=\"#acpi_mutex_handle\">acpi_mutex_handle</a> <a class=\"id\" href=\"#mutex_id\">mutex_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_U32\">ACPI_FUNCTION_TRACE_U32</a>(<a class=\"id\" href=\"#ut_create_mutex\">ut_create_mutex</a>, <a class=\"id\" href=\"#mutex_id\">mutex_id</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#mutex\">mutex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_os_create_mutex\">acpi_os_create_mutex</a>(&amp;<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_MUTEX_NOT_ACQUIRED\">ACPI_MUTEX_NOT_ACQUIRED</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#use_count\">use_count</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_delete_mutex</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  mutex_iD        - ID of the mutex to be deleted</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Delete a mutex object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static void <a class=\"id\" href=\"#acpi_ut_delete_mutex\">acpi_ut_delete_mutex</a>(<a class=\"id\" href=\"#acpi_mutex_handle\">acpi_mutex_handle</a> <a class=\"id\" href=\"#mutex_id\">mutex_id</a>)", 
"{", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_U32\">ACPI_FUNCTION_TRACE_U32</a>(<a class=\"id\" href=\"#ut_delete_mutex\">ut_delete_mutex</a>, <a class=\"id\" href=\"#mutex_id\">mutex_id</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_delete_mutex\">acpi_os_delete_mutex</a>(<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#mutex\">mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#mutex\">mutex</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> = <a class=\"id\" href=\"#ACPI_MUTEX_NOT_ACQUIRED\">ACPI_MUTEX_NOT_ACQUIRED</a>;", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_acquire_mutex</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  mutex_iD        - ID of the mutex to be acquired</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Acquire a mutex object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ut_acquire_mutex\">acpi_ut_acquire_mutex</a>(<a class=\"id\" href=\"#acpi_mutex_handle\">acpi_mutex_handle</a> <a class=\"id\" href=\"#mutex_id\">mutex_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_thread_id\">acpi_thread_id</a> <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ut_acquire_mutex\">ut_acquire_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_id\">mutex_id</a> &gt; <a class=\"id\" href=\"#ACPI_MAX_MUTEX\">ACPI_MAX_MUTEX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#this_thread_id\">this_thread_id</a> = <a class=\"id\" href=\"#acpi_os_get_thread_id\">acpi_os_get_thread_id</a>();", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_MUTEX_DEBUG\">ACPI_MUTEX_DEBUG</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mutex debug code, for internal debugging only.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Deadlock prevention.  Check if this thread owns any mutexes of value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * greater than or equal to this one.  If so, the thread has violated</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the mutex ordering rule.  This indicates a coding error somewhere in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the ACPI subsystem code.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#mutex_id\">mutex_id</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ACPI_NUM_MUTEX\">ACPI_NUM_MUTEX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> == <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#mutex_id\">mutex_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Mutex [%s] already acquired by this thread [%p]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#mutex_id\">mutex_id</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_ALREADY_ACQUIRED\">AE_ALREADY_ACQUIRED</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Invalid acquire order: Thread %p owns [%s], wants [%s]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#i\">i</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#mutex_id\">mutex_id</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_ACQUIRE_DEADLOCK\">AE_ACQUIRE_DEADLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Thread %p attempting to acquire Mutex [%s]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#mutex_id\">mutex_id</a>)));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_os_acquire_mutex\">acpi_os_acquire_mutex</a>(<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#mutex\">mutex</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#ACPI_WAIT_FOREVER\">ACPI_WAIT_FOREVER</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_SUCCESS\">ACPI_SUCCESS</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"Thread %p acquired Mutex [%s]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#mutex_id\">mutex_id</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#use_count\">use_count</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> = <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Thread %p could not acquire Mutex [0x%X]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>), <a class=\"id\" href=\"#mutex_id\">mutex_id</a>));", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ut_release_mutex</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  mutex_iD        - ID of the mutex to be released</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Release a mutex object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#acpi_ut_release_mutex\">acpi_ut_release_mutex</a>(<a class=\"id\" href=\"#acpi_mutex_handle\">acpi_mutex_handle</a> <a class=\"id\" href=\"#mutex_id\">mutex_id</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_NAME\">ACPI_FUNCTION_NAME</a>(<a class=\"id\" href=\"#ut_release_mutex\">ut_release_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_MUTEX\">ACPI_DB_MUTEX</a>, \"Thread %p releasing Mutex [%s]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ACPI_CAST_PTR\">ACPI_CAST_PTR</a>(void, <a class=\"id\" href=\"#acpi_os_get_thread_id\">acpi_os_get_thread_id</a>()),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#mutex_id\">mutex_id</a>)));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mutex_id\">mutex_id</a> &gt; <a class=\"id\" href=\"#ACPI_MAX_MUTEX\">ACPI_MAX_MUTEX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_BAD_PARAMETER\">AE_BAD_PARAMETER</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Mutex must be acquired in order to release it!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> == <a class=\"id\" href=\"#ACPI_MUTEX_NOT_ACQUIRED\">ACPI_MUTEX_NOT_ACQUIRED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Mutex [0x%X] is not acquired, cannot release\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#mutex_id\">mutex_id</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_NOT_ACQUIRED\">AE_NOT_ACQUIRED</a>);", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#ACPI_MUTEX_DEBUG\">ACPI_MUTEX_DEBUG</a>", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Mutex debug code, for internal debugging only.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Deadlock prevention.  Check if this thread owns any mutexes of value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * greater than this one.  If so, the thread has violated the mutex</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * ordering rule.  This indicates a coding error somewhere in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the ACPI subsystem code.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#mutex_id\">mutex_id</a>; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ACPI_NUM_MUTEX\">ACPI_NUM_MUTEX</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> == <a class=\"id\" href=\"#this_thread_id\">this_thread_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> == <a class=\"id\" href=\"#mutex_id\">mutex_id</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Invalid release order: owns [%s], releasing [%s]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#i\">i</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_mutex_name\">acpi_ut_get_mutex_name</a>(<a class=\"id\" href=\"#mutex_id\">mutex_id</a>)));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_RELEASE_DEADLOCK\">AE_RELEASE_DEADLOCK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark unlocked FIRST */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#thread_id\">thread_id</a> = <a class=\"id\" href=\"#ACPI_MUTEX_NOT_ACQUIRED\">ACPI_MUTEX_NOT_ACQUIRED</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_os_release_mutex\">acpi_os_release_mutex</a>(<a class=\"id\" href=\"#acpi_gbl_mutex_info\">acpi_gbl_mutex_info</a>[<a class=\"id\" href=\"#mutex_id\">mutex_id</a>].<a class=\"id\" href=\"#mutex\">mutex</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
];
xr_frag_insert('l/41/e64b270a627261d9a2210b81744f9e5bf27804.xr', __xr_tmp);
