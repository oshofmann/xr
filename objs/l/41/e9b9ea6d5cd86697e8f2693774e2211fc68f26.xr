var __xr_tmp = [
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_block_list\">ext4_xattr_block_list</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"buffer=%p, buffer_size=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#buffer\">buffer</a>, (long)<a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"reading block %u\", <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d, refcount=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)), <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_xattr_check_block\">ext4_xattr_check_block</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"bad block %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_cache_insert\">ext4_xattr_cache_insert</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_list_entries\">ext4_xattr_list_entries</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#BFIRST\">BFIRST</a>(<a class=\"id\" href=\"#bh\">bh</a>), <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_ibody_list\">ext4_xattr_ibody_list</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a> = <a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_ibody_header\">ext4_xattr_ibody_header</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> <a class=\"id\" href=\"#iloc\">iloc</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_test_inode_state\">ext4_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_XATTR\">EXT4_STATE_XATTR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_get_inode_loc\">ext4_get_inode_loc</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a> = <a class=\"id\" href=\"#ext4_raw_inode\">ext4_raw_inode</a>(&amp;<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> + <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_check_names\">ext4_xattr_check_names</a>(<a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>), <a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_list_entries\">ext4_xattr_list_entries</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_list()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copy a list of attribute names into the buffer</span>", 
"<span class=\"comment\"> * provided, or compute the buffer size required.</span>", 
"<span class=\"comment\"> * Buffer is NULL to compute the size of the buffer required.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a negative error number on failure, or the number of bytes</span>", 
"<span class=\"comment\"> * used / required on success.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_list\">ext4_xattr_list</a>(struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#dentry\">dentry</a>, char *<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#buffer_size\">buffer_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i_error\">i_error</a>, <a class=\"id\" href=\"#b_error\">b_error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i_error\">i_error</a> = <a class=\"id\" href=\"#ext4_xattr_ibody_list\">ext4_xattr_ibody_list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i_error\">i_error</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b_error\">b_error</a> = 0;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#buffer\">buffer</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> += <a class=\"id\" href=\"#i_error\">i_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer_size\">buffer_size</a> -= <a class=\"id\" href=\"#i_error\">i_error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b_error\">b_error</a> = <a class=\"id\" href=\"#ext4_xattr_block_list\">ext4_xattr_block_list</a>(<a class=\"id\" href=\"#dentry\">dentry</a>, <a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buffer_size\">buffer_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#b_error\">b_error</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i_error\">i_error</a> = 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#dentry\">dentry</a>-><a class=\"id\" href=\"#d_inode\">d_inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i_error\">i_error</a> + <a class=\"id\" href=\"#b_error\">b_error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * If the EXT4_FEATURE_COMPAT_EXT_ATTR feature of this file system is</span>", 
"<span class=\"comment\"> * not set, set it.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext4_xattr_update_super_block\">ext4_xattr_update_super_block</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_HAS_COMPAT_FEATURE\">EXT4_HAS_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_EXT_ATTR\">EXT4_FEATURE_COMPAT_EXT_ATTR</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#sb\">sb</a>)-><a class=\"id\" href=\"#s_sbh\">s_sbh</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_SET_COMPAT_FEATURE\">EXT4_SET_COMPAT_FEATURE</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_FEATURE_COMPAT_EXT_ATTR\">EXT4_FEATURE_COMPAT_EXT_ATTR</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_dirty_super\">ext4_handle_dirty_super</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#sb\">sb</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Release the xattr block BH: If the reference count is &gt; 1, decrement</span>", 
"<span class=\"comment\"> * it; otherwise free the block.</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#ext4_xattr_release_block\">ext4_xattr_release_block</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_get\">mb_cache_entry_get</a>(<a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> == <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"refcount now=0; freeing\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>, 0, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_FORGET\">EXT4_FREE_BLOCKS_FORGET</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_add_cpu\">le32_add_cpu</a>(&amp;<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>, -1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SYNC\">IS_SYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_sync\">ext4_handle_sync</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_block\">dquot_free_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"refcount now=%d; releasing\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_std_error\">ext4_std_error</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/>return;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Find the available free space for EAs. This also returns the total number of</span>", 
"<span class=\"comment\"> * bytes used by EA entries.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#ext4_xattr_free_space\">ext4_xattr_free_space</a>(struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#last\">last</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#min_offs\">min_offs</a>, void *<a class=\"id\" href=\"#base\">base</a>, int *<a class=\"id\" href=\"#total\">total</a>)", 
"{", 
"<span class=\"ts\"/>for (; !<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#last\">last</a>); <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#last\">last</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#total\">total</a> += <a class=\"id\" href=\"#EXT4_XATTR_LEN\">EXT4_XATTR_LEN</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offs\">offs</a> &lt; *<a class=\"id\" href=\"#min_offs\">min_offs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return (*<a class=\"id\" href=\"#min_offs\">min_offs</a> - ((void *)<a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#base\">base</a>) - sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>));", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> {", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#name_index\">name_index</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>const void *<a class=\"id\" href=\"#value\">value</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#value_len\">value_len</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#ext4_xattr_search\">ext4_xattr_search</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#here\">here</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#not_found\">not_found</a>;", 
"};", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_set_entry\">ext4_xattr_set_entry</a>(struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> *<a class=\"id\" href=\"#i\">i</a>, struct <a class=\"id\" href=\"#ext4_xattr_search\">ext4_xattr_search</a> *<a class=\"id\" href=\"#s\">s</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#free\">free</a>, <a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#name_len\">name_len</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Compute min_offs and last. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/>for (; !<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#last\">last</a>); <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#last\">last</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offs\">offs</a> &lt; <a class=\"id\" href=\"#min_offs\">min_offs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#min_offs\">min_offs</a> - ((void *)<a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>) - sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> += <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> += <a class=\"id\" href=\"#EXT4_XATTR_LEN\">EXT4_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#free\">free</a> &lt; <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#free\">free</a> &lt; <a class=\"id\" href=\"#EXT4_XATTR_LEN\">EXT4_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a> && <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Insert the new name. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT4_XATTR_LEN\">EXT4_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#rest\">rest</a> = (void *)<a class=\"id\" href=\"#last\">last</a> - (void *)<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a> + sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>((void *)<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a> + <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>, <a class=\"id\" href=\"#rest\">rest</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> = <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name_index\">name_index</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> = <a class=\"id\" href=\"#name_len\">name_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#first_val\">first_val</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#min_offs\">min_offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#offs\">offs</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a> && <a class=\"id\" href=\"#size\">size</a> == <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The old and the new value have the same</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   size. Just replace. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#val\">val</a> + <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#EXT4_XATTR_PAD\">EXT4_XATTR_PAD</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_XATTR_PAD\">EXT4_XATTR_PAD</a>); <span class=\"comment\">/* Clear pad bytes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove the old value. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#first_val\">first_val</a> + <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#first_val\">first_val</a>, <a class=\"id\" href=\"#val\">val</a> - <a class=\"id\" href=\"#first_val\">first_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#first_val\">first_val</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_offs\">min_offs</a> += <a class=\"id\" href=\"#size\">size</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Adjust all value offsets. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#last\">last</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#o\">o</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> && <a class=\"id\" href=\"#o\">o</a> &lt; <a class=\"id\" href=\"#offs\">offs</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#o\">o</a> + <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#last\">last</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove the old name. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT4_XATTR_LEN\">EXT4_XATTR_LEN</a>(<a class=\"id\" href=\"#name_len\">name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>((void *)<a class=\"id\" href=\"#last\">last</a> - <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>, (void *)<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a> + <a class=\"id\" href=\"#size\">size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *)<a class=\"id\" href=\"#last\">last</a> - (void *)<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a> + sizeof(<a class=\"id\" href=\"#__u32\">__u32</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#last\">last</a>, 0, <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Insert the new value. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#min_offs\">min_offs</a> - <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#min_offs\">min_offs</a> - <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#val\">val</a> + <a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#EXT4_XATTR_PAD\">EXT4_XATTR_PAD</a>, 0,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_XATTR_PAD\">EXT4_XATTR_PAD</a>); <span class=\"comment\">/* Clear the pad bytes. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_search\">ext4_xattr_search</a> <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"};", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> *<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a> *<a class=\"id\" href=\"#bs\">bs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"name=%d.%s, value=%p, value_len=%ld\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a>, (long)<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The inode already has an extended attribute block. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>, \"b_count=%d, refcount=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_count\">b_count</a>)),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_xattr_check_block\">ext4_xattr_check_block</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"bad block %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find the named attribute. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#BFIRST\">BFIRST</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_find_entry\">ext4_xattr_find_entry</a>(&amp;<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#here\">here</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a> = <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_block_set\">ext4_xattr_block_set</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> *<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a> *<a class=\"id\" href=\"#bs\">bs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_search\">ext4_xattr_search</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#x\">x</a>) ((struct <a class=\"id\" href=\"#ext4_xattr_header\">ext4_xattr_header</a> *)(<a class=\"id\" href=\"#x\">x</a>))", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value\">value</a> && <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#value_len\">value_len</a> &gt; <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_get\">mb_cache_entry_get</a>(<a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a>, <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> == <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>, \"modifying in-place\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_set_entry\">ext4_xattr_set_entry</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_rehash\">ext4_xattr_rehash</a>(<a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_cache_insert\">ext4_xattr_cache_insert</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EIO\">EIO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#inserted\">inserted</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a> = (char *)<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a> - <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#jbd2_journal_release_buffer\">jbd2_journal_release_buffer</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>, \"cloning\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>), <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)+1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#offset\">offset</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Allocate a buffer where we construct the new block. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* assert(header == s-&gt;base) */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> == <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)-><a class=\"id\" href=\"#h_magic\">h_magic</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_XATTR_MAGIC\">EXT4_XATTR_MAGIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)+1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>)+1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> + <a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_set_entry\">ext4_xattr_set_entry</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EIO\">EIO</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad_block\">bad_block</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_rehash\">ext4_xattr_rehash</a>(<a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>), <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#here\">here</a>);", 
"", 
"<a class=\"id\" href=\"#inserted\">inserted</a>:", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#ext4_xattr_cache_find\">ext4_xattr_cache_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#header\">header</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>), &amp;<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_bh\">new_bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We found an identical block in the cache. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#new_bh\">new_bh</a> == <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>, \"keeping\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The old block is released after updating</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   the inode. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#dquot_alloc_block\">dquot_alloc_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup_dquot\">cleanup_dquot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_add_cpu\">le32_add_cpu</a>(&amp;<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>, \"reusing; refcount now=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup_dquot\">cleanup_dquot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a> && <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> == <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We were modifying this block in-place. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>, \"keeping this block\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_bh\">get_bh</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We need to allocate a new block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#goal\">goal</a>, <a class=\"id\" href=\"#block\">block</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#goal\">goal</a> = <a class=\"id\" href=\"#ext4_group_first_block_no\">ext4_group_first_block_no</a>(<a class=\"id\" href=\"#sb\">sb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_block_group\">i_block_group</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* non-extent files can't have physical blocks past 2^32 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#goal\">goal</a> = <a class=\"id\" href=\"#goal\">goal</a> &amp; <a class=\"id\" href=\"#EXT4_MAX_BLOCK_FILE_PHYS\">EXT4_MAX_BLOCK_FILE_PHYS</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#block\">block</a> = <a class=\"id\" href=\"#ext4_new_meta_blocks\">ext4_new_meta_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#goal\">goal</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#error\">error</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#ext4_test_inode_flag\">ext4_test_inode_flag</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_INODE_EXTENTS\">EXT4_INODE_EXTENTS</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#block\">block</a> &gt; <a class=\"id\" href=\"#EXT4_MAX_BLOCK_FILE_PHYS\">EXT4_MAX_BLOCK_FILE_PHYS</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"creating block %d\", <a class=\"id\" href=\"#block\">block</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_bh\">new_bh</a> = <a class=\"id\" href=\"#sb_getblk\">sb_getblk</a>(<a class=\"id\" href=\"#sb\">sb</a>, <a class=\"id\" href=\"#block\">block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_bh\">new_bh</a>) {", 
"<a class=\"id\" href=\"#getblk_failed\">getblk_failed</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_free_blocks\">ext4_free_blocks</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 0, <a class=\"id\" href=\"#block\">block</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_FREE_BLOCKS_METADATA\">EXT4_FREE_BLOCKS_METADATA</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lock_buffer\">lock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_journal_get_create_access\">ext4_journal_get_create_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#getblk_failed\">getblk_failed</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>, <a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_buffer_uptodate\">set_buffer_uptodate</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unlock_buffer\">unlock_buffer</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_cache_insert\">ext4_xattr_cache_insert</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_handle_dirty_metadata\">ext4_handle_dirty_metadata</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Update the inode. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> = <a class=\"id\" href=\"#new_bh\">new_bh</a> ? <a class=\"id\" href=\"#new_bh\">new_bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a> : 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Drop the previous xattr block. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a> && <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a> != <a class=\"id\" href=\"#new_bh\">new_bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_release_block\">ext4_xattr_release_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ce\">ce</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#new_bh\">new_bh</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a> && <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a> == <a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#base\">base</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<a class=\"id\" href=\"#cleanup_dquot\">cleanup_dquot</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dquot_free_block\">dquot_free_block</a>(<a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<a class=\"id\" href=\"#bad_block\">bad_block</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"bad block %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#header\">header</a>", 
"}", 
"", 
"struct <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_search\">ext4_xattr_search</a> <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_iloc\">ext4_iloc</a> <a class=\"id\" href=\"#iloc\">iloc</a>;", 
"};", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> *<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a> *<a class=\"id\" href=\"#is\">is</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_ibody_header\">ext4_xattr_ibody_header</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#raw_inode\">raw_inode</a> = <a class=\"id\" href=\"#ext4_raw_inode\">ext4_raw_inode</a>(&amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#end\">end</a> = (void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> + <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_test_inode_state\">ext4_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_XATTR\">EXT4_STATE_XATTR</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_check_names\">ext4_xattr_check_names</a>(<a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>), <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#end\">end</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find the named attribute. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_find_entry\">ext4_xattr_find_entry</a>(&amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#here\">here</a>, <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#i\">i</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#end\">end</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (void *)<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#base\">base</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#error\">error</a> != -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a> = <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_ibody_set\">ext4_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> *<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a> *<a class=\"id\" href=\"#is\">is</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_ibody_header\">ext4_xattr_ibody_header</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_search\">ext4_xattr_search</a> *<a class=\"id\" href=\"#s\">s</a> = &amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_set_entry\">ext4_xattr_set_entry</a>(<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ext4_raw_inode\">ext4_raw_inode</a>(&amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#first\">first</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_XATTR_MAGIC\">EXT4_XATTR_MAGIC</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_inode_state\">ext4_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_XATTR\">EXT4_STATE_XATTR</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_magic\">h_magic</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_state\">ext4_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_XATTR\">EXT4_STATE_XATTR</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_set_handle()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create, replace or remove an extended attribute for this inode. Buffer</span>", 
"<span class=\"comment\"> * is NULL to remove an existing extended attribute, and non-NULL to</span>", 
"<span class=\"comment\"> * either replace an existing extended attribute, or create a new extended</span>", 
"<span class=\"comment\"> * attribute. The flags XATTR_REPLACE and XATTR_CREATE</span>", 
"<span class=\"comment\"> * specify that an extended attribute must exist and must not exist</span>", 
"<span class=\"comment\"> * previous to the call, respectively.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext4_xattr_set_handle\">ext4_xattr_set_handle</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      const char *<a class=\"id\" href=\"#name\">name</a>, const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#value_len\">value_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> <a class=\"id\" href=\"#i\">i</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name_index\">name_index</a> = <a class=\"id\" href=\"#name_index\">name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#value_len\">value_len</a> = <a class=\"id\" href=\"#value_len\">value_len</a>,", 
"", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a> <a class=\"id\" href=\"#is\">is</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#s\">s</a> = { .<a class=\"id\" href=\"#not_found\">not_found</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>, },", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a> <a class=\"id\" href=\"#bs\">bs</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#s\">s</a> = { .<a class=\"id\" href=\"#not_found\">not_found</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>, },", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#no_expand\">no_expand</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#name\">name</a>) &gt; 255)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ERANGE\">ERANGE</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#no_expand\">no_expand</a> = <a class=\"id\" href=\"#ext4_test_inode_state\">ext4_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_NO_EXPAND\">EXT4_STATE_NO_EXPAND</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_inode_state\">ext4_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_NO_EXPAND\">EXT4_STATE_NO_EXPAND</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_get_inode_loc\">ext4_get_inode_loc</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_journal_get_write_access\">ext4_journal_get_write_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_test_inode_state\">ext4_test_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_NEW\">EXT4_STATE_NEW</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a> = <a class=\"id\" href=\"#ext4_raw_inode\">ext4_raw_inode</a>(&amp;<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, 0, <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_state\">ext4_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_NEW\">EXT4_STATE_NEW</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a> && <a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XATTR_REPLACE\">XATTR_REPLACE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#XATTR_CREATE\">XATTR_CREATE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_ibody_set\">ext4_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_block_set\">ext4_xattr_block_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_ibody_set\">ext4_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && !<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_block_set\">ext4_xattr_block_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> && !<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#base\">base</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_block_set\">ext4_xattr_block_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, &amp;<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_ibody_set\">ext4_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_update_super_block\">ext4_xattr_update_super_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ctime\">i_ctime</a> = <a class=\"id\" href=\"#ext4_current_time\">ext4_current_time</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#value\">value</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_state\">ext4_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_NO_EXPAND\">EXT4_STATE_NO_EXPAND</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_mark_iloc_dirty\">ext4_mark_iloc_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The bh is consumed by ext4_mark_iloc_dirty, even with</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * error != 0.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_SYNC\">IS_SYNC</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_handle_sync\">ext4_handle_sync</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#is\">is</a>.<a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bs\">bs</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#no_expand\">no_expand</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_clear_inode_state\">ext4_clear_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_NO_EXPAND\">EXT4_STATE_NO_EXPAND</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_set()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Like ext4_xattr_set_handle, but start from an inode. This extended</span>", 
"<span class=\"comment\"> * attribute modification is a filesystem transaction by itself.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int", 
"<a class=\"id\" href=\"#ext4_xattr_set\">ext4_xattr_set</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#name_index\">name_index</a>, const char *<a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/>       const void *<a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#value_len\">value_len</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#retries\">retries</a> = 0;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#handle\">handle</a> = <a class=\"id\" href=\"#ext4_journal_start\">ext4_journal_start</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_DATA_TRANS_BLOCKS\">EXT4_DATA_TRANS_BLOCKS</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#error2\">error2</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_set_handle\">ext4_xattr_set_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#name_index\">name_index</a>, <a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#value\">value</a>, <a class=\"id\" href=\"#value_len\">value_len</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error2\">error2</a> = <a class=\"id\" href=\"#ext4_journal_stop\">ext4_journal_stop</a>(<a class=\"id\" href=\"#handle\">handle</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ext4_should_retry_alloc\">ext4_should_retry_alloc</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, &amp;<a class=\"id\" href=\"#retries\">retries</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#error2\">error2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Shift the EA entries in the inode to create space for the increased</span>", 
"<span class=\"comment\"> * i_extra_isize.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext4_xattr_shift_entries\">ext4_xattr_shift_entries</a>(struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     int <a class=\"id\" href=\"#value_offs_shift\">value_offs_shift</a>, void *<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     void *<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#n\">n</a>, int <a class=\"id\" href=\"#blocksize\">blocksize</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#new_offs\">new_offs</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Adjust the value offsets of the entries */</span>", 
"<span class=\"ts\"/>for (; !<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#last\">last</a>); <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#last\">last</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> && <a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_offs\">new_offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#value_offs_shift\">value_offs_shift</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#new_offs\">new_offs</a> + <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &gt; <a class=\"id\" href=\"#blocksize\">blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#new_offs\">new_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Shift the entries by n bytes */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memmove\">memmove</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#n\">n</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Expand an inode by new_extra_isize bytes when EAs are present.</span>", 
"<span class=\"comment\"> * Returns 0 on success or negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_expand_extra_isize_ea\">ext4_expand_extra_isize_ea</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, int <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_inode\">ext4_inode</a> *<a class=\"id\" href=\"#raw_inode\">raw_inode</a>, <a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_ibody_header\">ext4_xattr_ibody_header</a> *<a class=\"id\" href=\"#header\">header</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>, *<a class=\"id\" href=\"#last\">last</a>, *<a class=\"id\" href=\"#first\">first</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a> *<a class=\"id\" href=\"#is\">is</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a> *<a class=\"id\" href=\"#bs\">bs</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>, *<a class=\"id\" href=\"#b_entry_name\">b_entry_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#min_offs\">min_offs</a>, <a class=\"id\" href=\"#free\">free</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#total_ino\">total_ino</a>, <a class=\"id\" href=\"#total_blk\">total_blk</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#base\">base</a>, *<a class=\"id\" href=\"#start\">start</a>, *<a class=\"id\" href=\"#end\">end</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#extra_isize\">extra_isize</a> = 0, <a class=\"id\" href=\"#error\">error</a> = 0, <a class=\"id\" href=\"#tried_min_extra_isize\">tried_min_extra_isize</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_es\">s_es</a>-><a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> >= <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a> = <a class=\"id\" href=\"#IHDR\">IHDR</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#raw_inode\">raw_inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check if enough free space is available in the inode to shift the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * entries ahead by new_extra_isize.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = (void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> + <a class=\"id\" href=\"#EXT4_SB\">EXT4_SB</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>)-><a class=\"id\" href=\"#s_inode_size\">s_inode_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#total_ino\">total_ino</a> = sizeof(struct <a class=\"id\" href=\"#ext4_xattr_ibody_header\">ext4_xattr_ibody_header</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#ext4_xattr_free_space\">ext4_xattr_free_space</a>(<a class=\"id\" href=\"#last\">last</a>, &amp;<a class=\"id\" href=\"#min_offs\">min_offs</a>, <a class=\"id\" href=\"#base\">base</a>, &amp;<a class=\"id\" href=\"#total_ino\">total_ino</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#free\">free</a> >= <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_shift_entries\">ext4_xattr_shift_entries</a>(<a class=\"id\" href=\"#entry\">entry</a>,<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>- <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>, (void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a> + <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *)<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#total_ino\">total_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> = <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Enough free space isn't available in the inode, check if</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * EA block can hold new_extra_isize bytes.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_xattr_check_block\">ext4_xattr_check_block</a>(<a class=\"id\" href=\"#bh\">bh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"bad block %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#base\">base</a> = <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#first\">first</a> = <a class=\"id\" href=\"#BFIRST\">BFIRST</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_data\">b_data</a> + <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_size\">b_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_offs\">min_offs</a> = <a class=\"id\" href=\"#end\">end</a> - <a class=\"id\" href=\"#base\">base</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#ext4_xattr_free_space\">ext4_xattr_free_space</a>(<a class=\"id\" href=\"#first\">first</a>, &amp;<a class=\"id\" href=\"#min_offs\">min_offs</a>, <a class=\"id\" href=\"#base\">base</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#total_blk\">total_blk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#free\">free</a> &lt; <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tried_min_extra_isize\">tried_min_extra_isize</a> && <a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tried_min_extra_isize\">tried_min_extra_isize</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a> = <a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free\">free</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#offs\">offs</a>, <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#entry_size\">entry_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#small_entry\">small_entry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_info\">ext4_xattr_info</a> <a class=\"id\" href=\"#i\">i</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#value_len\">value_len</a> = 0,", 
"<span class=\"ts\"/><span class=\"ts\"/>};", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#total_size\">total_size</a>;  <span class=\"comment\">/* EA entry size + value size */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#shift_bytes\">shift_bytes</a>; <span class=\"comment\">/* No. of bytes to shift EAs by? */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#min_total_size\">min_total_size</a> = ~0U;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a>), <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a>), <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#is\">is</a> || !<a class=\"id\" href=\"#bs\">bs</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#s\">s</a>.<a class=\"id\" href=\"#not_found\">not_found</a> = -<a class=\"id\" href=\"#ENODATA\">ENODATA</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bs\">bs</a>-><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Find the entry best suited to be pushed into EA block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>for (; !<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#last\">last</a>); <a class=\"id\" href=\"#last\">last</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#last\">last</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#total_size\">total_size</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>)) +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_XATTR_LEN\">EXT4_XATTR_LEN</a>(<a class=\"id\" href=\"#last\">last</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#total_size\">total_size</a> <= <a class=\"id\" href=\"#free\">free</a> && <a class=\"id\" href=\"#total_size\">total_size</a> &lt; <a class=\"id\" href=\"#min_total_size\">min_total_size</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#total_size\">total_size</a> &lt; <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#small_entry\">small_entry</a> = <a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#last\">last</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min_total_size\">min_total_size</a> = <a class=\"id\" href=\"#total_size\">total_size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a> == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#small_entry\">small_entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#small_entry\">small_entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tried_min_extra_isize\">tried_min_extra_isize</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tried_min_extra_isize\">tried_min_extra_isize</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a> = <a class=\"id\" href=\"#s_min_extra_isize\">s_min_extra_isize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offs\">offs</a> = <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry_size\">entry_size</a> = <a class=\"id\" href=\"#EXT4_XATTR_LEN\">EXT4_XATTR_LEN</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#name_index\">name_index</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#size\">size</a>), <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b_entry_name\">b_entry_name</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> + 1, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#buffer\">buffer</a> || !<a class=\"id\" href=\"#b_entry_name\">b_entry_name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Save the entry name and the entry value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, (void *)<a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>) + <a class=\"id\" href=\"#offs\">offs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#size\">size</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#b_entry_name\">b_entry_name</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b_entry_name\">b_entry_name</a>[<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>] = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#b_entry_name\">b_entry_name</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_get_inode_loc\">ext4_get_inode_loc</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_ibody_find\">ext4_xattr_ibody_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove the chosen entry from the inode */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_ibody_set\">ext4_xattr_ibody_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#IFIRST\">IFIRST</a>(<a class=\"id\" href=\"#header\">header</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry_size\">entry_size</a> + <a class=\"id\" href=\"#EXT4_XATTR_SIZE\">EXT4_XATTR_SIZE</a>(<a class=\"id\" href=\"#size\">size</a>) >= <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift_bytes\">shift_bytes</a> = <a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift_bytes\">shift_bytes</a> = <a class=\"id\" href=\"#entry_size\">entry_size</a> + <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Adjust the offsets and shift the remaining entries ahead */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_shift_entries\">ext4_xattr_shift_entries</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#shift_bytes\">shift_bytes</a>, (void *)<a class=\"id\" href=\"#raw_inode\">raw_inode</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_GOOD_OLD_INODE_SIZE\">EXT4_GOOD_OLD_INODE_SIZE</a> + <a class=\"id\" href=\"#extra_isize\">extra_isize</a> + <a class=\"id\" href=\"#shift_bytes\">shift_bytes</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(void *)<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#total_ino\">total_ino</a> - <a class=\"id\" href=\"#entry_size\">entry_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#extra_isize\">extra_isize</a> += <a class=\"id\" href=\"#shift_bytes\">shift_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#new_extra_isize\">new_extra_isize</a> -= <a class=\"id\" href=\"#shift_bytes\">shift_bytes</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_extra_isize\">i_extra_isize</a> = <a class=\"id\" href=\"#extra_isize\">extra_isize</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#b_entry_name\">b_entry_name</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#value\">value</a> = <a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>.<a class=\"id\" href=\"#value_len\">value_len</a> = <a class=\"id\" href=\"#size\">size</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_block_find\">ext4_xattr_block_find</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Add entry which was removed from the inode into the block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#ext4_xattr_block_set\">ext4_xattr_block_set</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#b_entry_name\">b_entry_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#b_entry_name\">b_entry_name</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>return 0;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#b_entry_name\">b_entry_name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is\">is</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#is\">is</a>-><a class=\"id\" href=\"#iloc\">iloc</a>.<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#is\">is</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bs\">bs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#xattr_sem\">xattr_sem</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_delete_inode()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Free extended attribute resources associated with this inode. This</span>", 
"<span class=\"comment\"> * is called immediately before an inode is freed. We have exclusive</span>", 
"<span class=\"comment\"> * access to the inode.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#ext4_xattr_delete_inode\">ext4_xattr_delete_inode</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"block %llu read error\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_magic\">h_magic</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#EXT4_XATTR_MAGIC\">EXT4_XATTR_MAGIC</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_blocks\">h_blocks</a> != <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(1)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"bad block %llu\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cleanup\">cleanup</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_release_block\">ext4_xattr_release_block</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#i_file_acl\">i_file_acl</a> = 0;", 
"", 
"<a class=\"id\" href=\"#cleanup\">cleanup</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_put_super()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is called when a file system is unmounted.</span>", 
"<span class=\"comment\"> */</span>", 
"void", 
"<a class=\"id\" href=\"#ext4_xattr_put_super\">ext4_xattr_put_super</a>(struct <a class=\"id\" href=\"#super_block\">super_block</a> *<a class=\"id\" href=\"#sb\">sb</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_shrink\">mb_cache_shrink</a>(<a class=\"id\" href=\"#sb\">sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_cache_insert()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Create a new entry in the extended attribute cache, and insert</span>", 
"<span class=\"comment\"> * it unless such an entry is already in the cache.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0, or a negative error number on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"static void", 
"<a class=\"id\" href=\"#ext4_xattr_cache_insert\">ext4_xattr_cache_insert</a>(struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_hash\">h_hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_alloc\">mb_cache_entry_alloc</a>(<a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a>, <a class=\"id\" href=\"#GFP_NOFS\">GFP_NOFS</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ce\">ce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"out of memory\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#mb_cache_entry_insert\">mb_cache_entry_insert</a>(<a class=\"id\" href=\"#ce\">ce</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_bdev\">b_bdev</a>, <a class=\"id\" href=\"#bh\">bh</a>-><a class=\"id\" href=\"#b_blocknr\">b_blocknr</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_free\">mb_cache_entry_free</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> == -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"already in cache\");", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_bdebug\">ea_bdebug</a>(<a class=\"id\" href=\"#bh\">bh</a>, \"inserting [%x]\", (int)<a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_entry_release\">mb_cache_entry_release</a>(<a class=\"id\" href=\"#ce\">ce</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_cmp()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compare two extended attribute blocks for equality.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 if the blocks are equal, 1 if they differ, and</span>", 
"<span class=\"comment\"> * a negative error number on errors.</span>", 
"<span class=\"comment\"> */</span>", 
"static int", 
"<a class=\"id\" href=\"#ext4_xattr_cmp\">ext4_xattr_cmp</a>(struct <a class=\"id\" href=\"#ext4_xattr_header\">ext4_xattr_header</a> *<a class=\"id\" href=\"#header1\">header1</a>,", 
"<span class=\"ts\"/>       struct <a class=\"id\" href=\"#ext4_xattr_header\">ext4_xattr_header</a> *<a class=\"id\" href=\"#header2\">header2</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#entry1\">entry1</a>, *<a class=\"id\" href=\"#entry2\">entry2</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header1\">header1</a>+1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry2\">entry2</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header2\">header2</a>+1);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry1\">entry1</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry2\">entry2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name_index\">e_name_index</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> != <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_name\">e_name</a>, <a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0 || <a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>((char *)<a class=\"id\" href=\"#header1\">header1</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (char *)<a class=\"id\" href=\"#header2\">header2</a> + <a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry2\">entry2</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry1\">entry1</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry1\">entry1</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry1\">entry1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry2\">entry2</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#entry2\">entry2</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#entry2\">entry2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 1;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_cache_find()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Find an identical extended attribute block.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns a pointer to the block found, or NULL if such a block was</span>", 
"<span class=\"comment\"> * not found or an error occurred.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *", 
"<a class=\"id\" href=\"#ext4_xattr_cache_find\">ext4_xattr_cache_find</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#ext4_xattr_header\">ext4_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> **<a class=\"id\" href=\"#pce\">pce</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mb_cache_entry\">mb_cache_entry</a> *<a class=\"id\" href=\"#ce\">ce</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;  <span class=\"comment\">/* never share */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"looking for cached blocks [%x]\", (int)<a class=\"id\" href=\"#hash\">hash</a>);", 
"<a class=\"id\" href=\"#again\">again</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_find_first\">mb_cache_entry_find_first</a>(<a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#ce\">ce</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#buffer_head\">buffer_head</a> *<a class=\"id\" href=\"#bh\">bh</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#ce\">ce</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#ce\">ce</a>) == -<a class=\"id\" href=\"#EAGAIN\">EAGAIN</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#again\">again</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh\">bh</a> = <a class=\"id\" href=\"#sb_bread\">sb_bread</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>, <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bh\">bh</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"block %lu read error\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long) <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>) >=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_XATTR_REFCOUNT_MAX\">EXT4_XATTR_REFCOUNT_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ea_idebug\">ea_idebug</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"block %lu refcount %d>=%d\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (unsigned long) <a class=\"id\" href=\"#ce\">ce</a>-><a class=\"id\" href=\"#e_block\">e_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)-><a class=\"id\" href=\"#h_refcount\">h_refcount</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#EXT4_XATTR_REFCOUNT_MAX\">EXT4_XATTR_REFCOUNT_MAX</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#ext4_xattr_cmp\">ext4_xattr_cmp</a>(<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#BHDR\">BHDR</a>(<a class=\"id\" href=\"#bh\">bh</a>)) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#pce\">pce</a> = <a class=\"id\" href=\"#ce\">ce</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#bh\">bh</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#brelse\">brelse</a>(<a class=\"id\" href=\"#bh\">bh</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ce\">ce</a> = <a class=\"id\" href=\"#mb_cache_entry_find_next\">mb_cache_entry_find_next</a>(<a class=\"id\" href=\"#ce\">ce</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>, <a class=\"id\" href=\"#hash\">hash</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a> 5", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a> 16", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_hash_entry()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Compute the hash of an extended attribute.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#ext4_xattr_hash_entry\">ext4_xattr_hash_entry</a>(struct <a class=\"id\" href=\"#ext4_xattr_header\">ext4_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = 0;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name\">e_name</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_name_len\">e_name_len</a>; <a class=\"id\" href=\"#n\">n</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = (<a class=\"id\" href=\"#hash\">hash</a> << <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#hash\">hash</a> >> (8*sizeof(<a class=\"id\" href=\"#hash\">hash</a>) - <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a>)) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       *<a class=\"id\" href=\"#name\">name</a>++;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_block\">e_value_block</a> == 0 && <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__le32\">__le32</a> *<a class=\"id\" href=\"#value\">value</a> = (<a class=\"id\" href=\"#__le32\">__le32</a> *)((char *)<a class=\"id\" href=\"#header\">header</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#le16_to_cpu\">le16_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_offs\">e_value_offs</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = (<a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_value_size\">e_value_size</a>) +", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#EXT4_XATTR_ROUND\">EXT4_XATTR_ROUND</a>) >> <a class=\"id\" href=\"#EXT4_XATTR_PAD_BITS\">EXT4_XATTR_PAD_BITS</a>; <a class=\"id\" href=\"#n\">n</a>; <a class=\"id\" href=\"#n\">n</a>--) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = (<a class=\"id\" href=\"#hash\">hash</a> << <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#hash\">hash</a> >> (8*sizeof(<a class=\"id\" href=\"#hash\">hash</a>) - <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a>)) ^", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(*<a class=\"id\" href=\"#value\">value</a>++);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#NAME_HASH_SHIFT\">NAME_HASH_SHIFT</a>", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#VALUE_HASH_SHIFT\">VALUE_HASH_SHIFT</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a> 16", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * ext4_xattr_rehash()</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Re-compute the extended attribute hash value after an entry has changed.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#ext4_xattr_rehash\">ext4_xattr_rehash</a>(struct <a class=\"id\" href=\"#ext4_xattr_header\">ext4_xattr_header</a> *<a class=\"id\" href=\"#header\">header</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_xattr_entry\">ext4_xattr_entry</a> *<a class=\"id\" href=\"#here\">here</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#hash\">hash</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_hash_entry\">ext4_xattr_hash_entry</a>(<a class=\"id\" href=\"#header\">header</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#ENTRY\">ENTRY</a>(<a class=\"id\" href=\"#header\">header</a>+1);", 
"<span class=\"ts\"/>while (!<a class=\"id\" href=\"#IS_LAST_ENTRY\">IS_LAST_ENTRY</a>(<a class=\"id\" href=\"#here\">here</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Block is not shared if an entry's hash value == 0 */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash\">hash</a> = (<a class=\"id\" href=\"#hash\">hash</a> << <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a>) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#hash\">hash</a> >> (8*sizeof(<a class=\"id\" href=\"#hash\">hash</a>) - <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a>)) ^", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#here\">here</a>-><a class=\"id\" href=\"#e_hash\">e_hash</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#here\">here</a> = <a class=\"id\" href=\"#EXT4_XATTR_NEXT\">EXT4_XATTR_NEXT</a>(<a class=\"id\" href=\"#here\">here</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#header\">header</a>-><a class=\"id\" href=\"#h_hash\">h_hash</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#hash\">hash</a>);", 
"}", 
"", 
"#<a class=\"id\" href=\"#undef\">undef</a> <a class=\"id\" href=\"#BLOCK_HASH_SHIFT\">BLOCK_HASH_SHIFT</a>", 
"", 
"int <a class=\"id\" href=\"#__init\">__init</a>", 
"<a class=\"id\" href=\"#init_ext4_xattr\">init_ext4_xattr</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a> = <a class=\"id\" href=\"#mb_cache_create\">mb_cache_create</a>(\"ext4_xattr\", 6);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"void", 
"<a class=\"id\" href=\"#exit_ext4_xattr\">exit_ext4_xattr</a>(void)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb_cache_destroy\">mb_cache_destroy</a>(<a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_xattr_cache\">ext4_xattr_cache</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
];
xr_frag_insert('l/41/e9b9ea6d5cd86697e8f2693774e2211fc68f26.xr', __xr_tmp);
