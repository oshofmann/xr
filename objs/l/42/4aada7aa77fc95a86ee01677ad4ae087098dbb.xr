var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * An access vector table (avtab) is a hash table</span>", 
"<span class=\"comment\"> * of access vectors and transition types indexed</span>", 
"<span class=\"comment\"> * by a type pair and a class.  An access vector</span>", 
"<span class=\"comment\"> * table is used to represent the type enforcement</span>", 
"<span class=\"comment\"> * tables.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *  Author : Stephen Smalley, &lt;sds@epoch.ncsc.mil&gt;</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* Updated: Frank Mayer &lt;mayerf@tresys.com&gt; and Karl MacMillan &lt;kmacmillan@tresys.com&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Added conditional policy language extensions</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2003 Tresys Technology, LLC</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or modify</span>", 
"<span class=\"comment\"> *  <span class=\"ts\"/>it under the terms of the GNU General Public License as published by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the Free Software Foundation, version 2.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Updated: Yuichi Nakamura &lt;ynakam@hitachisoft.jp&gt;</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Tuned number of hash slots for avtab to reduce memory usage</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_SS_AVTAB_H_\">_SS_AVTAB_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SS_AVTAB_H_\">_SS_AVTAB_H_</a>", 
"", 
"struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#source_type\">source_type</a>;<span class=\"ts\"/><span class=\"comment\">/* source type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#target_type\">target_type</a>;<span class=\"ts\"/><span class=\"comment\">/* target type */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#target_class\">target_class</a>;<span class=\"ts\"/><span class=\"comment\">/* target object class */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_ALLOWED\">AVTAB_ALLOWED</a>     1", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_AUDITALLOW\">AVTAB_AUDITALLOW</a>  2", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_AUDITDENY\">AVTAB_AUDITDENY</a>   4", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_AV\">AVTAB_AV</a>         (<a class=\"id\" href=\"#AVTAB_ALLOWED\">AVTAB_ALLOWED</a> | <a class=\"id\" href=\"#AVTAB_AUDITALLOW\">AVTAB_AUDITALLOW</a> | <a class=\"id\" href=\"#AVTAB_AUDITDENY\">AVTAB_AUDITDENY</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_TRANSITION\">AVTAB_TRANSITION</a> 16", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_MEMBER\">AVTAB_MEMBER</a>     32", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_CHANGE\">AVTAB_CHANGE</a>     64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_TYPE\">AVTAB_TYPE</a>       (<a class=\"id\" href=\"#AVTAB_TRANSITION\">AVTAB_TRANSITION</a> | <a class=\"id\" href=\"#AVTAB_MEMBER\">AVTAB_MEMBER</a> | <a class=\"id\" href=\"#AVTAB_CHANGE\">AVTAB_CHANGE</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_ENABLED_OLD\">AVTAB_ENABLED_OLD</a>    0x80000000 <span class=\"comment\">/* reserved for used in cond_avtab */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#AVTAB_ENABLED\">AVTAB_ENABLED</a>    0x8000 <span class=\"comment\">/* reserved for used in cond_avtab */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#specified\">specified</a>;<span class=\"ts\"/><span class=\"comment\">/* what field is specified */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#data\">data</a>; <span class=\"comment\">/* access vector or type value */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> <a class=\"id\" href=\"#datum\">datum</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#next\">next</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#avtab\">avtab</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> **<a class=\"id\" href=\"#htable\">htable</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nel\">nel</a>;<span class=\"ts\"/><span class=\"comment\">/* number of elements */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#nslot\">nslot</a>;      <span class=\"comment\">/* number of hash slots */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#mask\">mask</a>;       <span class=\"comment\">/* mask to compute hash func */</span>", 
"", 
"};", 
"", 
"int <a class=\"id\" href=\"#avtab_init\">avtab_init</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *);", 
"int <a class=\"id\" href=\"#avtab_alloc\">avtab_alloc</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *, <a class=\"id\" href=\"#u32\">u32</a>);", 
"struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#avtab_search\">avtab_search</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#k\">k</a>);", 
"void <a class=\"id\" href=\"#avtab_destroy\">avtab_destroy</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>);", 
"void <a class=\"id\" href=\"#avtab_hash_eval\">avtab_hash_eval</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, char *<a class=\"id\" href=\"#tag\">tag</a>);", 
"", 
"struct <a class=\"id\" href=\"#policydb\">policydb</a>;", 
"int <a class=\"id\" href=\"#avtab_read_item\">avtab_read_item</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#a\">a</a>, void *<a class=\"id\" href=\"#fp\">fp</a>, struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#pol\">pol</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    int (*<a class=\"id\" href=\"#insert\">insert</a>)(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#k\">k</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#d\">d</a>, void *<a class=\"id\" href=\"#p\">p</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/>    void *<a class=\"id\" href=\"#p\">p</a>);", 
"", 
"int <a class=\"id\" href=\"#avtab_read\">avtab_read</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#a\">a</a>, void *<a class=\"id\" href=\"#fp\">fp</a>, struct <a class=\"id\" href=\"#policydb\">policydb</a> *<a class=\"id\" href=\"#pol\">pol</a>);", 
"", 
"struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#avtab_insert_nonunique\">avtab_insert_nonunique</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#avtab_datum\">avtab_datum</a> *<a class=\"id\" href=\"#datum\">datum</a>);", 
"", 
"struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#avtab_search_node\">avtab_search_node</a>(struct <a class=\"id\" href=\"#avtab\">avtab</a> *<a class=\"id\" href=\"#h\">h</a>, struct <a class=\"id\" href=\"#avtab_key\">avtab_key</a> *<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#avtab_search_node_next\">avtab_search_node_next</a>(struct <a class=\"id\" href=\"#avtab_node\">avtab_node</a> *<a class=\"id\" href=\"#node\">node</a>, int <a class=\"id\" href=\"#specified\">specified</a>);", 
"", 
"void <a class=\"id\" href=\"#avtab_cache_init\">avtab_cache_init</a>(void);", 
"void <a class=\"id\" href=\"#avtab_cache_destroy\">avtab_cache_destroy</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_AVTAB_HASH_BITS\">MAX_AVTAB_HASH_BITS</a> 11", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_AVTAB_HASH_BUCKETS\">MAX_AVTAB_HASH_BUCKETS</a> (1 << <a class=\"id\" href=\"#MAX_AVTAB_HASH_BITS\">MAX_AVTAB_HASH_BITS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_AVTAB_HASH_MASK\">MAX_AVTAB_HASH_MASK</a> (<a class=\"id\" href=\"#MAX_AVTAB_HASH_BUCKETS\">MAX_AVTAB_HASH_BUCKETS</a>-1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_AVTAB_SIZE\">MAX_AVTAB_SIZE</a> <a class=\"id\" href=\"#MAX_AVTAB_HASH_BUCKETS\">MAX_AVTAB_HASH_BUCKETS</a>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a><span class=\"ts\"/><span class=\"comment\">/* _SS_AVTAB_H_ */</span>", 
"", 
];
xr_frag_insert('l/42/4aada7aa77fc95a86ee01677ad4ae087098dbb.xr', __xr_tmp);
