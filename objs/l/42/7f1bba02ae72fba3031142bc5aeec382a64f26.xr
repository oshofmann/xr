var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * RTC class driver for \"CMOS RTC\":  PCs, ACPI, etc</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 1996 Paul Gortmaker (drivers/char/rtc.c)</span>", 
"<span class=\"comment\"> * Copyright (C) 2006 David Brownell (convert to new framework)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> * 2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The original \"cmos clock\" chip was an MC146818 chip, now obsolete.</span>", 
"<span class=\"comment\"> * That defined the register interface now provided by all PCs, some</span>", 
"<span class=\"comment\"> * non-PC systems, and incorporated into ACPI.  Modern PC chipsets</span>", 
"<span class=\"comment\"> * integrate an MC146818 clone in their southbridge, and boards use</span>", 
"<span class=\"comment\"> * that instead of discrete clones like the DS12887 or M48T86.  There</span>", 
"<span class=\"comment\"> * are also clones that connect using the LPC bus.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * That register API is also used directly by various other drivers</span>", 
"<span class=\"comment\"> * (notably for integrated NVRAM), infrastructure (x86 has code to</span>", 
"<span class=\"comment\"> * bypass the RTC framework, directly reading the RTC during boot</span>", 
"<span class=\"comment\"> * and updating minutes/seconds for systems using NTP synch) and</span>", 
"<span class=\"comment\"> * utilities (like userspace 'hwclock', if no /dev node exists).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * So **ALL** calls to CMOS_READ and CMOS_WRITE must be done with</span>", 
"<span class=\"comment\"> * interrupts disabled, holding the global rtc_lock, to exclude those</span>", 
"<span class=\"comment\"> * other drivers and utilities on correctly configured systems.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#platform_device\">platform_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mod_devicetable\">mod_devicetable</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#log2\">log2</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* this is for \"generic access to PC-style RTC\" using CMOS_READ/CMOS_WRITE */</span>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>-<a class=\"id\" href=\"#generic\">generic</a>/<a class=\"id\" href=\"#rtc\">rtc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rtc_device\">rtc_device</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rtc\">rtc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#device\">device</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dev\">dev</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#irq\">irq</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#resource\">resource</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#iomem\">iomem</a>;", 
"", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#wake_on\">wake_on</a>)(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#wake_off\">wake_off</a>)(struct <a class=\"id\" href=\"#device\">device</a> *);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#enabled_wake\">enabled_wake</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_ctrl\">suspend_ctrl</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* newer hardware extends the original register set */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#day_alrm\">day_alrm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mon_alrm\">mon_alrm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#century\">century</a>;", 
"};", 
"", 
"<span class=\"comment\">/* both platform and pnp busses use negative numbers for invalid irqs */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#is_valid_irq\">is_valid_irq</a>(<a class=\"id\" href=\"#n\">n</a>)<span class=\"ts\"/><span class=\"ts\"/>((<a class=\"id\" href=\"#n\">n</a>) &gt; 0)", 
"", 
"static const char <a class=\"id\" href=\"#driver_name\">driver_name</a>[] = \"rtc_cmos\";", 
"", 
"<span class=\"comment\">/* The RTC_INTR register may have e.g. RTC_PF set even if RTC_PIE is clear;</span>", 
"<span class=\"comment\"> * always mask it against the irq enable bits in RTC_CONTROL.  Bit values</span>", 
"<span class=\"comment\"> * are the same: PF==PIE, AF=AIE, UF=UIE; so RTC_IRQMASK works with both.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#RTC_IRQMASK\">RTC_IRQMASK</a><span class=\"ts\"/>(<a class=\"id\" href=\"#RTC_PF\">RTC_PF</a> | <a class=\"id\" href=\"#RTC_AF\">RTC_AF</a> | <a class=\"id\" href=\"#RTC_UF\">RTC_UF</a>)", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_intr\">is_intr</a>(<a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#rtc_intr\">rtc_intr</a>)", 
"{", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rtc_intr\">rtc_intr</a> &amp; <a class=\"id\" href=\"#RTC_IRQF\">RTC_IRQF</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rtc_intr\">rtc_intr</a> &amp; <a class=\"id\" href=\"#RTC_IRQMASK\">RTC_IRQMASK</a>;", 
"}", 
"", 
"<span class=\"comment\">/*----------------------------------------------------------------*/</span>", 
"", 
"<span class=\"comment\">/* Much modern x86 hardware has HPETs (10+ MHz timers) which, because</span>", 
"<span class=\"comment\"> * many BIOS programmers don't set up \"sane mode\" IRQ routing, are mostly</span>", 
"<span class=\"comment\"> * used in a broken \"legacy replacement\" mode.  The breakage includes</span>", 
"<span class=\"comment\"> * HPET #1 hijacking the IRQ for this RTC, and being unavailable for</span>", 
"<span class=\"comment\"> * other (better) use.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * When that broken mode is in use, platform glue provides a partial</span>", 
"<span class=\"comment\"> * emulation of hardware RTC IRQ facilities using HPET #1.  We don't</span>", 
"<span class=\"comment\"> * want to use HPET for anything except those IRQs though...</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_HPET_EMULATE_RTC\">CONFIG_HPET_EMULATE_RTC</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#hpet\">hpet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#else", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_mask_rtc_irq_bit\">hpet_mask_rtc_irq_bit</a>(unsigned long <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_set_rtc_irq_bit\">hpet_set_rtc_irq_bit</a>(unsigned long <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int", 
"<a class=\"id\" href=\"#hpet_set_alarm_time\">hpet_set_alarm_time</a>(unsigned char <a class=\"id\" href=\"#hrs\">hrs</a>, unsigned char <a class=\"id\" href=\"#min\">min</a>, unsigned char <a class=\"id\" href=\"#sec\">sec</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_set_periodic_freq\">hpet_set_periodic_freq</a>(unsigned long <a class=\"id\" href=\"#freq\">freq</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_rtc_dropped_irq\">hpet_rtc_dropped_irq</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_rtc_timer_init\">hpet_rtc_timer_init</a>(void)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"extern <a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#hpet_rtc_interrupt\">hpet_rtc_interrupt</a>;", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_register_irq_handler\">hpet_register_irq_handler</a>(<a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#hpet_unregister_irq_handler\">hpet_unregister_irq_handler</a>(<a class=\"id\" href=\"#irq_handler_t\">irq_handler_t</a> <a class=\"id\" href=\"#handler\">handler</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*----------------------------------------------------------------*/</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#RTC_PORT\">RTC_PORT</a>", 
"", 
"<span class=\"comment\">/* Most newer x86 systems have two register banks, the first used</span>", 
"<span class=\"comment\"> * for RTC and NVRAM and the second only for NVRAM.  Caller must</span>", 
"<span class=\"comment\"> * own rtc_lock ... and we won't worry about access during NMI.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#can_bank2\">can_bank2</a><span class=\"ts\"/><a class=\"id\" href=\"#true\">true</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned char <a class=\"id\" href=\"#cmos_read_bank2\">cmos_read_bank2</a>(unsigned char <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#RTC_PORT\">RTC_PORT</a>(2));", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#inb\">inb</a>(<a class=\"id\" href=\"#RTC_PORT\">RTC_PORT</a>(3));", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cmos_write_bank2\">cmos_write_bank2</a>(unsigned char <a class=\"id\" href=\"#val\">val</a>, unsigned char <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#addr\">addr</a>, <a class=\"id\" href=\"#RTC_PORT\">RTC_PORT</a>(2));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb\">outb</a>(<a class=\"id\" href=\"#val\">val</a>, <a class=\"id\" href=\"#RTC_PORT\">RTC_PORT</a>(2));", 
"}", 
"", 
"#else", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#can_bank2\">can_bank2</a><span class=\"ts\"/><a class=\"id\" href=\"#false\">false</a>", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> unsigned char <a class=\"id\" href=\"#cmos_read_bank2\">cmos_read_bank2</a>(unsigned char <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#cmos_write_bank2\">cmos_write_bank2</a>(unsigned char <a class=\"id\" href=\"#val\">val</a>, unsigned char <a class=\"id\" href=\"#addr\">addr</a>)", 
"{", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*----------------------------------------------------------------*/</span>", 
"", 
"static int <a class=\"id\" href=\"#cmos_read_time\">cmos_read_time</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* REVISIT:  if the clock has a \"century\" register, use</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * that instead of the heuristic in get_rtc_time().</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * That'll make Y3K compatility (year &gt; 2070) easy!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#get_rtc_time\">get_rtc_time</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_set_time\">cmos_set_time</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#rtc_time\">rtc_time</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* REVISIT:  set the \"century\" register if available</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: this ignores the issue whereby updating the seconds</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * takes effect exactly 500ms after we write the register.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (Also queueing and other delays before we get this far.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#set_rtc_time\">set_rtc_time</a>(<a class=\"id\" href=\"#t\">t</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_read_alarm\">cmos_read_alarm</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_valid_irq\">is_valid_irq</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Basic alarms only support hour, minute, and seconds fields.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Some also support day and month, for alarms up to a year in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the future.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a> = -1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_SECONDS_ALARM\">RTC_SECONDS_ALARM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_MINUTES_ALARM\">RTC_MINUTES_ALARM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_HOURS_ALARM\">RTC_HOURS_ALARM</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#day_alrm\">day_alrm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* ignore upper bits on readback per ACPI spec */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#day_alrm\">day_alrm</a>) &amp; 0x3f;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#mon_alrm\">mon_alrm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#mon_alrm\">mon_alrm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_DM_BINARY\">RTC_DM_BINARY</a>) || <a class=\"id\" href=\"#RTC_ALWAYS_BCD\">RTC_ALWAYS_BCD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((unsigned)<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>) &lt; 0x60)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> = <a class=\"id\" href=\"#bcd2bin\">bcd2bin</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((unsigned)<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>) &lt; 0x60)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> = <a class=\"id\" href=\"#bcd2bin\">bcd2bin</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (((unsigned)<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>) &lt; 0x24)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> = <a class=\"id\" href=\"#bcd2bin\">bcd2bin</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#day_alrm\">day_alrm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (((unsigned)<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a>) <= 0x31)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a> = <a class=\"id\" href=\"#bcd2bin\">bcd2bin</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a> = -1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#mon_alrm\">mon_alrm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (((unsigned)<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>) <= 0x12)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> = <a class=\"id\" href=\"#bcd2bin\">bcd2bin</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a>)-1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> = -1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_year\">tm_year</a> = -1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#enabled\">enabled</a> = !!(<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#pending\">pending</a> = 0;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cmos_checkintr\">cmos_checkintr</a>(struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a> *<a class=\"id\" href=\"#cmos\">cmos</a>, unsigned char <a class=\"id\" href=\"#rtc_control\">rtc_control</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#rtc_intr\">rtc_intr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE after changing RTC_xIE bits we always read INTR_FLAGS;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allegedly some older rtcs need that to handle irqs properly</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_intr\">rtc_intr</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_INTR_FLAGS\">RTC_INTR_FLAGS</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_intr\">rtc_intr</a> &= (<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_IRQMASK\">RTC_IRQMASK</a>) | <a class=\"id\" href=\"#RTC_IRQF\">RTC_IRQF</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_intr\">is_intr</a>(<a class=\"id\" href=\"#rtc_intr\">rtc_intr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtc_update_irq\">rtc_update_irq</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#rtc\">rtc</a>, 1, <a class=\"id\" href=\"#rtc_intr\">rtc_intr</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cmos_irq_enable\">cmos_irq_enable</a>(struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a> *<a class=\"id\" href=\"#cmos\">cmos</a>, unsigned char <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* flush any pending IRQ status, notably for update irqs,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * before we enable new IRQs</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_checkintr\">cmos_checkintr</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#rtc_control\">rtc_control</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a> |= <a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#rtc_control\">rtc_control</a>, <a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_set_rtc_irq_bit\">hpet_set_rtc_irq_bit</a>(<a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_checkintr\">cmos_checkintr</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#rtc_control\">rtc_control</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#cmos_irq_disable\">cmos_irq_disable</a>(struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a> *<a class=\"id\" href=\"#cmos\">cmos</a>, unsigned char <a class=\"id\" href=\"#mask\">mask</a>)", 
"{", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a> &= ~<a class=\"id\" href=\"#mask\">mask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#rtc_control\">rtc_control</a>, <a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_mask_rtc_irq_bit\">hpet_mask_rtc_irq_bit</a>(<a class=\"id\" href=\"#mask\">mask</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_checkintr\">cmos_checkintr</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#rtc_control\">rtc_control</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_set_alarm\">cmos_set_alarm</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#rtc_wkalrm\">rtc_wkalrm</a> *<a class=\"id\" href=\"#t\">t</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"       unsigned char   <a class=\"id\" href=\"#mon\">mon</a>, <a class=\"id\" href=\"#mday\">mday</a>, <a class=\"id\" href=\"#hrs\">hrs</a>, <a class=\"id\" href=\"#min\">min</a>, <a class=\"id\" href=\"#sec\">sec</a>, <a class=\"id\" href=\"#rtc_control\">rtc_control</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_valid_irq\">is_valid_irq</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mon\">mon</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mon\">tm_mon</a> + 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mday\">mday</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_mday\">tm_mday</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hrs\">hrs</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#min\">min</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sec\">sec</a> = <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_DM_BINARY\">RTC_DM_BINARY</a>) || <a class=\"id\" href=\"#RTC_ALWAYS_BCD\">RTC_ALWAYS_BCD</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Writing 0xff means \"don't care\" or \"match all\".  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mon\">mon</a> = (<a class=\"id\" href=\"#mon\">mon</a> <= 12) ? <a class=\"id\" href=\"#bin2bcd\">bin2bcd</a>(<a class=\"id\" href=\"#mon\">mon</a>) : 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mday\">mday</a> = (<a class=\"id\" href=\"#mday\">mday</a> >= 1 && <a class=\"id\" href=\"#mday\">mday</a> <= 31) ? <a class=\"id\" href=\"#bin2bcd\">bin2bcd</a>(<a class=\"id\" href=\"#mday\">mday</a>) : 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hrs\">hrs</a> = (<a class=\"id\" href=\"#hrs\">hrs</a> &lt; 24) ? <a class=\"id\" href=\"#bin2bcd\">bin2bcd</a>(<a class=\"id\" href=\"#hrs\">hrs</a>) : 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#min\">min</a> = (<a class=\"id\" href=\"#min\">min</a> &lt; 60) ? <a class=\"id\" href=\"#bin2bcd\">bin2bcd</a>(<a class=\"id\" href=\"#min\">min</a>) : 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sec\">sec</a> = (<a class=\"id\" href=\"#sec\">sec</a> &lt; 60) ? <a class=\"id\" href=\"#bin2bcd\">bin2bcd</a>(<a class=\"id\" href=\"#sec\">sec</a>) : 0xff;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* next rtc irq must not be from previous alarm setting */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_disable\">cmos_irq_disable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* update alarm */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#hrs\">hrs</a>, <a class=\"id\" href=\"#RTC_HOURS_ALARM\">RTC_HOURS_ALARM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#min\">min</a>, <a class=\"id\" href=\"#RTC_MINUTES_ALARM\">RTC_MINUTES_ALARM</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#sec\">sec</a>, <a class=\"id\" href=\"#RTC_SECONDS_ALARM\">RTC_SECONDS_ALARM</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* the system may support an \"enhanced\" alarm */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#day_alrm\">day_alrm</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#mday\">mday</a>, <a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#day_alrm\">day_alrm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#mon_alrm\">mon_alrm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#mon\">mon</a>, <a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#mon_alrm\">mon_alrm</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* FIXME the HPET alarm glue currently ignores day_alrm</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and mon_alrm ...</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_set_alarm_time\">hpet_set_alarm_time</a>(<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_hour\">tm_hour</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_min\">tm_min</a>, <a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#time\">time</a>.<a class=\"id\" href=\"#tm_sec\">tm_sec</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#t\">t</a>-><a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_enable\">cmos_irq_enable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_irq_set_freq\">cmos_irq_set_freq</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#freq\">freq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_valid_irq\">is_valid_irq</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_power_of_2\">is_power_of_2</a>(<a class=\"id\" href=\"#freq\">freq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* 0 = no irqs; 1 = 2^15 Hz ... 15 = 2^0 Hz */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = <a class=\"id\" href=\"#ffs\">ffs</a>(<a class=\"id\" href=\"#freq\">freq</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#f\">f</a>-- &gt; 16)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#f\">f</a> = 16 - <a class=\"id\" href=\"#f\">f</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hpet_set_periodic_freq\">hpet_set_periodic_freq</a>(<a class=\"id\" href=\"#freq\">freq</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(<a class=\"id\" href=\"#RTC_REF_CLCK_32KHZ\">RTC_REF_CLCK_32KHZ</a> | <a class=\"id\" href=\"#f\">f</a>, <a class=\"id\" href=\"#RTC_FREQ_SELECT\">RTC_FREQ_SELECT</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_irq_set_state\">cmos_irq_set_state</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, int <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_valid_irq\">is_valid_irq</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_enable\">cmos_irq_enable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_disable\">cmos_irq_disable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_alarm_irq_enable\">cmos_alarm_irq_enable</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_valid_irq\">is_valid_irq</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_enable\">cmos_irq_enable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_disable\">cmos_irq_disable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_AIE\">RTC_AIE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#cmos_update_irq_enable\">cmos_update_irq_enable</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, unsigned int <a class=\"id\" href=\"#enabled\">enabled</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#is_valid_irq\">is_valid_irq</a>(<a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#irq\">irq</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#enabled\">enabled</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_enable\">cmos_irq_enable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_UIE\">RTC_UIE</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_irq_disable\">cmos_irq_disable</a>(<a class=\"id\" href=\"#cmos\">cmos</a>, <a class=\"id\" href=\"#RTC_UIE\">RTC_UIE</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_RTC_INTF_PROC\">CONFIG_RTC_INTF_PROC</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_RTC_INTF_PROC_MODULE\">CONFIG_RTC_INTF_PROC_MODULE</a>)", 
"", 
"static int <a class=\"id\" href=\"#cmos_procfs\">cmos_procfs</a>(struct <a class=\"id\" href=\"#device\">device</a> *<a class=\"id\" href=\"#dev\">dev</a>, struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#seq\">seq</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#dev\">dev</a>);", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a>, <a class=\"id\" href=\"#valid\">valid</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rtc_control\">rtc_control</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_CONTROL\">RTC_CONTROL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#valid\">valid</a> = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#RTC_VALID\">RTC_VALID</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE:  at least ICH6 reports battery status using a different</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (non-RTC) bit; and SQWE is ignored on many current systems.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#seq\">seq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"periodic_IRQ\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"update_IRQ\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"HPET_emulated\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">// \"square_wave\\t: %s\\n\"</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"BCD\\t\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"DST_enable\\t: %s\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"periodic_freq\\t: %d\\n\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"batt_status\\t: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_PIE\">RTC_PIE</a>) ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_UIE\">RTC_UIE</a>) ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#is_hpet_enabled\">is_hpet_enabled</a>() ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">// (rtc_control &amp; RTC_SQWE) ? \"yes\" : \"no\",</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_DM_BINARY\">RTC_DM_BINARY</a>) ? \"no\" : \"yes\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#rtc_control\">rtc_control</a> &amp; <a class=\"id\" href=\"#RTC_DST_EN\">RTC_DST_EN</a>) ? \"yes\" : \"no\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#rtc\">rtc</a>-><a class=\"id\" href=\"#irq_freq\">irq_freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#valid\">valid</a> &amp; <a class=\"id\" href=\"#RTC_VRT\">RTC_VRT</a>) ? \"okay\" : \"dead\");", 
"}", 
"", 
"#else", 
"#<a class=\"id\" href=\"#define\">define</a><span class=\"ts\"/><a class=\"id\" href=\"#cmos_procfs\">cmos_procfs</a><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static const struct <a class=\"id\" href=\"#rtc_class_ops\">rtc_class_ops</a> <a class=\"id\" href=\"#cmos_rtc_ops\">cmos_rtc_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_time\">read_time</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_read_time\">cmos_read_time</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_time\">set_time</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_set_time\">cmos_set_time</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read_alarm\">read_alarm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_read_alarm\">cmos_read_alarm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#set_alarm\">set_alarm</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_set_alarm\">cmos_set_alarm</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#proc\">proc</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_procfs\">cmos_procfs</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq_set_freq\">irq_set_freq</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_irq_set_freq\">cmos_irq_set_freq</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#irq_set_state\">irq_set_state</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_irq_set_state\">cmos_irq_set_state</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#alarm_irq_enable\">alarm_irq_enable</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_alarm_irq_enable\">cmos_alarm_irq_enable</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#update_irq_enable\">update_irq_enable</a><span class=\"ts\"/>= <a class=\"id\" href=\"#cmos_update_irq_enable\">cmos_update_irq_enable</a>,", 
"};", 
"", 
"<span class=\"comment\">/*----------------------------------------------------------------*/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * All these chips have at least 64 bytes of address space, shared by</span>", 
"<span class=\"comment\"> * RTC registers and NVRAM.  Most of those bytes of NVRAM are used</span>", 
"<span class=\"comment\"> * by boot firmware.  Modern chips have 128 or 256 bytes.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NVRAM_OFFSET\">NVRAM_OFFSET</a><span class=\"ts\"/>(<a class=\"id\" href=\"#RTC_REG_D\">RTC_REG_D</a> + 1)", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#cmos_nvram_read\">cmos_nvram_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#off\">off</a> >= <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#off\">off</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#off\">off</a> + <a class=\"id\" href=\"#count\">count</a>) &gt; <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#off\">off</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> += <a class=\"id\" href=\"#NVRAM_OFFSET\">NVRAM_OFFSET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#retval\">retval</a> = 0; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#count\">count</a>--, <a class=\"id\" href=\"#off\">off</a>++, <a class=\"id\" href=\"#retval\">retval</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a> &lt; 128)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a>++ = <a class=\"id\" href=\"#CMOS_READ\">CMOS_READ</a>(<a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#can_bank2\">can_bank2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#buf\">buf</a>++ = <a class=\"id\" href=\"#cmos_read_bank2\">cmos_read_bank2</a>(<a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#cmos_nvram_write\">cmos_nvram_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, struct <a class=\"id\" href=\"#kobject\">kobject</a> *<a class=\"id\" href=\"#kobj\">kobj</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#off\">off</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#cmos_rtc\">cmos_rtc</a><span class=\"ts\"/>*<a class=\"id\" href=\"#cmos\">cmos</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cmos\">cmos</a> = <a class=\"id\" href=\"#dev_get_drvdata\">dev_get_drvdata</a>(<a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#kobj\">kobj</a>, struct <a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#kobj\">kobj</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#off\">off</a> >= <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFBIG\">EFBIG</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#off\">off</a> &lt; 0))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#off\">off</a> + <a class=\"id\" href=\"#count\">count</a>) &gt; <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#attr\">attr</a>-><a class=\"id\" href=\"#size\">size</a> - <a class=\"id\" href=\"#off\">off</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE:  on at least PCs and Ataris, the boot firmware uses a</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * checksum on part of the NVRAM data.  That's currently ignored</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * here.  If userspace is smart enough to know what fields of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NVRAM to update, updating checksums is also part of its job.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> += <a class=\"id\" href=\"#NVRAM_OFFSET\">NVRAM_OFFSET</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#retval\">retval</a> = 0; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#count\">count</a>--, <a class=\"id\" href=\"#off\">off</a>++, <a class=\"id\" href=\"#retval\">retval</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* don't trash RTC registers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#off\">off</a> == <a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#day_alrm\">day_alrm</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>|| <a class=\"id\" href=\"#off\">off</a> == <a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#mon_alrm\">mon_alrm</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>|| <a class=\"id\" href=\"#off\">off</a> == <a class=\"id\" href=\"#cmos\">cmos</a>-><a class=\"id\" href=\"#century\">century</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#off\">off</a> &lt; 128)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#CMOS_WRITE\">CMOS_WRITE</a>(*<a class=\"id\" href=\"#buf\">buf</a>++, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#can_bank2\">can_bank2</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cmos_write_bank2\">cmos_write_bank2</a>(*<a class=\"id\" href=\"#buf\">buf</a>++, <a class=\"id\" href=\"#off\">off</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#rtc_lock\">rtc_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#bin_attribute\">bin_attribute</a> <a class=\"id\" href=\"#nvram\">nvram</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#attr\">attr</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a><span class=\"ts\"/>= \"nvram\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#mode\">mode</a><span class=\"ts\"/>= <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a> | <a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>,", 
];
xr_frag_insert('l/42/7f1bba02ae72fba3031142bc5aeec382a64f26.xr', __xr_tmp);
