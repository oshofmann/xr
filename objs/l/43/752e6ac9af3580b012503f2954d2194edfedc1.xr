var __xr_tmp = [
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__LINUX_PREEMPT_H\">__LINUX_PREEMPT_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__LINUX_PREEMPT_H\">__LINUX_PREEMPT_H</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * include/linux/preempt.h - macros for accessing and manipulating</span>", 
"<span class=\"comment\"> * preempt_count (used for kernel preemption, interrupt count, etc.)</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#thread_info\">thread_info</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#linkage\">linkage</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_DEBUG_PREEMPT\">CONFIG_DEBUG_PREEMPT</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_PREEMPT_TRACER\">CONFIG_PREEMPT_TRACER</a>)", 
"  extern void <a class=\"id\" href=\"#add_preempt_count\">add_preempt_count</a>(int <a class=\"id\" href=\"#val\">val</a>);", 
"  extern void <a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(int <a class=\"id\" href=\"#val\">val</a>);", 
"#else", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#add_preempt_count\">add_preempt_count</a>(<a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/>do { <a class=\"id\" href=\"#preempt_count\">preempt_count</a>() += (<a class=\"id\" href=\"#val\">val</a>); } while (0)", 
"# <a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(<a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/>do { <a class=\"id\" href=\"#preempt_count\">preempt_count</a>() -= (<a class=\"id\" href=\"#val\">val</a>); } while (0)", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#inc_preempt_count\">inc_preempt_count</a>() <a class=\"id\" href=\"#add_preempt_count\">add_preempt_count</a>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dec_preempt_count\">dec_preempt_count</a>() <a class=\"id\" href=\"#sub_preempt_count\">sub_preempt_count</a>(1)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_count\">preempt_count</a>()<span class=\"ts\"/>(<a class=\"id\" href=\"#current_thread_info\">current_thread_info</a>()-><a class=\"id\" href=\"#preempt_count\">preempt_count</a>)", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PREEMPT\">CONFIG_PREEMPT</a>", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> void <a class=\"id\" href=\"#preempt_schedule\">preempt_schedule</a>(void);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_disable\">preempt_disable</a>() \\", 
"do { \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_preempt_count\">inc_preempt_count</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>(); \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable_no_resched\">preempt_enable_no_resched</a>() \\", 
"do { \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dec_preempt_count\">dec_preempt_count</a>(); \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_check_resched\">preempt_check_resched</a>() \\", 
"do { \\", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#test_thread_flag\">test_thread_flag</a>(<a class=\"id\" href=\"#TIF_NEED_RESCHED\">TIF_NEED_RESCHED</a>))) \\", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#preempt_schedule\">preempt_schedule</a>(); \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable\">preempt_enable</a>() \\", 
"do { \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_enable_no_resched\">preempt_enable_no_resched</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#preempt_check_resched\">preempt_check_resched</a>(); \\", 
"} while (0)", 
"", 
"<span class=\"comment\">/* For debugging and tracer internals only! */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#add_preempt_count_notrace\">add_preempt_count_notrace</a>(<a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do { <a class=\"id\" href=\"#preempt_count\">preempt_count</a>() += (<a class=\"id\" href=\"#val\">val</a>); } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#sub_preempt_count_notrace\">sub_preempt_count_notrace</a>(<a class=\"id\" href=\"#val\">val</a>)<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\\", 
"<span class=\"ts\"/>do { <a class=\"id\" href=\"#preempt_count\">preempt_count</a>() -= (<a class=\"id\" href=\"#val\">val</a>); } while (0)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#inc_preempt_count_notrace\">inc_preempt_count_notrace</a>() <a class=\"id\" href=\"#add_preempt_count_notrace\">add_preempt_count_notrace</a>(1)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#dec_preempt_count_notrace\">dec_preempt_count_notrace</a>() <a class=\"id\" href=\"#sub_preempt_count_notrace\">sub_preempt_count_notrace</a>(1)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_disable_notrace\">preempt_disable_notrace</a>() \\", 
"do { \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_preempt_count_notrace\">inc_preempt_count_notrace</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>(); \\", 
"} while (0)", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable_no_resched_notrace\">preempt_enable_no_resched_notrace</a>() \\", 
"do { \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#barrier\">barrier</a>(); \\", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dec_preempt_count_notrace\">dec_preempt_count_notrace</a>(); \\", 
"} while (0)", 
"", 
"<span class=\"comment\">/* preempt_check_resched is OK to trace */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#preempt_enable_notrace\">preempt_enable_notrace</a>() \\", 
"do { \\", 
];
xr_frag_insert('l/43/752e6ac9af3580b012503f2954d2194edfedc1.xr', __xr_tmp);
