var __xr_tmp = [
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Run the watchdog first to eliminate unstable clock sources</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_watchdog_kthread\">clocksource_watchdog_kthread</a>(<a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_select\">clocksource_select</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#fs_initcall\">fs_initcall</a>(<a class=\"id\" href=\"#clocksource_done_booting\">clocksource_done_booting</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Enqueue the clocksource sorted by rating</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#clocksource_enqueue\">clocksource_enqueue</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#entry\">entry</a> = &amp;<a class=\"id\" href=\"#clocksource_list\">clocksource_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#tmp\">tmp</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#clocksource_list\">clocksource_list</a>, <a class=\"id\" href=\"#list\">list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Keep track of the place, where to insert */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#rating\">rating</a> >= <a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#rating\">rating</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = &amp;<a class=\"id\" href=\"#tmp\">tmp</a>-><a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Maximum time we expect to go between ticks. This includes idle</span>", 
"<span class=\"comment\"> * tickless time. It provides the trade off between selecting a</span>", 
"<span class=\"comment\"> * mult/shift pair that is very precise but can only handle a short</span>", 
"<span class=\"comment\"> * period of time, vs. a mult/shift pair that can handle long periods</span>", 
"<span class=\"comment\"> * of time but isn't as precise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This is a subsystem constant, and actual hardware limitations</span>", 
"<span class=\"comment\"> * may override it (ie: clocksources that wrap every 3 seconds).</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_UPDATE_LENGTH\">MAX_UPDATE_LENGTH</a> 5 <span class=\"comment\">/* Seconds */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __clocksource_updatefreq_scale - Used update clocksource with new freq</span>", 
"<span class=\"comment\"> * @t:<span class=\"ts\"/><span class=\"ts\"/>clocksource to be registered</span>", 
"<span class=\"comment\"> * @scale:<span class=\"ts\"/>Scale factor multiplied against freq to get clocksource hz</span>", 
"<span class=\"comment\"> * @freq:<span class=\"ts\"/>clocksource frequency (cycles per second) divided by scale</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This should only be called from the clocksource-&gt;enable() method.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This *SHOULD NOT* be called directly! Please use the</span>", 
"<span class=\"comment\"> * clocksource_updatefreq_hz() or clocksource_updatefreq_khz helper functions.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__clocksource_updatefreq_scale\">__clocksource_updatefreq_scale</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scale\">scale</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#freq\">freq</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ideally we want to use  some of the limits used in</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * clocksource_max_deferment, to provide a more informed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * MAX_UPDATE_LENGTH. But for now this just gets the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * register interface working properly.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocks_calc_mult_shift\">clocks_calc_mult_shift</a>(&amp;<a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#mult\">mult</a>, &amp;<a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#shift\">shift</a>, <a class=\"id\" href=\"#freq\">freq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#NSEC_PER_SEC\">NSEC_PER_SEC</a>/<a class=\"id\" href=\"#scale\">scale</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#MAX_UPDATE_LENGTH\">MAX_UPDATE_LENGTH</a>*<a class=\"id\" href=\"#scale\">scale</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#max_idle_ns\">max_idle_ns</a> = <a class=\"id\" href=\"#clocksource_max_deferment\">clocksource_max_deferment</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__clocksource_updatefreq_scale\">__clocksource_updatefreq_scale</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __clocksource_register_scale - Used to install new clocksources</span>", 
"<span class=\"comment\"> * @t:<span class=\"ts\"/><span class=\"ts\"/>clocksource to be registered</span>", 
"<span class=\"comment\"> * @scale:<span class=\"ts\"/>Scale factor multiplied against freq to get clocksource hz</span>", 
"<span class=\"comment\"> * @freq:<span class=\"ts\"/>clocksource frequency (cycles per second) divided by scale</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns -EBUSY if registration fails, zero otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This *SHOULD NOT* be called directly! Please use the</span>", 
"<span class=\"comment\"> * clocksource_register_hz() or clocksource_register_khz helper functions.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__clocksource_register_scale\">__clocksource_register_scale</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#scale\">scale</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#freq\">freq</a>)", 
"{", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Intialize mult/shift and max_idle_ns */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clocksource_updatefreq_scale\">__clocksource_updatefreq_scale</a>(<a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#scale\">scale</a>, <a class=\"id\" href=\"#freq\">freq</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Add clocksource to the clcoksource list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_enqueue\">clocksource_enqueue</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_select\">clocksource_select</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_enqueue_watchdog\">clocksource_enqueue_watchdog</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__clocksource_register_scale\">__clocksource_register_scale</a>);", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clocksource_register - Used to install new clocksources</span>", 
"<span class=\"comment\"> * @t:<span class=\"ts\"/><span class=\"ts\"/>clocksource to be registered</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns -EBUSY if registration fails, zero otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#clocksource_register\">clocksource_register</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* calculate max idle time permitted for this clocksource */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#max_idle_ns\">max_idle_ns</a> = <a class=\"id\" href=\"#clocksource_max_deferment\">clocksource_max_deferment</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_enqueue\">clocksource_enqueue</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_select\">clocksource_select</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_enqueue_watchdog\">clocksource_enqueue_watchdog</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#clocksource_register\">clocksource_register</a>);", 
"", 
"static void <a class=\"id\" href=\"#__clocksource_change_rating\">__clocksource_change_rating</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>, int <a class=\"id\" href=\"#rating\">rating</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#rating\">rating</a> = <a class=\"id\" href=\"#rating\">rating</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_enqueue\">clocksource_enqueue</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_select\">clocksource_select</a>();", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clocksource_change_rating - Change the rating of a registered clocksource</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clocksource_change_rating\">clocksource_change_rating</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>, int <a class=\"id\" href=\"#rating\">rating</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__clocksource_change_rating\">__clocksource_change_rating</a>(<a class=\"id\" href=\"#cs\">cs</a>, <a class=\"id\" href=\"#rating\">rating</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#clocksource_change_rating\">clocksource_change_rating</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * clocksource_unregister - remove a registered clocksource</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#clocksource_unregister\">clocksource_unregister</a>(struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#cs\">cs</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_dequeue_watchdog\">clocksource_dequeue_watchdog</a>(<a class=\"id\" href=\"#cs\">cs</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#cs\">cs</a>-><a class=\"id\" href=\"#list\">list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_select\">clocksource_select</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#clocksource_unregister\">clocksource_unregister</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SYSFS\">CONFIG_SYSFS</a>", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sysfs_show_current_clocksources - sysfs interface for current clocksource</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>unused</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/>char buffer to be filled with clocksource list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Provides sysfs interface for listing current clocksource.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sysfs_show_current_clocksources\">sysfs_show_current_clocksources</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sysdev_attribute\">sysdev_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>, char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#count\">count</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>, \"%s\\n\", <a class=\"id\" href=\"#curr_clocksource\">curr_clocksource</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sysfs_override_clocksource - interface for manually overriding clocksource</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>unused</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/>name of override clocksource</span>", 
"<span class=\"comment\"> * @count:<span class=\"ts\"/>length of buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Takes input from sysfs interface for manually overriding the default</span>", 
"<span class=\"comment\"> * clocksource selection.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#sysfs_override_clocksource\">sysfs_override_clocksource</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sysdev_attribute\">sysdev_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* strings from sysfs write are not 0 terminated! */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> >= sizeof(<a class=\"id\" href=\"#override_name\">override_name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* strip of \\n: */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#count\">count</a>-1] == '\\n')", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a>--;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#count\">count</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#override_name\">override_name</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#count\">count</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#override_name\">override_name</a>[<a class=\"id\" href=\"#count\">count</a>] = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clocksource_select\">clocksource_select</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * sysfs_show_available_clocksources - sysfs interface for listing clocksource</span>", 
"<span class=\"comment\"> * @dev:<span class=\"ts\"/>unused</span>", 
"<span class=\"comment\"> * @buf:<span class=\"ts\"/>char buffer to be filled with clocksource list</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Provides sysfs interface for listing registered clocksources</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#sysfs_show_available_clocksources\">sysfs_show_available_clocksources</a>(struct <a class=\"id\" href=\"#sys_device\">sys_device</a> *<a class=\"id\" href=\"#dev\">dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#sysdev_attribute\">sysdev_attribute</a> *<a class=\"id\" href=\"#attr\">attr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char *<a class=\"id\" href=\"#buf\">buf</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#clocksource\">clocksource</a> *<a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#count\">count</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#src\">src</a>, &amp;<a class=\"id\" href=\"#clocksource_list\">clocksource_list</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Don't show non-HRES clocksource if the tick code is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * in one shot mode (highres=on or nohz=on)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tick_oneshot_mode_active\">tick_oneshot_mode_active</a>() ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#CLOCK_SOURCE_VALID_FOR_HRES\">CLOCK_SOURCE_VALID_FOR_HRES</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#max\">max</a>((<a class=\"id\" href=\"#ssize_t\">ssize_t</a>)<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#count\">count</a>, (<a class=\"id\" href=\"#ssize_t\">ssize_t</a>)0),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"%s \", <a class=\"id\" href=\"#src\">src</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#count\">count</a> += <a class=\"id\" href=\"#snprintf\">snprintf</a>(<a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#count\">count</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#max\">max</a>((<a class=\"id\" href=\"#ssize_t\">ssize_t</a>)<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a> - <a class=\"id\" href=\"#count\">count</a>, (<a class=\"id\" href=\"#ssize_t\">ssize_t</a>)0), \"\\n\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#count\">count</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Sysfs setup bits:</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#SYSDEV_ATTR\">SYSDEV_ATTR</a>(<a class=\"id\" href=\"#current_clocksource\">current_clocksource</a>, 0644, <a class=\"id\" href=\"#sysfs_show_current_clocksources\">sysfs_show_current_clocksources</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sysfs_override_clocksource\">sysfs_override_clocksource</a>);", 
"", 
"static <a class=\"id\" href=\"#SYSDEV_ATTR\">SYSDEV_ATTR</a>(<a class=\"id\" href=\"#available_clocksource\">available_clocksource</a>, 0444,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#sysfs_show_available_clocksources\">sysfs_show_available_clocksources</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"static struct <a class=\"id\" href=\"#sysdev_class\">sysdev_class</a> <a class=\"id\" href=\"#clocksource_sysclass\">clocksource_sysclass</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#name\">name</a> = \"clocksource\",", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#sys_device\">sys_device</a> <a class=\"id\" href=\"#device_clocksource\">device_clocksource</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#id\">id</a><span class=\"ts\"/>= 0,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#cls\">cls</a><span class=\"ts\"/>= &amp;<a class=\"id\" href=\"#clocksource_sysclass\">clocksource_sysclass</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#init_clocksource_sysfs\">init_clocksource_sysfs</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_class_register\">sysdev_class_register</a>(&amp;<a class=\"id\" href=\"#clocksource_sysclass\">clocksource_sysclass</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_register\">sysdev_register</a>(&amp;<a class=\"id\" href=\"#device_clocksource\">device_clocksource</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_create_file\">sysdev_create_file</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#device_clocksource\">device_clocksource</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#attr_current_clocksource\">attr_current_clocksource</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sysdev_create_file\">sysdev_create_file</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#device_clocksource\">device_clocksource</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#attr_available_clocksource\">attr_available_clocksource</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#device_initcall\">device_initcall</a>(<a class=\"id\" href=\"#init_clocksource_sysfs\">init_clocksource_sysfs</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SYSFS */</span>", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * boot_override_clocksource - boot clock override</span>", 
"<span class=\"comment\"> * @str:<span class=\"ts\"/>override name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Takes a clocksource= boot argument and uses it</span>", 
"<span class=\"comment\"> * as the clocksource override name.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#boot_override_clocksource\">boot_override_clocksource</a>(char* <a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#str\">str</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#override_name\">override_name</a>, <a class=\"id\" href=\"#str\">str</a>, sizeof(<a class=\"id\" href=\"#override_name\">override_name</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#clocksource_mutex\">clocksource_mutex</a>);", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"clocksource=\", <a class=\"id\" href=\"#boot_override_clocksource\">boot_override_clocksource</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * boot_override_clock - Compatibility layer for deprecated boot option</span>", 
"<span class=\"comment\"> * @str:<span class=\"ts\"/>override name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DEPRECATED! Takes a clock= boot argument and uses it</span>", 
"<span class=\"comment\"> * as the clocksource override name</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#boot_override_clock\">boot_override_clock</a>(char* <a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#str\">str</a>, \"pmtmr\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Warning: clock=pmtmr is deprecated. \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"Use clocksource=acpi_pm.\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#boot_override_clocksource\">boot_override_clocksource</a>(\"acpi_pm\");", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(\"Warning! clock= boot option is deprecated. \"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"Use clocksource=xyz\\n\");", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#boot_override_clocksource\">boot_override_clocksource</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#__setup\">__setup</a>(\"clock=\", <a class=\"id\" href=\"#boot_override_clock\">boot_override_clock</a>);", 
];
xr_frag_insert('l/43/78b635b47bb02e55010205390528dbef2ca1a9.xr', __xr_tmp);
