var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generic address resultion entity</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Authors:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>net_random Alan Cox</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>net_ratelimit Andi Kleen</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>in{4,6}_pton YOSHIFUJI Hideaki, Copyright (C)2006 USAGI/WIDE Project</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Created by Alexey Kuznetsov &lt;kuznet@ms2.inr.ac.ru&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *      modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *      as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *      2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#inet\">inet</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ratelimit\">ratelimit</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#byteorder\">byteorder</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"int <a class=\"id\" href=\"#net_msg_warn\">net_msg_warn</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = 1;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#net_msg_warn\">net_msg_warn</a>);", 
"", 
"<a class=\"id\" href=\"#DEFINE_RATELIMIT_STATE\">DEFINE_RATELIMIT_STATE</a>(<a class=\"id\" href=\"#net_ratelimit_state\">net_ratelimit_state</a>, 5 * <a class=\"id\" href=\"#HZ\">HZ</a>, 10);", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * All net warning printk()s should be guarded by this function.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#__ratelimit\">__ratelimit</a>(&amp;<a class=\"id\" href=\"#net_ratelimit_state\">net_ratelimit_state</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Convert an ASCII string to binary IP.</span>", 
"<span class=\"comment\"> * This is outside of net/ipv4/ because various code that uses IP addresses</span>", 
"<span class=\"comment\"> * is otherwise not dependent on the TCP/IP stack.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#in_aton\">in_aton</a>(const char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = 0;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 4; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> <<= 8;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#str\">str</a> != '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (*<a class=\"id\" href=\"#str\">str</a> != '\\0' && *<a class=\"id\" href=\"#str\">str</a> != '.' && *<a class=\"id\" href=\"#str\">str</a> != '\\n')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> *= 10;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> += *<a class=\"id\" href=\"#str\">str</a> - '0';", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> |= <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (*<a class=\"id\" href=\"#str\">str</a> != '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return(<a class=\"id\" href=\"#htonl\">htonl</a>(<a class=\"id\" href=\"#l\">l</a>));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in_aton\">in_aton</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a><span class=\"ts\"/><span class=\"ts\"/>0x00010000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_DIGIT\">IN6PTON_DIGIT</a><span class=\"ts\"/><span class=\"ts\"/>0x00020000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a><span class=\"ts\"/>0x00700000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_COLON_1\">IN6PTON_COLON_1</a><span class=\"ts\"/><span class=\"ts\"/>0x00100000<span class=\"ts\"/><span class=\"comment\">/* single : requested */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_COLON_2\">IN6PTON_COLON_2</a><span class=\"ts\"/><span class=\"ts\"/>0x00200000<span class=\"ts\"/><span class=\"comment\">/* second : requested */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_COLON_1_2\">IN6PTON_COLON_1_2</a><span class=\"ts\"/>0x00400000<span class=\"ts\"/><span class=\"comment\">/* :: requested */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_DOT\">IN6PTON_DOT</a><span class=\"ts\"/><span class=\"ts\"/>0x00800000<span class=\"ts\"/><span class=\"comment\">/* . */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a><span class=\"ts\"/><span class=\"ts\"/>0x10000000", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_NULL\">IN6PTON_NULL</a><span class=\"ts\"/><span class=\"ts\"/>0x20000000<span class=\"ts\"/><span class=\"comment\">/* first/tail */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#IN6PTON_UNKNOWN\">IN6PTON_UNKNOWN</a><span class=\"ts\"/><span class=\"ts\"/>0x40000000", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> int <a class=\"id\" href=\"#xdigit2bin\">xdigit2bin</a>(char <a class=\"id\" href=\"#c\">c</a>, int <a class=\"id\" href=\"#delim\">delim</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == <a class=\"id\" href=\"#delim\">delim</a> || <a class=\"id\" href=\"#c\">c</a> == '\\0')", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == ':')", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> == '.')", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IN6PTON_DOT\">IN6PTON_DOT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> >= '0' && <a class=\"id\" href=\"#c\">c</a> <= '9')", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a> | <a class=\"id\" href=\"#IN6PTON_DIGIT\">IN6PTON_DIGIT</a>| (<a class=\"id\" href=\"#c\">c</a> - '0'));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> >= 'a' && <a class=\"id\" href=\"#c\">c</a> <= 'f')", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a> | (<a class=\"id\" href=\"#c\">c</a> - 'a' + 10));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> >= 'A' && <a class=\"id\" href=\"#c\">c</a> <= 'F')", 
"<span class=\"ts\"/><span class=\"ts\"/>return (<a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a> | (<a class=\"id\" href=\"#c\">c</a> - 'A' + 10));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#delim\">delim</a> == -1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IN6PTON_UNKNOWN\">IN6PTON_UNKNOWN</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#in4_pton\">in4_pton</a>(const char *<a class=\"id\" href=\"#src\">src</a>, int <a class=\"id\" href=\"#srclen\">srclen</a>,", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/>     int <a class=\"id\" href=\"#delim\">delim</a>, const char **<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dbuf\">dbuf</a>[4];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#w\">w</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#srclen\">srclen</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srclen\">srclen</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#src\">src</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#dbuf\">dbuf</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 0;", 
"<span class=\"ts\"/>while(1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#xdigit2bin\">xdigit2bin</a>(<a class=\"id\" href=\"#srclen\">srclen</a> &gt; 0 ? *<a class=\"id\" href=\"#s\">s</a> : '\\0', <a class=\"id\" href=\"#delim\">delim</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#c\">c</a> &amp; (<a class=\"id\" href=\"#IN6PTON_DIGIT\">IN6PTON_DIGIT</a> | <a class=\"id\" href=\"#IN6PTON_DOT\">IN6PTON_DOT</a> | <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a> | <a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &amp; (<a class=\"id\" href=\"#IN6PTON_DOT\">IN6PTON_DOT</a> | <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a> | <a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#w\">w</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#d\">d</a>++ = <a class=\"id\" href=\"#w\">w</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &amp; (<a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a> | <a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> != 4)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cont\">cont</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = (<a class=\"id\" href=\"#w\">w</a> * 10) + <a class=\"id\" href=\"#c\">c</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#w\">w</a> &amp; 0xffff) &gt; 255) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#cont\">cont</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a> >= 4)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srclen\">srclen</a>--;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#dbuf\">dbuf</a>, sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>));", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in4_pton\">in4_pton</a>);", 
"", 
"int <a class=\"id\" href=\"#in6_pton\">in6_pton</a>(const char *<a class=\"id\" href=\"#src\">src</a>, int <a class=\"id\" href=\"#srclen\">srclen</a>,", 
"<span class=\"ts\"/>     <a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#dst\">dst</a>,", 
"<span class=\"ts\"/>     int <a class=\"id\" href=\"#delim\">delim</a>, const char **<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#s\">s</a>, *<a class=\"id\" href=\"#tok\">tok</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *<a class=\"id\" href=\"#d\">d</a>, *<a class=\"id\" href=\"#dc\">dc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#dbuf\">dbuf</a>[16];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#IN6PTON_COLON_1_2\">IN6PTON_COLON_1_2</a> | <a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a> | <a class=\"id\" href=\"#IN6PTON_NULL\">IN6PTON_NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#w\">w</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#dbuf\">dbuf</a>, 0, sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#src\">src</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> = <a class=\"id\" href=\"#dbuf\">dbuf</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#srclen\">srclen</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srclen\">srclen</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#src\">src</a>);", 
"", 
"<span class=\"ts\"/>while (1) {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#c\">c</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a> = <a class=\"id\" href=\"#xdigit2bin\">xdigit2bin</a>(<a class=\"id\" href=\"#srclen\">srclen</a> &gt; 0 ? *<a class=\"id\" href=\"#s\">s</a> : '\\0', <a class=\"id\" href=\"#delim\">delim</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#c\">c</a> &amp; <a class=\"id\" href=\"#state\">state</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &amp; (<a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a> | <a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* process one 16-bit word */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#IN6PTON_NULL\">IN6PTON_NULL</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#d\">d</a>++ = (<a class=\"id\" href=\"#w\">w</a> >> 8) &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#d\">d</a>++ = <a class=\"id\" href=\"#w\">w</a> &amp; 0xff;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &amp; <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We've processed last word */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * COLON_1 =&gt; XDIGIT</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * COLON_2 =&gt; XDIGIT|DELIM</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * COLON_1_2 =&gt; COLON_2</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#state\">state</a> &amp; <a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IN6PTON_COLON_2\">IN6PTON_COLON_2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dc\">dc</a> = <a class=\"id\" href=\"#d\">d</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a> | <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dc\">dc</a> - <a class=\"id\" href=\"#dbuf\">dbuf</a> >= sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#IN6PTON_NULL\">IN6PTON_NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IN6PTON_COLON_1\">IN6PTON_COLON_1</a>|<a class=\"id\" href=\"#IN6PTON_COLON_1_2\">IN6PTON_COLON_1_2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a> | <a class=\"id\" href=\"#IN6PTON_COLON_2\">IN6PTON_COLON_2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IN6PTON_COLON_1\">IN6PTON_COLON_1</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#IN6PTON_COLON_1_2\">IN6PTON_COLON_1_2</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#IN6PTON_COLON_2\">IN6PTON_COLON_2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tok\">tok</a> = <a class=\"id\" href=\"#s\">s</a> + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#cont\">cont</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a> &amp; <a class=\"id\" href=\"#IN6PTON_DOT\">IN6PTON_DOT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#in4_pton\">in4_pton</a>(<a class=\"id\" href=\"#tok\">tok</a> ? <a class=\"id\" href=\"#tok\">tok</a> : <a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#srclen\">srclen</a> + (int)(<a class=\"id\" href=\"#s\">s</a> - <a class=\"id\" href=\"#tok\">tok</a>), <a class=\"id\" href=\"#d\">d</a>, <a class=\"id\" href=\"#delim\">delim</a>, &amp;<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d\">d</a> += 4;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#w\">w</a> = (<a class=\"id\" href=\"#w\">w</a> << 4) | (0xff &amp; <a class=\"id\" href=\"#c\">c</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> = <a class=\"id\" href=\"#IN6PTON_COLON_1\">IN6PTON_COLON_1</a> | <a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#w\">w</a> &amp; 0xf000)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dc\">dc</a> && <a class=\"id\" href=\"#d\">d</a> + 2 &lt; <a class=\"id\" href=\"#dbuf\">dbuf</a> + sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#IN6PTON_COLON_1_2\">IN6PTON_COLON_1_2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> &= ~<a class=\"id\" href=\"#IN6PTON_DELIM\">IN6PTON_DELIM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#d\">d</a> + 2 >= <a class=\"id\" href=\"#dbuf\">dbuf</a> + sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> &= ~(<a class=\"id\" href=\"#IN6PTON_COLON_1\">IN6PTON_COLON_1</a>|<a class=\"id\" href=\"#IN6PTON_COLON_1_2\">IN6PTON_COLON_1_2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<a class=\"id\" href=\"#cont\">cont</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#dc\">dc</a> && <a class=\"id\" href=\"#d\">d</a> + 4 &lt; <a class=\"id\" href=\"#dbuf\">dbuf</a> + sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#d\">d</a> + 4 == <a class=\"id\" href=\"#dbuf\">dbuf</a> + sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> |= <a class=\"id\" href=\"#IN6PTON_DOT\">IN6PTON_DOT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#d\">d</a> >= <a class=\"id\" href=\"#dbuf\">dbuf</a> + sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a> &= ~(<a class=\"id\" href=\"#IN6PTON_XDIGIT\">IN6PTON_XDIGIT</a>|<a class=\"id\" href=\"#IN6PTON_COLON_MASK\">IN6PTON_COLON_MASK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#srclen\">srclen</a>--;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#i\">i</a> = 15; <a class=\"id\" href=\"#d\">d</a>--;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dc\">dc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>while(<a class=\"id\" href=\"#d\">d</a> >= <a class=\"id\" href=\"#dc\">dc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>[<a class=\"id\" href=\"#i\">i</a>--] = *<a class=\"id\" href=\"#d\">d</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>while(<a class=\"id\" href=\"#i\">i</a> >= <a class=\"id\" href=\"#dc\">dc</a> - <a class=\"id\" href=\"#dbuf\">dbuf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>[<a class=\"id\" href=\"#i\">i</a>--] = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>while(<a class=\"id\" href=\"#i\">i</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a>[<a class=\"id\" href=\"#i\">i</a>--] = *<a class=\"id\" href=\"#d\">d</a>--;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#dbuf\">dbuf</a>, sizeof(<a class=\"id\" href=\"#dbuf\">dbuf</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#end\">end</a> = <a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#in6_pton\">in6_pton</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_proto_csum_replace4\">inet_proto_csum_replace4</a>(<a class=\"id\" href=\"#__sum16\">__sum16</a> *<a class=\"id\" href=\"#sum\">sum</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#to\">to</a>, int <a class=\"id\" href=\"#pseudohdr\">pseudohdr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__be32\">__be32</a> <a class=\"id\" href=\"#diff\">diff</a>[] = { ~<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#to\">to</a> };", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> != <a class=\"id\" href=\"#CHECKSUM_PARTIAL\">CHECKSUM_PARTIAL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sum\">sum</a> = <a class=\"id\" href=\"#csum_fold\">csum_fold</a>(<a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#diff\">diff</a>, sizeof(<a class=\"id\" href=\"#diff\">diff</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>~<a class=\"id\" href=\"#csum_unfold\">csum_unfold</a>(*<a class=\"id\" href=\"#sum\">sum</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#ip_summed\">ip_summed</a> == <a class=\"id\" href=\"#CHECKSUM_COMPLETE\">CHECKSUM_COMPLETE</a> && <a class=\"id\" href=\"#pseudohdr\">pseudohdr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a> = ~<a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#diff\">diff</a>, sizeof(<a class=\"id\" href=\"#diff\">diff</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>~<a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#csum\">csum</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#pseudohdr\">pseudohdr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sum\">sum</a> = ~<a class=\"id\" href=\"#csum_fold\">csum_fold</a>(<a class=\"id\" href=\"#csum_partial\">csum_partial</a>(<a class=\"id\" href=\"#diff\">diff</a>, sizeof(<a class=\"id\" href=\"#diff\">diff</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#csum_unfold\">csum_unfold</a>(*<a class=\"id\" href=\"#sum\">sum</a>)));", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_proto_csum_replace4\">inet_proto_csum_replace4</a>);", 
];
xr_frag_insert('l/43/83d9e0f88450f4e5b1744c2e753ef4b1dc1077.xr', __xr_tmp);
