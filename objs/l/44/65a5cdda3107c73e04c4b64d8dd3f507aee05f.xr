var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#__ARCH_OMIT_COMPAT_SYS_GETDENTS64\">__ARCH_OMIT_COMPAT_SYS_GETDENTS64</a>", 
"", 
"struct <a class=\"id\" href=\"#compat_getdents_callback64\">compat_getdents_callback64</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_dirent64\">linux_dirent64</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#current_dir\">current_dir</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_dirent64\">linux_dirent64</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#previous\">previous</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#compat_filldir64\">compat_filldir64</a>(void * <a class=\"id\" href=\"#__buf\">__buf</a>, const char * <a class=\"id\" href=\"#name\">name</a>, int <a class=\"id\" href=\"#namlen\">namlen</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#ino\">ino</a>, unsigned int <a class=\"id\" href=\"#d_type\">d_type</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_dirent64\">linux_dirent64</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#dirent\">dirent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_getdents_callback64\">compat_getdents_callback64</a> *<a class=\"id\" href=\"#buf\">buf</a> = <a class=\"id\" href=\"#__buf\">__buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#reclen\">reclen</a> = <a class=\"id\" href=\"#ALIGN\">ALIGN</a>(<a class=\"id\" href=\"#offsetof\">offsetof</a>(struct <a class=\"id\" href=\"#linux_dirent64\">linux_dirent64</a>, <a class=\"id\" href=\"#d_name\">d_name</a>) + <a class=\"id\" href=\"#namlen\">namlen</a> + 1,", 
"<span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#u64\">u64</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u64\">u64</a> <a class=\"id\" href=\"#off\">off</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"comment\">/* only used if we fail.. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#reclen\">reclen</a> &gt; <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#count\">count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dirent\">dirent</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#previous\">previous</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dirent\">dirent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user_unaligned\">__put_user_unaligned</a>(<a class=\"id\" href=\"#offset\">offset</a>, &amp;<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#d_off\">d_off</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#efault\">efault</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dirent\">dirent</a> = <a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#current_dir\">current_dir</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user_unaligned\">__put_user_unaligned</a>(<a class=\"id\" href=\"#ino\">ino</a>, &amp;<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#d_ino\">d_ino</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#efault\">efault</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#off\">off</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user_unaligned\">__put_user_unaligned</a>(<a class=\"id\" href=\"#off\">off</a>, &amp;<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#d_off\">d_off</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#efault\">efault</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#reclen\">reclen</a>, &amp;<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#d_reclen\">d_reclen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#efault\">efault</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#d_type\">d_type</a>, &amp;<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#d_type\">d_type</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#efault\">efault</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#d_name\">d_name</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#namlen\">namlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#efault\">efault</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user\">__put_user</a>(0, <a class=\"id\" href=\"#dirent\">dirent</a>-><a class=\"id\" href=\"#d_name\">d_name</a> + <a class=\"id\" href=\"#namlen\">namlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#efault\">efault</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#previous\">previous</a> = <a class=\"id\" href=\"#dirent\">dirent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dirent\">dirent</a> = (void <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#dirent\">dirent</a> + <a class=\"id\" href=\"#reclen\">reclen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#current_dir\">current_dir</a> = <a class=\"id\" href=\"#dirent\">dirent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#count\">count</a> -= <a class=\"id\" href=\"#reclen\">reclen</a>;", 
"<span class=\"ts\"/>return 0;", 
"<a class=\"id\" href=\"#efault\">efault</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>-><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_getdents64\">compat_sys_getdents64</a>(unsigned int <a class=\"id\" href=\"#fd\">fd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_dirent64\">linux_dirent64</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#dirent\">dirent</a>, unsigned int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> * <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_dirent64\">linux_dirent64</a> <a class=\"id\" href=\"#__user\">__user</a> * <a class=\"id\" href=\"#lastdirent\">lastdirent</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_getdents_callback64\">compat_getdents_callback64</a> <a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#dirent\">dirent</a>, <a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget\">fget</a>(<a class=\"id\" href=\"#fd\">fd</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#current_dir\">current_dir</a> = <a class=\"id\" href=\"#dirent\">dirent</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#previous\">previous</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#count\">count</a> = <a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#error\">error</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#vfs_readdir\">vfs_readdir</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#compat_filldir64\">compat_filldir64</a>, &amp;<a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lastdirent\">lastdirent</a> = <a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#previous\">previous</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#lastdirent\">lastdirent</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#typeof\">typeof</a>(<a class=\"id\" href=\"#lastdirent\">lastdirent</a>-><a class=\"id\" href=\"#d_off\">d_off</a>) <a class=\"id\" href=\"#d_off\">d_off</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user_unaligned\">__put_user_unaligned</a>(<a class=\"id\" href=\"#d_off\">d_off</a>, &amp;<a class=\"id\" href=\"#lastdirent\">lastdirent</a>-><a class=\"id\" href=\"#d_off\">d_off</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#count\">count</a> - <a class=\"id\" href=\"#buf\">buf</a>.<a class=\"id\" href=\"#count\">count</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* ! __ARCH_OMIT_COMPAT_SYS_GETDENTS64 */</span>", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#compat_do_readv_writev\">compat_do_readv_writev</a>(int <a class=\"id\" href=\"#type\">type</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#uvector\">uvector</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       unsigned long <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ssize_t\">compat_ssize_t</a> <a class=\"id\" href=\"#tot_len\">tot_len</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#iovstack\">iovstack</a>[<a class=\"id\" href=\"#UIO_FASTIOV\">UIO_FASTIOV</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> *<a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#iovstack\">iovstack</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#io_fn_t\">io_fn_t</a> <a class=\"id\" href=\"#fn\">fn</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov_fn_t\">iov_fn_t</a> <a class=\"id\" href=\"#fnv\">fnv</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#uvector\">uvector</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>*sizeof(*<a class=\"id\" href=\"#uvector\">uvector</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tot_len\">tot_len</a> = <a class=\"id\" href=\"#compat_rw_copy_check_uvector\">compat_rw_copy_check_uvector</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#uvector\">uvector</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#UIO_FASTIOV\">UIO_FASTIOV</a>, <a class=\"id\" href=\"#iovstack\">iovstack</a>, &amp;<a class=\"id\" href=\"#iov\">iov</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tot_len\">tot_len</a> == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#rw_verify_area\">rw_verify_area</a>(<a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#tot_len\">tot_len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fnv\">fnv</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#READ\">READ</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fnv\">fnv</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_read\">aio_read</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fn\">fn</a> = (<a class=\"id\" href=\"#io_fn_t\">io_fn_t</a>)<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fnv\">fnv</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_write\">aio_write</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#fnv\">fnv</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sync_readv_writev\">do_sync_readv_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#tot_len\">tot_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#fnv\">fnv</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_loop_readv_writev\">do_loop_readv_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#pos\">pos</a>, <a class=\"id\" href=\"#fn\">fn</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#iov\">iov</a> != <a class=\"id\" href=\"#iovstack\">iovstack</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#iov\">iov</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> + (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#READ\">READ</a>)) &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#READ\">READ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_access\">fsnotify_access</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fsnotify_modify\">fsnotify_modify</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#compat_readv\">compat_readv</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_READ\">FMODE_READ</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> || (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_read\">aio_read</a> && !<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#read\">read</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_do_readv_writev\">compat_do_readv_writev</a>(<a class=\"id\" href=\"#READ\">READ</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_rchar\">add_rchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscr\">inc_syscr</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#compat_sys_readv\">compat_sys_readv</a>(unsigned long <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_readv\">compat_readv</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#compat_sys_preadv\">compat_sys_preadv</a>(unsigned long <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pos_low\">pos_low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pos_high\">pos_high</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = ((<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#pos_high\">pos_high</a> << 32) | <a class=\"id\" href=\"#pos_low\">pos_low</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_readv\">compat_readv</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#compat_writev\">compat_writev</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_mode\">f_mode</a> &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a> || (!<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#aio_write\">aio_write</a> && !<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_op\">f_op</a>-><a class=\"id\" href=\"#write\">write</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_do_readv_writev\">compat_do_readv_writev</a>(<a class=\"id\" href=\"#WRITE\">WRITE</a>, <a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &gt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_wchar\">add_wchar</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#ret\">ret</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inc_syscw\">inc_syscw</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#compat_sys_writev\">compat_sys_writev</a>(unsigned long <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_writev\">compat_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#f_pos\">f_pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#compat_sys_pwritev\">compat_sys_pwritev</a>(unsigned long <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#vec\">vec</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   unsigned long <a class=\"id\" href=\"#vlen\">vlen</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pos_low\">pos_low</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#pos_high\">pos_high</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = ((<a class=\"id\" href=\"#loff_t\">loff_t</a>)<a class=\"id\" href=\"#pos_high\">pos_high</a> << 32) | <a class=\"id\" href=\"#pos_low\">pos_low</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#fput_needed\">fput_needed</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#fget_light\">fget_light</a>(<a class=\"id\" href=\"#fd\">fd</a>, &amp;<a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#file\">file</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EBADF\">EBADF</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_writev\">compat_writev</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#vec\">vec</a>, <a class=\"id\" href=\"#vlen\">vlen</a>, &amp;<a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fput_light\">fput_light</a>(<a class=\"id\" href=\"#file\">file</a>, <a class=\"id\" href=\"#fput_needed\">fput_needed</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long", 
"<a class=\"id\" href=\"#compat_sys_vmsplice\">compat_sys_vmsplice</a>(int <a class=\"id\" href=\"#fd\">fd</a>, const struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#iov32\">iov32</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    unsigned int <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, unsigned int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#iovec\">iovec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#iov\">iov</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nr_segs\">nr_segs</a> &gt; <a class=\"id\" href=\"#UIO_MAXIOV\">UIO_MAXIOV</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iov\">iov</a> = <a class=\"id\" href=\"#compat_alloc_user_space\">compat_alloc_user_space</a>(<a class=\"id\" href=\"#nr_segs\">nr_segs</a> * sizeof(struct <a class=\"id\" href=\"#iovec\">iovec</a>));", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#nr_segs\">nr_segs</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_iovec\">compat_iovec</a> <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#iov_base\">iov_base</a>, &amp;<a class=\"id\" href=\"#iov32\">iov32</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#iov_len\">iov_len</a>, &amp;<a class=\"id\" href=\"#iov32\">iov32</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#iov_base\">iov_base</a>), &amp;<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_base\">iov_base</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#put_user\">put_user</a>(<a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#iov_len\">iov_len</a>, &amp;<a class=\"id\" href=\"#iov\">iov</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#iov_len\">iov_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_vmsplice\">sys_vmsplice</a>(<a class=\"id\" href=\"#fd\">fd</a>, <a class=\"id\" href=\"#iov\">iov</a>, <a class=\"id\" href=\"#nr_segs\">nr_segs</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Exactly like fs/open.c:sys_open(), except that it doesn't set the</span>", 
"<span class=\"comment\"> * O_LARGEFILE flag.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long", 
"<a class=\"id\" href=\"#compat_sys_open\">compat_sys_open</a>(const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#filename\">filename</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_sys_open\">do_sys_open</a>(<a class=\"id\" href=\"#AT_FDCWD\">AT_FDCWD</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Exactly like fs/open.c:sys_openat(), except that it doesn't set the</span>", 
"<span class=\"comment\"> * O_LARGEFILE flag.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long", 
"<a class=\"id\" href=\"#compat_sys_openat\">compat_sys_openat</a>(unsigned int <a class=\"id\" href=\"#dfd\">dfd</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#filename\">filename</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_sys_open\">do_sys_open</a>(<a class=\"id\" href=\"#dfd\">dfd</a>, <a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#mode\">mode</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * compat_count() counts the number of arguments/envelopes. It is basically</span>", 
"<span class=\"comment\"> * a copy of count() from fs/exec.c, except that it works with 32 bit argv</span>", 
"<span class=\"comment\"> * and envp pointers.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#compat_count\">compat_count</a>(<a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#argv\">argv</a>, int <a class=\"id\" href=\"#max\">max</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#argv\">argv</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>for (;;) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#p\">p</a>, <a class=\"id\" href=\"#argv\">argv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#argv\">argv</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#i\">i</a>++ >= <a class=\"id\" href=\"#max\">max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#i\">i</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * compat_copy_strings() is basically a copy of copy_strings() from fs/exec.c</span>", 
"<span class=\"comment\"> * except that it works with 32 bit argv and envp pointers.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#compat_copy_strings\">compat_copy_strings</a>(int <a class=\"id\" href=\"#argc\">argc</a>, <a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#argv\">argv</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#kpos\">kpos</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#argc\">argc</a>-- &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#str\">str</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#pos\">pos</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#argv\">argv</a>+<a class=\"id\" href=\"#argc\">argc</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    !(<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#strnlen_user\">strnlen_user</a>(<a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#str\">str</a>), <a class=\"id\" href=\"#MAX_ARG_STRLEN\">MAX_ARG_STRLEN</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &gt; <a class=\"id\" href=\"#MAX_ARG_STRLEN\">MAX_ARG_STRLEN</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We're going to work our way backwords. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> += <a class=\"id\" href=\"#len\">len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#p\">p</a> -= <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> &gt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#pos\">pos</a> % <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#offset\">offset</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> = <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a> = <a class=\"id\" href=\"#offset\">offset</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#offset\">offset</a> -= <a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pos\">pos</a> -= <a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#str\">str</a> -= <a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a> || <a class=\"id\" href=\"#kpos\">kpos</a> != (<a class=\"id\" href=\"#pos\">pos</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_STACK_GROWSUP\">CONFIG_STACK_GROWSUP</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#expand_stack_downwards\">expand_stack_downwards</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#pos\">pos</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We've exceed the stack rlimit. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#get_user_pages\">get_user_pages</a>(<a class=\"id\" href=\"#current\">current</a>, <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#pos\">pos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     1, 1, 1, &amp;<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We've exceed the stack rlimit. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#E2BIG\">E2BIG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_kernel_dcache_page\">flush_kernel_dcache_page</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_page\">put_page</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmapped_page\">kmapped_page</a> = <a class=\"id\" href=\"#page\">page</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kaddr\">kaddr</a> = <a class=\"id\" href=\"#kmap\">kmap</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kpos\">kpos</a> = <a class=\"id\" href=\"#pos\">pos</a> &amp; <a class=\"id\" href=\"#PAGE_MASK\">PAGE_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_cache_page\">flush_cache_page</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#kpos\">kpos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#page_to_pfn\">page_to_pfn</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#kaddr\">kaddr</a>+<a class=\"id\" href=\"#offset\">offset</a>, <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#str\">str</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bytes_to_copy\">bytes_to_copy</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_kernel_dcache_page\">flush_kernel_dcache_page</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kunmap\">kunmap</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_page\">put_page</a>(<a class=\"id\" href=\"#kmapped_page\">kmapped_page</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * compat_do_execve() is mostly a copy of do_execve(), with the exception</span>", 
"<span class=\"comment\"> * that it processes 32 bit argv and envp pointers.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#compat_do_execve\">compat_do_execve</a>(char * <a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#argv\">argv</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#envp\">envp</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#pt_regs\">pt_regs</a> * <a class=\"id\" href=\"#regs\">regs</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#linux_binprm\">linux_binprm</a> *<a class=\"id\" href=\"#bprm\">bprm</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#files_struct\">files_struct</a> *<a class=\"id\" href=\"#displaced\">displaced</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#clear_in_exec\">clear_in_exec</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#unshare_files\">unshare_files</a>(&amp;<a class=\"id\" href=\"#displaced\">displaced</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_ret\">out_ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(*<a class=\"id\" href=\"#bprm\">bprm</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#bprm\">bprm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_files\">out_files</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#prepare_bprm_creds\">prepare_bprm_creds</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#check_unsafe_exec\">check_unsafe_exec</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_free\">out_free</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#clear_in_exec\">clear_in_exec</a> = <a class=\"id\" href=\"#retval\">retval</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#in_execve\">in_execve</a> = 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#open_exec\">open_exec</a>(<a class=\"id\" href=\"#filename\">filename</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#file\">file</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_unmark\">out_unmark</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sched_exec\">sched_exec</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#file\">file</a> = <a class=\"id\" href=\"#file\">file</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#filename\">filename</a> = <a class=\"id\" href=\"#filename\">filename</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#interp\">interp</a> = <a class=\"id\" href=\"#filename\">filename</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bprm_mm_init\">bprm_mm_init</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_file\">out_file</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#argc\">argc</a> = <a class=\"id\" href=\"#compat_count\">compat_count</a>(<a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#MAX_ARG_STRINGS\">MAX_ARG_STRINGS</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#argc\">argc</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#envc\">envc</a> = <a class=\"id\" href=\"#compat_count\">compat_count</a>(<a class=\"id\" href=\"#envp\">envp</a>, <a class=\"id\" href=\"#MAX_ARG_STRINGS\">MAX_ARG_STRINGS</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#envc\">envc</a>) &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#prepare_binprm\">prepare_binprm</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#copy_strings_kernel\">copy_strings_kernel</a>(1, &amp;<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#exec\">exec</a> = <a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#p\">p</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#compat_copy_strings\">compat_copy_strings</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#envc\">envc</a>, <a class=\"id\" href=\"#envp\">envp</a>, <a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#compat_copy_strings\">compat_copy_strings</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#argc\">argc</a>, <a class=\"id\" href=\"#argv\">argv</a>, <a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#retval\">retval</a> = <a class=\"id\" href=\"#search_binary_handler\">search_binary_handler</a>(<a class=\"id\" href=\"#bprm\">bprm</a>, <a class=\"id\" href=\"#regs\">regs</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#retval\">retval</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* execve succeeded */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#in_exec\">in_exec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#in_execve\">in_execve</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acct_update_integrals\">acct_update_integrals</a>(<a class=\"id\" href=\"#current\">current</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_bprm\">free_bprm</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#displaced\">displaced</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#put_files_struct\">put_files_struct</a>(<a class=\"id\" href=\"#displaced\">displaced</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#mm\">mm</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mmput\">mmput</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#mm\">mm</a>);", 
"", 
"<a class=\"id\" href=\"#out_file\">out_file</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#file\">file</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allow_write_access\">allow_write_access</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#fput\">fput</a>(<a class=\"id\" href=\"#bprm\">bprm</a>-><a class=\"id\" href=\"#file\">file</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<a class=\"id\" href=\"#out_unmark\">out_unmark</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#clear_in_exec\">clear_in_exec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#fs\">fs</a>-><a class=\"id\" href=\"#in_exec\">in_exec</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#in_execve\">in_execve</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out_free\">out_free</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_bprm\">free_bprm</a>(<a class=\"id\" href=\"#bprm\">bprm</a>);", 
"", 
"<a class=\"id\" href=\"#out_files\">out_files</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#displaced\">displaced</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#reset_files_struct\">reset_files_struct</a>(<a class=\"id\" href=\"#displaced\">displaced</a>);", 
"<a class=\"id\" href=\"#out_ret\">out_ret</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#retval\">retval</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#__COMPAT_NFDBITS\">__COMPAT_NFDBITS</a>       (8 * sizeof(<a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a>))", 
"", 
"static int <a class=\"id\" href=\"#poll_select_copy_remaining\">poll_select_copy_remaining</a>(struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#end_time\">end_time</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#p\">p</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      int <a class=\"id\" href=\"#timeval\">timeval</a>, int <a class=\"id\" href=\"#ret\">ret</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#personality\">personality</a> &amp; <a class=\"id\" href=\"#STICKY_TIMEOUTS\">STICKY_TIMEOUTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#sticky\">sticky</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* No update for zero timeout */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#end_time\">end_time</a>-><a class=\"id\" href=\"#tv_sec\">tv_sec</a> && !<a class=\"id\" href=\"#end_time\">end_time</a>-><a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ktime_get_ts\">ktime_get_ts</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a> = <a class=\"id\" href=\"#timespec_sub\">timespec_sub</a>(*<a class=\"id\" href=\"#end_time\">end_time</a>, <a class=\"id\" href=\"#ts\">ts</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#timeval\">timeval</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timeval\">compat_timeval</a> <a class=\"id\" href=\"#rtv\">rtv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtv\">rtv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rtv\">rtv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> = <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> / <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#rtv\">rtv</a>, sizeof(<a class=\"id\" href=\"#rtv\">rtv</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timespec\">compat_timespec</a> <a class=\"id\" href=\"#rts\">rts</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rts\">rts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> = <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rts\">rts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a> = <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#rts\">rts</a>, sizeof(<a class=\"id\" href=\"#rts\">rts</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If an application puts its timeval in read-only memory, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't want the Linux-specific update to the timeval to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * cause a fault after the select has completed</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * successfully. However, because we're not updating the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * timeval, we can't restart the system call.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<a class=\"id\" href=\"#sticky\">sticky</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINTR\">EINTR</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Ooo, nasty.  We need here to frob 32-bit unsigned longs to</span>", 
"<span class=\"comment\"> * 64-bit unsigned longs.</span>", 
"<span class=\"comment\"> */</span>", 
"static", 
"int <a class=\"id\" href=\"#compat_get_fd_set\">compat_get_fd_set</a>(unsigned long <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ufdset\">ufdset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long *<a class=\"id\" href=\"#fdset\">fdset</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#__COMPAT_NFDBITS\">__COMPAT_NFDBITS</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ufdset\">ufdset</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#odd\">odd</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_WRITE\">VERIFY_WRITE</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>, <a class=\"id\" href=\"#nr\">nr</a>*sizeof(<a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#odd\">odd</a> = <a class=\"id\" href=\"#nr\">nr</a> &amp; 1UL;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> &= ~1UL;", 
"<span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#nr\">nr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>) || <a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>+1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ufdset\">ufdset</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#fdset\">fdset</a>++ = <a class=\"id\" href=\"#h\">h</a> << 32 | <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#odd\">odd</a> && <a class=\"id\" href=\"#__get_user\">__get_user</a>(*<a class=\"id\" href=\"#fdset\">fdset</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Tricky, must clear full unsigned long in the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * kernel fdset at the end, this makes sure that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * actually happens.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#fdset\">fdset</a>, 0, ((<a class=\"id\" href=\"#nr\">nr</a> + 1) &amp; ~1)*sizeof(<a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static", 
"int <a class=\"id\" href=\"#compat_set_fd_set\">compat_set_fd_set</a>(unsigned long <a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ufdset\">ufdset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      unsigned long *<a class=\"id\" href=\"#fdset\">fdset</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#odd\">odd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#nr\">nr</a>, <a class=\"id\" href=\"#__COMPAT_NFDBITS\">__COMPAT_NFDBITS</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ufdset\">ufdset</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#odd\">odd</a> = <a class=\"id\" href=\"#nr\">nr</a> &amp; 1UL;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> &= ~1UL;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#nr\">nr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#l\">l</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#l\">l</a> = *<a class=\"id\" href=\"#fdset\">fdset</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#l\">l</a> >> 32;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#l\">l</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>) || <a class=\"id\" href=\"#__put_user\">__put_user</a>(<a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>+1))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ufdset\">ufdset</a> += 2;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr\">nr</a> -= 2;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#odd\">odd</a> && <a class=\"id\" href=\"#__put_user\">__put_user</a>(*<a class=\"id\" href=\"#fdset\">fdset</a>, <a class=\"id\" href=\"#ufdset\">ufdset</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This is a virtual copy of sys_select from fs/select.c and probably</span>", 
"<span class=\"comment\"> * should be compared to it from time to time</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * We can actually return ERESTARTSYS instead of EINTR, but I'd</span>", 
"<span class=\"comment\"> * like to be certain this leads to no problems. So I return</span>", 
"<span class=\"comment\"> * EINTR just for safety.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Update: ERESTARTSYS breaks at least the xview clock binary, so</span>", 
"<span class=\"comment\"> * I'm trying ERESTARTNOHAND which restart only when you want to.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MAX_SELECT_SECONDS\">MAX_SELECT_SECONDS</a> \\", 
"<span class=\"ts\"/>((unsigned long) (<a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a> / <a class=\"id\" href=\"#HZ\">HZ</a>)-1)", 
"", 
"int <a class=\"id\" href=\"#compat_core_sys_select\">compat_core_sys_select</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#inp\">inp</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#exp\">exp</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> *<a class=\"id\" href=\"#end_time\">end_time</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fd_set_bits\">fd_set_bits</a> <a class=\"id\" href=\"#fds\">fds</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#max_fds\">max_fds</a>, <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#fdtable\">fdtable</a> *<a class=\"id\" href=\"#fdt\">fdt</a>;", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#stack_fds\">stack_fds</a>[<a class=\"id\" href=\"#SELECT_STACK_ALLOC\">SELECT_STACK_ALLOC</a>/sizeof(long)];", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nofds\">out_nofds</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* max_fds can increase, so grab it once to avoid race */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fdt\">fdt</a> = <a class=\"id\" href=\"#files_fdtable\">files_fdtable</a>(<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#files\">files</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#max_fds\">max_fds</a> = <a class=\"id\" href=\"#fdt\">fdt</a>-><a class=\"id\" href=\"#max_fds\">max_fds</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#n\">n</a> &gt; <a class=\"id\" href=\"#max_fds\">max_fds</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#n\">n</a> = <a class=\"id\" href=\"#max_fds\">max_fds</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need 6 bitmaps (in/out/ex for both incoming and outgoing),</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * since we used fdset we need to allocate memory in units of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * long-words.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size\">size</a> = <a class=\"id\" href=\"#FDS_BYTES\">FDS_BYTES</a>(<a class=\"id\" href=\"#n\">n</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#stack_fds\">stack_fds</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#size\">size</a> &gt; sizeof(<a class=\"id\" href=\"#stack_fds\">stack_fds</a>) / 6) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bits\">bits</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(6 * <a class=\"id\" href=\"#size\">size</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#bits\">bits</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out_nofds\">out_nofds</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#in\">in</a>      = (unsigned long *)  <a class=\"id\" href=\"#bits\">bits</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#out\">out</a>     = (unsigned long *) (<a class=\"id\" href=\"#bits\">bits</a> +   <a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#ex\">ex</a>      = (unsigned long *) (<a class=\"id\" href=\"#bits\">bits</a> + 2*<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_in\">res_in</a>  = (unsigned long *) (<a class=\"id\" href=\"#bits\">bits</a> + 3*<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_out\">res_out</a> = (unsigned long *) (<a class=\"id\" href=\"#bits\">bits</a> + 4*<a class=\"id\" href=\"#size\">size</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_ex\">res_ex</a>  = (unsigned long *) (<a class=\"id\" href=\"#bits\">bits</a> + 5*<a class=\"id\" href=\"#size\">size</a>);", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_get_fd_set\">compat_get_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#in\">in</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_get_fd_set\">compat_get_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#out\">out</a>)) ||", 
"<span class=\"ts\"/>    (<a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_get_fd_set\">compat_get_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#ex\">ex</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zero_fd_set\">zero_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_in\">res_in</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zero_fd_set\">zero_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_out\">res_out</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#zero_fd_set\">zero_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_ex\">res_ex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_select\">do_select</a>(<a class=\"id\" href=\"#n\">n</a>, &amp;<a class=\"id\" href=\"#fds\">fds</a>, <a class=\"id\" href=\"#end_time\">end_time</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#signal_pending\">signal_pending</a>(<a class=\"id\" href=\"#current\">current</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#compat_set_fd_set\">compat_set_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_in\">res_in</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#compat_set_fd_set\">compat_set_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_out\">res_out</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#compat_set_fd_set\">compat_set_fd_set</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#fds\">fds</a>.<a class=\"id\" href=\"#res_ex\">res_ex</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#bits\">bits</a> != <a class=\"id\" href=\"#stack_fds\">stack_fds</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#bits\">bits</a>);", 
"<a class=\"id\" href=\"#out_nofds\">out_nofds</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_select\">compat_sys_select</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#inp\">inp</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#exp\">exp</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timeval\">compat_timeval</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#tvp\">tvp</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#end_time\">end_time</a>, *<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timeval\">compat_timeval</a> <a class=\"id\" href=\"#tv\">tv</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tvp\">tvp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tv\">tv</a>, <a class=\"id\" href=\"#tvp\">tvp</a>, sizeof(<a class=\"id\" href=\"#tv\">tv</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = &amp;<a class=\"id\" href=\"#end_time\">end_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#poll_select_set_timeout\">poll_select_set_timeout</a>(<a class=\"id\" href=\"#to\">to</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> + (<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> / <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> % <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>) * <a class=\"id\" href=\"#NSEC_PER_USEC\">NSEC_PER_USEC</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_core_sys_select\">compat_core_sys_select</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#poll_select_copy_remaining\">poll_select_copy_remaining</a>(&amp;<a class=\"id\" href=\"#end_time\">end_time</a>, <a class=\"id\" href=\"#tvp\">tvp</a>, 1, <a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"struct <a class=\"id\" href=\"#compat_sel_arg_struct\">compat_sel_arg_struct</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#n\">n</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#inp\">inp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#outp\">outp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#exp\">exp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#tvp\">tvp</a>;", 
"};", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_old_select\">compat_sys_old_select</a>(struct <a class=\"id\" href=\"#compat_sel_arg_struct\">compat_sel_arg_struct</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_sel_arg_struct\">compat_sel_arg_struct</a> <a class=\"id\" href=\"#a\">a</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#arg\">arg</a>, sizeof(<a class=\"id\" href=\"#a\">a</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#compat_sys_select\">compat_sys_select</a>(<a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#inp\">inp</a>), <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#outp\">outp</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#exp\">exp</a>), <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#a\">a</a>.<a class=\"id\" href=\"#tvp\">tvp</a>));", 
"}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#HAVE_SET_RESTORE_SIGMASK\">HAVE_SET_RESTORE_SIGMASK</a>", 
"static long <a class=\"id\" href=\"#do_compat_pselect\">do_compat_pselect</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#inp\">inp</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#exp\">exp</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timespec\">compat_timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#tsp\">tsp</a>, <a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sigmask\">sigmask</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#ss32\">ss32</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigsaved\">sigsaved</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timespec\">compat_timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#end_time\">end_time</a>, *<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsp\">tsp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#tsp\">tsp</a>, sizeof(<a class=\"id\" href=\"#ts\">ts</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = &amp;<a class=\"id\" href=\"#end_time\">end_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#poll_select_set_timeout\">poll_select_set_timeout</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>, <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigmask\">sigmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ss32\">ss32</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>, sizeof(<a class=\"id\" href=\"#ss32\">ss32</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigset_from_compat\">sigset_from_compat</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#ss32\">ss32</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>)|<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#compat_core_sys_select\">compat_core_sys_select</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#to\">to</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#poll_select_copy_remaining\">poll_select_copy_remaining</a>(&amp;<a class=\"id\" href=\"#end_time\">end_time</a>, <a class=\"id\" href=\"#tsp\">tsp</a>, 0, <a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Don't restore the signal mask yet. Let do_signal() deliver</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the signal on the way back to userspace, before the signal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * mask is restored.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigmask\">sigmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#saved_sigmask\">saved_sigmask</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#sigsaved\">sigsaved</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_restore_sigmask\">set_restore_sigmask</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sigmask\">sigmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_pselect6\">compat_sys_pselect6</a>(int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#inp\">inp</a>,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#compat_ulong_t\">compat_ulong_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#exp\">exp</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timespec\">compat_timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#tsp\">tsp</a>, void <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sig\">sig</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#up\">up</a> = 0;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sig\">sig</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, <a class=\"id\" href=\"#sig\">sig</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a>)+sizeof(<a class=\"id\" href=\"#compat_size_t\">compat_size_t</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#up\">up</a>, (<a class=\"id\" href=\"#compat_uptr_t\">compat_uptr_t</a> <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#sig\">sig</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/>    <span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#__user\">__user</a> *)(<a class=\"id\" href=\"#sig\">sig</a>+sizeof(<a class=\"id\" href=\"#up\">up</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#do_compat_pselect\">do_compat_pselect</a>(<a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#inp\">inp</a>, <a class=\"id\" href=\"#outp\">outp</a>, <a class=\"id\" href=\"#exp\">exp</a>, <a class=\"id\" href=\"#tsp\">tsp</a>, <a class=\"id\" href=\"#compat_ptr\">compat_ptr</a>(<a class=\"id\" href=\"#up\">up</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_ppoll\">compat_sys_ppoll</a>(struct <a class=\"id\" href=\"#pollfd\">pollfd</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ufds\">ufds</a>,", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#nfds\">nfds</a>, struct <a class=\"id\" href=\"#compat_timespec\">compat_timespec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#tsp\">tsp</a>,", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sigmask\">sigmask</a>, <a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#ss32\">ss32</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigsaved\">sigsaved</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_timespec\">compat_timespec</a> <a class=\"id\" href=\"#ts\">ts</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timespec\">timespec</a> <a class=\"id\" href=\"#end_time\">end_time</a>, *<a class=\"id\" href=\"#to\">to</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tsp\">tsp</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ts\">ts</a>, <a class=\"id\" href=\"#tsp\">tsp</a>, sizeof(<a class=\"id\" href=\"#ts\">ts</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a> = &amp;<a class=\"id\" href=\"#end_time\">end_time</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#poll_select_set_timeout\">poll_select_set_timeout</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>, <a class=\"id\" href=\"#ts\">ts</a>.<a class=\"id\" href=\"#tv_nsec\">tv_nsec</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigmask\">sigmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ss32\">ss32</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>, sizeof(<a class=\"id\" href=\"#ss32\">ss32</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigset_from_compat\">sigset_from_compat</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#ss32\">ss32</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>)|<a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#do_sys_poll\">do_sys_poll</a>(<a class=\"id\" href=\"#ufds\">ufds</a>, <a class=\"id\" href=\"#nfds\">nfds</a>, <a class=\"id\" href=\"#to\">to</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can restart this syscall, usually */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> == -<a class=\"id\" href=\"#EINTR\">EINTR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Don't restore the signal mask yet. Let do_signal() deliver</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the signal on the way back to userspace, before the signal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * mask is restored.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigmask\">sigmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#saved_sigmask\">saved_sigmask</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#sigsaved\">sigsaved</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_restore_sigmask\">set_restore_sigmask</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ERESTARTNOHAND\">ERESTARTNOHAND</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sigmask\">sigmask</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#poll_select_copy_remaining\">poll_select_copy_remaining</a>(&amp;<a class=\"id\" href=\"#end_time\">end_time</a>, <a class=\"id\" href=\"#tsp\">tsp</a>, 0, <a class=\"id\" href=\"#ret\">ret</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* HAVE_SET_RESTORE_SIGMASK */</span>", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFSD\">CONFIG_NFSD</a>) || <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NFSD_MODULE\">CONFIG_NFSD_MODULE</a>)", 
"<span class=\"comment\">/* Stuff for NFS server syscalls... */</span>", 
"struct <a class=\"id\" href=\"#compat_nfsctl_svc\">compat_nfsctl_svc</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#svc32_port\">svc32_port</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#svc32_nthreads\">svc32_nthreads</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#compat_nfsctl_client\">compat_nfsctl_client</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s8\">s8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cl32_ident\">cl32_ident</a>[<a class=\"id\" href=\"#NFSCLNT_IDMAX\">NFSCLNT_IDMAX</a>+1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cl32_naddr\">cl32_naddr</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#in_addr\">in_addr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cl32_addrlist\">cl32_addrlist</a>[<a class=\"id\" href=\"#NFSCLNT_ADDRMAX\">NFSCLNT_ADDRMAX</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cl32_fhkeytype\">cl32_fhkeytype</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s32\">s32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cl32_fhkeylen\">cl32_fhkeylen</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cl32_fhkey\">cl32_fhkey</a>[<a class=\"id\" href=\"#NFSCLNT_KEYMAX\">NFSCLNT_KEYMAX</a>];", 
"};", 
"", 
"struct <a class=\"id\" href=\"#compat_nfsctl_export\">compat_nfsctl_export</a> {", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex32_client\">ex32_client</a>[<a class=\"id\" href=\"#NFSCLNT_IDMAX\">NFSCLNT_IDMAX</a>+1];", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex32_path\">ex32_path</a>[<a class=\"id\" href=\"#NFS_MAXPATHLEN\">NFS_MAXPATHLEN</a>+1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_dev_t\">compat_dev_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ex32_dev\">ex32_dev</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_ino_t\">compat_ino_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ex32_ino\">ex32_ino</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ex32_flags\">ex32_flags</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__compat_uid_t\">__compat_uid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ex32_anon_uid\">ex32_anon_uid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__compat_gid_t\">__compat_gid_t</a><span class=\"ts\"/><a class=\"id\" href=\"#ex32_anon_gid\">ex32_anon_gid</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#compat_nfsctl_fdparm\">compat_nfsctl_fdparm</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gd32_addr\">gd32_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s8\">s8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gd32_path\">gd32_path</a>[<a class=\"id\" href=\"#NFS_MAXPATHLEN\">NFS_MAXPATHLEN</a>+1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gd32_version\">gd32_version</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#compat_nfsctl_fsparm\">compat_nfsctl_fsparm</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gd32_addr\">gd32_addr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s8\">s8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gd32_path\">gd32_path</a>[<a class=\"id\" href=\"#NFS_MAXPATHLEN\">NFS_MAXPATHLEN</a>+1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#gd32_maxlen\">gd32_maxlen</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#compat_nfsctl_arg\">compat_nfsctl_arg</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_int_t\">compat_int_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ca32_version\">ca32_version</a>;<span class=\"ts\"/><span class=\"comment\">/* safeguard */</span>", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_svc\">compat_nfsctl_svc</a><span class=\"ts\"/><a class=\"id\" href=\"#u32_svc\">u32_svc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_client\">compat_nfsctl_client</a><span class=\"ts\"/><a class=\"id\" href=\"#u32_client\">u32_client</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_export\">compat_nfsctl_export</a><span class=\"ts\"/><a class=\"id\" href=\"#u32_export\">u32_export</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_fdparm\">compat_nfsctl_fdparm</a><span class=\"ts\"/><a class=\"id\" href=\"#u32_getfd\">u32_getfd</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_fsparm\">compat_nfsctl_fsparm</a><span class=\"ts\"/><a class=\"id\" href=\"#u32_getfs\">u32_getfs</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#u\">u</a>;", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ca32_svc\">ca32_svc</a><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#u32_svc\">u32_svc</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ca32_client\">ca32_client</a><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#u32_client\">u32_client</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ca32_export\">ca32_export</a><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#u32_export\">u32_export</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ca32_getfd\">ca32_getfd</a><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#u32_getfd\">u32_getfd</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ca32_getfs\">ca32_getfs</a><span class=\"ts\"/><a class=\"id\" href=\"#u\">u</a>.<a class=\"id\" href=\"#u32_getfs\">u32_getfs</a>", 
"};", 
"", 
"union <a class=\"id\" href=\"#compat_nfsctl_res\">compat_nfsctl_res</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__u8\">__u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cr32_getfh\">cr32_getfh</a>[<a class=\"id\" href=\"#NFS_FHSIZE\">NFS_FHSIZE</a>];", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#knfsd_fh\">knfsd_fh</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cr32_getfs\">cr32_getfs</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#compat_nfs_svc_trans\">compat_nfs_svc_trans</a>(struct <a class=\"id\" href=\"#nfsctl_arg\">nfsctl_arg</a> *<a class=\"id\" href=\"#karg\">karg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_arg\">compat_nfsctl_arg</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_svc\">ca32_svc</a>, sizeof(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_svc\">ca32_svc</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_version\">ca_version</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_version\">ca32_version</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_svc\">ca_svc</a>.<a class=\"id\" href=\"#svc_port\">svc_port</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_svc\">ca32_svc</a>.<a class=\"id\" href=\"#svc32_port\">svc32_port</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_svc\">ca_svc</a>.<a class=\"id\" href=\"#svc_nthreads\">svc_nthreads</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_svc\">ca32_svc</a>.<a class=\"id\" href=\"#svc32_nthreads\">svc32_nthreads</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#compat_nfs_clnt_trans\">compat_nfs_clnt_trans</a>(struct <a class=\"id\" href=\"#nfsctl_arg\">nfsctl_arg</a> *<a class=\"id\" href=\"#karg\">karg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_arg\">compat_nfsctl_arg</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_version\">ca_version</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_version\">ca32_version</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_client\">ca_client</a>.<a class=\"id\" href=\"#cl_ident\">cl_ident</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>.<a class=\"id\" href=\"#cl32_ident\">cl32_ident</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NFSCLNT_IDMAX\">NFSCLNT_IDMAX</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_client\">ca_client</a>.<a class=\"id\" href=\"#cl_naddr\">cl_naddr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>.<a class=\"id\" href=\"#cl32_naddr\">cl32_naddr</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_client\">ca_client</a>.<a class=\"id\" href=\"#cl_addrlist\">cl_addrlist</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>.<a class=\"id\" href=\"#cl32_addrlist\">cl32_addrlist</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(sizeof(struct <a class=\"id\" href=\"#in_addr\">in_addr</a>) * <a class=\"id\" href=\"#NFSCLNT_ADDRMAX\">NFSCLNT_ADDRMAX</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_client\">ca_client</a>.<a class=\"id\" href=\"#cl_fhkeytype\">cl_fhkeytype</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>.<a class=\"id\" href=\"#cl32_fhkeytype\">cl32_fhkeytype</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_client\">ca_client</a>.<a class=\"id\" href=\"#cl_fhkeylen\">cl_fhkeylen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>.<a class=\"id\" href=\"#cl32_fhkeylen\">cl32_fhkeylen</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_client\">ca_client</a>.<a class=\"id\" href=\"#cl_fhkey\">cl_fhkey</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_client\">ca32_client</a>.<a class=\"id\" href=\"#cl32_fhkey\">cl32_fhkey</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NFSCLNT_KEYMAX\">NFSCLNT_KEYMAX</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#compat_nfs_exp_trans\">compat_nfs_exp_trans</a>(struct <a class=\"id\" href=\"#nfsctl_arg\">nfsctl_arg</a> *<a class=\"id\" href=\"#karg\">karg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_arg\">compat_nfsctl_arg</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_version\">ca_version</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_version\">ca32_version</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_client\">ex_client</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>.<a class=\"id\" href=\"#ex32_client\">ex32_client</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NFSCLNT_IDMAX\">NFSCLNT_IDMAX</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_path\">ex_path</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>.<a class=\"id\" href=\"#ex32_path\">ex32_path</a>[0],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NFS_MAXPATHLEN\">NFS_MAXPATHLEN</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_dev\">ex_dev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>.<a class=\"id\" href=\"#ex32_dev\">ex32_dev</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_ino\">ex_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>.<a class=\"id\" href=\"#ex32_ino\">ex32_ino</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_flags\">ex_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>.<a class=\"id\" href=\"#ex32_flags\">ex32_flags</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_anon_uid\">ex_anon_uid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>.<a class=\"id\" href=\"#ex32_anon_uid\">ex32_anon_uid</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_anon_gid\">ex_anon_gid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_export\">ca32_export</a>.<a class=\"id\" href=\"#ex32_anon_gid\">ex32_anon_gid</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SET_UID\">SET_UID</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_anon_uid\">ex_anon_uid</a>, <a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_anon_uid\">ex_anon_uid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#SET_GID\">SET_GID</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_anon_gid\">ex_anon_gid</a>, <a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_export\">ca_export</a>.<a class=\"id\" href=\"#ex_anon_gid\">ex_anon_gid</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#compat_nfs_getfd_trans\">compat_nfs_getfd_trans</a>(struct <a class=\"id\" href=\"#nfsctl_arg\">nfsctl_arg</a> *<a class=\"id\" href=\"#karg\">karg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_arg\">compat_nfsctl_arg</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfd\">ca32_getfd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>sizeof(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfd\">ca32_getfd</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_version\">ca_version</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_version\">ca32_version</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_getfd\">ca_getfd</a>.<a class=\"id\" href=\"#gd_addr\">gd_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfd\">ca32_getfd</a>.<a class=\"id\" href=\"#gd32_addr\">gd32_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(sizeof(struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a>))) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_getfd\">ca_getfd</a>.<a class=\"id\" href=\"#gd_path\">gd_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfd\">ca32_getfd</a>.<a class=\"id\" href=\"#gd32_path\">gd32_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NFS_MAXPATHLEN\">NFS_MAXPATHLEN</a>+1)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_getfd\">ca_getfd</a>.<a class=\"id\" href=\"#gd_version\">gd_version</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfd\">ca32_getfd</a>.<a class=\"id\" href=\"#gd32_version\">gd32_version</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#compat_nfs_getfs_trans\">compat_nfs_getfs_trans</a>(struct <a class=\"id\" href=\"#nfsctl_arg\">nfsctl_arg</a> *<a class=\"id\" href=\"#karg\">karg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_arg\">compat_nfsctl_arg</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>)", 
"{", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#access_ok\">access_ok</a>(<a class=\"id\" href=\"#VERIFY_READ\">VERIFY_READ</a>,&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfs\">ca32_getfs</a>,sizeof(<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfs\">ca32_getfs</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_version\">ca_version</a>, &amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_version\">ca32_version</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_getfs\">ca_getfs</a>.<a class=\"id\" href=\"#gd_addr\">gd_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfs\">ca32_getfs</a>.<a class=\"id\" href=\"#gd32_addr\">gd32_addr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(sizeof(struct <a class=\"id\" href=\"#sockaddr\">sockaddr</a>))) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__copy_from_user\">__copy_from_user</a>(&amp;<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_getfs\">ca_getfs</a>.<a class=\"id\" href=\"#gd_path\">gd_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfs\">ca32_getfs</a>.<a class=\"id\" href=\"#gd32_path\">gd32_path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#NFS_MAXPATHLEN\">NFS_MAXPATHLEN</a>+1)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__get_user\">__get_user</a>(<a class=\"id\" href=\"#karg\">karg</a>-><a class=\"id\" href=\"#ca_getfs\">ca_getfs</a>.<a class=\"id\" href=\"#gd_maxlen\">gd_maxlen</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>&amp;<a class=\"id\" href=\"#arg\">arg</a>-><a class=\"id\" href=\"#ca32_getfs\">ca32_getfs</a>.<a class=\"id\" href=\"#gd32_maxlen\">gd32_maxlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/* This really doesn't need translations, we are only passing</span>", 
"<span class=\"comment\"> * back a union which contains opaque nfs file handle data.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#compat_nfs_getfh_res_trans\">compat_nfs_getfh_res_trans</a>(union <a class=\"id\" href=\"#nfsctl_res\">nfsctl_res</a> *<a class=\"id\" href=\"#kres\">kres</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#compat_nfsctl_res\">compat_nfsctl_res</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#res\">res</a>, <a class=\"id\" href=\"#kres\">kres</a>, sizeof(*<a class=\"id\" href=\"#res\">res</a>));", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#err\">err</a>) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a> : 0;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_nfsservctl\">compat_sys_nfsservctl</a>(int <a class=\"id\" href=\"#cmd\">cmd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_nfsctl_arg\">compat_nfsctl_arg</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#arg\">arg</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>union <a class=\"id\" href=\"#compat_nfsctl_res\">compat_nfsctl_res</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#res\">res</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#nfsctl_arg\">nfsctl_arg</a> *<a class=\"id\" href=\"#karg\">karg</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#nfsctl_res\">nfsctl_res</a> *<a class=\"id\" href=\"#kres\">kres</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mm_segment_t\">mm_segment_t</a> <a class=\"id\" href=\"#oldfs\">oldfs</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#karg\">karg</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#karg\">karg</a>), <a class=\"id\" href=\"#GFP_USER\">GFP_USER</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kres\">kres</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#kres\">kres</a>), <a class=\"id\" href=\"#GFP_USER\">GFP_USER</a>);", 
"<span class=\"ts\"/>if(!<a class=\"id\" href=\"#karg\">karg</a> || !<a class=\"id\" href=\"#kres\">kres</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>switch(<a class=\"id\" href=\"#cmd\">cmd</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFSCTL_SVC\">NFSCTL_SVC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#compat_nfs_svc_trans\">compat_nfs_svc_trans</a>(<a class=\"id\" href=\"#karg\">karg</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFSCTL_ADDCLIENT\">NFSCTL_ADDCLIENT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#compat_nfs_clnt_trans\">compat_nfs_clnt_trans</a>(<a class=\"id\" href=\"#karg\">karg</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFSCTL_DELCLIENT\">NFSCTL_DELCLIENT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#compat_nfs_clnt_trans\">compat_nfs_clnt_trans</a>(<a class=\"id\" href=\"#karg\">karg</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFSCTL_EXPORT\">NFSCTL_EXPORT</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFSCTL_UNEXPORT\">NFSCTL_UNEXPORT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#compat_nfs_exp_trans\">compat_nfs_exp_trans</a>(<a class=\"id\" href=\"#karg\">karg</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFSCTL_GETFD\">NFSCTL_GETFD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#compat_nfs_getfd_trans\">compat_nfs_getfd_trans</a>(<a class=\"id\" href=\"#karg\">karg</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#NFSCTL_GETFS\">NFSCTL_GETFS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#compat_nfs_getfs_trans\">compat_nfs_getfs_trans</a>(<a class=\"id\" href=\"#karg\">karg</a>, <a class=\"id\" href=\"#arg\">arg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#oldfs\">oldfs</a> = <a class=\"id\" href=\"#get_fs\">get_fs</a>();", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#KERNEL_DS\">KERNEL_DS</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* The __user pointer casts are valid because of the set_fs() */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sys_nfsservctl\">sys_nfsservctl</a>(<a class=\"id\" href=\"#cmd\">cmd</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#karg\">karg</a>, (void <a class=\"id\" href=\"#__user\">__user</a> *) <a class=\"id\" href=\"#kres\">kres</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#set_fs\">set_fs</a>(<a class=\"id\" href=\"#oldfs\">oldfs</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#done\">done</a>;", 
"", 
"<span class=\"ts\"/>if((<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#NFSCTL_GETFD\">NFSCTL_GETFD</a>) ||", 
"<span class=\"ts\"/>   (<a class=\"id\" href=\"#cmd\">cmd</a> == <a class=\"id\" href=\"#NFSCTL_GETFS\">NFSCTL_GETFS</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#compat_nfs_getfh_res_trans\">compat_nfs_getfh_res_trans</a>(<a class=\"id\" href=\"#kres\">kres</a>, <a class=\"id\" href=\"#res\">res</a>);", 
"", 
"<a class=\"id\" href=\"#done\">done</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#karg\">karg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#kres\">kres</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"#else <span class=\"comment\">/* !NFSD */</span>", 
"long <a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> <a class=\"id\" href=\"#compat_sys_nfsservctl\">compat_sys_nfsservctl</a>(int <a class=\"id\" href=\"#cmd\">cmd</a>, void *<a class=\"id\" href=\"#notused\">notused</a>, void *<a class=\"id\" href=\"#notused2\">notused2</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_ni_syscall\">sys_ni_syscall</a>();", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_EPOLL\">CONFIG_EPOLL</a>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#HAVE_SET_RESTORE_SIGMASK\">HAVE_SET_RESTORE_SIGMASK</a>", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_epoll_pwait\">compat_sys_epoll_pwait</a>(int <a class=\"id\" href=\"#epfd\">epfd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#compat_epoll_event\">compat_epoll_event</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#events\">events</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#maxevents\">maxevents</a>, int <a class=\"id\" href=\"#timeout\">timeout</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const <a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sigmask\">sigmask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/>long <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#csigmask\">csigmask</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigsaved\">sigsaved</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the caller wants a certain signal mask to be set during the wait,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we apply it here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigmask\">sigmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#csigmask\">csigmask</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>, sizeof(<a class=\"id\" href=\"#csigmask\">csigmask</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigset_from_compat\">sigset_from_compat</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#csigmask\">csigmask</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigdelsetmask\">sigdelsetmask</a>(&amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGKILL\">SIGKILL</a>) | <a class=\"id\" href=\"#sigmask\">sigmask</a>(<a class=\"id\" href=\"#SIGSTOP\">SIGSTOP</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sys_epoll_wait\">sys_epoll_wait</a>(<a class=\"id\" href=\"#epfd\">epfd</a>, <a class=\"id\" href=\"#events\">events</a>, <a class=\"id\" href=\"#maxevents\">maxevents</a>, <a class=\"id\" href=\"#timeout\">timeout</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we changed the signal mask, we need to restore the original one.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * In case we've got a signal while waiting, we do not restore the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * signal mask yet, and we allow do_signal() to deliver the signal on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the way back to userspace, before the signal mask is restored.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigmask\">sigmask</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#EINTR\">EINTR</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(&amp;<a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#saved_sigmask\">saved_sigmask</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       sizeof(<a class=\"id\" href=\"#sigsaved\">sigsaved</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_restore_sigmask\">set_restore_sigmask</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sigprocmask\">sigprocmask</a>(<a class=\"id\" href=\"#SIG_SETMASK\">SIG_SETMASK</a>, &amp;<a class=\"id\" href=\"#sigsaved\">sigsaved</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* HAVE_SET_RESTORE_SIGMASK */</span>", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_EPOLL */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SIGNALFD\">CONFIG_SIGNALFD</a>", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_signalfd4\">compat_sys_signalfd4</a>(int <a class=\"id\" href=\"#ufd\">ufd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     const <a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sigmask\">sigmask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#ss32\">ss32</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#tmp\">tmp</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_t\">sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ksigmask\">ksigmask</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sigsetsize\">sigsetsize</a> != sizeof(<a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ss32\">ss32</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>, sizeof(<a class=\"id\" href=\"#ss32\">ss32</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sigset_from_compat\">sigset_from_compat</a>(&amp;<a class=\"id\" href=\"#tmp\">tmp</a>, &amp;<a class=\"id\" href=\"#ss32\">ss32</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ksigmask\">ksigmask</a> = <a class=\"id\" href=\"#compat_alloc_user_space\">compat_alloc_user_space</a>(sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(<a class=\"id\" href=\"#ksigmask\">ksigmask</a>, &amp;<a class=\"id\" href=\"#tmp\">tmp</a>, sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#sys_signalfd4\">sys_signalfd4</a>(<a class=\"id\" href=\"#ufd\">ufd</a>, <a class=\"id\" href=\"#ksigmask\">ksigmask</a>, sizeof(<a class=\"id\" href=\"#sigset_t\">sigset_t</a>), <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_signalfd\">compat_sys_signalfd</a>(int <a class=\"id\" href=\"#ufd\">ufd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const <a class=\"id\" href=\"#compat_sigset_t\">compat_sigset_t</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#sigmask\">sigmask</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#compat_size_t\">compat_size_t</a> <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#compat_sys_signalfd4\">compat_sys_signalfd4</a>(<a class=\"id\" href=\"#ufd\">ufd</a>, <a class=\"id\" href=\"#sigmask\">sigmask</a>, <a class=\"id\" href=\"#sigsetsize\">sigsetsize</a>, 0);", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SIGNALFD */</span>", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_TIMERFD\">CONFIG_TIMERFD</a>", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_timerfd_settime\">compat_sys_timerfd_settime</a>(int <a class=\"id\" href=\"#ufd\">ufd</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#compat_itimerspec\">compat_itimerspec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#utmr\">utmr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#compat_itimerspec\">compat_itimerspec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#otmr\">otmr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ut\">ut</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_compat_itimerspec\">get_compat_itimerspec</a>(&amp;<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#utmr\">utmr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ut\">ut</a> = <a class=\"id\" href=\"#compat_alloc_user_space\">compat_alloc_user_space</a>(2 * sizeof(struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_to_user\">copy_to_user</a>(&amp;<a class=\"id\" href=\"#ut\">ut</a>[0], &amp;<a class=\"id\" href=\"#t\">t</a>, sizeof(<a class=\"id\" href=\"#t\">t</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sys_timerfd_settime\">sys_timerfd_settime</a>(<a class=\"id\" href=\"#ufd\">ufd</a>, <a class=\"id\" href=\"#flags\">flags</a>, &amp;<a class=\"id\" href=\"#ut\">ut</a>[0], &amp;<a class=\"id\" href=\"#ut\">ut</a>[1]);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a> && <a class=\"id\" href=\"#otmr\">otmr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#t\">t</a>, &amp;<a class=\"id\" href=\"#ut\">ut</a>[1], sizeof(struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#put_compat_itimerspec\">put_compat_itimerspec</a>(<a class=\"id\" href=\"#otmr\">otmr</a>, &amp;<a class=\"id\" href=\"#t\">t</a>)) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>: 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<a class=\"id\" href=\"#asmlinkage\">asmlinkage</a> long <a class=\"id\" href=\"#compat_sys_timerfd_gettime\">compat_sys_timerfd_gettime</a>(int <a class=\"id\" href=\"#ufd\">ufd</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#compat_itimerspec\">compat_itimerspec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#otmr\">otmr</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> <a class=\"id\" href=\"#t\">t</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a> <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ut\">ut</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ut\">ut</a> = <a class=\"id\" href=\"#compat_alloc_user_space\">compat_alloc_user_space</a>(sizeof(struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#sys_timerfd_gettime\">sys_timerfd_gettime</a>(<a class=\"id\" href=\"#ufd\">ufd</a>, <a class=\"id\" href=\"#ut\">ut</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#t\">t</a>, <a class=\"id\" href=\"#ut\">ut</a>, sizeof(struct <a class=\"id\" href=\"#itimerspec\">itimerspec</a>)) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#put_compat_itimerspec\">put_compat_itimerspec</a>(<a class=\"id\" href=\"#otmr\">otmr</a>, &amp;<a class=\"id\" href=\"#t\">t</a>)) ? -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>: 0;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_TIMERFD */</span>", 
];
xr_frag_insert('l/44/65a5cdda3107c73e04c4b64d8dd3f507aee05f.xr', __xr_tmp);
