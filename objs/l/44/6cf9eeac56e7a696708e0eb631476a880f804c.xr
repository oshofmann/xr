var __xr_tmp = [
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> >= sizeof(<a class=\"id\" href=\"#buf\">buf</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#strict_strtoul\">strict_strtoul</a>(<a class=\"id\" href=\"#buf\">buf</a>, 10, &amp;<a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#tracing_update_buffers\">tracing_update_buffers</a>();", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> != 0 && <a class=\"id\" href=\"#val\">val</a> != 1)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#__ftrace_set_clr_event\">__ftrace_set_clr_event</a>(<a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#val\">val</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"enum {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FORMAT_HEADER\">FORMAT_HEADER</a><span class=\"ts\"/><span class=\"ts\"/>= 1,", 
"<span class=\"ts\"/><a class=\"id\" href=\"#FORMAT_PRINTFMT\">FORMAT_PRINTFMT</a><span class=\"ts\"/><span class=\"ts\"/>= 2,", 
"};", 
"", 
"static void *<a class=\"id\" href=\"#f_next\">f_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"", 
"<span class=\"ts\"/>(*<a class=\"id\" href=\"#pos\">pos</a>)++;", 
"", 
"<span class=\"ts\"/>switch ((unsigned long)<a class=\"id\" href=\"#v\">v</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FORMAT_HEADER\">FORMAT_HEADER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#ftrace_common_fields\">ftrace_common_fields</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#head\">head</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a>, <a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#field\">field</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FORMAT_PRINTFMT\">FORMAT_PRINTFMT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* all done */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#trace_get_fields\">trace_get_fields</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To separate common fields from event fields, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * LSB is set on the first event field. Clear it in case.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = (void *)((unsigned long)<a class=\"id\" href=\"#v\">v</a> &amp; ~1L);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If this is a common field, and at the end of the list, then</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * continue with main list.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#prev\">prev</a> == &amp;<a class=\"id\" href=\"#ftrace_common_fields\">ftrace_common_fields</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#head\">head</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a>, <a class=\"id\" href=\"#link\">link</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Set the LSB to notify f_show to print an extra newline */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = (struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>((unsigned long)<a class=\"id\" href=\"#field\">field</a> | 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If we are done tell f_show to print the format */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#prev\">prev</a> == <a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (void *)<a class=\"id\" href=\"#FORMAT_PRINTFMT\">FORMAT_PRINTFMT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#link\">link</a>.<a class=\"id\" href=\"#prev\">prev</a>, struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a>, <a class=\"id\" href=\"#link\">link</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#field\">field</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#f_start\">f_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#pos\">pos</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#l\">l</a> = 0;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#p\">p</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Start by showing the header */</span>", 
"<span class=\"ts\"/>if (!*<a class=\"id\" href=\"#pos\">pos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return (void *)<a class=\"id\" href=\"#FORMAT_HEADER\">FORMAT_HEADER</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = (void *)<a class=\"id\" href=\"#FORMAT_HEADER\">FORMAT_HEADER</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#f_next\">f_next</a>(<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#p\">p</a>, &amp;<a class=\"id\" href=\"#l\">l</a>);", 
"<span class=\"ts\"/>} while (<a class=\"id\" href=\"#p\">p</a> && <a class=\"id\" href=\"#l\">l</a> &lt; *<a class=\"id\" href=\"#pos\">pos</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#p\">p</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#f_show\">f_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_field\">ftrace_event_field</a> *<a class=\"id\" href=\"#field\">field</a>;", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#array_descriptor\">array_descriptor</a>;", 
"", 
"<span class=\"ts\"/>switch ((unsigned long)<a class=\"id\" href=\"#v\">v</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FORMAT_HEADER\">FORMAT_HEADER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"name: %s\\n\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"ID: %d\\n\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"format:\\n\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#FORMAT_PRINTFMT\">FORMAT_PRINTFMT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\nprint fmt: %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#print_fmt\">print_fmt</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * To separate common fields from event fields, the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * LSB is set on the first event field. Clear it and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * print a newline if it is set.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((unsigned long)<a class=\"id\" href=\"#v\">v</a> &amp; 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_putc\">seq_putc</a>(<a class=\"id\" href=\"#m\">m</a>, '\\n');", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a> = (void *)((unsigned long)<a class=\"id\" href=\"#v\">v</a> &amp; ~1L);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#field\">field</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Smartly shows the array type(except dynamic array).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Normal:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>field:TYPE VAR</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If TYPE := TYPE[LEN], it is shown:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>field:TYPE VAR[LEN]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#array_descriptor\">array_descriptor</a> = <a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a>, '[');", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a>, \"__data_loc\", 10))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#array_descriptor\">array_descriptor</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#array_descriptor\">array_descriptor</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tfield:%s %s;\\toffset:%u;\\tsize:%u;\\tsigned:%d;\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#size\">size</a>, !!<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#is_signed\">is_signed</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"\\tfield:%.*s %s%s;\\toffset:%u;\\tsize:%u;\\tsigned:%d;\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (int)(<a class=\"id\" href=\"#array_descriptor\">array_descriptor</a> - <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#type\">type</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#array_descriptor\">array_descriptor</a>, <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#offset\">offset</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#size\">size</a>, !!<a class=\"id\" href=\"#field\">field</a>-><a class=\"id\" href=\"#is_signed\">is_signed</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#f_stop\">f_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#p\">p</a>)", 
"{", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#trace_format_seq_ops\">trace_format_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#f_start\">f_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#f_next\">f_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#f_stop\">f_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#f_show\">f_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#trace_format_open\">trace_format_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_private\">i_private</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#trace_format_seq_ops\">trace_format_seq_ops</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#file\">file</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a>-><a class=\"id\" href=\"#private\">private</a> = <a class=\"id\" href=\"#call\">call</a>;", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#event_id_read\">event_id_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#s\">s</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_init\">trace_seq_init</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_printf\">trace_seq_printf</a>(<a class=\"id\" href=\"#s\">s</a>, \"%d\\n\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#type\">type</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#event_filter_read\">event_filter_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#s\">s</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_init\">trace_seq_init</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_event_filter\">print_event_filter</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#event_filter_write\">event_filter_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> >= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = (char *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#apply_event_filter\">apply_event_filter</a>(<a class=\"id\" href=\"#call\">call</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#subsystem_filter_read\">subsystem_filter_read</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#s\">s</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_init\">trace_seq_init</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#print_subsystem_event_filter\">print_subsystem_event_filter</a>(<a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#subsystem_filter_write\">subsystem_filter_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a> = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buf\">buf</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cnt\">cnt</a> >= <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a> = (char *)<a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_TEMPORARY\">GFP_TEMPORARY</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buf\">buf</a>[<a class=\"id\" href=\"#cnt\">cnt</a>] = '\\0';", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#apply_subsystem_event_filter\">apply_subsystem_event_filter</a>(<a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long) <a class=\"id\" href=\"#buf\">buf</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#ppos\">ppos</a> += <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#cnt\">cnt</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a>", 
"<a class=\"id\" href=\"#show_header\">show_header</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#filp\">filp</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#func\">func</a>)(struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>) = <a class=\"id\" href=\"#filp\">filp</a>-><a class=\"id\" href=\"#private_data\">private_data</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#trace_seq\">trace_seq</a> *<a class=\"id\" href=\"#s\">s</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#s\">s</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#s\">s</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#s\">s</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_seq_init\">trace_seq_init</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#func\">func</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#simple_read_from_buffer\">simple_read_from_buffer</a>(<a class=\"id\" href=\"#ubuf\">ubuf</a>, <a class=\"id\" href=\"#cnt\">cnt</a>, <a class=\"id\" href=\"#ppos\">ppos</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#s\">s</a>-><a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#s\">s</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#show_event_seq_ops\">show_event_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#t_start\">t_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#t_next\">t_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a> = <a class=\"id\" href=\"#t_show\">t_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a> = <a class=\"id\" href=\"#t_stop\">t_stop</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#show_set_event_seq_ops\">show_set_event_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#s_start\">s_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#s_next\">s_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a> = <a class=\"id\" href=\"#t_show\">t_show</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a> = <a class=\"id\" href=\"#t_stop\">t_stop</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_avail_fops\">ftrace_avail_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#ftrace_event_seq_open\">ftrace_event_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_set_event_fops\">ftrace_set_event_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#ftrace_event_seq_open\">ftrace_event_seq_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#ftrace_event_write\">ftrace_event_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_enable_fops\">ftrace_enable_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#event_enable_read\">event_enable_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#event_enable_write\">event_enable_write</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_event_format_fops\">ftrace_event_format_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#trace_format_open\">trace_format_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a> = <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a> = <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_event_id_fops\">ftrace_event_id_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#event_id_read\">event_id_read</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_event_filter_fops\">ftrace_event_filter_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#event_filter_read\">event_filter_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#event_filter_write\">event_filter_write</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_subsystem_filter_fops\">ftrace_subsystem_filter_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#subsystem_filter_read\">subsystem_filter_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#subsystem_filter_write\">subsystem_filter_write</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_system_enable_fops\">ftrace_system_enable_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#system_enable_read\">system_enable_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a> = <a class=\"id\" href=\"#system_enable_write\">system_enable_write</a>,", 
"};", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#ftrace_show_header_fops\">ftrace_show_header_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a> = <a class=\"id\" href=\"#tracing_open_generic\">tracing_open_generic</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a> = <a class=\"id\" href=\"#show_header\">show_header</a>,", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#event_trace_events_dir\">event_trace_events_dir</a>(void)", 
"{", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_tracer\">d_tracer</a>;", 
"<span class=\"ts\"/>static struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_events\">d_events</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#d_events\">d_events</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#d_events\">d_events</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_tracer\">d_tracer</a> = <a class=\"id\" href=\"#tracing_init_dentry\">tracing_init_dentry</a>();", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_tracer\">d_tracer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#d_events\">d_events</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(\"events\", <a class=\"id\" href=\"#d_tracer\">d_tracer</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#d_events\">d_events</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"'events' directory\\n\");", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#d_events\">d_events</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#event_subsystems\">event_subsystems</a>);", 
"", 
"static struct <a class=\"id\" href=\"#dentry\">dentry</a> *", 
"<a class=\"id\" href=\"#event_subsystem_dir\">event_subsystem_dir</a>(const char *<a class=\"id\" href=\"#name\">name</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_events\">d_events</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#event_subsystem\">event_subsystem</a> *<a class=\"id\" href=\"#system\">system</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* First see if we did not already create this dir */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#system\">system</a>, &amp;<a class=\"id\" href=\"#event_subsystems\">event_subsystems</a>, <a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#name\">name</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#nr_events\">nr_events</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* need to create new entry */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#system\">system</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#system\">system</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"No memory to create event subsystem %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#d_events\">d_events</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#d_events\">d_events</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create event subsystem %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#system\">system</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#d_events\">d_events</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#nr_events\">nr_events</a> = 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#debugfs_remove\">debugfs_remove</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#system\">system</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#d_events\">d_events</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#event_subsystems\">event_subsystems</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#event_filter\">event_filter</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not allocate filter for subsystem \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"'%s'\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#debugfs_create_file\">debugfs_create_file</a>(\"filter\", 0644, <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#system\">system</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#ftrace_subsystem_filter_fops\">ftrace_subsystem_filter_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#filter\">filter</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"'%s/filter' entry\\n\", <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"enable\", 0644, <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (void *)<a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#name\">name</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#ftrace_system_enable_fops\">ftrace_system_enable_fops</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#system\">system</a>-><a class=\"id\" href=\"#entry\">entry</a>;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#event_create_dir\">event_create_dir</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_events\">d_events</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#enable\">enable</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#filter\">filter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#format\">format</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#head\">head</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the trace point header did not define TRACE_SYSTEM</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * then the system would be called \"TRACE_SYSTEM\".</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#TRACE_SYSTEM\">TRACE_SYSTEM</a>) != 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#d_events\">d_events</a> = <a class=\"id\" href=\"#event_subsystem_dir\">event_subsystem_dir</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#system\">system</a>, <a class=\"id\" href=\"#d_events\">d_events</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#dir\">dir</a> = <a class=\"id\" href=\"#debugfs_create_dir\">debugfs_create_dir</a>(<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#d_events\">d_events</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#dir\">dir</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not create debugfs \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \"'%s' directory\\n\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"enable\", 0644, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#enable\">enable</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PERF_EVENTS\">CONFIG_PERF_EVENTS</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#event\">event</a>.<a class=\"id\" href=\"#type\">type</a> && <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#reg\">reg</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"id\", 0444, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> <span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#id\">id</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Other events may have the same class. Only update</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the fields if they are not already defined.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a> = <a class=\"id\" href=\"#trace_get_fields\">trace_get_fields</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#list_empty\">list_empty</a>(<a class=\"id\" href=\"#head\">head</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#class\">class</a>-><a class=\"id\" href=\"#define_fields\">define_fields</a>(<a class=\"id\" href=\"#call\">call</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_warning\">pr_warning</a>(\"Could not initialize trace point\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   \" events/%s\\n\", <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"filter\", 0644, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#filter\">filter</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#trace_create_file\">trace_create_file</a>(\"format\", 0444, <a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#dir\">dir</a>, <a class=\"id\" href=\"#call\">call</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#format\">format</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#__trace_add_event_call\">__trace_add_event_call</a>(struct <a class=\"id\" href=\"#ftrace_event_call\">ftrace_event_call</a> *<a class=\"id\" href=\"#call\">call</a>, struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#mod\">mod</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#id\">id</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#enable\">enable</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#filter\">filter</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> *<a class=\"id\" href=\"#format\">format</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dentry\">dentry</a> *<a class=\"id\" href=\"#d_events\">d_events</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* The linker may leave blanks */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#call\">call</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
];
xr_frag_insert('l/44/6cf9eeac56e7a696708e0eb631476a880f804c.xr', __xr_tmp);
