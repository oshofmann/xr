var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2001, 2002 Sistina Software (UK) Limited.</span>", 
"<span class=\"comment\"> * Copyright (C) 2004 - 2006 Red Hat, Inc. All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This file is released under the GPL.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"dm.h\"", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#vmalloc\">vmalloc</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#miscdevice\">miscdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#dm\">dm</a>-<a class=\"id\" href=\"#ioctl\">ioctl</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#hdreg\">hdreg</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#compat\">compat</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_MSG_PREFIX\">DM_MSG_PREFIX</a> \"ioctl\"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#DM_DRIVER_EMAIL\">DM_DRIVER_EMAIL</a> \"dm-devel@redhat.com\"", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * The ioctl interface needs to be able to look up devices by</span>", 
"<span class=\"comment\"> * name or uuid.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#name_list\">name_list</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#uuid_list\">uuid_list</a>;", 
"", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#uuid\">uuid</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#new_map\">new_map</a>;", 
"};", 
"", 
"struct <a class=\"id\" href=\"#vers_iter\">vers_iter</a> {", 
"    <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>;", 
"    struct <a class=\"id\" href=\"#dm_target_versions\">dm_target_versions</a> *<a class=\"id\" href=\"#vers\">vers</a>, *<a class=\"id\" href=\"#old_vers\">old_vers</a>;", 
"    char *<a class=\"id\" href=\"#end\">end</a>;", 
"    <a class=\"id\" href=\"#uint32_t\">uint32_t</a> <a class=\"id\" href=\"#flags\">flags</a>;", 
"};", 
"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a> 64", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#MASK_BUCKETS\">MASK_BUCKETS</a> (<a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a> - 1)", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#_name_buckets\">_name_buckets</a>[<a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a>];", 
"static struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#_uuid_buckets\">_uuid_buckets</a>[<a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a>];", 
"", 
"static void <a class=\"id\" href=\"#dm_hash_remove_all\">dm_hash_remove_all</a>(int <a class=\"id\" href=\"#keep_open_devices\">keep_open_devices</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Guards access to both hash tables.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DECLARE_RWSEM\">DECLARE_RWSEM</a>(<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Protects use of mdptr to obtain hash cell name and uuid from mapped device.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#DEFINE_MUTEX\">DEFINE_MUTEX</a>(<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"", 
"static void <a class=\"id\" href=\"#init_buckets\">init_buckets</a>(struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#buckets\">buckets</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(<a class=\"id\" href=\"#buckets\">buckets</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dm_hash_init\">dm_hash_init</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_buckets\">init_buckets</a>(<a class=\"id\" href=\"#_name_buckets\">_name_buckets</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#init_buckets\">init_buckets</a>(<a class=\"id\" href=\"#_uuid_buckets\">_uuid_buckets</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_hash_exit\">dm_hash_exit</a>(void)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_hash_remove_all\">dm_hash_remove_all</a>(0);", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * Hash function:</span>", 
"<span class=\"comment\"> * We're not really concerned with the str hash function being</span>", 
"<span class=\"comment\"> * fast since it's only used by the ioctl interface.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"static unsigned int <a class=\"id\" href=\"#hash_str\">hash_str</a>(const char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>const unsigned int <a class=\"id\" href=\"#hash_mult\">hash_mult</a> = 2654435387U;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a> = 0;", 
"", 
"<span class=\"ts\"/>while (*<a class=\"id\" href=\"#str\">str</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#h\">h</a> = (<a class=\"id\" href=\"#h\">h</a> + (unsigned int) *<a class=\"id\" href=\"#str\">str</a>++) * <a class=\"id\" href=\"#hash_mult\">hash_mult</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#h\">h</a> &amp; <a class=\"id\" href=\"#MASK_BUCKETS\">MASK_BUCKETS</a>;", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * Code for looking up a device by name</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"static struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#__get_name_cell\">__get_name_cell</a>(const char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hash_str\">hash_str</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a> (<a class=\"id\" href=\"#hc\">hc</a>, <a class=\"id\" href=\"#_name_buckets\">_name_buckets</a> + <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#name_list\">name_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#str\">str</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_get\">dm_get</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#__get_uuid_cell\">__get_uuid_cell</a>(const char *<a class=\"id\" href=\"#str\">str</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#h\">h</a> = <a class=\"id\" href=\"#hash_str\">hash_str</a>(<a class=\"id\" href=\"#str\">str</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a> (<a class=\"id\" href=\"#hc\">hc</a>, <a class=\"id\" href=\"#_uuid_buckets\">_uuid_buckets</a> + <a class=\"id\" href=\"#h\">h</a>, <a class=\"id\" href=\"#uuid_list\">uuid_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a>, <a class=\"id\" href=\"#str\">str</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_get\">dm_get</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * Inserting, removing and renaming a device.</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"static struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#alloc_cell\">alloc_cell</a>(const char *<a class=\"id\" href=\"#name\">name</a>, const char *<a class=\"id\" href=\"#uuid\">uuid</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#hc\">hc</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hc\">hc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#uuid\">uuid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#uuid\">uuid</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hc\">hc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name_list\">name_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid_list\">uuid_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#hc\">hc</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#free_cell\">free_cell</a>(struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#hc\">hc</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * The kdev_t and uuid of a device can never change once it is</span>", 
"<span class=\"comment\"> * initially inserted.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#dm_hash_insert\">dm_hash_insert</a>(const char *<a class=\"id\" href=\"#name\">name</a>, const char *<a class=\"id\" href=\"#uuid\">uuid</a>, struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#cell\">cell</a>, *<a class=\"id\" href=\"#hc\">hc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Allocate the new cells.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cell\">cell</a> = <a class=\"id\" href=\"#alloc_cell\">alloc_cell</a>(<a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#uuid\">uuid</a>, <a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#cell\">cell</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Insert the cell into both hash tables.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__get_name_cell\">__get_name_cell</a>(<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#cell\">cell</a>-><a class=\"id\" href=\"#name_list\">name_list</a>, <a class=\"id\" href=\"#_name_buckets\">_name_buckets</a> + <a class=\"id\" href=\"#hash_str\">hash_str</a>(<a class=\"id\" href=\"#name\">name</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#uuid\">uuid</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__get_uuid_cell\">__get_uuid_cell</a>(<a class=\"id\" href=\"#uuid\">uuid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#cell\">cell</a>-><a class=\"id\" href=\"#name_list\">name_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#bad\">bad</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#cell\">cell</a>-><a class=\"id\" href=\"#uuid_list\">uuid_list</a>, <a class=\"id\" href=\"#_uuid_buckets\">_uuid_buckets</a> + <a class=\"id\" href=\"#hash_str\">hash_str</a>(<a class=\"id\" href=\"#uuid\">uuid</a>));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_get\">dm_get</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_set_mdptr\">dm_set_mdptr</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#cell\">cell</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"", 
" <a class=\"id\" href=\"#bad\">bad</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cell\">free_cell</a>(<a class=\"id\" href=\"#cell\">cell</a>);", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EBUSY\">EBUSY</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#__hash_remove\">__hash_remove</a>(struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* remove from the dev hash */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid_list\">uuid_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name_list\">name_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_set_mdptr\">dm_set_mdptr</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_event\">dm_table_event</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_cell\">free_cell</a>(<a class=\"id\" href=\"#hc\">hc</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#dm_hash_remove_all\">dm_hash_remove_all</a>(int <a class=\"id\" href=\"#keep_open_devices\">keep_open_devices</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#dev_skipped\">dev_skipped</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<a class=\"id\" href=\"#retry\">retry</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dev_skipped\">dev_skipped</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#hc\">hc</a>, <a class=\"id\" href=\"#_name_buckets\">_name_buckets</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#name_list\">name_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_get\">dm_get</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#keep_open_devices\">keep_open_devices</a> && <a class=\"id\" href=\"#dm_lock_for_deletion\">dm_lock_for_deletion</a>(<a class=\"id\" href=\"#md\">md</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev_skipped\">dev_skipped</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__hash_remove\">__hash_remove</a>(<a class=\"id\" href=\"#hc\">hc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#likely\">likely</a>(<a class=\"id\" href=\"#keep_open_devices\">keep_open_devices</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_destroy\">dm_destroy</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_destroy_immediate\">dm_destroy_immediate</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Some mapped devices may be using other mapped</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * devices, so repeat until we make no further</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * progress.  If a new mapped device is created</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * here it will also get removed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#retry\">retry</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dev_skipped\">dev_skipped</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"remove_all left %d open device(s)\", <a class=\"id\" href=\"#dev_skipped\">dev_skipped</a>);", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#dm_hash_rename\">dm_hash_rename</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const char *<a class=\"id\" href=\"#new\">new</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#new_name\">new_name</a>, *<a class=\"id\" href=\"#old_name\">old_name</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * duplicate new.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_name\">new_name</a> = <a class=\"id\" href=\"#kstrdup\">kstrdup</a>(<a class=\"id\" href=\"#new\">new</a>, <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#new_name\">new_name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Is new free ?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__get_name_cell\">__get_name_cell</a>(<a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"asked to rename to an already-existing name %s -> %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EBUSY\">EBUSY</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Is there such a device as 'old' ?</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__get_name_cell\">__get_name_cell</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"asked to rename a non-existent device %s -> %s\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#new\">new</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#ENXIO\">ENXIO</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * rename and move the name cell.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name_list\">name_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#old_name\">old_name</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_lock\">mutex_lock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#new_name\">new_name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mutex_unlock\">mutex_unlock</a>(&amp;<a class=\"id\" href=\"#dm_hash_cells_mutex\">dm_hash_cells_mutex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name_list\">name_list</a>, <a class=\"id\" href=\"#_name_buckets\">_name_buckets</a> + <a class=\"id\" href=\"#hash_str\">hash_str</a>(<a class=\"id\" href=\"#new_name\">new_name</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Wake up any dm event waiters.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_event\">dm_table_event</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dm_kobject_uevent\">dm_kobject_uevent</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>, <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#event_nr\">event_nr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_UEVENT_GENERATED_FLAG\">DM_UEVENT_GENERATED_FLAG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#old_name\">old_name</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>;", 
"}", 
"", 
"<span class=\"comment\">/*-----------------------------------------------------------------</span>", 
"<span class=\"comment\"> * Implementation of the ioctl commands</span>", 
"<span class=\"comment\"> *---------------------------------------------------------------*/</span>", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * All the ioctl commands get dispatched to functions with this</span>", 
"<span class=\"comment\"> * prototype.</span>", 
"<span class=\"comment\"> */</span>", 
"typedef int (*<a class=\"id\" href=\"#ioctl_fn\">ioctl_fn</a>)(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>);", 
"", 
"static int <a class=\"id\" href=\"#remove_all\">remove_all</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_hash_remove_all\">dm_hash_remove_all</a>(1);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = 0;", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Round up the ptr to an 8-byte boundary.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#ALIGN_MASK\">ALIGN_MASK</a> 7", 
"static <a class=\"id\" href=\"#inline\">inline</a> void *<a class=\"id\" href=\"#align_ptr\">align_ptr</a>(void *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>return (void *) (((<a class=\"id\" href=\"#size_t\">size_t</a>) (<a class=\"id\" href=\"#ptr\">ptr</a> + <a class=\"id\" href=\"#ALIGN_MASK\">ALIGN_MASK</a>)) &amp; ~<a class=\"id\" href=\"#ALIGN_MASK\">ALIGN_MASK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Retrieves the data payload buffer from an already allocated</span>", 
"<span class=\"comment\"> * struct dm_ioctl.</span>", 
"<span class=\"comment\"> */</span>", 
"static void *<a class=\"id\" href=\"#get_result_buffer\">get_result_buffer</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a> = <a class=\"id\" href=\"#align_ptr\">align_ptr</a>(<a class=\"id\" href=\"#param\">param</a> + 1) - (void *) <a class=\"id\" href=\"#param\">param</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a> &lt; <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#param_size\">param_size</a> - <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = 0;", 
"", 
"<span class=\"ts\"/>return ((void *) <a class=\"id\" href=\"#param\">param</a>) + <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#list_devices\">list_devices</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#needed\">needed</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_name_list\">dm_name_list</a> *<a class=\"id\" href=\"#nl\">nl</a>, *<a class=\"id\" href=\"#old_nl\">old_nl</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Loop through all the devices working out how much</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * space we need.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a> (<a class=\"id\" href=\"#hc\">hc</a>, <a class=\"id\" href=\"#_name_buckets\">_name_buckets</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#name_list\">name_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> += sizeof(struct <a class=\"id\" href=\"#dm_name_list\">dm_name_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> += <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>) + 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#needed\">needed</a> += <a class=\"id\" href=\"#ALIGN_MASK\">ALIGN_MASK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Grab our output buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nl\">nl</a> = <a class=\"id\" href=\"#get_result_buffer\">get_result_buffer</a>(<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#needed\">needed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a> + <a class=\"id\" href=\"#needed\">needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#nl\">nl</a>-><a class=\"id\" href=\"#dev\">dev</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* Flags no data */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now loop through filling out the names.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#NUM_BUCKETS\">NUM_BUCKETS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a> (<a class=\"id\" href=\"#hc\">hc</a>, <a class=\"id\" href=\"#_name_buckets\">_name_buckets</a> + <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#name_list\">name_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#old_nl\">old_nl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_nl\">old_nl</a>-><a class=\"id\" href=\"#next\">next</a> = (<a class=\"id\" href=\"#uint32_t\">uint32_t</a>) ((void *) <a class=\"id\" href=\"#nl\">nl</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (void *) <a class=\"id\" href=\"#old_nl\">old_nl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#dm_disk\">dm_disk</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl\">nl</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#huge_encode_dev\">huge_encode_dev</a>(<a class=\"id\" href=\"#disk_devt\">disk_devt</a>(<a class=\"id\" href=\"#disk\">disk</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl\">nl</a>-><a class=\"id\" href=\"#next\">next</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#nl\">nl</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_nl\">old_nl</a> = <a class=\"id\" href=\"#nl\">nl</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nl\">nl</a> = <a class=\"id\" href=\"#align_ptr\">align_ptr</a>(((void *) ++<a class=\"id\" href=\"#nl\">nl</a>) + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>) + 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#list_version_get_needed\">list_version_get_needed</a>(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>, void *<a class=\"id\" href=\"#needed_param\">needed_param</a>)", 
"{", 
"    <a class=\"id\" href=\"#size_t\">size_t</a> *<a class=\"id\" href=\"#needed\">needed</a> = <a class=\"id\" href=\"#needed_param\">needed_param</a>;", 
"", 
"    *<a class=\"id\" href=\"#needed\">needed</a> += sizeof(struct <a class=\"id\" href=\"#dm_target_versions\">dm_target_versions</a>);", 
"    *<a class=\"id\" href=\"#needed\">needed</a> += <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"    *<a class=\"id\" href=\"#needed\">needed</a> += <a class=\"id\" href=\"#ALIGN_MASK\">ALIGN_MASK</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#list_version_get_info\">list_version_get_info</a>(struct <a class=\"id\" href=\"#target_type\">target_type</a> *<a class=\"id\" href=\"#tt\">tt</a>, void *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"    struct <a class=\"id\" href=\"#vers_iter\">vers_iter</a> *<a class=\"id\" href=\"#info\">info</a> = <a class=\"id\" href=\"#param\">param</a>;", 
"", 
"    <span class=\"comment\">/* Check space - it might have changed since the first iteration */</span>", 
"    if ((char *)<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a> + sizeof(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#version\">version</a>) + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>) + 1 &gt;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#end\">end</a>) {", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/>return;", 
"    }", 
"", 
"    if (<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#old_vers\">old_vers</a>)", 
"<span class=\"ts\"/><a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#old_vers\">old_vers</a>-><a class=\"id\" href=\"#next\">next</a> = (<a class=\"id\" href=\"#uint32_t\">uint32_t</a>) ((void *)<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   (void *)<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#old_vers\">old_vers</a>);", 
"    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a>-><a class=\"id\" href=\"#version\">version</a>[0] = <a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#version\">version</a>[0];", 
"    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a>-><a class=\"id\" href=\"#version\">version</a>[1] = <a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#version\">version</a>[1];", 
"    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a>-><a class=\"id\" href=\"#version\">version</a>[2] = <a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#version\">version</a>[2];", 
"    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a>-><a class=\"id\" href=\"#next\">next</a> = 0;", 
"    <a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#old_vers\">old_vers</a> = <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a>;", 
"    <a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a> = <a class=\"id\" href=\"#align_ptr\">align_ptr</a>(((void *) ++<a class=\"id\" href=\"#info\">info</a>-><a class=\"id\" href=\"#vers\">vers</a>) + <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#tt\">tt</a>-><a class=\"id\" href=\"#name\">name</a>) + 1);", 
"}", 
"", 
"static int <a class=\"id\" href=\"#list_versions\">list_versions</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#needed\">needed</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_target_versions\">dm_target_versions</a> *<a class=\"id\" href=\"#vers\">vers</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vers_iter\">vers_iter</a> <a class=\"id\" href=\"#iter_info\">iter_info</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Loop through all the devices working out how much</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * space we need.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_target_iterate\">dm_target_iterate</a>(<a class=\"id\" href=\"#list_version_get_needed\">list_version_get_needed</a>, &amp;<a class=\"id\" href=\"#needed\">needed</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Grab our output buffer.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vers\">vers</a> = <a class=\"id\" href=\"#get_result_buffer\">get_result_buffer</a>(<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#param_size\">param_size</a>, &amp;<a class=\"id\" href=\"#len\">len</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; <a class=\"id\" href=\"#needed\">needed</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_BUFFER_FULL_FLAG\">DM_BUFFER_FULL_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a> + <a class=\"id\" href=\"#needed\">needed</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter_info\">iter_info</a>.<a class=\"id\" href=\"#param_size\">param_size</a> = <a class=\"id\" href=\"#param_size\">param_size</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter_info\">iter_info</a>.<a class=\"id\" href=\"#old_vers\">old_vers</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter_info\">iter_info</a>.<a class=\"id\" href=\"#vers\">vers</a> = <a class=\"id\" href=\"#vers\">vers</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter_info\">iter_info</a>.<a class=\"id\" href=\"#flags\">flags</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#iter_info\">iter_info</a>.<a class=\"id\" href=\"#end\">end</a> = (char *)<a class=\"id\" href=\"#vers\">vers</a>+<a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now loop through filling out the names &amp; versions.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_target_iterate\">dm_target_iterate</a>(<a class=\"id\" href=\"#list_version_get_info\">list_version_get_info</a>, &amp;<a class=\"id\" href=\"#iter_info\">iter_info</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#iter_info\">iter_info</a>.<a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#check_name\">check_name</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strchr\">strchr</a>(<a class=\"id\" href=\"#name\">name</a>, '/')) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"invalid device name\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * On successful return, the caller must not attempt to acquire</span>", 
"<span class=\"comment\"> * _hash_lock without first calling dm_table_put, because dm_table_destroy</span>", 
"<span class=\"comment\"> * waits for this dm_table_put and could be called under this lock.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#dm_get_inactive_table\">dm_get_inactive_table</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#dm_get_mdptr\">dm_get_mdptr</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a> || <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a> != <a class=\"id\" href=\"#md\">md</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"device has been removed from the dev hash table.\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_get\">dm_table_get</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#table\">table</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#dm_get_live_or_inactive_table\">dm_get_live_or_inactive_table</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_QUERY_INACTIVE_TABLE_FLAG\">DM_QUERY_INACTIVE_TABLE_FLAG</a>) ?", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_get_inactive_table\">dm_get_inactive_table</a>(<a class=\"id\" href=\"#md\">md</a>) : <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Fills in a dm_ioctl structure, ready for sending back to</span>", 
"<span class=\"comment\"> * userland.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__dev_status\">__dev_status</a>(struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>, struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#gendisk\">gendisk</a> *<a class=\"id\" href=\"#disk\">disk</a> = <a class=\"id\" href=\"#dm_disk\">dm_disk</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#table\">table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~(<a class=\"id\" href=\"#DM_SUSPEND_FLAG\">DM_SUSPEND_FLAG</a> | <a class=\"id\" href=\"#DM_READONLY_FLAG\">DM_READONLY_FLAG</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#DM_ACTIVE_PRESENT_FLAG\">DM_ACTIVE_PRESENT_FLAG</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_suspended_md\">dm_suspended_md</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_SUSPEND_FLAG\">DM_SUSPEND_FLAG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#huge_encode_dev\">huge_encode_dev</a>(<a class=\"id\" href=\"#disk_devt\">disk_devt</a>(<a class=\"id\" href=\"#disk\">disk</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Yes, this will be out of date by the time it gets back</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * to userland, but it is still very useful for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * debugging.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#open_count\">open_count</a> = <a class=\"id\" href=\"#dm_open_count\">dm_open_count</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#event_nr\">event_nr</a> = <a class=\"id\" href=\"#dm_get_event_nr\">dm_get_event_nr</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#target_count\">target_count</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_live_table\">dm_get_live_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_QUERY_INACTIVE_TABLE_FLAG\">DM_QUERY_INACTIVE_TABLE_FLAG</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_disk_ro\">get_disk_ro</a>(<a class=\"id\" href=\"#disk\">disk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_READONLY_FLAG\">DM_READONLY_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#target_count\">target_count</a> = <a class=\"id\" href=\"#dm_table_get_num_targets\">dm_table_get_num_targets</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_ACTIVE_PRESENT_FLAG\">DM_ACTIVE_PRESENT_FLAG</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_QUERY_INACTIVE_TABLE_FLAG\">DM_QUERY_INACTIVE_TABLE_FLAG</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#table\">table</a> = <a class=\"id\" href=\"#dm_get_inactive_table\">dm_get_inactive_table</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#table\">table</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#dm_table_get_mode\">dm_table_get_mode</a>(<a class=\"id\" href=\"#table\">table</a>) &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_READONLY_FLAG\">DM_READONLY_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#target_count\">target_count</a> = <a class=\"id\" href=\"#dm_table_get_num_targets\">dm_table_get_num_targets</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_put\">dm_table_put</a>(<a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dev_create\">dev_create</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#DM_ANY_MINOR\">DM_ANY_MINOR</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#check_name\">check_name</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_PERSISTENT_DEV_FLAG\">DM_PERSISTENT_DEV_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#m\">m</a> = <a class=\"id\" href=\"#MINOR\">MINOR</a>(<a class=\"id\" href=\"#huge_decode_dev\">huge_decode_dev</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#dev\">dev</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_create\">dm_create</a>(<a class=\"id\" href=\"#m\">m</a>, &amp;<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_hash_insert\">dm_hash_insert</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>, *<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a> ? <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a> : <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_destroy\">dm_destroy</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#DM_INACTIVE_PRESENT_FLAG\">DM_INACTIVE_PRESENT_FLAG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Always use UUID for lookups if it's present, otherwise use name or dev.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#__find_device_hash_cell\">__find_device_hash_cell</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>void *<a class=\"id\" href=\"#mdptr\">mdptr</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__get_uuid_cell\">__get_uuid_cell</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a>);", 
"", 
"<span class=\"ts\"/>if (*<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#__get_name_cell\">__get_name_cell</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#dm_get_md\">dm_get_md</a>(<a class=\"id\" href=\"#huge_decode_dev\">huge_decode_dev</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#dev\">dev</a>));", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#mdptr\">mdptr</a> = <a class=\"id\" href=\"#dm_get_mdptr\">dm_get_mdptr</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#mdptr\">mdptr</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#mdptr\">mdptr</a>;", 
"}", 
"", 
"static struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#find_device\">find_device</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_read\">down_read</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__find_device_hash_cell\">__find_device_hash_cell</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Sneakily write in both the name and the uuid</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * while we have the cell.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>, sizeof(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#name\">name</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strlcpy\">strlcpy</a>(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a>, <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#uuid\">uuid</a>, sizeof(<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#uuid\">uuid</a>[0] = '\\0';", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_INACTIVE_PRESENT_FLAG\">DM_INACTIVE_PRESENT_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#DM_INACTIVE_PRESENT_FLAG\">DM_INACTIVE_PRESENT_FLAG</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_read\">up_read</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#md\">md</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dev_remove\">dev_remove</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__find_device_hash_cell\">__find_device_hash_cell</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"device doesn't appear to be in the dev hash table.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Ensure the device is not open and nothing further can open it.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_lock_for_deletion\">dm_lock_for_deletion</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"unable to remove open device %s\", <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__hash_remove\">__hash_remove</a>(<a class=\"id\" href=\"#hc\">hc</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dm_kobject_uevent\">dm_kobject_uevent</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#KOBJ_REMOVE\">KOBJ_REMOVE</a>, <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#event_nr\">event_nr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_UEVENT_GENERATED_FLAG\">DM_UEVENT_GENERATED_FLAG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_destroy\">dm_destroy</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Check a string doesn't overrun the chunk of</span>", 
"<span class=\"comment\"> * memory we copied from userland.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#invalid_str\">invalid_str</a>(char *<a class=\"id\" href=\"#str\">str</a>, void *<a class=\"id\" href=\"#end\">end</a>)", 
"{", 
"<span class=\"ts\"/>while ((void *) <a class=\"id\" href=\"#str\">str</a> &lt; <a class=\"id\" href=\"#end\">end</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#str\">str</a>++)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dev_rename\">dev_rename</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#new_name\">new_name</a> = (char *) <a class=\"id\" href=\"#param\">param</a> + <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_name\">new_name</a> &lt; <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data\">data</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#invalid_str\">invalid_str</a>(<a class=\"id\" href=\"#new_name\">new_name</a>, (void *) <a class=\"id\" href=\"#param\">param</a> + <a class=\"id\" href=\"#param_size\">param_size</a>) ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#new_name\">new_name</a>) &gt; <a class=\"id\" href=\"#DM_NAME_LEN\">DM_NAME_LEN</a> - 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Invalid new logical volume name supplied.\");", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#check_name\">check_name</a>(<a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#dm_hash_rename\">dm_hash_rename</a>(<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#new_name\">new_name</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#dev_set_geometry\">dev_set_geometry</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#param_size\">param_size</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>, <a class=\"id\" href=\"#x\">x</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hd_geometry\">hd_geometry</a> <a class=\"id\" href=\"#geometry\">geometry</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#indata\">indata</a>[4];", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#geostr\">geostr</a> = (char *) <a class=\"id\" href=\"#param\">param</a> + <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_start\">data_start</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#geostr\">geostr</a> &lt; <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data\">data</a> ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#invalid_str\">invalid_str</a>(<a class=\"id\" href=\"#geostr\">geostr</a>, (void *) <a class=\"id\" href=\"#param\">param</a> + <a class=\"id\" href=\"#param_size\">param_size</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Invalid geometry supplied.\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#sscanf\">sscanf</a>(<a class=\"id\" href=\"#geostr\">geostr</a>, \"%lu %lu %lu %lu\", <a class=\"id\" href=\"#indata\">indata</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#indata\">indata</a> + 1, <a class=\"id\" href=\"#indata\">indata</a> + 2, <a class=\"id\" href=\"#indata\">indata</a> + 3);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x\">x</a> != 4) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Unable to interpret geometry settings.\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#indata\">indata</a>[0] &gt; 65535 || <a class=\"id\" href=\"#indata\">indata</a>[1] &gt; 255 ||", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#indata\">indata</a>[2] &gt; 255 || <a class=\"id\" href=\"#indata\">indata</a>[3] &gt; <a class=\"id\" href=\"#ULONG_MAX\">ULONG_MAX</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"Geometry exceeds range limits.\");", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#geometry\">geometry</a>.<a class=\"id\" href=\"#cylinders\">cylinders</a> = <a class=\"id\" href=\"#indata\">indata</a>[0];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#geometry\">geometry</a>.<a class=\"id\" href=\"#heads\">heads</a> = <a class=\"id\" href=\"#indata\">indata</a>[1];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#geometry\">geometry</a>.<a class=\"id\" href=\"#sectors\">sectors</a> = <a class=\"id\" href=\"#indata\">indata</a>[2];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#geometry\">geometry</a>.<a class=\"id\" href=\"#start\">start</a> = <a class=\"id\" href=\"#indata\">indata</a>[3];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_set_geometry\">dm_set_geometry</a>(<a class=\"id\" href=\"#md\">md</a>, &amp;<a class=\"id\" href=\"#geometry\">geometry</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#data_size\">data_size</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_suspend\">do_suspend</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#suspend_flags\">suspend_flags</a> = <a class=\"id\" href=\"#DM_SUSPEND_LOCKFS_FLAG\">DM_SUSPEND_LOCKFS_FLAG</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#find_device\">find_device</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#md\">md</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_SKIP_LOCKFS_FLAG\">DM_SKIP_LOCKFS_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_flags\">suspend_flags</a> &= ~<a class=\"id\" href=\"#DM_SUSPEND_LOCKFS_FLAG\">DM_SUSPEND_LOCKFS_FLAG</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_NOFLUSH_FLAG\">DM_NOFLUSH_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_flags\">suspend_flags</a> |= <a class=\"id\" href=\"#DM_SUSPEND_NOFLUSH_FLAG\">DM_SUSPEND_NOFLUSH_FLAG</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dm_suspended_md\">dm_suspended_md</a>(<a class=\"id\" href=\"#md\">md</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_suspend\">dm_suspend</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#suspend_flags\">suspend_flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__dev_status\">__dev_status</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#param\">param</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#do_resume\">do_resume</a>(struct <a class=\"id\" href=\"#dm_ioctl\">dm_ioctl</a> *<a class=\"id\" href=\"#param\">param</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#r\">r</a> = 0;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#suspend_flags\">suspend_flags</a> = <a class=\"id\" href=\"#DM_SUSPEND_LOCKFS_FLAG\">DM_SUSPEND_LOCKFS_FLAG</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hash_cell\">hash_cell</a> *<a class=\"id\" href=\"#hc\">hc</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#mapped_device\">mapped_device</a> *<a class=\"id\" href=\"#md\">md</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dm_table\">dm_table</a> *<a class=\"id\" href=\"#new_map\">new_map</a>, *<a class=\"id\" href=\"#old_map\">old_map</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#down_write\">down_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a> = <a class=\"id\" href=\"#__find_device_hash_cell\">__find_device_hash_cell</a>(<a class=\"id\" href=\"#param\">param</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#hc\">hc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMWARN\">DMWARN</a>(\"device doesn't appear to be in the dev hash table.\");", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENXIO\">ENXIO</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#md\">md</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#md\">md</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#new_map\">new_map</a> = <a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hc\">hc</a>-><a class=\"id\" href=\"#new_map\">new_map</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &= ~<a class=\"id\" href=\"#DM_INACTIVE_PRESENT_FLAG\">DM_INACTIVE_PRESENT_FLAG</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#up_write\">up_write</a>(&amp;<a class=\"id\" href=\"#_hash_lock\">_hash_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Do we need to load a new map ? */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#new_map\">new_map</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Suspend if it isn't already suspended */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_SKIP_LOCKFS_FLAG\">DM_SKIP_LOCKFS_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_flags\">suspend_flags</a> &= ~<a class=\"id\" href=\"#DM_SUSPEND_LOCKFS_FLAG\">DM_SUSPEND_LOCKFS_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#DM_NOFLUSH_FLAG\">DM_NOFLUSH_FLAG</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#suspend_flags\">suspend_flags</a> |= <a class=\"id\" href=\"#DM_SUSPEND_NOFLUSH_FLAG\">DM_SUSPEND_NOFLUSH_FLAG</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dm_suspended_md\">dm_suspended_md</a>(<a class=\"id\" href=\"#md\">md</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_suspend\">dm_suspend</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#suspend_flags\">suspend_flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#old_map\">old_map</a> = <a class=\"id\" href=\"#dm_swap_table\">dm_swap_table</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#new_map\">new_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#old_map\">old_map</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#new_map\">new_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_put\">dm_put</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#old_map\">old_map</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_table_get_mode\">dm_table_get_mode</a>(<a class=\"id\" href=\"#new_map\">new_map</a>) &amp; <a class=\"id\" href=\"#FMODE_WRITE\">FMODE_WRITE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_disk_ro\">set_disk_ro</a>(<a class=\"id\" href=\"#dm_disk\">dm_disk</a>(<a class=\"id\" href=\"#md\">md</a>), 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_disk_ro\">set_disk_ro</a>(<a class=\"id\" href=\"#dm_disk\">dm_disk</a>(<a class=\"id\" href=\"#md\">md</a>), 1);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dm_suspended_md\">dm_suspended_md</a>(<a class=\"id\" href=\"#md\">md</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#dm_resume\">dm_resume</a>(<a class=\"id\" href=\"#md\">md</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a> && !<a class=\"id\" href=\"#dm_kobject_uevent\">dm_kobject_uevent</a>(<a class=\"id\" href=\"#md\">md</a>, <a class=\"id\" href=\"#KOBJ_CHANGE\">KOBJ_CHANGE</a>, <a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#event_nr\">event_nr</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#param\">param</a>-><a class=\"id\" href=\"#flags\">flags</a> |= <a class=\"id\" href=\"#DM_UEVENT_GENERATED_FLAG\">DM_UEVENT_GENERATED_FLAG</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#old_map\">old_map</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dm_table_destroy\">dm_table_destroy</a>(<a class=\"id\" href=\"#old_map\">old_map</a>);", 
];
xr_frag_insert('l/44/a5d59f1c1355b9fee12cbd70693504d0096323.xr', __xr_tmp);
