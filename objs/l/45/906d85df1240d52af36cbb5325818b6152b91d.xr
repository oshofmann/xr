var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * INET<span class=\"ts\"/><span class=\"ts\"/>An implementation of the TCP/IP protocol suite for the LINUX</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>operating system.  INET is implemented using the  BSD Socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>interface as the means of communication with the user level.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Generic socket support routines. Memory allocators, socket lock/release</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>handler for protocols to use and generic option handler.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Ross Biro</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Fred N. van Kempen, &lt;waltje@uWalt.NL.Mugnet.ORG&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Florian La Roche, &lt;flla@stud.uni-sb.de&gt;</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox, &lt;A.Cox@swansea.ac.uk&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Fixes:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>: <span class=\"ts\"/>Numerous verify_area() problems</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Connecting on a connecting socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>now returns an error for tcp.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>sock-&gt;protocol is set correctly.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and is not sometimes left as 0.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>connect handles icmp errors on a</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>connect properly. Unfortunately there</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>is a restart syscall nasty there. I</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>can't match BSD without hacking the C</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>library. Ideas urgently sought!</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Disallow bind() to addresses that are</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>not ours - especially broadcast ones!!</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Socket 1024 _IS_ ok for users. (fencepost)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>sock_wfree/sock_rfree don't destroy sockets,</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>instead they leave that for the DESTROY timer.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Clean up error flag in accept</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>TCP ack handling is buggy, the DESTROY timer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>was buggy. Put a remove_sock() in the handler</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>for memory when we hit 0. Also altered the timer</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>code. The ACK stuff can wait and needs major</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>TCP layer surgery.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed TCP ack bug, removed remove sock</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>and fixed timer/inet_bh race.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Added zapped flag for TCP</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Move kfree_skb into skbuff.c and tidied up surplus code</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>for new sk_buff allocations wmalloc/rmalloc now call alloc_skb</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>kfree_s calls now are kfree_skbmem so we can track skb resources</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Supports socket option broadcast now as does udp. Packet and raw need fixing.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Added RCVBUF,SNDBUF size setting. It suddenly occurred to me how easy it was so...</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Rick Sladkey<span class=\"ts\"/>:<span class=\"ts\"/>Relaxed UDP rules for matching packets.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>C.E.Hawkins<span class=\"ts\"/>:<span class=\"ts\"/>IFF_PROMISC/SIOCGHWADDR support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Pauline Middelink<span class=\"ts\"/>:<span class=\"ts\"/>identd support</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed connect() taking signals I think.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>SO_LINGER supported</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Error reporting fixes</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Anonymous<span class=\"ts\"/>:<span class=\"ts\"/>inet_create tidied up (sk-&gt;reuse setting)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>inet sockets don't set sk-&gt;type!</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Split socket option code</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Callbacks</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Nagle flag for Charles &amp; Johannes stuff</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alex<span class=\"ts\"/><span class=\"ts\"/>:<span class=\"ts\"/>Removed restriction on inet fioctl</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Splitting INET from NET core</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Fixed bogus SO_TYPE handling in getsockopt()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Adam Caldwell<span class=\"ts\"/>:<span class=\"ts\"/>Missing return in SO_DONTROUTE/SO_DEBUG code</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Split IP from generic code</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>New kfree_skbmem()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Make SO_DEBUG superuser only.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Allow anyone to clear SO_DEBUG</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(compatibility fix)</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Added optimistic memory grabbing for AF_UNIX throughput.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Allocator for a socket is settable.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>SO_ERROR includes soft errors.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>:<span class=\"ts\"/>Allow NULL arguments on some SO_ opts</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Alan Cox<span class=\"ts\"/>: <span class=\"ts\"/>Generic socket allocation to make hooks</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>easier (suggested by Craig Metz).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Michael Pall<span class=\"ts\"/>:<span class=\"ts\"/>SO_ERROR returns positive errno again</span>", 
"<span class=\"comment\"> *              Steve Whitehouse:       Added default destructor to free</span>", 
"<span class=\"comment\"> *                                      protocol private data.</span>", 
"<span class=\"comment\"> *              Steve Whitehouse:       Added various other default routines</span>", 
"<span class=\"comment\"> *                                      common to several socket families.</span>", 
"<span class=\"comment\"> *              Chris Evans     :       Call suser() check last on F_SETOWN</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Jay Schulist<span class=\"ts\"/>:<span class=\"ts\"/>Added SO_ATTACH_FILTER and SO_DETACH_FILTER.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen<span class=\"ts\"/>:<span class=\"ts\"/>Add sock_kmalloc()/sock_kfree_s()</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Andi Kleen<span class=\"ts\"/>:<span class=\"ts\"/>Fix write_space callback</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Chris Evans<span class=\"ts\"/>:<span class=\"ts\"/>Security fixes - signedness again</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Arnaldo C. Melo :       cleanups, use skb_queue_purge</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * To Fix:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#capability\">capability</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#errno\">errno</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#socket\">socket</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#in\">in</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#timer\">timer</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#string\">string</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sockios\">sockios</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net\">net</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#mm\">mm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#poll\">poll</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#highmem\">highmem</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#user_namespace\">user_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#uaccess\">uaccess</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#system\">system</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#netdevice\">netdevice</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#protocol\">protocol</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#skbuff\">skbuff</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#net_namespace\">net_namespace</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#request_sock\">request_sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#net_tstamp\">net_tstamp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#xfrm\">xfrm</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#ipsec\">ipsec</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#cls_cgroup\">cls_cgroup</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#filter\">filter</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INET\">CONFIG_INET</a>", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#tcp\">tcp</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Each address family might have different locking rules, so we have</span>", 
"<span class=\"comment\"> * one slock key per address family:</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#lock_class_key\">lock_class_key</a> <a class=\"id\" href=\"#af_family_keys\">af_family_keys</a>[<a class=\"id\" href=\"#AF_MAX\">AF_MAX</a>];", 
"static struct <a class=\"id\" href=\"#lock_class_key\">lock_class_key</a> <a class=\"id\" href=\"#af_family_slock_keys\">af_family_slock_keys</a>[<a class=\"id\" href=\"#AF_MAX\">AF_MAX</a>];", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Make lock validator output more readable. (we pre-construct these</span>", 
"<span class=\"comment\"> * strings build-time, so that runtime initialization of socket</span>", 
"<span class=\"comment\"> * locks is fast):</span>", 
"<span class=\"comment\"> */</span>", 
"static const char *const <a class=\"id\" href=\"#af_family_key_strings\">af_family_key_strings</a>[<a class=\"id\" href=\"#AF_MAX\">AF_MAX</a>+1] = {", 
"  \"sk_lock-AF_UNSPEC\", \"sk_lock-AF_UNIX\"     , \"sk_lock-AF_INET\"     ,", 
"  \"sk_lock-AF_AX25\"  , \"sk_lock-AF_IPX\"      , \"sk_lock-AF_APPLETALK\",", 
"  \"sk_lock-AF_NETROM\", \"sk_lock-AF_BRIDGE\"   , \"sk_lock-AF_ATMPVC\"   ,", 
"  \"sk_lock-AF_X25\"   , \"sk_lock-AF_INET6\"    , \"sk_lock-AF_ROSE\"     ,", 
"  \"sk_lock-AF_DECnet\", \"sk_lock-AF_NETBEUI\"  , \"sk_lock-AF_SECURITY\" ,", 
"  \"sk_lock-AF_KEY\"   , \"sk_lock-AF_NETLINK\"  , \"sk_lock-AF_PACKET\"   ,", 
"  \"sk_lock-AF_ASH\"   , \"sk_lock-AF_ECONET\"   , \"sk_lock-AF_ATMSVC\"   ,", 
"  \"sk_lock-AF_RDS\"   , \"sk_lock-AF_SNA\"      , \"sk_lock-AF_IRDA\"     ,", 
"  \"sk_lock-AF_PPPOX\" , \"sk_lock-AF_WANPIPE\"  , \"sk_lock-AF_LLC\"      ,", 
"  \"sk_lock-27\"       , \"sk_lock-28\"          , \"sk_lock-AF_CAN\"      ,", 
"  \"sk_lock-AF_TIPC\"  , \"sk_lock-AF_BLUETOOTH\", \"sk_lock-IUCV\"        ,", 
"  \"sk_lock-AF_RXRPC\" , \"sk_lock-AF_ISDN\"     , \"sk_lock-AF_PHONET\"   ,", 
"  \"sk_lock-AF_IEEE802154\", \"sk_lock-AF_CAIF\" ,", 
"  \"sk_lock-AF_MAX\"", 
"};", 
"static const char *const <a class=\"id\" href=\"#af_family_slock_key_strings\">af_family_slock_key_strings</a>[<a class=\"id\" href=\"#AF_MAX\">AF_MAX</a>+1] = {", 
"  \"slock-AF_UNSPEC\", \"slock-AF_UNIX\"     , \"slock-AF_INET\"     ,", 
"  \"slock-AF_AX25\"  , \"slock-AF_IPX\"      , \"slock-AF_APPLETALK\",", 
"  \"slock-AF_NETROM\", \"slock-AF_BRIDGE\"   , \"slock-AF_ATMPVC\"   ,", 
"  \"slock-AF_X25\"   , \"slock-AF_INET6\"    , \"slock-AF_ROSE\"     ,", 
"  \"slock-AF_DECnet\", \"slock-AF_NETBEUI\"  , \"slock-AF_SECURITY\" ,", 
"  \"slock-AF_KEY\"   , \"slock-AF_NETLINK\"  , \"slock-AF_PACKET\"   ,", 
"  \"slock-AF_ASH\"   , \"slock-AF_ECONET\"   , \"slock-AF_ATMSVC\"   ,", 
"  \"slock-AF_RDS\"   , \"slock-AF_SNA\"      , \"slock-AF_IRDA\"     ,", 
"  \"slock-AF_PPPOX\" , \"slock-AF_WANPIPE\"  , \"slock-AF_LLC\"      ,", 
"  \"slock-27\"       , \"slock-28\"          , \"slock-AF_CAN\"      ,", 
"  \"slock-AF_TIPC\"  , \"slock-AF_BLUETOOTH\", \"slock-AF_IUCV\"     ,", 
"  \"slock-AF_RXRPC\" , \"slock-AF_ISDN\"     , \"slock-AF_PHONET\"   ,", 
"  \"slock-AF_IEEE802154\", \"slock-AF_CAIF\" ,", 
"  \"slock-AF_MAX\"", 
"};", 
"static const char *const <a class=\"id\" href=\"#af_family_clock_key_strings\">af_family_clock_key_strings</a>[<a class=\"id\" href=\"#AF_MAX\">AF_MAX</a>+1] = {", 
"  \"clock-AF_UNSPEC\", \"clock-AF_UNIX\"     , \"clock-AF_INET\"     ,", 
"  \"clock-AF_AX25\"  , \"clock-AF_IPX\"      , \"clock-AF_APPLETALK\",", 
"  \"clock-AF_NETROM\", \"clock-AF_BRIDGE\"   , \"clock-AF_ATMPVC\"   ,", 
"  \"clock-AF_X25\"   , \"clock-AF_INET6\"    , \"clock-AF_ROSE\"     ,", 
"  \"clock-AF_DECnet\", \"clock-AF_NETBEUI\"  , \"clock-AF_SECURITY\" ,", 
"  \"clock-AF_KEY\"   , \"clock-AF_NETLINK\"  , \"clock-AF_PACKET\"   ,", 
"  \"clock-AF_ASH\"   , \"clock-AF_ECONET\"   , \"clock-AF_ATMSVC\"   ,", 
"  \"clock-AF_RDS\"   , \"clock-AF_SNA\"      , \"clock-AF_IRDA\"     ,", 
"  \"clock-AF_PPPOX\" , \"clock-AF_WANPIPE\"  , \"clock-AF_LLC\"      ,", 
"  \"clock-27\"       , \"clock-28\"          , \"clock-AF_CAN\"      ,", 
"  \"clock-AF_TIPC\"  , \"clock-AF_BLUETOOTH\", \"clock-AF_IUCV\"     ,", 
"  \"clock-AF_RXRPC\" , \"clock-AF_ISDN\"     , \"clock-AF_PHONET\"   ,", 
"  \"clock-AF_IEEE802154\", \"clock-AF_CAIF\" ,", 
"  \"clock-AF_MAX\"", 
"};", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * sk_callback_lock locking rules are per-address-family,</span>", 
"<span class=\"comment\"> * so split the lock classes by using a per-AF key:</span>", 
"<span class=\"comment\"> */</span>", 
"static struct <a class=\"id\" href=\"#lock_class_key\">lock_class_key</a> <a class=\"id\" href=\"#af_callback_keys\">af_callback_keys</a>[<a class=\"id\" href=\"#AF_MAX\">AF_MAX</a>];", 
"", 
"<span class=\"comment\">/* Take into consideration the size of the struct sk_buff overhead in the</span>", 
"<span class=\"comment\"> * determination of these values, since that is non-constant across</span>", 
"<span class=\"comment\"> * platforms.  This makes socket queueing behavior and performance</span>", 
"<span class=\"comment\"> * not depend upon such differences.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SK_MEM_PACKETS\">_SK_MEM_PACKETS</a><span class=\"ts\"/><span class=\"ts\"/>256", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_SK_MEM_OVERHEAD\">_SK_MEM_OVERHEAD</a><span class=\"ts\"/>(sizeof(struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>) + 256)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SK_WMEM_MAX\">SK_WMEM_MAX</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#_SK_MEM_OVERHEAD\">_SK_MEM_OVERHEAD</a> * <a class=\"id\" href=\"#_SK_MEM_PACKETS\">_SK_MEM_PACKETS</a>)", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#SK_RMEM_MAX\">SK_RMEM_MAX</a><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#_SK_MEM_OVERHEAD\">_SK_MEM_OVERHEAD</a> * <a class=\"id\" href=\"#_SK_MEM_PACKETS\">_SK_MEM_PACKETS</a>)", 
"", 
"<span class=\"comment\">/* Run time adjustable parameters. */</span>", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#sysctl_wmem_max\">sysctl_wmem_max</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#SK_WMEM_MAX\">SK_WMEM_MAX</a>;", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#sysctl_rmem_max\">sysctl_rmem_max</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#SK_RMEM_MAX\">SK_RMEM_MAX</a>;", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#sysctl_wmem_default\">sysctl_wmem_default</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#SK_WMEM_MAX\">SK_WMEM_MAX</a>;", 
"<a class=\"id\" href=\"#__u32\">__u32</a> <a class=\"id\" href=\"#sysctl_rmem_default\">sysctl_rmem_default</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = <a class=\"id\" href=\"#SK_RMEM_MAX\">SK_RMEM_MAX</a>;", 
"", 
"<span class=\"comment\">/* Maximal space eaten by iovec or ancilliary data plus some space */</span>", 
"int <a class=\"id\" href=\"#sysctl_optmem_max\">sysctl_optmem_max</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a> = sizeof(unsigned long)*(2*<a class=\"id\" href=\"#UIO_MAXIOV\">UIO_MAXIOV</a>+512);", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sysctl_optmem_max\">sysctl_optmem_max</a>);", 
"", 
"#if <a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_CGROUPS\">CONFIG_CGROUPS</a>) && !<a class=\"id\" href=\"#defined\">defined</a>(<a class=\"id\" href=\"#CONFIG_NET_CLS_CGROUP\">CONFIG_NET_CLS_CGROUP</a>)", 
"int <a class=\"id\" href=\"#net_cls_subsys_id\">net_cls_subsys_id</a> = -1;", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#net_cls_subsys_id\">net_cls_subsys_id</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"static int <a class=\"id\" href=\"#sock_set_timeout\">sock_set_timeout</a>(long *<a class=\"id\" href=\"#timeo_p\">timeo_p</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#tv\">tv</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &lt; sizeof(<a class=\"id\" href=\"#tv\">tv</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#tv\">tv</a>, <a class=\"id\" href=\"#optval\">optval</a>, sizeof(<a class=\"id\" href=\"#tv\">tv</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> &lt; 0 || <a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> >= <a class=\"id\" href=\"#USEC_PER_SEC\">USEC_PER_SEC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EDOM\">EDOM</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>static int <a class=\"id\" href=\"#warned\">warned</a> <a class=\"id\" href=\"#__read_mostly\">__read_mostly</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#timeo_p\">timeo_p</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#warned\">warned</a> &lt; 10 && <a class=\"id\" href=\"#net_ratelimit\">net_ratelimit</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warned\">warned</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_INFO\">KERN_INFO</a> \"sock_set_timeout: `%s' (pid %d) \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \"tries to set negative timeout\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>, <a class=\"id\" href=\"#task_pid_nr\">task_pid_nr</a>(<a class=\"id\" href=\"#current\">current</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#timeo_p\">timeo_p</a> = <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> == 0 && <a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a> &lt; (<a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>/<a class=\"id\" href=\"#HZ\">HZ</a> - 1))", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#timeo_p\">timeo_p</a> = <a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_sec\">tv_sec</a>*<a class=\"id\" href=\"#HZ\">HZ</a> + (<a class=\"id\" href=\"#tv\">tv</a>.<a class=\"id\" href=\"#tv_usec\">tv_usec</a>+(1000000/<a class=\"id\" href=\"#HZ\">HZ</a>-1))/(1000000/<a class=\"id\" href=\"#HZ\">HZ</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sock_warn_obsolete_bsdism\">sock_warn_obsolete_bsdism</a>(const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>static int <a class=\"id\" href=\"#warned\">warned</a>;", 
"<span class=\"ts\"/>static char <a class=\"id\" href=\"#warncomm\">warncomm</a>[<a class=\"id\" href=\"#TASK_COMM_LEN\">TASK_COMM_LEN</a>];", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#warncomm\">warncomm</a>, <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>) && <a class=\"id\" href=\"#warned\">warned</a> &lt; 5) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#warncomm\">warncomm</a>,  <a class=\"id\" href=\"#current\">current</a>-><a class=\"id\" href=\"#comm\">comm</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"process `%s' is using obsolete \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"%s SO_BSDCOMPAT\\n\", <a class=\"id\" href=\"#warncomm\">warncomm</a>, <a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#warned\">warned</a>++;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static void <a class=\"id\" href=\"#sock_disable_timestamp\">sock_disable_timestamp</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#flag\">flag</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#flag\">flag</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMP\">SOCK_TIMESTAMP</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_SOFTWARE\">SOCK_TIMESTAMPING_RX_SOFTWARE</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#net_disable_timestamp\">net_disable_timestamp</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"", 
"int <a class=\"id\" href=\"#sock_queue_rcv_skb\">sock_queue_rcv_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#skb_len\">skb_len</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sk_buff_head\">sk_buff_head</a> *<a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_receive_queue\">sk_receive_queue</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cast sk-&gt;rcvbuf to unsigned... It's pointless, but reduces</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   number of warnings when compiling with -W --ANK</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rmem_alloc\">sk_rmem_alloc</a>) + <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a> >=", 
"<span class=\"ts\"/>    (unsigned)<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#sk_filter\">sk_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sk_rmem_schedule\">sk_rmem_schedule</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#truesize\">truesize</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOBUFS\">ENOBUFS</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_set_owner_r\">skb_set_owner_r</a>(<a class=\"id\" href=\"#skb\">skb</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Cache the SKB length before we tack it onto the receive</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * queue.  Once it is added it no longer belongs to us and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * may be freed by other threads of control pulling packets</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * from the queue.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_len\">skb_len</a> = <a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* we escape from rcu protected region, make sure we dont leak</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * a norefcounted dst</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb_dst_force\">skb_dst_force</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#list\">list</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dropcount\">dropcount</a> = <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__skb_queue_tail\">__skb_queue_tail</a>(<a class=\"id\" href=\"#list\">list</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#list\">list</a>-><a class=\"id\" href=\"#lock\">lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DEAD\">SOCK_DEAD</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_data_ready\">sk_data_ready</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb_len\">skb_len</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sock_queue_rcv_skb\">sock_queue_rcv_skb</a>);", 
"", 
"int <a class=\"id\" href=\"#sk_receive_skb\">sk_receive_skb</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>, const int <a class=\"id\" href=\"#nested\">nested</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#NET_RX_SUCCESS\">NET_RX_SUCCESS</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_filter\">sk_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#skb\">skb</a>-><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sk_rcvqueues_full\">sk_rcvqueues_full</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#nested\">nested</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock_nested\">bh_lock_sock_nested</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh_lock_sock\">bh_lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#sock_owned_by_user\">sock_owned_by_user</a>(<a class=\"id\" href=\"#sk\">sk</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * trylock + unlock semantics:</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_acquire\">mutex_acquire</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lock\">sk_lock</a>.<a class=\"id\" href=\"#dep_map\">dep_map</a>, 0, 1, <a class=\"id\" href=\"#_RET_IP_\">_RET_IP_</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#sk_backlog_rcv\">sk_backlog_rcv</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mutex_release\">mutex_release</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lock\">sk_lock</a>.<a class=\"id\" href=\"#dep_map\">dep_map</a>, 1, <a class=\"id\" href=\"#_RET_IP_\">_RET_IP_</a>);", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#sk_add_backlog\">sk_add_backlog</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#skb\">skb</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_drops\">sk_drops</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bh_unlock_sock\">bh_unlock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sock_put\">sock_put</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"<a class=\"id\" href=\"#discard_and_relse\">discard_and_relse</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree_skb\">kfree_skb</a>(<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_receive_skb\">sk_receive_skb</a>);", 
"", 
"void <a class=\"id\" href=\"#sk_reset_txq\">sk_reset_txq</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_tx_queue_clear\">sk_tx_queue_clear</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_reset_txq\">sk_reset_txq</a>);", 
"", 
"struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#__sk_dst_check\">__sk_dst_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#__sk_dst_get\">__sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a> && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#obsolete\">obsolete</a> && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#check\">check</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#cookie\">cookie</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_tx_queue_clear\">sk_tx_queue_clear</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_assign_pointer\">rcu_assign_pointer</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_dst_cache\">sk_dst_cache</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#__sk_dst_check\">__sk_dst_check</a>);", 
"", 
"struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#sk_dst_check\">sk_dst_check</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#cookie\">cookie</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a> *<a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#sk_dst_get\">sk_dst_get</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#dst\">dst</a> && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#obsolete\">obsolete</a> && <a class=\"id\" href=\"#dst\">dst</a>-><a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#check\">check</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#cookie\">cookie</a>) == <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_dst_reset\">sk_dst_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst_release\">dst_release</a>(<a class=\"id\" href=\"#dst\">dst</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dst\">dst</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sk_dst_check\">sk_dst_check</a>);", 
"", 
"static int <a class=\"id\" href=\"#sock_bindtodevice\">sock_bindtodevice</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NETDEVICES\">CONFIG_NETDEVICES</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#net\">net</a> *<a class=\"id\" href=\"#net\">net</a> = <a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#devname\">devname</a>[<a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a>];", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#index\">index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Sorry... */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_RAW\">CAP_NET_RAW</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Bind this socket to a particular device like \"eth0\",</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * as specified in the passed interface name. If the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * name is \"\" or the option length is zero the socket</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is not bound.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &gt; <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a> - 1)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#optlen\">optlen</a> = <a class=\"id\" href=\"#IFNAMSIZ\">IFNAMSIZ</a> - 1;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(<a class=\"id\" href=\"#devname\">devname</a>, 0, sizeof(<a class=\"id\" href=\"#devname\">devname</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#devname\">devname</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#devname\">devname</a>[0] != '\\0') {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#net_device\">net_device</a> *<a class=\"id\" href=\"#dev\">dev</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dev\">dev</a> = <a class=\"id\" href=\"#dev_get_by_name_rcu\">dev_get_by_name_rcu</a>(<a class=\"id\" href=\"#net\">net</a>, <a class=\"id\" href=\"#devname\">devname</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#dev\">dev</a>-><a class=\"id\" href=\"#ifindex\">ifindex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#dev\">dev</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a> = <a class=\"id\" href=\"#index\">index</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_dst_reset\">sk_dst_reset</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, int <a class=\"id\" href=\"#bit\">bit</a>, int <a class=\"id\" href=\"#valbool\">valbool</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#valbool\">valbool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#bit\">bit</a>);", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is meant for all protocols to use and covers goings on</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>at the socket level. Everything here is generic.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"int <a class=\"id\" href=\"#sock_setsockopt\">sock_setsockopt</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, unsigned int <a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#valbool\">valbool</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#linger\">linger</a> <a class=\"id\" href=\"#ling\">ling</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *<span class=\"ts\"/>Options without arguments</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optname\">optname</a> == <a class=\"id\" href=\"#SO_BINDTODEVICE\">SO_BINDTODEVICE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sock_bindtodevice\">sock_bindtodevice</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &lt; sizeof(int))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#val\">val</a>, (int <a class=\"id\" href=\"#__user\">__user</a> *)<a class=\"id\" href=\"#optval\">optval</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#valbool\">valbool</a> = <a class=\"id\" href=\"#val\">val</a> ? 1 : 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#lock_sock\">lock_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#optname\">optname</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_DEBUG\">SO_DEBUG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> && !<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EACCES\">EACCES</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DBG\">SOCK_DBG</a>, <a class=\"id\" href=\"#valbool\">valbool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_REUSEADDR\">SO_REUSEADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a> = <a class=\"id\" href=\"#valbool\">valbool</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TYPE\">SO_TYPE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_PROTOCOL\">SO_PROTOCOL</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_DOMAIN\">SO_DOMAIN</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_ERROR\">SO_ERROR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_DONTROUTE\">SO_DONTROUTE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_LOCALROUTE\">SOCK_LOCALROUTE</a>, <a class=\"id\" href=\"#valbool\">valbool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_BROADCAST\">SO_BROADCAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_BROADCAST\">SOCK_BROADCAST</a>, <a class=\"id\" href=\"#valbool\">valbool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_SNDBUF\">SO_SNDBUF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't error on this BSD doesn't and if you think</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   about it this is right. Otherwise apps have to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   play 'guess the biggest size' games. RCVBUF/SNDBUF</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   are treated in BSD as hints */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &gt; <a class=\"id\" href=\"#sysctl_wmem_max\">sysctl_wmem_max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sysctl_wmem_max\">sysctl_wmem_max</a>;", 
"<a class=\"id\" href=\"#set_sndbuf\">set_sndbuf</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> |= <a class=\"id\" href=\"#SOCK_SNDBUF_LOCK\">SOCK_SNDBUF_LOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#val\">val</a> * 2) &lt; <a class=\"id\" href=\"#SOCK_MIN_SNDBUF\">SOCK_MIN_SNDBUF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a> = <a class=\"id\" href=\"#SOCK_MIN_SNDBUF\">SOCK_MIN_SNDBUF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a> = <a class=\"id\" href=\"#val\">val</a> * 2;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>Wake up sending tasks if we</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *<span class=\"ts\"/>upped the value.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_write_space\">sk_write_space</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_SNDBUFFORCE\">SO_SNDBUFFORCE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_sndbuf\">set_sndbuf</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_RCVBUF\">SO_RCVBUF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Don't error on this BSD doesn't and if you think</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   about it this is right. Otherwise apps have to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   play 'guess the biggest size' games. RCVBUF/SNDBUF</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   are treated in BSD as hints */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &gt; <a class=\"id\" href=\"#sysctl_rmem_max\">sysctl_rmem_max</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sysctl_rmem_max\">sysctl_rmem_max</a>;", 
"<a class=\"id\" href=\"#set_rcvbuf\">set_rcvbuf</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_userlocks\">sk_userlocks</a> |= <a class=\"id\" href=\"#SOCK_RCVBUF_LOCK\">SOCK_RCVBUF_LOCK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We double it on the way in to account for</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * \"struct sk_buff\" etc. overhead.   Applications</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * assume that the SO_RCVBUF setting they make will</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * allow that much actual data to be received on that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Applications are unaware that \"struct sk_buff\" and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * other overheads allocate from the receive buffer</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * during socket buffer allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * And after considering the possible alternatives,</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * returning the value we actually used in getsockopt</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * is the most desirable behavior.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#val\">val</a> * 2) &lt; <a class=\"id\" href=\"#SOCK_MIN_RCVBUF\">SOCK_MIN_RCVBUF</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> = <a class=\"id\" href=\"#SOCK_MIN_RCVBUF\">SOCK_MIN_RCVBUF</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a> = <a class=\"id\" href=\"#val\">val</a> * 2;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_RCVBUFFORCE\">SO_RCVBUFFORCE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#set_rcvbuf\">set_rcvbuf</a>;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_KEEPALIVE\">SO_KEEPALIVE</a>:", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_INET\">CONFIG_INET</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a> == <a class=\"id\" href=\"#IPPROTO_TCP\">IPPROTO_TCP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tcp_set_keepalive\">tcp_set_keepalive</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#valbool\">valbool</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_KEEPOPEN\">SOCK_KEEPOPEN</a>, <a class=\"id\" href=\"#valbool\">valbool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_OOBINLINE\">SO_OOBINLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_URGINLINE\">SOCK_URGINLINE</a>, <a class=\"id\" href=\"#valbool\">valbool</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_NO_CHECK\">SO_NO_CHECK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_no_check\">sk_no_check</a> = <a class=\"id\" href=\"#valbool\">valbool</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_PRIORITY\">SO_PRIORITY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#val\">val</a> >= 0 && <a class=\"id\" href=\"#val\">val</a> <= 6) || <a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_LINGER\">SO_LINGER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> &lt; sizeof(<a class=\"id\" href=\"#ling\">ling</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;<span class=\"ts\"/><span class=\"comment\">/* 1003.1g */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#ling\">ling</a>, <a class=\"id\" href=\"#optval\">optval</a>, sizeof(<a class=\"id\" href=\"#ling\">ling</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ling\">ling</a>.<a class=\"id\" href=\"#l_onoff\">l_onoff</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_LINGER\">SOCK_LINGER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else {", 
"#if (<a class=\"id\" href=\"#BITS_PER_LONG\">BITS_PER_LONG</a> == 32)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((unsigned int)<a class=\"id\" href=\"#ling\">ling</a>.<a class=\"id\" href=\"#l_linger\">l_linger</a> >= <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>/<a class=\"id\" href=\"#HZ\">HZ</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lingertime\">sk_lingertime</a> = <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lingertime\">sk_lingertime</a> = (unsigned int)<a class=\"id\" href=\"#ling\">ling</a>.<a class=\"id\" href=\"#l_linger\">l_linger</a> * <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_LINGER\">SOCK_LINGER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_BSDCOMPAT\">SO_BSDCOMPAT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_warn_obsolete_bsdism\">sock_warn_obsolete_bsdism</a>(\"setsockopt\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_PASSCRED\">SO_PASSCRED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valbool\">valbool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#SOCK_PASSCRED\">SOCK_PASSCRED</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#SOCK_PASSCRED\">SOCK_PASSCRED</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TIMESTAMP\">SO_TIMESTAMP</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TIMESTAMPNS\">SO_TIMESTAMPNS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valbool\">valbool</a>)  {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optname\">optname</a> == <a class=\"id\" href=\"#SO_TIMESTAMP\">SO_TIMESTAMP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMPNS\">SOCK_RCVTSTAMPNS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMPNS\">SOCK_RCVTSTAMPNS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMP\">SOCK_RCVTSTAMP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_enable_timestamp\">sock_enable_timestamp</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMP\">SOCK_TIMESTAMP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMP\">SOCK_RCVTSTAMP</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMPNS\">SOCK_RCVTSTAMPNS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TIMESTAMPING\">SO_TIMESTAMPING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; ~<a class=\"id\" href=\"#SOF_TIMESTAMPING_MASK\">SOF_TIMESTAMPING_MASK</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_TX_HARDWARE\">SOCK_TIMESTAMPING_TX_HARDWARE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#SOF_TIMESTAMPING_TX_HARDWARE\">SOF_TIMESTAMPING_TX_HARDWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_TX_SOFTWARE\">SOCK_TIMESTAMPING_TX_SOFTWARE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#SOF_TIMESTAMPING_TX_SOFTWARE\">SOF_TIMESTAMPING_TX_SOFTWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_HARDWARE\">SOCK_TIMESTAMPING_RX_HARDWARE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#SOF_TIMESTAMPING_RX_HARDWARE\">SOF_TIMESTAMPING_RX_HARDWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#SOF_TIMESTAMPING_RX_SOFTWARE\">SOF_TIMESTAMPING_RX_SOFTWARE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_enable_timestamp\">sock_enable_timestamp</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_SOFTWARE\">SOCK_TIMESTAMPING_RX_SOFTWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_disable_timestamp\">sock_disable_timestamp</a>(<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_SOFTWARE\">SOCK_TIMESTAMPING_RX_SOFTWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_SOFTWARE\">SOCK_TIMESTAMPING_SOFTWARE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#SOF_TIMESTAMPING_SOFTWARE\">SOF_TIMESTAMPING_SOFTWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_SYS_HARDWARE\">SOCK_TIMESTAMPING_SYS_HARDWARE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#SOF_TIMESTAMPING_SYS_HARDWARE\">SOF_TIMESTAMPING_SYS_HARDWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_valbool_flag\">sock_valbool_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RAW_HARDWARE\">SOCK_TIMESTAMPING_RAW_HARDWARE</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#val\">val</a> &amp; <a class=\"id\" href=\"#SOF_TIMESTAMPING_RAW_HARDWARE\">SOF_TIMESTAMPING_RAW_HARDWARE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_RCVLOWAT\">SO_RCVLOWAT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#val\">val</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#INT_MAX\">INT_MAX</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvlowat\">sk_rcvlowat</a> = <a class=\"id\" href=\"#val\">val</a> ? : 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_RCVTIMEO\">SO_RCVTIMEO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sock_set_timeout\">sock_set_timeout</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvtimeo\">sk_rcvtimeo</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_SNDTIMEO\">SO_SNDTIMEO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sock_set_timeout\">sock_set_timeout</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndtimeo\">sk_sndtimeo</a>, <a class=\"id\" href=\"#optval\">optval</a>, <a class=\"id\" href=\"#optlen\">optlen</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_ATTACH_FILTER\">SO_ATTACH_FILTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#optlen\">optlen</a> == sizeof(struct <a class=\"id\" href=\"#sock_fprog\">sock_fprog</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#sock_fprog\">sock_fprog</a> <a class=\"id\" href=\"#fprog\">fprog</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(&amp;<a class=\"id\" href=\"#fprog\">fprog</a>, <a class=\"id\" href=\"#optval\">optval</a>, sizeof(<a class=\"id\" href=\"#fprog\">fprog</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sk_attach_filter\">sk_attach_filter</a>(&amp;<a class=\"id\" href=\"#fprog\">fprog</a>, <a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_DETACH_FILTER\">SO_DETACH_FILTER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#sk_detach_filter\">sk_detach_filter</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_PASSSEC\">SO_PASSSEC</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valbool\">valbool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_bit\">set_bit</a>(<a class=\"id\" href=\"#SOCK_PASSSEC\">SOCK_PASSSEC</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clear_bit\">clear_bit</a>(<a class=\"id\" href=\"#SOCK_PASSSEC\">SOCK_PASSSEC</a>, &amp;<a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_MARK\">SO_MARK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#capable\">capable</a>(<a class=\"id\" href=\"#CAP_NET_ADMIN\">CAP_NET_ADMIN</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#EPERM\">EPERM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_mark\">sk_mark</a> = <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We implement the SO_SNDLOWAT etc to</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/>   not be settable (1003.1g 5.3) */</span>", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_RXQ_OVFL\">SO_RXQ_OVFL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#valbool\">valbool</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_set_flag\">sock_set_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RXQ_OVFL\">SOCK_RXQ_OVFL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_reset_flag\">sock_reset_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RXQ_OVFL\">SOCK_RXQ_OVFL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = -<a class=\"id\" href=\"#ENOPROTOOPT\">ENOPROTOOPT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_sock\">release_sock</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#sock_setsockopt\">sock_setsockopt</a>);", 
"", 
"", 
"void <a class=\"id\" href=\"#cred_to_ucred\">cred_to_ucred</a>(struct <a class=\"id\" href=\"#pid\">pid</a> *<a class=\"id\" href=\"#pid\">pid</a>, const struct <a class=\"id\" href=\"#cred\">cred</a> *<a class=\"id\" href=\"#cred\">cred</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#ucred\">ucred</a> *<a class=\"id\" href=\"#ucred\">ucred</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ucred\">ucred</a>-><a class=\"id\" href=\"#pid\">pid</a> = <a class=\"id\" href=\"#pid_vnr\">pid_vnr</a>(<a class=\"id\" href=\"#pid\">pid</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ucred\">ucred</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#ucred\">ucred</a>-><a class=\"id\" href=\"#gid\">gid</a> = -1;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cred\">cred</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#user_namespace\">user_namespace</a> *<a class=\"id\" href=\"#current_ns\">current_ns</a> = <a class=\"id\" href=\"#current_user_ns\">current_user_ns</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ucred\">ucred</a>-><a class=\"id\" href=\"#uid\">uid</a> = <a class=\"id\" href=\"#user_ns_map_uid\">user_ns_map_uid</a>(<a class=\"id\" href=\"#current_ns\">current_ns</a>, <a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#euid\">euid</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ucred\">ucred</a>-><a class=\"id\" href=\"#gid\">gid</a> = <a class=\"id\" href=\"#user_ns_map_gid\">user_ns_map_gid</a>(<a class=\"id\" href=\"#current_ns\">current_ns</a>, <a class=\"id\" href=\"#cred\">cred</a>, <a class=\"id\" href=\"#cred\">cred</a>-><a class=\"id\" href=\"#egid\">egid</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#cred_to_ucred\">cred_to_ucred</a>);", 
"", 
"int <a class=\"id\" href=\"#sock_getsockopt\">sock_getsockopt</a>(struct <a class=\"id\" href=\"#socket\">socket</a> *<a class=\"id\" href=\"#sock\">sock</a>, int <a class=\"id\" href=\"#level\">level</a>, int <a class=\"id\" href=\"#optname\">optname</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>    char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optval\">optval</a>, int <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#optlen\">optlen</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a> = <a class=\"id\" href=\"#sock\">sock</a>-><a class=\"id\" href=\"#sk\">sk</a>;", 
"", 
"<span class=\"ts\"/>union {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#val\">val</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#linger\">linger</a> <a class=\"id\" href=\"#ling\">ling</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#timeval\">timeval</a> <a class=\"id\" href=\"#tm\">tm</a>;", 
"<span class=\"ts\"/>} <a class=\"id\" href=\"#v\">v</a>;", 
"", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#lv\">lv</a> = sizeof(int);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#get_user\">get_user</a>(<a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#optlen\">optlen</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#len\">len</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#memset\">memset</a>(&amp;<a class=\"id\" href=\"#v\">v</a>, 0, sizeof(<a class=\"id\" href=\"#v\">v</a>));", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#optname\">optname</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_DEBUG\">SO_DEBUG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_DBG\">SOCK_DBG</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_DONTROUTE\">SO_DONTROUTE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_LOCALROUTE\">SOCK_LOCALROUTE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_BROADCAST\">SO_BROADCAST</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = !!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_BROADCAST\">SOCK_BROADCAST</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_SNDBUF\">SO_SNDBUF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_sndbuf\">sk_sndbuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_RCVBUF\">SO_RCVBUF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvbuf\">sk_rcvbuf</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_REUSEADDR\">SO_REUSEADDR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_KEEPALIVE\">SO_KEEPALIVE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = !!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_KEEPOPEN\">SOCK_KEEPOPEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TYPE\">SO_TYPE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_type\">sk_type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_PROTOCOL\">SO_PROTOCOL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_protocol\">sk_protocol</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_DOMAIN\">SO_DOMAIN</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_ERROR\">SO_ERROR</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = -<a class=\"id\" href=\"#sock_error\">sock_error</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#xchg\">xchg</a>(&amp;<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_err_soft\">sk_err_soft</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_OOBINLINE\">SO_OOBINLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = !!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_URGINLINE\">SOCK_URGINLINE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_NO_CHECK\">SO_NO_CHECK</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_no_check\">sk_no_check</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_PRIORITY\">SO_PRIORITY</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_priority\">sk_priority</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_LINGER\">SO_LINGER</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lv\">lv</a><span class=\"ts\"/><span class=\"ts\"/>= sizeof(<a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#ling\">ling</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#ling\">ling</a>.<a class=\"id\" href=\"#l_onoff\">l_onoff</a><span class=\"ts\"/>= !!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_LINGER\">SOCK_LINGER</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#ling\">ling</a>.<a class=\"id\" href=\"#l_linger\">l_linger</a><span class=\"ts\"/>= <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_lingertime\">sk_lingertime</a> / <a class=\"id\" href=\"#HZ\">HZ</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_BSDCOMPAT\">SO_BSDCOMPAT</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_warn_obsolete_bsdism\">sock_warn_obsolete_bsdism</a>(\"getsockopt\");", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TIMESTAMP\">SO_TIMESTAMP</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMP\">SOCK_RCVTSTAMP</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>!<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMPNS\">SOCK_RCVTSTAMPNS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TIMESTAMPNS\">SO_TIMESTAMPNS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = <a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_RCVTSTAMPNS\">SOCK_RCVTSTAMPNS</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_TIMESTAMPING\">SO_TIMESTAMPING</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_TX_HARDWARE\">SOCK_TIMESTAMPING_TX_HARDWARE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#SOF_TIMESTAMPING_TX_HARDWARE\">SOF_TIMESTAMPING_TX_HARDWARE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_TX_SOFTWARE\">SOCK_TIMESTAMPING_TX_SOFTWARE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#SOF_TIMESTAMPING_TX_SOFTWARE\">SOF_TIMESTAMPING_TX_SOFTWARE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_HARDWARE\">SOCK_TIMESTAMPING_RX_HARDWARE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#SOF_TIMESTAMPING_RX_HARDWARE\">SOF_TIMESTAMPING_RX_HARDWARE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RX_SOFTWARE\">SOCK_TIMESTAMPING_RX_SOFTWARE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#SOF_TIMESTAMPING_RX_SOFTWARE\">SOF_TIMESTAMPING_RX_SOFTWARE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_SOFTWARE\">SOCK_TIMESTAMPING_SOFTWARE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#SOF_TIMESTAMPING_SOFTWARE\">SOF_TIMESTAMPING_SOFTWARE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_SYS_HARDWARE\">SOCK_TIMESTAMPING_SYS_HARDWARE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#SOF_TIMESTAMPING_SYS_HARDWARE\">SOF_TIMESTAMPING_SYS_HARDWARE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sock_flag\">sock_flag</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#SOCK_TIMESTAMPING_RAW_HARDWARE\">SOCK_TIMESTAMPING_RAW_HARDWARE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#v\">v</a>.<a class=\"id\" href=\"#val\">val</a> |= <a class=\"id\" href=\"#SOF_TIMESTAMPING_RAW_HARDWARE\">SOF_TIMESTAMPING_RAW_HARDWARE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#SO_RCVTIMEO\">SO_RCVTIMEO</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#lv\">lv</a> = sizeof(struct <a class=\"id\" href=\"#timeval\">timeval</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_rcvtimeo\">sk_rcvtimeo</a> == <a class=\"id\" href=\"#MAX_SCHEDULE_TIMEOUT\">MAX_SCHEDULE_TIMEOUT</a>) {", 
];
xr_frag_insert('l/45/906d85df1240d52af36cbb5325818b6152b91d.xr', __xr_tmp);
