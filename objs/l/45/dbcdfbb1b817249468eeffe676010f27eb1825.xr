var __xr_tmp = [
"extern void * <a class=\"id\" href=\"#memchr\">memchr</a>(const void *,int,<a class=\"id\" href=\"#__kernel_size_t\">__kernel_size_t</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern char *<a class=\"id\" href=\"#kstrdup\">kstrdup</a>(const char *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"extern char *<a class=\"id\" href=\"#kstrndup\">kstrndup</a>(const char *<a class=\"id\" href=\"#s\">s</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"extern void *<a class=\"id\" href=\"#kmemdup\">kmemdup</a>(const void *<a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#len\">len</a>, <a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>);", 
"", 
"extern char **<a class=\"id\" href=\"#argv_split\">argv_split</a>(<a class=\"id\" href=\"#gfp_t\">gfp_t</a> <a class=\"id\" href=\"#gfp\">gfp</a>, const char *<a class=\"id\" href=\"#str\">str</a>, int *<a class=\"id\" href=\"#argcp\">argcp</a>);", 
"extern void <a class=\"id\" href=\"#argv_free\">argv_free</a>(char **<a class=\"id\" href=\"#argv\">argv</a>);", 
"", 
"extern <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#sysfs_streq\">sysfs_streq</a>(const char *<a class=\"id\" href=\"#s1\">s1</a>, const char *<a class=\"id\" href=\"#s2\">s2</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_BINARY_PRINTF\">CONFIG_BINARY_PRINTF</a>", 
"int <a class=\"id\" href=\"#vbin_printf\">vbin_printf</a>(<a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#bin_buf\">bin_buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, <a class=\"id\" href=\"#va_list\">va_list</a> <a class=\"id\" href=\"#args\">args</a>);", 
"int <a class=\"id\" href=\"#bstr_printf\">bstr_printf</a>(char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, const <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#bin_buf\">bin_buf</a>);", 
"int <a class=\"id\" href=\"#bprintf\">bprintf</a>(<a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#bin_buf\">bin_buf</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#size\">size</a>, const char *<a class=\"id\" href=\"#fmt\">fmt</a>, ...) <a class=\"id\" href=\"#__printf\">__printf</a>(3, 4);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"extern <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#memory_read_from_buffer\">memory_read_from_buffer</a>(void *<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#count\">count</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const void *<a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#available\">available</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * strstarts - does @str start with @prefix?</span>", 
"<span class=\"comment\"> * @str: string to examine</span>", 
"<span class=\"comment\"> * @prefix: prefix to look for.</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#inline\">inline</a> <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#strstarts\">strstarts</a>(const char *<a class=\"id\" href=\"#str\">str</a>, const char *<a class=\"id\" href=\"#prefix\">prefix</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#strncmp\">strncmp</a>(<a class=\"id\" href=\"#str\">str</a>, <a class=\"id\" href=\"#prefix\">prefix</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#prefix\">prefix</a>)) == 0;", 
"}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* _LINUX_STRING_H_ */</span>", 
];
xr_frag_insert('l/45/dbcdfbb1b817249468eeffe676010f27eb1825.xr', __xr_tmp);
