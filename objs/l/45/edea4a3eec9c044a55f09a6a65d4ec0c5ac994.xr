var __xr_tmp = [
"<span class=\"comment\"> * @data:      String to parse.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_write_pattern\">tomoyo_write_pattern</a>(char *<a class=\"id\" href=\"#data\">data</a>, const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_update_file_pattern_entry\">tomoyo_update_file_pattern_entry</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#is_delete\">is_delete</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_no_rewrite\">tomoyo_same_no_rewrite</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#tomoyo_acl_head\">tomoyo_acl_head</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#tomoyo_no_rewrite\">tomoyo_no_rewrite</a>, <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#pattern\">pattern</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>== <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, struct <a class=\"id\" href=\"#tomoyo_no_rewrite\">tomoyo_no_rewrite</a>, <a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>-><a class=\"id\" href=\"#pattern\">pattern</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_no_rewrite_entry - Update \"struct tomoyo_no_rewrite\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @pattern:   Pathname pattern that are not rewritable by default.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_no_rewrite_entry\">tomoyo_update_no_rewrite_entry</a>(const char *<a class=\"id\" href=\"#pattern\">pattern</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_no_rewrite\">tomoyo_no_rewrite</a> <a class=\"id\" href=\"#e\">e</a> = { };", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_correct_word\">tomoyo_correct_word</a>(<a class=\"id\" href=\"#pattern\">pattern</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#pattern\">pattern</a> = <a class=\"id\" href=\"#tomoyo_get_name\">tomoyo_get_name</a>(<a class=\"id\" href=\"#pattern\">pattern</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#pattern\">pattern</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_policy\">tomoyo_update_policy</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>[<a class=\"id\" href=\"#TOMOYO_ID_NO_REWRITE\">TOMOYO_ID_NO_REWRITE</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_no_rewrite\">tomoyo_same_no_rewrite</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name\">tomoyo_put_name</a>(<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#pattern\">pattern</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_no_rewrite_file - Check if the given pathname is not permitted to be rewrited.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @filename: Filename to check.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns true if @filename is specified by \"deny_rewrite\" directive,</span>", 
"<span class=\"comment\"> * false otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_no_rewrite_file\">tomoyo_no_rewrite_file</a>(const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename\">filename</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_no_rewrite\">tomoyo_no_rewrite</a> *<a class=\"id\" href=\"#ptr\">ptr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#false\">false</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry_rcu\">list_for_each_entry_rcu</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, &amp;<a class=\"id\" href=\"#tomoyo_policy_list\">tomoyo_policy_list</a>[<a class=\"id\" href=\"#TOMOYO_ID_NO_REWRITE\">TOMOYO_ID_NO_REWRITE</a>],", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#list\">list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#is_deleted\">is_deleted</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_path_matches_pattern\">tomoyo_path_matches_pattern</a>(<a class=\"id\" href=\"#filename\">filename</a>, <a class=\"id\" href=\"#ptr\">ptr</a>-><a class=\"id\" href=\"#pattern\">pattern</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = <a class=\"id\" href=\"#true\">true</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#found\">found</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_write_no_rewrite - Write \"struct tomoyo_no_rewrite\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @data:      String to parse.</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_write_no_rewrite\">tomoyo_write_no_rewrite</a>(char *<a class=\"id\" href=\"#data\">data</a>, const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_update_no_rewrite_entry\">tomoyo_update_no_rewrite_entry</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#is_delete\">is_delete</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_check_path_acl\">tomoyo_check_path_acl</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_acl\">tomoyo_path_acl</a> *<a class=\"id\" href=\"#acl\">acl</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#acl\">acl</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#perm\">perm</a> &amp; (1 << <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#operation\">operation</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#matched_path\">matched_path</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_name_union\">tomoyo_compare_name_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#matched_path\">matched_path</a> != <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#false\">false</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_check_path_number_acl\">tomoyo_check_path_number_acl</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_number_acl\">tomoyo_path_number_acl</a> *<a class=\"id\" href=\"#acl\">acl</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#acl\">acl</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#perm\">perm</a> &amp; (1 << <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path_number\">path_number</a>.<a class=\"id\" href=\"#operation\">operation</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_number_union\">tomoyo_compare_number_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path_number\">path_number</a>.<a class=\"id\" href=\"#number\">number</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#number\">number</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_name_union\">tomoyo_compare_name_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path_number\">path_number</a>.<a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_check_path2_acl\">tomoyo_check_path2_acl</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path2_acl\">tomoyo_path2_acl</a> *<a class=\"id\" href=\"#acl\">acl</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#acl\">acl</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#perm\">perm</a> &amp; (1 << <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path2\">path2</a>.<a class=\"id\" href=\"#operation\">operation</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_name_union\">tomoyo_compare_name_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path2\">path2</a>.<a class=\"id\" href=\"#filename1\">filename1</a>, &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#name1\">name1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#tomoyo_compare_name_union\">tomoyo_compare_name_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path2\">path2</a>.<a class=\"id\" href=\"#filename2\">filename2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#name2\">name2</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_check_mkdev_acl\">tomoyo_check_mkdev_acl</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#ptr\">ptr</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_mkdev_acl\">tomoyo_mkdev_acl</a> *<a class=\"id\" href=\"#acl\">acl</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#ptr\">ptr</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#acl\">acl</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#perm\">perm</a> &amp; (1 << <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#operation\">operation</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_number_union\">tomoyo_compare_number_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#mode\">mode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#mode\">mode</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_number_union\">tomoyo_compare_number_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#major\">major</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#major\">major</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_number_union\">tomoyo_compare_number_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#minor\">minor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#minor\">minor</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_compare_name_union\">tomoyo_compare_name_union</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#mkdev\">mkdev</a>.<a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#acl\">acl</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_path_acl\">tomoyo_same_path_acl</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_acl\">tomoyo_path_acl</a> *<a class=\"id\" href=\"#p1\">p1</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p1\">p1</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path_acl\">tomoyo_path_acl</a> *<a class=\"id\" href=\"#p2\">p2</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p2\">p2</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_same_acl_head\">tomoyo_same_acl_head</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#head\">head</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#head\">head</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_same_name_union\">tomoyo_same_name_union</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_merge_path_acl\">tomoyo_merge_path_acl</a>(struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> * const <a class=\"id\" href=\"#a_perm\">a_perm</a> = &amp;<a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#tomoyo_path_acl\">tomoyo_path_acl</a>, <a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>-><a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#perm\">perm</a> = *<a class=\"id\" href=\"#a_perm\">a_perm</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u16\">u16</a> <a class=\"id\" href=\"#b_perm\">b_perm</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, struct <a class=\"id\" href=\"#tomoyo_path_acl\">tomoyo_path_acl</a>, <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_delete\">is_delete</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> &= ~<a class=\"id\" href=\"#b_perm\">b_perm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#perm\">perm</a> &amp; <a class=\"id\" href=\"#TOMOYO_RW_MASK\">TOMOYO_RW_MASK</a>) != <a class=\"id\" href=\"#TOMOYO_RW_MASK\">TOMOYO_RW_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> &= ~(1 << <a class=\"id\" href=\"#TOMOYO_TYPE_READ_WRITE\">TOMOYO_TYPE_READ_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (!(<a class=\"id\" href=\"#perm\">perm</a> &amp; (1 << <a class=\"id\" href=\"#TOMOYO_TYPE_READ_WRITE\">TOMOYO_TYPE_READ_WRITE</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> &= ~<a class=\"id\" href=\"#TOMOYO_RW_MASK\">TOMOYO_RW_MASK</a>;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> |= <a class=\"id\" href=\"#b_perm\">b_perm</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#perm\">perm</a> &amp; <a class=\"id\" href=\"#TOMOYO_RW_MASK\">TOMOYO_RW_MASK</a>) == <a class=\"id\" href=\"#TOMOYO_RW_MASK\">TOMOYO_RW_MASK</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> |= (1 << <a class=\"id\" href=\"#TOMOYO_TYPE_READ_WRITE\">TOMOYO_TYPE_READ_WRITE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>else if (<a class=\"id\" href=\"#perm\">perm</a> &amp; (1 << <a class=\"id\" href=\"#TOMOYO_TYPE_READ_WRITE\">TOMOYO_TYPE_READ_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> |= <a class=\"id\" href=\"#TOMOYO_RW_MASK\">TOMOYO_RW_MASK</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#a_perm\">a_perm</a> = <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#perm\">perm</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_path_acl - Update \"struct tomoyo_path_acl\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @type:      Type of operation.</span>", 
"<span class=\"comment\"> * @filename:  Filename.</span>", 
"<span class=\"comment\"> * @domain:    Pointer to \"struct tomoyo_domain_info\".</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_path_acl\">tomoyo_update_path_acl</a>(const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, const char *<a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> * const <a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_path_acl\">tomoyo_path_acl</a> <a class=\"id\" href=\"#e\">e</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#TOMOYO_TYPE_PATH_ACL\">TOMOYO_TYPE_PATH_ACL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#perm\">perm</a> = 1 << <a class=\"id\" href=\"#type\">type</a>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#perm\">perm</a> == (1 << <a class=\"id\" href=\"#TOMOYO_TYPE_READ_WRITE\">TOMOYO_TYPE_READ_WRITE</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#perm\">perm</a> |= <a class=\"id\" href=\"#TOMOYO_RW_MASK\">TOMOYO_RW_MASK</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_parse_name_union\">tomoyo_parse_name_union</a>(<a class=\"id\" href=\"#filename\">filename</a>, &amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name\">name</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_domain\">tomoyo_update_domain</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>, <a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_path_acl\">tomoyo_same_path_acl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_merge_path_acl\">tomoyo_merge_path_acl</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name_union\">tomoyo_put_name_union</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_mkdev_acl\">tomoyo_same_mkdev_acl</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_mkdev_acl\">tomoyo_mkdev_acl</a> *<a class=\"id\" href=\"#p1\">p1</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p1\">p1</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_mkdev_acl\">tomoyo_mkdev_acl</a> *<a class=\"id\" href=\"#p2\">p2</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p2\">p2</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_same_acl_head\">tomoyo_same_acl_head</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#head\">head</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#tomoyo_same_name_union\">tomoyo_same_name_union</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#name\">name</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#tomoyo_same_number_union\">tomoyo_same_number_union</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#mode\">mode</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#mode\">mode</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#tomoyo_same_number_union\">tomoyo_same_number_union</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#major\">major</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#major\">major</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#tomoyo_same_number_union\">tomoyo_same_number_union</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#minor\">minor</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#minor\">minor</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_merge_mkdev_acl\">tomoyo_merge_mkdev_acl</a>(struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> *const <a class=\"id\" href=\"#a_perm\">a_perm</a> = &amp;<a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#tomoyo_mkdev_acl\">tomoyo_mkdev_acl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#perm\">perm</a> = *<a class=\"id\" href=\"#a_perm\">a_perm</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#b_perm\">b_perm</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, struct <a class=\"id\" href=\"#tomoyo_mkdev_acl\">tomoyo_mkdev_acl</a>, <a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>-><a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> &= ~<a class=\"id\" href=\"#b_perm\">b_perm</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> |= <a class=\"id\" href=\"#b_perm\">b_perm</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#a_perm\">a_perm</a> = <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#perm\">perm</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_mkdev_acl - Update \"struct tomoyo_mkdev_acl\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @type:      Type of operation.</span>", 
"<span class=\"comment\"> * @filename:  Filename.</span>", 
"<span class=\"comment\"> * @mode:      Create mode.</span>", 
"<span class=\"comment\"> * @major:     Device major number.</span>", 
"<span class=\"comment\"> * @minor:     Device minor number.</span>", 
"<span class=\"comment\"> * @domain:    Pointer to \"struct tomoyo_domain_info\".</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_mkdev_acl\">tomoyo_update_mkdev_acl</a>(const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, const char *<a class=\"id\" href=\"#filename\">filename</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  char *<a class=\"id\" href=\"#mode\">mode</a>, char *<a class=\"id\" href=\"#major\">major</a>, char *<a class=\"id\" href=\"#minor\">minor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> * const", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#domain\">domain</a>, const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_mkdev_acl\">tomoyo_mkdev_acl</a> <a class=\"id\" href=\"#e\">e</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#TOMOYO_TYPE_MKDEV_ACL\">TOMOYO_TYPE_MKDEV_ACL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#perm\">perm</a> = 1 << <a class=\"id\" href=\"#type\">type</a>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a> ? -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_parse_name_union\">tomoyo_parse_name_union</a>(<a class=\"id\" href=\"#filename\">filename</a>, &amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name\">name</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tomoyo_parse_number_union\">tomoyo_parse_number_union</a>(<a class=\"id\" href=\"#mode\">mode</a>, &amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#mode\">mode</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tomoyo_parse_number_union\">tomoyo_parse_number_union</a>(<a class=\"id\" href=\"#major\">major</a>, &amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#major\">major</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tomoyo_parse_number_union\">tomoyo_parse_number_union</a>(<a class=\"id\" href=\"#minor\">minor</a>, &amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#minor\">minor</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_domain\">tomoyo_update_domain</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>, <a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_mkdev_acl\">tomoyo_same_mkdev_acl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_merge_mkdev_acl\">tomoyo_merge_mkdev_acl</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name_union\">tomoyo_put_name_union</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name\">name</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_number_union\">tomoyo_put_number_union</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#mode\">mode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_number_union\">tomoyo_put_number_union</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#major\">major</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_number_union\">tomoyo_put_number_union</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#minor\">minor</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_same_path2_acl\">tomoyo_same_path2_acl</a>(const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#b\">b</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path2_acl\">tomoyo_path2_acl</a> *<a class=\"id\" href=\"#p1\">p1</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p1\">p1</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#tomoyo_path2_acl\">tomoyo_path2_acl</a> *<a class=\"id\" href=\"#p2\">p2</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, <a class=\"id\" href=\"#typeof\">typeof</a>(*<a class=\"id\" href=\"#p2\">p2</a>), <a class=\"id\" href=\"#head\">head</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tomoyo_same_acl_head\">tomoyo_same_acl_head</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#head\">head</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#tomoyo_same_name_union\">tomoyo_same_name_union</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#name1\">name1</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#name1\">name1</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>&& <a class=\"id\" href=\"#tomoyo_same_name_union\">tomoyo_same_name_union</a>(&amp;<a class=\"id\" href=\"#p1\">p1</a>-><a class=\"id\" href=\"#name2\">name2</a>, &amp;<a class=\"id\" href=\"#p2\">p2</a>-><a class=\"id\" href=\"#name2\">name2</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#tomoyo_merge_path2_acl\">tomoyo_merge_path2_acl</a>(struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#a\">a</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#tomoyo_acl_info\">tomoyo_acl_info</a> *<a class=\"id\" href=\"#b\">b</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> * const <a class=\"id\" href=\"#a_perm\">a_perm</a> = &amp;<a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#a\">a</a>, struct <a class=\"id\" href=\"#tomoyo_path2_acl\">tomoyo_path2_acl</a>, <a class=\"id\" href=\"#head\">head</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>-><a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#perm\">perm</a> = *<a class=\"id\" href=\"#a_perm\">a_perm</a>;", 
"<span class=\"ts\"/>const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#b_perm\">b_perm</a> = <a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#b\">b</a>, struct <a class=\"id\" href=\"#tomoyo_path2_acl\">tomoyo_path2_acl</a>, <a class=\"id\" href=\"#head\">head</a>)-><a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> &= ~<a class=\"id\" href=\"#b_perm\">b_perm</a>;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#perm\">perm</a> |= <a class=\"id\" href=\"#b_perm\">b_perm</a>;", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#a_perm\">a_perm</a> = <a class=\"id\" href=\"#perm\">perm</a>;", 
"<span class=\"ts\"/>return !<a class=\"id\" href=\"#perm\">perm</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_update_path2_acl - Update \"struct tomoyo_path2_acl\" list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @type:      Type of operation.</span>", 
"<span class=\"comment\"> * @filename1: First filename.</span>", 
"<span class=\"comment\"> * @filename2: Second filename.</span>", 
"<span class=\"comment\"> * @domain:    Pointer to \"struct tomoyo_domain_info\".</span>", 
"<span class=\"comment\"> * @is_delete: True if it is a delete request.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#tomoyo_update_path2_acl\">tomoyo_update_path2_acl</a>(const <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#type\">type</a>, const char *<a class=\"id\" href=\"#filename1\">filename1</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#filename2\">filename2</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#tomoyo_domain_info\">tomoyo_domain_info</a> * const <a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#is_delete\">is_delete</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#tomoyo_path2_acl\">tomoyo_path2_acl</a> <a class=\"id\" href=\"#e\">e</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#head\">head</a>.<a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#TOMOYO_TYPE_PATH2_ACL\">TOMOYO_TYPE_PATH2_ACL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#perm\">perm</a> = 1 << <a class=\"id\" href=\"#type\">type</a>", 
"<span class=\"ts\"/>};", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#is_delete\">is_delete</a> ? -<a class=\"id\" href=\"#ENOENT\">ENOENT</a> : -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tomoyo_parse_name_union\">tomoyo_parse_name_union</a>(<a class=\"id\" href=\"#filename1\">filename1</a>, &amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name1\">name1</a>) ||", 
"<span class=\"ts\"/>    !<a class=\"id\" href=\"#tomoyo_parse_name_union\">tomoyo_parse_name_union</a>(<a class=\"id\" href=\"#filename2\">filename2</a>, &amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name2\">name2</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#tomoyo_update_domain\">tomoyo_update_domain</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#head\">head</a>, sizeof(<a class=\"id\" href=\"#e\">e</a>), <a class=\"id\" href=\"#is_delete\">is_delete</a>, <a class=\"id\" href=\"#domain\">domain</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_same_path2_acl\">tomoyo_same_path2_acl</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#tomoyo_merge_path2_acl\">tomoyo_merge_path2_acl</a>);", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name_union\">tomoyo_put_name_union</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name1\">name1</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_put_name_union\">tomoyo_put_name_union</a>(&amp;<a class=\"id\" href=\"#e\">e</a>.<a class=\"id\" href=\"#name2\">name2</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * tomoyo_path_permission - Check permission for single path operation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @r:         Pointer to \"struct tomoyo_request_info\".</span>", 
"<span class=\"comment\"> * @operation: Type of operation.</span>", 
"<span class=\"comment\"> * @filename:  Filename to check.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, negative value otherwise.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Caller holds tomoyo_read_lock().</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#tomoyo_path_permission\">tomoyo_path_permission</a>(struct <a class=\"id\" href=\"#tomoyo_request_info\">tomoyo_request_info</a> *<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#operation\">operation</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const struct <a class=\"id\" href=\"#tomoyo_path_info\">tomoyo_path_info</a> *<a class=\"id\" href=\"#filename\">filename</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>;", 
"", 
" <a class=\"id\" href=\"#next\">next</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#tomoyo_p2mac\">tomoyo_p2mac</a>[<a class=\"id\" href=\"#operation\">operation</a>];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#tomoyo_get_mode\">tomoyo_get_mode</a>(<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#profile\">profile</a>, <a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#type\">type</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#mode\">mode</a> == <a class=\"id\" href=\"#TOMOYO_CONFIG_DISABLED\">TOMOYO_CONFIG_DISABLED</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param_type\">param_type</a> = <a class=\"id\" href=\"#TOMOYO_TYPE_PATH_ACL\">TOMOYO_TYPE_PATH_ACL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#filename\">filename</a> = <a class=\"id\" href=\"#filename\">filename</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#param\">param</a>.<a class=\"id\" href=\"#path\">path</a>.<a class=\"id\" href=\"#operation\">operation</a> = <a class=\"id\" href=\"#operation\">operation</a>;", 
"<span class=\"ts\"/>do {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tomoyo_check_acl\">tomoyo_check_acl</a>(<a class=\"id\" href=\"#r\">r</a>, <a class=\"id\" href=\"#tomoyo_check_path_acl\">tomoyo_check_path_acl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#r\">r</a>-><a class=\"id\" href=\"#granted\">granted</a> && <a class=\"id\" href=\"#operation\">operation</a> == <a class=\"id\" href=\"#TOMOYO_TYPE_READ\">TOMOYO_TYPE_READ</a> &&", 
];
xr_frag_insert('l/45/edea4a3eec9c044a55f09a6a65d4ec0c5ac994.xr', __xr_tmp);
