var __xr_tmp = [
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#blkdev\">blkdev</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#kernel\">kernel</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#moduleparam\">moduleparam</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#proc_fs\">proc_fs</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#seq_file\">seq_file</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_device\">scsi_device</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#scsi\">scsi</a>/<a class=\"id\" href=\"#scsi_devinfo\">scsi_devinfo</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> \"scsi_priv.h\"", 
"", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * scsi_dev_info_list: structure to hold black/white listed devices.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#dev_info_list\">dev_info_list</a>;", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#vendor\">vendor</a>[8];", 
"<span class=\"ts\"/>char <a class=\"id\" href=\"#model\">model</a>[16];", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#compatible\">compatible</a>; <span class=\"comment\">/* for use with scsi_static_device_list entries */</span>", 
"};", 
"", 
"struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#node\">node</a>;<span class=\"ts\"/><span class=\"comment\">/* our node for being on the master list */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>; <span class=\"comment\">/* head of dev info list */</span>", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;<span class=\"ts\"/><span class=\"comment\">/* name of list for /proc (NULL for global) */</span>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#key\">key</a>;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* unique numeric identifier */</span>", 
"};", 
"", 
"", 
"static const char <a class=\"id\" href=\"#spaces\">spaces</a>[] = \"                \"; <span class=\"comment\">/* 16 of them */</span>", 
"static unsigned <a class=\"id\" href=\"#scsi_default_dev_flags\">scsi_default_dev_flags</a>;", 
"static <a class=\"id\" href=\"#LIST_HEAD\">LIST_HEAD</a>(<a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>);", 
"static char <a class=\"id\" href=\"#scsi_dev_flags\">scsi_dev_flags</a>[256];", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * scsi_static_device_list: deprecated list of devices that require</span>", 
"<span class=\"comment\"> * settings that differ from the default, includes black-listed (broken)</span>", 
"<span class=\"comment\"> * devices. The entries here are added to the tail of scsi_dev_info_list</span>", 
"<span class=\"comment\"> * via scsi_dev_info_list_init.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Do not add to this list, use the command line or proc interface to add</span>", 
"<span class=\"comment\"> * to the scsi_dev_info_list. This table will eventually go away.</span>", 
"<span class=\"comment\"> */</span>", 
"static struct {", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#vendor\">vendor</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#model\">model</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#revision\">revision</a>;<span class=\"ts\"/><span class=\"comment\">/* revision known to be bad, unused */</span>", 
"<span class=\"ts\"/>unsigned <a class=\"id\" href=\"#flags\">flags</a>;", 
"} <a class=\"id\" href=\"#scsi_static_device_list\">scsi_static_device_list</a>[] <a class=\"id\" href=\"#__initdata\">__initdata</a> = {", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following devices are known not to tolerate a lun != 0 scan</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for one reason or another. Some will respond to all luns,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * others will lock up.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{\"Aashima\", \"IMAGERY 2400SP\", \"1.03\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"CHINON\", \"CD-ROM CDS-431\", \"H42\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"CHINON\", \"CD-ROM CDS-535\", \"Q14\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"DENON\", \"DRD-25X\", \"V\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"HITACHI\", \"DK312C\", \"CM81\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"HITACHI\", \"DK314C\", \"CR21\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"IBM\", \"2104-DU3\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"IBM\", \"2104-TU3\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"IMS\", \"CDD521/10\", \"2.06\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"MAXTOR\", \"XT-3280\", \"PR02\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"MAXTOR\", \"XT-4380S\", \"B3C\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"MAXTOR\", \"MXT-1240S\", \"I1.2\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"MAXTOR\", \"XT-4170S\", \"B5A\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"MAXTOR\", \"XT-8760S\", \"B7B\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"MEDIAVIS\", \"RENO CD-ROMX2A\", \"2.03\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"MICROTEK\", \"ScanMakerIII\", \"2.30\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"NEC\", \"CD-ROM DRIVE:841\", \"1.0\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"PHILIPS\", \"PCA80SC\", \"V4-2\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"RODIME\", \"RO3000S\", \"2.33\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"SUN\", \"SENA\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* responds to all luns */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following causes a failed REQUEST SENSE on lun 1 for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * aha152x controller, which causes SCSI code to reset bus.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{\"SANYO\", \"CRD-250S\", \"1.20\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following causes a failed REQUEST SENSE on lun 1 for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * aha152x controller, which causes SCSI code to reset bus.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{\"SEAGATE\", \"ST157N\", \"\\004|j\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"SEAGATE\", \"ST296\", \"921\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"SEAGATE\", \"ST1581\", \"6538\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"SONY\", \"CD-ROM CDU-541\", \"4.3d\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"SONY\", \"CD-ROM CDU-55S\", \"1.0i\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"SONY\", \"CD-ROM CDU-561\", \"1.7x\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"SONY\", \"CD-ROM CDU-8012\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"SONY\", \"SDT-5000\", \"3.17\", <a class=\"id\" href=\"#BLIST_SELECT_NO_ATN\">BLIST_SELECT_NO_ATN</a>},", 
"<span class=\"ts\"/>{\"TANDBERG\", \"TDC 3600\", \"U07\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"TEAC\", \"CD-R55S\", \"1.0H\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following causes a failed REQUEST SENSE on lun 1 for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * seagate controller, which causes SCSI code to reset bus.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{\"TEAC\", \"CD-ROM\", \"1.06\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"TEAC\", \"MT-2ST/45S2-27\", \"RV M\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The following causes a failed REQUEST SENSE on lun 1 for</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * seagate controller, which causes SCSI code to reset bus.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{\"HP\", \"C1750A\", \"3226\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* scanjet iic */</span>", 
"<span class=\"ts\"/>{\"HP\", \"C1790A\", \"\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* scanjet iip */</span>", 
"<span class=\"ts\"/>{\"HP\", \"C2500A\", \"\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* scanjet iicx */</span>", 
"<span class=\"ts\"/>{\"MEDIAVIS\", \"CDR-H93MV\", \"1.31\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"MICROTEK\", \"ScanMaker II\", \"5.61\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"MITSUMI\", \"CD-R CR-2201CS\", \"6119\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"NEC\", \"D3856\", \"0009\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"QUANTUM\", \"LPS525S\", \"3110\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"QUANTUM\", \"PD1225S\", \"3110\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"QUANTUM\", \"FIREBALL ST4.3S\", \"0F0C\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"RELISYS\", \"Scorpio\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"<span class=\"ts\"/>{\"SANKYO\", \"CP525\", \"6.64\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* causes failed REQ SENSE, extra reset */</span>", 
"<span class=\"ts\"/>{\"TEXEL\", \"CD-ROM\", \"1.06\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"transtec\", \"T5008\", \"0001\", <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a> },", 
"<span class=\"ts\"/>{\"YAMAHA\", \"CDR100\", \"1.00\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"YAMAHA\", \"CDR102\", \"1.00\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"YAMAHA\", \"CRW8424S\", \"1.0\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"YAMAHA\", \"CRW6416S\", \"1.0c\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* locks up */</span>", 
"<span class=\"ts\"/>{\"\", \"Scanner\", \"1.80\", <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},<span class=\"ts\"/><span class=\"comment\">/* responds to all lun */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Other types of devices that have special flags.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that all USB devices should have the BLIST_INQUIRY_36 flag.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{\"3PARdata\", \"VV\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"ADAPTEC\", \"AACRAID\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"ADAPTEC\", \"Adaptec 5400S\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"AFT PRO\", \"-IX CF\", \"0.0>\", <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"BELKIN\", \"USB 2 HS-CF\", \"1.95\",  <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"BROWNIE\", \"1200U3P\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"BROWNIE\", \"1600U3P\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"CANON\", \"IPUBJD\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"CBOX3\", \"USB Storage-SMC\", \"300A\", <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"CMD\", \"CRA-7280\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},<span class=\"ts\"/><span class=\"comment\">/* CMD RAID Controller */</span>", 
"<span class=\"ts\"/>{\"CNSI\", \"G7324\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},<span class=\"ts\"/><span class=\"comment\">/* Chaparral G7324 RAID */</span>", 
"<span class=\"ts\"/>{\"CNSi\", \"G8324\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},<span class=\"ts\"/><span class=\"comment\">/* Chaparral G8324 RAID */</span>", 
"<span class=\"ts\"/>{\"COMPAQ\", \"ARRAY CONTROLLER\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a> |", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BLIST_MAX_512\">BLIST_MAX_512</a> | <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},<span class=\"ts\"/><span class=\"comment\">/* Compaq RA4x00 */</span>", 
"<span class=\"ts\"/>{\"COMPAQ\", \"LOGICAL VOLUME\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_MAX_512\">BLIST_MAX_512</a>}, <span class=\"comment\">/* Compaq RA4x00 */</span>", 
"<span class=\"ts\"/>{\"COMPAQ\", \"CR3500\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"COMPAQ\", \"MSA1000\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_NOSTARTONADD\">BLIST_NOSTARTONADD</a>},", 
"<span class=\"ts\"/>{\"COMPAQ\", \"MSA1000 VOLUME\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_NOSTARTONADD\">BLIST_NOSTARTONADD</a>},", 
"<span class=\"ts\"/>{\"COMPAQ\", \"HSV110\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a> | <a class=\"id\" href=\"#BLIST_NOSTARTONADD\">BLIST_NOSTARTONADD</a>},", 
"<span class=\"ts\"/>{\"DDN\", \"SAN DataDirector\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"DEC\", \"HSG80\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a> | <a class=\"id\" href=\"#BLIST_NOSTARTONADD\">BLIST_NOSTARTONADD</a>},", 
"<span class=\"ts\"/>{\"DELL\", \"PV660F\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"DELL\", \"PV660F   PSEUDO\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"DELL\", \"PSEUDO DEVICE .\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},<span class=\"ts\"/><span class=\"comment\">/* Dell PV 530F */</span>", 
"<span class=\"ts\"/>{\"DELL\", \"PV530F\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"DELL\", \"PERCRAID\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"DGC\", \"RAID\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},<span class=\"ts\"/><span class=\"comment\">/* Dell PV 650F, storage on LUN 0 */</span>", 
"<span class=\"ts\"/>{\"DGC\", \"DISK\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},<span class=\"ts\"/><span class=\"comment\">/* Dell PV 650F, no storage on LUN 0 */</span>", 
"<span class=\"ts\"/>{\"EMC\",  \"Invista\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"EMC\", \"SYMMETRIX\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a> | <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"EMULEX\", \"MD21/S2     ESDI\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"easyRAID\", \"16P\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"easyRAID\", \"X6P\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"easyRAID\", \"F8\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"FSC\", \"CentricStor\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"Generic\", \"USB SD Reader\", \"1.00\", <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"Generic\", \"USB Storage-SMC\", \"0180\", <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"Generic\", \"USB Storage-SMC\", \"0207\", <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"DF400\", \"*\", <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"DF500\", \"*\", <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"DISK-SUBSYSTEM\", \"*\", <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"OPEN-\", \"*\", <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"OP-C-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"3380-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"3390-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"6586-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HITACHI\", \"6588-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"A6189A\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},<span class=\"ts\"/><span class=\"comment\">/* HP VA7400 */</span>", 
"<span class=\"ts\"/>{\"HP\", \"OPEN-\", \"*\", <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>}, <span class=\"comment\">/* HP XP Arrays */</span>", 
"<span class=\"ts\"/>{\"HP\", \"NetRAID-4M\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"HSV100\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a> | <a class=\"id\" href=\"#BLIST_NOSTARTONADD\">BLIST_NOSTARTONADD</a>},", 
"<span class=\"ts\"/>{\"HP\", \"C1557A\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"C3323-300\", \"4269\", <a class=\"id\" href=\"#BLIST_NOTQ\">BLIST_NOTQ</a>},", 
"<span class=\"ts\"/>{\"HP\", \"C5713A\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"DF400\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"DF500\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"DF600\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"OP-C-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"3380-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"3390-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"6586-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"HP\", \"6588-\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"IBM\", \"AuSaV1S2\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"IBM\", \"ProFibre 4000R\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"IBM\", \"2105\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_RETRY_HWERROR\">BLIST_RETRY_HWERROR</a>},", 
"<span class=\"ts\"/>{\"iomega\", \"jaz 1GB\", \"J.86\", <a class=\"id\" href=\"#BLIST_NOTQ\">BLIST_NOTQ</a> | <a class=\"id\" href=\"#BLIST_NOLUN\">BLIST_NOLUN</a>},", 
"<span class=\"ts\"/>{\"IOMEGA\", \"Io20S         *F\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_KEY\">BLIST_KEY</a>},", 
"<span class=\"ts\"/>{\"INSITE\", \"Floptical   F*8I\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_KEY\">BLIST_KEY</a>},", 
"<span class=\"ts\"/>{\"INSITE\", \"I325VM\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_KEY\">BLIST_KEY</a>},", 
"<span class=\"ts\"/>{\"iRiver\", \"iFP Mass Driver\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOT_LOCKABLE\">BLIST_NOT_LOCKABLE</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"LASOUND\", \"CDX7405\", \"3.10\", <a class=\"id\" href=\"#BLIST_MAX5LUN\">BLIST_MAX5LUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"MATSHITA\", \"PD-1\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"MATSHITA\", \"DMC-LC5\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOT_LOCKABLE\">BLIST_NOT_LOCKABLE</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"MATSHITA\", \"DMC-LC40\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOT_LOCKABLE\">BLIST_NOT_LOCKABLE</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"Medion\", \"Flash XL  MMC/SD\", \"2.6D\", <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"MegaRAID\", \"LD\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"MICROP\", \"4110\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOTQ\">BLIST_NOTQ</a>},", 
"<span class=\"ts\"/>{\"MYLEX\", \"DACARMRB\", \"*\", <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"nCipher\", \"Fastness Crypto\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"NAKAMICH\", \"MJ-4.8S\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"NAKAMICH\", \"MJ-5.16S\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"NEC\", \"PD-1 ODX654P\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"NEC\", \"iStorage\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"NRC\", \"MBR-7\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"NRC\", \"MBR-7.4\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"PIONEER\", \"CD-ROM DRM-600\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"PIONEER\", \"CD-ROM DRM-602X\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"PIONEER\", \"CD-ROM DRM-604X\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"PIONEER\", \"CD-ROM DRM-624X\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"Promise\", \"\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"QUANTUM\", \"XP34301\", \"1071\", <a class=\"id\" href=\"#BLIST_NOTQ\">BLIST_NOTQ</a>},", 
"<span class=\"ts\"/>{\"REGAL\", \"CDC-4X\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_MAX5LUN\">BLIST_MAX5LUN</a> | <a class=\"id\" href=\"#BLIST_SINGLELUN\">BLIST_SINGLELUN</a>},", 
"<span class=\"ts\"/>{\"SanDisk\", \"ImageMate CF-SD1\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},", 
"<span class=\"ts\"/>{\"SEAGATE\", \"ST34555N\", \"0930\", <a class=\"id\" href=\"#BLIST_NOTQ\">BLIST_NOTQ</a>},<span class=\"ts\"/><span class=\"comment\">/* Chokes on tagged INQUIRY */</span>", 
"<span class=\"ts\"/>{\"SEAGATE\", \"ST3390N\", \"9546\", <a class=\"id\" href=\"#BLIST_NOTQ\">BLIST_NOTQ</a>},", 
"<span class=\"ts\"/>{\"SGI\", \"RAID3\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"SGI\", \"RAID5\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"SGI\", \"TP9100\", \"*\", <a class=\"id\" href=\"#BLIST_REPORTLUN2\">BLIST_REPORTLUN2</a>},", 
"<span class=\"ts\"/>{\"SGI\", \"Universal Xport\", \"*\", <a class=\"id\" href=\"#BLIST_NO_ULD_ATTACH\">BLIST_NO_ULD_ATTACH</a>},", 
"<span class=\"ts\"/>{\"IBM\", \"Universal Xport\", \"*\", <a class=\"id\" href=\"#BLIST_NO_ULD_ATTACH\">BLIST_NO_ULD_ATTACH</a>},", 
"<span class=\"ts\"/>{\"SUN\", \"Universal Xport\", \"*\", <a class=\"id\" href=\"#BLIST_NO_ULD_ATTACH\">BLIST_NO_ULD_ATTACH</a>},", 
"<span class=\"ts\"/>{\"DELL\", \"Universal Xport\", \"*\", <a class=\"id\" href=\"#BLIST_NO_ULD_ATTACH\">BLIST_NO_ULD_ATTACH</a>},", 
"<span class=\"ts\"/>{\"SMSC\", \"USB 2 HS-CF\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"SONY\", \"CD-ROM CDU-8001\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_BORKEN\">BLIST_BORKEN</a>},", 
"<span class=\"ts\"/>{\"SONY\", \"TSL\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a>},<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* DDS3 &amp; DDS4 autoloaders */</span>", 
"<span class=\"ts\"/>{\"ST650211\", \"CF\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_RETRY_HWERROR\">BLIST_RETRY_HWERROR</a>},", 
"<span class=\"ts\"/>{\"SUN\", \"T300\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"SUN\", \"T4\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"TEXEL\", \"CD-ROM\", \"1.06\", <a class=\"id\" href=\"#BLIST_BORKEN\">BLIST_BORKEN</a>},", 
"<span class=\"ts\"/>{\"Tornado-\", \"F4\", \"*\", <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"TOSHIBA\", \"CDROM\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_ISROM\">BLIST_ISROM</a>},", 
"<span class=\"ts\"/>{\"TOSHIBA\", \"CD-ROM\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_ISROM\">BLIST_ISROM</a>},", 
"<span class=\"ts\"/>{\"USB2.0\", \"SMARTMEDIA/XD\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_FORCELUN\">BLIST_FORCELUN</a> | <a class=\"id\" href=\"#BLIST_INQUIRY_36\">BLIST_INQUIRY_36</a>},", 
"<span class=\"ts\"/>{\"WangDAT\", \"Model 2600\", \"01.7\", <a class=\"id\" href=\"#BLIST_SELECT_NO_ATN\">BLIST_SELECT_NO_ATN</a>},", 
"<span class=\"ts\"/>{\"WangDAT\", \"Model 3200\", \"02.2\", <a class=\"id\" href=\"#BLIST_SELECT_NO_ATN\">BLIST_SELECT_NO_ATN</a>},", 
"<span class=\"ts\"/>{\"WangDAT\", \"Model 1300\", \"02.4\", <a class=\"id\" href=\"#BLIST_SELECT_NO_ATN\">BLIST_SELECT_NO_ATN</a>},", 
"<span class=\"ts\"/>{\"WDC WD25\", \"00JB-00FUA0\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_NOREPORTLUN\">BLIST_NOREPORTLUN</a>},", 
"<span class=\"ts\"/>{\"XYRATEX\", \"RS\", \"*\", <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a> | <a class=\"id\" href=\"#BLIST_LARGELUN\">BLIST_LARGELUN</a>},", 
"<span class=\"ts\"/>{\"Zzyzx\", \"RocketStor 500S\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{\"Zzyzx\", \"RocketStor 2000\", <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#BLIST_SPARSELUN\">BLIST_SPARSELUN</a>},", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0 },", 
"};", 
"", 
"static struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#scsi_devinfo_lookup_by_key\">scsi_devinfo_lookup_by_key</a>(int <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#found\">found</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>, &amp;<a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>, <a class=\"id\" href=\"#node\">node</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#key\">key</a> == <a class=\"id\" href=\"#key\">key</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#found\">found</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#found\">found</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ERR_PTR\">ERR_PTR</a>(-<a class=\"id\" href=\"#EINVAL\">EINVAL</a>);", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * scsi_strcpy_devinfo: called from scsi_dev_info_list_add to copy into</span>", 
"<span class=\"comment\"> * devinfo vendor and model strings.</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#scsi_strcpy_devinfo\">scsi_strcpy_devinfo</a>(char *<a class=\"id\" href=\"#name\">name</a>, char *<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#to_length\">to_length</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>char *<a class=\"id\" href=\"#from\">from</a>, int <a class=\"id\" href=\"#compatible\">compatible</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#from_length\">from_length</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#from_length\">from_length</a> = <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#from\">from</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(<a class=\"id\" href=\"#to\">to</a>, <a class=\"id\" href=\"#from\">from</a>, <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#to_length\">to_length</a>, <a class=\"id\" href=\"#from_length\">from_length</a>));", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#from_length\">from_length</a> &lt; <a class=\"id\" href=\"#to_length\">to_length</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#compatible\">compatible</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * NUL terminate the string if it is short.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to\">to</a>[<a class=\"id\" href=\"#from_length\">from_length</a>] = '\\0';", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * space pad the string if it is short. </span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strncpy\">strncpy</a>(&amp;<a class=\"id\" href=\"#to\">to</a>[<a class=\"id\" href=\"#from_length\">from_length</a>], <a class=\"id\" href=\"#spaces\">spaces</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#to_length\">to_length</a> - <a class=\"id\" href=\"#from_length\">from_length</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#from_length\">from_length</a> &gt; <a class=\"id\" href=\"#to_length\">to_length</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"%s: %s string '%s' is too long\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#from\">from</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_dev_info_list_add - add one dev_info list entry.</span>", 
"<span class=\"comment\"> * @compatible: if true, null terminate short strings.  Otherwise space pad.</span>", 
"<span class=\"comment\"> * @vendor:<span class=\"ts\"/>vendor string</span>", 
"<span class=\"comment\"> * @model:<span class=\"ts\"/>model (product) string</span>", 
"<span class=\"comment\"> * @strflags:<span class=\"ts\"/>integer string</span>", 
"<span class=\"comment\"> * @flags:<span class=\"ts\"/>if strflags NULL, use this flag value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Create and add one dev_info entry for @vendor, @model, @strflags or</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@flag. If @compatible, add to the tail of the list, do not space</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>pad, and set devinfo-&gt;compatible. The scsi_static_device_list entries</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>are added with @compatible 1 and @clfags NULL.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns: 0 OK, -error on failure.</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#scsi_dev_info_list_add\">scsi_dev_info_list_add</a>(int <a class=\"id\" href=\"#compatible\">compatible</a>, char *<a class=\"id\" href=\"#vendor\">vendor</a>, char *<a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    char *<a class=\"id\" href=\"#strflags\">strflags</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_dev_info_list_add_keyed\">scsi_dev_info_list_add_keyed</a>(<a class=\"id\" href=\"#compatible\">compatible</a>, <a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#strflags\">strflags</a>, <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#SCSI_DEVINFO_GLOBAL\">SCSI_DEVINFO_GLOBAL</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_dev_info_list_add_keyed - add one dev_info list entry.</span>", 
"<span class=\"comment\"> * @compatible: if true, null terminate short strings.  Otherwise space pad.</span>", 
"<span class=\"comment\"> * @vendor:<span class=\"ts\"/>vendor string</span>", 
"<span class=\"comment\"> * @model:<span class=\"ts\"/>model (product) string</span>", 
"<span class=\"comment\"> * @strflags:<span class=\"ts\"/>integer string</span>", 
"<span class=\"comment\"> * @flags:<span class=\"ts\"/>if strflags NULL, use this flag value</span>", 
"<span class=\"comment\"> * @key:<span class=\"ts\"/>specify list to use</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Create and add one dev_info entry for @vendor, @model,</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>@strflags or @flag in list specified by @key. If @compatible,</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>add to the tail of the list, do not space pad, and set</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>devinfo-&gt;compatible. The scsi_static_device_list entries are</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>added with @compatible 1 and @clfags NULL.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns: 0 OK, -error on failure.</span>", 
"<span class=\"comment\"> **/</span>", 
"int <a class=\"id\" href=\"#scsi_dev_info_list_add_keyed\">scsi_dev_info_list_add_keyed</a>(int <a class=\"id\" href=\"#compatible\">compatible</a>, char *<a class=\"id\" href=\"#vendor\">vendor</a>, char *<a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> char *<a class=\"id\" href=\"#strflags\">strflags</a>, int <a class=\"id\" href=\"#flags\">flags</a>, int <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a> *<a class=\"id\" href=\"#devinfo\">devinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_devinfo_lookup_by_key\">scsi_devinfo_lookup_by_key</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinfo\">devinfo</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#devinfo\">devinfo</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#devinfo\">devinfo</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: no memory\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_strcpy_devinfo\">scsi_strcpy_devinfo</a>(\"vendor\", <a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#vendor\">vendor</a>, sizeof(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#vendor\">vendor</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#compatible\">compatible</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_strcpy_devinfo\">scsi_strcpy_devinfo</a>(\"model\", <a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#model\">model</a>, sizeof(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#model\">model</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#model\">model</a>, <a class=\"id\" href=\"#compatible\">compatible</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#strflags\">strflags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#simple_strtoul\">simple_strtoul</a>(<a class=\"id\" href=\"#strflags\">strflags</a>, <a class=\"id\" href=\"#NULL\">NULL</a>, 0);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#flags\">flags</a> = <a class=\"id\" href=\"#flags\">flags</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#compatible\">compatible</a> = <a class=\"id\" href=\"#compatible\">compatible</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#compatible\">compatible</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#dev_info_list\">dev_info_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      &amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>);", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_add\">list_add</a>(&amp;<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#dev_info_list\">dev_info_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_dev_info_list_add_keyed\">scsi_dev_info_list_add_keyed</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_dev_info_list_add_str - parse dev_list and add to the scsi_dev_info_list.</span>", 
"<span class=\"comment\"> * @dev_list:<span class=\"ts\"/>string of device flags to add</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Parse dev_list, and add entries to the scsi_dev_info_list.</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>dev_list is of the form \"vendor:product:flag,vendor:product:flag\".</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>dev_list is modified via strsep. Can be called for command line</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>addition, for proc or mabye a sysfs interface.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns: 0 if OK, -error on failure.</span>", 
"<span class=\"comment\"> **/</span>", 
"static int <a class=\"id\" href=\"#scsi_dev_info_list_add_str\">scsi_dev_info_list_add_str</a>(char *<a class=\"id\" href=\"#dev_list\">dev_list</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#vendor\">vendor</a>, *<a class=\"id\" href=\"#model\">model</a>, *<a class=\"id\" href=\"#strflags\">strflags</a>, *<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#next_check\">next_check</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#res\">res</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a> = <a class=\"id\" href=\"#dev_list\">dev_list</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#next\">next</a> && <a class=\"id\" href=\"#next\">next</a>[0] == '\"') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Ignore both the leading and trailing quote.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next\">next</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_check\">next_check</a> = \",\\\"\";", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#next_check\">next_check</a> = \",\";", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For the leading and trailing '\"' case, the for loop comes</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * through the last time with vendor[0] == '\\0'.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#vendor\">vendor</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#next\">next</a>, \":\"); <a class=\"id\" href=\"#vendor\">vendor</a> && (<a class=\"id\" href=\"#vendor\">vendor</a>[0] != '\\0')", 
"<span class=\"ts\"/>     && (<a class=\"id\" href=\"#res\">res</a> == 0); <a class=\"id\" href=\"#vendor\">vendor</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#next\">next</a>, \":\")) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strflags\">strflags</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#model\">model</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#next\">next</a>, \":\");", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#model\">model</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strflags\">strflags</a> = <a class=\"id\" href=\"#strsep\">strsep</a>(&amp;<a class=\"id\" href=\"#next\">next</a>, <a class=\"id\" href=\"#next_check\">next_check</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#model\">model</a> || !<a class=\"id\" href=\"#strflags\">strflags</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"%s: bad dev info string '%s' '%s'\"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       \" '%s'\\n\", <a class=\"id\" href=\"#__func__\">__func__</a>, <a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#strflags\">strflags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#res\">res</a> = <a class=\"id\" href=\"#scsi_dev_info_list_add\">scsi_dev_info_list_add</a>(0 <span class=\"comment\">/* compatible */</span>, <a class=\"id\" href=\"#vendor\">vendor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#model\">model</a>, <a class=\"id\" href=\"#strflags\">strflags</a>, 0);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#res\">res</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * get_device_flags - get device specific flags from the dynamic device list.</span>", 
"<span class=\"comment\"> * @sdev:       &amp;scsi_device to get flags for</span>", 
"<span class=\"comment\"> * @vendor:<span class=\"ts\"/>vendor name</span>", 
"<span class=\"comment\"> * @model:<span class=\"ts\"/>model name</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *     Search the global scsi_dev_info_list (specified by list zero)</span>", 
"<span class=\"comment\"> *     for an entry matching @vendor and @model, if found, return the</span>", 
"<span class=\"comment\"> *     matching flags value, else return the host or global default</span>", 
"<span class=\"comment\"> *     settings.  Called during scan time.</span>", 
"<span class=\"comment\"> **/</span>", 
"int <a class=\"id\" href=\"#scsi_get_device_flags\">scsi_get_device_flags</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const unsigned char *<a class=\"id\" href=\"#vendor\">vendor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  const unsigned char *<a class=\"id\" href=\"#model\">model</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_get_device_flags_keyed\">scsi_get_device_flags_keyed</a>(<a class=\"id\" href=\"#sdev\">sdev</a>, <a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#SCSI_DEVINFO_GLOBAL\">SCSI_DEVINFO_GLOBAL</a>);", 
"}", 
"", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_get_device_flags_keyed - get device specific flags from the dynamic device list</span>", 
"<span class=\"comment\"> * @sdev:       &amp;scsi_device to get flags for</span>", 
"<span class=\"comment\"> * @vendor:<span class=\"ts\"/>vendor name</span>", 
"<span class=\"comment\"> * @model:<span class=\"ts\"/>model name</span>", 
"<span class=\"comment\"> * @key:<span class=\"ts\"/>list to look up</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> *     Search the scsi_dev_info_list specified by @key for an entry</span>", 
"<span class=\"comment\"> *     matching @vendor and @model, if found, return the matching</span>", 
"<span class=\"comment\"> *     flags value, else return the host or global default settings.</span>", 
"<span class=\"comment\"> *     Called during scan time.</span>", 
"<span class=\"comment\"> **/</span>", 
"int <a class=\"id\" href=\"#scsi_get_device_flags_keyed\">scsi_get_device_flags_keyed</a>(struct <a class=\"id\" href=\"#scsi_device\">scsi_device</a> *<a class=\"id\" href=\"#sdev\">sdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#vendor\">vendor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>const unsigned char *<a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a> *<a class=\"id\" href=\"#devinfo\">devinfo</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> = <a class=\"id\" href=\"#scsi_devinfo_lookup_by_key\">scsi_devinfo_lookup_by_key</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_entry\">list_for_each_entry</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>, &amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#dev_info_list\">dev_info_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#compatible\">compatible</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Behave like the older version of get_device_flags.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#max\">max</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * XXX why skip leading spaces? If an odd INQUIRY</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * value, that should have been part of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * scsi_static_device_list[] entry, such as \"  FOO\"</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * rather than \"FOO\". Since this code is already</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * here, and we don't know what device it is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * trying to work with, leave it as-is.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = 8;<span class=\"ts\"/><span class=\"comment\">/* max length of vendor */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#max\">max</a> &gt; 0) && *<a class=\"id\" href=\"#vendor\">vendor</a> == ' ') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vendor\">vendor</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * XXX removing the following strlen() would be</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * good, using it means that for a an entry not in</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the list, we scan every byte of every vendor</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * listed in scsi_static_device_list[], and never match</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * a single one (and still have to compare at</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * least the first byte of each vendor).</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#vendor\">vendor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#vendor\">vendor</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Skip spaces again.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a> = 16;<span class=\"ts\"/><span class=\"comment\">/* max length of model */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while ((<a class=\"id\" href=\"#max\">max</a> &gt; 0) && *<a class=\"id\" href=\"#model\">model</a> == ' ') {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max\">max</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#model\">model</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#model\">model</a>, <a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#min\">min</a>(<a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#model\">model</a>))))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#vendor\">vendor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     sizeof(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#vendor\">vendor</a>)) &&", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     !<a class=\"id\" href=\"#memcmp\">memcmp</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#model\">model</a>, <a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      sizeof(<a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#model\">model</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* nothing found, return nothing */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#key\">key</a> != <a class=\"id\" href=\"#SCSI_DEVINFO_GLOBAL\">SCSI_DEVINFO_GLOBAL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* except for the global list, where we have an exception */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_bflags\">sdev_bflags</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#sdev\">sdev</a>-><a class=\"id\" href=\"#sdev_bflags\">sdev_bflags</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#scsi_default_dev_flags\">scsi_default_dev_flags</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_get_device_flags_keyed\">scsi_get_device_flags_keyed</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"struct <a class=\"id\" href=\"#double_list\">double_list</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#top\">top</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#bottom\">bottom</a>;", 
"};", 
"", 
"static int <a class=\"id\" href=\"#devinfo_seq_show\">devinfo_seq_show</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#double_list\">double_list</a> *<a class=\"id\" href=\"#dl\">dl</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a>, struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a> *<a class=\"id\" href=\"#devinfo\">devinfo</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#bottom\">bottom</a>, struct <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#dev_info_list\">dev_info_list</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>.<a class=\"id\" href=\"#next\">next</a> == <a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#bottom\">bottom</a> &&", 
"<span class=\"ts\"/>    <a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#name\">name</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"[%s]:\\n\", <a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#name\">name</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#seq_printf\">seq_printf</a>(<a class=\"id\" href=\"#m\">m</a>, \"'%.8s' '%.16s' 0x%x\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#vendor\">vendor</a>, <a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#model\">model</a>, <a class=\"id\" href=\"#devinfo\">devinfo</a>-><a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#devinfo_seq_start\">devinfo_seq_start</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#double_list\">double_list</a> *<a class=\"id\" href=\"#dl\">dl</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#dl\">dl</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#loff_t\">loff_t</a> <a class=\"id\" href=\"#pos\">pos</a> = *<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#dl\">dl</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a>, &amp;<a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a>, struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_for_each\">list_for_each</a>(<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#bottom\">bottom</a>, &amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#pos\">pos</a>-- == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#dl\">dl</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dl\">dl</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#devinfo_seq_next\">devinfo_seq_next</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#double_list\">double_list</a> *<a class=\"id\" href=\"#dl\">dl</a> = <a class=\"id\" href=\"#v\">v</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a>, struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a>, <a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/>++*<a class=\"id\" href=\"#ppos\">ppos</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#bottom\">bottom</a> = <a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#bottom\">bottom</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>while (&amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a> == <a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#bottom\">bottom</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a> = <a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a>-><a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a> == &amp;<a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#dl\">dl</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#top\">top</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dl\">dl</a>-><a class=\"id\" href=\"#bottom\">bottom</a> = <a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>.<a class=\"id\" href=\"#next\">next</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#dl\">dl</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#devinfo_seq_stop\">devinfo_seq_stop</a>(struct <a class=\"id\" href=\"#seq_file\">seq_file</a> *<a class=\"id\" href=\"#m\">m</a>, void *<a class=\"id\" href=\"#v\">v</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#v\">v</a>);", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#seq_operations\">seq_operations</a> <a class=\"id\" href=\"#scsi_devinfo_seq_ops\">scsi_devinfo_seq_ops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#start\">start</a><span class=\"ts\"/>= <a class=\"id\" href=\"#devinfo_seq_start\">devinfo_seq_start</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#next\">next</a><span class=\"ts\"/>= <a class=\"id\" href=\"#devinfo_seq_next\">devinfo_seq_next</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#stop\">stop</a><span class=\"ts\"/>= <a class=\"id\" href=\"#devinfo_seq_stop\">devinfo_seq_stop</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#show\">show</a><span class=\"ts\"/>= <a class=\"id\" href=\"#devinfo_seq_show\">devinfo_seq_show</a>,", 
"};", 
"", 
"static int <a class=\"id\" href=\"#proc_scsi_devinfo_open\">proc_scsi_devinfo_open</a>(struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>, struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#seq_open\">seq_open</a>(<a class=\"id\" href=\"#file\">file</a>, &amp;<a class=\"id\" href=\"#scsi_devinfo_seq_ops\">scsi_devinfo_seq_ops</a>);", 
"}", 
"", 
"<span class=\"comment\">/* </span>", 
"<span class=\"comment\"> * proc_scsi_dev_info_write - allow additions to scsi_dev_info_list via /proc.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description: Adds a black/white list entry for vendor and model with an</span>", 
"<span class=\"comment\"> * integer value of flag to the scsi device info list.</span>", 
"<span class=\"comment\"> * To use, echo \"vendor:model:flag\" &gt; /proc/scsi/device_info</span>", 
"<span class=\"comment\"> */</span>", 
"static <a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#proc_scsi_devinfo_write\">proc_scsi_devinfo_write</a>(struct <a class=\"id\" href=\"#file\">file</a> *<a class=\"id\" href=\"#file\">file</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       const char <a class=\"id\" href=\"#__user\">__user</a> *<a class=\"id\" href=\"#buf\">buf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#length\">length</a>, <a class=\"id\" href=\"#loff_t\">loff_t</a> *<a class=\"id\" href=\"#ppos\">ppos</a>)", 
"{", 
"<span class=\"ts\"/>char *<a class=\"id\" href=\"#buffer\">buffer</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ssize_t\">ssize_t</a> <a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#length\">length</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#buf\">buf</a> || <a class=\"id\" href=\"#length\">length</a>&gt;<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#buffer\">buffer</a> = (char *) <a class=\"id\" href=\"#__get_free_page\">__get_free_page</a>(<a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#copy_from_user\">copy_from_user</a>(<a class=\"id\" href=\"#buffer\">buffer</a>, <a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#length\">length</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =-<a class=\"id\" href=\"#EFAULT\">EFAULT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#length\">length</a> &lt; <a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#length\">length</a>] = '\\0';", 
"<span class=\"ts\"/>else if (<a class=\"id\" href=\"#buffer\">buffer</a>[<a class=\"id\" href=\"#PAGE_SIZE\">PAGE_SIZE</a>-1]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_dev_info_list_add_str\">scsi_dev_info_list_add_str</a>(<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#free_page\">free_page</a>((unsigned long)<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static const struct <a class=\"id\" href=\"#file_operations\">file_operations</a> <a class=\"id\" href=\"#scsi_devinfo_proc_fops\">scsi_devinfo_proc_fops</a> = {", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#owner\">owner</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#THIS_MODULE\">THIS_MODULE</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#open\">open</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_scsi_devinfo_open\">proc_scsi_devinfo_open</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#read\">read</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_read\">seq_read</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#write\">write</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#proc_scsi_devinfo_write\">proc_scsi_devinfo_write</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#llseek\">llseek</a><span class=\"ts\"/><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_lseek\">seq_lseek</a>,", 
"<span class=\"ts\"/>.<a class=\"id\" href=\"#release\">release</a><span class=\"ts\"/>= <a class=\"id\" href=\"#seq_release\">seq_release</a>,", 
"};", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SCSI_PROC_FS */</span>", 
"", 
"<a class=\"id\" href=\"#module_param_string\">module_param_string</a>(<a class=\"id\" href=\"#dev_flags\">dev_flags</a>, <a class=\"id\" href=\"#scsi_dev_flags\">scsi_dev_flags</a>, sizeof(<a class=\"id\" href=\"#scsi_dev_flags\">scsi_dev_flags</a>), 0);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#dev_flags\">dev_flags</a>,", 
"<span class=\"ts\"/> \"Given scsi_dev_flags=vendor:model:flags[,v:m:f] add black/white\"", 
"<span class=\"ts\"/> \" list entries for vendor and model with an integer value of flags\"", 
"<span class=\"ts\"/> \" to the scsi device info list\");", 
"", 
"<a class=\"id\" href=\"#module_param_named\">module_param_named</a>(<a class=\"id\" href=\"#default_dev_flags\">default_dev_flags</a>, <a class=\"id\" href=\"#scsi_default_dev_flags\">scsi_default_dev_flags</a>, int, <a class=\"id\" href=\"#S_IRUGO\">S_IRUGO</a>|<a class=\"id\" href=\"#S_IWUSR\">S_IWUSR</a>);", 
"<a class=\"id\" href=\"#MODULE_PARM_DESC\">MODULE_PARM_DESC</a>(<a class=\"id\" href=\"#default_dev_flags\">default_dev_flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/> \"scsi default device flag integer value\");", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_exit_devinfo - remove /proc/scsi/device_info &amp; the scsi_dev_info_list</span>", 
"<span class=\"comment\"> **/</span>", 
"void <a class=\"id\" href=\"#scsi_exit_devinfo\">scsi_exit_devinfo</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#remove_proc_entry\">remove_proc_entry</a>(\"scsi/device_info\", <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#scsi_dev_info_remove_list\">scsi_dev_info_remove_list</a>(<a class=\"id\" href=\"#SCSI_DEVINFO_GLOBAL\">SCSI_DEVINFO_GLOBAL</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_dev_info_add_list - add a new devinfo list</span>", 
"<span class=\"comment\"> * @key:<span class=\"ts\"/>key of the list to add</span>", 
"<span class=\"comment\"> * @name:<span class=\"ts\"/>Name of the list to add (for /proc/scsi/device_info)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Adds the requested list, returns zero on success, -EEXIST if the</span>", 
"<span class=\"comment\"> * key is already registered to a list, or other error on failure.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#scsi_dev_info_add_list\">scsi_dev_info_add_list</a>(int <a class=\"id\" href=\"#key\">key</a>, const char *<a class=\"id\" href=\"#name\">name</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_devinfo_lookup_by_key\">scsi_devinfo_lookup_by_key</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* list already exists */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EEXIST\">EEXIST</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> = <a class=\"id\" href=\"#kmalloc\">kmalloc</a>(sizeof(*<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#INIT_LIST_HEAD\">INIT_LIST_HEAD</a>(&amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#name\">name</a> = <a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#key\">key</a> = <a class=\"id\" href=\"#key\">key</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_dev_info_add_list\">scsi_dev_info_add_list</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_dev_info_remove_list - destroy an added devinfo list</span>", 
"<span class=\"comment\"> * @key: key of the list to destroy</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Iterates over the entire list first, freeing all the values, then</span>", 
"<span class=\"comment\"> * frees the list itself.  Returns 0 on success or -EINVAL if the key</span>", 
"<span class=\"comment\"> * can't be found.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#scsi_dev_info_remove_list\">scsi_dev_info_remove_list</a>(int <a class=\"id\" href=\"#key\">key</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> *<a class=\"id\" href=\"#lh\">lh</a>, *<a class=\"id\" href=\"#lh_next\">lh_next</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list_table\">scsi_dev_info_list_table</a> *<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_devinfo_lookup_by_key\">scsi_devinfo_lookup_by_key</a>(<a class=\"id\" href=\"#key\">key</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* no such list */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* remove from the master list */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_del\">list_del</a>(&amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#node\">node</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_for_each_safe\">list_for_each_safe</a>(<a class=\"id\" href=\"#lh\">lh</a>, <a class=\"id\" href=\"#lh_next\">lh_next</a>, &amp;<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>-><a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a> *<a class=\"id\" href=\"#devinfo\">devinfo</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#devinfo\">devinfo</a> = <a class=\"id\" href=\"#list_entry\">list_entry</a>(<a class=\"id\" href=\"#lh\">lh</a>, struct <a class=\"id\" href=\"#scsi_dev_info_list\">scsi_dev_info_list</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#dev_info_list\">dev_info_list</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#devinfo\">devinfo</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#devinfo_table\">devinfo_table</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#scsi_dev_info_remove_list\">scsi_dev_info_remove_list</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * scsi_init_devinfo - set up the dynamic device list.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Description:</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>Add command line entries from scsi_dev_flags, then add</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/>scsi_static_device_list entries to the scsi device info list.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#scsi_init_devinfo\">scsi_init_devinfo</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#proc_dir_entry\">proc_dir_entry</a> *<a class=\"id\" href=\"#p\">p</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#error\">error</a>, <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_dev_info_add_list\">scsi_dev_info_add_list</a>(<a class=\"id\" href=\"#SCSI_DEVINFO_GLOBAL\">SCSI_DEVINFO_GLOBAL</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_dev_info_list_add_str\">scsi_dev_info_list_add_str</a>(<a class=\"id\" href=\"#scsi_dev_flags\">scsi_dev_flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#scsi_static_device_list\">scsi_static_device_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vendor\">vendor</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = <a class=\"id\" href=\"#scsi_dev_info_list_add\">scsi_dev_info_list_add</a>(1 <span class=\"comment\">/* compatibile */</span>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_static_device_list\">scsi_static_device_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#vendor\">vendor</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_static_device_list\">scsi_static_device_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#model\">model</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NULL\">NULL</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_static_device_list\">scsi_static_device_list</a>[<a class=\"id\" href=\"#i\">i</a>].<a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_SCSI_PROC_FS\">CONFIG_SCSI_PROC_FS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#p\">p</a> = <a class=\"id\" href=\"#proc_create\">proc_create</a>(\"scsi/device_info\", 0, <a class=\"id\" href=\"#NULL\">NULL</a>, &amp;<a class=\"id\" href=\"#scsi_devinfo_proc_fops\">scsi_devinfo_proc_fops</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#p\">p</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#error\">error</a> = -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* CONFIG_SCSI_PROC_FS */</span>", 
"", 
" <a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#error\">error</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scsi_exit_devinfo\">scsi_exit_devinfo</a>();", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#error\">error</a>;", 
"}", 
];
xr_frag_insert('l/46/a2a9570b6725d5b38d27f91584dd9f774006e5.xr', __xr_tmp);
