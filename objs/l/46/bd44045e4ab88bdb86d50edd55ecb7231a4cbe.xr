var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/>Hardware Random Number Generator</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>Please read Documentation/hw_random.txt for details on use.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"><span class=\"ts\"/>----------------------------------------------------------</span>", 
"<span class=\"comment\"><span class=\"ts\"/>This software may be used and distributed according to the terms</span>", 
"<span class=\"comment\">        of the GNU General Public License, incorporated herein by reference.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#LINUX_HWRANDOM_H_\">LINUX_HWRANDOM_H_</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LINUX_HWRANDOM_H_\">LINUX_HWRANDOM_H_</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#list\">list</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * struct hwrng - Hardware Random Number Generator driver</span>", 
"<span class=\"comment\"> * @name:<span class=\"ts\"/><span class=\"ts\"/>Unique RNG name.</span>", 
"<span class=\"comment\"> * @init:<span class=\"ts\"/><span class=\"ts\"/>Initialization callback (can be NULL).</span>", 
"<span class=\"comment\"> * @cleanup:<span class=\"ts\"/><span class=\"ts\"/>Cleanup callback (can be NULL).</span>", 
"<span class=\"comment\"> * @data_present:<span class=\"ts\"/>Callback to determine if data is available</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>on the RNG. If NULL, it is assumed that</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>there is always data available.  *OBSOLETE*</span>", 
"<span class=\"comment\"> * @data_read:<span class=\"ts\"/><span class=\"ts\"/>Read data from the RNG device.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Returns the number of lower random bytes in \"data\".</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>Must not be NULL.    *OSOLETE*</span>", 
"<span class=\"comment\"> * @read:<span class=\"ts\"/><span class=\"ts\"/>New API. drivers can fill up to max bytes of data</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>into the buffer. The buffer is aligned for any type.</span>", 
"<span class=\"comment\"> * @priv:<span class=\"ts\"/><span class=\"ts\"/>Private data, for use by the RNG driver.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#hwrng\">hwrng</a> {", 
"<span class=\"ts\"/>const char *<a class=\"id\" href=\"#name\">name</a>;", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#init\">init</a>)(struct <a class=\"id\" href=\"#hwrng\">hwrng</a> *<a class=\"id\" href=\"#rng\">rng</a>);", 
"<span class=\"ts\"/>void (*<a class=\"id\" href=\"#cleanup\">cleanup</a>)(struct <a class=\"id\" href=\"#hwrng\">hwrng</a> *<a class=\"id\" href=\"#rng\">rng</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#data_present\">data_present</a>)(struct <a class=\"id\" href=\"#hwrng\">hwrng</a> *<a class=\"id\" href=\"#rng\">rng</a>, int <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#data_read\">data_read</a>)(struct <a class=\"id\" href=\"#hwrng\">hwrng</a> *<a class=\"id\" href=\"#rng\">rng</a>, <a class=\"id\" href=\"#u32\">u32</a> *<a class=\"id\" href=\"#data\">data</a>);", 
"<span class=\"ts\"/>int (*<a class=\"id\" href=\"#read\">read</a>)(struct <a class=\"id\" href=\"#hwrng\">hwrng</a> *<a class=\"id\" href=\"#rng\">rng</a>, void *<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#size_t\">size_t</a> <a class=\"id\" href=\"#max\">max</a>, <a class=\"id\" href=\"#bool\">bool</a> <a class=\"id\" href=\"#wait\">wait</a>);", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#priv\">priv</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* internal. */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#list_head\">list_head</a> <a class=\"id\" href=\"#list\">list</a>;", 
"};", 
"", 
"<span class=\"comment\">/** Register a new Hardware Random Number Generator driver. */</span>", 
"extern int <a class=\"id\" href=\"#hwrng_register\">hwrng_register</a>(struct <a class=\"id\" href=\"#hwrng\">hwrng</a> *<a class=\"id\" href=\"#rng\">rng</a>);", 
"<span class=\"comment\">/** Unregister a Hardware Random Number Generator driver. */</span>", 
"extern void <a class=\"id\" href=\"#hwrng_unregister\">hwrng_unregister</a>(struct <a class=\"id\" href=\"#hwrng\">hwrng</a> *<a class=\"id\" href=\"#rng\">rng</a>);", 
"", 
"#<a class=\"id\" href=\"#endif\">endif</a> <span class=\"comment\">/* LINUX_HWRANDOM_H_ */</span>", 
];
xr_frag_insert('l/46/bd44045e4ab88bdb86d50edd55ecb7231a4cbe.xr', __xr_tmp);
