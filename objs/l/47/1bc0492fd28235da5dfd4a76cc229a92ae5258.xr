var __xr_tmp = [
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex2\">ex2</a> &gt; <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * To merge left, pass \"ex2 - 1\" to try_to_merge(),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * since it merges towards right _only_.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_ext_try_to_merge\">ext4_ext_try_to_merge</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ex2\">ex2</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_correct_indexes\">ext4_ext_correct_indexes</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Try to Merge towards right. This might be required</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * only when the whole extent is being written to.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * i.e. ex2 == ex and ex3 == NULL.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ex3\">ex3</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_ext_try_to_merge\">ext4_ext_try_to_merge</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ex2\">ex2</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_correct_indexes\">ext4_ext_correct_indexes</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark modified extent as dirty */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<a class=\"id\" href=\"#insert\">insert</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#newex\">newex</a>, 0);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a> && <a class=\"id\" href=\"#may_zeroout\">may_zeroout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =  <a class=\"id\" href=\"#ext4_ext_zeroout\">ext4_ext_zeroout</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update the extent length and mark as initialized */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zero out the first half */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ? <a class=\"id\" href=\"#err\">err</a> : <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"", 
"<a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * This function is called by ext4_ext_map_blocks() from</span>", 
"<span class=\"comment\"> * ext4_get_blocks_dio_write() when DIO to write</span>", 
"<span class=\"comment\"> * to an uninitialized extent.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Writing to an uninitized extent may result in splitting the uninitialized</span>", 
"<span class=\"comment\"> * extent into multiple /intialized unintialized extents (up to three)</span>", 
"<span class=\"comment\"> * There are three possibilities:</span>", 
"<span class=\"comment\"> *   a&gt; There is no split required: Entire extent should be uninitialized</span>", 
"<span class=\"comment\"> *   b&gt; Splits in two extents: Write is happening at either end of the extent</span>", 
"<span class=\"comment\"> *   c&gt; Splits in three extents: Somone is writing in middle of the extent</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * One of more index blocks maybe needed if the extent tree grow after</span>", 
"<span class=\"comment\"> * the unintialized extent split. To prevent ENOSPC occur at the IO</span>", 
"<span class=\"comment\"> * complete, we need to split the uninitialized extent before DIO submit</span>", 
"<span class=\"comment\"> * the IO. The uninitialized extent called at this time will be split</span>", 
"<span class=\"comment\"> * into three uninitialized extent(at most). After IO complete, the part</span>", 
"<span class=\"comment\"> * being filled will be convert to initialized by the end_io callback function</span>", 
"<span class=\"comment\"> * via ext4_convert_unwritten_extents().</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns the size of uninitialized extent to be written on success.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#ext4_split_unwritten_extents\">ext4_split_unwritten_extents</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> *<a class=\"id\" href=\"#map\">map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#newex\">newex</a>, <a class=\"id\" href=\"#orig_ex\">orig_ex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex1\">ex1</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex2\">ex2</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex3\">ex3</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#ee_block\">ee_block</a>, <a class=\"id\" href=\"#eof_block\">eof_block</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#allocated\">allocated</a>, <a class=\"id\" href=\"#ee_len\">ee_len</a>, <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#may_zeroout\">may_zeroout</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"ext4_split_unwritten_extents: inode %lu, logical\"", 
"<span class=\"ts\"/><span class=\"ts\"/>\"block %llu, max_blocks %u\\n\", <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>(unsigned long long)<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eof_block\">eof_block</a> = (<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_size\">i_size</a> + <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize\">s_blocksize</a> - 1) >>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_blocksize_bits\">s_blocksize_bits</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#eof_block\">eof_block</a> &lt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#eof_block\">eof_block</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#ee_len\">ee_len</a> - (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a> + <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ee_len\">ee_len</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>));", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * It is safe to convert extent to initialized via explicit</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * zeroout only if extent is fully insde i_size or new_size.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#may_zeroout\">may_zeroout</a> = <a class=\"id\" href=\"#ee_block\">ee_block</a> + <a class=\"id\" href=\"#ee_len\">ee_len</a> <= <a class=\"id\" href=\"#eof_block\">eof_block</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"> <span class=\"ts\"/> * If the uninitialized extent begins at the same logical</span>", 
"<span class=\"comment\"> <span class=\"ts\"/> * block where the write begins, and the write completely</span>", 
"<span class=\"comment\"> <span class=\"ts\"/> * covers the extent, then we don't need to split it.</span>", 
"<span class=\"comment\"> <span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> == <a class=\"id\" href=\"#ee_block\">ee_block</a>) && (<a class=\"id\" href=\"#allocated\">allocated</a> <= <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* ex1: ee_block to map-&gt;m_lblk - 1 : uninitialized */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> &gt; <a class=\"id\" href=\"#ee_block\">ee_block</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex1\">ex1</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex1\">ex1</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex1\">ex1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a> = &amp;<a class=\"id\" href=\"#newex\">newex</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * for sanity, update the length of the ex2 extent before</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we insert ex3, if ex1 is NULL. This is to avoid temporary</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * overlap of blocks.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#ex1\">ex1</a> && <a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* ex3: to ee_block + ee_len : uninitialised */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#newdepth\">newdepth</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex3\">ex3</a> = &amp;<a class=\"id\" href=\"#newex\">newex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex3\">ex3</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex3\">ex3</a>, <a class=\"id\" href=\"#newblock\">newblock</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex3\">ex3</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#allocated\">allocated</a> - <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex3\">ex3</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ex3\">ex3</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a> && <a class=\"id\" href=\"#may_zeroout\">may_zeroout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =  <a class=\"id\" href=\"#ext4_ext_zeroout\">ext4_ext_zeroout</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update the extent length and mark as initialized */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zeroed the full extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* blocks available from map-&gt;m_lblk */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * The depth, and hence eh &amp; ex might change</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * as part of the insert above.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newdepth\">newdepth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * update the extent length after successful insert of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * split extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a> -= <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex3\">ex3</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#ee_len\">ee_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#may_zeroout\">may_zeroout</a> = <a class=\"id\" href=\"#ee_block\">ee_block</a> + <a class=\"id\" href=\"#ee_len\">ee_len</a> <= <a class=\"id\" href=\"#eof_block\">eof_block</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#newdepth\">newdepth</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ex2\">ex2</a> != &amp;<a class=\"id\" href=\"#newex\">newex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If there was a change of depth as part of the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * insertion of ex3 above, we need to update the length</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of the ex1 extent again here</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex1\">ex1</a> && <a class=\"id\" href=\"#ex1\">ex1</a> != <a class=\"id\" href=\"#ex\">ex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex1\">ex1</a> = <a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex1\">ex1</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex1\">ex1</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a> = &amp;<a class=\"id\" href=\"#newex\">newex</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ex2: map-&gt;m_lblk to map-&gt;m_lblk + map-&gt;m_len-1 : to be written</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * using direct I/O, uninitialised still.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#cpu_to_le32\">cpu_to_le32</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex2\">ex2</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex2\">ex2</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#cpu_to_le16\">cpu_to_le16</a>(<a class=\"id\" href=\"#allocated\">allocated</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex2\">ex2</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex2\">ex2</a> != <a class=\"id\" href=\"#ex\">ex</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#insert\">insert</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark modified extent as dirty */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"out here\\n\");", 
"<span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<a class=\"id\" href=\"#insert\">insert</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_insert_extent\">ext4_ext_insert_extent</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#newex\">newex</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> == -<a class=\"id\" href=\"#ENOSPC\">ENOSPC</a> && <a class=\"id\" href=\"#may_zeroout\">may_zeroout</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> =  <a class=\"id\" href=\"#ext4_ext_zeroout\">ext4_ext_zeroout</a>(<a class=\"id\" href=\"#inode\">inode</a>, &amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* update the extent length and mark as initialized */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* zero out the first half */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"<span class=\"ts\"/>} else if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>;", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ? <a class=\"id\" href=\"#err\">err</a> : <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"", 
"<a class=\"id\" href=\"#fix_extent_len\">fix_extent_len</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_len\">ee_len</a>   = <a class=\"id\" href=\"#orig_ex\">orig_ex</a>.<a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_store_pblock\">ext4_ext_store_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>, <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#orig_ex\">orig_ex</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_uninitialized\">ext4_ext_mark_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"static int <a class=\"id\" href=\"#ext4_convert_unwritten_extents_endio\">ext4_convert_unwritten_extents_endio</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> *<a class=\"id\" href=\"#ex\">ex</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#depth\">depth</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_get_access\">ext4_ext_get_access</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* first mark the extent as initialized */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_mark_initialized\">ext4_ext_mark_initialized</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We have to see if it can be merged with the extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * on the left.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex\">ex</a> &gt; <a class=\"id\" href=\"#EXT_FIRST_EXTENT\">EXT_FIRST_EXTENT</a>(<a class=\"id\" href=\"#eh\">eh</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * To merge left, pass \"ex - 1\" to try_to_merge(),</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * since it merges towards right _only_.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_ext_try_to_merge\">ext4_ext_try_to_merge</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ex\">ex</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_correct_indexes\">ext4_ext_correct_indexes</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a>--;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Try to Merge towards right.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_ext_try_to_merge\">ext4_ext_try_to_merge</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_correct_indexes\">ext4_ext_correct_indexes</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* Mark modified extent as dirty */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_dirty\">ext4_ext_dirty</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a> + <a class=\"id\" href=\"#depth\">depth</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"}", 
"", 
"static void <a class=\"id\" href=\"#unmap_underlying_metadata_blocks\">unmap_underlying_metadata_blocks</a>(struct <a class=\"id\" href=\"#block_device\">block_device</a> *<a class=\"id\" href=\"#bdev\">bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sector_t\">sector_t</a> <a class=\"id\" href=\"#block\">block</a>, int <a class=\"id\" href=\"#count\">count</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#count\">count</a>; <a class=\"id\" href=\"#i\">i</a>++)", 
"                <a class=\"id\" href=\"#unmap_underlying_metadata\">unmap_underlying_metadata</a>(<a class=\"id\" href=\"#bdev\">bdev</a>, <a class=\"id\" href=\"#block\">block</a> + <a class=\"id\" href=\"#i\">i</a>);", 
"}", 
"", 
"static int", 
"<a class=\"id\" href=\"#ext4_ext_handle_uninitialized_extents\">ext4_ext_handle_uninitialized_extents</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> *<a class=\"id\" href=\"#map\">map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a>, int <a class=\"id\" href=\"#flags\">flags</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#allocated\">allocated</a>, <a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#newblock\">newblock</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_io_end_t\">ext4_io_end_t</a> *<a class=\"id\" href=\"#io\">io</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#cur_aio_dio\">cur_aio_dio</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"ext4_ext_handle_uninitialized_extents: inode %lu, logical\"", 
"<span class=\"ts\"/><span class=\"ts\"/>  \"block %llu, max_blocks %u, flags %d, allocated %u\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>, (unsigned long long)<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#allocated\">allocated</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* get_block() before submit the IO, split the extent */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_PRE_IO\">EXT4_GET_BLOCKS_PRE_IO</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_split_unwritten_extents\">ext4_split_unwritten_extents</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Flag the inode(non aio case) or end_io struct (aio case)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * that this IO needs to convertion to written when IO is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * completed</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#io\">io</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#io\">io</a>-><a class=\"id\" href=\"#flag\">flag</a> = <a class=\"id\" href=\"#EXT4_IO_UNWRITTEN\">EXT4_IO_UNWRITTEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_set_inode_state\">ext4_set_inode_state</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#EXT4_STATE_DIO_UNWRITTEN\">EXT4_STATE_DIO_UNWRITTEN</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ext4_should_dioread_nolock\">ext4_should_dioread_nolock</a>(<a class=\"id\" href=\"#inode\">inode</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> |= <a class=\"id\" href=\"#EXT4_MAP_UNINIT\">EXT4_MAP_UNINIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* IO end_io complete, convert the filled extent to written */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CONVERT\">EXT4_GET_BLOCKS_CONVERT</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_convert_unwritten_extents_endio\">ext4_convert_unwritten_extents_endio</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_update_inode_fsync_trans\">ext4_update_inode_fsync_trans</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/* buffered IO case */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * repeat fallocate creation request</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we already have an unwritten extent</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_UNINIT_EXT\">EXT4_GET_BLOCKS_UNINIT_EXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#map_out\">map_out</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* buffered READ or buffered write_begin() lookup */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE\">EXT4_GET_BLOCKS_CREATE</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We have blocks reserved already.  We</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * return allocated blocks so that delalloc</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * won't do block reservation for us.  But</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * the buffer head will be unmapped so that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * a read from the block returns 0s.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> |= <a class=\"id\" href=\"#EXT4_MAP_UNWRITTEN\">EXT4_MAP_UNWRITTEN</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out1\">out1</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* buffered write, writepage time, convert*/</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_ext_convert_to_initialized\">ext4_ext_convert_to_initialized</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> >= 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_update_inode_fsync_trans\">ext4_update_inode_fsync_trans</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#inode\">inode</a>, 1);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ret\">ret</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>} else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> |= <a class=\"id\" href=\"#EXT4_MAP_NEW\">EXT4_MAP_NEW</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * if we allocated more blocks than requested</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we need to make sure we unmap the extra block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * allocated. The actual needed block will get</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * unmapped later when we find the buffer_head marked</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * new.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#unmap_underlying_metadata_blocks\">unmap_underlying_metadata_blocks</a>(<a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_sb\">i_sb</a>-><a class=\"id\" href=\"#s_bdev\">s_bdev</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> + <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> - <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If we have done fallocate with the offset that is already</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * delayed allocated, we would have block reservation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * and quota reservation done in the delayed write path.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * But fallocate would have already updated quota and block</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * count for this offset. So cancel these reservation</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_DELALLOC_RESERVE\">EXT4_GET_BLOCKS_DELALLOC_RESERVE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_da_update_reserve_space\">ext4_da_update_reserve_space</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#allocated\">allocated</a>, 0);", 
"", 
"<a class=\"id\" href=\"#map_out\">map_out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_flags\">m_flags</a> |= <a class=\"id\" href=\"#EXT4_MAP_MAPPED\">EXT4_MAP_MAPPED</a>;", 
"<a class=\"id\" href=\"#out1\">out1</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#allocated\">allocated</a> &gt; <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_show_leaf\">ext4_ext_show_leaf</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_pblk\">m_pblk</a> = <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a> = <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"<a class=\"id\" href=\"#out2\">out2</a>:", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#path\">path</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_drop_refs\">ext4_ext_drop_refs</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a> ? <a class=\"id\" href=\"#err\">err</a> : <a class=\"id\" href=\"#allocated\">allocated</a>;", 
"}", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Block allocation/map/preallocation routine for extents based files</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Need to be called with</span>", 
"<span class=\"comment\"> * down_read(&amp;EXT4_I(inode)-&gt;i_data_sem) if not allocating file system block</span>", 
"<span class=\"comment\"> * (ie, create is zero). Otherwise down_write(&amp;EXT4_I(inode)-&gt;i_data_sem)</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * return &gt; 0, number of of blocks already mapped/allocated</span>", 
"<span class=\"comment\"> *          if create == 0 and these are pre-allocated blocks</span>", 
"<span class=\"comment\"> *          <span class=\"ts\"/>buffer head is unmapped</span>", 
"<span class=\"comment\"> *          otherwise blocks are mapped</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * return = 0, if plain look up failed (blocks have not been allocated)</span>", 
"<span class=\"comment\"> *          buffer head is unmapped</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * return &lt; 0, error case.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#ext4_ext_map_blocks\">ext4_ext_map_blocks</a>(<a class=\"id\" href=\"#handle_t\">handle_t</a> *<a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#inode\">inode</a> *<a class=\"id\" href=\"#inode\">inode</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_map_blocks\">ext4_map_blocks</a> *<a class=\"id\" href=\"#map\">map</a>, int <a class=\"id\" href=\"#flags\">flags</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_ext_path\">ext4_ext_path</a> *<a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent_header\">ext4_extent_header</a> *<a class=\"id\" href=\"#eh\">eh</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_extent\">ext4_extent</a> <a class=\"id\" href=\"#newex\">newex</a>, *<a class=\"id\" href=\"#ex\">ex</a>, *<a class=\"id\" href=\"#last_ex\">last_ex</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#newblock\">newblock</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#err\">err</a> = 0, <a class=\"id\" href=\"#depth\">depth</a>, <a class=\"id\" href=\"#ret\">ret</a>, <a class=\"id\" href=\"#cache_type\">cache_type</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#allocated\">allocated</a> = 0;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#ext4_allocation_request\">ext4_allocation_request</a> <a class=\"id\" href=\"#ar\">ar</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext4_io_end_t\">ext4_io_end_t</a> *<a class=\"id\" href=\"#io\">io</a> = <a class=\"id\" href=\"#EXT4_I\">EXT4_I</a>(<a class=\"id\" href=\"#inode\">inode</a>)-><a class=\"id\" href=\"#cur_aio_dio\">cur_aio_dio</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"blocks %u/%u requested for inode %lu\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_len\">m_len</a>, <a class=\"id\" href=\"#inode\">inode</a>-><a class=\"id\" href=\"#i_ino\">i_ino</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* check in cache */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cache_type\">cache_type</a> = <a class=\"id\" href=\"#ext4_ext_in_cache\">ext4_ext_in_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, &amp;<a class=\"id\" href=\"#newex\">newex</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#cache_type\">cache_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#cache_type\">cache_type</a> == <a class=\"id\" href=\"#EXT4_EXT_CACHE_GAP\">EXT4_EXT_CACHE_GAP</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE\">EXT4_GET_BLOCKS_CREATE</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * block isn't allocated yet and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * user doesn't want to allocate it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* we should allocate requested block */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>} else if (<a class=\"id\" href=\"#cache_type\">cache_type</a> == <a class=\"id\" href=\"#EXT4_EXT_CACHE_EXTENT\">EXT4_EXT_CACHE_EXTENT</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* block is already allocated */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   - <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newex\">newex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   + <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of remaining blocks in the extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(&amp;<a class=\"id\" href=\"#newex\">newex</a>) -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#newex\">newex</a>.<a class=\"id\" href=\"#ee_block\">ee_block</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#BUG\">BUG</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find extent for this block */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#ext4_ext_find_extent\">ext4_ext_find_extent</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#NULL\">NULL</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#IS_ERR\">IS_ERR</a>(<a class=\"id\" href=\"#path\">path</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#PTR_ERR\">PTR_ERR</a>(<a class=\"id\" href=\"#path\">path</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#path\">path</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#depth\">depth</a> = <a class=\"id\" href=\"#ext_depth\">ext_depth</a>(<a class=\"id\" href=\"#inode\">inode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * consistent leaf must not be empty;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this situation is possible, though, _during_ tree modification;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * this is why assert can't be put in ext4_ext_find_extent()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a> == <a class=\"id\" href=\"#NULL\">NULL</a> && <a class=\"id\" href=\"#depth\">depth</a> != 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_ERROR_INODE\">EXT4_ERROR_INODE</a>(<a class=\"id\" href=\"#inode\">inode</a>, \"bad extent address \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> \"lblock: %lu, depth: %d pblock %lld\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> (unsigned long) <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#depth\">depth</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_block\">p_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#eh\">eh</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_hdr\">p_hdr</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ex\">ex</a> = <a class=\"id\" href=\"#path\">path</a>[<a class=\"id\" href=\"#depth\">depth</a>].<a class=\"id\" href=\"#p_ext\">p_ext</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ex\">ex</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_lblk_t\">ext4_lblk_t</a> <a class=\"id\" href=\"#ee_block\">ee_block</a> = <a class=\"id\" href=\"#le32_to_cpu\">le32_to_cpu</a>(<a class=\"id\" href=\"#ex\">ex</a>-><a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_fsblk_t\">ext4_fsblk_t</a> <a class=\"id\" href=\"#ee_start\">ee_start</a> = <a class=\"id\" href=\"#ext_pblock\">ext_pblock</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned short <a class=\"id\" href=\"#ee_len\">ee_len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Uninitialized extents are treated as holes, except that</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * we split out initialized portions during a write.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a> = <a class=\"id\" href=\"#ext4_ext_get_actual_len\">ext4_ext_get_actual_len</a>(<a class=\"id\" href=\"#ex\">ex</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* if found extent covers block, simply return it */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#in_range\">in_range</a>(<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>, <a class=\"id\" href=\"#ee_block\">ee_block</a>, <a class=\"id\" href=\"#ee_len\">ee_len</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a> + <a class=\"id\" href=\"#ee_start\">ee_start</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* number of remaining blocks in the extent */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#allocated\">allocated</a> = <a class=\"id\" href=\"#ee_len\">ee_len</a> - (<a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a> - <a class=\"id\" href=\"#ee_block\">ee_block</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext_debug\">ext_debug</a>(\"%u fit into %u:%d -> %llu\\n\", <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#ee_block\">ee_block</a>, <a class=\"id\" href=\"#ee_len\">ee_len</a>, <a class=\"id\" href=\"#newblock\">newblock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Do not put uninitialized extent in the cache */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#ext4_ext_is_uninitialized\">ext4_ext_is_uninitialized</a>(<a class=\"id\" href=\"#ex\">ex</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_put_in_cache\">ext4_ext_put_in_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#ee_block\">ee_block</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ee_len\">ee_len</a>, <a class=\"id\" href=\"#ee_start\">ee_start</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#EXT4_EXT_CACHE_EXTENT\">EXT4_EXT_CACHE_EXTENT</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#ext4_ext_handle_uninitialized_extents\">ext4_ext_handle_uninitialized_extents</a>(<a class=\"id\" href=\"#handle\">handle</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#map\">map</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#flags\">flags</a>, <a class=\"id\" href=\"#allocated\">allocated</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#newblock\">newblock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * requested block isn't allocated yet;</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we couldn't try to create block if create flag is zero</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#flags\">flags</a> &amp; <a class=\"id\" href=\"#EXT4_GET_BLOCKS_CREATE\">EXT4_GET_BLOCKS_CREATE</a>) == 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * put just found gap into cache to speed up</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * subsequent requests</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ext4_ext_put_gap_in_cache\">ext4_ext_put_gap_in_cache</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Okay, we need to do block allocation.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* find neighbour allocated blocks */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#lleft\">lleft</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_search_left\">ext4_ext_search_left</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#lleft\">lleft</a>, &amp;<a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#pleft\">pleft</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out2\">out2</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#lright\">lright</a> = <a class=\"id\" href=\"#map\">map</a>-><a class=\"id\" href=\"#m_lblk\">m_lblk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#ext4_ext_search_right\">ext4_ext_search_right</a>(<a class=\"id\" href=\"#inode\">inode</a>, <a class=\"id\" href=\"#path\">path</a>, &amp;<a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#lright\">lright</a>, &amp;<a class=\"id\" href=\"#ar\">ar</a>.<a class=\"id\" href=\"#pright\">pright</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a>)", 
];
xr_frag_insert('l/47/1bc0492fd28235da5dfd4a76cc229a92ae5258.xr', __xr_tmp);
