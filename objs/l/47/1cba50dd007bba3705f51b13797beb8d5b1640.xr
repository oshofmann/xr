var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\">  This is a maximally equidistributed combined Tausworthe generator</span>", 
"<span class=\"comment\">  based on code from GNU Scientific Library 1.5 (30 Jun 2004)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   x_n = (s1_n ^ s2_n ^ s3_n)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   s1_{n+1} = (((s1_n &amp; 4294967294) &lt;&lt;12) ^ (((s1_n &lt;&lt;13) ^ s1_n) &gt;&gt;19))</span>", 
"<span class=\"comment\">   s2_{n+1} = (((s2_n &amp; 4294967288) &lt;&lt; 4) ^ (((s2_n &lt;&lt; 2) ^ s2_n) &gt;&gt;25))</span>", 
"<span class=\"comment\">   s3_{n+1} = (((s3_n &amp; 4294967280) &lt;&lt;17) ^ (((s3_n &lt;&lt; 3) ^ s3_n) &gt;&gt;11))</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   The period of this generator is about 2^88.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   From: P. L'Ecuyer, \"Maximally Equidistributed Combined Tausworthe</span>", 
"<span class=\"comment\">   Generators\", Mathematics of Computation, 65, 213 (1996), 203--213.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   This is available on the net from L'Ecuyer's home page,</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme.ps</span>", 
"<span class=\"comment\">   ftp://ftp.iro.umontreal.ca/pub/simulation/lecuyer/papers/tausme.ps</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   There is an erratum in the paper \"Tables of Maximally</span>", 
"<span class=\"comment\">   Equidistributed Combined LFSR Generators\", Mathematics of</span>", 
"<span class=\"comment\">   Computation, 68, 225 (1999), 261--269:</span>", 
"<span class=\"comment\">   http://www.iro.umontreal.ca/~lecuyer/myftp/papers/tausme2.ps</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">        ... the k_j most significant bits of z_j must be non-</span>", 
"<span class=\"comment\">        zero, for each j. (Note: this restriction also applies to the</span>", 
"<span class=\"comment\">        computer code given in [4], but was mistakenly not mentioned in</span>", 
"<span class=\"comment\">        that paper.)</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">   This affects the seeding procedure by imposing the requirement</span>", 
"<span class=\"comment\">   s1 &gt; 1, s2 &gt; 7, s3 &gt; 15.</span>", 
"<span class=\"comment\"></span>", 
"<span class=\"comment\">*/</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#percpu\">percpu</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#module\">module</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#jiffies\">jiffies</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#random\">random</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"static <a class=\"id\" href=\"#DEFINE_PER_CPU\">DEFINE_PER_CPU</a>(struct <a class=\"id\" href=\"#rnd_state\">rnd_state</a>, <a class=\"id\" href=\"#net_rand_state\">net_rand_state</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>prandom32 - seeded pseudo-random number generator.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@state: pointer to state structure holding seeded state.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This is used for pseudo-randomness with no outside seeding.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>For more random results, use random32().</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#prandom32\">prandom32</a>(struct <a class=\"id\" href=\"#rnd_state\">rnd_state</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#TAUSWORTHE\">TAUSWORTHE</a>(<a class=\"id\" href=\"#s\">s</a>,<a class=\"id\" href=\"#a\">a</a>,<a class=\"id\" href=\"#b\">b</a>,<a class=\"id\" href=\"#c\">c</a>,<a class=\"id\" href=\"#d\">d</a>) ((<a class=\"id\" href=\"#s\">s</a>&amp;<a class=\"id\" href=\"#c\">c</a>)<<<a class=\"id\" href=\"#d\">d</a>) ^ (((<a class=\"id\" href=\"#s\">s</a> <<<a class=\"id\" href=\"#a\">a</a>) ^ <a class=\"id\" href=\"#s\">s</a>)>><a class=\"id\" href=\"#b\">b</a>)", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a> = <a class=\"id\" href=\"#TAUSWORTHE\">TAUSWORTHE</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a>, 13, 19, 4294967294UL, 12);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s2\">s2</a> = <a class=\"id\" href=\"#TAUSWORTHE\">TAUSWORTHE</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s2\">s2</a>, 2, 25, 4294967288UL, 4);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s3\">s3</a> = <a class=\"id\" href=\"#TAUSWORTHE\">TAUSWORTHE</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s3\">s3</a>, 3, 11, 4294967280UL, 17);", 
"", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a> ^ <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s2\">s2</a> ^ <a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s3\">s3</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#prandom32\">prandom32</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>random32 - pseudo random number generator</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>A 32 bit pseudo-random number is generated using a fast</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>algorithm suitable for simulation. This algorithm is NOT</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>considered safe for cryptographic use.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#random32\">random32</a>(void)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#r\">r</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#rnd_state\">rnd_state</a> *<a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#get_cpu_var\">get_cpu_var</a>(<a class=\"id\" href=\"#net_rand_state\">net_rand_state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#r\">r</a> = <a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#put_cpu_var\">put_cpu_var</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#r\">r</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#random32\">random32</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>srandom32 - add entropy to pseudo random number generator</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@seed: seed value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Add some additional seeding to the random32() pool.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#srandom32\">srandom32</a>(<a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#entropy\">entropy</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * No locking on the CPUs, but then somewhat random results are, well,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * expected.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a> (<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rnd_state\">rnd_state</a> *<a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#net_rand_state\">net_rand_state</a>, <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a> = <a class=\"id\" href=\"#__seed\">__seed</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a> ^ <a class=\"id\" href=\"#entropy\">entropy</a>, 1);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#srandom32\">srandom32</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generate some initially weak seeding values to allow</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to start the random32() engine.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#random32_init\">random32_init</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rnd_state\">rnd_state</a> *<a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#net_rand_state\">net_rand_state</a>,<a class=\"id\" href=\"#i\">i</a>);", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#LCG\">LCG</a>(<a class=\"id\" href=\"#x\">x</a>)<span class=\"ts\"/>((<a class=\"id\" href=\"#x\">x</a>) * 69069)<span class=\"ts\"/><span class=\"comment\">/* super-duper LCG */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a> = <a class=\"id\" href=\"#__seed\">__seed</a>(<a class=\"id\" href=\"#LCG\">LCG</a>(<a class=\"id\" href=\"#i\">i</a> + <a class=\"id\" href=\"#jiffies\">jiffies</a>), 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s2\">s2</a> = <a class=\"id\" href=\"#__seed\">__seed</a>(<a class=\"id\" href=\"#LCG\">LCG</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a>), 7);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s3\">s3</a> = <a class=\"id\" href=\"#__seed\">__seed</a>(<a class=\"id\" href=\"#LCG\">LCG</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s2\">s2</a>), 15);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* \"warm it up\" */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#core_initcall\">core_initcall</a>(<a class=\"id\" href=\"#random32_init\">random32_init</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Generate better values after random number generator</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>is fully initialized.</span>", 
"<span class=\"comment\"> */</span>", 
"static int <a class=\"id\" href=\"#__init\">__init</a> <a class=\"id\" href=\"#random32_reseed\">random32_reseed</a>(void)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#for_each_possible_cpu\">for_each_possible_cpu</a>(<a class=\"id\" href=\"#i\">i</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#rnd_state\">rnd_state</a> *<a class=\"id\" href=\"#state\">state</a> = &amp;<a class=\"id\" href=\"#per_cpu\">per_cpu</a>(<a class=\"id\" href=\"#net_rand_state\">net_rand_state</a>,<a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a> <a class=\"id\" href=\"#seeds\">seeds</a>[3];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#get_random_bytes\">get_random_bytes</a>(&amp;<a class=\"id\" href=\"#seeds\">seeds</a>, sizeof(<a class=\"id\" href=\"#seeds\">seeds</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s1\">s1</a> = <a class=\"id\" href=\"#__seed\">__seed</a>(<a class=\"id\" href=\"#seeds\">seeds</a>[0], 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s2\">s2</a> = <a class=\"id\" href=\"#__seed\">__seed</a>(<a class=\"id\" href=\"#seeds\">seeds</a>[1], 7);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#s3\">s3</a> = <a class=\"id\" href=\"#__seed\">__seed</a>(<a class=\"id\" href=\"#seeds\">seeds</a>[2], 15);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* mix it in */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prandom32\">prandom32</a>(<a class=\"id\" href=\"#state\">state</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#late_initcall\">late_initcall</a>(<a class=\"id\" href=\"#random32_reseed\">random32_reseed</a>);", 
];
xr_frag_insert('l/47/1cba50dd007bba3705f51b13797beb8d5b1640.xr', __xr_tmp);
