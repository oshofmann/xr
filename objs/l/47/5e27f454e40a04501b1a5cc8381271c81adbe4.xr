var __xr_tmp = [
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>inet_twsk_unhash - unhash a timewait socket from established hash</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tw: timewait socket</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>unhash a timewait socket from established hash, if hashed.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>ehash lock must be held by caller.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 1 if caller should call inet_twsk_put() after lock release.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inet_twsk_unhash\">inet_twsk_unhash</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#hlist_nulls_unhashed\">hlist_nulls_unhashed</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_node\">tw_node</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_nulls_del_rcu\">hlist_nulls_del_rcu</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_node\">tw_node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_node_init\">sk_nulls_node_init</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_node\">tw_node</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We cannot call inet_twsk_put() ourself under lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * caller must call it for us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>inet_twsk_bind_unhash - unhash a timewait socket from bind hash</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@tw: timewait socket</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@hashinfo: hashinfo pointer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>unhash a timewait socket from bind hash, if hashed.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>bind hash lock must be held by caller.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Returns 1 if caller should call inet_twsk_put() after lock release.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#inet_twsk_bind_unhash\">inet_twsk_bind_unhash</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_bucket\">inet_bind_bucket</a> *<a class=\"id\" href=\"#tb\">tb</a> = <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_tb\">tw_tb</a>;", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#tb\">tb</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__hlist_del\">__hlist_del</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_bind_node\">tw_bind_node</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_tb\">tw_tb</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_bind_bucket_destroy\">inet_bind_bucket_destroy</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bind_bucket_cachep\">bind_bucket_cachep</a>, <a class=\"id\" href=\"#tb\">tb</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We cannot call inet_twsk_put() ourself under lock,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * caller must call it for us.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>return 1;", 
"}", 
"", 
"<span class=\"comment\">/* Must be called with locally disabled BHs. */</span>", 
"static void <a class=\"id\" href=\"#__inet_twsk_kill\">__inet_twsk_kill</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_hashbucket\">inet_bind_hashbucket</a> *<a class=\"id\" href=\"#bhead\">bhead</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#refcnt\">refcnt</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Unlink from established hashes. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>, <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_hash\">tw_hash</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#refcnt\">refcnt</a> = <a class=\"id\" href=\"#inet_twsk_unhash\">inet_twsk_unhash</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Disassociate with bind bucket. */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bhead\">bhead</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash\">bhash</a>[<a class=\"id\" href=\"#inet_bhashfn\">inet_bhashfn</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_num\">tw_num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash_size\">bhash_size</a>)];", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#bhead\">bhead</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#refcnt\">refcnt</a> += <a class=\"id\" href=\"#inet_twsk_bind_unhash\">inet_twsk_bind_unhash</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#hashinfo\">hashinfo</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#bhead\">bhead</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#SOCK_REFCNT_DEBUG\">SOCK_REFCNT_DEBUG</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>) != 1) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"%s timewait_sock %p refcnt=%d\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_prot\">tw_prot</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>));", 
"<span class=\"ts\"/>}", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#refcnt\">refcnt</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#refcnt\">refcnt</a>--;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static <a class=\"id\" href=\"#noinline\">noinline</a> void <a class=\"id\" href=\"#inet_twsk_free\">inet_twsk_free</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#module\">module</a> *<a class=\"id\" href=\"#owner\">owner</a> = <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_prot\">tw_prot</a>-><a class=\"id\" href=\"#owner\">owner</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#twsk_destructor\">twsk_destructor</a>((struct <a class=\"id\" href=\"#sock\">sock</a> *)<a class=\"id\" href=\"#tw\">tw</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#SOCK_REFCNT_DEBUG\">SOCK_REFCNT_DEBUG</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"%s timewait_sock %p released\\n\", <a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_prot\">tw_prot</a>-><a class=\"id\" href=\"#name\">name</a>, <a class=\"id\" href=\"#tw\">tw</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#release_net\">release_net</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_prot\">tw_prot</a>-><a class=\"id\" href=\"#twsk_prot\">twsk_prot</a>-><a class=\"id\" href=\"#twsk_slab\">twsk_slab</a>, <a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#module_put\">module_put</a>(<a class=\"id\" href=\"#owner\">owner</a>);", 
"}", 
"", 
"void <a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#atomic_dec_and_test\">atomic_dec_and_test</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_free\">inet_twsk_free</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>);", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Enter the time wait state. This is called with locally disabled BH.</span>", 
"<span class=\"comment\"> * Essentially we whip up a timewait bucket, copy the relevant info into it</span>", 
"<span class=\"comment\"> * from the SK, and mess with hash chains and list linkage.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#__inet_twsk_hashdance\">__inet_twsk_hashdance</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>, struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>)", 
"{", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_connection_sock\">inet_connection_sock</a> *<a class=\"id\" href=\"#icsk\">icsk</a> = <a class=\"id\" href=\"#inet_csk\">inet_csk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a> *<a class=\"id\" href=\"#ehead\">ehead</a> = <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_hash\">sk_hash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spinlock_t\">spinlock_t</a> *<a class=\"id\" href=\"#lock\">lock</a> = <a class=\"id\" href=\"#inet_ehash_lockp\">inet_ehash_lockp</a>(<a class=\"id\" href=\"#hashinfo\">hashinfo</a>, <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_hash\">sk_hash</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_bind_hashbucket\">inet_bind_hashbucket</a> *<a class=\"id\" href=\"#bhead\">bhead</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* Step 1: Put TW into bind hash. Original socket stays there too.</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   Note, that any socket with inet-&gt;num != 0 MUST be bound in</span>", 
"<span class=\"comment\"><span class=\"ts\"/>   binding cache, even if it is closed.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#bhead\">bhead</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash\">bhash</a>[<a class=\"id\" href=\"#inet_bhashfn\">inet_bhashfn</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#bhash_size\">bhash_size</a>)];", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#bhead\">bhead</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_tb\">tw_tb</a> = <a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#WARN_ON\">WARN_ON</a>(!<a class=\"id\" href=\"#icsk\">icsk</a>-><a class=\"id\" href=\"#icsk_bind_hash\">icsk_bind_hash</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_add_bind_node\">inet_twsk_add_bind_node</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_tb\">tw_tb</a>-><a class=\"id\" href=\"#owners\">owners</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#bhead\">bhead</a>-><a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Step 2: Hash TW into TIMEWAIT chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Should be done before removing sk from established chain</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because readers are lockless and search established first.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_add_node_rcu\">inet_twsk_add_node_rcu</a>(<a class=\"id\" href=\"#tw\">tw</a>, &amp;<a class=\"id\" href=\"#ehead\">ehead</a>-><a class=\"id\" href=\"#twchain\">twchain</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Step 3: Remove SK from established hash. */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#__sk_nulls_del_node_init_rcu\">__sk_nulls_del_node_init_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sock_prot_inuse_add\">sock_prot_inuse_add</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>), <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot\">sk_prot</a>, -1);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Notes :</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - We initially set tw_refcnt to 0 in inet_twsk_alloc()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - We add one reference for the bhash link</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - We add one reference for the ehash link</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * - We want this refcnt update done before allowing other</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   threads to find this tw in ehash chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#atomic_add\">atomic_add</a>(1 + 1 + 1, &amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(<a class=\"id\" href=\"#lock\">lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#__inet_twsk_hashdance\">__inet_twsk_hashdance</a>);", 
"", 
"struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#inet_twsk_alloc\">inet_twsk_alloc</a>(const struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, const int <a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot_creator\">sk_prot_creator</a>-><a class=\"id\" href=\"#twsk_prot\">twsk_prot</a>-><a class=\"id\" href=\"#twsk_slab\">twsk_slab</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#tw\">tw</a> != <a class=\"id\" href=\"#NULL\">NULL</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>const struct <a class=\"id\" href=\"#inet_sock\">inet_sock</a> *<a class=\"id\" href=\"#inet\">inet</a> = <a class=\"id\" href=\"#inet_sk\">inet_sk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kmemcheck_annotate_bitfield\">kmemcheck_annotate_bitfield</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Give us an identity. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_daddr\">tw_daddr</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_daddr\">inet_daddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_rcv_saddr\">tw_rcv_saddr</a>    = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_rcv_saddr\">inet_rcv_saddr</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_bound_dev_if\">tw_bound_dev_if</a> = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_bound_dev_if\">sk_bound_dev_if</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_num\">tw_num</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_num\">inet_num</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_state\">tw_state</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#TCP_TIME_WAIT\">TCP_TIME_WAIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_substate\">tw_substate</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#state\">state</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_sport\">tw_sport</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_sport\">inet_sport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_dport\">tw_dport</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#inet_dport\">inet_dport</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_family\">tw_family</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_family\">sk_family</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_reuse\">tw_reuse</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_reuse\">sk_reuse</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_hash\">tw_hash</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_hash\">sk_hash</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_ipv6only\">tw_ipv6only</a><span class=\"ts\"/>    = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_transparent\">tw_transparent</a>  = <a class=\"id\" href=\"#inet\">inet</a>-><a class=\"id\" href=\"#transparent\">transparent</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_prot\">tw_prot</a><span class=\"ts\"/>    = <a class=\"id\" href=\"#sk\">sk</a>-><a class=\"id\" href=\"#sk_prot_creator\">sk_prot_creator</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twsk_net_set\">twsk_net_set</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#hold_net\">hold_net</a>(<a class=\"id\" href=\"#sock_net\">sock_net</a>(<a class=\"id\" href=\"#sk\">sk</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Because we use RCU lookups, we should not set tw_refcnt</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * to a non null value before everything is setup for this</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * timewait socket.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_set\">atomic_set</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>, 0);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_dead_node_init\">inet_twsk_dead_node_init</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__module_get\">__module_get</a>(<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_prot\">tw_prot</a>-><a class=\"id\" href=\"#owner\">owner</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#tw\">tw</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_twsk_alloc\">inet_twsk_alloc</a>);", 
"", 
"<span class=\"comment\">/* Returns non-zero if quota exceeded.  */</span>", 
"static int <a class=\"id\" href=\"#inet_twdr_do_twkill_work\">inet_twdr_do_twkill_work</a>(struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#twdr\">twdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    const int <a class=\"id\" href=\"#slot\">slot</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#killed\">killed</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* NOTE: compare this to previous version where lock</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * was released after detaching chain. It was racy,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * because tw buckets are scheduled in not serialized context</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in 2.3 (with netfilter), and with softnet it is common, because</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * soft irqs are not sequenced.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#killed\">killed</a> = 0;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"<a class=\"id\" href=\"#rescan\">rescan</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_for_each_inmate\">inet_twsk_for_each_inmate</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#cells\">cells</a>[<a class=\"id\" href=\"#slot\">slot</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inet_twsk_del_dead_node\">__inet_twsk_del_dead_node</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inet_twsk_kill\">__inet_twsk_kill</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#hashinfo\">hashinfo</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_NS\">CONFIG_NET_NS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITED\">LINUX_MIB_TIMEWAITED</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#killed\">killed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#killed\">killed</a> &gt; <a class=\"id\" href=\"#INET_TWDR_TWKILL_QUOTA\">INET_TWDR_TWKILL_QUOTA</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* While we dropped twdr-&gt;death_lock, another cpu may have</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * killed off the next TW bucket in the list, therefore</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * do a fresh re-read of the hlist head node with the</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * lock reacquired.  We still use the hlist traversal</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * macro in order to get the prefetches.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#rescan\">rescan</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_count\">tw_count</a> -= <a class=\"id\" href=\"#killed\">killed</a>;", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NET_NS\">CONFIG_NET_NS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_ADD_STATS_BH\">NET_ADD_STATS_BH</a>(&amp;<a class=\"id\" href=\"#init_net\">init_net</a>, <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITED\">LINUX_MIB_TIMEWAITED</a>, <a class=\"id\" href=\"#killed\">killed</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"void <a class=\"id\" href=\"#inet_twdr_hangman\">inet_twdr_hangman</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#twdr\">twdr</a>;", 
"<span class=\"ts\"/>int unsigned <a class=\"id\" href=\"#need_timer\">need_timer</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a> = (struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_count\">tw_count</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#need_timer\">need_timer</a> = 0;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_twdr_do_twkill_work\">inet_twdr_do_twkill_work</a>(<a class=\"id\" href=\"#twdr\">twdr</a>, <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#slot\">slot</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#thread_slots\">thread_slots</a> |= (1 << <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#slot\">slot</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twkill_work\">twkill_work</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_timer\">need_timer</a> = 1;", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* We purged the entire slot, anything left?  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_count\">tw_count</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#need_timer\">need_timer</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#slot\">slot</a> = ((<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#slot\">slot</a> + 1) &amp; (<a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a> - 1));", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#need_timer\">need_timer</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_timer\">tw_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#period\">period</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_twdr_hangman\">inet_twdr_hangman</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_twdr_twkill_work\">inet_twdr_twkill_work</a>(struct <a class=\"id\" href=\"#work_struct\">work_struct</a> *<a class=\"id\" href=\"#work\">work</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#twdr\">twdr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#container_of\">container_of</a>(<a class=\"id\" href=\"#work\">work</a>, struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a>, <a class=\"id\" href=\"#twkill_work\">twkill_work</a>);", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUILD_BUG_ON\">BUILD_BUG_ON</a>((<a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a> - 1) &gt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(sizeof(<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#thread_slots\">thread_slots</a>) * 8));", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#thread_slots\">thread_slots</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a>; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!(<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#thread_slots\">thread_slots</a> &amp; (1 << <a class=\"id\" href=\"#i\">i</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>while (<a class=\"id\" href=\"#inet_twdr_do_twkill_work\">inet_twdr_do_twkill_work</a>(<a class=\"id\" href=\"#twdr\">twdr</a>, <a class=\"id\" href=\"#i\">i</a>) != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#need_resched\">need_resched</a>()) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule\">schedule</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_bh\">spin_lock_bh</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#thread_slots\">thread_slots</a> &= ~(1 << <a class=\"id\" href=\"#i\">i</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_bh\">spin_unlock_bh</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_twdr_twkill_work\">inet_twdr_twkill_work</a>);", 
"", 
"<span class=\"comment\">/* These are always called from BH context.  See callers in</span>", 
"<span class=\"comment\"> * tcp_input.c to verify this.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"<span class=\"comment\">/* This is for handling early-kills of TIME_WAIT sockets. */</span>", 
"void <a class=\"id\" href=\"#inet_twsk_deschedule\">inet_twsk_deschedule</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#twdr\">twdr</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_twsk_del_dead_node\">inet_twsk_del_dead_node</a>(<a class=\"id\" href=\"#tw\">tw</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (--<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_count\">tw_count</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_timer\">tw_timer</a>);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__inet_twsk_kill\">__inet_twsk_kill</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#hashinfo\">hashinfo</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL\">EXPORT_SYMBOL</a>(<a class=\"id\" href=\"#inet_twsk_deschedule\">inet_twsk_deschedule</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_twsk_schedule\">inet_twsk_schedule</a>(struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#twdr\">twdr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>       const int <a class=\"id\" href=\"#timeo\">timeo</a>, const int <a class=\"id\" href=\"#timewait_len\">timewait_len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_head\">hlist_head</a> *<a class=\"id\" href=\"#list\">list</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#slot\">slot</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* timeout := RTO * 3.5</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 3.5 = 1+2+0.5 to wait for two retransmits.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * RATIONALE: if FIN arrived and we entered TIME-WAIT state,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * our ACK acking that FIN can be lost. If N subsequent retransmitted</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * FINs (or previous seqments) are lost (probability of such event</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is p^(N+1), where p is probability to lose single packet and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * time to detect the loss is about RTO*(2^N - 1) with exponential</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * backoff). Normal timewait length is calculated so, that we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * waited at least for one retransmitted FIN (maximal RTO is 120sec).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * [ BTW Linux. following BSD, violates this requirement waiting</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   only for 60sec, we should wait at least for 240 secs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *   Well, 240 consumes too much of resources 8)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ]</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * This interval is not reduced to catch old duplicate and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * responces to our wandering segments living for two MSLs.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * However, if we use PAWS to detect</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * old duplicates, we can reduce the interval to bounds required</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * by RTO, rather than MSL. So, if peer understands PAWS, we</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * kill tw bucket after 3.5*RTO (it is important that this number</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * is greater than TS tick!) and detect old duplicates with help</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * of PAWS.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = (<a class=\"id\" href=\"#timeo\">timeo</a> + (1 << <a class=\"id\" href=\"#INET_TWDR_RECYCLE_TICK\">INET_TWDR_RECYCLE_TICK</a>) - 1) >> <a class=\"id\" href=\"#INET_TWDR_RECYCLE_TICK\">INET_TWDR_RECYCLE_TICK</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Unlink it, if it was scheduled */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#inet_twsk_del_dead_node\">inet_twsk_del_dead_node</a>(<a class=\"id\" href=\"#tw\">tw</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_count\">tw_count</a>--;", 
"<span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_inc\">atomic_inc</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#slot\">slot</a> >= <a class=\"id\" href=\"#INET_TWDR_RECYCLE_SLOTS\">INET_TWDR_RECYCLE_SLOTS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Schedule to slow timer */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#timeo\">timeo</a> >= <a class=\"id\" href=\"#timewait_len\">timewait_len</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#DIV_ROUND_UP\">DIV_ROUND_UP</a>(<a class=\"id\" href=\"#timeo\">timeo</a>, <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#period\">period</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#slot\">slot</a> >= <a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a> - 1;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_ttd\">tw_ttd</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#timeo\">timeo</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#slot\">slot</a> + <a class=\"id\" href=\"#slot\">slot</a>) &amp; (<a class=\"id\" href=\"#INET_TWDR_TWKILL_SLOTS\">INET_TWDR_TWKILL_SLOTS</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#cells\">cells</a>[<a class=\"id\" href=\"#slot\">slot</a>];", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_ttd\">tw_ttd</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a> + (<a class=\"id\" href=\"#slot\">slot</a> << <a class=\"id\" href=\"#INET_TWDR_RECYCLE_TICK\">INET_TWDR_RECYCLE_TICK</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_hand\">twcal_hand</a> &lt; 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_hand\">twcal_hand</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_jiffie\">twcal_jiffie</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_timer\">twcal_timer</a>.<a class=\"id\" href=\"#expires\">expires</a> = <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_jiffie\">twcal_jiffie</a> +", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      (<a class=\"id\" href=\"#slot\">slot</a> << <a class=\"id\" href=\"#INET_TWDR_RECYCLE_TICK\">INET_TWDR_RECYCLE_TICK</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#add_timer\">add_timer</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_timer\">twcal_timer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_after\">time_after</a>(<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_timer\">twcal_timer</a>.<a class=\"id\" href=\"#expires\">expires</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#jiffies\">jiffies</a> + (<a class=\"id\" href=\"#slot\">slot</a> << <a class=\"id\" href=\"#INET_TWDR_RECYCLE_TICK\">INET_TWDR_RECYCLE_TICK</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_timer\">twcal_timer</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#jiffies\">jiffies</a> + (<a class=\"id\" href=\"#slot\">slot</a> << <a class=\"id\" href=\"#INET_TWDR_RECYCLE_TICK\">INET_TWDR_RECYCLE_TICK</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_hand\">twcal_hand</a> + <a class=\"id\" href=\"#slot\">slot</a>) &amp; (<a class=\"id\" href=\"#INET_TWDR_RECYCLE_SLOTS\">INET_TWDR_RECYCLE_SLOTS</a> - 1);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#list\">list</a> = &amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_row\">twcal_row</a>[<a class=\"id\" href=\"#slot\">slot</a>];", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#hlist_add_head\">hlist_add_head</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_death_node\">tw_death_node</a>, <a class=\"id\" href=\"#list\">list</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_count\">tw_count</a>++ == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_timer\">tw_timer</a>, <a class=\"id\" href=\"#jiffies\">jiffies</a> + <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#period\">period</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_twsk_schedule\">inet_twsk_schedule</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_twdr_twcal_tick\">inet_twdr_twcal_tick</a>(unsigned long <a class=\"id\" href=\"#data\">data</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#twdr\">twdr</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#n\">n</a>, <a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#now\">now</a> = <a class=\"id\" href=\"#jiffies\">jiffies</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#killed\">killed</a> = 0;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#adv\">adv</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a> = (struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *)<a class=\"id\" href=\"#data\">data</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_hand\">twcal_hand</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_hand\">twcal_hand</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> = <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_jiffie\">twcal_jiffie</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#n\">n</a> = 0; <a class=\"id\" href=\"#n\">n</a> &lt; <a class=\"id\" href=\"#INET_TWDR_RECYCLE_SLOTS\">INET_TWDR_RECYCLE_SLOTS</a>; <a class=\"id\" href=\"#n\">n</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#time_before_eq\">time_before_eq</a>(<a class=\"id\" href=\"#j\">j</a>, <a class=\"id\" href=\"#now\">now</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_node\">hlist_node</a> *<a class=\"id\" href=\"#node\">node</a>, *<a class=\"id\" href=\"#safe\">safe</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_for_each_inmate_safe\">inet_twsk_for_each_inmate_safe</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#node\">node</a>, <a class=\"id\" href=\"#safe\">safe</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_row\">twcal_row</a>[<a class=\"id\" href=\"#slot\">slot</a>]) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inet_twsk_del_dead_node\">__inet_twsk_del_dead_node</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#__inet_twsk_kill\">__inet_twsk_kill</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#hashinfo\">hashinfo</a>);", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_NET_NS\">CONFIG_NET_NS</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#NET_INC_STATS_BH\">NET_INC_STATS_BH</a>(<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>), <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITKILLED\">LINUX_MIB_TIMEWAITKILLED</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#killed\">killed</a>++;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#adv\">adv</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#adv\">adv</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_jiffie\">twcal_jiffie</a> = <a class=\"id\" href=\"#j\">j</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_hand\">twcal_hand</a> = <a class=\"id\" href=\"#slot\">slot</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#hlist_empty\">hlist_empty</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_row\">twcal_row</a>[<a class=\"id\" href=\"#slot\">slot</a>])) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mod_timer\">mod_timer</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_timer\">twcal_timer</a>, <a class=\"id\" href=\"#j\">j</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#j\">j</a> += 1 << <a class=\"id\" href=\"#INET_TWDR_RECYCLE_TICK\">INET_TWDR_RECYCLE_TICK</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#slot\">slot</a> = (<a class=\"id\" href=\"#slot\">slot</a> + 1) &amp; (<a class=\"id\" href=\"#INET_TWDR_RECYCLE_SLOTS\">INET_TWDR_RECYCLE_SLOTS</a> - 1);", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#twcal_hand\">twcal_hand</a> = -1;", 
"", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_count\">tw_count</a> -= <a class=\"id\" href=\"#killed\">killed</a>) == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#del_timer\">del_timer</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#tw_timer\">tw_timer</a>);", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#CONFIG_NET_NS\">CONFIG_NET_NS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#NET_ADD_STATS_BH\">NET_ADD_STATS_BH</a>(&amp;<a class=\"id\" href=\"#init_net\">init_net</a>, <a class=\"id\" href=\"#LINUX_MIB_TIMEWAITKILLED\">LINUX_MIB_TIMEWAITKILLED</a>, <a class=\"id\" href=\"#killed\">killed</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#twdr\">twdr</a>-><a class=\"id\" href=\"#death_lock\">death_lock</a>);", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_twdr_twcal_tick\">inet_twdr_twcal_tick</a>);", 
"", 
"void <a class=\"id\" href=\"#inet_twsk_purge\">inet_twsk_purge</a>(struct <a class=\"id\" href=\"#inet_hashinfo\">inet_hashinfo</a> *<a class=\"id\" href=\"#hashinfo\">hashinfo</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>     struct <a class=\"id\" href=\"#inet_timewait_death_row\">inet_timewait_death_row</a> *<a class=\"id\" href=\"#twdr\">twdr</a>, int <a class=\"id\" href=\"#family\">family</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_timewait_sock\">inet_timewait_sock</a> *<a class=\"id\" href=\"#tw\">tw</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#hlist_nulls_node\">hlist_nulls_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#slot\">slot</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#slot\">slot</a> = 0; <a class=\"id\" href=\"#slot\">slot</a> <= <a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#ehash_mask\">ehash_mask</a>; <a class=\"id\" href=\"#slot\">slot</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#inet_ehash_bucket\">inet_ehash_bucket</a> *<a class=\"id\" href=\"#head\">head</a> = &amp;<a class=\"id\" href=\"#hashinfo\">hashinfo</a>-><a class=\"id\" href=\"#ehash\">ehash</a>[<a class=\"id\" href=\"#slot\">slot</a>];", 
"<a class=\"id\" href=\"#restart_rcu\">restart_rcu</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_lock\">rcu_read_lock</a>();", 
"<a class=\"id\" href=\"#restart\">restart</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#sk_nulls_for_each_rcu\">sk_nulls_for_each_rcu</a>(<a class=\"id\" href=\"#sk\">sk</a>, <a class=\"id\" href=\"#node\">node</a>, &amp;<a class=\"id\" href=\"#head\">head</a>-><a class=\"id\" href=\"#twchain\">twchain</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#tw\">tw</a> = <a class=\"id\" href=\"#inet_twsk\">inet_twsk</a>(<a class=\"id\" href=\"#sk\">sk</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_family\">tw_family</a> != <a class=\"id\" href=\"#family\">family</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>)-><a class=\"id\" href=\"#count\">count</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(!<a class=\"id\" href=\"#atomic_inc_not_zero\">atomic_inc_not_zero</a>(&amp;<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_refcnt\">tw_refcnt</a>)))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>((<a class=\"id\" href=\"#tw\">tw</a>-><a class=\"id\" href=\"#tw_family\">tw_family</a> != <a class=\"id\" href=\"#family\">family</a>) ||", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#atomic_read\">atomic_read</a>(&amp;<a class=\"id\" href=\"#twsk_net\">twsk_net</a>(<a class=\"id\" href=\"#tw\">tw</a>)-><a class=\"id\" href=\"#count\">count</a>))) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_deschedule\">inet_twsk_deschedule</a>(<a class=\"id\" href=\"#tw\">tw</a>, <a class=\"id\" href=\"#twdr\">twdr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#inet_twsk_put\">inet_twsk_put</a>(<a class=\"id\" href=\"#tw\">tw</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart_rcu\">restart_rcu</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If the nulls value we got at the end of this lookup is</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * not the expected one, we must restart lookup.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * We probably met an item that was moved to another chain.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#get_nulls_value\">get_nulls_value</a>(<a class=\"id\" href=\"#node\">node</a>) != <a class=\"id\" href=\"#slot\">slot</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#restart\">restart</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcu_read_unlock\">rcu_read_unlock</a>();", 
"<span class=\"ts\"/>}", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#inet_twsk_purge\">inet_twsk_purge</a>);", 
];
xr_frag_insert('l/47/5e27f454e40a04501b1a5cc8381271c81adbe4.xr', __xr_tmp);
