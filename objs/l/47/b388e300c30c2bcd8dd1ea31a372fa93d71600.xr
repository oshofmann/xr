var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * NET<span class=\"ts\"/><span class=\"ts\"/>Generic infrastructure for Network protocols.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>Definitions for request_sock </span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Authors:<span class=\"ts\"/>Arnaldo Carvalho de Melo &lt;acme@conectiva.com.br&gt;</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * <span class=\"ts\"/><span class=\"ts\"/>From code originally in include/net/tcp.h</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>modify it under the terms of the GNU General Public License</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>as published by the Free Software Foundation; either version</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/><span class=\"ts\"/>2 of the License, or (at your option) any later version.</span>", 
"<span class=\"comment\"> */</span>", 
"#<a class=\"id\" href=\"#ifndef\">ifndef</a> <a class=\"id\" href=\"#_REQUEST_SOCK_H\">_REQUEST_SOCK_H</a>", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_REQUEST_SOCK_H\">_REQUEST_SOCK_H</a>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#slab\">slab</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#spinlock\">spinlock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#types\">types</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#bug\">bug</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#net\">net</a>/<a class=\"id\" href=\"#sock\">sock</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"struct <a class=\"id\" href=\"#request_sock\">request_sock</a>;", 
"struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a>;", 
"struct <a class=\"id\" href=\"#dst_entry\">dst_entry</a>;", 
"struct <a class=\"id\" href=\"#proto\">proto</a>;", 
"", 
"<span class=\"comment\">/* empty to \"strongly type\" an otherwise void parameter.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#request_values\">request_values</a> {", 
"};", 
"", 
"struct <a class=\"id\" href=\"#request_sock_ops\">request_sock_ops</a> {", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#family\">family</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_size\">obj_size</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#kmem_cache\">kmem_cache</a><span class=\"ts\"/>*<a class=\"id\" href=\"#slab\">slab</a>;", 
"<span class=\"ts\"/>char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#slab_name\">slab_name</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#rtx_syn_ack\">rtx_syn_ack</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       struct <a class=\"id\" href=\"#request_values\">request_values</a> *<a class=\"id\" href=\"#rvp\">rvp</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#send_ack\">send_ack</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>, struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#send_reset\">send_reset</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      struct <a class=\"id\" href=\"#sk_buff\">sk_buff</a> *<a class=\"id\" href=\"#skb\">skb</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#destructor\">destructor</a>)(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/>void<span class=\"ts\"/><span class=\"ts\"/>(*<a class=\"id\" href=\"#syn_ack_timeout\">syn_ack_timeout</a>)(struct <a class=\"id\" href=\"#sock\">sock</a> *<a class=\"id\" href=\"#sk\">sk</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>);", 
"};", 
"", 
"<span class=\"comment\">/* struct request_sock - mini sock to represent a connection request</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#request_sock\">request_sock</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#dl_next\">dl_next</a>; <span class=\"comment\">/* Must be first member! */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u16\">u16</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mss\">mss</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#retrans\">retrans</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cookie_ts\">cookie_ts</a>; <span class=\"comment\">/* syncookie: encode tcpopts in timestamp */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* The following two fields can be easily recomputed I think -AK */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#window_clamp\">window_clamp</a>; <span class=\"comment\">/* window clamp at creation time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rcv_wnd\">rcv_wnd</a>;<span class=\"ts\"/>  <span class=\"comment\">/* rcv_wnd offered first time */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ts_recent\">ts_recent</a>;", 
"<span class=\"ts\"/>unsigned long<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#expires\">expires</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#request_sock_ops\">request_sock_ops</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#sock\">sock</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#sk\">sk</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#secid\">secid</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#peer_secid\">peer_secid</a>;", 
"};", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#reqsk_alloc\">reqsk_alloc</a>(const struct <a class=\"id\" href=\"#request_sock_ops\">request_sock_ops</a> *<a class=\"id\" href=\"#ops\">ops</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a> = <a class=\"id\" href=\"#kmem_cache_alloc\">kmem_cache_alloc</a>(<a class=\"id\" href=\"#ops\">ops</a>-><a class=\"id\" href=\"#slab\">slab</a>, <a class=\"id\" href=\"#GFP_ATOMIC\">GFP_ATOMIC</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#req\">req</a> != <a class=\"id\" href=\"#NULL\">NULL</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a> = <a class=\"id\" href=\"#ops\">ops</a>;", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#req\">req</a>;", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#__reqsk_free\">__reqsk_free</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kmem_cache_free\">kmem_cache_free</a>(<a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#slab\">slab</a>, <a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"static <a class=\"id\" href=\"#inline\">inline</a> void <a class=\"id\" href=\"#reqsk_free\">reqsk_free</a>(struct <a class=\"id\" href=\"#request_sock\">request_sock</a> *<a class=\"id\" href=\"#req\">req</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#req\">req</a>-><a class=\"id\" href=\"#rsk_ops\">rsk_ops</a>-><a class=\"id\" href=\"#destructor\">destructor</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#__reqsk_free\">__reqsk_free</a>(<a class=\"id\" href=\"#req\">req</a>);", 
"}", 
"", 
"extern int <a class=\"id\" href=\"#sysctl_max_syn_backlog\">sysctl_max_syn_backlog</a>;", 
"", 
"<span class=\"comment\">/** struct listen_sock - listen state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @max_qlen_log - log_2 of maximal queued SYNs/REQUESTs</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a> {", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_qlen_log\">max_qlen_log</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* 3 bytes hole, try to use */</span>", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qlen\">qlen</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#qlen_young\">qlen_young</a>;", 
"<span class=\"ts\"/>int<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#clock_hand\">clock_hand</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#hash_rnd\">hash_rnd</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u32\">u32</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a><span class=\"ts\"/>*<a class=\"id\" href=\"#syn_table\">syn_table</a>[0];", 
"};", 
"", 
"<span class=\"comment\">/** struct request_sock_queue - queue of request_socks</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @rskq_accept_head - FIFO head of established children</span>", 
"<span class=\"comment\"> * @rskq_accept_tail - FIFO tail of established children</span>", 
"<span class=\"comment\"> * @rskq_defer_accept - User waits for some data after accept()</span>", 
"<span class=\"comment\"> * @syn_wait_lock - serializer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * %syn_wait_lock is necessary only to avoid proc interface having to grab the main</span>", 
"<span class=\"comment\"> * lock sock while browsing the listening hash (otherwise it's deadlock prone).</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This lock is acquired in read mode only from listening_get_next() seq_file</span>", 
"<span class=\"comment\"> * op and it's acquired in write mode _only_ from code that is actively</span>", 
"<span class=\"comment\"> * changing rskq_accept_head. All readers that are holding the master sock lock</span>", 
"<span class=\"comment\"> * don't need to grab this lock in read mode too as rskq_accept_head. writes</span>", 
"<span class=\"comment\"> * are always protected from the main sock lock.</span>", 
"<span class=\"comment\"> */</span>", 
"struct <a class=\"id\" href=\"#request_sock_queue\">request_sock_queue</a> {", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rskq_accept_head\">rskq_accept_head</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#request_sock\">request_sock</a><span class=\"ts\"/>*<a class=\"id\" href=\"#rskq_accept_tail\">rskq_accept_tail</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#rwlock_t\">rwlock_t</a><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#syn_wait_lock\">syn_wait_lock</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rskq_defer_accept\">rskq_defer_accept</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/* 3 bytes hole, try to pack */</span>", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#listen_sock\">listen_sock</a><span class=\"ts\"/>*<a class=\"id\" href=\"#listen_opt\">listen_opt</a>;", 
"};", 
"", 
"extern int <a class=\"id\" href=\"#reqsk_queue_alloc\">reqsk_queue_alloc</a>(struct <a class=\"id\" href=\"#request_sock_queue\">request_sock_queue</a> *<a class=\"id\" href=\"#queue\">queue</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     unsigned int <a class=\"id\" href=\"#nr_table_entries\">nr_table_entries</a>);", 
"", 
];
xr_frag_insert('l/47/b388e300c30c2bcd8dd1ea31a372fa93d71600.xr', __xr_tmp);
