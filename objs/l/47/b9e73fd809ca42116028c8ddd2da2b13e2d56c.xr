var __xr_tmp = [
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#init\">init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#pci_x86\">pci_x86</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"", 
"<span class=\"comment\">/* arch_initcall has too random ordering, so call the initializers</span>", 
"<span class=\"comment\">   in the right sequence from here. */</span>", 
"static <a class=\"id\" href=\"#__init\">__init</a> int <a class=\"id\" href=\"#pci_arch_init\">pci_arch_init</a>(void)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_DIRECT\">CONFIG_PCI_DIRECT</a>", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#type\">type</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#pci_direct_probe\">pci_direct_probe</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if (!(<a class=\"id\" href=\"#pci_probe\">pci_probe</a> &amp; <a class=\"id\" href=\"#PCI_PROBE_NOEARLY\">PCI_PROBE_NOEARLY</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pci_mmcfg_early_init\">pci_mmcfg_early_init</a>();", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#arch_init\">arch_init</a> && !<a class=\"id\" href=\"#x86_init\">x86_init</a>.<a class=\"id\" href=\"#pci\">pci</a>.<a class=\"id\" href=\"#arch_init\">arch_init</a>())", 
"<span class=\"ts\"/><span class=\"ts\"/>return 0;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_BIOS\">CONFIG_PCI_BIOS</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_pcbios_init\">pci_pcbios_init</a>();", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * don't check for raw_pci_ops here because we want pcbios as last</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fallback, yet it's needed to run first to set pcibios_last_bus</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * in case legacy PCI probing is used. otherwise detecting peer busses</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * fails.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CONFIG_PCI_DIRECT\">CONFIG_PCI_DIRECT</a>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pci_direct_init\">pci_direct_init</a>(<a class=\"id\" href=\"#type\">type</a>);", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#raw_pci_ops\">raw_pci_ops</a> && !<a class=\"id\" href=\"#raw_pci_ext_ops\">raw_pci_ext_ops</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/>\"PCI: Fatal: No config space access function found\\n\");", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_check_pciprobe\">dmi_check_pciprobe</a>();", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#dmi_check_skip_isa_align\">dmi_check_skip_isa_align</a>();", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"<a class=\"id\" href=\"#arch_initcall\">arch_initcall</a>(<a class=\"id\" href=\"#pci_arch_init\">pci_arch_init</a>);", 
];
xr_frag_insert('l/47/b9e73fd809ca42116028c8ddd2da2b13e2d56c.xr', __xr_tmp);
