var __xr_tmp = [
"static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#medion_md9580\">medion_md9580</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Medion MD9580-F laptop\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"MEDIONNB\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"A555\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ }", 
"};", 
"", 
"<span class=\"comment\">/* http://bugzilla.kernel.org/show_bug.cgi?id=5044 */</span>", 
"static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#dell_optiplex\">dell_optiplex</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"Dell Optiplex GX1\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Dell Computer Corporation\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"OptiPlex GX1 600S+\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ }", 
"};", 
"", 
"<span class=\"comment\">/* http://bugzilla.kernel.org/show_bug.cgi?id=10138 */</span>", 
"static const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> <a class=\"id\" href=\"#hp_t5710\">hp_t5710</a>[] = {", 
"<span class=\"ts\"/>{", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#ident\">ident</a> = \"HP t5710\",", 
"<span class=\"ts\"/><span class=\"ts\"/>.<a class=\"id\" href=\"#matches\">matches</a> = {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_SYS_VENDOR\">DMI_SYS_VENDOR</a>, \"Hewlett-Packard\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_PRODUCT_NAME\">DMI_PRODUCT_NAME</a>, \"hp t5000 series\"),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#DMI_MATCH\">DMI_MATCH</a>(<a class=\"id\" href=\"#DMI_BOARD_NAME\">DMI_BOARD_NAME</a>, \"098Ch\"),", 
"<span class=\"ts\"/><span class=\"ts\"/>},", 
"<span class=\"ts\"/>},", 
"<span class=\"ts\"/>{ }", 
"};", 
"", 
"struct <a class=\"id\" href=\"#prt_quirk\">prt_quirk</a> {", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#dmi_system_id\">dmi_system_id</a> *<a class=\"id\" href=\"#system\">system</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#segment\">segment</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#bus\">bus</a>;", 
"<span class=\"ts\"/>unsigned int<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#device\">device</a>;", 
"<span class=\"ts\"/>unsigned char<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pin\">pin</a>;", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#source\">source</a>;<span class=\"ts\"/><span class=\"comment\">/* according to BIOS */</span>", 
"<span class=\"ts\"/>const char<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#actual_source\">actual_source</a>;", 
"};", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#PCI_INTX_PIN\">PCI_INTX_PIN</a>(<a class=\"id\" href=\"#c\">c</a>)<span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#c\">c</a> - 'A' + 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * These systems have incorrect _PRT entries.  The BIOS claims the PCI</span>", 
"<span class=\"comment\"> * interrupt at the listed segment/bus/device/pin is connected to the first</span>", 
"<span class=\"comment\"> * link device, but it is actually connected to the second.</span>", 
"<span class=\"comment\"> */</span>", 
"static const struct <a class=\"id\" href=\"#prt_quirk\">prt_quirk</a> <a class=\"id\" href=\"#prt_quirks\">prt_quirks</a>[] = {", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#medion_md9580\">medion_md9580</a>, 0, 0, 9, <a class=\"id\" href=\"#PCI_INTX_PIN\">PCI_INTX_PIN</a>('A'),", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\\\_SB_.PCI0.ISA_.LNKA\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\\\_SB_.PCI0.ISA_.LNKB\"},", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#dell_optiplex\">dell_optiplex</a>, 0, 0, 0xd, <a class=\"id\" href=\"#PCI_INTX_PIN\">PCI_INTX_PIN</a>('A'),", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\\\_SB_.LNKB\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\\\_SB_.LNKA\"},", 
"<span class=\"ts\"/>{ <a class=\"id\" href=\"#hp_t5710\">hp_t5710</a>, 0, 0, 1, <a class=\"id\" href=\"#PCI_INTX_PIN\">PCI_INTX_PIN</a>('A'),", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\\\_SB_.PCI0.LNK1\",", 
"<span class=\"ts\"/><span class=\"ts\"/>\"\\\\_SB_.PCI0.LNK3\"},", 
"};", 
"", 
"static void <a class=\"id\" href=\"#do_prt_fixups\">do_prt_fixups</a>(struct <a class=\"id\" href=\"#acpi_prt_entry\">acpi_prt_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#acpi_pci_routing_table\">acpi_pci_routing_table</a> *<a class=\"id\" href=\"#prt\">prt</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
"<span class=\"ts\"/>const struct <a class=\"id\" href=\"#prt_quirk\">prt_quirk</a> *<a class=\"id\" href=\"#quirk\">quirk</a>;", 
"", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; <a class=\"id\" href=\"#ARRAY_SIZE\">ARRAY_SIZE</a>(<a class=\"id\" href=\"#prt_quirks\">prt_quirks</a>); <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#quirk\">quirk</a> = &amp;<a class=\"id\" href=\"#prt_quirks\">prt_quirks</a>[<a class=\"id\" href=\"#i\">i</a>];", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All current quirks involve link devices, not GSIs */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#dmi_check_system\">dmi_check_system</a>(<a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#system\">system</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#segment\">segment</a> == <a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#segment\">segment</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#bus\">bus</a> == <a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#bus\">bus</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a> == <a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#device\">device</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a> == <a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#pin\">pin</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    !<a class=\"id\" href=\"#strcmp\">strcmp</a>(<a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#source\">source</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>) >= <a class=\"id\" href=\"#strlen\">strlen</a>(<a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#actual_source\">actual_source</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> <a class=\"id\" href=\"#PREFIX\">PREFIX</a> \"firmware reports \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"%04x:%02x:%02x PCI INT %c connected to %s; \"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>\"changing to %s\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#segment\">segment</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#pin_name\">pin_name</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#actual_source\">actual_source</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#strcpy\">strcpy</a>(<a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#quirk\">quirk</a>-><a class=\"id\" href=\"#actual_source\">actual_source</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#acpi_pci_irq_add_entry\">acpi_pci_irq_add_entry</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  struct <a class=\"id\" href=\"#acpi_pci_routing_table\">acpi_pci_routing_table</a> *<a class=\"id\" href=\"#prt\">prt</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_prt_entry\">acpi_prt_entry</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#kzalloc\">kzalloc</a>(sizeof(struct <a class=\"id\" href=\"#acpi_prt_entry\">acpi_prt_entry</a>), <a class=\"id\" href=\"#GFP_KERNEL\">GFP_KERNEL</a>);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#entry\">entry</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENOMEM\">ENOMEM</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Note that the _PRT uses 0=INTA, 1=INTB, etc, while PCI uses</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1=INTA, 2=INTB.  We use the PCI encoding throughout, so convert</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * it here.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#segment\">segment</a> = <a class=\"id\" href=\"#pci_domain_nr\">pci_domain_nr</a>(<a class=\"id\" href=\"#bus\">bus</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#bus\">bus</a> = <a class=\"id\" href=\"#bus\">bus</a>-><a class=\"id\" href=\"#number\">number</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a> = (<a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#address\">address</a> >> 16) &amp; 0xFFFF;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a> = <a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#pin\">pin</a> + 1;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#do_prt_fixups\">do_prt_fixups</a>(<a class=\"id\" href=\"#entry\">entry</a>, <a class=\"id\" href=\"#prt\">prt</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#index\">index</a> = <a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source_index\">source_index</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Type 1: Dynamic</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ---------------</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The 'source' field specifies the PCI interrupt link device used to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * configure the IRQ assigned to this slot|dev|pin.  The 'source_index'</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * indicates which resource descriptor in the resource template (of</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the link device) this interrupt is allocated from.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * </span>", 
"<span class=\"comment\"><span class=\"ts\"/> * NOTE: Don't query the Link Device for IRQ information at this time</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *       because Link Device enumeration may not have occurred yet</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *       (e.g. exists somewhere 'below' this _PRT entry in the ACPI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *       namespace).</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>[0])", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_get_handle\">acpi_get_handle</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>, &amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#link\">link</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Type 2: Static</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * --------------</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The 'source' field is NULL, and the 'source_index' field specifies</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the IRQ value, which is hardwired to specific interrupt inputs on</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * the interrupt controller.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT_RAW\">ACPI_DEBUG_PRINT_RAW</a>((<a class=\"id\" href=\"#ACPI_DB_INFO\">ACPI_DB_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      \"      %04x:%02x:%02x[%c] -> %s[%d]\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#segment\">segment</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#bus\">bus</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#id\">id</a>.<a class=\"id\" href=\"#device\">device</a>, <a class=\"id\" href=\"#pin_name\">pin_name</a>(<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#pin\">pin</a>),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#prt\">prt</a>-><a class=\"id\" href=\"#source\">source</a>, <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#index\">index</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#acpi_prt_lock\">acpi_prt_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#list_add_tail\">list_add_tail</a>(&amp;<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#list\">list</a>, &amp;<a class=\"id\" href=\"#acpi_prt_list\">acpi_prt_list</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#acpi_prt_lock\">acpi_prt_lock</a>);", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#acpi_pci_irq_add_prt\">acpi_pci_irq_add_prt</a>(<a class=\"id\" href=\"#acpi_handle\">acpi_handle</a> <a class=\"id\" href=\"#handle\">handle</a>, struct <a class=\"id\" href=\"#pci_bus\">pci_bus</a> *<a class=\"id\" href=\"#bus\">bus</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_buffer\">acpi_buffer</a> <a class=\"id\" href=\"#buffer\">buffer</a> = { <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>, <a class=\"id\" href=\"#NULL\">NULL</a> };", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_pci_routing_table\">acpi_pci_routing_table</a> *<a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* 'handle' is the _PRT's parent (root bridge or PCI-PCI bridge) */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_name\">acpi_get_name</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#ACPI_FULL_PATHNAME\">ACPI_FULL_PATHNAME</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_DEBUG\">KERN_DEBUG</a> \"ACPI: PCI Interrupt Routing Table [%s._PRT]\\n\",", 
"<span class=\"ts\"/>       (char *) <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#length\">length</a> = <a class=\"id\" href=\"#ACPI_ALLOCATE_BUFFER\">ACPI_ALLOCATE_BUFFER</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_get_irq_routing_table\">acpi_get_irq_routing_table</a>(<a class=\"id\" href=\"#handle\">handle</a>, &amp;<a class=\"id\" href=\"#buffer\">buffer</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_EXCEPTION\">ACPI_EXCEPTION</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, <a class=\"id\" href=\"#status\">status</a>, \"Evaluating _PRT [%s]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_format_exception\">acpi_format_exception</a>(<a class=\"id\" href=\"#status\">status</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#kfree\">kfree</a>(<a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#ENODEV\">ENODEV</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#buffer\">buffer</a>.<a class=\"id\" href=\"#pointer\">pointer</a>;", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#entry\">entry</a> && (<a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#length\">length</a> &gt; 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_pci_irq_add_entry\">acpi_pci_irq_add_entry</a>(<a class=\"id\" href=\"#handle\">handle</a>, <a class=\"id\" href=\"#bus\">bus</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = (struct <a class=\"id\" href=\"#acpi_pci_routing_table\">acpi_pci_routing_table</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/>    ((unsigned long)<a class=\"id\" href=\"#entry\">entry</a> + <a class=\"id\" href=\"#entry\">entry</a>-><a class=\"id\" href=\"#length\">length</a>);", 
"<span class=\"ts\"/>}", 
];
xr_frag_insert('l/49/53777b3a3f3e74d09935eb23f95cd71fc6296b.xr', __xr_tmp);
