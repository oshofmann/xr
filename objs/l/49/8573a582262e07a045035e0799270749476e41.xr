var __xr_tmp = [
"<span class=\"comment\"> *<span class=\"ts\"/>A string that acts as a unique identifeir for the LSM with max number</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>of characters = SECURITY_NAME_MAX.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Security hooks for program execution operations.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * @bprm_set_creds:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Save security information in the bprm-&gt;security field, typically based</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>on information about the bprm-&gt;file, for later use by the apply_creds</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>hook.  This hook may also optionally check permissions (e.g. for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>transitions between security domains).</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This hook may be called multiple times during a single execve, e.g. for</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>interpreters.  The hook can tell whether it has already been called by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>checking to see if @bprm-&gt;security is non-NULL.  If so, then the hook</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>may decide either to retain the security information saved earlier or</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>to replace it.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bprm contains the linux_binprm structure.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return 0 if the hook is successful and permission is granted.</span>", 
"<span class=\"comment\"> * @bprm_check_security:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This hook mediates the point when a search for a binary handler will</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>begin.  It allows a check the @bprm-&gt;security value which is set in the</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>preceding set_creds call.  The primary difference from set_creds is</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>that the argv list and envp list are reliably available in @bprm.  This</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>hook may be called multiple times during a single execve; and in each</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pass set_creds is called first.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>@bprm contains the linux_binprm structure.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Return 0 if the hook is successful and permission is granted.</span>", 
"<span class=\"comment\"> * @bprm_committing_creds:</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>Prepare to install the new security attributes of a process being</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>transformed by an execve operation, based on the old credentials</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>pointed to by @current-&gt;cred and the information set in @bprm-&gt;cred by</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>the bprm_set_creds hook.  @bprm points to the linux_binprm structure.</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>This hook is a good place to perform state changes on the process such</span>", 
"<span class=\"comment\"> *<span class=\"ts\"/>as closing open file descriptors to which access will no longer be</span>", 
];
xr_frag_insert('l/49/8573a582262e07a045035e0799270749476e41.xr', __xr_tmp);
