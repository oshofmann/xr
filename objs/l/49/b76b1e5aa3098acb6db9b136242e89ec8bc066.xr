var __xr_tmp = [
"static void <a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(int <a class=\"id\" href=\"#xpos\">xpos</a>, int <a class=\"id\" href=\"#from\">from</a>, int <a class=\"id\" href=\"#to\">to</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#curs\">curs</a>, <a class=\"id\" href=\"#cure\">cure</a>;", 
"", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#TRIDENT_GLITCH\">TRIDENT_GLITCH</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xpos\">xpos</a> &lt; 16)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#from\">from</a>--, <a class=\"id\" href=\"#to\">to</a>--;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#from\">from</a> == <a class=\"id\" href=\"#cursor_size_lastfrom\">cursor_size_lastfrom</a>) && (<a class=\"id\" href=\"#to\">to</a> == <a class=\"id\" href=\"#cursor_size_lastto\">cursor_size_lastto</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cursor_size_lastfrom\">cursor_size_lastfrom</a> = <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cursor_size_lastto\">cursor_size_lastto</a> = <a class=\"id\" href=\"#to\">to</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> >= <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_CURSOR_START\">VGA_CRTC_CURSOR_START</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curs\">curs</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_CURSOR_END\">VGA_CRTC_CURSOR_END</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cure\">cure</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#curs\">curs</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cure\">cure</a> = 0;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#curs\">curs</a> = (<a class=\"id\" href=\"#curs\">curs</a> &amp; 0xc0) | <a class=\"id\" href=\"#from\">from</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#cure\">cure</a> = (<a class=\"id\" href=\"#cure\">cure</a> &amp; 0xe0) | <a class=\"id\" href=\"#to\">to</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_CURSOR_START\">VGA_CRTC_CURSOR_START</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#curs\">curs</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_CURSOR_END\">VGA_CRTC_CURSOR_END</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#cure\">cure</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vgacon_cursor\">vgacon_cursor</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_mode\">vc_mode</a> != <a class=\"id\" href=\"#KD_TEXT\">KD_TEXT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>return;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vgacon_restore_screen\">vgacon_restore_screen</a>(<a class=\"id\" href=\"#c\">c</a>);", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#mode\">mode</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CM_ERASE\">CM_ERASE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_vga\">write_vga</a>(14, (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_pos\">vc_pos</a> - <a class=\"id\" href=\"#vga_vram_base\">vga_vram_base</a>) / 2);", 
"<span class=\"ts\"/>        if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> >= <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>, 31, 30);", 
"<span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>, 31, 31);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CM_MOVE\">CM_MOVE</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#CM_DRAW\">CM_DRAW</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#write_vga\">write_vga</a>(14, (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_pos\">vc_pos</a> - <a class=\"id\" href=\"#vga_vram_base\">vga_vram_base</a>) / 2);", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_cursor_type\">vc_cursor_type</a> &amp; 0x0f) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CUR_UNDERLINE\">CUR_UNDERLINE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>10 ? 2 : 3),", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>10 ? 1 : 2));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CUR_TWO_THIRDS\">CUR_TWO_THIRDS</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> / 3,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>10 ? 1 : 2));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CUR_LOWER_THIRD\">CUR_LOWER_THIRD</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> * 2) / 3,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>10 ? 1 : 2));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CUR_LOWER_HALF\">CUR_LOWER_HALF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> / 2,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> -", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       (<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a> &lt;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>10 ? 1 : 2));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#CUR_NONE\">CUR_NONE</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> >= <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>, 31, 30);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>else", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>, 31, 31);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_set_cursor_size\">vgacon_set_cursor_size</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_x\">vc_x</a>, 1,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vgacon_doresize\">vgacon_doresize</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#width\">width</a>, unsigned int <a class=\"id\" href=\"#height\">height</a>)", 
"{", 
"<span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#flags\">flags</a>;", 
"<span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#scanlines\">scanlines</a> = <a class=\"id\" href=\"#height\">height</a> * <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#scanlines_lo\">scanlines_lo</a> = 0, <a class=\"id\" href=\"#r7\">r7</a> = 0, <a class=\"id\" href=\"#vsync_end\">vsync_end</a> = 0, <a class=\"id\" href=\"#mode\">mode</a>, <a class=\"id\" href=\"#max_scan\">max_scan</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irqsave\">spin_lock_irqsave</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vgacon_xres\">vgacon_xres</a> = <a class=\"id\" href=\"#width\">width</a> * <a class=\"id\" href=\"#VGA_FONTWIDTH\">VGA_FONTWIDTH</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vgacon_yres\">vgacon_yres</a> = <a class=\"id\" href=\"#height\">height</a> * <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> >= <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_MAX_SCAN\">VGA_CRTC_MAX_SCAN</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#max_scan\">max_scan</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#max_scan\">max_scan</a> &amp; 0x80)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scanlines\">scanlines</a> <<= 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_MODE\">VGA_CRTC_MODE</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mode\">mode</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> &amp; 0x04)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scanlines\">scanlines</a> >>= 1;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scanlines\">scanlines</a> -= 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scanlines_lo\">scanlines_lo</a> = <a class=\"id\" href=\"#scanlines\">scanlines</a> &amp; 0xff;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_OVERFLOW\">VGA_CRTC_OVERFLOW</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r7\">r7</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>) &amp; ~0x42;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scanlines\">scanlines</a> &amp; 0x100)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r7\">r7</a> |= 0x02;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#scanlines\">scanlines</a> &amp; 0x200)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#r7\">r7</a> |= 0x40;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* deprotect registers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_V_SYNC_END\">VGA_CRTC_V_SYNC_END</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vsync_end\">vsync_end</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_V_SYNC_END\">VGA_CRTC_V_SYNC_END</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vsync_end\">vsync_end</a> &amp; ~0x80, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_H_DISP\">VGA_CRTC_H_DISP</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#width\">width</a> - 1, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_OFFSET\">VGA_CRTC_OFFSET</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#width\">width</a> >> 1, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> >= <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_V_DISP_END\">VGA_CRTC_V_DISP_END</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#scanlines_lo\">scanlines_lo</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_OVERFLOW\">VGA_CRTC_OVERFLOW</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#r7\">r7</a>,<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* reprotect registers */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#VGA_CRTC_V_SYNC_END\">VGA_CRTC_V_SYNC_END</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vsync_end\">vsync_end</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irqrestore\">spin_unlock_irqrestore</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>, <a class=\"id\" href=\"#flags\">flags</a>);", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vgacon_switch\">vgacon_switch</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#c\">c</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#x\">x</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_cols\">vc_cols</a> * <a class=\"id\" href=\"#VGA_FONTWIDTH\">VGA_FONTWIDTH</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#y\">y</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_rows\">vc_rows</a> * <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rows\">rows</a> = <a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#orig_video_lines\">orig_video_lines</a> * <a class=\"id\" href=\"#vga_default_font_height\">vga_default_font_height</a>/", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_font\">vc_font</a>.<a class=\"id\" href=\"#height\">height</a>;", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * We need to save screen size here as it's the only way</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we can spot the screen has been resized and we need to</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * set size of freshly allocated screens ourselves.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_video_num_columns\">vga_video_num_columns</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_cols\">vc_cols</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_video_num_lines\">vga_video_num_lines</a> = <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_rows\">vc_rows</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can only copy out the size of the video buffer here,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * otherwise we get into VGA BIOS */</span>", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vga_is_gfx\">vga_is_gfx</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#scr_memcpyw\">scr_memcpyw</a>((<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_origin\">vc_origin</a>, (<a class=\"id\" href=\"#u16\">u16</a> *) <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf\">vc_screenbuf</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a> &gt; <a class=\"id\" href=\"#vga_vram_size\">vga_vram_size</a> ?", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_vram_size\">vga_vram_size</a> : <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_screenbuf_size\">vc_screenbuf_size</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#vgacon_xres\">vgacon_xres</a> != <a class=\"id\" href=\"#x\">x</a> || <a class=\"id\" href=\"#vgacon_yres\">vgacon_yres</a> != <a class=\"id\" href=\"#y\">y</a>) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>    (!(<a class=\"id\" href=\"#vga_video_num_columns\">vga_video_num_columns</a> % 2) &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#vga_video_num_columns\">vga_video_num_columns</a> <= <a class=\"id\" href=\"#screen_info\">screen_info</a>.<a class=\"id\" href=\"#orig_video_cols\">orig_video_cols</a> &&", 
"<span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#vga_video_num_lines\">vga_video_num_lines</a> <= <a class=\"id\" href=\"#rows\">rows</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vgacon_doresize\">vgacon_doresize</a>(<a class=\"id\" href=\"#c\">c</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_cols\">vc_cols</a>, <a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_rows\">vc_rows</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vgacon_scrollback_init\">vgacon_scrollback_init</a>(<a class=\"id\" href=\"#c\">c</a>-><a class=\"id\" href=\"#vc_size_row\">vc_size_row</a>);", 
"<span class=\"ts\"/>return 0;<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Redrawing not needed */</span>", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vga_set_palette\">vga_set_palette</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>, unsigned char *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>, <a class=\"id\" href=\"#j\">j</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_PEL_MSK\">VGA_PEL_MSK</a>, 0xff);", 
"<span class=\"ts\"/>for (<a class=\"id\" href=\"#i\">i</a> = <a class=\"id\" href=\"#j\">j</a> = 0; <a class=\"id\" href=\"#i\">i</a> &lt; 16; <a class=\"id\" href=\"#i\">i</a>++) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_PEL_IW\">VGA_PEL_IW</a>, <a class=\"id\" href=\"#table\">table</a>[<a class=\"id\" href=\"#i\">i</a>]);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_PEL_D\">VGA_PEL_D</a>, <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_palette\">vc_palette</a>[<a class=\"id\" href=\"#j\">j</a>++] >> 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_PEL_D\">VGA_PEL_D</a>, <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_palette\">vc_palette</a>[<a class=\"id\" href=\"#j\">j</a>++] >> 2);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>.<a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_PEL_D\">VGA_PEL_D</a>, <a class=\"id\" href=\"#vc\">vc</a>-><a class=\"id\" href=\"#vc_palette\">vc_palette</a>[<a class=\"id\" href=\"#j\">j</a>++] >> 2);", 
"<span class=\"ts\"/>}", 
"}", 
"", 
"static int <a class=\"id\" href=\"#vgacon_set_palette\">vgacon_set_palette</a>(struct <a class=\"id\" href=\"#vc_data\">vc_data</a> *<a class=\"id\" href=\"#vc\">vc</a>, unsigned char *<a class=\"id\" href=\"#table\">table</a>)", 
"{", 
"#<a class=\"id\" href=\"#ifdef\">ifdef</a> <a class=\"id\" href=\"#CAN_LOAD_PALETTE\">CAN_LOAD_PALETTE</a>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#vga_video_type\">vga_video_type</a> != <a class=\"id\" href=\"#VIDEO_TYPE_VGAC\">VIDEO_TYPE_VGAC</a> || <a class=\"id\" href=\"#vga_palette_blanked\">vga_palette_blanked</a>", 
"<span class=\"ts\"/>    || !<a class=\"id\" href=\"#CON_IS_VISIBLE\">CON_IS_VISIBLE</a>(<a class=\"id\" href=\"#vc\">vc</a>))", 
"<span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_set_palette\">vga_set_palette</a>(<a class=\"id\" href=\"#vc\">vc</a>, <a class=\"id\" href=\"#table\">table</a>);", 
"<span class=\"ts\"/>return 0;", 
"#else", 
"<span class=\"ts\"/>return -<a class=\"id\" href=\"#EINVAL\">EINVAL</a>;", 
"#<a class=\"id\" href=\"#endif\">endif</a>", 
"}", 
"", 
"<span class=\"comment\">/* structure holding original VGA register settings */</span>", 
"static struct {", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#SeqCtrlIndex\">SeqCtrlIndex</a>;<span class=\"ts\"/><span class=\"comment\">/* Sequencer Index reg.   */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#CrtCtrlIndex\">CrtCtrlIndex</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Contr. Index reg.  */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#CrtMiscIO\">CrtMiscIO</a>;<span class=\"ts\"/><span class=\"comment\">/* Miscellaneous register */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#HorizontalTotal\">HorizontalTotal</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:00h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#HorizDisplayEnd\">HorizDisplayEnd</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:01h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#StartHorizRetrace\">StartHorizRetrace</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:04h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#EndHorizRetrace\">EndHorizRetrace</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:05h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#Overflow\">Overflow</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:07h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#StartVertRetrace\">StartVertRetrace</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:10h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#EndVertRetrace\">EndVertRetrace</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:11h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#ModeControl\">ModeControl</a>;<span class=\"ts\"/><span class=\"comment\">/* CRT-Controller:17h */</span>", 
"<span class=\"ts\"/>unsigned char <a class=\"id\" href=\"#ClockingMode\">ClockingMode</a>;<span class=\"ts\"/><span class=\"comment\">/* Seq-Controller:01h */</span>", 
"} <a class=\"id\" href=\"#vga_state\">vga_state</a>;", 
"", 
"static void <a class=\"id\" href=\"#vga_vesa_blank\">vga_vesa_blank</a>(struct <a class=\"id\" href=\"#vgastate\">vgastate</a> *<a class=\"id\" href=\"#state\">state</a>, int <a class=\"id\" href=\"#mode\">mode</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* save original values of VGA controller registers */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#vga_vesa_blanked\">vga_vesa_blanked</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#SeqCtrlIndex\">SeqCtrlIndex</a> = <a class=\"id\" href=\"#vga_r\">vga_r</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_I\">VGA_SEQ_I</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#CrtCtrlIndex\">CrtCtrlIndex</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#CrtMiscIO\">CrtMiscIO</a> = <a class=\"id\" href=\"#vga_r\">vga_r</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_MIS_R\">VGA_MIS_R</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x00, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* HorizontalTotal */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#HorizontalTotal\">HorizontalTotal</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x01, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* HorizDisplayEnd */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#HorizDisplayEnd\">HorizDisplayEnd</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x04, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* StartHorizRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#StartHorizRetrace\">StartHorizRetrace</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x05, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* EndHorizRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#EndHorizRetrace\">EndHorizRetrace</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x07, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* Overflow */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#Overflow\">Overflow</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x10, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* StartVertRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#StartVertRetrace\">StartVertRetrace</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x11, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* EndVertRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#EndVertRetrace\">EndVertRetrace</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x17, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* ModeControl */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#ModeControl\">ModeControl</a> = <a class=\"id\" href=\"#inb_p\">inb_p</a>(<a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#ClockingMode\">ClockingMode</a> = <a class=\"id\" href=\"#vga_rseq\">vga_rseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_CLOCK_MODE\">VGA_SEQ_CLOCK_MODE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* assure that video is enabled */</span>", 
"<span class=\"ts\"/><span class=\"comment\">/* \"0x20\" is VIDEO_ENABLE_bit in register 01 of sequencer */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_CLOCK_MODE\">VGA_SEQ_CLOCK_MODE</a>, <a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#ClockingMode\">ClockingMode</a> | 0x20);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* test for vertical retrace in process.... */</span>", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#CrtMiscIO\">CrtMiscIO</a> &amp; 0x80) == 0x80)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_MIS_W\">VGA_MIS_W</a>, <a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#CrtMiscIO\">CrtMiscIO</a> &amp; 0xEF);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Set &lt;End of vertical retrace&gt; to minimum (0) and</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * &lt;Start of vertical Retrace&gt; to maximum (incl. overflow)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Result: turn off vertical sync (VSync) pulse.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#VESA_VSYNC_SUSPEND\">VESA_VSYNC_SUSPEND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x10, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* StartVertRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0xff, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);<span class=\"ts\"/><span class=\"comment\">/* maximum value */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x11, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* EndVertRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x40, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);<span class=\"ts\"/><span class=\"comment\">/* minimum (bits 0..3)  */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x07, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* Overflow */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#Overflow\">Overflow</a> | 0x84, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);<span class=\"ts\"/><span class=\"comment\">/* bits 9,10 of vert. retrace */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#mode\">mode</a> &amp; <a class=\"id\" href=\"#VESA_HSYNC_SUSPEND\">VESA_HSYNC_SUSPEND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Set &lt;End of horizontal retrace&gt; to minimum (0) and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> *  &lt;Start of horizontal Retrace&gt; to maximum</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> * Result: turn off horizontal sync (HSync) pulse.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x04, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* StartHorizRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0xff, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);<span class=\"ts\"/><span class=\"comment\">/* maximum */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x05, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* EndHorizRetrace */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x00, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);<span class=\"ts\"/><span class=\"comment\">/* minimum (0) */</span>", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* restore both index registers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_I\">VGA_SEQ_I</a>, <a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#SeqCtrlIndex\">SeqCtrlIndex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#CrtCtrlIndex\">CrtCtrlIndex</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vga_vesa_unblank\">vga_vesa_unblank</a>(struct <a class=\"id\" href=\"#vgastate\">vgastate</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/><span class=\"comment\">/* restore original values of VGA controller registers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock_irq\">spin_lock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_MIS_W\">VGA_MIS_W</a>, <a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#CrtMiscIO\">CrtMiscIO</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x00, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* HorizontalTotal */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#HorizontalTotal\">HorizontalTotal</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x01, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* HorizDisplayEnd */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#HorizDisplayEnd\">HorizDisplayEnd</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x04, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* StartHorizRetrace */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#StartHorizRetrace\">StartHorizRetrace</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x05, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* EndHorizRetrace */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#EndHorizRetrace\">EndHorizRetrace</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x07, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* Overflow */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#Overflow\">Overflow</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x10, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* StartVertRetrace */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#StartVertRetrace\">StartVertRetrace</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x11, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* EndVertRetrace */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#EndVertRetrace\">EndVertRetrace</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(0x17, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);<span class=\"ts\"/><span class=\"comment\">/* ModeControl */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#ModeControl\">ModeControl</a>, <a class=\"id\" href=\"#vga_video_port_val\">vga_video_port_val</a>);", 
"<span class=\"ts\"/><span class=\"comment\">/* ClockingMode */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_wseq\">vga_wseq</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_CLOCK_MODE\">VGA_SEQ_CLOCK_MODE</a>, <a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#ClockingMode\">ClockingMode</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* restore index/control registers */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vga_w\">vga_w</a>(<a class=\"id\" href=\"#state\">state</a>-><a class=\"id\" href=\"#vgabase\">vgabase</a>, <a class=\"id\" href=\"#VGA_SEQ_I\">VGA_SEQ_I</a>, <a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#SeqCtrlIndex\">SeqCtrlIndex</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#outb_p\">outb_p</a>(<a class=\"id\" href=\"#vga_state\">vga_state</a>.<a class=\"id\" href=\"#CrtCtrlIndex\">CrtCtrlIndex</a>, <a class=\"id\" href=\"#vga_video_port_reg\">vga_video_port_reg</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock_irq\">spin_unlock_irq</a>(&amp;<a class=\"id\" href=\"#vga_lock\">vga_lock</a>);", 
"}", 
"", 
"static void <a class=\"id\" href=\"#vga_pal_blank\">vga_pal_blank</a>(struct <a class=\"id\" href=\"#vgastate\">vgastate</a> *<a class=\"id\" href=\"#state\">state</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#i\">i</a>;", 
];
xr_frag_insert('l/49/b76b1e5aa3098acb6db9b136242e89ec8bc066.xr', __xr_tmp);
