var __xr_tmp = [
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> * xenbus_comms.c</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Low level code to talks to Xen Store: ringbuffer and event channel.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Copyright (C) 2005 Rusty Russell, IBM Corporation</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * This program is free software; you can redistribute it and/or</span>", 
"<span class=\"comment\"> * modify it under the terms of the GNU General Public License version 2</span>", 
"<span class=\"comment\"> * as published by the Free Software Foundation; or, when distributed</span>", 
"<span class=\"comment\"> * separately from the Linux kernel or incorporated into other</span>", 
"<span class=\"comment\"> * software packages, subject to the following license:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span>", 
"<span class=\"comment\"> * of this source file (the \"Software\"), to deal in the Software without</span>", 
"<span class=\"comment\"> * restriction, including without limitation the rights to use, copy, modify,</span>", 
"<span class=\"comment\"> * merge, publish, distribute, sublicense, and/or sell copies of the Software,</span>", 
"<span class=\"comment\"> * and to permit persons to whom the Software is furnished to do so, subject to</span>", 
"<span class=\"comment\"> * the following conditions:</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * The above copyright notice and this permission notice shall be included in</span>", 
"<span class=\"comment\"> * all copies or substantial portions of the Software.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>", 
"<span class=\"comment\"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>", 
"<span class=\"comment\"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>", 
"<span class=\"comment\"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>", 
"<span class=\"comment\"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING</span>", 
"<span class=\"comment\"> * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS</span>", 
"<span class=\"comment\"> * IN THE SOFTWARE.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#wait\">wait</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#interrupt\">interrupt</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#sched\">sched</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#linux\">linux</a>/<a class=\"id\" href=\"#err\">err</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#xenbus\">xenbus</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#asm\">asm</a>/<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#hypervisor\">hypervisor</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#events\">events</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#xen\">xen</a>/<a class=\"id\" href=\"#page\">page</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"xenbus_comms.h\"", 
"", 
"static int <a class=\"id\" href=\"#xenbus_irq\">xenbus_irq</a>;", 
"", 
"static <a class=\"id\" href=\"#DECLARE_WORK\">DECLARE_WORK</a>(<a class=\"id\" href=\"#probe_work\">probe_work</a>, <a class=\"id\" href=\"#xenbus_probe\">xenbus_probe</a>);", 
"", 
"static <a class=\"id\" href=\"#DECLARE_WAIT_QUEUE_HEAD\">DECLARE_WAIT_QUEUE_HEAD</a>(<a class=\"id\" href=\"#xb_waitq\">xb_waitq</a>);", 
"", 
"static <a class=\"id\" href=\"#irqreturn_t\">irqreturn_t</a> <a class=\"id\" href=\"#wake_waiting\">wake_waiting</a>(int <a class=\"id\" href=\"#irq\">irq</a>, void *<a class=\"id\" href=\"#unused\">unused</a>)", 
"{", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#unlikely\">unlikely</a>(<a class=\"id\" href=\"#xenstored_ready\">xenstored_ready</a> == 0)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xenstored_ready\">xenstored_ready</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#schedule_work\">schedule_work</a>(&amp;<a class=\"id\" href=\"#probe_work\">probe_work</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#wake_up\">wake_up</a>(&amp;<a class=\"id\" href=\"#xb_waitq\">xb_waitq</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#IRQ_HANDLED\">IRQ_HANDLED</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#check_indexes\">check_indexes</a>(<a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#prod\">prod</a>)", 
"{", 
"<span class=\"ts\"/>return ((<a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>) <= <a class=\"id\" href=\"#XENSTORE_RING_SIZE\">XENSTORE_RING_SIZE</a>);", 
"}", 
"", 
"static void *<a class=\"id\" href=\"#get_output_chunk\">get_output_chunk</a>(<a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#cons\">cons</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      <a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#prod\">prod</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>      char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#uint32_t\">uint32_t</a> *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#XENSTORE_RING_SIZE\">XENSTORE_RING_SIZE</a> - <a class=\"id\" href=\"#MASK_XENSTORE_IDX\">MASK_XENSTORE_IDX</a>(<a class=\"id\" href=\"#prod\">prod</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#XENSTORE_RING_SIZE\">XENSTORE_RING_SIZE</a> - (<a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>)) &lt; *<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#XENSTORE_RING_SIZE\">XENSTORE_RING_SIZE</a> - (<a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#MASK_XENSTORE_IDX\">MASK_XENSTORE_IDX</a>(<a class=\"id\" href=\"#prod\">prod</a>);", 
"}", 
"", 
"static const void *<a class=\"id\" href=\"#get_input_chunk\">get_input_chunk</a>(<a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#cons\">cons</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#prod\">prod</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   const char *<a class=\"id\" href=\"#buf\">buf</a>, <a class=\"id\" href=\"#uint32_t\">uint32_t</a> *<a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#XENSTORE_RING_SIZE\">XENSTORE_RING_SIZE</a> - <a class=\"id\" href=\"#MASK_XENSTORE_IDX\">MASK_XENSTORE_IDX</a>(<a class=\"id\" href=\"#cons\">cons</a>);", 
"<span class=\"ts\"/>if ((<a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>) &lt; *<a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#len\">len</a> = <a class=\"id\" href=\"#prod\">prod</a> - <a class=\"id\" href=\"#cons\">cons</a>;", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#buf\">buf</a> + <a class=\"id\" href=\"#MASK_XENSTORE_IDX\">MASK_XENSTORE_IDX</a>(<a class=\"id\" href=\"#cons\">cons</a>);", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * xb_write - low level write</span>", 
"<span class=\"comment\"> * @data: buffer to send</span>", 
"<span class=\"comment\"> * @len: length of buffer</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Returns 0 on success, error otherwise.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#xb_write\">xb_write</a>(const void *<a class=\"id\" href=\"#data\">data</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenstore_domain_interface\">xenstore_domain_interface</a> *<a class=\"id\" href=\"#intf\">intf</a> = <a class=\"id\" href=\"#xen_store_interface\">xen_store_interface</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>void *<a class=\"id\" href=\"#dst\">dst</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#avail\">avail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#wait_event_interruptible\">wait_event_interruptible</a>(", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xb_waitq\">xb_waitq</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>(<a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_prod\">req_prod</a> - <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_cons\">req_cons</a>) !=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#XENSTORE_RING_SIZE\">XENSTORE_RING_SIZE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Read indexes, then verify. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cons\">cons</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_cons\">req_cons</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prod\">prod</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_prod\">req_prod</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_indexes\">check_indexes</a>(<a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_cons\">req_cons</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_prod\">req_prod</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#dst\">dst</a> = <a class=\"id\" href=\"#get_output_chunk\">get_output_chunk</a>(<a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>, <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req\">req</a>, &amp;<a class=\"id\" href=\"#avail\">avail</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avail\">avail</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avail\">avail</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avail\">avail</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Must write data /after/ reading the consumer index. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb\">mb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#dst\">dst</a>, <a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#avail\">avail</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#avail\">avail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#avail\">avail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Other side must not see new producer until data is there. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#wmb\">wmb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_prod\">req_prod</a> += <a class=\"id\" href=\"#avail\">avail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Implies mb(): other side will see the updated producer. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#notify_remote_via_evtchn\">notify_remote_via_evtchn</a>(<a class=\"id\" href=\"#xen_store_evtchn\">xen_store_evtchn</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"int <a class=\"id\" href=\"#xb_data_to_read\">xb_data_to_read</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenstore_domain_interface\">xenstore_domain_interface</a> *<a class=\"id\" href=\"#intf\">intf</a> = <a class=\"id\" href=\"#xen_store_interface\">xen_store_interface</a>;", 
"<span class=\"ts\"/>return (<a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_cons\">rsp_cons</a> != <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_prod\">rsp_prod</a>);", 
"}", 
"", 
"int <a class=\"id\" href=\"#xb_wait_for_data_to_read\">xb_wait_for_data_to_read</a>(void)", 
"{", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#wait_event_interruptible\">wait_event_interruptible</a>(<a class=\"id\" href=\"#xb_waitq\">xb_waitq</a>, <a class=\"id\" href=\"#xb_data_to_read\">xb_data_to_read</a>());", 
"}", 
"", 
"int <a class=\"id\" href=\"#xb_read\">xb_read</a>(void *<a class=\"id\" href=\"#data\">data</a>, unsigned <a class=\"id\" href=\"#len\">len</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenstore_domain_interface\">xenstore_domain_interface</a> *<a class=\"id\" href=\"#intf\">intf</a> = <a class=\"id\" href=\"#xen_store_interface\">xen_store_interface</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#XENSTORE_RING_IDX\">XENSTORE_RING_IDX</a> <a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#len\">len</a> != 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/>unsigned int <a class=\"id\" href=\"#avail\">avail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>const char *<a class=\"id\" href=\"#src\">src</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rc\">rc</a> = <a class=\"id\" href=\"#xb_wait_for_data_to_read\">xb_wait_for_data_to_read</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#rc\">rc</a> &lt; 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#rc\">rc</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Read indexes, then verify. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#cons\">cons</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_cons\">rsp_cons</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#prod\">prod</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_prod\">rsp_prod</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#check_indexes\">check_indexes</a>(<a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_cons\">rsp_cons</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_prod\">rsp_prod</a> = 0;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return -<a class=\"id\" href=\"#EIO\">EIO</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#src\">src</a> = <a class=\"id\" href=\"#get_input_chunk\">get_input_chunk</a>(<a class=\"id\" href=\"#cons\">cons</a>, <a class=\"id\" href=\"#prod\">prod</a>, <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp\">rsp</a>, &amp;<a class=\"id\" href=\"#avail\">avail</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avail\">avail</a> == 0)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#avail\">avail</a> &gt; <a class=\"id\" href=\"#len\">len</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#avail\">avail</a> = <a class=\"id\" href=\"#len\">len</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Must read data /after/ reading the producer index. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rmb\">rmb</a>();", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#memcpy\">memcpy</a>(<a class=\"id\" href=\"#data\">data</a>, <a class=\"id\" href=\"#src\">src</a>, <a class=\"id\" href=\"#avail\">avail</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#data\">data</a> += <a class=\"id\" href=\"#avail\">avail</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#len\">len</a> -= <a class=\"id\" href=\"#avail\">avail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Other side must not see free space until we've copied out */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#mb\">mb</a>();", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_cons\">rsp_cons</a> += <a class=\"id\" href=\"#avail\">avail</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pr_debug\">pr_debug</a>(\"Finished read of %i bytes (%i to go)\\n\", <a class=\"id\" href=\"#avail\">avail</a>, <a class=\"id\" href=\"#len\">len</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Implies mb(): other side will see the updated consumer. */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#notify_remote_via_evtchn\">notify_remote_via_evtchn</a>(<a class=\"id\" href=\"#xen_store_evtchn\">xen_store_evtchn</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * xb_init_comms - Set up interrupt handler off store event channel.</span>", 
"<span class=\"comment\"> */</span>", 
"int <a class=\"id\" href=\"#xb_init_comms\">xb_init_comms</a>(void)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#xenstore_domain_interface\">xenstore_domain_interface</a> *<a class=\"id\" href=\"#intf\">intf</a> = <a class=\"id\" href=\"#xen_store_interface\">xen_store_interface</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_prod\">req_prod</a> != <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_cons\">req_cons</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"XENBUS request ring is not quiescent \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"(%08x:%08x)!\\n\", <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_cons\">req_cons</a>, <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#req_prod\">req_prod</a>);", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_prod\">rsp_prod</a> != <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_cons\">rsp_cons</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_WARNING\">KERN_WARNING</a> \"XENBUS response ring is not quiescent \"", 
"<span class=\"ts\"/><span class=\"ts\"/>       \"(%08x:%08x): fixing up\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_cons\">rsp_cons</a>, <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_prod\">rsp_prod</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_cons\">rsp_cons</a> = <a class=\"id\" href=\"#intf\">intf</a>-><a class=\"id\" href=\"#rsp_prod\">rsp_prod</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#xenbus_irq\">xenbus_irq</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Already have an irq; assume we're resuming */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#rebind_evtchn_irq\">rebind_evtchn_irq</a>(<a class=\"id\" href=\"#xen_store_evtchn\">xen_store_evtchn</a>, <a class=\"id\" href=\"#xenbus_irq\">xenbus_irq</a>);", 
"<span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/>int <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#err\">err</a> = <a class=\"id\" href=\"#bind_evtchn_to_irqhandler\">bind_evtchn_to_irqhandler</a>(<a class=\"id\" href=\"#xen_store_evtchn\">xen_store_evtchn</a>, <a class=\"id\" href=\"#wake_waiting\">wake_waiting</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>0, \"xenbus\", &amp;<a class=\"id\" href=\"#xb_waitq\">xb_waitq</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#err\">err</a> <= 0) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#printk\">printk</a>(<a class=\"id\" href=\"#KERN_ERR\">KERN_ERR</a> \"XENBUS request irq failed %i\\n\", <a class=\"id\" href=\"#err\">err</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>return <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#xenbus_irq\">xenbus_irq</a> = <a class=\"id\" href=\"#err\">err</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return 0;", 
"}", 
];
xr_frag_insert('l/49/bed8a56bbd2753dd896974256f26f97c440083.xr', __xr_tmp);
