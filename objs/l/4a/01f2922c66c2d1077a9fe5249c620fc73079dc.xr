var __xr_tmp = [
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte\">pte</a> = <a class=\"id\" href=\"#page_check_address\">page_check_address</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#address\">address</a>, &amp;<a class=\"id\" href=\"#ptl\">ptl</a>, 1);", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#pte\">pte</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#out\">out</a>;", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#pte_dirty\">pte_dirty</a>(*<a class=\"id\" href=\"#pte\">pte</a>) || <a class=\"id\" href=\"#pte_write\">pte_write</a>(*<a class=\"id\" href=\"#pte\">pte</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#pte_t\">pte_t</a> <a class=\"id\" href=\"#entry\">entry</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#flush_cache_page\">flush_cache_page</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#pte_pfn\">pte_pfn</a>(*<a class=\"id\" href=\"#pte\">pte</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#ptep_clear_flush_notify\">ptep_clear_flush_notify</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#pte\">pte</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#pte_wrprotect\">pte_wrprotect</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#entry\">entry</a> = <a class=\"id\" href=\"#pte_mkclean\">pte_mkclean</a>(<a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#set_pte_at\">set_pte_at</a>(<a class=\"id\" href=\"#mm\">mm</a>, <a class=\"id\" href=\"#address\">address</a>, <a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#entry\">entry</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pte_unmap_unlock\">pte_unmap_unlock</a>(<a class=\"id\" href=\"#pte\">pte</a>, <a class=\"id\" href=\"#ptl\">ptl</a>);", 
"<a class=\"id\" href=\"#out\">out</a>:", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"static int <a class=\"id\" href=\"#page_mkclean_file\">page_mkclean_file</a>(struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a>, struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#pgoff_t\">pgoff_t</a> <a class=\"id\" href=\"#pgoff\">pgoff</a> = <a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> << (<a class=\"id\" href=\"#PAGE_CACHE_SHIFT\">PAGE_CACHE_SHIFT</a> - <a class=\"id\" href=\"#PAGE_SHIFT\">PAGE_SHIFT</a>);", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#prio_tree_iter\">prio_tree_iter</a> <a class=\"id\" href=\"#iter\">iter</a>;", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(<a class=\"id\" href=\"#PageAnon\">PageAnon</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_lock\">spin_lock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#vma_prio_tree_foreach\">vma_prio_tree_foreach</a>(<a class=\"id\" href=\"#vma\">vma</a>, &amp;<a class=\"id\" href=\"#iter\">iter</a>, &amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap\">i_mmap</a>, <a class=\"id\" href=\"#pgoff\">pgoff</a>, <a class=\"id\" href=\"#pgoff\">pgoff</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#vm_flags\">vm_flags</a> &amp; <a class=\"id\" href=\"#VM_SHARED\">VM_SHARED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>unsigned long <a class=\"id\" href=\"#address\">address</a> = <a class=\"id\" href=\"#vma_address\">vma_address</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#vma\">vma</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#address\">address</a> == -<a class=\"id\" href=\"#EFAULT\">EFAULT</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>continue;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> += <a class=\"id\" href=\"#page_mkclean_one\">page_mkclean_one</a>(<a class=\"id\" href=\"#page\">page</a>, <a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#address\">address</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#spin_unlock\">spin_unlock</a>(&amp;<a class=\"id\" href=\"#mapping\">mapping</a>-><a class=\"id\" href=\"#i_mmap_lock\">i_mmap_lock</a>);", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"", 
"int <a class=\"id\" href=\"#page_mkclean\">page_mkclean</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>)", 
"{", 
"<span class=\"ts\"/>int <a class=\"id\" href=\"#ret\">ret</a> = 0;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#page_mapped\">page_mapped</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#address_space\">address_space</a> *<a class=\"id\" href=\"#mapping\">mapping</a> = <a class=\"id\" href=\"#page_mapping\">page_mapping</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#mapping\">mapping</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = <a class=\"id\" href=\"#page_mkclean_file\">page_mkclean_file</a>(<a class=\"id\" href=\"#mapping\">mapping</a>, <a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#page_test_dirty\">page_test_dirty</a>(<a class=\"id\" href=\"#page\">page</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#page_clear_dirty\">page_clear_dirty</a>(<a class=\"id\" href=\"#page\">page</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ret\">ret</a> = 1;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>return <a class=\"id\" href=\"#ret\">ret</a>;", 
"}", 
"<a class=\"id\" href=\"#EXPORT_SYMBOL_GPL\">EXPORT_SYMBOL_GPL</a>(<a class=\"id\" href=\"#page_mkclean\">page_mkclean</a>);", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * page_move_anon_rmap - move a page to our anon_vma</span>", 
"<span class=\"comment\"> * @page:<span class=\"ts\"/>the page to move to our anon_vma</span>", 
"<span class=\"comment\"> * @vma:<span class=\"ts\"/>the vma the page belongs to</span>", 
"<span class=\"comment\"> * @address:<span class=\"ts\"/>the user virtual address mapped</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * When a page belongs exclusively to one process after a COW event,</span>", 
"<span class=\"comment\"> * that page can be moved into the anon_vma that belongs to just that</span>", 
"<span class=\"comment\"> * process, so the rmap code will not search the parent or sibling</span>", 
"<span class=\"comment\"> * processes.</span>", 
"<span class=\"comment\"> */</span>", 
"void <a class=\"id\" href=\"#page_move_anon_rmap\">page_move_anon_rmap</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#anon_vma\">anon_vma</a> *<a class=\"id\" href=\"#anon_vma\">anon_vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#anon_vma\">anon_vma</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#PageLocked\">PageLocked</a>(<a class=\"id\" href=\"#page\">page</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(!<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"<span class=\"ts\"/><a class=\"id\" href=\"#VM_BUG_ON\">VM_BUG_ON</a>(<a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#index\">index</a> != <a class=\"id\" href=\"#linear_page_index\">linear_page_index</a>(<a class=\"id\" href=\"#vma\">vma</a>, <a class=\"id\" href=\"#address\">address</a>));", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#anon_vma\">anon_vma</a> = (void *) <a class=\"id\" href=\"#anon_vma\">anon_vma</a> + <a class=\"id\" href=\"#PAGE_MAPPING_ANON\">PAGE_MAPPING_ANON</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#page\">page</a>-><a class=\"id\" href=\"#mapping\">mapping</a> = (struct <a class=\"id\" href=\"#address_space\">address_space</a> *) <a class=\"id\" href=\"#anon_vma\">anon_vma</a>;", 
"}", 
"", 
"<span class=\"comment\">/**</span>", 
"<span class=\"comment\"> * __page_set_anon_rmap - setup new anonymous rmap</span>", 
"<span class=\"comment\"> * @page:<span class=\"ts\"/>the page to add the mapping to</span>", 
"<span class=\"comment\"> * @vma:<span class=\"ts\"/>the vm area in which the mapping is added</span>", 
"<span class=\"comment\"> * @address:<span class=\"ts\"/>the user virtual address mapped</span>", 
"<span class=\"comment\"> * @exclusive:<span class=\"ts\"/>the page is exclusively owned by the current process</span>", 
"<span class=\"comment\"> */</span>", 
"static void <a class=\"id\" href=\"#__page_set_anon_rmap\">__page_set_anon_rmap</a>(struct <a class=\"id\" href=\"#page\">page</a> *<a class=\"id\" href=\"#page\">page</a>,", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#vm_area_struct\">vm_area_struct</a> *<a class=\"id\" href=\"#vma\">vma</a>, unsigned long <a class=\"id\" href=\"#address\">address</a>, int <a class=\"id\" href=\"#exclusive\">exclusive</a>)", 
"{", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#anon_vma\">anon_vma</a> *<a class=\"id\" href=\"#anon_vma\">anon_vma</a> = <a class=\"id\" href=\"#vma\">vma</a>-><a class=\"id\" href=\"#anon_vma\">anon_vma</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#BUG_ON\">BUG_ON</a>(!<a class=\"id\" href=\"#anon_vma\">anon_vma</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * If the page isn't exclusively mapped into this vma,</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * we must use the _oldest_ possible anon_vma for the</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * page mapping!</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#exclusive\">exclusive</a>) {", 
];
xr_frag_insert('l/4a/01f2922c66c2d1077a9fe5249c620fc73079dc.xr', __xr_tmp);
