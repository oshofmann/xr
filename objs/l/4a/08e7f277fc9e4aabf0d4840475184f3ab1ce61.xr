var __xr_tmp = [
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: rsirq - IRQ resource descriptors</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acresrc.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_RESOURCES\">ACPI_RESOURCES</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"rsirq\")", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * acpi_rs_get_irq</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"struct <a class=\"id\" href=\"#acpi_rsconvert_info\">acpi_rsconvert_info</a> <a class=\"id\" href=\"#acpi_rs_get_irq\">acpi_rs_get_irq</a>[8] = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_INITGET\">ACPI_RSC_INITGET</a>, <a class=\"id\" href=\"#ACPI_RESOURCE_TYPE_IRQ\">ACPI_RESOURCE_TYPE_IRQ</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_SIZE\">ACPI_RS_SIZE</a>(struct <a class=\"id\" href=\"#acpi_resource_irq\">acpi_resource_irq</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RSC_TABLE_SIZE\">ACPI_RSC_TABLE_SIZE</a>(<a class=\"id\" href=\"#acpi_rs_get_irq\">acpi_rs_get_irq</a>)},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the IRQ mask (bytes 1:2) */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_BITMASK16\">ACPI_RSC_BITMASK16</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#interrupts\">interrupts</a>[0]),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#irq_mask\">irq_mask</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#interrupt_count\">interrupt_count</a>)},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set default flags (others are zero) */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_SET8\">ACPI_RSC_SET8</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#triggering\">triggering</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_EDGE_SENSITIVE\">ACPI_EDGE_SENSITIVE</a>,", 
"<span class=\"ts\"/> 1},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get the descriptor length (2 or 3 for IRQ descriptor) */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_2BITFLAG\">ACPI_RSC_2BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#descriptor_length\">descriptor_length</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#descriptor_type\">descriptor_type</a>),", 
"<span class=\"ts\"/> 0},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* All done if no flag byte present in descriptor */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_EXIT_NE\">ACPI_RSC_EXIT_NE</a>, <a class=\"id\" href=\"#ACPI_RSC_COMPARE_AML_LENGTH\">ACPI_RSC_COMPARE_AML_LENGTH</a>, 0, 3},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Get flags: Triggering[0], Polarity[3], Sharing[4] */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#triggering\">triggering</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 0},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#polarity\">polarity</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 3},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#sharable\">sharable</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 4}", 
"};", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * acpi_rs_set_irq</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"struct <a class=\"id\" href=\"#acpi_rsconvert_info\">acpi_rsconvert_info</a> <a class=\"id\" href=\"#acpi_rs_set_irq\">acpi_rs_set_irq</a>[13] = {", 
"<span class=\"ts\"/><span class=\"comment\">/* Start with a default descriptor of length 3 */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_INITSET\">ACPI_RSC_INITSET</a>, <a class=\"id\" href=\"#ACPI_RESOURCE_NAME_IRQ\">ACPI_RESOURCE_NAME_IRQ</a>,", 
"<span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#aml_resource_irq\">aml_resource_irq</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RSC_TABLE_SIZE\">ACPI_RSC_TABLE_SIZE</a>(<a class=\"id\" href=\"#acpi_rs_set_irq\">acpi_rs_set_irq</a>)},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert interrupt list to 16-bit IRQ bitmask */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_BITMASK16\">ACPI_RSC_BITMASK16</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#interrupts\">interrupts</a>[0]),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#irq_mask\">irq_mask</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#interrupt_count\">interrupt_count</a>)},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set the flags byte */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#triggering\">triggering</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 0},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#polarity\">polarity</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 3},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#sharable\">sharable</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 4},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All done if the output descriptor length is required to be 3</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * (i.e., optimization to 2 bytes cannot be attempted)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_EXIT_EQ\">ACPI_RSC_EXIT_EQ</a>, <a class=\"id\" href=\"#ACPI_RSC_COMPARE_VALUE\">ACPI_RSC_COMPARE_VALUE</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#descriptor_length\">descriptor_length</a>),", 
"<span class=\"ts\"/> 3},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Set length to 2 bytes (no flags byte) */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_LENGTH\">ACPI_RSC_LENGTH</a>, 0, 0, sizeof(struct <a class=\"id\" href=\"#aml_resource_irq_noflags\">aml_resource_irq_noflags</a>)},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * All done if the output descriptor length is required to be 2.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * TBD: Perhaps we should check for error if input flags are not</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * compatible with a 2-byte descriptor.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_EXIT_EQ\">ACPI_RSC_EXIT_EQ</a>, <a class=\"id\" href=\"#ACPI_RSC_COMPARE_VALUE\">ACPI_RSC_COMPARE_VALUE</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#descriptor_length\">descriptor_length</a>),", 
"<span class=\"ts\"/> 2},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Reset length to 3 bytes (descriptor with flags byte) */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_LENGTH\">ACPI_RSC_LENGTH</a>, 0, 0, sizeof(struct <a class=\"id\" href=\"#aml_resource_irq\">aml_resource_irq</a>)},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Check if the flags byte is necessary. Not needed if the flags are:</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * ACPI_EDGE_SENSITIVE, ACPI_ACTIVE_HIGH, ACPI_EXCLUSIVE</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_EXIT_NE\">ACPI_RSC_EXIT_NE</a>, <a class=\"id\" href=\"#ACPI_RSC_COMPARE_VALUE\">ACPI_RSC_COMPARE_VALUE</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#triggering\">triggering</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_EDGE_SENSITIVE\">ACPI_EDGE_SENSITIVE</a>},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_EXIT_NE\">ACPI_RSC_EXIT_NE</a>, <a class=\"id\" href=\"#ACPI_RSC_COMPARE_VALUE\">ACPI_RSC_COMPARE_VALUE</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#polarity\">polarity</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_ACTIVE_HIGH\">ACPI_ACTIVE_HIGH</a>},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_EXIT_NE\">ACPI_RSC_EXIT_NE</a>, <a class=\"id\" href=\"#ACPI_RSC_COMPARE_VALUE\">ACPI_RSC_COMPARE_VALUE</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#irq\">irq</a>.<a class=\"id\" href=\"#sharable\">sharable</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_EXCLUSIVE\">ACPI_EXCLUSIVE</a>},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* We can optimize to a 2-byte irq_no_flags() descriptor */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_LENGTH\">ACPI_RSC_LENGTH</a>, 0, 0, sizeof(struct <a class=\"id\" href=\"#aml_resource_irq_noflags\">aml_resource_irq_noflags</a>)}", 
"};", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * acpi_rs_convert_ext_irq</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"struct <a class=\"id\" href=\"#acpi_rsconvert_info\">acpi_rsconvert_info</a> <a class=\"id\" href=\"#acpi_rs_convert_ext_irq\">acpi_rs_convert_ext_irq</a>[9] = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_INITGET\">ACPI_RSC_INITGET</a>, <a class=\"id\" href=\"#ACPI_RESOURCE_TYPE_EXTENDED_IRQ\">ACPI_RESOURCE_TYPE_EXTENDED_IRQ</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_SIZE\">ACPI_RS_SIZE</a>(struct <a class=\"id\" href=\"#acpi_resource_extended_irq\">acpi_resource_extended_irq</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RSC_TABLE_SIZE\">ACPI_RSC_TABLE_SIZE</a>(<a class=\"id\" href=\"#acpi_rs_convert_ext_irq\">acpi_rs_convert_ext_irq</a>)},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_INITSET\">ACPI_RSC_INITSET</a>, <a class=\"id\" href=\"#ACPI_RESOURCE_NAME_EXTENDED_IRQ\">ACPI_RESOURCE_NAME_EXTENDED_IRQ</a>,", 
"<span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#aml_resource_extended_irq\">aml_resource_extended_irq</a>),", 
"<span class=\"ts\"/> 0},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Flag bits */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#producer_consumer\">producer_consumer</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 0},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#triggering\">triggering</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 1},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#polarity\">polarity</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 2},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#sharable\">sharable</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 3},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* IRQ Table length (Byte4) */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_COUNT\">ACPI_RSC_COUNT</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#interrupt_count\">interrupt_count</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#interrupt_count\">interrupt_count</a>),", 
"<span class=\"ts\"/> sizeof(<a class=\"id\" href=\"#u32\">u32</a>)}", 
"<span class=\"ts\"/>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Copy every IRQ in the table, each is 32 bits */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_MOVE32\">ACPI_RSC_MOVE32</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#interrupts\">interrupts</a>[0]),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#interrupts\">interrupts</a>[0]),", 
"<span class=\"ts\"/> 0}", 
"<span class=\"ts\"/>,", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Optional resource_source (Index and String) */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_SOURCEX\">ACPI_RSC_SOURCEX</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#resource_source\">resource_source</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#extended_irq\">extended_irq</a>.<a class=\"id\" href=\"#interrupts\">interrupts</a>[0]),", 
"<span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#aml_resource_extended_irq\">aml_resource_extended_irq</a>)}", 
"};", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * acpi_rs_convert_dma</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"struct <a class=\"id\" href=\"#acpi_rsconvert_info\">acpi_rsconvert_info</a> <a class=\"id\" href=\"#acpi_rs_convert_dma\">acpi_rs_convert_dma</a>[6] = {", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_INITGET\">ACPI_RSC_INITGET</a>, <a class=\"id\" href=\"#ACPI_RESOURCE_TYPE_DMA\">ACPI_RESOURCE_TYPE_DMA</a>,", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_SIZE\">ACPI_RS_SIZE</a>(struct <a class=\"id\" href=\"#acpi_resource_dma\">acpi_resource_dma</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RSC_TABLE_SIZE\">ACPI_RSC_TABLE_SIZE</a>(<a class=\"id\" href=\"#acpi_rs_convert_dma\">acpi_rs_convert_dma</a>)},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_INITSET\">ACPI_RSC_INITSET</a>, <a class=\"id\" href=\"#ACPI_RESOURCE_NAME_DMA\">ACPI_RESOURCE_NAME_DMA</a>,", 
"<span class=\"ts\"/> sizeof(struct <a class=\"id\" href=\"#aml_resource_dma\">aml_resource_dma</a>),", 
"<span class=\"ts\"/> 0},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Flags: transfer preference, bus mastering, channel speed */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_2BITFLAG\">ACPI_RSC_2BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#transfer\">transfer</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 0},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_1BITFLAG\">ACPI_RSC_1BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#bus_master\">bus_master</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 2},", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_2BITFLAG\">ACPI_RSC_2BITFLAG</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#type\">type</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#flags\">flags</a>),", 
"<span class=\"ts\"/> 5},", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* DMA channel mask bits */</span>", 
"", 
"<span class=\"ts\"/>{<a class=\"id\" href=\"#ACPI_RSC_BITMASK\">ACPI_RSC_BITMASK</a>, <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#channels\">channels</a>[0]),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#AML_OFFSET\">AML_OFFSET</a>(<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#dma_channel_mask\">dma_channel_mask</a>),", 
"<span class=\"ts\"/> <a class=\"id\" href=\"#ACPI_RS_OFFSET\">ACPI_RS_OFFSET</a>(<a class=\"id\" href=\"#data\">data</a>.<a class=\"id\" href=\"#dma\">dma</a>.<a class=\"id\" href=\"#channel_count\">channel_count</a>)}", 
"};", 
];
xr_frag_insert('l/4a/08e7f277fc9e4aabf0d4840475184f3ab1ce61.xr', __xr_tmp);
