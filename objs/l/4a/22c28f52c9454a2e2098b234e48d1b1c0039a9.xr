var __xr_tmp = [
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Only give sleepers 50% of their service deficit. This allows</span>", 
"<span class=\"comment\"> * them to run sooner, but does not allow tons of sleepers to</span>", 
"<span class=\"comment\"> * rip the spread apart.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#GENTLE_FAIR_SLEEPERS\">GENTLE_FAIR_SLEEPERS</a>, 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Place new tasks ahead so that they do not starve already running</span>", 
"<span class=\"comment\"> * tasks</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#START_DEBIT\">START_DEBIT</a>, 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Should wakeups try to preempt running tasks.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#WAKEUP_PREEMPT\">WAKEUP_PREEMPT</a>, 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Based on load and program behaviour, see if it makes sense to place</span>", 
"<span class=\"comment\"> * a newly woken task on the same cpu as the task that woke it --</span>", 
"<span class=\"comment\"> * improve cache locality. Typically used with SYNC wakeups as</span>", 
"<span class=\"comment\"> * generated by pipes and the like, see also SYNC_WAKEUPS.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#AFFINE_WAKEUPS\">AFFINE_WAKEUPS</a>, 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Prefer to schedule the task we woke last (assuming it failed</span>", 
"<span class=\"comment\"> * wakeup-preemption), since its likely going to consume data we</span>", 
"<span class=\"comment\"> * touched, increases cache locality.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#NEXT_BUDDY\">NEXT_BUDDY</a>, 0)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Prefer to schedule the task that ran last (when we did</span>", 
"<span class=\"comment\"> * wake-preempt) as that likely will touch the same data, increases</span>", 
"<span class=\"comment\"> * cache locality.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#LAST_BUDDY\">LAST_BUDDY</a>, 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Consider buddies to be cache hot, decreases the likelyness of a</span>", 
"<span class=\"comment\"> * cache buddy being migrated away, increases cache locality.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#CACHE_HOT_BUDDY\">CACHE_HOT_BUDDY</a>, 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Use arch dependent cpu power functions</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#ARCH_POWER\">ARCH_POWER</a>, 0)", 
"", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#HRTICK\">HRTICK</a>, 0)", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#DOUBLE_TICK\">DOUBLE_TICK</a>, 0)", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#LB_BIAS\">LB_BIAS</a>, 1)", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#LB_SHARES_UPDATE\">LB_SHARES_UPDATE</a>, 1)", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#ASYM_EFF_LOAD\">ASYM_EFF_LOAD</a>, 1)", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Spin-wait on mutex acquisition when the mutex owner is running on</span>", 
"<span class=\"comment\"> * another cpu -- assumes that when the owner is running, it will soon</span>", 
"<span class=\"comment\"> * release the lock. Decreases scheduling overhead.</span>", 
"<span class=\"comment\"> */</span>", 
"<a class=\"id\" href=\"#SCHED_FEAT\">SCHED_FEAT</a>(<a class=\"id\" href=\"#OWNER_SPIN\">OWNER_SPIN</a>, 1)", 
];
xr_frag_insert('l/4a/22c28f52c9454a2e2098b234e48d1b1c0039a9.xr', __xr_tmp);
