var __xr_tmp = [
"", 
"<span class=\"comment\">/******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Module Name: exresolv - AML Interpreter object resolution</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> *****************************************************************************/</span>", 
"", 
"<span class=\"comment\">/*</span>", 
"<span class=\"comment\"> * Copyright (C) 2000 - 2010, Intel Corp.</span>", 
"<span class=\"comment\"> * All rights reserved.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Redistribution and use in source and binary forms, with or without</span>", 
"<span class=\"comment\"> * modification, are permitted provided that the following conditions</span>", 
"<span class=\"comment\"> * are met:</span>", 
"<span class=\"comment\"> * 1. Redistributions of source code must retain the above copyright</span>", 
"<span class=\"comment\"> *    notice, this list of conditions, and the following disclaimer,</span>", 
"<span class=\"comment\"> *    without modification.</span>", 
"<span class=\"comment\"> * 2. Redistributions in binary form must reproduce at minimum a disclaimer</span>", 
"<span class=\"comment\"> *    substantially similar to the \"NO WARRANTY\" disclaimer below</span>", 
"<span class=\"comment\"> *    (\"Disclaimer\") and any redistribution must be conditioned upon</span>", 
"<span class=\"comment\"> *    including a substantially similar Disclaimer requirement for further</span>", 
"<span class=\"comment\"> *    binary redistribution.</span>", 
"<span class=\"comment\"> * 3. Neither the names of the above-listed copyright holders nor the names</span>", 
"<span class=\"comment\"> *    of any contributors may be used to endorse or promote products derived</span>", 
"<span class=\"comment\"> *    from this software without specific prior written permission.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * Alternatively, this software may be distributed under the terms of the</span>", 
"<span class=\"comment\"> * GNU General Public License (\"GPL\") version 2 as published by the Free</span>", 
"<span class=\"comment\"> * Software Foundation.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * NO WARRANTY</span>", 
"<span class=\"comment\"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>", 
"<span class=\"comment\"> * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>", 
"<span class=\"comment\"> * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR</span>", 
"<span class=\"comment\"> * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span>", 
"<span class=\"comment\"> * HOLDERS OR CONTRIBUTORS BE LIABLE FOR SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span>", 
"<span class=\"comment\"> * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS</span>", 
"<span class=\"comment\"> * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)</span>", 
"<span class=\"comment\"> * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,</span>", 
"<span class=\"comment\"> * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING</span>", 
"<span class=\"comment\"> * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>", 
"<span class=\"comment\"> * POSSIBILITY OF SUCH DAMAGES.</span>", 
"<span class=\"comment\"> */</span>", 
"", 
"#<a class=\"id\" href=\"#include\">include</a> &lt;<a class=\"id\" href=\"#acpi\">acpi</a>/<a class=\"id\" href=\"#acpi\">acpi</a>.<a class=\"id\" href=\"#h\">h</a>&gt;", 
"#<a class=\"id\" href=\"#include\">include</a> \"accommon.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"amlcode.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acdispat.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acinterp.h\"", 
"#<a class=\"id\" href=\"#include\">include</a> \"acnamesp.h\"", 
"", 
"#<a class=\"id\" href=\"#define\">define</a> <a class=\"id\" href=\"#_COMPONENT\">_COMPONENT</a>          <a class=\"id\" href=\"#ACPI_EXECUTER\">ACPI_EXECUTER</a>", 
"<a class=\"id\" href=\"#ACPI_MODULE_NAME\">ACPI_MODULE_NAME</a>(\"exresolv\")", 
"", 
"<span class=\"comment\">/* Local prototypes */</span>", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_resolve_object_to_value\">acpi_ex_resolve_object_to_value</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_resolve_to_value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  **stack_ptr         - Points to entry on obj_stack, which can</span>", 
"<span class=\"comment\"> *                                    be either an (union acpi_operand_object *)</span>", 
"<span class=\"comment\"> *                                    or an acpi_handle.</span>", 
"<span class=\"comment\"> *              walk_state          - Current method state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Convert Reference objects to values</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_resolve_to_value\">acpi_ex_resolve_to_value</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE_PTR\">ACPI_FUNCTION_TRACE_PTR</a>(<a class=\"id\" href=\"#ex_resolve_to_value\">ex_resolve_to_value</a>, <a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>);", 
"", 
"<span class=\"ts\"/>if (!<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a> || !*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Internal - null pointer\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_NO_OPERAND\">AE_AML_NO_OPERAND</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * The entity pointed to by the stack_ptr can be either</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 1) A valid union acpi_operand_object, or</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * 2) A struct acpi_namespace_node (named_obj)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>) == <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ex_resolve_object_to_value\">acpi_ex_resolve_object_to_value</a>(<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>, <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (!*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>, \"Internal - null pointer\"));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_NO_OPERAND\">AE_AML_NO_OPERAND</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Object on the stack may have changed if acpi_ex_resolve_object_to_value()</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * was called (i.e., we can't use an _else_ here.)</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>) == <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_resolve_node_to_value\">acpi_ex_resolve_node_to_value</a>(<a class=\"id\" href=\"#ACPI_CAST_INDIRECT_PTR\">ACPI_CAST_INDIRECT_PTR</a>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  (struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>   <a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>), <a class=\"id\" href=\"#walk_state\">walk_state</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>, \"Resolved object %p\\n\", *<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>));", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_resolve_object_to_value</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  stack_ptr       - Pointer to an internal object</span>", 
"<span class=\"comment\"> *              walk_state      - Current method state</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Retrieve the value from an internal object. The Reference type</span>", 
"<span class=\"comment\"> *              uses the associated AML opcode to determine the value.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"static <a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_resolve_object_to_value\">acpi_ex_resolve_object_to_value</a>(union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>)", 
"{", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_OK\">AE_OK</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#stack_desc\">stack_desc</a>;", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#NULL\">NULL</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#u8\">u8</a> <a class=\"id\" href=\"#ref_type\">ref_type</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#ex_resolve_object_to_value\">ex_resolve_object_to_value</a>);", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#stack_desc\">stack_desc</a> = *<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>;", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* This is a union acpi_operand_object    */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ref_type\">ref_type</a> = <a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#ref_type\">ref_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_LOCAL\">ACPI_REFCLASS_LOCAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_ARG\">ACPI_REFCLASS_ARG</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Get the local from the method's state info</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Note: this increments the local's object reference count</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_method_data_get_value\">acpi_ds_method_data_get_value</a>(<a class=\"id\" href=\"#ref_type\">ref_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#stack_desc\">stack_desc</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>       &amp;<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"[Arg/Local %X] ValueObj is %p\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Now we can delete the original Reference Object and</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * replace it with the resolved value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#stack_desc\">stack_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_INDEX\">ACPI_REFCLASS_INDEX</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#target_type\">target_type</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Just return - do not dereference */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If method call or copy_object - do not dereference */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#opcode\">opcode</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#AML_INT_METHODCALL_OP\">AML_INT_METHODCALL_OP</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    || (<a class=\"id\" href=\"#walk_state\">walk_state</a>-><a class=\"id\" href=\"#opcode\">opcode</a> == <a class=\"id\" href=\"#AML_COPY_OP\">AML_COPY_OP</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Otherwise, dereference the package_index to a package element */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = *<a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#where\">where</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Valid object descriptor, copy pointer to return value</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * (i.e., dereference the package index)</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * Delete the ref object, increment the returned object</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#stack_desc\">stack_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * A NULL object descriptor means an uninitialized element of</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the package, can't dereference it</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Attempt to dereference an Index to NULL package element Idx=%p\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#stack_desc\">stack_desc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_AML_UNINITIALIZED_ELEMENT\">AE_AML_UNINITIALIZED_ELEMENT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Invalid reference object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Unknown TargetType 0x%X in Index/Reference object %p\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#target_type\">target_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#stack_desc\">stack_desc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_REFOF\">ACPI_REFCLASS_REFOF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_DEBUG\">ACPI_REFCLASS_DEBUG</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_TABLE\">ACPI_REFCLASS_TABLE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Just leave the object as-is, do not dereference */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_NAME\">ACPI_REFCLASS_NAME</a>:<span class=\"ts\"/><span class=\"comment\">/* Reference to a named object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Dereference the name */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if ((<a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#type\">type</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>     <a class=\"id\" href=\"#ACPI_TYPE_DEVICE\">ACPI_TYPE_DEVICE</a>)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    || (<a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#node\">node</a>-><a class=\"id\" href=\"#type\">type</a> ==", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_TYPE_THERMAL\">ACPI_TYPE_THERMAL</a>)) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* These node types do not have 'real' subobjects */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a> = (void *)<a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the object pointed to by the namespace node */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    (<a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#node\">node</a>)-><a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_add_reference\">acpi_ut_add_reference</a>(*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#stack_desc\">stack_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Unknown Reference type 0x%X in %p\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ref_type\">ref_type</a>, <a class=\"id\" href=\"#stack_desc\">stack_desc</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER\">ACPI_TYPE_BUFFER</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_get_buffer_arguments\">acpi_ds_get_buffer_arguments</a>(<a class=\"id\" href=\"#stack_desc\">stack_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> = <a class=\"id\" href=\"#acpi_ds_get_package_arguments\">acpi_ds_get_package_arguments</a>(<a class=\"id\" href=\"#stack_desc\">stack_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_BUFFER_FIELD\">ACPI_TYPE_BUFFER_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REGION_FIELD\">ACPI_TYPE_LOCAL_REGION_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_DEBUG_PRINT\">ACPI_DEBUG_PRINT</a>((<a class=\"id\" href=\"#ACPI_DB_EXEC\">ACPI_DB_EXEC</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  \"FieldRead SourceDesc=%p Type=%X\\n\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#stack_desc\">stack_desc</a>, <a class=\"id\" href=\"#stack_desc\">stack_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>));", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ex_read_data_from_field\">acpi_ex_read_data_from_field</a>(<a class=\"id\" href=\"#walk_state\">walk_state</a>, <a class=\"id\" href=\"#stack_desc\">stack_desc</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Remove a reference to the original operand, then override */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#stack_ptr\">stack_ptr</a> = (void *)<a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"}", 
"", 
"<span class=\"comment\">/*******************************************************************************</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * FUNCTION:    acpi_ex_resolve_multiple</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * PARAMETERS:  walk_state          - Current state (contains AML opcode)</span>", 
"<span class=\"comment\"> *              Operand             - Starting point for resolution</span>", 
"<span class=\"comment\"> *              return_type         - Where the object type is returned</span>", 
"<span class=\"comment\"> *              return_desc         - Where the resolved object is returned</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * RETURN:      Status</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> * DESCRIPTION: Return the base object and type.  Traverse a reference list if</span>", 
"<span class=\"comment\"> *              necessary to get to the base object.</span>", 
"<span class=\"comment\"> *</span>", 
"<span class=\"comment\"> ******************************************************************************/</span>", 
"", 
"<a class=\"id\" href=\"#acpi_status\">acpi_status</a>", 
"<a class=\"id\" href=\"#acpi_ex_resolve_multiple\">acpi_ex_resolve_multiple</a>(struct <a class=\"id\" href=\"#acpi_walk_state\">acpi_walk_state</a> *<a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#operand\">operand</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#acpi_object_type\">acpi_object_type</a> * <a class=\"id\" href=\"#return_type\">return_type</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> **<a class=\"id\" href=\"#return_desc\">return_desc</a>)", 
"{", 
"<span class=\"ts\"/>union <a class=\"id\" href=\"#acpi_operand_object\">acpi_operand_object</a> *<a class=\"id\" href=\"#obj_desc\">obj_desc</a> = (void *)<a class=\"id\" href=\"#operand\">operand</a>;", 
"<span class=\"ts\"/>struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_object_type\">acpi_object_type</a> <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><a class=\"id\" href=\"#acpi_status\">acpi_status</a> <a class=\"id\" href=\"#status\">status</a>;", 
"", 
"<span class=\"ts\"/><a class=\"id\" href=\"#ACPI_FUNCTION_TRACE\">ACPI_FUNCTION_TRACE</a>(<a class=\"id\" href=\"#acpi_ex_resolve_multiple\">acpi_ex_resolve_multiple</a>);", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* Operand can be either a namespace node or an operand descriptor */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>)) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_DESC_TYPE_OPERAND\">ACPI_DESC_TYPE_OPERAND</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = ((struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *)<a class=\"id\" href=\"#obj_desc\">obj_desc</a>)-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>((struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* If we had an Alias node, use the attached object for type info */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_ALIAS\">ACPI_TYPE_LOCAL_ALIAS</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = ((struct <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *)<a class=\"id\" href=\"#obj_desc\">obj_desc</a>)-><a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>((struct", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#acpi_namespace_node\">acpi_namespace_node</a> *)", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_OPERAND_TYPE\">AE_AML_OPERAND_TYPE</a>);", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/* If type is anything other than a reference, we are done */</span>", 
"", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * For reference objects created via the ref_of, Index, or Load/load_table</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * operators, we need to get to the base object (as per the ACPI</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * specification of the object_type and size_of operators). This means</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * traversing the list of possibly many nested references.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/>while (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a> == <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REFERENCE\">ACPI_TYPE_LOCAL_REFERENCE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>switch (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_REFOF\">ACPI_REFCLASS_REFOF</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_NAME\">ACPI_REFCLASS_NAME</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Dereference the reference pointer */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a> == <a class=\"id\" href=\"#ACPI_REFCLASS_REFOF\">ACPI_REFCLASS_REFOF</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#object\">object</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {<span class=\"ts\"/><span class=\"comment\">/* AML_INT_NAMEPATH_OP */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#node\">node</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#node\">node</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* All \"References\" point to a NS node */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_GET_DESCRIPTOR_TYPE\">ACPI_GET_DESCRIPTOR_TYPE</a>(<a class=\"id\" href=\"#node\">node</a>) !=", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#ACPI_DESC_TYPE_NAMED\">ACPI_DESC_TYPE_NAMED</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Not a namespace node %p [%s]\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#node\">node</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ut_get_descriptor_name\">acpi_ut_get_descriptor_name</a>(<a class=\"id\" href=\"#node\">node</a>)));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the attached object */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No object, use the NS node type */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#acpi_ns_get_type\">acpi_ns_get_type</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Check for circular references */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#obj_desc\">obj_desc</a> == <a class=\"id\" href=\"#operand\">operand</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_CIRCULAR_REFERENCE\">AE_AML_CIRCULAR_REFERENCE</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_INDEX\">ACPI_REFCLASS_INDEX</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Get the type of this reference (index into another object) */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#target_type\">target_type</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#type\">type</a> != <a class=\"id\" href=\"#ACPI_TYPE_PACKAGE\">ACPI_TYPE_PACKAGE</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * The main object is a package, we want to get the type</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * of the individual package element that is referenced by</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * the index.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> *</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> * This could of course in turn be another reference object.</span>", 
"<span class=\"comment\"><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = *(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#where\">where</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* NULL package elements are allowed */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = 0;<span class=\"ts\"/><span class=\"comment\">/* Uninitialized */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_TABLE\">ACPI_REFCLASS_TABLE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_DDB_HANDLE\">ACPI_TYPE_DDB_HANDLE</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_LOCAL\">ACPI_REFCLASS_LOCAL</a>:", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_ARG\">ACPI_REFCLASS_ARG</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#return_desc\">return_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ds_method_data_get_value\">acpi_ds_method_data_get_value</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#reference\">reference</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#obj_desc\">obj_desc</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#reference\">reference</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>  &amp;<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#acpi_ut_remove_reference\">acpi_ut_remove_reference</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>} else {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#status\">status</a> =", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#acpi_ds_method_data_get_node\">acpi_ds_method_data_get_node</a>(<a class=\"id\" href=\"#obj_desc\">obj_desc</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#reference\">reference</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#class\">class</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#obj_desc\">obj_desc</a>->", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#reference\">reference</a>.", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#value\">value</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> <a class=\"id\" href=\"#walk_state\">walk_state</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/> &amp;<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (<a class=\"id\" href=\"#ACPI_FAILURE\">ACPI_FAILURE</a>(<a class=\"id\" href=\"#status\">status</a>)) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#status\">status</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#obj_desc\">obj_desc</a> = <a class=\"id\" href=\"#acpi_ns_get_attached_object\">acpi_ns_get_attached_object</a>(<a class=\"id\" href=\"#node\">node</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>if (!<a class=\"id\" href=\"#obj_desc\">obj_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_ANY\">ACPI_TYPE_ANY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_REFCLASS_DEBUG\">ACPI_REFCLASS_DEBUG</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* The Debug Object is of type \"DebugObject\" */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_DEBUG_OBJECT\">ACPI_TYPE_DEBUG_OBJECT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>goto <a class=\"id\" href=\"#exit\">exit</a>;", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/>default:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#ACPI_ERROR\">ACPI_ERROR</a>((<a class=\"id\" href=\"#AE_INFO\">AE_INFO</a>,", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    \"Unknown Reference Class 0x%2.2X\",", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/>    <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#reference\">reference</a>.<a class=\"id\" href=\"#class\">class</a>));", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_AML_INTERNAL\">AE_AML_INTERNAL</a>);", 
"<span class=\"ts\"/><span class=\"ts\"/>}", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/><span class=\"comment\">/*</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * Now we are guaranteed to have an object that has not been created</span>", 
"<span class=\"comment\"><span class=\"ts\"/> * via the ref_of or Index operators.</span>", 
"<span class=\"comment\"><span class=\"ts\"/> */</span>", 
"<span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>-><a class=\"id\" href=\"#common\">common</a>.<a class=\"id\" href=\"#type\">type</a>;", 
"", 
"      <a class=\"id\" href=\"#exit\">exit</a>:", 
"<span class=\"ts\"/><span class=\"comment\">/* Convert internal types to external types */</span>", 
"", 
"<span class=\"ts\"/>switch (<a class=\"id\" href=\"#type\">type</a>) {", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_REGION_FIELD\">ACPI_TYPE_LOCAL_REGION_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_BANK_FIELD\">ACPI_TYPE_LOCAL_BANK_FIELD</a>:", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_INDEX_FIELD\">ACPI_TYPE_LOCAL_INDEX_FIELD</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_FIELD_UNIT\">ACPI_TYPE_FIELD_UNIT</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>case <a class=\"id\" href=\"#ACPI_TYPE_LOCAL_SCOPE\">ACPI_TYPE_LOCAL_SCOPE</a>:", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* Per ACPI Specification, Scope is untyped */</span>", 
"", 
"<span class=\"ts\"/><span class=\"ts\"/><a class=\"id\" href=\"#type\">type</a> = <a class=\"id\" href=\"#ACPI_TYPE_ANY\">ACPI_TYPE_ANY</a>;", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"", 
"<span class=\"ts\"/>default:", 
"<span class=\"ts\"/><span class=\"ts\"/><span class=\"comment\">/* No change to Type required */</span>", 
"<span class=\"ts\"/><span class=\"ts\"/>break;", 
"<span class=\"ts\"/>}", 
"", 
"<span class=\"ts\"/>*<a class=\"id\" href=\"#return_type\">return_type</a> = <a class=\"id\" href=\"#type\">type</a>;", 
"<span class=\"ts\"/>if (<a class=\"id\" href=\"#return_desc\">return_desc</a>) {", 
"<span class=\"ts\"/><span class=\"ts\"/>*<a class=\"id\" href=\"#return_desc\">return_desc</a> = <a class=\"id\" href=\"#obj_desc\">obj_desc</a>;", 
"<span class=\"ts\"/>}", 
"<span class=\"ts\"/><a class=\"id\" href=\"#return_ACPI_STATUS\">return_ACPI_STATUS</a>(<a class=\"id\" href=\"#AE_OK\">AE_OK</a>);", 
"}", 
];
xr_frag_insert('l/4a/25bf5d30190184f3ebd303ded2cce8b47cda6b.xr', __xr_tmp);
